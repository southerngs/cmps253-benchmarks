[[[ LLVM Simple IR: _X_Array#[]@1 ]]]

define %"struct.rubinius::Object"* @"_X_Array#[]@1"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !9
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !9
  %counter2 = alloca i32, !dbg !9
  %valid_flag = alloca i1, !dbg !9
  %cfstk = alloca %"struct.rubinius::Object"*, i32 22, !dbg !9
  %var_mem = alloca %"struct.rubinius::Object"*, i32 11, !dbg !9
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !9
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, !dbg !9
  %arg_cmp = icmp slt i32 %arg.total, 1, !dbg !9
  %arg_cmp1 = icmp sgt i32 %arg.total, 2, !dbg !9
  %arg_combine = or i1 %arg_cmp, %arg_cmp1, !dbg !9
  br i1 %arg_combine, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !9
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !9
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !9
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !9
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !9
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !9
  store i8* null, i8** %3, !dbg !9
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !9
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !9
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !9
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !9
  store i32 40, i32* %5, !dbg !9
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  store i32 0, i32* %6, !dbg !9
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !9
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !9
  store i8* inttoptr (i64 140495695120624 to i8*), i8** %8, !dbg !9
  store i32 0, i32* %counter_alloca, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !9
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !9
  %added = add i32 %counter, 1, !dbg !9
  store i32 %added, i32* %counter_alloca, !dbg !9
  %loop_check = icmp eq i32 %added, 13, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !9
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !9, !rbx-classid !10
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !9
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !9
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !9
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !9
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !9
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !9
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !9
  %local_pos2 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2, !dbg !9
  %local_pos3 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos3, !dbg !9
  %local_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos4, !dbg !9
  %local_pos5 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos5, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !9
  store i32 0, i32* %counter_alloca, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %loop_val = load i32* %counter_alloca, !dbg !9
  %loop_test = icmp slt i32 %loop_val, %arg.total, !dbg !9
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !9

arg_loop_body:                                    ; preds = %arg_loop_top
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %loop_val, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !9
  %add = add i32 %loop_val, 1, !dbg !9
  store i32 %add, i32* %counter_alloca, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_cont:                                    ; preds = %arg_loop_top
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !11
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !11
  %stack_limit = load i64* %18, !dbg !11
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !11
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !11
  %check_interrupts = load i8* %20, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !11
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %19, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %ip451, %continue1615, %use_call1614, %use_call1589, %is_exception1530, %ip386, %continue1468, %use_call1467, %use_call1375, %ip345, %ip334, %continue1279, %use_call1278, %use_call1202, %continue1164, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %continue1020, %continue1000, %use_call999, %ip219, %ip205, %ip195, %ip183, %continue869, %continue849, %use_call848, %ip158, %continue789, %use_call788, %ip139, %continue725, %use_call724, %use_call700, %is_exception, %class_fallback574, %class_fallback533, %continue547, %class_fallback492, %ip538, %class_fallback427, %class_fallback383, %class_fallback342, %ip492, %ip483, %class_fallback260, %class_fallback216, %continue183, %use_call182, %use_call132, %class_fallback78, %class_fallback51, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !9
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack_pos6, !dbg !9
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  %stack_load = load %"struct.rubinius::Object"** %stack_pos7, !dbg !9
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !9
  %and = and i64 %as_int, 15, !dbg !9
  %is_true = icmp ne i64 %and, 10, !dbg !9
  br i1 %is_true, label %ip8, label %continue, !dbg !9

continue:                                         ; preds = %method_body
  br label %ip4, !dbg !9

ip4:                                              ; preds = %continue
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos8, !dbg !9
  %local_pos9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  %stack_load11 = load %"struct.rubinius::Object"** %stack_pos10, !dbg !9, !rbx-classid !12
  store %"struct.rubinius::Object"* %stack_load11, %"struct.rubinius::Object"** %local_pos9, !dbg !9
  br label %ip8, !dbg !9

ip8:                                              ; preds = %ip4, %method_body
  %local_pos12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !13
  %local = load %"struct.rubinius::Object"** %local_pos12, !dbg !13, !rbx-classid !14
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !13
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos13, !dbg !13
  %stack_pos14 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !15
  %stack_load15 = load %"struct.rubinius::Object"** %stack_pos14, !dbg !15, !rbx-classid !14
  %stack_pos16 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %stack_load15, %"struct.rubinius::Object"** %stack_pos16, !dbg !15
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), !dbg !15
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**), !dbg !15
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !15
  %constant_scope17 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !15
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !15
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !15
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope17, %frame_scope, !dbg !15
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !15

check_serial:                                     ; preds = %ip8
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !15
  %serial = load i32* %serial_pos, !dbg !15
  %use_cache19 = icmp eq i32 %global_serial, %serial, !dbg !15
  br i1 %use_cache19, label %use_cache, label %use_call, !dbg !15

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !15
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !15
  br label %continue18, !dbg !15

use_call:                                         ; preds = %check_serial, %ip8
  store i32 11, i32* %ip_pos, !dbg !15
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !15
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !15
  br i1 %null_check, label %bail_out, label %check_active, !dbg !15

continue18:                                       ; preds = %continue20, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue20 ], !dbg !15, !rbx-classid !16
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos21, !dbg !15
  %stack_pos22 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load23 = load %"struct.rubinius::Object"** %stack_pos22, !dbg !15, !rbx-classid !16
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !15, !rbx-classid !14
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %stack_load23, %"struct.rubinius::Object"** %stack_pos26, !dbg !15
  %stack_pos27 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  store %"struct.rubinius::Object"* %stack_load25, %"struct.rubinius::Object"** %stack_pos27, !dbg !15
  %stack_pos29 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load30 = load %"struct.rubinius::Object"** %stack_pos29, !dbg !15, !rbx-classid !14
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !15, !rbx-classid !14
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load32 to i64, !dbg !15
  %masked = and i64 %cast, 1, !dbg !15
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !15
  %is_fixnum33 = select i1 %is_fixnum, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !15
  %stack_pos34 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %is_fixnum33, %"struct.rubinius::Object"** %stack_pos34, !dbg !15
  br label %continue28, !dbg !15

continue20:                                       ; preds = %check_active
  br label %continue18, !dbg !15

check_active:                                     ; preds = %use_call
  br label %continue20, !dbg !15

class_fallback:                                   ; No predecessors!
  store i32 14, i32* %ip_pos, !dbg !15
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 0), !dbg !15
  br label %return_pad, !dbg !15

serial_fallback:                                  ; No predecessors!
  store i32 14, i32* %ip_pos, !dbg !15
  %22 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !15
  br label %return_pad, !dbg !15

continue28:                                       ; preds = %continue18
  %stack_pos35 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  %stack_load36 = load %"struct.rubinius::Object"** %stack_pos35, !dbg !15
  %as_int37 = ptrtoint %"struct.rubinius::Object"* %stack_load36 to i64, !dbg !15
  %and38 = and i64 %as_int37, 15, !dbg !15
  %is_true39 = icmp eq i64 %and38, 10, !dbg !15
  br i1 %is_true39, label %ip149, label %continue40, !dbg !15

continue40:                                       ; preds = %continue28
  br label %ip19, !dbg !15

ip19:                                             ; preds = %continue40
  %local_pos41 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  %local42 = load %"struct.rubinius::Object"** %local_pos41, !dbg !17, !rbx-classid !14
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %local42, %"struct.rubinius::Object"** %stack_pos43, !dbg !17
  %local_pos44 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !17
  %stack_pos45 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !17
  %stack_load46 = load %"struct.rubinius::Object"** %stack_pos45, !dbg !17, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load46, %"struct.rubinius::Object"** %local_pos44, !dbg !17
  %local_pos47 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %local48 = load %"struct.rubinius::Object"** %local_pos47, !dbg !18, !rbx-classid !19
  %stack_pos49 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %local48, %"struct.rubinius::Object"** %stack_pos49, !dbg !18
  %stack_pos50 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos50, !dbg !18
  %stack_pos54 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load55 = load %"struct.rubinius::Object"** %stack_pos54, !dbg !18, !rbx-classid !19
  %cast56 = ptrtoint %"struct.rubinius::Object"* %stack_load55 to i64, !dbg !18
  %stack_pos57 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  %stack_load58 = load %"struct.rubinius::Object"** %stack_pos57, !dbg !18, !rbx-classid !20
  %cast59 = ptrtoint %"struct.rubinius::Object"* %stack_load58 to i64, !dbg !18
  %fixnums_anded = and i64 %cast56, %cast59
  %masked60 = and i64 %fixnums_anded, 1
  %is_fixnum61 = icmp eq i64 %masked60, 1, !dbg !18
  br i1 %is_fixnum61, label %push_le, label %class_fallback51, !dbg !18

class_fallback51:                                 ; preds = %ip19
  %stack_pos62 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load63 = load %"struct.rubinius::Object"** %stack_pos62, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load63, %"struct.rubinius::Object"** %out_args_recv, !dbg !18
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !18
  store i32 1, i32* %out_args_total, !dbg !18
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !18
  %stack_pos64 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"** %stack_pos64, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !18
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 24564280 to %"struct.rubinius::CallSite"**), !dbg !18
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !18
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !18
  store i32 28, i32* %ip_pos, !dbg !18
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !18
  %null_check66 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !18
  br i1 %null_check66, label %bail_out, label %check_active65, !dbg !18

serial_fallback52:                                ; No predecessors!
  store i32 28, i32* %ip_pos, !dbg !18
  %23 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 28, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !18
  br label %return_pad, !dbg !18

continue53:                                       ; preds = %check_active65, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %24, %push_le ], [ %call_site_execute, %check_active65 ], !dbg !18
  %stack_pos67 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos67, !dbg !18
  %stack_pos68 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load69 = load %"struct.rubinius::Object"** %stack_pos68, !dbg !18
  %as_int70 = ptrtoint %"struct.rubinius::Object"* %stack_load69 to i64, !dbg !18
  %and71 = and i64 %as_int70, 15, !dbg !18
  %is_true72 = icmp eq i64 %and71, 10, !dbg !18
  br i1 %is_true72, label %ip44, label %continue73, !dbg !18

push_le:                                          ; preds = %ip19
  %fixnum.lt = icmp slt i64 %cast56, %cast59, !dbg !18
  %24 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !18
  br label %continue53, !dbg !18

check_active65:                                   ; preds = %class_fallback51
  br label %continue53, !dbg !18

continue73:                                       ; preds = %continue53
  br label %ip33, !dbg !18

ip33:                                             ; preds = %continue73
  %local_pos74 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %local75 = load %"struct.rubinius::Object"** %local_pos74, !dbg !18, !rbx-classid !19
  %stack_pos76 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %stack_pos76, !dbg !18
  %self_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !18
  %self = load %"struct.rubinius::Object"** %self_pos, !dbg !18
  %obj_array = bitcast %"struct.rubinius::Object"* %self to %"struct.rubinius::Object"**, !dbg !18
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !18
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !18
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos77, !dbg !18
  %stack_pos81 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load82 = load %"struct.rubinius::Object"** %stack_pos81, !dbg !18, !rbx-classid !19
  %stack_pos83 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  %stack_load84 = load %"struct.rubinius::Object"** %stack_pos83, !dbg !18
  %cast85 = ptrtoint %"struct.rubinius::Object"* %stack_load82 to i64, !dbg !18
  %cast86 = ptrtoint %"struct.rubinius::Object"* %stack_load84 to i64, !dbg !18
  %fixnums_anded87 = and i64 %cast85, %cast86, !dbg !18
  %masked88 = and i64 %fixnums_anded87, 1, !dbg !18
  %is_fixnum89 = icmp eq i64 %masked88, 1, !dbg !18
  br i1 %is_fixnum89, label %push_add, label %class_fallback78, !dbg !18

class_fallback78:                                 ; preds = %ip33
  %stack_pos93 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load94 = load %"struct.rubinius::Object"** %stack_pos93, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load94, %"struct.rubinius::Object"** %out_args_recv, !dbg !18
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !18
  store i32 1, i32* %out_args_total, !dbg !18
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !18
  %stack_pos95 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"** %stack_pos95, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !18
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564352 to %"struct.rubinius::CallSite"**), !dbg !18
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i32 0, i32 2, !dbg !18
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, !dbg !18
  store i32 37, i32* %ip_pos, !dbg !18
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !18
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !18
  br i1 %null_check101, label %bail_out, label %check_active100, !dbg !18

serial_fallback79:                                ; No predecessors!
  store i32 37, i32* %ip_pos, !dbg !18
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 37, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !18
  br label %return_pad, !dbg !18

continue80:                                       ; preds = %check_active100, %cont
  %send_result102 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute99, %check_active100 ], !dbg !18
  %stack_pos103 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack_pos103, !dbg !18
  %local_pos104 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %stack_pos105 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load106 = load %"struct.rubinius::Object"** %stack_pos105, !dbg !18
  store %"struct.rubinius::Object"* %stack_load106, %"struct.rubinius::Object"** %local_pos104, !dbg !18
  br label %ip45, !dbg !18

push_add:                                         ; preds = %ip33
  %as_int90 = ptrtoint %"struct.rubinius::Object"* %stack_load82 to i64, !dbg !18
  %ashr = ashr i64 %as_int90, 1, !dbg !18
  %as_int91 = ptrtoint %"struct.rubinius::Object"* %stack_load84 to i64, !dbg !18
  %ashr92 = ashr i64 %as_int91, 1, !dbg !18
  %fixnum.add = add i64 %ashr, %ashr92, !dbg !18
  %26 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !18
  %27 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !18
  %fits_fixnum = and i1 %26, %27, !dbg !18
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !18

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !18
  %or = or i64 %shl, 1, !dbg !18
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !18
  br label %cont, !dbg !18

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !18
  br label %cont, !dbg !18

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !18
  br label %continue80, !dbg !18

check_active100:                                  ; preds = %class_fallback78
  br label %continue80, !dbg !18

continue107:                                      ; No predecessors!
  br label %ip44, !dbg !18

ip45:                                             ; preds = %ip44, %continue80
  %local_pos108 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !21
  %local109 = load %"struct.rubinius::Object"** %local_pos108, !dbg !21, !rbx-classid !22
  %stack_pos110 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos110, !dbg !21
  %stack_pos111 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load112 = load %"struct.rubinius::Object"** %stack_pos111, !dbg !21, !rbx-classid !22
  %as_int113 = ptrtoint %"struct.rubinius::Object"* %stack_load112 to i64, !dbg !21
  %and114 = and i64 %as_int113, 15, !dbg !21
  %is_true115 = icmp eq i64 %and114, 10, !dbg !21
  br i1 %is_true115, label %ip74, label %continue116, !dbg !21

continue116:                                      ; preds = %ip45
  br label %ip50, !dbg !21

ip50:                                             ; preds = %continue116
  %local_pos117 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !23
  %local118 = load %"struct.rubinius::Object"** %local_pos117, !dbg !23, !rbx-classid !22
  %stack_pos119 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %local118, %"struct.rubinius::Object"** %stack_pos119, !dbg !23
  %stack_pos120 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load121 = load %"struct.rubinius::Object"** %stack_pos120, !dbg !23, !rbx-classid !22
  %stack_pos122 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %stack_load121, %"struct.rubinius::Object"** %stack_pos122, !dbg !23
  %global_serial123 = load i32* inttoptr (i64 22553876 to i32*), !dbg !23
  %constant_cache124 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos125 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 4, !dbg !23
  %constant_scope126 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos125, !dbg !23
  %scope_pos127 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope128 = load %"struct.rubinius::ConstantScope"** %scope_pos127, !dbg !23
  %same_scope129 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope126, %frame_scope128, !dbg !23
  br i1 %same_scope129, label %check_serial130, label %use_call132, !dbg !23

check_serial130:                                  ; preds = %ip50
  %serial_pos134 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 7, !dbg !23
  %serial135 = load i32* %serial_pos134, !dbg !23
  %use_cache136 = icmp eq i32 %global_serial123, %serial135, !dbg !23
  br i1 %use_cache136, label %use_cache131, label %use_call132, !dbg !23

use_cache131:                                     ; preds = %check_serial130
  %value_pos137 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 2, !dbg !23
  %cached_value138 = load %"struct.rubinius::Object"** %value_pos137, !dbg !23
  br label %continue133, !dbg !23

use_call132:                                      ; preds = %check_serial130, %ip50
  store i32 53, i32* %ip_pos, !dbg !23
  %push_const_fast139 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check142 = icmp eq %"struct.rubinius::Object"* %push_const_fast139, null, !dbg !23
  br i1 %null_check142, label %bail_out, label %check_active141, !dbg !23

continue133:                                      ; preds = %continue140, %use_cache131
  %constant143 = phi %"struct.rubinius::Object"* [ %cached_value138, %use_cache131 ], [ %push_const_fast139, %continue140 ], !dbg !23, !rbx-classid !24
  %stack_pos144 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %constant143, %"struct.rubinius::Object"** %stack_pos144, !dbg !23
  %stack_pos145 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  %stack_load146 = load %"struct.rubinius::Object"** %stack_pos145, !dbg !23, !rbx-classid !24
  %stack_pos147 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load148 = load %"struct.rubinius::Object"** %stack_pos147, !dbg !23, !rbx-classid !22
  %stack_pos149 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %stack_load146, %"struct.rubinius::Object"** %stack_pos149, !dbg !23
  %stack_pos150 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %stack_load148, %"struct.rubinius::Object"** %stack_pos150, !dbg !23
  %stack_pos151 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  %stack_load152 = load %"struct.rubinius::Object"** %stack_pos151, !dbg !23, !rbx-classid !22
  %stack_pos153 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load154 = load %"struct.rubinius::Object"** %stack_pos153, !dbg !23, !rbx-classid !24
  %cast158 = ptrtoint %"struct.rubinius::Object"* %stack_load152 to i64, !dbg !23
  %masked159 = and i64 %cast158, 1, !dbg !23
  %is_fixnum160 = icmp eq i64 %masked159, 1, !dbg !23
  br i1 %is_fixnum160, label %positive, label %negative, !dbg !23

continue140:                                      ; preds = %check_active141
  br label %continue133, !dbg !23

check_active141:                                  ; preds = %use_call132
  br label %continue140, !dbg !23

continue155:                                      ; preds = %use_call156, %negative, %positive
  %constant161 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call156 ], !dbg !23
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %constant161, %"struct.rubinius::Object"** %stack_pos162, !dbg !23
  %stack_pos163 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load164 = load %"struct.rubinius::Object"** %stack_pos163, !dbg !23
  %as_int165 = ptrtoint %"struct.rubinius::Object"* %stack_load164 to i64, !dbg !23
  %and166 = and i64 %as_int165, 15, !dbg !23
  %is_true167 = icmp ne i64 %and166, 10, !dbg !23
  br i1 %is_true167, label %ip70, label %continue168, !dbg !23

use_call156:                                      ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load152, %"struct.rubinius::Object"* %stack_load154) #0, !dbg !23
  br label %continue155, !dbg !23

positive:                                         ; preds = %continue133
  br label %continue155, !dbg !23

negative:                                         ; preds = %continue133
  br label %continue155, !dbg !23

use_cache157:                                     ; No predecessors!

continue168:                                      ; preds = %continue155
  br label %ip59, !dbg !23

ip59:                                             ; preds = %continue168
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !23
  %stack_pos169 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos169, !dbg !23
  %local_pos170 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !23
  %local171 = load %"struct.rubinius::Object"** %local_pos170, !dbg !23, !rbx-classid !22
  %stack_pos172 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %local171, %"struct.rubinius::Object"** %stack_pos172, !dbg !23
  %global_serial173 = load i32* inttoptr (i64 22553876 to i32*), !dbg !23
  %constant_cache174 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos175 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 4, !dbg !23
  %constant_scope176 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos175, !dbg !23
  %scope_pos177 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope178 = load %"struct.rubinius::ConstantScope"** %scope_pos177, !dbg !23
  %same_scope179 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope176, %frame_scope178, !dbg !23
  br i1 %same_scope179, label %check_serial180, label %use_call182, !dbg !23

check_serial180:                                  ; preds = %ip59
  %serial_pos184 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 7, !dbg !23
  %serial185 = load i32* %serial_pos184, !dbg !23
  %use_cache186 = icmp eq i32 %global_serial173, %serial185, !dbg !23
  br i1 %use_cache186, label %use_cache181, label %use_call182, !dbg !23

use_cache181:                                     ; preds = %check_serial180
  %value_pos187 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 2, !dbg !23
  %cached_value188 = load %"struct.rubinius::Object"** %value_pos187, !dbg !23
  br label %continue183, !dbg !23

use_call182:                                      ; preds = %check_serial180, %ip59
  store i32 63, i32* %ip_pos, !dbg !23
  %push_const_fast189 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check192 = icmp eq %"struct.rubinius::Object"* %push_const_fast189, null, !dbg !23
  br i1 %null_check192, label %bail_out, label %check_active191, !dbg !23

continue183:                                      ; preds = %continue190, %use_cache181
  %constant193 = phi %"struct.rubinius::Object"* [ %cached_value188, %use_cache181 ], [ %push_const_fast189, %continue190 ], !dbg !23, !rbx-classid !25
  %stack_pos194 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %constant193, %"struct.rubinius::Object"** %stack_pos194, !dbg !23
  %stack_pos195 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos195, !dbg !23
  %stack_pos196 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load197 = load %"struct.rubinius::Object"** %stack_pos196, !dbg !23
  store %"struct.rubinius::Object"* %stack_load197, %"struct.rubinius::Object"** %out_args_recv, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !23
  store i32 3, i32* %out_args_total, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !23
  %stack_pos198 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos198, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !23
  %cache_const199 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564592 to %"struct.rubinius::CallSite"**), !dbg !23
  %execute_pos200 = getelementptr %"struct.rubinius::CallSite"* %cache_const199, i32 0, i32 2, !dbg !23
  %execute201 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos200, !dbg !23
  store i32 67, i32* %ip_pos, !dbg !23
  %call_site_execute202 = call %"struct.rubinius::Object"* %execute201(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const199, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check205 = icmp eq %"struct.rubinius::Object"* %call_site_execute202, null, !dbg !23
  br i1 %null_check205, label %bail_out, label %check_active204, !dbg !23

continue190:                                      ; preds = %check_active191
  br label %continue183, !dbg !23

check_active191:                                  ; preds = %use_call182
  br label %continue190, !dbg !23

continue203:                                      ; preds = %check_active204
  %stack_pos206 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %call_site_execute202, %"struct.rubinius::Object"** %stack_pos206, !dbg !23
  br label %ip70, !dbg !23

ip70:                                             ; preds = %continue203, %continue155
  %local_pos207 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !23
  %stack_pos208 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load209 = load %"struct.rubinius::Object"** %stack_pos208, !dbg !23
  store %"struct.rubinius::Object"* %stack_load209, %"struct.rubinius::Object"** %local_pos207, !dbg !23
  br label %ip147, !dbg !23

check_active204:                                  ; preds = %continue183
  br label %continue203, !dbg !23

continue210:                                      ; No predecessors!
  br label %ip74, !dbg !23

ip147:                                            ; preds = %ip70
  br label %ip459, !dbg !26

continue211:                                      ; No predecessors!
  br label %ip149, !dbg !26

ip459:                                            ; preds = %ip382, %continue1176, %ip147
  %local_pos212 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !27
  %local213 = load %"struct.rubinius::Object"** %local_pos212, !dbg !27, !rbx-classid !28
  %stack_pos214 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %stack_pos214, !dbg !27
  %stack_pos215 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos215, !dbg !27
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load220 = load %"struct.rubinius::Object"** %stack_pos219, !dbg !27, !rbx-classid !28
  %cast221 = ptrtoint %"struct.rubinius::Object"* %stack_load220 to i64, !dbg !27
  %stack_pos222 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load223 = load %"struct.rubinius::Object"** %stack_pos222, !dbg !27, !rbx-classid !20
  %cast224 = ptrtoint %"struct.rubinius::Object"* %stack_load223 to i64, !dbg !27
  %fixnums_anded225 = and i64 %cast221, %cast224
  %masked226 = and i64 %fixnums_anded225, 1
  %is_fixnum227 = icmp eq i64 %masked226, 1, !dbg !27
  br i1 %is_fixnum227, label %push_le228, label %class_fallback216, !dbg !27

class_fallback216:                                ; preds = %ip459
  %stack_pos230 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load231 = load %"struct.rubinius::Object"** %stack_pos230, !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load231, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 1, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos232, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !27
  %cache_const233 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567760 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos234 = getelementptr %"struct.rubinius::CallSite"* %cache_const233, i32 0, i32 2, !dbg !27
  %execute235 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos234, !dbg !27
  store i32 463, i32* %ip_pos, !dbg !27
  %call_site_execute236 = call %"struct.rubinius::Object"* %execute235(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const233, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check238 = icmp eq %"struct.rubinius::Object"* %call_site_execute236, null, !dbg !27
  br i1 %null_check238, label %bail_out, label %check_active237, !dbg !27

serial_fallback217:                               ; No predecessors!
  store i32 463, i32* %ip_pos, !dbg !27
  %28 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 463, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue218:                                      ; preds = %check_active237, %push_le228
  %send_result239 = phi %"struct.rubinius::Object"* [ %29, %push_le228 ], [ %call_site_execute236, %check_active237 ], !dbg !27
  %stack_pos240 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result239, %"struct.rubinius::Object"** %stack_pos240, !dbg !27
  %stack_pos241 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load242 = load %"struct.rubinius::Object"** %stack_pos241, !dbg !27
  %as_int243 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !27
  %and244 = and i64 %as_int243, 15, !dbg !27
  %is_true245 = icmp eq i64 %and244, 10, !dbg !27
  br i1 %is_true245, label %ip472, label %continue246, !dbg !27

push_le228:                                       ; preds = %ip459
  %fixnum.lt229 = icmp slt i64 %cast221, %cast224, !dbg !27
  %29 = select i1 %fixnum.lt229, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !27
  br label %continue218, !dbg !27

check_active237:                                  ; preds = %class_fallback216
  br label %continue218, !dbg !27

continue246:                                      ; preds = %continue218
  br label %ip468, !dbg !27

ip468:                                            ; preds = %continue246
  %stack_pos247 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos247, !dbg !27
  %stack_pos248 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load249 = load %"struct.rubinius::Object"** %stack_pos248, !dbg !27, !rbx-classid !12
  br label %return_pad, !dbg !27

ip472:                                            ; preds = %continue218
  %stack_pos250 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos250, !dbg !27
  %local_pos251 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !29
  %local252 = load %"struct.rubinius::Object"** %local_pos251, !dbg !29, !rbx-classid !19
  %stack_pos253 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %stack_pos253, !dbg !29
  %self_pos254 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !29
  %self255 = load %"struct.rubinius::Object"** %self_pos254, !dbg !29
  %obj_array256 = bitcast %"struct.rubinius::Object"* %self255 to %"struct.rubinius::Object"**, !dbg !29
  %field_pos257 = getelementptr %"struct.rubinius::Object"** %obj_array256, i32 3, !dbg !29
  %field258 = load %"struct.rubinius::Object"** %field_pos257, !dbg !29
  %stack_pos259 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  store %"struct.rubinius::Object"* %field258, %"struct.rubinius::Object"** %stack_pos259, !dbg !29
  %stack_pos263 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load264 = load %"struct.rubinius::Object"** %stack_pos263, !dbg !29, !rbx-classid !19
  %cast265 = ptrtoint %"struct.rubinius::Object"* %stack_load264 to i64, !dbg !29
  %stack_pos266 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  %stack_load267 = load %"struct.rubinius::Object"** %stack_pos266, !dbg !29
  %cast268 = ptrtoint %"struct.rubinius::Object"* %stack_load267 to i64, !dbg !29
  %fixnums_anded269 = and i64 %cast265, %cast268
  %masked270 = and i64 %fixnums_anded269, 1
  %is_fixnum271 = icmp eq i64 %masked270, 1, !dbg !29
  br i1 %is_fixnum271, label %push_le272, label %class_fallback260, !dbg !29

class_fallback260:                                ; preds = %ip472
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load274 = load %"struct.rubinius::Object"** %stack_pos273, !dbg !29, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load274, %"struct.rubinius::Object"** %out_args_recv, !dbg !29
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !29
  store i32 1, i32* %out_args_total, !dbg !29
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !29
  %stack_pos275 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  store %"struct.rubinius::Object"** %stack_pos275, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !29
  %cache_const276 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567880 to %"struct.rubinius::CallSite"**), !dbg !29
  %execute_pos277 = getelementptr %"struct.rubinius::CallSite"* %cache_const276, i32 0, i32 2, !dbg !29
  %execute278 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos277, !dbg !29
  store i32 478, i32* %ip_pos, !dbg !29
  %call_site_execute279 = call %"struct.rubinius::Object"* %execute278(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const276, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !29
  %null_check281 = icmp eq %"struct.rubinius::Object"* %call_site_execute279, null, !dbg !29
  br i1 %null_check281, label %bail_out, label %check_active280, !dbg !29

serial_fallback261:                               ; No predecessors!
  store i32 478, i32* %ip_pos, !dbg !29
  %30 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 478, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !29
  br label %return_pad, !dbg !29

continue262:                                      ; preds = %check_active280, %push_le272
  %send_result282 = phi %"struct.rubinius::Object"* [ %31, %push_le272 ], [ %call_site_execute279, %check_active280 ], !dbg !29
  %stack_pos283 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %send_result282, %"struct.rubinius::Object"** %stack_pos283, !dbg !29
  %stack_pos284 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load285 = load %"struct.rubinius::Object"** %stack_pos284, !dbg !29
  %as_int286 = ptrtoint %"struct.rubinius::Object"* %stack_load285 to i64, !dbg !29
  %and287 = and i64 %as_int286, 15, !dbg !29
  %is_true288 = icmp eq i64 %and287, 10, !dbg !29
  br i1 %is_true288, label %ip508, label %continue289, !dbg !29

push_le272:                                       ; preds = %ip472
  %fixnum.ge = icmp sge i64 %cast265, %cast268, !dbg !29
  %31 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !29
  br label %continue262, !dbg !29

check_active280:                                  ; preds = %class_fallback260
  br label %continue262, !dbg !29

continue289:                                      ; preds = %continue262
  br label %ip483, !dbg !29

ip483:                                            ; preds = %continue289
  %local_pos290 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !30
  %local291 = load %"struct.rubinius::Object"** %local_pos290, !dbg !30, !rbx-classid !19
  %stack_pos292 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local291, %"struct.rubinius::Object"** %stack_pos292, !dbg !30
  %self_pos293 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self294 = load %"struct.rubinius::Object"** %self_pos293, !dbg !30
  %obj_array295 = bitcast %"struct.rubinius::Object"* %self294 to %"struct.rubinius::Object"**, !dbg !30
  %field_pos296 = getelementptr %"struct.rubinius::Object"** %obj_array295, i32 3, !dbg !30
  %field297 = load %"struct.rubinius::Object"** %field_pos296, !dbg !30
  %stack_pos298 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %field297, %"struct.rubinius::Object"** %stack_pos298, !dbg !30
  %stack_pos299 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load300 = load %"struct.rubinius::Object"** %stack_pos299, !dbg !30, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load300, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos301 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos301, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const302 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567952 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos303 = getelementptr %"struct.rubinius::CallSite"* %cache_const302, i32 0, i32 2, !dbg !30
  %execute304 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos303, !dbg !30
  store i32 487, i32* %ip_pos, !dbg !30
  %call_site_execute305 = call %"struct.rubinius::Object"* %execute304(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const302, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check308 = icmp eq %"struct.rubinius::Object"* %call_site_execute305, null, !dbg !30
  br i1 %null_check308, label %bail_out, label %check_active307, !dbg !30

continue306:                                      ; preds = %check_active307
  %stack_pos309 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute305, %"struct.rubinius::Object"** %stack_pos309, !dbg !30
  %stack_pos310 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load311 = load %"struct.rubinius::Object"** %stack_pos310, !dbg !30
  %as_int312 = ptrtoint %"struct.rubinius::Object"* %stack_load311 to i64, !dbg !30
  %and313 = and i64 %as_int312, 15, !dbg !30
  %is_true314 = icmp eq i64 %and313, 10, !dbg !30
  br i1 %is_true314, label %ip502, label %continue315, !dbg !30

check_active307:                                  ; preds = %ip483
  br label %continue306, !dbg !30

continue315:                                      ; preds = %continue306
  br label %ip492, !dbg !30

ip492:                                            ; preds = %continue315
  %32 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self316 = load %"struct.rubinius::Object"** %32, !dbg !30
  %stack_pos317 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %stack_pos317, !dbg !30
  %stack_pos318 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos318, !dbg !30
  %stack_pos319 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos319, !dbg !30
  %stack_pos320 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load321 = load %"struct.rubinius::Object"** %stack_pos320, !dbg !30
  store %"struct.rubinius::Object"* %stack_load321, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 2, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos322 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos322, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const323 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568024 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos324 = getelementptr %"struct.rubinius::CallSite"* %cache_const323, i32 0, i32 2, !dbg !30
  %execute325 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos324, !dbg !30
  store i32 496, i32* %ip_pos, !dbg !30
  %call_site_execute326 = call %"struct.rubinius::Object"* %execute325(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const323, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check329 = icmp eq %"struct.rubinius::Object"* %call_site_execute326, null, !dbg !30
  br i1 %null_check329, label %bail_out, label %check_active328, !dbg !30

continue327:                                      ; preds = %check_active328
  %stack_pos330 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute326, %"struct.rubinius::Object"** %stack_pos330, !dbg !30
  %stack_pos331 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load332 = load %"struct.rubinius::Object"** %stack_pos331, !dbg !30
  br label %return_pad, !dbg !30

ip502:                                            ; preds = %continue306
  %stack_pos333 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos333, !dbg !30
  %stack_pos334 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos334, !dbg !31
  %stack_pos335 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !31
  %stack_load336 = load %"struct.rubinius::Object"** %stack_pos335, !dbg !31, !rbx-classid !12
  br label %return_pad, !dbg !31

ip508:                                            ; preds = %continue262
  %stack_pos337 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos337, !dbg !29
  %local_pos338 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !32
  %local339 = load %"struct.rubinius::Object"** %local_pos338, !dbg !32, !rbx-classid !19
  %stack_pos340 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %stack_pos340, !dbg !32
  %stack_pos341 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos341, !dbg !32
  %stack_pos345 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load346 = load %"struct.rubinius::Object"** %stack_pos345, !dbg !32, !rbx-classid !19
  %cast347 = ptrtoint %"struct.rubinius::Object"* %stack_load346 to i64, !dbg !32
  %stack_pos348 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  %stack_load349 = load %"struct.rubinius::Object"** %stack_pos348, !dbg !32, !rbx-classid !20
  %cast350 = ptrtoint %"struct.rubinius::Object"* %stack_load349 to i64, !dbg !32
  %fixnums_anded351 = and i64 %cast347, %cast350
  %masked352 = and i64 %fixnums_anded351, 1
  %is_fixnum353 = icmp eq i64 %masked352, 1, !dbg !32
  br i1 %is_fixnum353, label %push_le354, label %class_fallback342, !dbg !32

check_active328:                                  ; preds = %ip492
  br label %continue327, !dbg !30

class_fallback342:                                ; preds = %ip508
  %stack_pos356 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load357 = load %"struct.rubinius::Object"** %stack_pos356, !dbg !32, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load357, %"struct.rubinius::Object"** %out_args_recv, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !32
  store i32 1, i32* %out_args_total, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !32
  %stack_pos358 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos358, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !32
  %cache_const359 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568160 to %"struct.rubinius::CallSite"**), !dbg !32
  %execute_pos360 = getelementptr %"struct.rubinius::CallSite"* %cache_const359, i32 0, i32 2, !dbg !32
  %execute361 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos360, !dbg !32
  store i32 513, i32* %ip_pos, !dbg !32
  %call_site_execute362 = call %"struct.rubinius::Object"* %execute361(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const359, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check364 = icmp eq %"struct.rubinius::Object"* %call_site_execute362, null, !dbg !32
  br i1 %null_check364, label %bail_out, label %check_active363, !dbg !32

serial_fallback343:                               ; No predecessors!
  store i32 513, i32* %ip_pos, !dbg !32
  %33 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 513, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !32
  br label %return_pad, !dbg !32

continue344:                                      ; preds = %check_active363, %push_le354
  %send_result365 = phi %"struct.rubinius::Object"* [ %34, %push_le354 ], [ %call_site_execute362, %check_active363 ], !dbg !32
  %stack_pos366 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %send_result365, %"struct.rubinius::Object"** %stack_pos366, !dbg !32
  %stack_pos367 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load368 = load %"struct.rubinius::Object"** %stack_pos367, !dbg !32
  %as_int369 = ptrtoint %"struct.rubinius::Object"* %stack_load368 to i64, !dbg !32
  %and370 = and i64 %as_int369, 15, !dbg !32
  %is_true371 = icmp eq i64 %and370, 10, !dbg !32
  br i1 %is_true371, label %ip522, label %continue372, !dbg !32

push_le354:                                       ; preds = %ip508
  %fixnum.lt355 = icmp slt i64 %cast347, %cast350, !dbg !32
  %34 = select i1 %fixnum.lt355, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !32
  br label %continue344, !dbg !32

check_active363:                                  ; preds = %class_fallback342
  br label %continue344, !dbg !32

continue372:                                      ; preds = %continue344
  br label %ip518, !dbg !32

ip518:                                            ; preds = %continue372
  %stack_pos373 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos373, !dbg !32
  %stack_pos374 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load375 = load %"struct.rubinius::Object"** %stack_pos374, !dbg !32, !rbx-classid !12
  br label %return_pad, !dbg !32

ip522:                                            ; preds = %continue344
  %stack_pos376 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos376, !dbg !32
  %local_pos377 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !33
  %local378 = load %"struct.rubinius::Object"** %local_pos377, !dbg !33, !rbx-classid !19
  %stack_pos379 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %stack_pos379, !dbg !33
  %local_pos380 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !33
  %local381 = load %"struct.rubinius::Object"** %local_pos380, !dbg !33, !rbx-classid !28
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos382, !dbg !33
  %stack_pos386 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load387 = load %"struct.rubinius::Object"** %stack_pos386, !dbg !33, !rbx-classid !19
  %stack_pos388 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  %stack_load389 = load %"struct.rubinius::Object"** %stack_pos388, !dbg !33, !rbx-classid !28
  %cast394 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !33
  %cast395 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !33
  %fixnums_anded396 = and i64 %cast394, %cast395, !dbg !33
  %masked397 = and i64 %fixnums_anded396, 1, !dbg !33
  %is_fixnum398 = icmp eq i64 %masked397, 1, !dbg !33
  br i1 %is_fixnum398, label %push_add390, label %class_fallback383, !dbg !33

class_fallback383:                                ; preds = %ip522
  %stack_pos410 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load411 = load %"struct.rubinius::Object"** %stack_pos410, !dbg !33, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load411, %"struct.rubinius::Object"** %out_args_recv, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !33
  store i32 1, i32* %out_args_total, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !33
  %stack_pos412 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos412, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !33
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568280 to %"struct.rubinius::CallSite"**), !dbg !33
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i32 0, i32 2, !dbg !33
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, !dbg !33
  store i32 528, i32* %ip_pos, !dbg !33
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !33
  br i1 %null_check418, label %bail_out, label %check_active417, !dbg !33

serial_fallback384:                               ; No predecessors!
  store i32 528, i32* %ip_pos, !dbg !33
  %35 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 528, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !33
  br label %return_pad, !dbg !33

continue385:                                      ; preds = %check_active417, %cont393
  %send_result419 = phi %"struct.rubinius::Object"* [ %result409, %cont393 ], [ %call_site_execute416, %check_active417 ], !dbg !33
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos420, !dbg !33
  %self_pos421 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !33
  %self422 = load %"struct.rubinius::Object"** %self_pos421, !dbg !33
  %obj_array423 = bitcast %"struct.rubinius::Object"* %self422 to %"struct.rubinius::Object"**, !dbg !33
  %field_pos424 = getelementptr %"struct.rubinius::Object"** %obj_array423, i32 3, !dbg !33
  %field425 = load %"struct.rubinius::Object"** %field_pos424, !dbg !33
  %stack_pos426 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %field425, %"struct.rubinius::Object"** %stack_pos426, !dbg !33
  %stack_pos430 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load431 = load %"struct.rubinius::Object"** %stack_pos430, !dbg !33
  %cast432 = ptrtoint %"struct.rubinius::Object"* %stack_load431 to i64, !dbg !33
  %stack_pos433 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  %stack_load434 = load %"struct.rubinius::Object"** %stack_pos433, !dbg !33
  %cast435 = ptrtoint %"struct.rubinius::Object"* %stack_load434 to i64, !dbg !33
  %fixnums_anded436 = and i64 %cast432, %cast435
  %masked437 = and i64 %fixnums_anded436, 1
  %is_fixnum438 = icmp eq i64 %masked437, 1, !dbg !33
  br i1 %is_fixnum438, label %push_le439, label %class_fallback427, !dbg !33

push_add390:                                      ; preds = %ip522
  %as_int399 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !33
  %ashr400 = ashr i64 %as_int399, 1, !dbg !33
  %as_int401 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !33
  %ashr402 = ashr i64 %as_int401, 1, !dbg !33
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !33
  %36 = icmp sle i64 %fixnum.add403, 4611686018427387903, !dbg !33
  %37 = icmp sge i64 %fixnum.add403, -4611686018427387903, !dbg !33
  %fits_fixnum404 = and i1 %36, %37, !dbg !33
  br i1 %fits_fixnum404, label %tagnow391, label %bignum392, !dbg !33

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !33
  %or407 = or i64 %shl406, 1, !dbg !33
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !33
  br label %cont393, !dbg !33

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #1, !dbg !33
  br label %cont393, !dbg !33

cont393:                                          ; preds = %tagnow391, %bignum392
  %result409 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], !dbg !33
  br label %continue385, !dbg !33

check_active417:                                  ; preds = %class_fallback383
  br label %continue385, !dbg !33

class_fallback427:                                ; preds = %continue385
  %stack_pos440 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load441 = load %"struct.rubinius::Object"** %stack_pos440, !dbg !33
  store %"struct.rubinius::Object"* %stack_load441, %"struct.rubinius::Object"** %out_args_recv, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !33
  store i32 1, i32* %out_args_total, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !33
  %stack_pos442 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos442, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !33
  %cache_const443 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568320 to %"struct.rubinius::CallSite"**), !dbg !33
  %execute_pos444 = getelementptr %"struct.rubinius::CallSite"* %cache_const443, i32 0, i32 2, !dbg !33
  %execute445 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos444, !dbg !33
  store i32 533, i32* %ip_pos, !dbg !33
  %call_site_execute446 = call %"struct.rubinius::Object"* %execute445(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const443, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check448 = icmp eq %"struct.rubinius::Object"* %call_site_execute446, null, !dbg !33
  br i1 %null_check448, label %bail_out, label %check_active447, !dbg !33

serial_fallback428:                               ; No predecessors!
  store i32 533, i32* %ip_pos, !dbg !33
  %38 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 533, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !33
  br label %return_pad, !dbg !33

continue429:                                      ; preds = %check_active447, %push_le439
  %send_result449 = phi %"struct.rubinius::Object"* [ %39, %push_le439 ], [ %call_site_execute446, %check_active447 ], !dbg !33
  %stack_pos450 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %send_result449, %"struct.rubinius::Object"** %stack_pos450, !dbg !33
  %stack_pos451 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load452 = load %"struct.rubinius::Object"** %stack_pos451, !dbg !33
  %as_int453 = ptrtoint %"struct.rubinius::Object"* %stack_load452 to i64, !dbg !33
  %and454 = and i64 %as_int453, 15, !dbg !33
  %is_true455 = icmp eq i64 %and454, 10, !dbg !33
  br i1 %is_true455, label %ip549, label %continue456, !dbg !33

push_le439:                                       ; preds = %continue385
  %fixnum.gt = icmp sgt i64 %cast432, %cast435, !dbg !33
  %39 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !33
  br label %continue429, !dbg !33

check_active447:                                  ; preds = %class_fallback427
  br label %continue429, !dbg !33

continue456:                                      ; preds = %continue429
  br label %ip538, !dbg !33

ip538:                                            ; preds = %continue456
  %self_pos457 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !34
  %self458 = load %"struct.rubinius::Object"** %self_pos457, !dbg !34
  %obj_array459 = bitcast %"struct.rubinius::Object"* %self458 to %"struct.rubinius::Object"**, !dbg !34
  %field_pos460 = getelementptr %"struct.rubinius::Object"** %obj_array459, i32 3, !dbg !34
  %field461 = load %"struct.rubinius::Object"** %field_pos460, !dbg !34
  %stack_pos462 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %stack_pos462, !dbg !34
  %local_pos463 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !34
  %local464 = load %"struct.rubinius::Object"** %local_pos463, !dbg !34, !rbx-classid !19
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local464, %"struct.rubinius::Object"** %stack_pos465, !dbg !34
  %stack_pos466 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load467 = load %"struct.rubinius::Object"** %stack_pos466, !dbg !34
  store %"struct.rubinius::Object"* %stack_load467, %"struct.rubinius::Object"** %out_args_recv, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !34
  store i32 1, i32* %out_args_total, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !34
  %stack_pos468 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos468, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !34
  %cache_const469 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568392 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos470 = getelementptr %"struct.rubinius::CallSite"* %cache_const469, i32 0, i32 2, !dbg !34
  %execute471 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos470, !dbg !34
  store i32 542, i32* %ip_pos, !dbg !34
  %call_site_execute472 = call %"struct.rubinius::Object"* %execute471(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const469, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check475 = icmp eq %"struct.rubinius::Object"* %call_site_execute472, null, !dbg !34
  br i1 %null_check475, label %bail_out, label %check_active474, !dbg !34

continue473:                                      ; preds = %check_active474
  %stack_pos476 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %stack_pos476, !dbg !34
  %local_pos477 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !34
  %stack_pos478 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load479 = load %"struct.rubinius::Object"** %stack_pos478, !dbg !34
  store %"struct.rubinius::Object"* %stack_load479, %"struct.rubinius::Object"** %local_pos477, !dbg !34
  br label %ip550, !dbg !34

check_active474:                                  ; preds = %ip538
  br label %continue473, !dbg !34

continue480:                                      ; No predecessors!
  br label %ip549, !dbg !34

ip550:                                            ; preds = %ip549, %continue473
  %40 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !35
  %self481 = load %"struct.rubinius::Object"** %40, !dbg !35
  %stack_pos482 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  store %"struct.rubinius::Object"* %self481, %"struct.rubinius::Object"** %stack_pos482, !dbg !35
  %self_pos483 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !35
  %self484 = load %"struct.rubinius::Object"** %self_pos483, !dbg !35
  %obj_array485 = bitcast %"struct.rubinius::Object"* %self484 to %"struct.rubinius::Object"**, !dbg !35
  %field_pos486 = getelementptr %"struct.rubinius::Object"** %obj_array485, i32 5, !dbg !35
  %field487 = load %"struct.rubinius::Object"** %field_pos486, !dbg !35
  %stack_pos488 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %stack_pos488, !dbg !35
  %local_pos489 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !35
  %local490 = load %"struct.rubinius::Object"** %local_pos489, !dbg !35, !rbx-classid !19
  %stack_pos491 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"* %local490, %"struct.rubinius::Object"** %stack_pos491, !dbg !35
  %stack_pos495 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load496 = load %"struct.rubinius::Object"** %stack_pos495, !dbg !35
  %stack_pos497 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  %stack_load498 = load %"struct.rubinius::Object"** %stack_pos497, !dbg !35, !rbx-classid !19
  %cast503 = ptrtoint %"struct.rubinius::Object"* %stack_load496 to i64, !dbg !35
  %cast504 = ptrtoint %"struct.rubinius::Object"* %stack_load498 to i64, !dbg !35
  %fixnums_anded505 = and i64 %cast503, %cast504, !dbg !35
  %masked506 = and i64 %fixnums_anded505, 1, !dbg !35
  %is_fixnum507 = icmp eq i64 %masked506, 1, !dbg !35
  br i1 %is_fixnum507, label %push_add499, label %class_fallback492, !dbg !35

class_fallback492:                                ; preds = %ip550
  %stack_pos519 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load520 = load %"struct.rubinius::Object"** %stack_pos519, !dbg !35
  store %"struct.rubinius::Object"* %stack_load520, %"struct.rubinius::Object"** %out_args_recv, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !35
  store i32 1, i32* %out_args_total, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !35
  %stack_pos521 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos521, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !35
  %cache_const522 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568504 to %"struct.rubinius::CallSite"**), !dbg !35
  %execute_pos523 = getelementptr %"struct.rubinius::CallSite"* %cache_const522, i32 0, i32 2, !dbg !35
  %execute524 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos523, !dbg !35
  store i32 556, i32* %ip_pos, !dbg !35
  %call_site_execute525 = call %"struct.rubinius::Object"* %execute524(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const522, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check527 = icmp eq %"struct.rubinius::Object"* %call_site_execute525, null, !dbg !35
  br i1 %null_check527, label %bail_out, label %check_active526, !dbg !35

serial_fallback493:                               ; No predecessors!
  store i32 556, i32* %ip_pos, !dbg !35
  %41 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 556, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !35
  br label %return_pad, !dbg !35

continue494:                                      ; preds = %check_active526, %cont502
  %send_result528 = phi %"struct.rubinius::Object"* [ %result518, %cont502 ], [ %call_site_execute525, %check_active526 ], !dbg !35
  %stack_pos529 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"* %send_result528, %"struct.rubinius::Object"** %stack_pos529, !dbg !35
  %local_pos530 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !35
  %local531 = load %"struct.rubinius::Object"** %local_pos530, !dbg !35, !rbx-classid !28
  %stack_pos532 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"* %local531, %"struct.rubinius::Object"** %stack_pos532, !dbg !35
  %stack_pos536 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load537 = load %"struct.rubinius::Object"** %stack_pos536, !dbg !35
  %cast538 = ptrtoint %"struct.rubinius::Object"* %stack_load537 to i64, !dbg !35
  %masked539 = and i64 %cast538, 3, !dbg !35
  %is_reference = icmp eq i64 %masked539, 0, !dbg !35
  br i1 %is_reference, label %check_class_id, label %class_fallback533, !dbg !35

push_add499:                                      ; preds = %ip550
  %as_int508 = ptrtoint %"struct.rubinius::Object"* %stack_load496 to i64, !dbg !35
  %ashr509 = ashr i64 %as_int508, 1, !dbg !35
  %as_int510 = ptrtoint %"struct.rubinius::Object"* %stack_load498 to i64, !dbg !35
  %ashr511 = ashr i64 %as_int510, 1, !dbg !35
  %fixnum.add512 = add i64 %ashr509, %ashr511, !dbg !35
  %42 = icmp sle i64 %fixnum.add512, 4611686018427387903, !dbg !35
  %43 = icmp sge i64 %fixnum.add512, -4611686018427387903, !dbg !35
  %fits_fixnum513 = and i1 %42, %43, !dbg !35
  br i1 %fits_fixnum513, label %tagnow500, label %bignum501, !dbg !35

tagnow500:                                        ; preds = %push_add499
  %shl515 = shl i64 %fixnum.add512, 1, !dbg !35
  %or516 = or i64 %shl515, 1, !dbg !35
  %as_obj517 = inttoptr i64 %or516 to %"struct.rubinius::Object"*, !dbg !35
  br label %cont502, !dbg !35

bignum501:                                        ; preds = %push_add499
  %big_value514 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add512) #1, !dbg !35
  br label %cont502, !dbg !35

cont502:                                          ; preds = %tagnow500, %bignum501
  %result518 = phi %"struct.rubinius::Object"* [ %big_value514, %bignum501 ], [ %as_obj517, %tagnow500 ], !dbg !35
  br label %continue494, !dbg !35

check_active526:                                  ; preds = %class_fallback492
  br label %continue494, !dbg !35

continue535:                                      ; preds = %check_active558, %continue548
  %send_result560 = phi %"struct.rubinius::Object"* [ %prim_value, %continue548 ], [ %call_site_execute557, %check_active558 ], !dbg !35
  %stack_pos561 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  store %"struct.rubinius::Object"* %send_result560, %"struct.rubinius::Object"** %stack_pos561, !dbg !35
  %stack_pos562 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load563 = load %"struct.rubinius::Object"** %stack_pos562, !dbg !35
  br label %return_pad, !dbg !35

ip549:                                            ; preds = %continue480, %continue429
  %stack_pos564 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos564, !dbg !33
  br label %ip550, !dbg !33

ip74:                                             ; preds = %continue210, %ip45
  %local_pos565 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !36
  %local566 = load %"struct.rubinius::Object"** %local_pos565, !dbg !36, !rbx-classid !19
  %stack_pos567 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %stack_pos567, !dbg !36
  %self_pos568 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !36
  %self569 = load %"struct.rubinius::Object"** %self_pos568, !dbg !36
  %obj_array570 = bitcast %"struct.rubinius::Object"* %self569 to %"struct.rubinius::Object"**, !dbg !36
  %field_pos571 = getelementptr %"struct.rubinius::Object"** %obj_array570, i32 3, !dbg !36
  %field572 = load %"struct.rubinius::Object"** %field_pos571, !dbg !36
  %stack_pos573 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %field572, %"struct.rubinius::Object"** %stack_pos573, !dbg !36
  %stack_pos577 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load578 = load %"struct.rubinius::Object"** %stack_pos577, !dbg !36, !rbx-classid !19
  %cast579 = ptrtoint %"struct.rubinius::Object"* %stack_load578 to i64, !dbg !36
  %stack_pos580 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  %stack_load581 = load %"struct.rubinius::Object"** %stack_pos580, !dbg !36
  %cast582 = ptrtoint %"struct.rubinius::Object"* %stack_load581 to i64, !dbg !36
  %fixnums_anded583 = and i64 %cast579, %cast582
  %masked584 = and i64 %fixnums_anded583, 1
  %is_fixnum585 = icmp eq i64 %masked584, 1, !dbg !36
  br i1 %is_fixnum585, label %push_le586, label %class_fallback574, !dbg !36

check_class_id:                                   ; preds = %continue494
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load537, i32 0, i32 0, i32 1, !dbg !35
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !35
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !35
  %class_id = load i32* %class_id_pos, !dbg !35
  %check_class_id540 = icmp eq i32 %class_id, 6, !dbg !35
  br i1 %check_class_id540, label %correct_class, label %class_fallback533, !dbg !35

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !35
  %serial_id = load i32* %serial_id_pos, !dbg !35
  %check_serial_id = icmp eq i32 %serial_id, 243, !dbg !35
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback534, !dbg !35

class_fallback533:                                ; preds = %correct_serial, %check_class_id, %continue494
  %stack_pos551 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load552 = load %"struct.rubinius::Object"** %stack_pos551, !dbg !35
  store %"struct.rubinius::Object"* %stack_load552, %"struct.rubinius::Object"** %out_args_recv, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !35
  store i32 2, i32* %out_args_total, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !35
  %stack_pos553 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos553, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !35
  %cache_const554 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568552 to %"struct.rubinius::CallSite"**), !dbg !35
  %execute_pos555 = getelementptr %"struct.rubinius::CallSite"* %cache_const554, i32 0, i32 2, !dbg !35
  %execute556 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos555, !dbg !35
  store i32 562, i32* %ip_pos, !dbg !35
  %call_site_execute557 = call %"struct.rubinius::Object"* %execute556(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const554, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check559 = icmp eq %"struct.rubinius::Object"* %call_site_execute557, null, !dbg !35
  br i1 %null_check559, label %bail_out, label %check_active558, !dbg !35

correct_serial:                                   ; preds = %correct_class
  %stack_pos541 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load542 = load %"struct.rubinius::Object"** %stack_pos541, !dbg !35
  %stack_pos543 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load544 = load %"struct.rubinius::Object"** %stack_pos543, !dbg !35
  %stack_pos545 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  %stack_load546 = load %"struct.rubinius::Object"** %stack_pos545, !dbg !35, !rbx-classid !28
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load542, %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"* %stack_load546) #1, !dbg !35
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !35
  %44 = icmp eq i64 %ptr2int, 34, !dbg !35
  br i1 %44, label %class_fallback533, label %continue547, !dbg !35

serial_fallback534:                               ; preds = %correct_class
  store i32 562, i32* %ip_pos, !dbg !35
  %45 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 562, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !35
  br label %return_pad, !dbg !35

continue547:                                      ; preds = %correct_serial
  %null_check550 = icmp eq %"struct.rubinius::Object"* %prim_value, null, !dbg !35
  br i1 %null_check550, label %bail_out, label %check_active549, !dbg !35

continue548:                                      ; preds = %check_active549
  br label %continue535, !dbg !35

check_active549:                                  ; preds = %continue547
  br label %continue548, !dbg !35

check_active558:                                  ; preds = %class_fallback533
  br label %continue535, !dbg !35

class_fallback574:                                ; preds = %ip74
  %stack_pos588 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load589 = load %"struct.rubinius::Object"** %stack_pos588, !dbg !36, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load589, %"struct.rubinius::Object"** %out_args_recv, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !36
  store i32 1, i32* %out_args_total, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !36
  %stack_pos590 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos590, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !36
  %cache_const591 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564680 to %"struct.rubinius::CallSite"**), !dbg !36
  %execute_pos592 = getelementptr %"struct.rubinius::CallSite"* %cache_const591, i32 0, i32 2, !dbg !36
  %execute593 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos592, !dbg !36
  store i32 78, i32* %ip_pos, !dbg !36
  %call_site_execute594 = call %"struct.rubinius::Object"* %execute593(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const591, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check596 = icmp eq %"struct.rubinius::Object"* %call_site_execute594, null, !dbg !36
  br i1 %null_check596, label %bail_out, label %check_active595, !dbg !36

serial_fallback575:                               ; No predecessors!
  store i32 78, i32* %ip_pos, !dbg !36
  %46 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 78, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad, !dbg !36

continue576:                                      ; preds = %check_active595, %push_le586
  %send_result597 = phi %"struct.rubinius::Object"* [ %47, %push_le586 ], [ %call_site_execute594, %check_active595 ], !dbg !36
  %stack_pos598 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %send_result597, %"struct.rubinius::Object"** %stack_pos598, !dbg !36
  %stack_pos599 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load600 = load %"struct.rubinius::Object"** %stack_pos599, !dbg !36
  %as_int601 = ptrtoint %"struct.rubinius::Object"* %stack_load600 to i64, !dbg !36
  %and602 = and i64 %as_int601, 15, !dbg !36
  %is_true603 = icmp eq i64 %and602, 10, !dbg !36
  br i1 %is_true603, label %ip87, label %continue604, !dbg !36

push_le586:                                       ; preds = %ip74
  %fixnum.ge587 = icmp sge i64 %cast579, %cast582, !dbg !36
  %47 = select i1 %fixnum.ge587, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !36
  br label %continue576, !dbg !36

check_active595:                                  ; preds = %class_fallback574
  br label %continue576, !dbg !36

continue604:                                      ; preds = %continue576
  br label %ip83, !dbg !36

ip83:                                             ; preds = %continue604
  %stack_pos605 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos605, !dbg !36
  %stack_pos606 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load607 = load %"struct.rubinius::Object"** %stack_pos606, !dbg !36, !rbx-classid !12
  br label %return_pad, !dbg !36

ip87:                                             ; preds = %continue576
  %stack_pos608 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos608, !dbg !36
  %48 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !37
  %stack_pos609 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !37
  store %"struct.rubinius::Object"* %48, %"struct.rubinius::Object"** %stack_pos609, !dbg !37
  %stack_pos610 = getelementptr %"struct.rubinius::Object"** %stack, i32 12, !dbg !37
  %stack_pos611 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !37
  %stack_load612 = load %"struct.rubinius::Object"** %stack_pos611, !dbg !37
  store %"struct.rubinius::Object"* %stack_load612, %"struct.rubinius::Object"** %stack_pos610, !dbg !37
  br label %ip96, !dbg !37

ip96:                                             ; preds = %ip87
  %self_pos613 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !38
  %self614 = load %"struct.rubinius::Object"** %self_pos613, !dbg !38
  %obj_array615 = bitcast %"struct.rubinius::Object"* %self614 to %"struct.rubinius::Object"**, !dbg !38
  %field_pos616 = getelementptr %"struct.rubinius::Object"** %obj_array615, i32 4, !dbg !38
  %field617 = load %"struct.rubinius::Object"** %field_pos616, !dbg !38
  %stack_pos618 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %field617, %"struct.rubinius::Object"** %stack_pos618, !dbg !38
  %self_pos619 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !38
  %self620 = load %"struct.rubinius::Object"** %self_pos619, !dbg !38
  %obj_array621 = bitcast %"struct.rubinius::Object"* %self620 to %"struct.rubinius::Object"**, !dbg !38
  %field_pos622 = getelementptr %"struct.rubinius::Object"** %obj_array621, i32 5, !dbg !38
  %field623 = load %"struct.rubinius::Object"** %field_pos622, !dbg !38
  %stack_pos624 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %stack_pos624, !dbg !38
  %local_pos625 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !38
  %local626 = load %"struct.rubinius::Object"** %local_pos625, !dbg !38, !rbx-classid !19
  %stack_pos627 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos627, !dbg !38
  %stack_pos631 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load632 = load %"struct.rubinius::Object"** %stack_pos631, !dbg !38
  %stack_pos633 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  %stack_load634 = load %"struct.rubinius::Object"** %stack_pos633, !dbg !38, !rbx-classid !19
  %cast639 = ptrtoint %"struct.rubinius::Object"* %stack_load632 to i64, !dbg !38
  %cast640 = ptrtoint %"struct.rubinius::Object"* %stack_load634 to i64, !dbg !38
  %fixnums_anded641 = and i64 %cast639, %cast640, !dbg !38
  %masked642 = and i64 %fixnums_anded641, 1, !dbg !38
  %is_fixnum643 = icmp eq i64 %masked642, 1, !dbg !38
  br i1 %is_fixnum643, label %push_add635, label %class_fallback628, !dbg !38

is_exception:                                     ; preds = %class_fallback628
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !37
  br i1 %rae, label %ip112, label %bail_out, !dbg !37

class_fallback628:                                ; preds = %ip96
  %stack_pos655 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load656 = load %"struct.rubinius::Object"** %stack_pos655, !dbg !38
  store %"struct.rubinius::Object"* %stack_load656, %"struct.rubinius::Object"** %out_args_recv, !dbg !38
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !38
  store i32 1, i32* %out_args_total, !dbg !38
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !38
  %stack_pos657 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  store %"struct.rubinius::Object"** %stack_pos657, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !38
  %cache_const658 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564872 to %"struct.rubinius::CallSite"**), !dbg !38
  %execute_pos659 = getelementptr %"struct.rubinius::CallSite"* %cache_const658, i32 0, i32 2, !dbg !38
  %execute660 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos659, !dbg !38
  store i32 102, i32* %ip_pos, !dbg !38
  %call_site_execute661 = call %"struct.rubinius::Object"* %execute660(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const658, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !38
  %null_check663 = icmp eq %"struct.rubinius::Object"* %call_site_execute661, null, !dbg !38
  br i1 %null_check663, label %is_exception, label %check_active662, !dbg !38

serial_fallback629:                               ; No predecessors!
  store i32 102, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %49 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 102, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 1, i8 1), !dbg !38
  br label %return_pad, !dbg !38

continue630:                                      ; preds = %check_active662, %cont638
  %send_result664 = phi %"struct.rubinius::Object"* [ %result654, %cont638 ], [ %call_site_execute661, %check_active662 ], !dbg !38
  %stack_pos665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %send_result664, %"struct.rubinius::Object"** %stack_pos665, !dbg !38
  %stack_pos669 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  %stack_load670 = load %"struct.rubinius::Object"** %stack_pos669, !dbg !38
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load670, i32 0, i32 0, i32 0, i32 0, !dbg !38
  %flags = load i64* %word_pos, !dbg !38
  %mask = and i64 %flags, 255, !dbg !38
  %is_type = icmp eq i64 %mask, 73, !dbg !38
  br i1 %is_type, label %is_tuple, label %class_fallback666, !dbg !38

push_add635:                                      ; preds = %ip96
  %as_int644 = ptrtoint %"struct.rubinius::Object"* %stack_load632 to i64, !dbg !38
  %ashr645 = ashr i64 %as_int644, 1, !dbg !38
  %as_int646 = ptrtoint %"struct.rubinius::Object"* %stack_load634 to i64, !dbg !38
  %ashr647 = ashr i64 %as_int646, 1, !dbg !38
  %fixnum.add648 = add i64 %ashr645, %ashr647, !dbg !38
  %50 = icmp sle i64 %fixnum.add648, 4611686018427387903, !dbg !38
  %51 = icmp sge i64 %fixnum.add648, -4611686018427387903, !dbg !38
  %fits_fixnum649 = and i1 %50, %51, !dbg !38
  br i1 %fits_fixnum649, label %tagnow636, label %bignum637, !dbg !38

tagnow636:                                        ; preds = %push_add635
  %shl651 = shl i64 %fixnum.add648, 1, !dbg !38
  %or652 = or i64 %shl651, 1, !dbg !38
  %as_obj653 = inttoptr i64 %or652 to %"struct.rubinius::Object"*, !dbg !38
  br label %cont638, !dbg !38

bignum637:                                        ; preds = %push_add635
  %big_value650 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add648) #1, !dbg !38
  br label %cont638, !dbg !38

cont638:                                          ; preds = %tagnow636, %bignum637
  %result654 = phi %"struct.rubinius::Object"* [ %big_value650, %bignum637 ], [ %as_obj653, %tagnow636 ], !dbg !38
  br label %continue630, !dbg !38

check_active662:                                  ; preds = %class_fallback628
  br label %continue630, !dbg !38

class_fallback666:                                ; preds = %is_tuple, %continue630
  store i32 105, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %52 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 1, i8 0), !dbg !38
  br label %return_pad, !dbg !38

serial_fallback667:                               ; No predecessors!
  store i32 105, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %53 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 1, i8 1), !dbg !38
  br label %return_pad, !dbg !38

continue668:                                      ; preds = %tuple_at
  %stack_pos681 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  %stack_load682 = load %"struct.rubinius::Object"** %stack_pos681, !dbg !38
  br label %return_pad, !dbg !38

ip112:                                            ; preds = %is_exception
  %54 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos683 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %54, %"struct.rubinius::Object"** %stack_pos683, !dbg !26
  %stack_pos684 = getelementptr %"struct.rubinius::Object"** %stack, i32 11, !dbg !26
  %stack_pos685 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load686 = load %"struct.rubinius::Object"** %stack_pos685, !dbg !26
  store %"struct.rubinius::Object"* %stack_load686, %"struct.rubinius::Object"** %stack_pos684, !dbg !26
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos687 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos687, !dbg !26
  %stack_pos688 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load689 = load %"struct.rubinius::Object"** %stack_pos688, !dbg !39
  %stack_pos690 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %stack_load689, %"struct.rubinius::Object"** %stack_pos690, !dbg !39
  %global_serial691 = load i32* inttoptr (i64 22553876 to i32*), !dbg !39
  %constant_cache692 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**), !dbg !39
  %constant_cache_pos693 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 4, !dbg !39
  %constant_scope694 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos693, !dbg !39
  %scope_pos695 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !39
  %frame_scope696 = load %"struct.rubinius::ConstantScope"** %scope_pos695, !dbg !39
  %same_scope697 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope694, %frame_scope696, !dbg !39
  br i1 %same_scope697, label %check_serial698, label %use_call700, !dbg !39

is_tuple:                                         ; preds = %continue630
  %stack_pos671 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load672 = load %"struct.rubinius::Object"** %stack_pos671, !dbg !38
  %cast673 = ptrtoint %"struct.rubinius::Object"* %stack_load672 to i64, !dbg !38
  %masked674 = and i64 %cast673, -9223372036854775807, !dbg !38
  %is_fixnum675 = icmp eq i64 %masked674, 1, !dbg !38
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load670 to %"struct.rubinius::Tuple"*, !dbg !38
  %as_int676 = ptrtoint %"struct.rubinius::Object"* %stack_load672 to i64, !dbg !38
  %ashr677 = ashr i64 %as_int676, 1, !dbg !38
  %table_size_pos = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 1, !dbg !38
  %table_size = load i64* %table_size_pos, !dbg !38
  %55 = sub i64 %table_size, 32, !dbg !38
  %56 = sdiv i64 %55, 8, !dbg !38
  %is_in_bounds = icmp slt i64 %ashr677, %56, !dbg !38
  %access_cmp = and i1 %is_fixnum675, %is_in_bounds, !dbg !38
  br i1 %access_cmp, label %tuple_at, label %class_fallback666, !dbg !38

tuple_at:                                         ; preds = %is_tuple
  %field_pos678 = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 2, i64 %ashr677, !dbg !38
  %tuple_at679 = load %"struct.rubinius::Object"** %field_pos678, !dbg !38
  %stack_pos680 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %tuple_at679, %"struct.rubinius::Object"** %stack_pos680, !dbg !38
  br label %continue668, !dbg !38

check_serial698:                                  ; preds = %ip112
  %serial_pos702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 7, !dbg !39
  %serial703 = load i32* %serial_pos702, !dbg !39
  %use_cache704 = icmp eq i32 %global_serial691, %serial703, !dbg !39
  br i1 %use_cache704, label %use_cache699, label %use_call700, !dbg !39

use_cache699:                                     ; preds = %check_serial698
  %value_pos705 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 2, !dbg !39
  %cached_value706 = load %"struct.rubinius::Object"** %value_pos705, !dbg !39
  br label %continue701, !dbg !39

use_call700:                                      ; preds = %check_serial698, %ip112
  store i32 118, i32* %ip_pos, !dbg !39
  %push_const_fast707 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !39
  %null_check710 = icmp eq %"struct.rubinius::Object"* %push_const_fast707, null, !dbg !39
  br i1 %null_check710, label %bail_out, label %check_active709, !dbg !39

continue701:                                      ; preds = %continue708, %use_cache699
  %constant711 = phi %"struct.rubinius::Object"* [ %cached_value706, %use_cache699 ], [ %push_const_fast707, %continue708 ], !dbg !39, !rbx-classid !40
  %stack_pos712 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %constant711, %"struct.rubinius::Object"** %stack_pos712, !dbg !39
  %stack_pos713 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  %stack_load714 = load %"struct.rubinius::Object"** %stack_pos713, !dbg !39, !rbx-classid !40
  %global_serial715 = load i32* inttoptr (i64 22553876 to i32*), !dbg !39
  %constant_cache716 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), !dbg !39
  %constant_cache_pos717 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 4, !dbg !39
  %constant_scope718 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos717, !dbg !39
  %scope_pos719 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !39
  %frame_scope720 = load %"struct.rubinius::ConstantScope"** %scope_pos719, !dbg !39
  %same_scope721 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope718, %frame_scope720, !dbg !39
  br i1 %same_scope721, label %check_serial722, label %use_call724, !dbg !39

continue708:                                      ; preds = %check_active709
  br label %continue701, !dbg !39

check_active709:                                  ; preds = %use_call700
  br label %continue708, !dbg !39

check_serial722:                                  ; preds = %continue701
  %serial_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 7, !dbg !39
  %serial727 = load i32* %serial_pos726, !dbg !39
  %use_under = icmp eq i32 %global_serial715, %serial727, !dbg !39
  br i1 %use_under, label %check_under, label %use_call724, !dbg !39

check_under:                                      ; preds = %check_serial722
  %value_pos728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 3, !dbg !39
  %cached_under = load %"struct.rubinius::Module"** %value_pos728, !dbg !39
  %downcast = bitcast %"struct.rubinius::Module"* %cached_under to %"struct.rubinius::Object"*, !dbg !39
  %use_cache729 = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load714, !dbg !39
  br i1 %use_cache729, label %use_cache723, label %use_call724, !dbg !39

use_cache723:                                     ; preds = %check_under
  %value_pos730 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 2, !dbg !39
  %cached_value731 = load %"struct.rubinius::Object"** %value_pos730, !dbg !39
  br label %continue725, !dbg !39

use_call724:                                      ; preds = %check_under, %check_serial722, %continue701
  store i32 120, i32* %ip_pos, !dbg !39
  %constant732 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load714) #0, !dbg !39
  %null_check735 = icmp eq %"struct.rubinius::Object"* %constant732, null, !dbg !39
  br i1 %null_check735, label %bail_out, label %check_active734, !dbg !39

continue725:                                      ; preds = %continue733, %use_cache723
  %constant736 = phi %"struct.rubinius::Object"* [ %cached_value731, %use_cache723 ], [ %constant732, %continue733 ], !dbg !39, !rbx-classid !41
  %stack_pos737 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %stack_pos737, !dbg !39
  %stack_pos738 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  %stack_load739 = load %"struct.rubinius::Object"** %stack_pos738, !dbg !39, !rbx-classid !41
  %stack_pos740 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load741 = load %"struct.rubinius::Object"** %stack_pos740, !dbg !39
  %stack_pos742 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %stack_load739, %"struct.rubinius::Object"** %stack_pos742, !dbg !39
  %stack_pos743 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %stack_load741, %"struct.rubinius::Object"** %stack_pos743, !dbg !39
  %stack_pos744 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load745 = load %"struct.rubinius::Object"** %stack_pos744, !dbg !39, !rbx-classid !41
  store %"struct.rubinius::Object"* %stack_load745, %"struct.rubinius::Object"** %out_args_recv, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !39
  store i32 1, i32* %out_args_total, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !39
  %stack_pos746 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos746, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !39
  %cache_const747 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565040 to %"struct.rubinius::CallSite"**), !dbg !39
  %execute_pos748 = getelementptr %"struct.rubinius::CallSite"* %cache_const747, i32 0, i32 2, !dbg !39
  %execute749 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos748, !dbg !39
  store i32 123, i32* %ip_pos, !dbg !39
  %call_site_execute750 = call %"struct.rubinius::Object"* %execute749(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const747, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check753 = icmp eq %"struct.rubinius::Object"* %call_site_execute750, null, !dbg !39
  br i1 %null_check753, label %bail_out, label %check_active752, !dbg !39

continue733:                                      ; preds = %check_active734
  br label %continue725, !dbg !39

check_active734:                                  ; preds = %use_call724
  br label %continue733, !dbg !39

continue751:                                      ; preds = %check_active752
  %stack_pos754 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %call_site_execute750, %"struct.rubinius::Object"** %stack_pos754, !dbg !39
  %stack_pos755 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load756 = load %"struct.rubinius::Object"** %stack_pos755, !dbg !39
  %as_int757 = ptrtoint %"struct.rubinius::Object"* %stack_load756 to i64, !dbg !39
  %and758 = and i64 %as_int757, 15, !dbg !39
  %is_true759 = icmp ne i64 %and758, 10, !dbg !39
  br i1 %is_true759, label %ip130, label %continue760, !dbg !39

check_active752:                                  ; preds = %continue725
  br label %continue751, !dbg !39

continue760:                                      ; preds = %continue751
  br label %ip128, !dbg !39

ip128:                                            ; preds = %continue760
  br label %ip139, !dbg !39

continue761:                                      ; No predecessors!
  br label %ip130, !dbg !39

ip139:                                            ; preds = %ip128
  %stack_pos762 = getelementptr %"struct.rubinius::Object"** %stack, i32 11, !dbg !42
  %stack_local = load %"struct.rubinius::Object"** %stack_pos762, !dbg !42
  %stack_pos763 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack_pos763, !dbg !42
  %stack_pos764 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load765 = load %"struct.rubinius::Object"** %stack_pos764, !dbg !42
  %57 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load765), !dbg !42
  br label %bail_out, !dbg !42

continue766:                                      ; No predecessors!
  br label %ip130, !dbg !39

ip130:                                            ; preds = %continue766, %continue761, %continue751
  %stack_pos767 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos767, !dbg !42
  %stack_pos768 = getelementptr %"struct.rubinius::Object"** %stack, i32 12, !dbg !42
  %stack_local769 = load %"struct.rubinius::Object"** %stack_pos768, !dbg !42
  %stack_pos770 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"* %stack_local769, %"struct.rubinius::Object"** %stack_pos770, !dbg !42
  %stack_pos771 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  %stack_load772 = load %"struct.rubinius::Object"** %stack_pos771, !dbg !42
  %58 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load772), !dbg !42
  %stack_pos773 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load774 = load %"struct.rubinius::Object"** %stack_pos773, !dbg !42, !rbx-classid !12
  br label %return_pad, !dbg !42

ip44:                                             ; preds = %continue107, %continue53
  %stack_pos775 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos775, !dbg !18
  br label %ip45, !dbg !18

ip149:                                            ; preds = %continue211, %continue28
  %stack_pos776 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !43
  %stack_load777 = load %"struct.rubinius::Object"** %stack_pos776, !dbg !43
  %stack_pos778 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %stack_load777, %"struct.rubinius::Object"** %stack_pos778, !dbg !43
  %global_serial779 = load i32* inttoptr (i64 22553876 to i32*), !dbg !43
  %constant_cache780 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**), !dbg !43
  %constant_cache_pos781 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 4, !dbg !43
  %constant_scope782 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos781, !dbg !43
  %scope_pos783 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !43
  %frame_scope784 = load %"struct.rubinius::ConstantScope"** %scope_pos783, !dbg !43
  %same_scope785 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope782, %frame_scope784, !dbg !43
  br i1 %same_scope785, label %check_serial786, label %use_call788, !dbg !43

check_serial786:                                  ; preds = %ip149
  %serial_pos790 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 7, !dbg !43
  %serial791 = load i32* %serial_pos790, !dbg !43
  %use_cache792 = icmp eq i32 %global_serial779, %serial791, !dbg !43
  br i1 %use_cache792, label %use_cache787, label %use_call788, !dbg !43

use_cache787:                                     ; preds = %check_serial786
  %value_pos793 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 2, !dbg !43
  %cached_value794 = load %"struct.rubinius::Object"** %value_pos793, !dbg !43
  br label %continue789, !dbg !43

use_call788:                                      ; preds = %check_serial786, %ip149
  store i32 150, i32* %ip_pos, !dbg !43
  %push_const_fast795 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !43
  %null_check798 = icmp eq %"struct.rubinius::Object"* %push_const_fast795, null, !dbg !43
  br i1 %null_check798, label %bail_out, label %check_active797, !dbg !43

continue789:                                      ; preds = %continue796, %use_cache787
  %constant799 = phi %"struct.rubinius::Object"* [ %cached_value794, %use_cache787 ], [ %push_const_fast795, %continue796 ], !dbg !43, !rbx-classid !44
  %stack_pos800 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %stack_pos800, !dbg !43
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  %stack_load802 = load %"struct.rubinius::Object"** %stack_pos801, !dbg !43, !rbx-classid !44
  %stack_pos803 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load804 = load %"struct.rubinius::Object"** %stack_pos803, !dbg !43
  %stack_pos805 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %stack_load802, %"struct.rubinius::Object"** %stack_pos805, !dbg !43
  %stack_pos806 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %stack_load804, %"struct.rubinius::Object"** %stack_pos806, !dbg !43
  %stack_pos807 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load808 = load %"struct.rubinius::Object"** %stack_pos807, !dbg !43, !rbx-classid !44
  store %"struct.rubinius::Object"* %stack_load808, %"struct.rubinius::Object"** %out_args_recv, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !43
  store i32 1, i32* %out_args_total, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !43
  %stack_pos809 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos809, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !43
  %cache_const810 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565280 to %"struct.rubinius::CallSite"**), !dbg !43
  %execute_pos811 = getelementptr %"struct.rubinius::CallSite"* %cache_const810, i32 0, i32 2, !dbg !43
  %execute812 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos811, !dbg !43
  store i32 153, i32* %ip_pos, !dbg !43
  %call_site_execute813 = call %"struct.rubinius::Object"* %execute812(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const810, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute813, null, !dbg !43
  br i1 %null_check816, label %bail_out, label %check_active815, !dbg !43

continue796:                                      ; preds = %check_active797
  br label %continue789, !dbg !43

check_active797:                                  ; preds = %use_call788
  br label %continue796, !dbg !43

continue814:                                      ; preds = %check_active815
  %stack_pos817 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %call_site_execute813, %"struct.rubinius::Object"** %stack_pos817, !dbg !43
  %stack_pos818 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load819 = load %"struct.rubinius::Object"** %stack_pos818, !dbg !43
  %as_int820 = ptrtoint %"struct.rubinius::Object"* %stack_load819 to i64, !dbg !43
  %and821 = and i64 %as_int820, 15, !dbg !43
  %is_true822 = icmp eq i64 %and821, 10, !dbg !43
  br i1 %is_true822, label %ip313, label %continue823, !dbg !43

check_active815:                                  ; preds = %continue789
  br label %continue814, !dbg !43

continue823:                                      ; preds = %continue814
  br label %ip158, !dbg !43

ip158:                                            ; preds = %continue823
  %system_object824 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !45
  %stack_pos825 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %system_object824, %"struct.rubinius::Object"** %stack_pos825, !dbg !45
  %local_pos826 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !45
  %local827 = load %"struct.rubinius::Object"** %local_pos826, !dbg !45, !rbx-classid !14
  %stack_pos828 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %stack_pos828, !dbg !45
  %stack_pos829 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  %stack_load830 = load %"struct.rubinius::Object"** %stack_pos829, !dbg !45, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load830, %"struct.rubinius::Object"** %out_args_recv, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !45
  store i32 0, i32* %out_args_total, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !45
  %cache_const831 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565352 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos832 = getelementptr %"struct.rubinius::CallSite"* %cache_const831, i32 0, i32 2, !dbg !45
  %execute833 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos832, !dbg !45
  store i32 162, i32* %ip_pos, !dbg !45
  %call_site_execute834 = call %"struct.rubinius::Object"* %execute833(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const831, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check837 = icmp eq %"struct.rubinius::Object"* %call_site_execute834, null, !dbg !45
  br i1 %null_check837, label %bail_out, label %check_active836, !dbg !45

continue835:                                      ; preds = %check_active836
  %stack_pos838 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute834, %"struct.rubinius::Object"** %stack_pos838, !dbg !45
  %global_serial839 = load i32* inttoptr (i64 22553876 to i32*), !dbg !45
  %constant_cache840 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**), !dbg !45
  %constant_cache_pos841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 4, !dbg !45
  %constant_scope842 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos841, !dbg !45
  %scope_pos843 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !45
  %frame_scope844 = load %"struct.rubinius::ConstantScope"** %scope_pos843, !dbg !45
  %same_scope845 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope842, %frame_scope844, !dbg !45
  br i1 %same_scope845, label %check_serial846, label %use_call848, !dbg !45

check_active836:                                  ; preds = %ip158
  br label %continue835, !dbg !45

check_serial846:                                  ; preds = %continue835
  %serial_pos850 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 7, !dbg !45
  %serial851 = load i32* %serial_pos850, !dbg !45
  %use_cache852 = icmp eq i32 %global_serial839, %serial851, !dbg !45
  br i1 %use_cache852, label %use_cache847, label %use_call848, !dbg !45

use_cache847:                                     ; preds = %check_serial846
  %value_pos853 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 2, !dbg !45
  %cached_value854 = load %"struct.rubinius::Object"** %value_pos853, !dbg !45
  br label %continue849, !dbg !45

use_call848:                                      ; preds = %check_serial846, %continue835
  store i32 165, i32* %ip_pos, !dbg !45
  %push_const_fast855 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !45
  %null_check858 = icmp eq %"struct.rubinius::Object"* %push_const_fast855, null, !dbg !45
  br i1 %null_check858, label %bail_out, label %check_active857, !dbg !45

continue849:                                      ; preds = %continue856, %use_cache847
  %constant859 = phi %"struct.rubinius::Object"* [ %cached_value854, %use_cache847 ], [ %push_const_fast855, %continue856 ], !dbg !45, !rbx-classid !46
  %stack_pos860 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !45
  store %"struct.rubinius::Object"* %constant859, %"struct.rubinius::Object"** %stack_pos860, !dbg !45
  %stack_pos861 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, !dbg !45
  %stack_pos862 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  %stack_load863 = load %"struct.rubinius::Object"** %stack_pos862, !dbg !45
  store %"struct.rubinius::Object"* %stack_load863, %"struct.rubinius::Object"** %out_args_recv, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !45
  store i32 3, i32* %out_args_total, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !45
  %stack_pos864 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos864, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !45
  %cache_const865 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565408 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos866 = getelementptr %"struct.rubinius::CallSite"* %cache_const865, i32 0, i32 2, !dbg !45
  %execute867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos866, !dbg !45
  store i32 169, i32* %ip_pos, !dbg !45
  %call_site_execute868 = call %"struct.rubinius::Object"* %execute867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const865, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check871 = icmp eq %"struct.rubinius::Object"* %call_site_execute868, null, !dbg !45
  br i1 %null_check871, label %bail_out, label %check_active870, !dbg !45

continue856:                                      ; preds = %check_active857
  br label %continue849, !dbg !45

check_active857:                                  ; preds = %use_call848
  br label %continue856, !dbg !45

continue869:                                      ; preds = %check_active870
  %stack_pos872 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %stack_pos872, !dbg !45
  %local_pos873 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !45
  %stack_pos874 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  %stack_load875 = load %"struct.rubinius::Object"** %stack_pos874, !dbg !45
  store %"struct.rubinius::Object"* %stack_load875, %"struct.rubinius::Object"** %local_pos873, !dbg !45
  %local_pos876 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %local877 = load %"struct.rubinius::Object"** %local_pos876, !dbg !47, !rbx-classid !19
  %stack_pos878 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %local877, %"struct.rubinius::Object"** %stack_pos878, !dbg !47
  %stack_pos879 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos879, !dbg !47
  %stack_pos880 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load881 = load %"struct.rubinius::Object"** %stack_pos880, !dbg !47, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load881, %"struct.rubinius::Object"** %out_args_recv, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !47
  store i32 1, i32* %out_args_total, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !47
  %stack_pos882 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos882, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !47
  %cache_const883 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565480 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos884 = getelementptr %"struct.rubinius::CallSite"* %cache_const883, i32 0, i32 2, !dbg !47
  %execute885 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos884, !dbg !47
  store i32 178, i32* %ip_pos, !dbg !47
  %call_site_execute886 = call %"struct.rubinius::Object"* %execute885(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const883, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check889 = icmp eq %"struct.rubinius::Object"* %call_site_execute886, null, !dbg !47
  br i1 %null_check889, label %bail_out, label %check_active888, !dbg !47

check_active870:                                  ; preds = %continue849
  br label %continue869, !dbg !45

continue887:                                      ; preds = %check_active888
  %stack_pos890 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %call_site_execute886, %"struct.rubinius::Object"** %stack_pos890, !dbg !47
  %stack_pos891 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load892 = load %"struct.rubinius::Object"** %stack_pos891, !dbg !47
  %as_int893 = ptrtoint %"struct.rubinius::Object"* %stack_load892 to i64, !dbg !47
  %and894 = and i64 %as_int893, 15, !dbg !47
  %is_true895 = icmp eq i64 %and894, 10, !dbg !47
  br i1 %is_true895, label %ip194, label %continue896, !dbg !47

check_active888:                                  ; preds = %continue869
  br label %continue887, !dbg !47

continue896:                                      ; preds = %continue887
  br label %ip183, !dbg !47

ip183:                                            ; preds = %continue896
  %local_pos897 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %local898 = load %"struct.rubinius::Object"** %local_pos897, !dbg !47, !rbx-classid !19
  %stack_pos899 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack_pos899, !dbg !47
  %self_pos900 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !47
  %self901 = load %"struct.rubinius::Object"** %self_pos900, !dbg !47
  %obj_array902 = bitcast %"struct.rubinius::Object"* %self901 to %"struct.rubinius::Object"**, !dbg !47
  %field_pos903 = getelementptr %"struct.rubinius::Object"** %obj_array902, i32 3, !dbg !47
  %field904 = load %"struct.rubinius::Object"** %field_pos903, !dbg !47
  %stack_pos905 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"* %field904, %"struct.rubinius::Object"** %stack_pos905, !dbg !47
  %stack_pos906 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load907 = load %"struct.rubinius::Object"** %stack_pos906, !dbg !47, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load907, %"struct.rubinius::Object"** %out_args_recv, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !47
  store i32 1, i32* %out_args_total, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !47
  %stack_pos908 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos908, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !47
  %cache_const909 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565552 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos910 = getelementptr %"struct.rubinius::CallSite"* %cache_const909, i32 0, i32 2, !dbg !47
  %execute911 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos910, !dbg !47
  store i32 187, i32* %ip_pos, !dbg !47
  %call_site_execute912 = call %"struct.rubinius::Object"* %execute911(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const909, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check915 = icmp eq %"struct.rubinius::Object"* %call_site_execute912, null, !dbg !47
  br i1 %null_check915, label %bail_out, label %check_active914, !dbg !47

continue913:                                      ; preds = %check_active914
  %stack_pos916 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %stack_pos916, !dbg !47
  %local_pos917 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %stack_pos918 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load919 = load %"struct.rubinius::Object"** %stack_pos918, !dbg !47
  store %"struct.rubinius::Object"* %stack_load919, %"struct.rubinius::Object"** %local_pos917, !dbg !47
  br label %ip195, !dbg !47

check_active914:                                  ; preds = %ip183
  br label %continue913, !dbg !47

continue920:                                      ; No predecessors!
  br label %ip194, !dbg !47

ip195:                                            ; preds = %ip194, %continue913
  %local_pos921 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !48
  %local922 = load %"struct.rubinius::Object"** %local_pos921, !dbg !48, !rbx-classid !19
  %stack_pos923 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %stack_pos923, !dbg !48
  %stack_pos924 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos924, !dbg !48
  %stack_pos925 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load926 = load %"struct.rubinius::Object"** %stack_pos925, !dbg !48, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load926, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos927 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos927, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const928 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565648 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos929 = getelementptr %"struct.rubinius::CallSite"* %cache_const928, i32 0, i32 2, !dbg !48
  %execute930 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos929, !dbg !48
  store i32 199, i32* %ip_pos, !dbg !48
  %call_site_execute931 = call %"struct.rubinius::Object"* %execute930(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const928, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check934 = icmp eq %"struct.rubinius::Object"* %call_site_execute931, null, !dbg !48
  br i1 %null_check934, label %bail_out, label %check_active933, !dbg !48

continue932:                                      ; preds = %check_active933
  %stack_pos935 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack_pos935, !dbg !48
  %stack_pos936 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load937 = load %"struct.rubinius::Object"** %stack_pos936, !dbg !48
  %stack_pos938 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load937, %"struct.rubinius::Object"** %stack_pos938, !dbg !48
  %stack_pos939 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load940 = load %"struct.rubinius::Object"** %stack_pos939, !dbg !48
  %as_int941 = ptrtoint %"struct.rubinius::Object"* %stack_load940 to i64, !dbg !48
  %and942 = and i64 %as_int941, 15, !dbg !48
  %is_true943 = icmp ne i64 %and942, 10, !dbg !48
  br i1 %is_true943, label %ip213, label %continue944, !dbg !48

check_active933:                                  ; preds = %ip195
  br label %continue932, !dbg !48

continue944:                                      ; preds = %continue932
  br label %ip205, !dbg !48

ip205:                                            ; preds = %continue944
  %local_pos945 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !48
  %local946 = load %"struct.rubinius::Object"** %local_pos945, !dbg !48, !rbx-classid !19
  %stack_pos947 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %stack_pos947, !dbg !48
  %self_pos948 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !48
  %self949 = load %"struct.rubinius::Object"** %self_pos948, !dbg !48
  %obj_array950 = bitcast %"struct.rubinius::Object"* %self949 to %"struct.rubinius::Object"**, !dbg !48
  %field_pos951 = getelementptr %"struct.rubinius::Object"** %obj_array950, i32 3, !dbg !48
  %field952 = load %"struct.rubinius::Object"** %field_pos951, !dbg !48
  %stack_pos953 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %field952, %"struct.rubinius::Object"** %stack_pos953, !dbg !48
  %stack_pos954 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load955 = load %"struct.rubinius::Object"** %stack_pos954, !dbg !48, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load955, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos956 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos956, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const957 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565736 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos958 = getelementptr %"struct.rubinius::CallSite"* %cache_const957, i32 0, i32 2, !dbg !48
  %execute959 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos958, !dbg !48
  store i32 210, i32* %ip_pos, !dbg !48
  %call_site_execute960 = call %"struct.rubinius::Object"* %execute959(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const957, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check963 = icmp eq %"struct.rubinius::Object"* %call_site_execute960, null, !dbg !48
  br i1 %null_check963, label %bail_out, label %check_active962, !dbg !48

continue961:                                      ; preds = %check_active962
  %stack_pos964 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute960, %"struct.rubinius::Object"** %stack_pos964, !dbg !48
  br label %ip213, !dbg !48

ip213:                                            ; preds = %continue961, %continue932
  %stack_pos965 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load966 = load %"struct.rubinius::Object"** %stack_pos965, !dbg !48
  %as_int967 = ptrtoint %"struct.rubinius::Object"* %stack_load966 to i64, !dbg !48
  %and968 = and i64 %as_int967, 15, !dbg !48
  %is_true969 = icmp eq i64 %and968, 10, !dbg !48
  br i1 %is_true969, label %ip219, label %continue970, !dbg !48

check_active962:                                  ; preds = %ip205
  br label %continue961, !dbg !48

continue970:                                      ; preds = %ip213
  br label %ip215, !dbg !48

ip215:                                            ; preds = %continue970
  %stack_pos971 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos971, !dbg !48
  %stack_pos972 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load973 = load %"struct.rubinius::Object"** %stack_pos972, !dbg !48, !rbx-classid !12
  br label %return_pad, !dbg !48

ip219:                                            ; preds = %ip213
  %stack_pos974 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos974, !dbg !48
  %system_object975 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !49
  %stack_pos976 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %system_object975, %"struct.rubinius::Object"** %stack_pos976, !dbg !49
  %local_pos977 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !49
  %local978 = load %"struct.rubinius::Object"** %local_pos977, !dbg !49, !rbx-classid !14
  %stack_pos979 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %stack_pos979, !dbg !49
  %stack_pos980 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  %stack_load981 = load %"struct.rubinius::Object"** %stack_pos980, !dbg !49, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load981, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 0, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %cache_const982 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565848 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos983 = getelementptr %"struct.rubinius::CallSite"* %cache_const982, i32 0, i32 2, !dbg !49
  %execute984 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos983, !dbg !49
  store i32 224, i32* %ip_pos, !dbg !49
  %call_site_execute985 = call %"struct.rubinius::Object"* %execute984(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const982, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check988 = icmp eq %"struct.rubinius::Object"* %call_site_execute985, null, !dbg !49
  br i1 %null_check988, label %bail_out, label %check_active987, !dbg !49

continue986:                                      ; preds = %check_active987
  %stack_pos989 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute985, %"struct.rubinius::Object"** %stack_pos989, !dbg !49
  %global_serial990 = load i32* inttoptr (i64 22553876 to i32*), !dbg !49
  %constant_cache991 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos992 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 4, !dbg !49
  %constant_scope993 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos992, !dbg !49
  %scope_pos994 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !49
  %frame_scope995 = load %"struct.rubinius::ConstantScope"** %scope_pos994, !dbg !49
  %same_scope996 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope993, %frame_scope995, !dbg !49
  br i1 %same_scope996, label %check_serial997, label %use_call999, !dbg !49

check_active987:                                  ; preds = %ip219
  br label %continue986, !dbg !49

check_serial997:                                  ; preds = %continue986
  %serial_pos1001 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 7, !dbg !49
  %serial1002 = load i32* %serial_pos1001, !dbg !49
  %use_cache1003 = icmp eq i32 %global_serial990, %serial1002, !dbg !49
  br i1 %use_cache1003, label %use_cache998, label %use_call999, !dbg !49

use_cache998:                                     ; preds = %check_serial997
  %value_pos1004 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 2, !dbg !49
  %cached_value1005 = load %"struct.rubinius::Object"** %value_pos1004, !dbg !49
  br label %continue1000, !dbg !49

use_call999:                                      ; preds = %check_serial997, %continue986
  store i32 227, i32* %ip_pos, !dbg !49
  %push_const_fast1006 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check1009 = icmp eq %"struct.rubinius::Object"* %push_const_fast1006, null, !dbg !49
  br i1 %null_check1009, label %bail_out, label %check_active1008, !dbg !49

continue1000:                                     ; preds = %continue1007, %use_cache998
  %constant1010 = phi %"struct.rubinius::Object"* [ %cached_value1005, %use_cache998 ], [ %push_const_fast1006, %continue1007 ], !dbg !49, !rbx-classid !50
  %stack_pos1011 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !49
  store %"struct.rubinius::Object"* %constant1010, %"struct.rubinius::Object"** %stack_pos1011, !dbg !49
  %stack_pos1012 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1012, !dbg !49
  %stack_pos1013 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  %stack_load1014 = load %"struct.rubinius::Object"** %stack_pos1013, !dbg !49
  store %"struct.rubinius::Object"* %stack_load1014, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 3, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %stack_pos1015 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos1015, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !49
  %cache_const1016 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565904 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos1017 = getelementptr %"struct.rubinius::CallSite"* %cache_const1016, i32 0, i32 2, !dbg !49
  %execute1018 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1017, !dbg !49
  store i32 231, i32* %ip_pos, !dbg !49
  %call_site_execute1019 = call %"struct.rubinius::Object"* %execute1018(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1016, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check1022 = icmp eq %"struct.rubinius::Object"* %call_site_execute1019, null, !dbg !49
  br i1 %null_check1022, label %bail_out, label %check_active1021, !dbg !49

continue1007:                                     ; preds = %check_active1008
  br label %continue1000, !dbg !49

check_active1008:                                 ; preds = %use_call999
  br label %continue1007, !dbg !49

continue1020:                                     ; preds = %check_active1021
  %stack_pos1023 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %stack_pos1023, !dbg !49
  %local_pos1024 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !49
  %stack_pos1025 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  %stack_load1026 = load %"struct.rubinius::Object"** %stack_pos1025, !dbg !49
  store %"struct.rubinius::Object"* %stack_load1026, %"struct.rubinius::Object"** %local_pos1024, !dbg !49
  %local_pos1027 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %local1028 = load %"struct.rubinius::Object"** %local_pos1027, !dbg !51, !rbx-classid !52
  %stack_pos1029 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %local1028, %"struct.rubinius::Object"** %stack_pos1029, !dbg !51
  %stack_pos1030 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1030, !dbg !51
  %stack_pos1031 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1032 = load %"struct.rubinius::Object"** %stack_pos1031, !dbg !51, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1032, %"struct.rubinius::Object"** %out_args_recv, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !51
  store i32 1, i32* %out_args_total, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !51
  %stack_pos1033 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos1033, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !51
  %cache_const1034 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565976 to %"struct.rubinius::CallSite"**), !dbg !51
  %execute_pos1035 = getelementptr %"struct.rubinius::CallSite"* %cache_const1034, i32 0, i32 2, !dbg !51
  %execute1036 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1035, !dbg !51
  store i32 240, i32* %ip_pos, !dbg !51
  %call_site_execute1037 = call %"struct.rubinius::Object"* %execute1036(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1034, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1040 = icmp eq %"struct.rubinius::Object"* %call_site_execute1037, null, !dbg !51
  br i1 %null_check1040, label %bail_out, label %check_active1039, !dbg !51

check_active1021:                                 ; preds = %continue1000
  br label %continue1020, !dbg !49

continue1038:                                     ; preds = %check_active1039
  %stack_pos1041 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %call_site_execute1037, %"struct.rubinius::Object"** %stack_pos1041, !dbg !51
  %stack_pos1042 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1043 = load %"struct.rubinius::Object"** %stack_pos1042, !dbg !51
  %as_int1044 = ptrtoint %"struct.rubinius::Object"* %stack_load1043 to i64, !dbg !51
  %and1045 = and i64 %as_int1044, 15, !dbg !51
  %is_true1046 = icmp eq i64 %and1045, 10, !dbg !51
  br i1 %is_true1046, label %ip256, label %continue1047, !dbg !51

check_active1039:                                 ; preds = %continue1020
  br label %continue1038, !dbg !51

continue1047:                                     ; preds = %continue1038
  br label %ip245, !dbg !51

ip245:                                            ; preds = %continue1047
  %local_pos1048 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %local1049 = load %"struct.rubinius::Object"** %local_pos1048, !dbg !51, !rbx-classid !52
  %stack_pos1050 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %stack_pos1050, !dbg !51
  %self_pos1051 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !51
  %self1052 = load %"struct.rubinius::Object"** %self_pos1051, !dbg !51
  %obj_array1053 = bitcast %"struct.rubinius::Object"* %self1052 to %"struct.rubinius::Object"**, !dbg !51
  %field_pos1054 = getelementptr %"struct.rubinius::Object"** %obj_array1053, i32 3, !dbg !51
  %field1055 = load %"struct.rubinius::Object"** %field_pos1054, !dbg !51
  %stack_pos1056 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"* %field1055, %"struct.rubinius::Object"** %stack_pos1056, !dbg !51
  %stack_pos1057 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1058 = load %"struct.rubinius::Object"** %stack_pos1057, !dbg !51, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1058, %"struct.rubinius::Object"** %out_args_recv, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !51
  store i32 1, i32* %out_args_total, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !51
  %stack_pos1059 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos1059, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !51
  %cache_const1060 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566048 to %"struct.rubinius::CallSite"**), !dbg !51
  %execute_pos1061 = getelementptr %"struct.rubinius::CallSite"* %cache_const1060, i32 0, i32 2, !dbg !51
  %execute1062 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1061, !dbg !51
  store i32 249, i32* %ip_pos, !dbg !51
  %call_site_execute1063 = call %"struct.rubinius::Object"* %execute1062(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1060, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1066 = icmp eq %"struct.rubinius::Object"* %call_site_execute1063, null, !dbg !51
  br i1 %null_check1066, label %bail_out, label %check_active1065, !dbg !51

continue1064:                                     ; preds = %check_active1065
  %stack_pos1067 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %stack_pos1067, !dbg !51
  %local_pos1068 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %stack_pos1069 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1070 = load %"struct.rubinius::Object"** %stack_pos1069, !dbg !51
  store %"struct.rubinius::Object"* %stack_load1070, %"struct.rubinius::Object"** %local_pos1068, !dbg !51
  br label %ip257, !dbg !51

check_active1065:                                 ; preds = %ip245
  br label %continue1064, !dbg !51

continue1071:                                     ; No predecessors!
  br label %ip256, !dbg !51

ip257:                                            ; preds = %ip256, %continue1064
  %local_pos1072 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !53
  %local1073 = load %"struct.rubinius::Object"** %local_pos1072, !dbg !53, !rbx-classid !14
  %stack_pos1074 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %stack_pos1074, !dbg !53
  %stack_pos1075 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1076 = load %"struct.rubinius::Object"** %stack_pos1075, !dbg !53, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load1076, %"struct.rubinius::Object"** %out_args_recv, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !53
  store i32 0, i32* %out_args_total, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !53
  %cache_const1077 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566136 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos1078 = getelementptr %"struct.rubinius::CallSite"* %cache_const1077, i32 0, i32 2, !dbg !53
  %execute1079 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1078, !dbg !53
  store i32 260, i32* %ip_pos, !dbg !53
  %call_site_execute1080 = call %"struct.rubinius::Object"* %execute1079(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1077, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1083 = icmp eq %"struct.rubinius::Object"* %call_site_execute1080, null, !dbg !53
  br i1 %null_check1083, label %bail_out, label %check_active1082, !dbg !53

continue1081:                                     ; preds = %check_active1082
  %stack_pos1084 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %call_site_execute1080, %"struct.rubinius::Object"** %stack_pos1084, !dbg !53
  %stack_pos1085 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1086 = load %"struct.rubinius::Object"** %stack_pos1085, !dbg !53
  %as_int1087 = ptrtoint %"struct.rubinius::Object"* %stack_load1086 to i64, !dbg !53
  %and1088 = and i64 %as_int1087, 15, !dbg !53
  %is_true1089 = icmp eq i64 %and1088, 10, !dbg !53
  br i1 %is_true1089, label %ip275, label %continue1090, !dbg !53

check_active1082:                                 ; preds = %ip257
  br label %continue1081, !dbg !53

continue1090:                                     ; preds = %continue1081
  br label %ip265, !dbg !53

ip265:                                            ; preds = %continue1090
  %local_pos1091 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !53
  %local1092 = load %"struct.rubinius::Object"** %local_pos1091, !dbg !53, !rbx-classid !52
  %stack_pos1093 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %stack_pos1093, !dbg !53
  %stack_pos1094 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1094, !dbg !53
  %stack_pos1095 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1096 = load %"struct.rubinius::Object"** %stack_pos1095, !dbg !53, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1096, %"struct.rubinius::Object"** %out_args_recv, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !53
  store i32 1, i32* %out_args_total, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !53
  %stack_pos1097 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos1097, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !53
  %cache_const1098 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566200 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos1099 = getelementptr %"struct.rubinius::CallSite"* %cache_const1098, i32 0, i32 2, !dbg !53
  %execute1100 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1099, !dbg !53
  store i32 268, i32* %ip_pos, !dbg !53
  %call_site_execute1101 = call %"struct.rubinius::Object"* %execute1100(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1098, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1104 = icmp eq %"struct.rubinius::Object"* %call_site_execute1101, null, !dbg !53
  br i1 %null_check1104, label %bail_out, label %check_active1103, !dbg !53

continue1102:                                     ; preds = %check_active1103
  %stack_pos1105 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %stack_pos1105, !dbg !53
  %local_pos1106 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !53
  %stack_pos1107 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1108 = load %"struct.rubinius::Object"** %stack_pos1107, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1108, %"struct.rubinius::Object"** %local_pos1106, !dbg !53
  br label %ip276, !dbg !53

check_active1103:                                 ; preds = %ip265
  br label %continue1102, !dbg !53

continue1109:                                     ; No predecessors!
  br label %ip275, !dbg !53

ip276:                                            ; preds = %ip275, %continue1102
  %local_pos1110 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !54
  %local1111 = load %"struct.rubinius::Object"** %local_pos1110, !dbg !54, !rbx-classid !52
  %stack_pos1112 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %stack_pos1112, !dbg !54
  %local_pos1113 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !54
  %local1114 = load %"struct.rubinius::Object"** %local_pos1113, !dbg !54, !rbx-classid !19
  %stack_pos1115 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %local1114, %"struct.rubinius::Object"** %stack_pos1115, !dbg !54
  %stack_pos1116 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1117 = load %"struct.rubinius::Object"** %stack_pos1116, !dbg !54, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1117, %"struct.rubinius::Object"** %out_args_recv, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !54
  store i32 1, i32* %out_args_total, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !54
  %stack_pos1118 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1118, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !54
  %cache_const1119 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566304 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1120 = getelementptr %"struct.rubinius::CallSite"* %cache_const1119, i32 0, i32 2, !dbg !54
  %execute1121 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1120, !dbg !54
  store i32 281, i32* %ip_pos, !dbg !54
  %call_site_execute1122 = call %"struct.rubinius::Object"* %execute1121(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1119, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1125 = icmp eq %"struct.rubinius::Object"* %call_site_execute1122, null, !dbg !54
  br i1 %null_check1125, label %bail_out, label %check_active1124, !dbg !54

continue1123:                                     ; preds = %check_active1124
  %stack_pos1126 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute1122, %"struct.rubinius::Object"** %stack_pos1126, !dbg !54
  %stack_pos1127 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1128 = load %"struct.rubinius::Object"** %stack_pos1127, !dbg !54
  %as_int1129 = ptrtoint %"struct.rubinius::Object"* %stack_load1128 to i64, !dbg !54
  %and1130 = and i64 %as_int1129, 15, !dbg !54
  %is_true1131 = icmp eq i64 %and1130, 10, !dbg !54
  br i1 %is_true1131, label %ip296, label %continue1132, !dbg !54

check_active1124:                                 ; preds = %ip276
  br label %continue1123, !dbg !54

continue1132:                                     ; preds = %continue1123
  br label %ip286, !dbg !54

ip286:                                            ; preds = %continue1132
  %59 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !54
  %self1133 = load %"struct.rubinius::Object"** %59, !dbg !54
  %stack_pos1134 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %stack_pos1134, !dbg !54
  %stack_pos1135 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1135, !dbg !54
  %stack_pos1136 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1136, !dbg !54
  %stack_pos1137 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1138 = load %"struct.rubinius::Object"** %stack_pos1137, !dbg !54
  store %"struct.rubinius::Object"* %stack_load1138, %"struct.rubinius::Object"** %out_args_recv, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !54
  store i32 2, i32* %out_args_total, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !54
  %stack_pos1139 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1139, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !54
  %cache_const1140 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566376 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1141 = getelementptr %"struct.rubinius::CallSite"* %cache_const1140, i32 0, i32 2, !dbg !54
  %execute1142 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1141, !dbg !54
  store i32 290, i32* %ip_pos, !dbg !54
  %call_site_execute1143 = call %"struct.rubinius::Object"* %execute1142(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1140, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1143, null, !dbg !54
  br i1 %null_check1146, label %bail_out, label %check_active1145, !dbg !54

continue1144:                                     ; preds = %check_active1145
  %stack_pos1147 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute1143, %"struct.rubinius::Object"** %stack_pos1147, !dbg !54
  %stack_pos1148 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1149 = load %"struct.rubinius::Object"** %stack_pos1148, !dbg !54
  br label %return_pad, !dbg !54

ip296:                                            ; preds = %continue1123
  %stack_pos1150 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1150, !dbg !54
  %local_pos1151 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !55
  %local1152 = load %"struct.rubinius::Object"** %local_pos1151, !dbg !55, !rbx-classid !52
  %stack_pos1153 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %stack_pos1153, !dbg !55
  %local_pos1154 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !55
  %local1155 = load %"struct.rubinius::Object"** %local_pos1154, !dbg !55, !rbx-classid !19
  %stack_pos1156 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"* %local1155, %"struct.rubinius::Object"** %stack_pos1156, !dbg !55
  %stack_pos1157 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1158 = load %"struct.rubinius::Object"** %stack_pos1157, !dbg !55, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1158, %"struct.rubinius::Object"** %out_args_recv, !dbg !55
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !55
  store i32 1, i32* %out_args_total, !dbg !55
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !55
  %stack_pos1159 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"** %stack_pos1159, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !55
  %cache_const1160 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), !dbg !55
  %execute_pos1161 = getelementptr %"struct.rubinius::CallSite"* %cache_const1160, i32 0, i32 2, !dbg !55
  %execute1162 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1161, !dbg !55
  store i32 302, i32* %ip_pos, !dbg !55
  %call_site_execute1163 = call %"struct.rubinius::Object"* %execute1162(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1160, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !55
  %null_check1166 = icmp eq %"struct.rubinius::Object"* %call_site_execute1163, null, !dbg !55
  br i1 %null_check1166, label %bail_out, label %check_active1165, !dbg !55

check_active1145:                                 ; preds = %ip286
  br label %continue1144, !dbg !54

continue1164:                                     ; preds = %check_active1165
  %stack_pos1167 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %stack_pos1167, !dbg !55
  %stack_pos1168 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1168, !dbg !55
  %stack_pos1169 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1170 = load %"struct.rubinius::Object"** %stack_pos1169, !dbg !55
  store %"struct.rubinius::Object"* %stack_load1170, %"struct.rubinius::Object"** %out_args_recv, !dbg !55
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !55
  store i32 1, i32* %out_args_total, !dbg !55
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !55
  %stack_pos1171 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"** %stack_pos1171, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !55
  %cache_const1172 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566504 to %"struct.rubinius::CallSite"**), !dbg !55
  %execute_pos1173 = getelementptr %"struct.rubinius::CallSite"* %cache_const1172, i32 0, i32 2, !dbg !55
  %execute1174 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1173, !dbg !55
  store i32 306, i32* %ip_pos, !dbg !55
  %call_site_execute1175 = call %"struct.rubinius::Object"* %execute1174(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1172, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !55
  %null_check1178 = icmp eq %"struct.rubinius::Object"* %call_site_execute1175, null, !dbg !55
  br i1 %null_check1178, label %bail_out, label %check_active1177, !dbg !55

check_active1165:                                 ; preds = %ip296
  br label %continue1164, !dbg !55

continue1176:                                     ; preds = %check_active1177
  %stack_pos1179 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %stack_pos1179, !dbg !55
  %local_pos1180 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !55
  %stack_pos1181 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1182 = load %"struct.rubinius::Object"** %stack_pos1181, !dbg !55
  store %"struct.rubinius::Object"* %stack_load1182, %"struct.rubinius::Object"** %local_pos1180, !dbg !55
  br label %ip459, !dbg !55

check_active1177:                                 ; preds = %continue1164
  br label %continue1176, !dbg !55

continue1183:                                     ; No predecessors!
  br label %ip313, !dbg !55

ip275:                                            ; preds = %continue1109, %continue1081
  %stack_pos1184 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1184, !dbg !53
  br label %ip276, !dbg !53

ip256:                                            ; preds = %continue1071, %continue1038
  %stack_pos1185 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1185, !dbg !51
  br label %ip257, !dbg !51

ip194:                                            ; preds = %continue920, %continue887
  %stack_pos1186 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1186, !dbg !47
  br label %ip195, !dbg !47

ip313:                                            ; preds = %continue1183, %continue814
  %local_pos1187 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !56
  %local1188 = load %"struct.rubinius::Object"** %local_pos1187, !dbg !56, !rbx-classid !14
  %stack_pos1189 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos1189, !dbg !56
  %stack_pos1190 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1191 = load %"struct.rubinius::Object"** %stack_pos1190, !dbg !56, !rbx-classid !14
  %stack_pos1192 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1191, %"struct.rubinius::Object"** %stack_pos1192, !dbg !56
  %global_serial1193 = load i32* inttoptr (i64 22553876 to i32*), !dbg !56
  %constant_cache1194 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**), !dbg !56
  %constant_cache_pos1195 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 4, !dbg !56
  %constant_scope1196 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1195, !dbg !56
  %scope_pos1197 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !56
  %frame_scope1198 = load %"struct.rubinius::ConstantScope"** %scope_pos1197, !dbg !56
  %same_scope1199 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1196, %frame_scope1198, !dbg !56
  br i1 %same_scope1199, label %check_serial1200, label %use_call1202, !dbg !56

check_serial1200:                                 ; preds = %ip313
  %serial_pos1204 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 7, !dbg !56
  %serial1205 = load i32* %serial_pos1204, !dbg !56
  %use_cache1206 = icmp eq i32 %global_serial1193, %serial1205, !dbg !56
  br i1 %use_cache1206, label %use_cache1201, label %use_call1202, !dbg !56

use_cache1201:                                    ; preds = %check_serial1200
  %value_pos1207 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 2, !dbg !56
  %cached_value1208 = load %"struct.rubinius::Object"** %value_pos1207, !dbg !56
  br label %continue1203, !dbg !56

use_call1202:                                     ; preds = %check_serial1200, %ip313
  store i32 317, i32* %ip_pos, !dbg !56
  %push_const_fast1209 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !56
  %null_check1212 = icmp eq %"struct.rubinius::Object"* %push_const_fast1209, null, !dbg !56
  br i1 %null_check1212, label %bail_out, label %check_active1211, !dbg !56

continue1203:                                     ; preds = %continue1210, %use_cache1201
  %constant1213 = phi %"struct.rubinius::Object"* [ %cached_value1208, %use_cache1201 ], [ %push_const_fast1209, %continue1210 ], !dbg !56, !rbx-classid !57
  %stack_pos1214 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %constant1213, %"struct.rubinius::Object"** %stack_pos1214, !dbg !56
  %stack_pos1215 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  %stack_load1216 = load %"struct.rubinius::Object"** %stack_pos1215, !dbg !56, !rbx-classid !57
  %stack_pos1217 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1218 = load %"struct.rubinius::Object"** %stack_pos1217, !dbg !56, !rbx-classid !14
  %stack_pos1219 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1216, %"struct.rubinius::Object"** %stack_pos1219, !dbg !56
  %stack_pos1220 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1218, %"struct.rubinius::Object"** %stack_pos1220, !dbg !56
  %stack_pos1221 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  %stack_load1222 = load %"struct.rubinius::Object"** %stack_pos1221, !dbg !56, !rbx-classid !14
  %stack_pos1223 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1224 = load %"struct.rubinius::Object"** %stack_pos1223, !dbg !56, !rbx-classid !57
  %cast1229 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1230 = and i64 %cast1229, 3, !dbg !56
  %is_reference1231 = icmp eq i64 %masked1230, 0, !dbg !56
  br i1 %is_reference1231, label %reference_block, label %class_verified_block, !dbg !56

continue1210:                                     ; preds = %check_active1211
  br label %continue1203, !dbg !56

check_active1211:                                 ; preds = %use_call1202
  br label %continue1210, !dbg !56

continue1225:                                     ; preds = %use_call1226, %negative1228, %positive1227
  %constant1256 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1227 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1228 ], [ %kind_of1255, %use_call1226 ], !dbg !56
  %stack_pos1257 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %constant1256, %"struct.rubinius::Object"** %stack_pos1257, !dbg !56
  %stack_pos1258 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1259 = load %"struct.rubinius::Object"** %stack_pos1258, !dbg !56
  %as_int1260 = ptrtoint %"struct.rubinius::Object"* %stack_load1259 to i64, !dbg !56
  %and1261 = and i64 %as_int1260, 15, !dbg !56
  %is_true1262 = icmp ne i64 %and1261, 10, !dbg !56
  br i1 %is_true1262, label %ip334, label %continue1263, !dbg !56

use_call1226:                                     ; preds = %is_false_block, %check_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1255 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1222, %"struct.rubinius::Object"* %stack_load1224) #0, !dbg !56
  br label %continue1225, !dbg !56

positive1227:                                     ; preds = %is_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_fixnum_block, %is_symbol_block, %reference_block
  br label %continue1225, !dbg !56

negative1228:                                     ; No predecessors!
  br label %continue1225, !dbg !56

class_verified_block:                             ; preds = %continue1203
  %word_pos1235 = getelementptr %"struct.rubinius::Object"* %stack_load1224, i32 0, i32 0, i32 0, i32 0, !dbg !56
  %flags1236 = load i64* %word_pos1235, !dbg !56
  %mask1237 = and i64 %flags1236, 255, !dbg !56
  %is_type1238 = icmp eq i64 %mask1237, 20, !dbg !56
  br i1 %is_type1238, label %check_symbol_block, label %use_call1226, !dbg !56

reference_block:                                  ; preds = %continue1203
  %class_pos1232 = getelementptr %"struct.rubinius::Object"* %stack_load1222, i32 0, i32 0, i32 1, !dbg !56
  %ref_class1233 = load %"struct.rubinius::Class"** %class_pos1232, !dbg !56
  %downcast1234 = bitcast %"struct.rubinius::Class"* %ref_class1233 to %"struct.rubinius::Object"*, !dbg !56
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1234, %stack_load1224, !dbg !56
  br i1 %check_class, label %positive1227, label %use_call1226, !dbg !56

check_symbol_block:                               ; preds = %class_verified_block
  %upcast1239 = bitcast %"struct.rubinius::Object"* %stack_load1224 to %"struct.rubinius::Class"*, !dbg !56
  %class_id_pos1240 = getelementptr %"struct.rubinius::Class"* %upcast1239, i32 0, i32 4, !dbg !56
  %class_id1241 = load i32* %class_id_pos1240, !dbg !56
  %cast1242 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1243 = and i64 %cast1242, 7, !dbg !56
  %is_symbol = icmp eq i64 %masked1243, 6, !dbg !56
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !56

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1244 = icmp eq i32 %class_id1241, 39, !dbg !56
  br i1 %check_class_id1244, label %positive1227, label %use_call1226, !dbg !56

check_fixnum_block:                               ; preds = %check_symbol_block
  %cast1245 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1246 = and i64 %cast1245, 1, !dbg !56
  %is_fixnum1247 = icmp eq i64 %masked1246, 1, !dbg !56
  br i1 %is_fixnum1247, label %is_fixnum_block, label %check_nil_block, !dbg !56

is_fixnum_block:                                  ; preds = %check_fixnum_block
  %check_class_id1248 = icmp eq i32 %class_id1241, 37, !dbg !56
  br i1 %check_class_id1248, label %positive1227, label %is_integer_block, !dbg !56

is_integer_block:                                 ; preds = %is_fixnum_block
  %check_class_id1249 = icmp eq i32 %class_id1241, 35, !dbg !56
  br i1 %check_class_id1249, label %positive1227, label %use_call1226, !dbg !56

check_nil_block:                                  ; preds = %check_fixnum_block
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate, label %is_nil_block, label %check_true_block, !dbg !56

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1250 = icmp eq i32 %class_id1241, 27, !dbg !56
  br i1 %check_class_id1250, label %positive1227, label %use_call1226, !dbg !56

check_true_block:                                 ; preds = %check_nil_block
  %is_immediate1251 = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate1251, label %is_true_block, label %check_false_block, !dbg !56

is_true_block:                                    ; preds = %check_true_block
  %check_class_id1252 = icmp eq i32 %class_id1241, 29, !dbg !56
  br i1 %check_class_id1252, label %positive1227, label %use_call1226, !dbg !56

check_false_block:                                ; preds = %check_true_block
  %is_immediate1253 = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate1253, label %is_false_block, label %use_call1226, !dbg !56

is_false_block:                                   ; preds = %check_false_block
  %check_class_id1254 = icmp eq i32 %class_id1241, 31, !dbg !56
  br i1 %check_class_id1254, label %positive1227, label %use_call1226, !dbg !56

continue1263:                                     ; preds = %continue1225
  br label %ip323, !dbg !56

ip323:                                            ; preds = %continue1263
  %system_object1264 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !56
  %stack_pos1265 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %stack_pos1265, !dbg !56
  %local_pos1266 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !56
  %local1267 = load %"struct.rubinius::Object"** %local_pos1266, !dbg !56, !rbx-classid !14
  %stack_pos1268 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %local1267, %"struct.rubinius::Object"** %stack_pos1268, !dbg !56
  %global_serial1269 = load i32* inttoptr (i64 22553876 to i32*), !dbg !56
  %constant_cache1270 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**), !dbg !56
  %constant_cache_pos1271 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 4, !dbg !56
  %constant_scope1272 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1271, !dbg !56
  %scope_pos1273 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !56
  %frame_scope1274 = load %"struct.rubinius::ConstantScope"** %scope_pos1273, !dbg !56
  %same_scope1275 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1272, %frame_scope1274, !dbg !56
  br i1 %same_scope1275, label %check_serial1276, label %use_call1278, !dbg !56

check_serial1276:                                 ; preds = %ip323
  %serial_pos1280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 7, !dbg !56
  %serial1281 = load i32* %serial_pos1280, !dbg !56
  %use_cache1282 = icmp eq i32 %global_serial1269, %serial1281, !dbg !56
  br i1 %use_cache1282, label %use_cache1277, label %use_call1278, !dbg !56

use_cache1277:                                    ; preds = %check_serial1276
  %value_pos1283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 2, !dbg !56
  %cached_value1284 = load %"struct.rubinius::Object"** %value_pos1283, !dbg !56
  br label %continue1279, !dbg !56

use_call1278:                                     ; preds = %check_serial1276, %ip323
  store i32 327, i32* %ip_pos, !dbg !56
  %push_const_fast1285 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !56
  %null_check1288 = icmp eq %"struct.rubinius::Object"* %push_const_fast1285, null, !dbg !56
  br i1 %null_check1288, label %bail_out, label %check_active1287, !dbg !56

continue1279:                                     ; preds = %continue1286, %use_cache1277
  %constant1289 = phi %"struct.rubinius::Object"* [ %cached_value1284, %use_cache1277 ], [ %push_const_fast1285, %continue1286 ], !dbg !56, !rbx-classid !58
  %stack_pos1290 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %constant1289, %"struct.rubinius::Object"** %stack_pos1290, !dbg !56
  %stack_pos1291 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1291, !dbg !56
  %stack_pos1292 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1293 = load %"struct.rubinius::Object"** %stack_pos1292, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1293, %"struct.rubinius::Object"** %out_args_recv, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !56
  store i32 3, i32* %out_args_total, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !56
  %stack_pos1294 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"** %stack_pos1294, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !56
  %cache_const1295 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566704 to %"struct.rubinius::CallSite"**), !dbg !56
  %execute_pos1296 = getelementptr %"struct.rubinius::CallSite"* %cache_const1295, i32 0, i32 2, !dbg !56
  %execute1297 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1296, !dbg !56
  store i32 331, i32* %ip_pos, !dbg !56
  %call_site_execute1298 = call %"struct.rubinius::Object"* %execute1297(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1295, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check1301 = icmp eq %"struct.rubinius::Object"* %call_site_execute1298, null, !dbg !56
  br i1 %null_check1301, label %bail_out, label %check_active1300, !dbg !56

continue1286:                                     ; preds = %check_active1287
  br label %continue1279, !dbg !56

check_active1287:                                 ; preds = %use_call1278
  br label %continue1286, !dbg !56

continue1299:                                     ; preds = %check_active1300
  %stack_pos1302 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %call_site_execute1298, %"struct.rubinius::Object"** %stack_pos1302, !dbg !56
  br label %ip334, !dbg !56

ip334:                                            ; preds = %continue1299, %continue1225
  %local_pos1303 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !56
  %stack_pos1304 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1305 = load %"struct.rubinius::Object"** %stack_pos1304, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %local_pos1303, !dbg !56
  %local_pos1306 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %local1307 = load %"struct.rubinius::Object"** %local_pos1306, !dbg !11, !rbx-classid !19
  %stack_pos1308 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %local1307, %"struct.rubinius::Object"** %stack_pos1308, !dbg !11
  %stack_pos1309 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1309, !dbg !11
  %stack_pos1310 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1311 = load %"struct.rubinius::Object"** %stack_pos1310, !dbg !11, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1311, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos1312 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos1312, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const1313 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566776 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos1314 = getelementptr %"struct.rubinius::CallSite"* %cache_const1313, i32 0, i32 2, !dbg !11
  %execute1315 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1314, !dbg !11
  store i32 340, i32* %ip_pos, !dbg !11
  %call_site_execute1316 = call %"struct.rubinius::Object"* %execute1315(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1313, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1319 = icmp eq %"struct.rubinius::Object"* %call_site_execute1316, null, !dbg !11
  br i1 %null_check1319, label %bail_out, label %check_active1318, !dbg !11

check_active1300:                                 ; preds = %continue1279
  br label %continue1299, !dbg !56

continue1317:                                     ; preds = %check_active1318
  %stack_pos1320 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1316, %"struct.rubinius::Object"** %stack_pos1320, !dbg !11
  %stack_pos1321 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1322 = load %"struct.rubinius::Object"** %stack_pos1321, !dbg !11
  %as_int1323 = ptrtoint %"struct.rubinius::Object"* %stack_load1322 to i64, !dbg !11
  %and1324 = and i64 %as_int1323, 15, !dbg !11
  %is_true1325 = icmp eq i64 %and1324, 10, !dbg !11
  br i1 %is_true1325, label %ip356, label %continue1326, !dbg !11

check_active1318:                                 ; preds = %ip334
  br label %continue1317, !dbg !11

continue1326:                                     ; preds = %continue1317
  br label %ip345, !dbg !11

ip345:                                            ; preds = %continue1326
  %local_pos1327 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %local1328 = load %"struct.rubinius::Object"** %local_pos1327, !dbg !11, !rbx-classid !19
  %stack_pos1329 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %stack_pos1329, !dbg !11
  %self_pos1330 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !11
  %self1331 = load %"struct.rubinius::Object"** %self_pos1330, !dbg !11
  %obj_array1332 = bitcast %"struct.rubinius::Object"* %self1331 to %"struct.rubinius::Object"**, !dbg !11
  %field_pos1333 = getelementptr %"struct.rubinius::Object"** %obj_array1332, i32 3, !dbg !11
  %field1334 = load %"struct.rubinius::Object"** %field_pos1333, !dbg !11
  %stack_pos1335 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %field1334, %"struct.rubinius::Object"** %stack_pos1335, !dbg !11
  %stack_pos1336 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1337 = load %"struct.rubinius::Object"** %stack_pos1336, !dbg !11, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1337, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos1338 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos1338, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const1339 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566848 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos1340 = getelementptr %"struct.rubinius::CallSite"* %cache_const1339, i32 0, i32 2, !dbg !11
  %execute1341 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1340, !dbg !11
  store i32 349, i32* %ip_pos, !dbg !11
  %call_site_execute1342 = call %"struct.rubinius::Object"* %execute1341(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1339, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1345 = icmp eq %"struct.rubinius::Object"* %call_site_execute1342, null, !dbg !11
  br i1 %null_check1345, label %bail_out, label %check_active1344, !dbg !11

continue1343:                                     ; preds = %check_active1344
  %stack_pos1346 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %stack_pos1346, !dbg !11
  %local_pos1347 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %stack_pos1348 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1349 = load %"struct.rubinius::Object"** %stack_pos1348, !dbg !11
  store %"struct.rubinius::Object"* %stack_load1349, %"struct.rubinius::Object"** %local_pos1347, !dbg !11
  br label %ip357, !dbg !11

check_active1344:                                 ; preds = %ip345
  br label %continue1343, !dbg !11

continue1350:                                     ; No predecessors!
  br label %ip356, !dbg !11

ip357:                                            ; preds = %ip356, %continue1343
  %local_pos1351 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !59
  %local1352 = load %"struct.rubinius::Object"** %local_pos1351, !dbg !59, !rbx-classid !22
  %stack_pos1353 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !59
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos1353, !dbg !59
  %stack_pos1354 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !59
  %stack_load1355 = load %"struct.rubinius::Object"** %stack_pos1354, !dbg !59, !rbx-classid !22
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %stack_load1355 to i64, !dbg !59
  %and1357 = and i64 %as_int1356, 15, !dbg !59
  %is_true1358 = icmp eq i64 %and1357, 10, !dbg !59
  br i1 %is_true1358, label %ip386, label %continue1359, !dbg !59

continue1359:                                     ; preds = %ip357
  br label %ip362, !dbg !59

ip362:                                            ; preds = %continue1359
  %local_pos1360 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !60
  %local1361 = load %"struct.rubinius::Object"** %local_pos1360, !dbg !60, !rbx-classid !22
  %stack_pos1362 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %local1361, %"struct.rubinius::Object"** %stack_pos1362, !dbg !60
  %stack_pos1363 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1364 = load %"struct.rubinius::Object"** %stack_pos1363, !dbg !60, !rbx-classid !22
  %stack_pos1365 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1364, %"struct.rubinius::Object"** %stack_pos1365, !dbg !60
  %global_serial1366 = load i32* inttoptr (i64 22553876 to i32*), !dbg !60
  %constant_cache1367 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**), !dbg !60
  %constant_cache_pos1368 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 4, !dbg !60
  %constant_scope1369 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1368, !dbg !60
  %scope_pos1370 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !60
  %frame_scope1371 = load %"struct.rubinius::ConstantScope"** %scope_pos1370, !dbg !60
  %same_scope1372 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1369, %frame_scope1371, !dbg !60
  br i1 %same_scope1372, label %check_serial1373, label %use_call1375, !dbg !60

check_serial1373:                                 ; preds = %ip362
  %serial_pos1377 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 7, !dbg !60
  %serial1378 = load i32* %serial_pos1377, !dbg !60
  %use_cache1379 = icmp eq i32 %global_serial1366, %serial1378, !dbg !60
  br i1 %use_cache1379, label %use_cache1374, label %use_call1375, !dbg !60

use_cache1374:                                    ; preds = %check_serial1373
  %value_pos1380 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 2, !dbg !60
  %cached_value1381 = load %"struct.rubinius::Object"** %value_pos1380, !dbg !60
  br label %continue1376, !dbg !60

use_call1375:                                     ; preds = %check_serial1373, %ip362
  store i32 365, i32* %ip_pos, !dbg !60
  %push_const_fast1382 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check1385 = icmp eq %"struct.rubinius::Object"* %push_const_fast1382, null, !dbg !60
  br i1 %null_check1385, label %bail_out, label %check_active1384, !dbg !60

continue1376:                                     ; preds = %continue1383, %use_cache1374
  %constant1386 = phi %"struct.rubinius::Object"* [ %cached_value1381, %use_cache1374 ], [ %push_const_fast1382, %continue1383 ], !dbg !60, !rbx-classid !61
  %stack_pos1387 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %constant1386, %"struct.rubinius::Object"** %stack_pos1387, !dbg !60
  %stack_pos1388 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  %stack_load1389 = load %"struct.rubinius::Object"** %stack_pos1388, !dbg !60, !rbx-classid !61
  %stack_pos1390 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1391 = load %"struct.rubinius::Object"** %stack_pos1390, !dbg !60, !rbx-classid !22
  %stack_pos1392 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1389, %"struct.rubinius::Object"** %stack_pos1392, !dbg !60
  %stack_pos1393 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1391, %"struct.rubinius::Object"** %stack_pos1393, !dbg !60
  %stack_pos1394 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  %stack_load1395 = load %"struct.rubinius::Object"** %stack_pos1394, !dbg !60, !rbx-classid !22
  %stack_pos1396 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1397 = load %"struct.rubinius::Object"** %stack_pos1396, !dbg !60, !rbx-classid !61
  %cast1415 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1416 = and i64 %cast1415, 3, !dbg !60
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !60
  br i1 %is_reference1417, label %reference_block1403, label %class_verified_block1402, !dbg !60

continue1383:                                     ; preds = %check_active1384
  br label %continue1376, !dbg !60

check_active1384:                                 ; preds = %use_call1375
  br label %continue1383, !dbg !60

continue1398:                                     ; preds = %use_call1399, %negative1401, %positive1400
  %constant1445 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1400 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1401 ], [ %kind_of1444, %use_call1399 ], !dbg !60
  %stack_pos1446 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %constant1445, %"struct.rubinius::Object"** %stack_pos1446, !dbg !60
  %stack_pos1447 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1448 = load %"struct.rubinius::Object"** %stack_pos1447, !dbg !60
  %as_int1449 = ptrtoint %"struct.rubinius::Object"* %stack_load1448 to i64, !dbg !60
  %and1450 = and i64 %as_int1449, 15, !dbg !60
  %is_true1451 = icmp ne i64 %and1450, 10, !dbg !60
  br i1 %is_true1451, label %ip382, label %continue1452, !dbg !60

use_call1399:                                     ; preds = %is_false_block1414, %check_false_block1413, %is_true_block1412, %is_nil_block1410, %is_integer_block1408, %is_symbol_block1405, %class_verified_block1402, %reference_block1403
  %kind_of1444 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1395, %"struct.rubinius::Object"* %stack_load1397) #0, !dbg !60
  br label %continue1398, !dbg !60

positive1400:                                     ; preds = %is_false_block1414, %is_true_block1412, %is_nil_block1410, %is_integer_block1408, %is_fixnum_block1407, %is_symbol_block1405, %reference_block1403
  br label %continue1398, !dbg !60

negative1401:                                     ; No predecessors!
  br label %continue1398, !dbg !60

class_verified_block1402:                         ; preds = %continue1376
  %word_pos1422 = getelementptr %"struct.rubinius::Object"* %stack_load1397, i32 0, i32 0, i32 0, i32 0, !dbg !60
  %flags1423 = load i64* %word_pos1422, !dbg !60
  %mask1424 = and i64 %flags1423, 255, !dbg !60
  %is_type1425 = icmp eq i64 %mask1424, 20, !dbg !60
  br i1 %is_type1425, label %check_symbol_block1404, label %use_call1399, !dbg !60

reference_block1403:                              ; preds = %continue1376
  %class_pos1418 = getelementptr %"struct.rubinius::Object"* %stack_load1395, i32 0, i32 0, i32 1, !dbg !60
  %ref_class1419 = load %"struct.rubinius::Class"** %class_pos1418, !dbg !60
  %downcast1420 = bitcast %"struct.rubinius::Class"* %ref_class1419 to %"struct.rubinius::Object"*, !dbg !60
  %check_class1421 = icmp eq %"struct.rubinius::Object"* %downcast1420, %stack_load1397, !dbg !60
  br i1 %check_class1421, label %positive1400, label %use_call1399, !dbg !60

check_symbol_block1404:                           ; preds = %class_verified_block1402
  %upcast1426 = bitcast %"struct.rubinius::Object"* %stack_load1397 to %"struct.rubinius::Class"*, !dbg !60
  %class_id_pos1427 = getelementptr %"struct.rubinius::Class"* %upcast1426, i32 0, i32 4, !dbg !60
  %class_id1428 = load i32* %class_id_pos1427, !dbg !60
  %cast1429 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1430 = and i64 %cast1429, 7, !dbg !60
  %is_symbol1431 = icmp eq i64 %masked1430, 6, !dbg !60
  br i1 %is_symbol1431, label %is_symbol_block1405, label %check_fixnum_block1406, !dbg !60

is_symbol_block1405:                              ; preds = %check_symbol_block1404
  %check_class_id1432 = icmp eq i32 %class_id1428, 39, !dbg !60
  br i1 %check_class_id1432, label %positive1400, label %use_call1399, !dbg !60

check_fixnum_block1406:                           ; preds = %check_symbol_block1404
  %cast1433 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1434 = and i64 %cast1433, 1, !dbg !60
  %is_fixnum1435 = icmp eq i64 %masked1434, 1, !dbg !60
  br i1 %is_fixnum1435, label %is_fixnum_block1407, label %check_nil_block1409, !dbg !60

is_fixnum_block1407:                              ; preds = %check_fixnum_block1406
  %check_class_id1436 = icmp eq i32 %class_id1428, 37, !dbg !60
  br i1 %check_class_id1436, label %positive1400, label %is_integer_block1408, !dbg !60

is_integer_block1408:                             ; preds = %is_fixnum_block1407
  %check_class_id1437 = icmp eq i32 %class_id1428, 35, !dbg !60
  br i1 %check_class_id1437, label %positive1400, label %use_call1399, !dbg !60

check_nil_block1409:                              ; preds = %check_fixnum_block1406
  %is_immediate1438 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1438, label %is_nil_block1410, label %check_true_block1411, !dbg !60

is_nil_block1410:                                 ; preds = %check_nil_block1409
  %check_class_id1439 = icmp eq i32 %class_id1428, 27, !dbg !60
  br i1 %check_class_id1439, label %positive1400, label %use_call1399, !dbg !60

check_true_block1411:                             ; preds = %check_nil_block1409
  %is_immediate1440 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1440, label %is_true_block1412, label %check_false_block1413, !dbg !60

is_true_block1412:                                ; preds = %check_true_block1411
  %check_class_id1441 = icmp eq i32 %class_id1428, 29, !dbg !60
  br i1 %check_class_id1441, label %positive1400, label %use_call1399, !dbg !60

check_false_block1413:                            ; preds = %check_true_block1411
  %is_immediate1442 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1442, label %is_false_block1414, label %use_call1399, !dbg !60

is_false_block1414:                               ; preds = %check_false_block1413
  %check_class_id1443 = icmp eq i32 %class_id1428, 31, !dbg !60
  br i1 %check_class_id1443, label %positive1400, label %use_call1399, !dbg !60

continue1452:                                     ; preds = %continue1398
  br label %ip371, !dbg !60

ip371:                                            ; preds = %continue1452
  %system_object1453 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !60
  %stack_pos1454 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %stack_pos1454, !dbg !60
  %local_pos1455 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !60
  %local1456 = load %"struct.rubinius::Object"** %local_pos1455, !dbg !60, !rbx-classid !22
  %stack_pos1457 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %local1456, %"struct.rubinius::Object"** %stack_pos1457, !dbg !60
  %global_serial1458 = load i32* inttoptr (i64 22553876 to i32*), !dbg !60
  %constant_cache1459 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**), !dbg !60
  %constant_cache_pos1460 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 4, !dbg !60
  %constant_scope1461 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1460, !dbg !60
  %scope_pos1462 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !60
  %frame_scope1463 = load %"struct.rubinius::ConstantScope"** %scope_pos1462, !dbg !60
  %same_scope1464 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1461, %frame_scope1463, !dbg !60
  br i1 %same_scope1464, label %check_serial1465, label %use_call1467, !dbg !60

check_serial1465:                                 ; preds = %ip371
  %serial_pos1469 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 7, !dbg !60
  %serial1470 = load i32* %serial_pos1469, !dbg !60
  %use_cache1471 = icmp eq i32 %global_serial1458, %serial1470, !dbg !60
  br i1 %use_cache1471, label %use_cache1466, label %use_call1467, !dbg !60

use_cache1466:                                    ; preds = %check_serial1465
  %value_pos1472 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 2, !dbg !60
  %cached_value1473 = load %"struct.rubinius::Object"** %value_pos1472, !dbg !60
  br label %continue1468, !dbg !60

use_call1467:                                     ; preds = %check_serial1465, %ip371
  store i32 375, i32* %ip_pos, !dbg !60
  %push_const_fast1474 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check1477 = icmp eq %"struct.rubinius::Object"* %push_const_fast1474, null, !dbg !60
  br i1 %null_check1477, label %bail_out, label %check_active1476, !dbg !60

continue1468:                                     ; preds = %continue1475, %use_cache1466
  %constant1478 = phi %"struct.rubinius::Object"* [ %cached_value1473, %use_cache1466 ], [ %push_const_fast1474, %continue1475 ], !dbg !60, !rbx-classid !62
  %stack_pos1479 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %constant1478, %"struct.rubinius::Object"** %stack_pos1479, !dbg !60
  %stack_pos1480 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1480, !dbg !60
  %stack_pos1481 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1482 = load %"struct.rubinius::Object"** %stack_pos1481, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1482, %"struct.rubinius::Object"** %out_args_recv, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !60
  store i32 3, i32* %out_args_total, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !60
  %stack_pos1483 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos1483, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !60
  %cache_const1484 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567088 to %"struct.rubinius::CallSite"**), !dbg !60
  %execute_pos1485 = getelementptr %"struct.rubinius::CallSite"* %cache_const1484, i32 0, i32 2, !dbg !60
  %execute1486 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1485, !dbg !60
  store i32 379, i32* %ip_pos, !dbg !60
  %call_site_execute1487 = call %"struct.rubinius::Object"* %execute1486(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1484, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1490 = icmp eq %"struct.rubinius::Object"* %call_site_execute1487, null, !dbg !60
  br i1 %null_check1490, label %bail_out, label %check_active1489, !dbg !60

continue1475:                                     ; preds = %check_active1476
  br label %continue1468, !dbg !60

check_active1476:                                 ; preds = %use_call1467
  br label %continue1475, !dbg !60

continue1488:                                     ; preds = %check_active1489
  %stack_pos1491 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %call_site_execute1487, %"struct.rubinius::Object"** %stack_pos1491, !dbg !60
  br label %ip382, !dbg !60

ip382:                                            ; preds = %continue1488, %continue1398
  %local_pos1492 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !60
  %stack_pos1493 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1494 = load %"struct.rubinius::Object"** %stack_pos1493, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1494, %"struct.rubinius::Object"** %local_pos1492, !dbg !60
  br label %ip459, !dbg !60

check_active1489:                                 ; preds = %continue1468
  br label %continue1488, !dbg !60

continue1495:                                     ; No predecessors!
  br label %ip386, !dbg !60

ip386:                                            ; preds = %continue1495, %ip357
  %local_pos1496 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !63
  %local1497 = load %"struct.rubinius::Object"** %local_pos1496, !dbg !63, !rbx-classid !19
  %stack_pos1498 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %stack_pos1498, !dbg !63
  %self_pos1499 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !63
  %self1500 = load %"struct.rubinius::Object"** %self_pos1499, !dbg !63
  %obj_array1501 = bitcast %"struct.rubinius::Object"* %self1500 to %"struct.rubinius::Object"**, !dbg !63
  %field_pos1502 = getelementptr %"struct.rubinius::Object"** %obj_array1501, i32 3, !dbg !63
  %field1503 = load %"struct.rubinius::Object"** %field_pos1502, !dbg !63
  %stack_pos1504 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !63
  store %"struct.rubinius::Object"* %field1503, %"struct.rubinius::Object"** %stack_pos1504, !dbg !63
  %stack_pos1505 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1506 = load %"struct.rubinius::Object"** %stack_pos1505, !dbg !63, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1506, %"struct.rubinius::Object"** %out_args_recv, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !63
  store i32 1, i32* %out_args_total, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !63
  %stack_pos1507 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos1507, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !63
  %cache_const1508 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567176 to %"struct.rubinius::CallSite"**), !dbg !63
  %execute_pos1509 = getelementptr %"struct.rubinius::CallSite"* %cache_const1508, i32 0, i32 2, !dbg !63
  %execute1510 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1509, !dbg !63
  store i32 390, i32* %ip_pos, !dbg !63
  %call_site_execute1511 = call %"struct.rubinius::Object"* %execute1510(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1508, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1514 = icmp eq %"struct.rubinius::Object"* %call_site_execute1511, null, !dbg !63
  br i1 %null_check1514, label %bail_out, label %check_active1513, !dbg !63

continue1512:                                     ; preds = %check_active1513
  %stack_pos1515 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %call_site_execute1511, %"struct.rubinius::Object"** %stack_pos1515, !dbg !63
  %stack_pos1516 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1517 = load %"struct.rubinius::Object"** %stack_pos1516, !dbg !63
  %as_int1518 = ptrtoint %"struct.rubinius::Object"* %stack_load1517 to i64, !dbg !63
  %and1519 = and i64 %as_int1518, 15, !dbg !63
  %is_true1520 = icmp eq i64 %and1519, 10, !dbg !63
  br i1 %is_true1520, label %ip399, label %continue1521, !dbg !63

check_active1513:                                 ; preds = %ip386
  br label %continue1512, !dbg !63

continue1521:                                     ; preds = %continue1512
  br label %ip395, !dbg !63

ip395:                                            ; preds = %continue1521
  %stack_pos1522 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1522, !dbg !63
  %stack_pos1523 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1524 = load %"struct.rubinius::Object"** %stack_pos1523, !dbg !63, !rbx-classid !12
  br label %return_pad, !dbg !63

ip399:                                            ; preds = %continue1512
  %stack_pos1525 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1525, !dbg !63
  %60 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !64
  %stack_pos1526 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !64
  store %"struct.rubinius::Object"* %60, %"struct.rubinius::Object"** %stack_pos1526, !dbg !64
  %stack_pos1527 = getelementptr %"struct.rubinius::Object"** %stack, i32 10, !dbg !64
  %stack_pos1528 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !64
  %stack_load1529 = load %"struct.rubinius::Object"** %stack_pos1528, !dbg !64
  store %"struct.rubinius::Object"* %stack_load1529, %"struct.rubinius::Object"** %stack_pos1527, !dbg !64
  br label %ip408, !dbg !64

ip408:                                            ; preds = %ip399
  %self_pos1532 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !65
  %self1533 = load %"struct.rubinius::Object"** %self_pos1532, !dbg !65
  %obj_array1534 = bitcast %"struct.rubinius::Object"* %self1533 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1535 = getelementptr %"struct.rubinius::Object"** %obj_array1534, i32 4, !dbg !65
  %field1536 = load %"struct.rubinius::Object"** %field_pos1535, !dbg !65
  %stack_pos1537 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %field1536, %"struct.rubinius::Object"** %stack_pos1537, !dbg !65
  %self_pos1538 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !65
  %self1539 = load %"struct.rubinius::Object"** %self_pos1538, !dbg !65
  %obj_array1540 = bitcast %"struct.rubinius::Object"* %self1539 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1541 = getelementptr %"struct.rubinius::Object"** %obj_array1540, i32 5, !dbg !65
  %field1542 = load %"struct.rubinius::Object"** %field_pos1541, !dbg !65
  %stack_pos1543 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %stack_pos1543, !dbg !65
  %local_pos1544 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !65
  %local1545 = load %"struct.rubinius::Object"** %local_pos1544, !dbg !65, !rbx-classid !19
  %stack_pos1546 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !65
  store %"struct.rubinius::Object"* %local1545, %"struct.rubinius::Object"** %stack_pos1546, !dbg !65
  %stack_pos1547 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  %stack_load1548 = load %"struct.rubinius::Object"** %stack_pos1547, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1548, %"struct.rubinius::Object"** %out_args_recv, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !65
  store i32 1, i32* %out_args_total, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !65
  %stack_pos1549 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1549, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !65
  %cache_const1550 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567368 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1551 = getelementptr %"struct.rubinius::CallSite"* %cache_const1550, i32 0, i32 2, !dbg !65
  %execute1552 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1551, !dbg !65
  store i32 414, i32* %ip_pos, !dbg !65
  %call_site_execute1553 = call %"struct.rubinius::Object"* %execute1552(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1550, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1556 = icmp eq %"struct.rubinius::Object"* %call_site_execute1553, null, !dbg !65
  br i1 %null_check1556, label %is_exception1530, label %check_active1555, !dbg !65

is_exception1530:                                 ; preds = %continue1554, %ip408
  %rae1531 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !64
  br i1 %rae1531, label %ip424, label %bail_out, !dbg !64

continue1554:                                     ; preds = %check_active1555
  %stack_pos1557 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute1553, %"struct.rubinius::Object"** %stack_pos1557, !dbg !65
  %stack_pos1558 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  %stack_load1559 = load %"struct.rubinius::Object"** %stack_pos1558, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1559, %"struct.rubinius::Object"** %out_args_recv, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !65
  store i32 1, i32* %out_args_total, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !65
  %stack_pos1560 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1560, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !65
  %cache_const1561 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567392 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1562 = getelementptr %"struct.rubinius::CallSite"* %cache_const1561, i32 0, i32 2, !dbg !65
  %execute1563 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1562, !dbg !65
  store i32 417, i32* %ip_pos, !dbg !65
  %call_site_execute1564 = call %"struct.rubinius::Object"* %execute1563(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1561, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1567 = icmp eq %"struct.rubinius::Object"* %call_site_execute1564, null, !dbg !65
  br i1 %null_check1567, label %is_exception1530, label %check_active1566, !dbg !65

check_active1555:                                 ; preds = %ip408
  br label %continue1554, !dbg !65

continue1565:                                     ; preds = %check_active1566
  %stack_pos1568 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute1564, %"struct.rubinius::Object"** %stack_pos1568, !dbg !65
  %stack_pos1569 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  %stack_load1570 = load %"struct.rubinius::Object"** %stack_pos1569, !dbg !65
  br label %return_pad, !dbg !65

ip424:                                            ; preds = %is_exception1530
  %61 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos1571 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %61, %"struct.rubinius::Object"** %stack_pos1571, !dbg !26
  %stack_pos1572 = getelementptr %"struct.rubinius::Object"** %stack, i32 9, !dbg !26
  %stack_pos1573 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load1574 = load %"struct.rubinius::Object"** %stack_pos1573, !dbg !26
  store %"struct.rubinius::Object"* %stack_load1574, %"struct.rubinius::Object"** %stack_pos1572, !dbg !26
  %ce1575 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos1576 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos1576, !dbg !26
  %stack_pos1577 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !66
  %stack_load1578 = load %"struct.rubinius::Object"** %stack_pos1577, !dbg !66
  %stack_pos1579 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1578, %"struct.rubinius::Object"** %stack_pos1579, !dbg !66
  %global_serial1580 = load i32* inttoptr (i64 22553876 to i32*), !dbg !66
  %constant_cache1581 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**), !dbg !66
  %constant_cache_pos1582 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 4, !dbg !66
  %constant_scope1583 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1582, !dbg !66
  %scope_pos1584 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !66
  %frame_scope1585 = load %"struct.rubinius::ConstantScope"** %scope_pos1584, !dbg !66
  %same_scope1586 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1583, %frame_scope1585, !dbg !66
  br i1 %same_scope1586, label %check_serial1587, label %use_call1589, !dbg !66

check_active1566:                                 ; preds = %continue1554
  br label %continue1565, !dbg !65

check_serial1587:                                 ; preds = %ip424
  %serial_pos1591 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 7, !dbg !66
  %serial1592 = load i32* %serial_pos1591, !dbg !66
  %use_cache1593 = icmp eq i32 %global_serial1580, %serial1592, !dbg !66
  br i1 %use_cache1593, label %use_cache1588, label %use_call1589, !dbg !66

use_cache1588:                                    ; preds = %check_serial1587
  %value_pos1594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 2, !dbg !66
  %cached_value1595 = load %"struct.rubinius::Object"** %value_pos1594, !dbg !66
  br label %continue1590, !dbg !66

use_call1589:                                     ; preds = %check_serial1587, %ip424
  store i32 430, i32* %ip_pos, !dbg !66
  %push_const_fast1596 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !66
  %null_check1599 = icmp eq %"struct.rubinius::Object"* %push_const_fast1596, null, !dbg !66
  br i1 %null_check1599, label %bail_out, label %check_active1598, !dbg !66

continue1590:                                     ; preds = %continue1597, %use_cache1588
  %constant1600 = phi %"struct.rubinius::Object"* [ %cached_value1595, %use_cache1588 ], [ %push_const_fast1596, %continue1597 ], !dbg !66, !rbx-classid !67
  %stack_pos1601 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %constant1600, %"struct.rubinius::Object"** %stack_pos1601, !dbg !66
  %stack_pos1602 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  %stack_load1603 = load %"struct.rubinius::Object"** %stack_pos1602, !dbg !66, !rbx-classid !67
  %global_serial1604 = load i32* inttoptr (i64 22553876 to i32*), !dbg !66
  %constant_cache1605 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), !dbg !66
  %constant_cache_pos1606 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 4, !dbg !66
  %constant_scope1607 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1606, !dbg !66
  %scope_pos1608 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !66
  %frame_scope1609 = load %"struct.rubinius::ConstantScope"** %scope_pos1608, !dbg !66
  %same_scope1610 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1607, %frame_scope1609, !dbg !66
  br i1 %same_scope1610, label %check_serial1611, label %use_call1614, !dbg !66

continue1597:                                     ; preds = %check_active1598
  br label %continue1590, !dbg !66

check_active1598:                                 ; preds = %use_call1589
  br label %continue1597, !dbg !66

check_serial1611:                                 ; preds = %continue1590
  %serial_pos1616 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 7, !dbg !66
  %serial1617 = load i32* %serial_pos1616, !dbg !66
  %use_under1618 = icmp eq i32 %global_serial1604, %serial1617, !dbg !66
  br i1 %use_under1618, label %check_under1612, label %use_call1614, !dbg !66

check_under1612:                                  ; preds = %check_serial1611
  %value_pos1619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 3, !dbg !66
  %cached_under1620 = load %"struct.rubinius::Module"** %value_pos1619, !dbg !66
  %downcast1621 = bitcast %"struct.rubinius::Module"* %cached_under1620 to %"struct.rubinius::Object"*, !dbg !66
  %use_cache1622 = icmp eq %"struct.rubinius::Object"* %downcast1621, %stack_load1603, !dbg !66
  br i1 %use_cache1622, label %use_cache1613, label %use_call1614, !dbg !66

use_cache1613:                                    ; preds = %check_under1612
  %value_pos1623 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 2, !dbg !66
  %cached_value1624 = load %"struct.rubinius::Object"** %value_pos1623, !dbg !66
  br label %continue1615, !dbg !66

use_call1614:                                     ; preds = %check_under1612, %check_serial1611, %continue1590
  store i32 432, i32* %ip_pos, !dbg !66
  %constant1625 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1603) #0, !dbg !66
  %null_check1628 = icmp eq %"struct.rubinius::Object"* %constant1625, null, !dbg !66
  br i1 %null_check1628, label %bail_out, label %check_active1627, !dbg !66

continue1615:                                     ; preds = %continue1626, %use_cache1613
  %constant1629 = phi %"struct.rubinius::Object"* [ %cached_value1624, %use_cache1613 ], [ %constant1625, %continue1626 ], !dbg !66, !rbx-classid !68
  %stack_pos1630 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %stack_pos1630, !dbg !66
  %stack_pos1631 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  %stack_load1632 = load %"struct.rubinius::Object"** %stack_pos1631, !dbg !66, !rbx-classid !68
  %stack_pos1633 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1634 = load %"struct.rubinius::Object"** %stack_pos1633, !dbg !66
  %stack_pos1635 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1632, %"struct.rubinius::Object"** %stack_pos1635, !dbg !66
  %stack_pos1636 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1634, %"struct.rubinius::Object"** %stack_pos1636, !dbg !66
  %stack_pos1637 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1638 = load %"struct.rubinius::Object"** %stack_pos1637, !dbg !66, !rbx-classid !68
  store %"struct.rubinius::Object"* %stack_load1638, %"struct.rubinius::Object"** %out_args_recv, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !66
  store i32 1, i32* %out_args_total, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !66
  %stack_pos1639 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos1639, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !66
  %cache_const1640 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567536 to %"struct.rubinius::CallSite"**), !dbg !66
  %execute_pos1641 = getelementptr %"struct.rubinius::CallSite"* %cache_const1640, i32 0, i32 2, !dbg !66
  %execute1642 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1641, !dbg !66
  store i32 435, i32* %ip_pos, !dbg !66
  %call_site_execute1643 = call %"struct.rubinius::Object"* %execute1642(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1640, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1646 = icmp eq %"struct.rubinius::Object"* %call_site_execute1643, null, !dbg !66
  br i1 %null_check1646, label %bail_out, label %check_active1645, !dbg !66

continue1626:                                     ; preds = %check_active1627
  br label %continue1615, !dbg !66

check_active1627:                                 ; preds = %use_call1614
  br label %continue1626, !dbg !66

continue1644:                                     ; preds = %check_active1645
  %stack_pos1647 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1643, %"struct.rubinius::Object"** %stack_pos1647, !dbg !66
  %stack_pos1648 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1649 = load %"struct.rubinius::Object"** %stack_pos1648, !dbg !66
  %as_int1650 = ptrtoint %"struct.rubinius::Object"* %stack_load1649 to i64, !dbg !66
  %and1651 = and i64 %as_int1650, 15, !dbg !66
  %is_true1652 = icmp ne i64 %and1651, 10, !dbg !66
  br i1 %is_true1652, label %ip442, label %continue1653, !dbg !66

check_active1645:                                 ; preds = %continue1615
  br label %continue1644, !dbg !66

continue1653:                                     ; preds = %continue1644
  br label %ip440, !dbg !66

ip440:                                            ; preds = %continue1653
  br label %ip451, !dbg !66

continue1654:                                     ; No predecessors!
  br label %ip442, !dbg !66

ip451:                                            ; preds = %ip440
  %stack_pos1655 = getelementptr %"struct.rubinius::Object"** %stack, i32 9, !dbg !69
  %stack_local1656 = load %"struct.rubinius::Object"** %stack_pos1655, !dbg !69
  %stack_pos1657 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %stack_local1656, %"struct.rubinius::Object"** %stack_pos1657, !dbg !69
  %stack_pos1658 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  %stack_load1659 = load %"struct.rubinius::Object"** %stack_pos1658, !dbg !69
  %62 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load1659), !dbg !69
  br label %bail_out, !dbg !69

continue1660:                                     ; No predecessors!
  br label %ip442, !dbg !66

ip442:                                            ; preds = %continue1660, %continue1654, %continue1644
  %stack_pos1661 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1661, !dbg !69
  %stack_pos1662 = getelementptr %"struct.rubinius::Object"** %stack, i32 10, !dbg !69
  %stack_local1663 = load %"struct.rubinius::Object"** %stack_pos1662, !dbg !69
  %stack_pos1664 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %stack_local1663, %"struct.rubinius::Object"** %stack_pos1664, !dbg !69
  %stack_pos1665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !69
  %stack_load1666 = load %"struct.rubinius::Object"** %stack_pos1665, !dbg !69
  %63 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load1666), !dbg !69
  %stack_pos1667 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  %stack_load1668 = load %"struct.rubinius::Object"** %stack_pos1667, !dbg !69, !rbx-classid !12
  br label %return_pad, !dbg !69

ip356:                                            ; preds = %continue1350, %continue1317
  %stack_pos1669 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1669, !dbg !11
  br label %ip357, !dbg !11

return_pad:                                       ; preds = %ip442, %continue1565, %ip395, %continue1144, %ip215, %ip130, %continue668, %serial_fallback667, %class_fallback666, %serial_fallback629, %ip83, %serial_fallback575, %continue535, %serial_fallback534, %serial_fallback493, %serial_fallback428, %serial_fallback384, %ip518, %serial_fallback343, %ip502, %continue327, %serial_fallback261, %ip468, %serial_fallback217, %serial_fallback79, %serial_fallback52, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %21, %class_fallback ], [ %22, %serial_fallback ], [ %23, %serial_fallback52 ], [ %25, %serial_fallback79 ], [ %28, %serial_fallback217 ], [ %stack_load249, %ip468 ], [ %30, %serial_fallback261 ], [ %stack_load332, %continue327 ], [ %stack_load336, %ip502 ], [ %33, %serial_fallback343 ], [ %stack_load375, %ip518 ], [ %35, %serial_fallback384 ], [ %38, %serial_fallback428 ], [ %41, %serial_fallback493 ], [ %45, %serial_fallback534 ], [ %stack_load563, %continue535 ], [ %46, %serial_fallback575 ], [ %stack_load607, %ip83 ], [ %49, %serial_fallback629 ], [ %52, %class_fallback666 ], [ %53, %serial_fallback667 ], [ %stack_load682, %continue668 ], [ %stack_load774, %ip130 ], [ %stack_load973, %ip215 ], [ %stack_load1149, %continue1144 ], [ %stack_load1524, %ip395 ], [ %stack_load1570, %continue1565 ], [ %stack_load1668, %ip442 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

ret_null1670:                                     ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !11

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %64 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %64, label %ret_null1670, label %method_body, !dbg !11
}

[[[ LLVM Optimized IR: _X_Array#[]@1 ]]]

define %"struct.rubinius::Object"* @"_X_Array#[]@1"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !9
  %cfstk1675 = alloca [22 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %var_mem1676 = alloca [11 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %call_frame = bitcast [22 x %"struct.rubinius::Object"*]* %cfstk1675 to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 9, !dbg !9
  %vars = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem1676 to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, align 4, !dbg !9
  %arg.total.off = add i32 %arg.total, -1, !dbg !9
  %0 = icmp ugt i32 %arg.total.off, 1, !dbg !9
  br i1 %0, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %1 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 3, !dbg !9
  %2 = getelementptr inbounds [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 0, !dbg !9
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %2, align 8, !dbg !9
  %3 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 8, !dbg !9
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %3, align 8, !dbg !9
  %4 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %4, align 8, !dbg !9
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %1, align 8, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !9
  %5 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !9
  %6 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 1, !dbg !9
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %5 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %6, align 8, !dbg !9
  %7 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 4, !dbg !9
  %8 = bitcast %"struct.rubinius::Object"** %7 to i32*, !dbg !9
  store i32 40, i32* %8, align 8, !dbg !9
  %9 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !9
  store i32 0, i32* %9, align 4, !dbg !9
  %10 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 7, !dbg !9
  %vars.c = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem1676 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %10, align 8, !dbg !9
  %11 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 140495695120624 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %11, align 8, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %12 = sext i32 %counter_alloca.0 to i64, !dbg !9
  %stack.sum = add i64 %12, 9, !dbg !9
  %stack_pos = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 %stack.sum, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !9
  %added = add i32 %counter_alloca.0, 1, !dbg !9
  %loop_check = icmp eq i32 %added, 13, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %13 = getelementptr inbounds [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 0, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %13, align 8, !dbg !9
  %14 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %14, align 8, !dbg !9, !rbx-classid !10
  %15 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %15, align 8, !dbg !9
  %16 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 4, !dbg !9
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %16, align 8, !dbg !9
  %17 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %17, align 8, !dbg !9
  %18 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %18, align 8, !dbg !9
  %19 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 1, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %19, align 8, !dbg !9
  %20 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !9
  %21 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 6, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !9
  %22 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 7, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !9
  %23 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 8, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !9
  %24 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 9, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %24, align 8, !dbg !9
  %25 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 10, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %25, align 8, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %counter_alloca.1 = phi i32 [ 0, %bottom ], [ %add, %arg_loop_body ]
  %loop_test = icmp slt i32 %counter_alloca.1, %arg.total, !dbg !9
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !9

arg_loop_body:                                    ; preds = %arg_loop_top
  %26 = sext i32 %counter_alloca.1 to i64, !dbg !9
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %26, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, align 8, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %26, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, align 8, !dbg !9
  %add = add i32 %counter_alloca.1, 1, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_cont:                                    ; preds = %arg_loop_top
  %27 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %27, align 8, !dbg !11
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !11
  %stack_limit = load i64* %28, align 8, !dbg !11
  %stack_end = ptrtoint [22 x %"struct.rubinius::Object"*]* %cfstk1675 to i64, !dbg !11
  %29 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %30 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !11
  %check_interrupts = load i8* %30, align 1, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !11
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %29, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %correct_serial, %ip451, %continue1615, %use_call1614, %use_call1589, %is_exception1530, %ip386, %continue1468, %use_call1467, %use_call1375, %ip345, %ip334, %continue1279, %use_call1278, %use_call1202, %check_active1165, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %check_active1021, %continue1000, %use_call999, %ip219, %ip205, %ip195, %ip183, %check_active870, %continue849, %use_call848, %ip158, %continue789, %use_call788, %ip139, %continue725, %use_call724, %use_call700, %is_exception, %class_fallback574, %class_fallback533, %class_fallback492, %ip538, %class_fallback427, %class_fallback383, %class_fallback342, %ip492, %ip483, %class_fallback260, %class_fallback216, %continue183, %use_call182, %use_call132, %class_fallback78, %class_fallback51, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !9
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack, align 8, !dbg !9
  %as_int = ptrtoint %"struct.rubinius::Object"* %pa to i64, !dbg !9
  %and = and i64 %as_int, 15, !dbg !9
  %is_true = icmp eq i64 %and, 10, !dbg !9
  br i1 %is_true, label %ip4, label %ip8, !dbg !9

ip4:                                              ; preds = %method_body
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !9
  br label %ip8, !dbg !9

ip8:                                              ; preds = %method_body, %ip4
  %local = load %"struct.rubinius::Object"** %21, align 8, !dbg !12, !rbx-classid !13
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !12
  %stack_pos16 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 10, !dbg !14
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !14
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !14
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !14
  %constant_scope17 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !14
  %31 = load %"struct.rubinius::Object"** %6, align 8, !dbg !14
  %frame_scope = bitcast %"struct.rubinius::Object"* %31 to %"struct.rubinius::ConstantScope"*, !dbg !14
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope17, %frame_scope, !dbg !14
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !14

check_serial:                                     ; preds = %ip8
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !14
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !14
  %serial = load i32* %serial_pos, align 4, !dbg !14
  %use_cache19 = icmp eq i32 %global_serial, %serial, !dbg !14
  br i1 %use_cache19, label %continue18, label %use_call, !dbg !14

use_call:                                         ; preds = %check_serial, %ip8
  store i32 11, i32* %9, align 4, !dbg !14
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !14
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !14
  br i1 %null_check, label %bail_out, label %continue18, !dbg !14

continue18:                                       ; preds = %check_serial, %use_call
  %stack_pos21 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 11, !dbg !14
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !14
  %cast = ptrtoint %"struct.rubinius::Object"* %local to i64, !dbg !14
  %masked = and i64 %cast, 1, !dbg !14
  %is_fixnum = icmp ne i64 %masked, 0, !dbg !14
  %is_fixnum33 = select i1 %is_fixnum, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !14
  store %"struct.rubinius::Object"* %is_fixnum33, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !14
  %as_int37 = ptrtoint %"struct.rubinius::Object"* %is_fixnum33 to i64, !dbg !14
  %and38 = and i64 %as_int37, 10, !dbg !14
  %is_true39 = icmp eq i64 %and38, 10, !dbg !14
  br i1 %is_true39, label %ip149, label %ip19, !dbg !14

ip19:                                             ; preds = %continue18
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %23, align 8, !dbg !15
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !16
  %is_fixnum61 = icmp eq i64 %masked, 0, !dbg !16
  br i1 %is_fixnum61, label %class_fallback51, label %push_le, !dbg !16

class_fallback51:                                 ; preds = %ip19
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !16
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !16
  store i32 1, i32* %out_args_total, align 8, !dbg !16
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !16
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !16
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 24564280 to %"struct.rubinius::CallSite"**), align 8, !dbg !16
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !16
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !16
  store i32 28, i32* %9, align 4, !dbg !16
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !16
  %null_check66 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !16
  br i1 %null_check66, label %bail_out, label %continue53, !dbg !16

continue53:                                       ; preds = %class_fallback51, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %32, %push_le ], [ %call_site_execute, %class_fallback51 ], !dbg !16
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  %as_int70 = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !16
  %and71 = and i64 %as_int70, 15, !dbg !16
  %is_true72 = icmp eq i64 %and71, 10, !dbg !16
  br i1 %is_true72, label %ip44, label %ip33, !dbg !16

push_le:                                          ; preds = %ip19
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %local, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !16
  %32 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !16
  br label %continue53, !dbg !16

ip33:                                             ; preds = %continue53
  %local75 = load %"struct.rubinius::Object"** %23, align 8, !dbg !16, !rbx-classid !17
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  %self = load %"struct.rubinius::Object"** %15, align 8, !dbg !16
  %field_pos1677 = getelementptr %"struct.rubinius::Object"* %self, i64 1, !dbg !16
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos1677 to %"struct.rubinius::Object"**, !dbg !16
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !16
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !16
  %cast85 = ptrtoint %"struct.rubinius::Object"* %local75 to i64, !dbg !16
  %cast86 = ptrtoint %"struct.rubinius::Object"* %field to i64, !dbg !16
  %fixnums_anded87 = and i64 %cast86, 1, !dbg !16
  %masked88 = and i64 %fixnums_anded87, %cast85, !dbg !16
  %is_fixnum89 = icmp eq i64 %masked88, 0, !dbg !16
  br i1 %is_fixnum89, label %class_fallback78, label %push_add, !dbg !16

class_fallback78:                                 ; preds = %ip33
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !16
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !16
  store i32 1, i32* %out_args_total, align 8, !dbg !16
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !16
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !16
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564352 to %"struct.rubinius::CallSite"**), align 128, !dbg !16
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i64 0, i32 2, !dbg !16
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, align 8, !dbg !16
  store i32 37, i32* %9, align 4, !dbg !16
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !16
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !16
  br i1 %null_check101, label %bail_out, label %continue80, !dbg !16

continue80:                                       ; preds = %class_fallback78, %bignum, %tagnow
  %send_result102 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute99, %class_fallback78 ], !dbg !16
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %23, align 8, !dbg !16
  br label %ip45, !dbg !16

push_add:                                         ; preds = %ip33
  %ashr = ashr i64 %cast85, 1, !dbg !16
  %ashr92 = ashr i64 %cast86, 1, !dbg !16
  %fixnum.add = add i64 %ashr, %ashr92, !dbg !16
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !16
  %33 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !16
  br i1 %33, label %tagnow, label %bignum, !dbg !16

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !16
  %or = or i64 %shl, 1, !dbg !16
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !16
  br label %continue80, !dbg !16

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !16
  br label %continue80, !dbg !16

ip45:                                             ; preds = %ip44, %continue80
  %local109 = load %"struct.rubinius::Object"** %22, align 8, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack, align 8, !dbg !18
  %as_int113 = ptrtoint %"struct.rubinius::Object"* %local109 to i64, !dbg !18
  %and114 = and i64 %as_int113, 15, !dbg !18
  %is_true115 = icmp eq i64 %and114, 10, !dbg !18
  br i1 %is_true115, label %ip74, label %ip50, !dbg !18

ip50:                                             ; preds = %ip45
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %constant_cache124 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**), align 256, !dbg !20
  %constant_cache_pos125 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i64 0, i32 4, !dbg !20
  %constant_scope126 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos125, align 8, !dbg !20
  %34 = load %"struct.rubinius::Object"** %6, align 8, !dbg !20
  %frame_scope128 = bitcast %"struct.rubinius::Object"* %34 to %"struct.rubinius::ConstantScope"*, !dbg !20
  %same_scope129 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope126, %frame_scope128, !dbg !20
  br i1 %same_scope129, label %check_serial130, label %use_call132, !dbg !20

check_serial130:                                  ; preds = %ip50
  %global_serial123 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !20
  %serial_pos134 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i64 0, i32 7, !dbg !20
  %serial135 = load i32* %serial_pos134, align 4, !dbg !20
  %use_cache136 = icmp eq i32 %global_serial123, %serial135, !dbg !20
  br i1 %use_cache136, label %continue133, label %use_call132, !dbg !20

use_call132:                                      ; preds = %check_serial130, %ip50
  store i32 53, i32* %9, align 4, !dbg !20
  %push_const_fast139 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !20
  %null_check142 = icmp eq %"struct.rubinius::Object"* %push_const_fast139, null, !dbg !20
  br i1 %null_check142, label %bail_out, label %continue133, !dbg !20

continue133:                                      ; preds = %check_serial130, %use_call132
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !20
  %masked159 = and i64 %as_int113, 1, !dbg !20
  %is_fixnum160 = icmp ne i64 %masked159, 0, !dbg !20
  %. = select i1 %is_fixnum160, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !20
  store %"struct.rubinius::Object"* %., %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %as_int165 = ptrtoint %"struct.rubinius::Object"* %. to i64, !dbg !20
  %and166 = and i64 %as_int165, 10, !dbg !20
  %is_true167 = icmp eq i64 %and166, 10, !dbg !20
  br i1 %is_true167, label %ip59, label %ip70, !dbg !20

ip59:                                             ; preds = %continue133
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !20
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %constant_cache174 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !20
  %constant_cache_pos175 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 4, !dbg !20
  %constant_scope176 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos175, align 8, !dbg !20
  %same_scope179 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope176, %frame_scope128, !dbg !20
  br i1 %same_scope179, label %check_serial180, label %use_call182, !dbg !20

check_serial180:                                  ; preds = %ip59
  %global_serial173 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !20
  %serial_pos184 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 7, !dbg !20
  %serial185 = load i32* %serial_pos184, align 4, !dbg !20
  %use_cache186 = icmp eq i32 %global_serial173, %serial185, !dbg !20
  br i1 %use_cache186, label %use_cache181, label %use_call182, !dbg !20

use_cache181:                                     ; preds = %check_serial180
  %value_pos187 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 2, !dbg !20
  %cached_value188 = load %"struct.rubinius::Object"** %value_pos187, align 8, !dbg !20
  br label %continue183, !dbg !20

use_call182:                                      ; preds = %check_serial180, %ip59
  store i32 63, i32* %9, align 4, !dbg !20
  %push_const_fast189 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !20
  %null_check192 = icmp eq %"struct.rubinius::Object"* %push_const_fast189, null, !dbg !20
  br i1 %null_check192, label %bail_out, label %continue183, !dbg !20

continue183:                                      ; preds = %use_call182, %use_cache181
  %constant193 = phi %"struct.rubinius::Object"* [ %cached_value188, %use_cache181 ], [ %push_const_fast189, %use_call182 ], !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant193, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !20
  %stack_pos195 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos195, align 8, !dbg !20
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !20
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !20
  store i32 3, i32* %out_args_total, align 8, !dbg !20
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !20
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !20
  %cache_const199 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564592 to %"struct.rubinius::CallSite"**), align 16, !dbg !20
  %execute_pos200 = getelementptr %"struct.rubinius::CallSite"* %cache_const199, i64 0, i32 2, !dbg !20
  %execute201 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos200, align 8, !dbg !20
  store i32 67, i32* %9, align 4, !dbg !20
  %call_site_execute202 = call %"struct.rubinius::Object"* %execute201(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const199, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !20
  %null_check205 = icmp eq %"struct.rubinius::Object"* %call_site_execute202, null, !dbg !20
  br i1 %null_check205, label %bail_out, label %check_active204, !dbg !20

ip70:                                             ; preds = %continue133, %check_active204
  %stack_load209 = phi %"struct.rubinius::Object"* [ %local109, %continue133 ], [ %call_site_execute202, %check_active204 ]
  store %"struct.rubinius::Object"* %stack_load209, %"struct.rubinius::Object"** %24, align 8, !dbg !20
  br label %ip459, !dbg !22

check_active204:                                  ; preds = %continue183
  store %"struct.rubinius::Object"* %call_site_execute202, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  br label %ip70, !dbg !20

ip459:                                            ; preds = %ip382, %check_active1177, %ip70
  %local213 = phi %"struct.rubinius::Object"* [ %stack_load1494, %ip382 ], [ %call_site_execute1175, %check_active1177 ], [ %stack_load209, %ip70 ]
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !23
  %cast221 = ptrtoint %"struct.rubinius::Object"* %local213 to i64, !dbg !23
  %fixnums_anded225 = and i64 %cast221, 1
  %is_fixnum227 = icmp eq i64 %fixnums_anded225, 0, !dbg !23
  br i1 %is_fixnum227, label %class_fallback216, label %push_le228, !dbg !23

class_fallback216:                                ; preds = %ip459
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !23
  store i32 1, i32* %out_args_total, align 8, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !23
  %cache_const233 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567760 to %"struct.rubinius::CallSite"**), align 16, !dbg !23
  %execute_pos234 = getelementptr %"struct.rubinius::CallSite"* %cache_const233, i64 0, i32 2, !dbg !23
  %execute235 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos234, align 8, !dbg !23
  store i32 463, i32* %9, align 4, !dbg !23
  %call_site_execute236 = call %"struct.rubinius::Object"* %execute235(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const233, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check238 = icmp eq %"struct.rubinius::Object"* %call_site_execute236, null, !dbg !23
  br i1 %null_check238, label %bail_out, label %continue218, !dbg !23

continue218:                                      ; preds = %class_fallback216, %push_le228
  %send_result239 = phi %"struct.rubinius::Object"* [ %35, %push_le228 ], [ %call_site_execute236, %class_fallback216 ], !dbg !23
  %as_int243 = ptrtoint %"struct.rubinius::Object"* %send_result239 to i64, !dbg !23
  %and244 = and i64 %as_int243, 15, !dbg !23
  %is_true245 = icmp eq i64 %and244, 10, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  br i1 %is_true245, label %ip472, label %return_pad, !dbg !23

push_le228:                                       ; preds = %ip459
  %fixnum.lt229 = icmp slt %"struct.rubinius::Object"* %local213, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !23
  %35 = select i1 %fixnum.lt229, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue218, !dbg !23

ip472:                                            ; preds = %continue218
  %local252 = load %"struct.rubinius::Object"** %23, align 8, !dbg !24, !rbx-classid !17
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %stack, align 8, !dbg !24
  %self255 = load %"struct.rubinius::Object"** %15, align 8, !dbg !24
  %field_pos2571678 = getelementptr %"struct.rubinius::Object"* %self255, i64 1, !dbg !24
  %field_pos257 = bitcast %"struct.rubinius::Object"* %field_pos2571678 to %"struct.rubinius::Object"**, !dbg !24
  %field258 = load %"struct.rubinius::Object"** %field_pos257, align 8, !dbg !24
  store %"struct.rubinius::Object"* %field258, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !24
  %cast265 = ptrtoint %"struct.rubinius::Object"* %local252 to i64, !dbg !24
  %cast268 = ptrtoint %"struct.rubinius::Object"* %field258 to i64, !dbg !24
  %fixnums_anded269 = and i64 %cast268, 1
  %masked270 = and i64 %fixnums_anded269, %cast265
  %is_fixnum271 = icmp eq i64 %masked270, 0, !dbg !24
  br i1 %is_fixnum271, label %class_fallback260, label %push_le272, !dbg !24

class_fallback260:                                ; preds = %ip472
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !24
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !24
  store i32 1, i32* %out_args_total, align 8, !dbg !24
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !24
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !24
  %cache_const276 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567880 to %"struct.rubinius::CallSite"**), align 8, !dbg !24
  %execute_pos277 = getelementptr %"struct.rubinius::CallSite"* %cache_const276, i64 0, i32 2, !dbg !24
  %execute278 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos277, align 8, !dbg !24
  store i32 478, i32* %9, align 4, !dbg !24
  %call_site_execute279 = call %"struct.rubinius::Object"* %execute278(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const276, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !24
  %null_check281 = icmp eq %"struct.rubinius::Object"* %call_site_execute279, null, !dbg !24
  br i1 %null_check281, label %bail_out, label %class_fallback260.continue262_crit_edge, !dbg !24

class_fallback260.continue262_crit_edge:          ; preds = %class_fallback260
  %local339.pre = load %"struct.rubinius::Object"** %23, align 8, !dbg !25
  br label %continue262, !dbg !24

continue262:                                      ; preds = %class_fallback260.continue262_crit_edge, %push_le272
  %local339 = phi %"struct.rubinius::Object"* [ %local252, %push_le272 ], [ %local339.pre, %class_fallback260.continue262_crit_edge ]
  %send_result282 = phi %"struct.rubinius::Object"* [ %36, %push_le272 ], [ %call_site_execute279, %class_fallback260.continue262_crit_edge ], !dbg !24
  %as_int286 = ptrtoint %"struct.rubinius::Object"* %send_result282 to i64, !dbg !24
  %and287 = and i64 %as_int286, 15, !dbg !24
  %is_true288 = icmp eq i64 %and287, 10, !dbg !24
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  br i1 %is_true288, label %ip508, label %ip483, !dbg !24

push_le272:                                       ; preds = %ip472
  %fixnum.ge = icmp sge %"struct.rubinius::Object"* %local252, %field258, !dbg !24
  %36 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !24
  br label %continue262, !dbg !24

ip483:                                            ; preds = %continue262
  %self294 = load %"struct.rubinius::Object"** %15, align 8, !dbg !26
  %field_pos2961679 = getelementptr %"struct.rubinius::Object"* %self294, i64 1, !dbg !26
  %field_pos296 = bitcast %"struct.rubinius::Object"* %field_pos2961679 to %"struct.rubinius::Object"**, !dbg !26
  %field297 = load %"struct.rubinius::Object"** %field_pos296, align 8, !dbg !26
  store %"struct.rubinius::Object"* %field297, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !26
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 1, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const302 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567952 to %"struct.rubinius::CallSite"**), align 16, !dbg !26
  %execute_pos303 = getelementptr %"struct.rubinius::CallSite"* %cache_const302, i64 0, i32 2, !dbg !26
  %execute304 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos303, align 8, !dbg !26
  store i32 487, i32* %9, align 4, !dbg !26
  %call_site_execute305 = call %"struct.rubinius::Object"* %execute304(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const302, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check308 = icmp eq %"struct.rubinius::Object"* %call_site_execute305, null, !dbg !26
  br i1 %null_check308, label %bail_out, label %check_active307, !dbg !26

check_active307:                                  ; preds = %ip483
  store %"struct.rubinius::Object"* %call_site_execute305, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %as_int312 = ptrtoint %"struct.rubinius::Object"* %call_site_execute305 to i64, !dbg !26
  %and313 = and i64 %as_int312, 15, !dbg !26
  %is_true314 = icmp eq i64 %and313, 10, !dbg !26
  br i1 %is_true314, label %ip502, label %ip492, !dbg !26

ip492:                                            ; preds = %check_active307
  %self316 = load %"struct.rubinius::Object"** %15, align 8, !dbg !26
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !26
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 2, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const323 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568024 to %"struct.rubinius::CallSite"**), align 8, !dbg !26
  %execute_pos324 = getelementptr %"struct.rubinius::CallSite"* %cache_const323, i64 0, i32 2, !dbg !26
  %execute325 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos324, align 8, !dbg !26
  store i32 496, i32* %9, align 4, !dbg !26
  %call_site_execute326 = call %"struct.rubinius::Object"* %execute325(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const323, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check329 = icmp eq %"struct.rubinius::Object"* %call_site_execute326, null, !dbg !26
  br i1 %null_check329, label %bail_out, label %check_active328, !dbg !26

ip502:                                            ; preds = %check_active307
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br label %return_pad, !dbg !27

ip508:                                            ; preds = %continue262
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !25
  %cast347 = ptrtoint %"struct.rubinius::Object"* %local339 to i64, !dbg !25
  %fixnums_anded351 = and i64 %cast347, 1
  %is_fixnum353 = icmp eq i64 %fixnums_anded351, 0, !dbg !25
  br i1 %is_fixnum353, label %class_fallback342, label %push_le354, !dbg !25

check_active328:                                  ; preds = %ip492
  store %"struct.rubinius::Object"* %call_site_execute326, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  br label %return_pad, !dbg !26

class_fallback342:                                ; preds = %ip508
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !25
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !25
  store i32 1, i32* %out_args_total, align 8, !dbg !25
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !25
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !25
  %cache_const359 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568160 to %"struct.rubinius::CallSite"**), align 32, !dbg !25
  %execute_pos360 = getelementptr %"struct.rubinius::CallSite"* %cache_const359, i64 0, i32 2, !dbg !25
  %execute361 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos360, align 8, !dbg !25
  store i32 513, i32* %9, align 4, !dbg !25
  %call_site_execute362 = call %"struct.rubinius::Object"* %execute361(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const359, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !25
  %null_check364 = icmp eq %"struct.rubinius::Object"* %call_site_execute362, null, !dbg !25
  br i1 %null_check364, label %bail_out, label %continue344, !dbg !25

continue344:                                      ; preds = %class_fallback342, %push_le354
  %send_result365 = phi %"struct.rubinius::Object"* [ %37, %push_le354 ], [ %call_site_execute362, %class_fallback342 ], !dbg !25
  %as_int369 = ptrtoint %"struct.rubinius::Object"* %send_result365 to i64, !dbg !25
  %and370 = and i64 %as_int369, 15, !dbg !25
  %is_true371 = icmp eq i64 %and370, 10, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  br i1 %is_true371, label %ip522, label %return_pad, !dbg !25

push_le354:                                       ; preds = %ip508
  %fixnum.lt355 = icmp slt %"struct.rubinius::Object"* %local339, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !25
  %37 = select i1 %fixnum.lt355, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !25
  br label %continue344, !dbg !25

ip522:                                            ; preds = %continue344
  %local378 = load %"struct.rubinius::Object"** %23, align 8, !dbg !28, !rbx-classid !17
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %local381 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !28
  %cast394 = ptrtoint %"struct.rubinius::Object"* %local378 to i64, !dbg !28
  %cast395 = ptrtoint %"struct.rubinius::Object"* %local381 to i64, !dbg !28
  %fixnums_anded396 = and i64 %cast395, 1, !dbg !28
  %masked397 = and i64 %fixnums_anded396, %cast394, !dbg !28
  %is_fixnum398 = icmp eq i64 %masked397, 0, !dbg !28
  br i1 %is_fixnum398, label %class_fallback383, label %push_add390, !dbg !28

class_fallback383:                                ; preds = %ip522
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568280 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i64 0, i32 2, !dbg !28
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, align 8, !dbg !28
  store i32 528, i32* %9, align 4, !dbg !28
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !28
  br i1 %null_check418, label %bail_out, label %continue385, !dbg !28

continue385:                                      ; preds = %class_fallback383, %bignum392, %tagnow391
  %send_result419 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], [ %call_site_execute416, %class_fallback383 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %self422 = load %"struct.rubinius::Object"** %15, align 8, !dbg !28
  %field_pos4241680 = getelementptr %"struct.rubinius::Object"* %self422, i64 1, !dbg !28
  %field_pos424 = bitcast %"struct.rubinius::Object"* %field_pos4241680 to %"struct.rubinius::Object"**, !dbg !28
  %field425 = load %"struct.rubinius::Object"** %field_pos424, align 8, !dbg !28
  store %"struct.rubinius::Object"* %field425, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !28
  %cast432 = ptrtoint %"struct.rubinius::Object"* %send_result419 to i64, !dbg !28
  %cast435 = ptrtoint %"struct.rubinius::Object"* %field425 to i64, !dbg !28
  %fixnums_anded436 = and i64 %cast435, 1
  %masked437 = and i64 %fixnums_anded436, %cast432
  %is_fixnum438 = icmp eq i64 %masked437, 0, !dbg !28
  br i1 %is_fixnum438, label %class_fallback427, label %push_le439, !dbg !28

push_add390:                                      ; preds = %ip522
  %ashr400 = ashr i64 %cast394, 1, !dbg !28
  %ashr402 = ashr i64 %cast395, 1, !dbg !28
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !28
  %fixnum.add403.off = add i64 %fixnum.add403, 4611686018427387903, !dbg !28
  %38 = icmp ult i64 %fixnum.add403.off, 9223372036854775807, !dbg !28
  br i1 %38, label %tagnow391, label %bignum392, !dbg !28

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !28
  %or407 = or i64 %shl406, 1, !dbg !28
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !28
  br label %continue385, !dbg !28

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #1, !dbg !28
  br label %continue385, !dbg !28

class_fallback427:                                ; preds = %continue385
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const443 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568320 to %"struct.rubinius::CallSite"**), align 512, !dbg !28
  %execute_pos444 = getelementptr %"struct.rubinius::CallSite"* %cache_const443, i64 0, i32 2, !dbg !28
  %execute445 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos444, align 8, !dbg !28
  store i32 533, i32* %9, align 4, !dbg !28
  %call_site_execute446 = call %"struct.rubinius::Object"* %execute445(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const443, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check448 = icmp eq %"struct.rubinius::Object"* %call_site_execute446, null, !dbg !28
  br i1 %null_check448, label %bail_out, label %continue429, !dbg !28

continue429:                                      ; preds = %class_fallback427, %push_le439
  %send_result449 = phi %"struct.rubinius::Object"* [ %39, %push_le439 ], [ %call_site_execute446, %class_fallback427 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result449, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %as_int453 = ptrtoint %"struct.rubinius::Object"* %send_result449 to i64, !dbg !28
  %and454 = and i64 %as_int453, 15, !dbg !28
  %is_true455 = icmp eq i64 %and454, 10, !dbg !28
  br i1 %is_true455, label %ip549, label %ip538, !dbg !28

push_le439:                                       ; preds = %continue385
  %fixnum.gt = icmp sgt %"struct.rubinius::Object"* %send_result419, %field425, !dbg !28
  %39 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !28
  br label %continue429, !dbg !28

ip538:                                            ; preds = %continue429
  %self458 = load %"struct.rubinius::Object"** %15, align 8, !dbg !30
  %field_pos4601681 = getelementptr %"struct.rubinius::Object"* %self458, i64 1, !dbg !30
  %field_pos460 = bitcast %"struct.rubinius::Object"* %field_pos4601681 to %"struct.rubinius::Object"**, !dbg !30
  %field461 = load %"struct.rubinius::Object"** %field_pos460, align 8, !dbg !30
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %stack, align 8, !dbg !30
  %local464 = load %"struct.rubinius::Object"** %23, align 8, !dbg !30, !rbx-classid !17
  store %"struct.rubinius::Object"* %local464, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !30
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !30
  store i32 1, i32* %out_args_total, align 8, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !30
  %cache_const469 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568392 to %"struct.rubinius::CallSite"**), align 8, !dbg !30
  %execute_pos470 = getelementptr %"struct.rubinius::CallSite"* %cache_const469, i64 0, i32 2, !dbg !30
  %execute471 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos470, align 8, !dbg !30
  store i32 542, i32* %9, align 4, !dbg !30
  %call_site_execute472 = call %"struct.rubinius::Object"* %execute471(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const469, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check475 = icmp eq %"struct.rubinius::Object"* %call_site_execute472, null, !dbg !30
  br i1 %null_check475, label %bail_out, label %check_active474, !dbg !30

check_active474:                                  ; preds = %ip538
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %stack, align 8, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %24, align 8, !dbg !30
  br label %ip550, !dbg !30

ip550:                                            ; preds = %ip549, %check_active474
  %self481 = load %"struct.rubinius::Object"** %15, align 8, !dbg !31
  store %"struct.rubinius::Object"* %self481, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %40 = getelementptr %"struct.rubinius::Object"* %self481, i64 1, i32 0, i32 2, !dbg !31
  %field487 = load %"struct.rubinius::Object"** %40, align 8, !dbg !31
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !31
  %local490 = load %"struct.rubinius::Object"** %23, align 8, !dbg !31, !rbx-classid !17
  store %"struct.rubinius::Object"* %local490, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !31
  %cast503 = ptrtoint %"struct.rubinius::Object"* %field487 to i64, !dbg !31
  %cast504 = ptrtoint %"struct.rubinius::Object"* %local490 to i64, !dbg !31
  %fixnums_anded505 = and i64 %cast504, 1, !dbg !31
  %masked506 = and i64 %fixnums_anded505, %cast503, !dbg !31
  %is_fixnum507 = icmp eq i64 %masked506, 0, !dbg !31
  br i1 %is_fixnum507, label %class_fallback492, label %push_add499, !dbg !31

class_fallback492:                                ; preds = %ip550
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 1, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const522 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568504 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos523 = getelementptr %"struct.rubinius::CallSite"* %cache_const522, i64 0, i32 2, !dbg !31
  %execute524 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos523, align 8, !dbg !31
  store i32 556, i32* %9, align 4, !dbg !31
  %call_site_execute525 = call %"struct.rubinius::Object"* %execute524(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const522, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check527 = icmp eq %"struct.rubinius::Object"* %call_site_execute525, null, !dbg !31
  br i1 %null_check527, label %bail_out, label %continue494, !dbg !31

continue494:                                      ; preds = %class_fallback492, %bignum501, %tagnow500
  %stack_load544 = phi %"struct.rubinius::Object"* [ %big_value514, %bignum501 ], [ %as_obj517, %tagnow500 ], [ %call_site_execute525, %class_fallback492 ], !dbg !31
  store %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !31
  %local531 = load %"struct.rubinius::Object"** %24, align 8, !dbg !31, !rbx-classid !29
  store %"struct.rubinius::Object"* %local531, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !31
  %stack_load537 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %cast538 = ptrtoint %"struct.rubinius::Object"* %stack_load537 to i64, !dbg !31
  %masked539 = and i64 %cast538, 3, !dbg !31
  %is_reference = icmp eq i64 %masked539, 0, !dbg !31
  br i1 %is_reference, label %check_class_id, label %class_fallback533, !dbg !31

push_add499:                                      ; preds = %ip550
  %ashr509 = ashr i64 %cast503, 1, !dbg !31
  %ashr511 = ashr i64 %cast504, 1, !dbg !31
  %fixnum.add512 = add i64 %ashr509, %ashr511, !dbg !31
  %fixnum.add512.off = add i64 %fixnum.add512, 4611686018427387903, !dbg !31
  %41 = icmp ult i64 %fixnum.add512.off, 9223372036854775807, !dbg !31
  br i1 %41, label %tagnow500, label %bignum501, !dbg !31

tagnow500:                                        ; preds = %push_add499
  %shl515 = shl i64 %fixnum.add512, 1, !dbg !31
  %or516 = or i64 %shl515, 1, !dbg !31
  %as_obj517 = inttoptr i64 %or516 to %"struct.rubinius::Object"*, !dbg !31
  br label %continue494, !dbg !31

bignum501:                                        ; preds = %push_add499
  %big_value514 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add512) #1, !dbg !31
  br label %continue494, !dbg !31

continue535:                                      ; preds = %class_fallback533, %correct_serial
  %send_result560 = phi %"struct.rubinius::Object"* [ %prim_value, %correct_serial ], [ %call_site_execute557, %class_fallback533 ], !dbg !31
  store %"struct.rubinius::Object"* %send_result560, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  br label %return_pad, !dbg !31

ip549:                                            ; preds = %continue429
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  br label %ip550, !dbg !28

ip74:                                             ; preds = %ip45
  %local566 = load %"struct.rubinius::Object"** %23, align 8, !dbg !32, !rbx-classid !17
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %stack, align 8, !dbg !32
  %self569 = load %"struct.rubinius::Object"** %15, align 8, !dbg !32
  %field_pos5711682 = getelementptr %"struct.rubinius::Object"* %self569, i64 1, !dbg !32
  %field_pos571 = bitcast %"struct.rubinius::Object"* %field_pos5711682 to %"struct.rubinius::Object"**, !dbg !32
  %field572 = load %"struct.rubinius::Object"** %field_pos571, align 8, !dbg !32
  store %"struct.rubinius::Object"* %field572, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !32
  %cast579 = ptrtoint %"struct.rubinius::Object"* %local566 to i64, !dbg !32
  %cast582 = ptrtoint %"struct.rubinius::Object"* %field572 to i64, !dbg !32
  %fixnums_anded583 = and i64 %cast582, 1
  %masked584 = and i64 %fixnums_anded583, %cast579
  %is_fixnum585 = icmp eq i64 %masked584, 0, !dbg !32
  br i1 %is_fixnum585, label %class_fallback574, label %push_le586, !dbg !32

check_class_id:                                   ; preds = %continue494
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load537, i64 0, i32 0, i32 1, !dbg !31
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !31
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !31
  %class_id = load i32* %class_id_pos, align 4, !dbg !31
  %check_class_id540 = icmp eq i32 %class_id, 6, !dbg !31
  br i1 %check_class_id540, label %correct_class, label %class_fallback533, !dbg !31

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !31
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !31
  %check_serial_id = icmp eq i32 %serial_id, 243, !dbg !31
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback534, !dbg !31

class_fallback533:                                ; preds = %correct_serial.class_fallback533_crit_edge, %check_class_id, %continue494
  %stack_load552 = phi %"struct.rubinius::Object"* [ %stack_load552.pre, %correct_serial.class_fallback533_crit_edge ], [ %stack_load537, %check_class_id ], [ %stack_load537, %continue494 ]
  store %"struct.rubinius::Object"* %stack_load552, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 2, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const554 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568552 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos555 = getelementptr %"struct.rubinius::CallSite"* %cache_const554, i64 0, i32 2, !dbg !31
  %execute556 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos555, align 8, !dbg !31
  store i32 562, i32* %9, align 4, !dbg !31
  %call_site_execute557 = call %"struct.rubinius::Object"* %execute556(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const554, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check559 = icmp eq %"struct.rubinius::Object"* %call_site_execute557, null, !dbg !31
  br i1 %null_check559, label %bail_out, label %continue535, !dbg !31

correct_serial:                                   ; preds = %correct_class
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load537, %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"* %local531) #1, !dbg !31
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !31
  switch i64 %magicptr, label %continue535 [
    i64 34, label %correct_serial.class_fallback533_crit_edge
    i64 0, label %bail_out
  ], !dbg !31

correct_serial.class_fallback533_crit_edge:       ; preds = %correct_serial
  %stack_load552.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  br label %class_fallback533, !dbg !31

serial_fallback534:                               ; preds = %correct_class
  store i32 562, i32* %9, align 4, !dbg !31
  %42 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 562, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad, !dbg !31

class_fallback574:                                ; preds = %ip74
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !32
  store i32 1, i32* %out_args_total, align 8, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !32
  %cache_const591 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564680 to %"struct.rubinius::CallSite"**), align 8, !dbg !32
  %execute_pos592 = getelementptr %"struct.rubinius::CallSite"* %cache_const591, i64 0, i32 2, !dbg !32
  %execute593 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos592, align 8, !dbg !32
  store i32 78, i32* %9, align 4, !dbg !32
  %call_site_execute594 = call %"struct.rubinius::Object"* %execute593(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const591, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check596 = icmp eq %"struct.rubinius::Object"* %call_site_execute594, null, !dbg !32
  br i1 %null_check596, label %bail_out, label %continue576, !dbg !32

continue576:                                      ; preds = %class_fallback574, %push_le586
  %send_result597 = phi %"struct.rubinius::Object"* [ %43, %push_le586 ], [ %call_site_execute594, %class_fallback574 ], !dbg !32
  %as_int601 = ptrtoint %"struct.rubinius::Object"* %send_result597 to i64, !dbg !32
  %and602 = and i64 %as_int601, 15, !dbg !32
  %is_true603 = icmp eq i64 %and602, 10, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !32
  br i1 %is_true603, label %ip87, label %return_pad, !dbg !32

push_le586:                                       ; preds = %ip74
  %fixnum.ge587 = icmp sge %"struct.rubinius::Object"* %local566, %field572, !dbg !32
  %43 = select i1 %fixnum.ge587, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !32
  br label %continue576, !dbg !32

ip87:                                             ; preds = %continue576
  %44 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !33
  %stack_pos610 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 21, !dbg !33
  store %"struct.rubinius::Object"* %44, %"struct.rubinius::Object"** %stack_pos610, align 8, !dbg !33
  %self614 = load %"struct.rubinius::Object"** %15, align 8, !dbg !34
  %field_pos616 = getelementptr %"struct.rubinius::Object"* %self614, i64 1, i32 0, i32 1, !dbg !34
  %45 = load %"struct.rubinius::Class"** %field_pos616, align 8, !dbg !34
  %field617 = getelementptr inbounds %"struct.rubinius::Class"* %45, i64 0, i32 0, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %field617, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  %46 = getelementptr %"struct.rubinius::Object"* %self614, i64 1, i32 0, i32 2, !dbg !34
  %field623 = load %"struct.rubinius::Object"** %46, align 8, !dbg !34
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !34
  %local626 = load %"struct.rubinius::Object"** %23, align 8, !dbg !34, !rbx-classid !17
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !34
  %cast639 = ptrtoint %"struct.rubinius::Object"* %field623 to i64, !dbg !34
  %cast640 = ptrtoint %"struct.rubinius::Object"* %local626 to i64, !dbg !34
  %fixnums_anded641 = and i64 %cast640, 1, !dbg !34
  %masked642 = and i64 %fixnums_anded641, %cast639, !dbg !34
  %is_fixnum643 = icmp eq i64 %masked642, 0, !dbg !34
  br i1 %is_fixnum643, label %class_fallback628, label %push_add635, !dbg !34

is_exception:                                     ; preds = %class_fallback628
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !33
  br i1 %rae, label %ip112, label %bail_out, !dbg !33

class_fallback628:                                ; preds = %ip87
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !34
  store i32 1, i32* %out_args_total, align 8, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !34
  %cache_const658 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564872 to %"struct.rubinius::CallSite"**), align 8, !dbg !34
  %execute_pos659 = getelementptr %"struct.rubinius::CallSite"* %cache_const658, i64 0, i32 2, !dbg !34
  %execute660 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos659, align 8, !dbg !34
  store i32 102, i32* %9, align 4, !dbg !34
  %call_site_execute661 = call %"struct.rubinius::Object"* %execute660(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const658, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check663 = icmp eq %"struct.rubinius::Object"* %call_site_execute661, null, !dbg !34
  br i1 %null_check663, label %is_exception, label %continue630, !dbg !34

continue630:                                      ; preds = %class_fallback628, %bignum637, %tagnow636
  %send_result664 = phi %"struct.rubinius::Object"* [ %big_value650, %bignum637 ], [ %as_obj653, %tagnow636 ], [ %call_site_execute661, %class_fallback628 ], !dbg !34
  store %"struct.rubinius::Object"* %send_result664, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !34
  %stack_load670 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load670, i64 0, i32 0, i32 0, i32 0, !dbg !34
  %flags = load i64* %word_pos, align 8, !dbg !34
  %mask = and i64 %flags, 255, !dbg !34
  %is_type = icmp eq i64 %mask, 73, !dbg !34
  br i1 %is_type, label %is_tuple, label %class_fallback666, !dbg !34

push_add635:                                      ; preds = %ip87
  %ashr645 = ashr i64 %cast639, 1, !dbg !34
  %ashr647 = ashr i64 %cast640, 1, !dbg !34
  %fixnum.add648 = add i64 %ashr645, %ashr647, !dbg !34
  %fixnum.add648.off = add i64 %fixnum.add648, 4611686018427387903, !dbg !34
  %47 = icmp ult i64 %fixnum.add648.off, 9223372036854775807, !dbg !34
  br i1 %47, label %tagnow636, label %bignum637, !dbg !34

tagnow636:                                        ; preds = %push_add635
  %shl651 = shl i64 %fixnum.add648, 1, !dbg !34
  %or652 = or i64 %shl651, 1, !dbg !34
  %as_obj653 = inttoptr i64 %or652 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue630, !dbg !34

bignum637:                                        ; preds = %push_add635
  %big_value650 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add648) #1, !dbg !34
  br label %continue630, !dbg !34

class_fallback666:                                ; preds = %is_tuple, %continue630
  store i32 105, i32* %9, align 4, !dbg !34
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !34
  %48 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695120624 to i8*), i32 1, i8 0), !dbg !34
  br label %return_pad, !dbg !34

ip112:                                            ; preds = %is_exception
  %49 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %49, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %stack_pos684 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 20, !dbg !22
  store %"struct.rubinius::Object"* %49, %"struct.rubinius::Object"** %stack_pos684, align 8, !dbg !22
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  %constant_cache692 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !35
  %constant_cache_pos693 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 4, !dbg !35
  %constant_scope694 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos693, align 8, !dbg !35
  %50 = load %"struct.rubinius::Object"** %6, align 8, !dbg !35
  %frame_scope696 = bitcast %"struct.rubinius::Object"* %50 to %"struct.rubinius::ConstantScope"*, !dbg !35
  %same_scope697 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope694, %frame_scope696, !dbg !35
  br i1 %same_scope697, label %check_serial698, label %use_call700, !dbg !35

is_tuple:                                         ; preds = %continue630
  %cast673 = ptrtoint %"struct.rubinius::Object"* %send_result664 to i64, !dbg !34
  %masked674 = and i64 %cast673, -9223372036854775807, !dbg !34
  %is_fixnum675 = icmp eq i64 %masked674, 1, !dbg !34
  %ashr677 = ashr i64 %cast673, 1, !dbg !34
  %51 = getelementptr inbounds %"struct.rubinius::Object"* %stack_load670, i64 1, i32 0, i32 0, i32 0, !dbg !34
  %table_size = load i64* %51, align 8, !dbg !34
  %52 = add i64 %table_size, -32, !dbg !34
  %53 = sdiv i64 %52, 8, !dbg !34
  %is_in_bounds = icmp slt i64 %ashr677, %53, !dbg !34
  %access_cmp = and i1 %is_fixnum675, %is_in_bounds, !dbg !34
  br i1 %access_cmp, label %tuple_at, label %class_fallback666, !dbg !34

tuple_at:                                         ; preds = %is_tuple
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load670 to %"struct.rubinius::Tuple"*, !dbg !34
  %field_pos678 = getelementptr %"struct.rubinius::Tuple"* %upcast, i64 0, i32 2, i64 %ashr677, !dbg !34
  %tuple_at679 = load %"struct.rubinius::Object"** %field_pos678, align 8, !dbg !34
  store %"struct.rubinius::Object"* %tuple_at679, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  br label %return_pad, !dbg !34

check_serial698:                                  ; preds = %ip112
  %global_serial691 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !35
  %serial_pos702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 7, !dbg !35
  %serial703 = load i32* %serial_pos702, align 4, !dbg !35
  %use_cache704 = icmp eq i32 %global_serial691, %serial703, !dbg !35
  br i1 %use_cache704, label %use_cache699, label %use_call700, !dbg !35

use_cache699:                                     ; preds = %check_serial698
  %value_pos705 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 2, !dbg !35
  %cached_value706 = load %"struct.rubinius::Object"** %value_pos705, align 8, !dbg !35
  br label %continue701, !dbg !35

use_call700:                                      ; preds = %check_serial698, %ip112
  store i32 118, i32* %9, align 4, !dbg !35
  %push_const_fast707 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !35
  %null_check710 = icmp eq %"struct.rubinius::Object"* %push_const_fast707, null, !dbg !35
  br i1 %null_check710, label %bail_out, label %continue701, !dbg !35

continue701:                                      ; preds = %use_call700, %use_cache699
  %constant711 = phi %"struct.rubinius::Object"* [ %cached_value706, %use_cache699 ], [ %push_const_fast707, %use_call700 ], !dbg !35, !rbx-classid !36
  store %"struct.rubinius::Object"* %constant711, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !35
  %constant_cache716 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !35
  %constant_cache_pos717 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 4, !dbg !35
  %constant_scope718 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos717, align 8, !dbg !35
  %same_scope721 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope718, %frame_scope696, !dbg !35
  br i1 %same_scope721, label %check_serial722, label %use_call724, !dbg !35

check_serial722:                                  ; preds = %continue701
  %global_serial715 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !35
  %serial_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 7, !dbg !35
  %serial727 = load i32* %serial_pos726, align 4, !dbg !35
  %use_under = icmp eq i32 %global_serial715, %serial727, !dbg !35
  br i1 %use_under, label %check_under, label %use_call724, !dbg !35

check_under:                                      ; preds = %check_serial722
  %value_pos728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 3, !dbg !35
  %cached_under = load %"struct.rubinius::Module"** %value_pos728, align 8, !dbg !35
  %downcast = getelementptr inbounds %"struct.rubinius::Module"* %cached_under, i64 0, i32 0, !dbg !35
  %use_cache729 = icmp eq %"struct.rubinius::Object"* %downcast, %constant711, !dbg !35
  br i1 %use_cache729, label %use_cache723, label %use_call724, !dbg !35

use_cache723:                                     ; preds = %check_under
  %value_pos730 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 2, !dbg !35
  %cached_value731 = load %"struct.rubinius::Object"** %value_pos730, align 8, !dbg !35
  br label %continue725, !dbg !35

use_call724:                                      ; preds = %check_under, %check_serial722, %continue701
  store i32 120, i32* %9, align 4, !dbg !35
  %constant732 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant711) #0, !dbg !35
  %null_check735 = icmp eq %"struct.rubinius::Object"* %constant732, null, !dbg !35
  br i1 %null_check735, label %bail_out, label %continue725, !dbg !35

continue725:                                      ; preds = %use_call724, %use_cache723
  %constant736 = phi %"struct.rubinius::Object"* [ %cached_value731, %use_cache723 ], [ %constant732, %use_call724 ], !dbg !35, !rbx-classid !37
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !35
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !35
  store i32 1, i32* %out_args_total, align 8, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !35
  %cache_const747 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565040 to %"struct.rubinius::CallSite"**), align 16, !dbg !35
  %execute_pos748 = getelementptr %"struct.rubinius::CallSite"* %cache_const747, i64 0, i32 2, !dbg !35
  %execute749 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos748, align 8, !dbg !35
  store i32 123, i32* %9, align 4, !dbg !35
  %call_site_execute750 = call %"struct.rubinius::Object"* %execute749(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const747, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check753 = icmp eq %"struct.rubinius::Object"* %call_site_execute750, null, !dbg !35
  br i1 %null_check753, label %bail_out, label %check_active752, !dbg !35

check_active752:                                  ; preds = %continue725
  store %"struct.rubinius::Object"* %call_site_execute750, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  %as_int757 = ptrtoint %"struct.rubinius::Object"* %call_site_execute750 to i64, !dbg !35
  %and758 = and i64 %as_int757, 15, !dbg !35
  %is_true759 = icmp eq i64 %and758, 10, !dbg !35
  br i1 %is_true759, label %ip139, label %ip130, !dbg !35

ip139:                                            ; preds = %check_active752
  %stack_local = load %"struct.rubinius::Object"** %stack_pos684, align 8, !dbg !38
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %54 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local), !dbg !38
  br label %bail_out, !dbg !38

ip130:                                            ; preds = %check_active752
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %stack_local769 = load %"struct.rubinius::Object"** %stack_pos610, align 8, !dbg !38
  store %"struct.rubinius::Object"* %stack_local769, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !38
  %55 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local769), !dbg !38
  %stack_load774 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !38, !rbx-classid !39
  br label %return_pad, !dbg !38

ip44:                                             ; preds = %continue53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  br label %ip45, !dbg !16

ip149:                                            ; preds = %continue18
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  %constant_cache780 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !40
  %constant_cache_pos781 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 4, !dbg !40
  %constant_scope782 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos781, align 8, !dbg !40
  %same_scope785 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope782, %frame_scope, !dbg !40
  br i1 %same_scope785, label %check_serial786, label %use_call788, !dbg !40

check_serial786:                                  ; preds = %ip149
  %global_serial779 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !40
  %serial_pos790 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 7, !dbg !40
  %serial791 = load i32* %serial_pos790, align 4, !dbg !40
  %use_cache792 = icmp eq i32 %global_serial779, %serial791, !dbg !40
  br i1 %use_cache792, label %use_cache787, label %use_call788, !dbg !40

use_cache787:                                     ; preds = %check_serial786
  %value_pos793 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 2, !dbg !40
  %cached_value794 = load %"struct.rubinius::Object"** %value_pos793, align 8, !dbg !40
  br label %continue789, !dbg !40

use_call788:                                      ; preds = %check_serial786, %ip149
  store i32 150, i32* %9, align 4, !dbg !40
  %push_const_fast795 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !40
  %null_check798 = icmp eq %"struct.rubinius::Object"* %push_const_fast795, null, !dbg !40
  br i1 %null_check798, label %bail_out, label %continue789, !dbg !40

continue789:                                      ; preds = %use_call788, %use_cache787
  %constant799 = phi %"struct.rubinius::Object"* [ %cached_value794, %use_cache787 ], [ %push_const_fast795, %use_call788 ], !dbg !40, !rbx-classid !41
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !40
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 1, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const810 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565280 to %"struct.rubinius::CallSite"**), align 32, !dbg !40
  %execute_pos811 = getelementptr %"struct.rubinius::CallSite"* %cache_const810, i64 0, i32 2, !dbg !40
  %execute812 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos811, align 8, !dbg !40
  store i32 153, i32* %9, align 4, !dbg !40
  %call_site_execute813 = call %"struct.rubinius::Object"* %execute812(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const810, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute813, null, !dbg !40
  br i1 %null_check816, label %bail_out, label %check_active815, !dbg !40

check_active815:                                  ; preds = %continue789
  store %"struct.rubinius::Object"* %call_site_execute813, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  %as_int820 = ptrtoint %"struct.rubinius::Object"* %call_site_execute813 to i64, !dbg !40
  %and821 = and i64 %as_int820, 15, !dbg !40
  %is_true822 = icmp eq i64 %and821, 10, !dbg !40
  br i1 %is_true822, label %ip313, label %ip158, !dbg !40

ip158:                                            ; preds = %check_active815
  %system_object824 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !42
  store %"struct.rubinius::Object"* %system_object824, %"struct.rubinius::Object"** %stack, align 8, !dbg !42
  %local827 = load %"struct.rubinius::Object"** %21, align 8, !dbg !42, !rbx-classid !13
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !42
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !42
  store i32 0, i32* %out_args_total, align 8, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !42
  %cache_const831 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565352 to %"struct.rubinius::CallSite"**), align 8, !dbg !42
  %execute_pos832 = getelementptr %"struct.rubinius::CallSite"* %cache_const831, i64 0, i32 2, !dbg !42
  %execute833 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos832, align 8, !dbg !42
  store i32 162, i32* %9, align 4, !dbg !42
  %call_site_execute834 = call %"struct.rubinius::Object"* %execute833(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const831, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check837 = icmp eq %"struct.rubinius::Object"* %call_site_execute834, null, !dbg !42
  br i1 %null_check837, label %bail_out, label %check_active836, !dbg !42

check_active836:                                  ; preds = %ip158
  store %"struct.rubinius::Object"* %call_site_execute834, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !42
  %constant_cache840 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**), align 128, !dbg !42
  %constant_cache_pos841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 4, !dbg !42
  %constant_scope842 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos841, align 8, !dbg !42
  %56 = load %"struct.rubinius::Object"** %6, align 8, !dbg !42
  %frame_scope844 = bitcast %"struct.rubinius::Object"* %56 to %"struct.rubinius::ConstantScope"*, !dbg !42
  %same_scope845 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope842, %frame_scope844, !dbg !42
  br i1 %same_scope845, label %check_serial846, label %use_call848, !dbg !42

check_serial846:                                  ; preds = %check_active836
  %global_serial839 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !42
  %serial_pos850 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 7, !dbg !42
  %serial851 = load i32* %serial_pos850, align 4, !dbg !42
  %use_cache852 = icmp eq i32 %global_serial839, %serial851, !dbg !42
  br i1 %use_cache852, label %use_cache847, label %use_call848, !dbg !42

use_cache847:                                     ; preds = %check_serial846
  %value_pos853 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 2, !dbg !42
  %cached_value854 = load %"struct.rubinius::Object"** %value_pos853, align 8, !dbg !42
  br label %continue849, !dbg !42

use_call848:                                      ; preds = %check_serial846, %check_active836
  store i32 165, i32* %9, align 4, !dbg !42
  %push_const_fast855 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !42
  %null_check858 = icmp eq %"struct.rubinius::Object"* %push_const_fast855, null, !dbg !42
  br i1 %null_check858, label %bail_out, label %continue849, !dbg !42

continue849:                                      ; preds = %use_call848, %use_cache847
  %constant859 = phi %"struct.rubinius::Object"* [ %cached_value854, %use_cache847 ], [ %push_const_fast855, %use_call848 ], !dbg !42, !rbx-classid !43
  store %"struct.rubinius::Object"* %constant859, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !42
  %stack_pos861 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, align 8, !dbg !42
  %stack_load863 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !42
  store %"struct.rubinius::Object"* %stack_load863, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !42
  store i32 3, i32* %out_args_total, align 8, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !42
  %cache_const865 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565408 to %"struct.rubinius::CallSite"**), align 32, !dbg !42
  %execute_pos866 = getelementptr %"struct.rubinius::CallSite"* %cache_const865, i64 0, i32 2, !dbg !42
  %execute867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos866, align 8, !dbg !42
  store i32 169, i32* %9, align 4, !dbg !42
  %call_site_execute868 = call %"struct.rubinius::Object"* %execute867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const865, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check871 = icmp eq %"struct.rubinius::Object"* %call_site_execute868, null, !dbg !42
  br i1 %null_check871, label %bail_out, label %check_active870, !dbg !42

check_active870:                                  ; preds = %continue849
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %23, align 8, !dbg !42
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const883 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565480 to %"struct.rubinius::CallSite"**), align 8, !dbg !44
  %execute_pos884 = getelementptr %"struct.rubinius::CallSite"* %cache_const883, i64 0, i32 2, !dbg !44
  %execute885 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos884, align 8, !dbg !44
  store i32 178, i32* %9, align 4, !dbg !44
  %call_site_execute886 = call %"struct.rubinius::Object"* %execute885(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const883, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check889 = icmp eq %"struct.rubinius::Object"* %call_site_execute886, null, !dbg !44
  br i1 %null_check889, label %bail_out, label %check_active888, !dbg !44

check_active888:                                  ; preds = %check_active870
  store %"struct.rubinius::Object"* %call_site_execute886, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %as_int893 = ptrtoint %"struct.rubinius::Object"* %call_site_execute886 to i64, !dbg !44
  %and894 = and i64 %as_int893, 15, !dbg !44
  %is_true895 = icmp eq i64 %and894, 10, !dbg !44
  br i1 %is_true895, label %ip194, label %ip183, !dbg !44

ip183:                                            ; preds = %check_active888
  %local898 = load %"struct.rubinius::Object"** %23, align 8, !dbg !44, !rbx-classid !17
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %self901 = load %"struct.rubinius::Object"** %15, align 8, !dbg !44
  %field_pos9031683 = getelementptr %"struct.rubinius::Object"* %self901, i64 1, !dbg !44
  %field_pos903 = bitcast %"struct.rubinius::Object"* %field_pos9031683 to %"struct.rubinius::Object"**, !dbg !44
  %field904 = load %"struct.rubinius::Object"** %field_pos903, align 8, !dbg !44
  store %"struct.rubinius::Object"* %field904, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !44
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const909 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565552 to %"struct.rubinius::CallSite"**), align 16, !dbg !44
  %execute_pos910 = getelementptr %"struct.rubinius::CallSite"* %cache_const909, i64 0, i32 2, !dbg !44
  %execute911 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos910, align 8, !dbg !44
  store i32 187, i32* %9, align 4, !dbg !44
  %call_site_execute912 = call %"struct.rubinius::Object"* %execute911(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const909, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check915 = icmp eq %"struct.rubinius::Object"* %call_site_execute912, null, !dbg !44
  br i1 %null_check915, label %bail_out, label %check_active914, !dbg !44

check_active914:                                  ; preds = %ip183
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %23, align 8, !dbg !44
  br label %ip195, !dbg !44

ip195:                                            ; preds = %ip194, %check_active914
  %local922 = phi %"struct.rubinius::Object"* [ %local922.pre, %ip194 ], [ %call_site_execute912, %check_active914 ]
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const928 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565648 to %"struct.rubinius::CallSite"**), align 16, !dbg !45
  %execute_pos929 = getelementptr %"struct.rubinius::CallSite"* %cache_const928, i64 0, i32 2, !dbg !45
  %execute930 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos929, align 8, !dbg !45
  store i32 199, i32* %9, align 4, !dbg !45
  %call_site_execute931 = call %"struct.rubinius::Object"* %execute930(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const928, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check934 = icmp eq %"struct.rubinius::Object"* %call_site_execute931, null, !dbg !45
  br i1 %null_check934, label %bail_out, label %check_active933, !dbg !45

check_active933:                                  ; preds = %ip195
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  %as_int941 = ptrtoint %"struct.rubinius::Object"* %call_site_execute931 to i64, !dbg !45
  %and942 = and i64 %as_int941, 15, !dbg !45
  %is_true943 = icmp eq i64 %and942, 10, !dbg !45
  br i1 %is_true943, label %ip205, label %ip213, !dbg !45

ip205:                                            ; preds = %check_active933
  %local946 = load %"struct.rubinius::Object"** %23, align 8, !dbg !45, !rbx-classid !17
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  %self949 = load %"struct.rubinius::Object"** %15, align 8, !dbg !45
  %field_pos9511684 = getelementptr %"struct.rubinius::Object"* %self949, i64 1, !dbg !45
  %field_pos951 = bitcast %"struct.rubinius::Object"* %field_pos9511684 to %"struct.rubinius::Object"**, !dbg !45
  %field952 = load %"struct.rubinius::Object"** %field_pos951, align 8, !dbg !45
  store %"struct.rubinius::Object"* %field952, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const957 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565736 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos958 = getelementptr %"struct.rubinius::CallSite"* %cache_const957, i64 0, i32 2, !dbg !45
  %execute959 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos958, align 8, !dbg !45
  store i32 210, i32* %9, align 4, !dbg !45
  %call_site_execute960 = call %"struct.rubinius::Object"* %execute959(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const957, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check963 = icmp eq %"struct.rubinius::Object"* %call_site_execute960, null, !dbg !45
  br i1 %null_check963, label %bail_out, label %check_active962, !dbg !45

ip213:                                            ; preds = %check_active933, %check_active962
  %stack_load966 = phi %"struct.rubinius::Object"* [ %call_site_execute931, %check_active933 ], [ %call_site_execute960, %check_active962 ]
  %as_int967 = ptrtoint %"struct.rubinius::Object"* %stack_load966 to i64, !dbg !45
  %and968 = and i64 %as_int967, 15, !dbg !45
  %is_true969 = icmp eq i64 %and968, 10, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  br i1 %is_true969, label %ip219, label %return_pad, !dbg !45

check_active962:                                  ; preds = %ip205
  store %"struct.rubinius::Object"* %call_site_execute960, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  br label %ip213, !dbg !45

ip219:                                            ; preds = %ip213
  %system_object975 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !46
  store %"struct.rubinius::Object"* %system_object975, %"struct.rubinius::Object"** %stack, align 8, !dbg !46
  %local978 = load %"struct.rubinius::Object"** %21, align 8, !dbg !46, !rbx-classid !13
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !46
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 0, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  %cache_const982 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565848 to %"struct.rubinius::CallSite"**), align 8, !dbg !46
  %execute_pos983 = getelementptr %"struct.rubinius::CallSite"* %cache_const982, i64 0, i32 2, !dbg !46
  %execute984 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos983, align 8, !dbg !46
  store i32 224, i32* %9, align 4, !dbg !46
  %call_site_execute985 = call %"struct.rubinius::Object"* %execute984(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const982, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check988 = icmp eq %"struct.rubinius::Object"* %call_site_execute985, null, !dbg !46
  br i1 %null_check988, label %bail_out, label %check_active987, !dbg !46

check_active987:                                  ; preds = %ip219
  store %"struct.rubinius::Object"* %call_site_execute985, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !46
  %constant_cache991 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !46
  %constant_cache_pos992 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 4, !dbg !46
  %constant_scope993 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos992, align 8, !dbg !46
  %57 = load %"struct.rubinius::Object"** %6, align 8, !dbg !46
  %frame_scope995 = bitcast %"struct.rubinius::Object"* %57 to %"struct.rubinius::ConstantScope"*, !dbg !46
  %same_scope996 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope993, %frame_scope995, !dbg !46
  br i1 %same_scope996, label %check_serial997, label %use_call999, !dbg !46

check_serial997:                                  ; preds = %check_active987
  %global_serial990 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !46
  %serial_pos1001 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 7, !dbg !46
  %serial1002 = load i32* %serial_pos1001, align 4, !dbg !46
  %use_cache1003 = icmp eq i32 %global_serial990, %serial1002, !dbg !46
  br i1 %use_cache1003, label %use_cache998, label %use_call999, !dbg !46

use_cache998:                                     ; preds = %check_serial997
  %value_pos1004 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 2, !dbg !46
  %cached_value1005 = load %"struct.rubinius::Object"** %value_pos1004, align 8, !dbg !46
  br label %continue1000, !dbg !46

use_call999:                                      ; preds = %check_serial997, %check_active987
  store i32 227, i32* %9, align 4, !dbg !46
  %push_const_fast1006 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !46
  %null_check1009 = icmp eq %"struct.rubinius::Object"* %push_const_fast1006, null, !dbg !46
  br i1 %null_check1009, label %bail_out, label %continue1000, !dbg !46

continue1000:                                     ; preds = %use_call999, %use_cache998
  %constant1010 = phi %"struct.rubinius::Object"* [ %cached_value1005, %use_cache998 ], [ %push_const_fast1006, %use_call999 ], !dbg !46, !rbx-classid !47
  store %"struct.rubinius::Object"* %constant1010, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, align 8, !dbg !46
  %stack_load1014 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !46
  store %"struct.rubinius::Object"* %stack_load1014, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 3, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !46
  %cache_const1016 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565904 to %"struct.rubinius::CallSite"**), align 16, !dbg !46
  %execute_pos1017 = getelementptr %"struct.rubinius::CallSite"* %cache_const1016, i64 0, i32 2, !dbg !46
  %execute1018 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1017, align 8, !dbg !46
  store i32 231, i32* %9, align 4, !dbg !46
  %call_site_execute1019 = call %"struct.rubinius::Object"* %execute1018(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1016, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check1022 = icmp eq %"struct.rubinius::Object"* %call_site_execute1019, null, !dbg !46
  br i1 %null_check1022, label %bail_out, label %check_active1021, !dbg !46

check_active1021:                                 ; preds = %continue1000
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %25, align 8, !dbg !46
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !48
  store i32 1, i32* %out_args_total, align 8, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !48
  %cache_const1034 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565976 to %"struct.rubinius::CallSite"**), align 8, !dbg !48
  %execute_pos1035 = getelementptr %"struct.rubinius::CallSite"* %cache_const1034, i64 0, i32 2, !dbg !48
  %execute1036 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1035, align 8, !dbg !48
  store i32 240, i32* %9, align 4, !dbg !48
  %call_site_execute1037 = call %"struct.rubinius::Object"* %execute1036(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1034, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check1040 = icmp eq %"struct.rubinius::Object"* %call_site_execute1037, null, !dbg !48
  br i1 %null_check1040, label %bail_out, label %check_active1039, !dbg !48

check_active1039:                                 ; preds = %check_active1021
  store %"struct.rubinius::Object"* %call_site_execute1037, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  %as_int1044 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1037 to i64, !dbg !48
  %and1045 = and i64 %as_int1044, 15, !dbg !48
  %is_true1046 = icmp eq i64 %and1045, 10, !dbg !48
  br i1 %is_true1046, label %ip256, label %ip245, !dbg !48

ip245:                                            ; preds = %check_active1039
  %local1049 = load %"struct.rubinius::Object"** %25, align 8, !dbg !48, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  %self1052 = load %"struct.rubinius::Object"** %15, align 8, !dbg !48
  %field_pos10541685 = getelementptr %"struct.rubinius::Object"* %self1052, i64 1, !dbg !48
  %field_pos1054 = bitcast %"struct.rubinius::Object"* %field_pos10541685 to %"struct.rubinius::Object"**, !dbg !48
  %field1055 = load %"struct.rubinius::Object"** %field_pos1054, align 8, !dbg !48
  store %"struct.rubinius::Object"* %field1055, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !48
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !48
  store i32 1, i32* %out_args_total, align 8, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !48
  %cache_const1060 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566048 to %"struct.rubinius::CallSite"**), align 32, !dbg !48
  %execute_pos1061 = getelementptr %"struct.rubinius::CallSite"* %cache_const1060, i64 0, i32 2, !dbg !48
  %execute1062 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1061, align 8, !dbg !48
  store i32 249, i32* %9, align 4, !dbg !48
  %call_site_execute1063 = call %"struct.rubinius::Object"* %execute1062(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1060, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check1066 = icmp eq %"struct.rubinius::Object"* %call_site_execute1063, null, !dbg !48
  br i1 %null_check1066, label %bail_out, label %check_active1065, !dbg !48

check_active1065:                                 ; preds = %ip245
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %25, align 8, !dbg !48
  br label %ip257, !dbg !48

ip257:                                            ; preds = %ip256, %check_active1065
  %local1073 = load %"struct.rubinius::Object"** %21, align 8, !dbg !50, !rbx-classid !13
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !50
  store i32 0, i32* %out_args_total, align 8, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !50
  %cache_const1077 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566136 to %"struct.rubinius::CallSite"**), align 8, !dbg !50
  %execute_pos1078 = getelementptr %"struct.rubinius::CallSite"* %cache_const1077, i64 0, i32 2, !dbg !50
  %execute1079 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1078, align 8, !dbg !50
  store i32 260, i32* %9, align 4, !dbg !50
  %call_site_execute1080 = call %"struct.rubinius::Object"* %execute1079(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1077, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check1083 = icmp eq %"struct.rubinius::Object"* %call_site_execute1080, null, !dbg !50
  br i1 %null_check1083, label %bail_out, label %check_active1082, !dbg !50

check_active1082:                                 ; preds = %ip257
  store %"struct.rubinius::Object"* %call_site_execute1080, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  %as_int1087 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1080 to i64, !dbg !50
  %and1088 = and i64 %as_int1087, 15, !dbg !50
  %is_true1089 = icmp eq i64 %and1088, 10, !dbg !50
  br i1 %is_true1089, label %ip275, label %ip265, !dbg !50

ip265:                                            ; preds = %check_active1082
  %local1092 = load %"struct.rubinius::Object"** %25, align 8, !dbg !50, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !50
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !50
  store i32 1, i32* %out_args_total, align 8, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !50
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !50
  %cache_const1098 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566200 to %"struct.rubinius::CallSite"**), align 8, !dbg !50
  %execute_pos1099 = getelementptr %"struct.rubinius::CallSite"* %cache_const1098, i64 0, i32 2, !dbg !50
  %execute1100 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1099, align 8, !dbg !50
  store i32 268, i32* %9, align 4, !dbg !50
  %call_site_execute1101 = call %"struct.rubinius::Object"* %execute1100(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1098, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check1104 = icmp eq %"struct.rubinius::Object"* %call_site_execute1101, null, !dbg !50
  br i1 %null_check1104, label %bail_out, label %check_active1103, !dbg !50

check_active1103:                                 ; preds = %ip265
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %25, align 8, !dbg !50
  br label %ip276, !dbg !50

ip276:                                            ; preds = %ip275, %check_active1103
  %local1111 = phi %"struct.rubinius::Object"* [ %local1111.pre, %ip275 ], [ %call_site_execute1101, %check_active1103 ]
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  %local1114 = load %"struct.rubinius::Object"** %23, align 8, !dbg !51, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1114, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !51
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !51
  store i32 1, i32* %out_args_total, align 8, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !51
  %cache_const1119 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566304 to %"struct.rubinius::CallSite"**), align 32, !dbg !51
  %execute_pos1120 = getelementptr %"struct.rubinius::CallSite"* %cache_const1119, i64 0, i32 2, !dbg !51
  %execute1121 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1120, align 8, !dbg !51
  store i32 281, i32* %9, align 4, !dbg !51
  %call_site_execute1122 = call %"struct.rubinius::Object"* %execute1121(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1119, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1125 = icmp eq %"struct.rubinius::Object"* %call_site_execute1122, null, !dbg !51
  br i1 %null_check1125, label %bail_out, label %check_active1124, !dbg !51

check_active1124:                                 ; preds = %ip276
  store %"struct.rubinius::Object"* %call_site_execute1122, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  %as_int1129 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1122 to i64, !dbg !51
  %and1130 = and i64 %as_int1129, 15, !dbg !51
  %is_true1131 = icmp eq i64 %and1130, 10, !dbg !51
  br i1 %is_true1131, label %ip296, label %ip286, !dbg !51

ip286:                                            ; preds = %check_active1124
  %self1133 = load %"struct.rubinius::Object"** %15, align 8, !dbg !51
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !51
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !51
  store i32 2, i32* %out_args_total, align 8, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !51
  %cache_const1140 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566376 to %"struct.rubinius::CallSite"**), align 8, !dbg !51
  %execute_pos1141 = getelementptr %"struct.rubinius::CallSite"* %cache_const1140, i64 0, i32 2, !dbg !51
  %execute1142 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1141, align 8, !dbg !51
  store i32 290, i32* %9, align 4, !dbg !51
  %call_site_execute1143 = call %"struct.rubinius::Object"* %execute1142(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1140, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1143, null, !dbg !51
  br i1 %null_check1146, label %bail_out, label %check_active1145, !dbg !51

ip296:                                            ; preds = %check_active1124
  %local1152 = load %"struct.rubinius::Object"** %25, align 8, !dbg !52, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  %local1155 = load %"struct.rubinius::Object"** %23, align 8, !dbg !52, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1155, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !52
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1160 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), align 8, !dbg !52
  %execute_pos1161 = getelementptr %"struct.rubinius::CallSite"* %cache_const1160, i64 0, i32 2, !dbg !52
  %execute1162 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1161, align 8, !dbg !52
  store i32 302, i32* %9, align 4, !dbg !52
  %call_site_execute1163 = call %"struct.rubinius::Object"* %execute1162(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1160, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1166 = icmp eq %"struct.rubinius::Object"* %call_site_execute1163, null, !dbg !52
  br i1 %null_check1166, label %bail_out, label %check_active1165, !dbg !52

check_active1145:                                 ; preds = %ip286
  store %"struct.rubinius::Object"* %call_site_execute1143, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  br label %return_pad, !dbg !51

check_active1165:                                 ; preds = %ip296
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !52
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1172 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566504 to %"struct.rubinius::CallSite"**), align 8, !dbg !52
  %execute_pos1173 = getelementptr %"struct.rubinius::CallSite"* %cache_const1172, i64 0, i32 2, !dbg !52
  %execute1174 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1173, align 8, !dbg !52
  store i32 306, i32* %9, align 4, !dbg !52
  %call_site_execute1175 = call %"struct.rubinius::Object"* %execute1174(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1172, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1178 = icmp eq %"struct.rubinius::Object"* %call_site_execute1175, null, !dbg !52
  br i1 %null_check1178, label %bail_out, label %check_active1177, !dbg !52

check_active1177:                                 ; preds = %check_active1165
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %24, align 8, !dbg !52
  br label %ip459, !dbg !52

ip275:                                            ; preds = %check_active1082
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  %local1111.pre = load %"struct.rubinius::Object"** %25, align 8, !dbg !51
  br label %ip276, !dbg !50

ip256:                                            ; preds = %check_active1039
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  br label %ip257, !dbg !48

ip194:                                            ; preds = %check_active888
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %local922.pre = load %"struct.rubinius::Object"** %23, align 8, !dbg !45
  br label %ip195, !dbg !44

ip313:                                            ; preds = %check_active815
  %local1188 = load %"struct.rubinius::Object"** %21, align 8, !dbg !53, !rbx-classid !13
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %constant_cache1194 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !53
  %constant_cache_pos1195 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 4, !dbg !53
  %constant_scope1196 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1195, align 8, !dbg !53
  %58 = load %"struct.rubinius::Object"** %6, align 8, !dbg !53
  %frame_scope1198 = bitcast %"struct.rubinius::Object"* %58 to %"struct.rubinius::ConstantScope"*, !dbg !53
  %same_scope1199 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1196, %frame_scope1198, !dbg !53
  br i1 %same_scope1199, label %check_serial1200, label %use_call1202, !dbg !53

check_serial1200:                                 ; preds = %ip313
  %global_serial1193 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !53
  %serial_pos1204 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 7, !dbg !53
  %serial1205 = load i32* %serial_pos1204, align 4, !dbg !53
  %use_cache1206 = icmp eq i32 %global_serial1193, %serial1205, !dbg !53
  br i1 %use_cache1206, label %use_cache1201, label %use_call1202, !dbg !53

use_cache1201:                                    ; preds = %check_serial1200
  %value_pos1207 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 2, !dbg !53
  %cached_value1208 = load %"struct.rubinius::Object"** %value_pos1207, align 8, !dbg !53
  br label %continue1203, !dbg !53

use_call1202:                                     ; preds = %check_serial1200, %ip313
  store i32 317, i32* %9, align 4, !dbg !53
  %push_const_fast1209 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !53
  %null_check1212 = icmp eq %"struct.rubinius::Object"* %push_const_fast1209, null, !dbg !53
  br i1 %null_check1212, label %bail_out, label %continue1203, !dbg !53

continue1203:                                     ; preds = %use_call1202, %use_cache1201
  %constant1213 = phi %"struct.rubinius::Object"* [ %cached_value1208, %use_cache1201 ], [ %push_const_fast1209, %use_call1202 ], !dbg !53, !rbx-classid !54
  store %"struct.rubinius::Object"* %constant1213, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !53
  %cast1229 = ptrtoint %"struct.rubinius::Object"* %local1188 to i64, !dbg !53
  %masked1230 = and i64 %cast1229, 3, !dbg !53
  %is_reference1231 = icmp eq i64 %masked1230, 0, !dbg !53
  br i1 %is_reference1231, label %reference_block, label %class_verified_block, !dbg !53

continue1225:                                     ; preds = %is_fixnum_block, %is_fixnum_block, %reference_block, %is_symbol_block, %is_nil_block, %is_true_block, %is_false_block, %use_call1226
  %constant1256 = phi %"struct.rubinius::Object"* [ %kind_of1255, %use_call1226 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], !dbg !53
  store %"struct.rubinius::Object"* %constant1256, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %as_int1260 = ptrtoint %"struct.rubinius::Object"* %constant1256 to i64, !dbg !53
  %and1261 = and i64 %as_int1260, 15, !dbg !53
  %is_true1262 = icmp eq i64 %and1261, 10, !dbg !53
  br i1 %is_true1262, label %ip323, label %ip334, !dbg !53

use_call1226:                                     ; preds = %check_nil_block, %is_fixnum_block, %is_false_block, %is_true_block, %is_nil_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1255 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"* %constant1213) #0, !dbg !53
  br label %continue1225, !dbg !53

class_verified_block:                             ; preds = %continue1203
  %word_pos1235 = getelementptr %"struct.rubinius::Object"* %constant1213, i64 0, i32 0, i32 0, i32 0, !dbg !53
  %flags1236 = load i64* %word_pos1235, align 8, !dbg !53
  %mask1237 = and i64 %flags1236, 255, !dbg !53
  %is_type1238 = icmp eq i64 %mask1237, 20, !dbg !53
  br i1 %is_type1238, label %check_symbol_block, label %use_call1226, !dbg !53

reference_block:                                  ; preds = %continue1203
  %class_pos1232 = getelementptr %"struct.rubinius::Object"* %local1188, i64 0, i32 0, i32 1, !dbg !53
  %ref_class1233 = load %"struct.rubinius::Class"** %class_pos1232, align 8, !dbg !53
  %downcast1234 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1233, i64 0, i32 0, i32 0, !dbg !53
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1234, %constant1213, !dbg !53
  br i1 %check_class, label %continue1225, label %use_call1226, !dbg !53

check_symbol_block:                               ; preds = %class_verified_block
  %class_id_pos1240 = getelementptr %"struct.rubinius::Object"* %constant1213, i64 4, i32 0, i32 2, !dbg !53
  %59 = bitcast %"struct.rubinius::Object"** %class_id_pos1240 to i32*, !dbg !53
  %class_id1241 = load i32* %59, align 4, !dbg !53
  %masked1243 = and i64 %cast1229, 7, !dbg !53
  %is_symbol = icmp eq i64 %masked1243, 6, !dbg !53
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !53

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1244 = icmp eq i32 %class_id1241, 39, !dbg !53
  br i1 %check_class_id1244, label %continue1225, label %use_call1226, !dbg !53

check_fixnum_block:                               ; preds = %check_symbol_block
  %masked1246 = and i64 %cast1229, 1, !dbg !53
  %is_fixnum1247 = icmp eq i64 %masked1246, 0, !dbg !53
  br i1 %is_fixnum1247, label %check_nil_block, label %is_fixnum_block, !dbg !53

is_fixnum_block:                                  ; preds = %check_fixnum_block
  switch i32 %class_id1241, label %use_call1226 [
    i32 37, label %continue1225
    i32 35, label %continue1225
  ], !dbg !53

check_nil_block:                                  ; preds = %check_fixnum_block
  switch i64 %cast1229, label %use_call1226 [
    i64 26, label %is_nil_block
    i64 18, label %is_true_block
    i64 10, label %is_false_block
  ], !dbg !53

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1250 = icmp eq i32 %class_id1241, 27, !dbg !53
  br i1 %check_class_id1250, label %continue1225, label %use_call1226, !dbg !53

is_true_block:                                    ; preds = %check_nil_block
  %check_class_id1252 = icmp eq i32 %class_id1241, 29, !dbg !53
  br i1 %check_class_id1252, label %continue1225, label %use_call1226, !dbg !53

is_false_block:                                   ; preds = %check_nil_block
  %check_class_id1254 = icmp eq i32 %class_id1241, 31, !dbg !53
  br i1 %check_class_id1254, label %continue1225, label %use_call1226, !dbg !53

ip323:                                            ; preds = %continue1225
  %system_object1264 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !53
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %constant_cache1270 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !53
  %constant_cache_pos1271 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 4, !dbg !53
  %constant_scope1272 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1271, align 8, !dbg !53
  %same_scope1275 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1272, %frame_scope1198, !dbg !53
  br i1 %same_scope1275, label %check_serial1276, label %use_call1278, !dbg !53

check_serial1276:                                 ; preds = %ip323
  %global_serial1269 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !53
  %serial_pos1280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 7, !dbg !53
  %serial1281 = load i32* %serial_pos1280, align 4, !dbg !53
  %use_cache1282 = icmp eq i32 %global_serial1269, %serial1281, !dbg !53
  br i1 %use_cache1282, label %use_cache1277, label %use_call1278, !dbg !53

use_cache1277:                                    ; preds = %check_serial1276
  %value_pos1283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 2, !dbg !53
  %cached_value1284 = load %"struct.rubinius::Object"** %value_pos1283, align 8, !dbg !53
  br label %continue1279, !dbg !53

use_call1278:                                     ; preds = %check_serial1276, %ip323
  store i32 327, i32* %9, align 4, !dbg !53
  %push_const_fast1285 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !53
  %null_check1288 = icmp eq %"struct.rubinius::Object"* %push_const_fast1285, null, !dbg !53
  br i1 %null_check1288, label %bail_out, label %continue1279, !dbg !53

continue1279:                                     ; preds = %use_call1278, %use_cache1277
  %constant1289 = phi %"struct.rubinius::Object"* [ %cached_value1284, %use_cache1277 ], [ %push_const_fast1285, %use_call1278 ], !dbg !53, !rbx-classid !55
  store %"struct.rubinius::Object"* %constant1289, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !53
  %stack_pos1291 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1291, align 8, !dbg !53
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !53
  store i32 3, i32* %out_args_total, align 8, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !53
  %cache_const1295 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566704 to %"struct.rubinius::CallSite"**), align 16, !dbg !53
  %execute_pos1296 = getelementptr %"struct.rubinius::CallSite"* %cache_const1295, i64 0, i32 2, !dbg !53
  %execute1297 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1296, align 8, !dbg !53
  store i32 331, i32* %9, align 4, !dbg !53
  %call_site_execute1298 = call %"struct.rubinius::Object"* %execute1297(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1295, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1301 = icmp eq %"struct.rubinius::Object"* %call_site_execute1298, null, !dbg !53
  br i1 %null_check1301, label %bail_out, label %check_active1300, !dbg !53

ip334:                                            ; preds = %continue1225, %check_active1300
  %stack_load1305 = phi %"struct.rubinius::Object"* [ %local1188, %continue1225 ], [ %call_site_execute1298, %check_active1300 ]
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %23, align 8, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !11
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const1313 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566776 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos1314 = getelementptr %"struct.rubinius::CallSite"* %cache_const1313, i64 0, i32 2, !dbg !11
  %execute1315 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1314, align 8, !dbg !11
  store i32 340, i32* %9, align 4, !dbg !11
  %call_site_execute1316 = call %"struct.rubinius::Object"* %execute1315(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1313, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1319 = icmp eq %"struct.rubinius::Object"* %call_site_execute1316, null, !dbg !11
  br i1 %null_check1319, label %bail_out, label %check_active1318, !dbg !11

check_active1300:                                 ; preds = %continue1279
  store %"struct.rubinius::Object"* %call_site_execute1298, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  br label %ip334, !dbg !53

check_active1318:                                 ; preds = %ip334
  store %"struct.rubinius::Object"* %call_site_execute1316, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  %as_int1323 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1316 to i64, !dbg !11
  %and1324 = and i64 %as_int1323, 15, !dbg !11
  %is_true1325 = icmp eq i64 %and1324, 10, !dbg !11
  br i1 %is_true1325, label %ip356, label %ip345, !dbg !11

ip345:                                            ; preds = %check_active1318
  %local1328 = load %"struct.rubinius::Object"** %23, align 8, !dbg !11, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  %self1331 = load %"struct.rubinius::Object"** %15, align 8, !dbg !11
  %field_pos13331686 = getelementptr %"struct.rubinius::Object"* %self1331, i64 1, !dbg !11
  %field_pos1333 = bitcast %"struct.rubinius::Object"* %field_pos13331686 to %"struct.rubinius::Object"**, !dbg !11
  %field1334 = load %"struct.rubinius::Object"** %field_pos1333, align 8, !dbg !11
  store %"struct.rubinius::Object"* %field1334, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !11
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const1339 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566848 to %"struct.rubinius::CallSite"**), align 64, !dbg !11
  %execute_pos1340 = getelementptr %"struct.rubinius::CallSite"* %cache_const1339, i64 0, i32 2, !dbg !11
  %execute1341 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1340, align 8, !dbg !11
  store i32 349, i32* %9, align 4, !dbg !11
  %call_site_execute1342 = call %"struct.rubinius::Object"* %execute1341(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1339, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1345 = icmp eq %"struct.rubinius::Object"* %call_site_execute1342, null, !dbg !11
  br i1 %null_check1345, label %bail_out, label %check_active1344, !dbg !11

check_active1344:                                 ; preds = %ip345
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %23, align 8, !dbg !11
  br label %ip357, !dbg !11

ip357:                                            ; preds = %ip356, %check_active1344
  %local1352 = load %"struct.rubinius::Object"** %22, align 8, !dbg !56, !rbx-classid !19
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack, align 8, !dbg !56
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %local1352 to i64, !dbg !56
  %and1357 = and i64 %as_int1356, 15, !dbg !56
  %is_true1358 = icmp eq i64 %and1357, 10, !dbg !56
  br i1 %is_true1358, label %ip386, label %ip362, !dbg !56

ip362:                                            ; preds = %ip357
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %constant_cache1367 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !57
  %constant_cache_pos1368 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 4, !dbg !57
  %constant_scope1369 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1368, align 8, !dbg !57
  %60 = load %"struct.rubinius::Object"** %6, align 8, !dbg !57
  %frame_scope1371 = bitcast %"struct.rubinius::Object"* %60 to %"struct.rubinius::ConstantScope"*, !dbg !57
  %same_scope1372 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1369, %frame_scope1371, !dbg !57
  br i1 %same_scope1372, label %check_serial1373, label %use_call1375, !dbg !57

check_serial1373:                                 ; preds = %ip362
  %global_serial1366 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !57
  %serial_pos1377 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 7, !dbg !57
  %serial1378 = load i32* %serial_pos1377, align 4, !dbg !57
  %use_cache1379 = icmp eq i32 %global_serial1366, %serial1378, !dbg !57
  br i1 %use_cache1379, label %use_cache1374, label %use_call1375, !dbg !57

use_cache1374:                                    ; preds = %check_serial1373
  %value_pos1380 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 2, !dbg !57
  %cached_value1381 = load %"struct.rubinius::Object"** %value_pos1380, align 8, !dbg !57
  br label %continue1376, !dbg !57

use_call1375:                                     ; preds = %check_serial1373, %ip362
  store i32 365, i32* %9, align 4, !dbg !57
  %push_const_fast1382 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !57
  %null_check1385 = icmp eq %"struct.rubinius::Object"* %push_const_fast1382, null, !dbg !57
  br i1 %null_check1385, label %bail_out, label %continue1376, !dbg !57

continue1376:                                     ; preds = %use_call1375, %use_cache1374
  %constant1386 = phi %"struct.rubinius::Object"* [ %cached_value1381, %use_cache1374 ], [ %push_const_fast1382, %use_call1375 ], !dbg !57, !rbx-classid !58
  store %"struct.rubinius::Object"* %constant1386, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !57
  %masked1416 = and i64 %as_int1356, 3, !dbg !57
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !57
  br i1 %is_reference1417, label %reference_block1403, label %class_verified_block1402, !dbg !57

continue1398:                                     ; preds = %is_fixnum_block1407, %is_fixnum_block1407, %reference_block1403, %is_symbol_block1405, %is_nil_block1410, %is_true_block1412, %is_false_block1414, %use_call1399
  %constant1445 = phi %"struct.rubinius::Object"* [ %kind_of1444, %use_call1399 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block1414 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block1412 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block1410 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1407 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block1405 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block1403 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1407 ], !dbg !57
  store %"struct.rubinius::Object"* %constant1445, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %as_int1449 = ptrtoint %"struct.rubinius::Object"* %constant1445 to i64, !dbg !57
  %and1450 = and i64 %as_int1449, 15, !dbg !57
  %is_true1451 = icmp eq i64 %and1450, 10, !dbg !57
  br i1 %is_true1451, label %ip371, label %ip382, !dbg !57

use_call1399:                                     ; preds = %check_nil_block1409, %is_fixnum_block1407, %is_false_block1414, %is_true_block1412, %is_nil_block1410, %is_symbol_block1405, %class_verified_block1402, %reference_block1403
  %kind_of1444 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"* %constant1386) #0, !dbg !57
  br label %continue1398, !dbg !57

class_verified_block1402:                         ; preds = %continue1376
  %word_pos1422 = getelementptr %"struct.rubinius::Object"* %constant1386, i64 0, i32 0, i32 0, i32 0, !dbg !57
  %flags1423 = load i64* %word_pos1422, align 8, !dbg !57
  %mask1424 = and i64 %flags1423, 255, !dbg !57
  %is_type1425 = icmp eq i64 %mask1424, 20, !dbg !57
  br i1 %is_type1425, label %check_symbol_block1404, label %use_call1399, !dbg !57

reference_block1403:                              ; preds = %continue1376
  %class_pos1418 = getelementptr %"struct.rubinius::Object"* %local1352, i64 0, i32 0, i32 1, !dbg !57
  %ref_class1419 = load %"struct.rubinius::Class"** %class_pos1418, align 8, !dbg !57
  %downcast1420 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1419, i64 0, i32 0, i32 0, !dbg !57
  %check_class1421 = icmp eq %"struct.rubinius::Object"* %downcast1420, %constant1386, !dbg !57
  br i1 %check_class1421, label %continue1398, label %use_call1399, !dbg !57

check_symbol_block1404:                           ; preds = %class_verified_block1402
  %class_id_pos1427 = getelementptr %"struct.rubinius::Object"* %constant1386, i64 4, i32 0, i32 2, !dbg !57
  %61 = bitcast %"struct.rubinius::Object"** %class_id_pos1427 to i32*, !dbg !57
  %class_id1428 = load i32* %61, align 4, !dbg !57
  %masked1430 = and i64 %as_int1356, 7, !dbg !57
  %is_symbol1431 = icmp eq i64 %masked1430, 6, !dbg !57
  br i1 %is_symbol1431, label %is_symbol_block1405, label %check_fixnum_block1406, !dbg !57

is_symbol_block1405:                              ; preds = %check_symbol_block1404
  %check_class_id1432 = icmp eq i32 %class_id1428, 39, !dbg !57
  br i1 %check_class_id1432, label %continue1398, label %use_call1399, !dbg !57

check_fixnum_block1406:                           ; preds = %check_symbol_block1404
  %masked1434 = and i64 %as_int1356, 1, !dbg !57
  %is_fixnum1435 = icmp eq i64 %masked1434, 0, !dbg !57
  br i1 %is_fixnum1435, label %check_nil_block1409, label %is_fixnum_block1407, !dbg !57

is_fixnum_block1407:                              ; preds = %check_fixnum_block1406
  switch i32 %class_id1428, label %use_call1399 [
    i32 37, label %continue1398
    i32 35, label %continue1398
  ], !dbg !57

check_nil_block1409:                              ; preds = %check_fixnum_block1406
  switch i64 %as_int1356, label %use_call1399 [
    i64 26, label %is_nil_block1410
    i64 18, label %is_true_block1412
    i64 10, label %is_false_block1414
  ], !dbg !57

is_nil_block1410:                                 ; preds = %check_nil_block1409
  %check_class_id1439 = icmp eq i32 %class_id1428, 27, !dbg !57
  br i1 %check_class_id1439, label %continue1398, label %use_call1399, !dbg !57

is_true_block1412:                                ; preds = %check_nil_block1409
  %check_class_id1441 = icmp eq i32 %class_id1428, 29, !dbg !57
  br i1 %check_class_id1441, label %continue1398, label %use_call1399, !dbg !57

is_false_block1414:                               ; preds = %check_nil_block1409
  %check_class_id1443 = icmp eq i32 %class_id1428, 31, !dbg !57
  br i1 %check_class_id1443, label %continue1398, label %use_call1399, !dbg !57

ip371:                                            ; preds = %continue1398
  %system_object1453 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !57
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %constant_cache1459 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !57
  %constant_cache_pos1460 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 4, !dbg !57
  %constant_scope1461 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1460, align 8, !dbg !57
  %same_scope1464 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1461, %frame_scope1371, !dbg !57
  br i1 %same_scope1464, label %check_serial1465, label %use_call1467, !dbg !57

check_serial1465:                                 ; preds = %ip371
  %global_serial1458 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !57
  %serial_pos1469 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 7, !dbg !57
  %serial1470 = load i32* %serial_pos1469, align 4, !dbg !57
  %use_cache1471 = icmp eq i32 %global_serial1458, %serial1470, !dbg !57
  br i1 %use_cache1471, label %use_cache1466, label %use_call1467, !dbg !57

use_cache1466:                                    ; preds = %check_serial1465
  %value_pos1472 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 2, !dbg !57
  %cached_value1473 = load %"struct.rubinius::Object"** %value_pos1472, align 8, !dbg !57
  br label %continue1468, !dbg !57

use_call1467:                                     ; preds = %check_serial1465, %ip371
  store i32 375, i32* %9, align 4, !dbg !57
  %push_const_fast1474 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !57
  %null_check1477 = icmp eq %"struct.rubinius::Object"* %push_const_fast1474, null, !dbg !57
  br i1 %null_check1477, label %bail_out, label %continue1468, !dbg !57

continue1468:                                     ; preds = %use_call1467, %use_cache1466
  %constant1478 = phi %"struct.rubinius::Object"* [ %cached_value1473, %use_cache1466 ], [ %push_const_fast1474, %use_call1467 ], !dbg !57, !rbx-classid !59
  store %"struct.rubinius::Object"* %constant1478, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !57
  %stack_pos1480 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1480, align 8, !dbg !57
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !57
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !57
  store i32 3, i32* %out_args_total, align 8, !dbg !57
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !57
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !57
  %cache_const1484 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567088 to %"struct.rubinius::CallSite"**), align 16, !dbg !57
  %execute_pos1485 = getelementptr %"struct.rubinius::CallSite"* %cache_const1484, i64 0, i32 2, !dbg !57
  %execute1486 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1485, align 8, !dbg !57
  store i32 379, i32* %9, align 4, !dbg !57
  %call_site_execute1487 = call %"struct.rubinius::Object"* %execute1486(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1484, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !57
  %null_check1490 = icmp eq %"struct.rubinius::Object"* %call_site_execute1487, null, !dbg !57
  br i1 %null_check1490, label %bail_out, label %check_active1489, !dbg !57

ip382:                                            ; preds = %continue1398, %check_active1489
  %stack_load1494 = phi %"struct.rubinius::Object"* [ %local1352, %continue1398 ], [ %call_site_execute1487, %check_active1489 ]
  store %"struct.rubinius::Object"* %stack_load1494, %"struct.rubinius::Object"** %24, align 8, !dbg !57
  br label %ip459, !dbg !57

check_active1489:                                 ; preds = %continue1468
  store %"struct.rubinius::Object"* %call_site_execute1487, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  br label %ip382, !dbg !57

ip386:                                            ; preds = %ip357
  %local1497 = load %"struct.rubinius::Object"** %23, align 8, !dbg !60, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %stack, align 8, !dbg !60
  %self1500 = load %"struct.rubinius::Object"** %15, align 8, !dbg !60
  %field_pos15021687 = getelementptr %"struct.rubinius::Object"* %self1500, i64 1, !dbg !60
  %field_pos1502 = bitcast %"struct.rubinius::Object"* %field_pos15021687 to %"struct.rubinius::Object"**, !dbg !60
  %field1503 = load %"struct.rubinius::Object"** %field_pos1502, align 8, !dbg !60
  store %"struct.rubinius::Object"* %field1503, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !60
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !60
  store i32 1, i32* %out_args_total, align 8, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !60
  %cache_const1508 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567176 to %"struct.rubinius::CallSite"**), align 8, !dbg !60
  %execute_pos1509 = getelementptr %"struct.rubinius::CallSite"* %cache_const1508, i64 0, i32 2, !dbg !60
  %execute1510 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1509, align 8, !dbg !60
  store i32 390, i32* %9, align 4, !dbg !60
  %call_site_execute1511 = call %"struct.rubinius::Object"* %execute1510(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1508, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1514 = icmp eq %"struct.rubinius::Object"* %call_site_execute1511, null, !dbg !60
  br i1 %null_check1514, label %bail_out, label %check_active1513, !dbg !60

check_active1513:                                 ; preds = %ip386
  %as_int1518 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1511 to i64, !dbg !60
  %and1519 = and i64 %as_int1518, 15, !dbg !60
  %is_true1520 = icmp eq i64 %and1519, 10, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !60
  br i1 %is_true1520, label %ip399, label %return_pad, !dbg !60

ip399:                                            ; preds = %check_active1513
  %62 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !61
  %stack_pos1527 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 19, !dbg !61
  store %"struct.rubinius::Object"* %62, %"struct.rubinius::Object"** %stack_pos1527, align 8, !dbg !61
  %self1533 = load %"struct.rubinius::Object"** %15, align 8, !dbg !62
  %field_pos1535 = getelementptr %"struct.rubinius::Object"* %self1533, i64 1, i32 0, i32 1, !dbg !62
  %63 = load %"struct.rubinius::Class"** %field_pos1535, align 8, !dbg !62
  %field1536 = getelementptr inbounds %"struct.rubinius::Class"* %63, i64 0, i32 0, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %field1536, %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  %64 = getelementptr %"struct.rubinius::Object"* %self1533, i64 1, i32 0, i32 2, !dbg !62
  %field1542 = load %"struct.rubinius::Object"** %64, align 8, !dbg !62
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !62
  %local1545 = load %"struct.rubinius::Object"** %23, align 8, !dbg !62, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1545, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !62
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1550 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567368 to %"struct.rubinius::CallSite"**), align 8, !dbg !62
  %execute_pos1551 = getelementptr %"struct.rubinius::CallSite"* %cache_const1550, i64 0, i32 2, !dbg !62
  %execute1552 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1551, align 8, !dbg !62
  store i32 414, i32* %9, align 4, !dbg !62
  %call_site_execute1553 = call %"struct.rubinius::Object"* %execute1552(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1550, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1556 = icmp eq %"struct.rubinius::Object"* %call_site_execute1553, null, !dbg !62
  br i1 %null_check1556, label %is_exception1530, label %check_active1555, !dbg !62

is_exception1530:                                 ; preds = %check_active1555, %ip399
  %rae1531 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !61
  br i1 %rae1531, label %ip424, label %bail_out, !dbg !61

check_active1555:                                 ; preds = %ip399
  store %"struct.rubinius::Object"* %call_site_execute1553, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !62
  %stack_load1559 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1559, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1561 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567392 to %"struct.rubinius::CallSite"**), align 32, !dbg !62
  %execute_pos1562 = getelementptr %"struct.rubinius::CallSite"* %cache_const1561, i64 0, i32 2, !dbg !62
  %execute1563 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1562, align 8, !dbg !62
  store i32 417, i32* %9, align 4, !dbg !62
  %call_site_execute1564 = call %"struct.rubinius::Object"* %execute1563(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1561, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1567 = icmp eq %"struct.rubinius::Object"* %call_site_execute1564, null, !dbg !62
  br i1 %null_check1567, label %is_exception1530, label %check_active1566, !dbg !62

ip424:                                            ; preds = %is_exception1530
  %65 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %65, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %stack_pos1572 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 18, !dbg !22
  store %"struct.rubinius::Object"* %65, %"struct.rubinius::Object"** %stack_pos1572, align 8, !dbg !22
  %ce1575 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  %constant_cache1581 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !63
  %constant_cache_pos1582 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 4, !dbg !63
  %constant_scope1583 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1582, align 8, !dbg !63
  %66 = load %"struct.rubinius::Object"** %6, align 8, !dbg !63
  %frame_scope1585 = bitcast %"struct.rubinius::Object"* %66 to %"struct.rubinius::ConstantScope"*, !dbg !63
  %same_scope1586 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1583, %frame_scope1585, !dbg !63
  br i1 %same_scope1586, label %check_serial1587, label %use_call1589, !dbg !63

check_active1566:                                 ; preds = %check_active1555
  store %"struct.rubinius::Object"* %call_site_execute1564, %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  br label %return_pad, !dbg !62

check_serial1587:                                 ; preds = %ip424
  %global_serial1580 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !63
  %serial_pos1591 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 7, !dbg !63
  %serial1592 = load i32* %serial_pos1591, align 4, !dbg !63
  %use_cache1593 = icmp eq i32 %global_serial1580, %serial1592, !dbg !63
  br i1 %use_cache1593, label %use_cache1588, label %use_call1589, !dbg !63

use_cache1588:                                    ; preds = %check_serial1587
  %value_pos1594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 2, !dbg !63
  %cached_value1595 = load %"struct.rubinius::Object"** %value_pos1594, align 8, !dbg !63
  br label %continue1590, !dbg !63

use_call1589:                                     ; preds = %check_serial1587, %ip424
  store i32 430, i32* %9, align 4, !dbg !63
  %push_const_fast1596 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !63
  %null_check1599 = icmp eq %"struct.rubinius::Object"* %push_const_fast1596, null, !dbg !63
  br i1 %null_check1599, label %bail_out, label %continue1590, !dbg !63

continue1590:                                     ; preds = %use_call1589, %use_cache1588
  %constant1600 = phi %"struct.rubinius::Object"* [ %cached_value1595, %use_cache1588 ], [ %push_const_fast1596, %use_call1589 ], !dbg !63, !rbx-classid !64
  store %"struct.rubinius::Object"* %constant1600, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !63
  %constant_cache1605 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !63
  %constant_cache_pos1606 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 4, !dbg !63
  %constant_scope1607 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1606, align 8, !dbg !63
  %same_scope1610 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1607, %frame_scope1585, !dbg !63
  br i1 %same_scope1610, label %check_serial1611, label %use_call1614, !dbg !63

check_serial1611:                                 ; preds = %continue1590
  %global_serial1604 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !63
  %serial_pos1616 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 7, !dbg !63
  %serial1617 = load i32* %serial_pos1616, align 4, !dbg !63
  %use_under1618 = icmp eq i32 %global_serial1604, %serial1617, !dbg !63
  br i1 %use_under1618, label %check_under1612, label %use_call1614, !dbg !63

check_under1612:                                  ; preds = %check_serial1611
  %value_pos1619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 3, !dbg !63
  %cached_under1620 = load %"struct.rubinius::Module"** %value_pos1619, align 8, !dbg !63
  %downcast1621 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under1620, i64 0, i32 0, !dbg !63
  %use_cache1622 = icmp eq %"struct.rubinius::Object"* %downcast1621, %constant1600, !dbg !63
  br i1 %use_cache1622, label %use_cache1613, label %use_call1614, !dbg !63

use_cache1613:                                    ; preds = %check_under1612
  %value_pos1623 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 2, !dbg !63
  %cached_value1624 = load %"struct.rubinius::Object"** %value_pos1623, align 8, !dbg !63
  br label %continue1615, !dbg !63

use_call1614:                                     ; preds = %check_under1612, %check_serial1611, %continue1590
  store i32 432, i32* %9, align 4, !dbg !63
  %constant1625 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1600) #0, !dbg !63
  %null_check1628 = icmp eq %"struct.rubinius::Object"* %constant1625, null, !dbg !63
  br i1 %null_check1628, label %bail_out, label %continue1615, !dbg !63

continue1615:                                     ; preds = %use_call1614, %use_cache1613
  %constant1629 = phi %"struct.rubinius::Object"* [ %cached_value1624, %use_cache1613 ], [ %constant1625, %use_call1614 ], !dbg !63, !rbx-classid !65
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !63
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !63
  store i32 1, i32* %out_args_total, align 8, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !63
  %cache_const1640 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567536 to %"struct.rubinius::CallSite"**), align 16, !dbg !63
  %execute_pos1641 = getelementptr %"struct.rubinius::CallSite"* %cache_const1640, i64 0, i32 2, !dbg !63
  %execute1642 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1641, align 8, !dbg !63
  store i32 435, i32* %9, align 4, !dbg !63
  %call_site_execute1643 = call %"struct.rubinius::Object"* %execute1642(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1640, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1646 = icmp eq %"struct.rubinius::Object"* %call_site_execute1643, null, !dbg !63
  br i1 %null_check1646, label %bail_out, label %check_active1645, !dbg !63

check_active1645:                                 ; preds = %continue1615
  store %"struct.rubinius::Object"* %call_site_execute1643, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  %as_int1650 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1643 to i64, !dbg !63
  %and1651 = and i64 %as_int1650, 15, !dbg !63
  %is_true1652 = icmp eq i64 %and1651, 10, !dbg !63
  br i1 %is_true1652, label %ip451, label %ip442, !dbg !63

ip451:                                            ; preds = %check_active1645
  %stack_local1656 = load %"struct.rubinius::Object"** %stack_pos1572, align 8, !dbg !66
  store %"struct.rubinius::Object"* %stack_local1656, %"struct.rubinius::Object"** %stack, align 8, !dbg !66
  %67 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local1656), !dbg !66
  br label %bail_out, !dbg !66

ip442:                                            ; preds = %check_active1645
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !66
  %stack_local1663 = load %"struct.rubinius::Object"** %stack_pos1527, align 8, !dbg !66
  store %"struct.rubinius::Object"* %stack_local1663, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !66
  %68 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local1663), !dbg !66
  %stack_load1668 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !66, !rbx-classid !39
  br label %return_pad, !dbg !66

ip356:                                            ; preds = %check_active1318
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  br label %ip357, !dbg !11

return_pad:                                       ; preds = %check_active1513, %ip213, %continue576, %continue344, %continue218, %prologue_check, %bail_out, %ip442, %check_active1566, %check_active1145, %ip130, %tuple_at, %class_fallback666, %continue535, %serial_fallback534, %ip502, %check_active328, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %call_site_execute326, %check_active328 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip502 ], [ %42, %serial_fallback534 ], [ %send_result560, %continue535 ], [ %48, %class_fallback666 ], [ %tuple_at679, %tuple_at ], [ %stack_load774, %ip130 ], [ %call_site_execute1143, %check_active1145 ], [ %call_site_execute1564, %check_active1566 ], [ %stack_load1668, %ip442 ], [ null, %bail_out ], [ null, %prologue_check ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue218 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue344 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue576 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip213 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %check_active1513 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %69 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %69, label %return_pad, label %method_body, !dbg !11
}

[[[ JIT Machine Code: _X_Array#[]@1 ]]]
0x7fc7cfaaa010  push %rbp               
0x7fc7cfaaa011  mov %rsp, %rbp          
0x7fc7cfaaa014  push %r15               
0x7fc7cfaaa016  push %r14               
0x7fc7cfaaa018  push %r13               
0x7fc7cfaaa01a  push %r12               
0x7fc7cfaaa01c  push %rbx               
0x7fc7cfaaa01d  subq $0x158, %rsp       
0x7fc7cfaaa024  mov %r8, %r15           
0x7fc7cfaaa027  mov %rdi, %r14          
0x7fc7cfaaa02a  mov 0x18(%r15), %eax    
0x7fc7cfaaa02e  lea -0x1(%rax), %edi    
0x7fc7cfaaa031  cmp $0x2, %edi          
0x7fc7cfaaa034  jb 0x46                  ; 0x7fc7cfaaa056
0x7fc7cfaaa03a  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfaaa044  mov $0x2, %ecx          
0x7fc7cfaaa049  mov %r14, %rdi          
0x7fc7cfaaa04c  mov %r15, %rdx          
0x7fc7cfaaa04f  callq *%rax             
0x7fc7cfaaa051  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaa056  mov %rsi, -0x108(%rbp)  
0x7fc7cfaaa05d  mov %r15, -0xc8(%rbp)   
0x7fc7cfaaa064  movq $0x0, -0xf8(%rbp)  
0x7fc7cfaaa06f  mov %rdx, -0xf0(%rbp)   
0x7fc7cfaaa076  mov 0xa0(%rdx), %rdx    
0x7fc7cfaaa07d  mov %rdx, -0x100(%rbp)  
0x7fc7cfaaa084  mov $0x28, -0xe8(%rbp)  
0x7fc7cfaaa08e  mov $0x0, -0xe4(%rbp)   
0x7fc7cfaaa098  lea -0x160(%rbp), %rdx  
0x7fc7cfaaa09f  mov %rdx, -0xd0(%rbp)   
0x7fc7cfaaa0a6  mov $0x7fc7b40008f0, %rdx
0x7fc7cfaaa0b0  mov %rdx, -0xe0(%rbp)   
0x7fc7cfaaa0b7  movq $0xffffffb8, %rsi  
0x7fc7cfaaa0be  mov $0xd, %edi          
0x7fc7cfaaa0c3  lea -0x108(%rbp), %rbx  
0x7fc7cfaaa0ca  mov %rbx, %rdx          
0x7fc7cfaaa0cd  sub %rsi, %rdx          
0x7fc7cfaaa0d0  movq $0x1a, (%rdx)      
0x7fc7cfaaa0d7  addq $0xf8, %rsi        
0x7fc7cfaaa0db  dec %edi                
0x7fc7cfaaa0dd  jnz 0xba                 ; 0x7fc7cfaaa0ca
0x7fc7cfaaa0e3  movq $0x0, -0x160(%rbp) 
0x7fc7cfaaa0ee  mov 0x8(%r15), %rdx     
0x7fc7cfaaa0f2  mov %rdx, -0x150(%rbp)  
0x7fc7cfaaa0f9  mov %rcx, -0x140(%rbp)  
0x7fc7cfaaa100  mov 0x10(%r15), %rcx    
0x7fc7cfaaa104  mov %rcx, -0x148(%rbp)  
0x7fc7cfaaa10b  movq $0x0, -0x158(%rbp) 
0x7fc7cfaaa116  movq $0x1a, -0x138(%rbp)
0x7fc7cfaaa121  lea -0x130(%rbp), %rcx  
0x7fc7cfaaa128  movq $0x1a, -0x130(%rbp)
0x7fc7cfaaa133  movq $0x1a, -0x128(%rbp)
0x7fc7cfaaa13e  movq $0x1a, -0x120(%rbp)
0x7fc7cfaaa149  movq $0x1a, -0x118(%rbp)
0x7fc7cfaaa154  movq $0x1a, -0x110(%rbp)
0x7fc7cfaaa15f  mov 0x20(%r15), %rsi    
0x7fc7cfaaa163  xor %edi, %edi          
0x7fc7cfaaa165  jmp 0x16a                ; 0x7fc7cfaaa17a
0x7fc7cfaaa16a  mov (%rsi), %rdx        
0x7fc7cfaaa16d  mov %rdx, (%rcx)        
0x7fc7cfaaa170  inc %edi                
0x7fc7cfaaa172  addq $0x8, %rcx         
0x7fc7cfaaa176  addq $0x8, %rsi         
0x7fc7cfaaa17a  cmp %eax, %edi          
0x7fc7cfaaa17c  jl 0x15a                 ; 0x7fc7cfaaa16a
0x7fc7cfaaa182  mov 0x8(%r14), %rax     
0x7fc7cfaaa186  mov 0x158251e, %cl      
0x7fc7cfaaa18d  or 0x16(%rax), %cl      
0x7fc7cfaaa190  jnz 0x190                ; 0x7fc7cfaaa1a0
0x7fc7cfaaa196  cmp 0x8(%rax), %rbx     
0x7fc7cfaaa19a  jae 0x1b4                ; 0x7fc7cfaaa1c4
0x7fc7cfaaa1a0  mov $0x762f80, %rax      ; rbx_prologue_check
0x7fc7cfaaa1aa  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa1b1  mov %r14, %rdi          
0x7fc7cfaaa1b4  callq *%rax             
0x7fc7cfaaa1b6  mov %rax, %rcx          
0x7fc7cfaaa1b9  xor %eax, %eax          
0x7fc7cfaaa1bb  test %rcx, %rcx         
0x7fc7cfaaa1be  jz 0x24d8                ; 0x7fc7cfaac4e8
0x7fc7cfaaa1c4  mov $0x762b40, %rax      ; rbx_passed_arg
0x7fc7cfaaa1ce  mov $0x1, %edx          
0x7fc7cfaaa1d3  mov %r14, %rdi          
0x7fc7cfaaa1d6  mov %r15, %rsi          
0x7fc7cfaaa1d9  callq *%rax             
0x7fc7cfaaa1db  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa1e2  andq $0xf, %rax         
0x7fc7cfaaa1e6  cmpq $0xa, %rax         
0x7fc7cfaaa1ea  jnz 0x1f6                ; 0x7fc7cfaaa206
0x7fc7cfaaa1f0  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaa1fb  movq $0x1a, -0x128(%rbp)
0x7fc7cfaaa206  mov -0x130(%rbp), %rbx  
0x7fc7cfaaa20d  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa214  lea -0xb8(%rbp), %r12   
0x7fc7cfaaa21b  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaa222  mov 0x176d1b0, %rax     
0x7fc7cfaaa22a  mov 0x30(%rax), %rcx    
0x7fc7cfaaa22e  mov -0x100(%rbp), %r13  
0x7fc7cfaaa235  cmp %r13, %rcx          
0x7fc7cfaaa238  jnz 0x23e                ; 0x7fc7cfaaa24e
0x7fc7cfaaa23e  mov 0x1582514, %ecx     
0x7fc7cfaaa245  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa248  jz 0x26c                 ; 0x7fc7cfaaa27c
0x7fc7cfaaa24e  mov $0xb, -0xe4(%rbp)   
0x7fc7cfaaa258  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa262  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa269  mov $0x176d1b0, %edx    
0x7fc7cfaaa26e  mov %r14, %rdi          
0x7fc7cfaaa271  callq *%rax             
0x7fc7cfaaa273  test %rax, %rax         
0x7fc7cfaaa276  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa27c  mov %rbx, -0xb0(%rbp)   
0x7fc7cfaaa283  mov %rbx, %rax          
0x7fc7cfaaa286  andq $0x1, %rax         
0x7fc7cfaaa28a  lea 0xa(%rax,8), %rcx   
0x7fc7cfaaa292  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaaa299  andq $0xa, %rcx         
0x7fc7cfaaa29d  cmpq $0xa, %rcx         
0x7fc7cfaaa2a1  jnz 0x2c9                ; 0x7fc7cfaaa2d9
0x7fc7cfaaa2a7  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaa2ae  mov 0x176d608, %rax     
0x7fc7cfaaa2b6  cmp %r13, 0x30(%rax)    
0x7fc7cfaaa2ba  jnz 0x301                ; 0x7fc7cfaaa311
0x7fc7cfaaa2c0  mov 0x1582514, %ecx     
0x7fc7cfaaa2c7  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa2ca  jnz 0x301                ; 0x7fc7cfaaa311
0x7fc7cfaaa2d0  mov 0x20(%rax), %rax    
0x7fc7cfaaa2d4  jmp 0x32f                ; 0x7fc7cfaaa33f
0x7fc7cfaaa2d9  mov %rbx, -0x120(%rbp)  
0x7fc7cfaaa2e0  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa2e7  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaaa2f2  test %rax, %rax         
0x7fc7cfaaa2f5  jz 0x3f9                 ; 0x7fc7cfaaa409
0x7fc7cfaaa2fb  test %rbx, %rbx         
0x7fc7cfaaa2fe  setle %al               
0x7fc7cfaaa301  movzxb %al, %eax        
0x7fc7cfaaa304  lea 0xa(%rax,8), %rax   
0x7fc7cfaaa30c  jmp 0x44f                ; 0x7fc7cfaaa45f
0x7fc7cfaaa311  mov $0x96, -0xe4(%rbp)  
0x7fc7cfaaa31b  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa325  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa32c  mov $0x176d608, %edx    
0x7fc7cfaaa331  mov %r14, %rdi          
0x7fc7cfaaa334  callq *%rax             
0x7fc7cfaaa336  test %rax, %rax         
0x7fc7cfaaa339  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa33f  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa346  mov %rbx, -0xb0(%rbp)   
0x7fc7cfaaa34d  mov %rax, -0x50(%rbp)   
0x7fc7cfaaa351  movq $0x57e, -0x58(%rbp)
0x7fc7cfaaa359  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa361  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaa368  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa370  lea -0xb0(%rbp), %rax   
0x7fc7cfaaa377  mov %rax, -0x38(%rbp)   
0x7fc7cfaaa37b  mov 0x176d620, %rsi     
0x7fc7cfaaa383  mov 0x20(%rsi), %rax    
0x7fc7cfaaa387  mov $0x99, -0xe4(%rbp)  
0x7fc7cfaaa391  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa398  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa39c  mov %r14, %rdi          
0x7fc7cfaaa39f  callq *%rax             
0x7fc7cfaaa3a1  test %rax, %rax         
0x7fc7cfaaa3a4  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa3aa  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa3b1  andq $0xf, %rax         
0x7fc7cfaaa3b5  cmpq $0xa, %rax         
0x7fc7cfaaa3b9  jnz 0x4d4                ; 0x7fc7cfaaa4e4
0x7fc7cfaaa3bf  mov -0x130(%rbp), %rbx  
0x7fc7cfaaa3c6  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa3cd  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaa3d4  mov 0x176db40, %rax     
0x7fc7cfaaa3dc  mov 0x30(%rax), %rcx    
0x7fc7cfaaa3e0  mov -0x100(%rbp), %r13  
0x7fc7cfaaa3e7  cmp %r13, %rcx          
0x7fc7cfaaa3ea  jnz 0x57c                ; 0x7fc7cfaaa58c
0x7fc7cfaaa3f0  mov 0x1582514, %ecx     
0x7fc7cfaaa3f7  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa3fa  jnz 0x57c                ; 0x7fc7cfaaa58c
0x7fc7cfaaa400  mov 0x20(%rax), %rax    
0x7fc7cfaaa404  jmp 0x5aa                ; 0x7fc7cfaaa5ba
0x7fc7cfaaa409  mov %rbx, -0x50(%rbp)   
0x7fc7cfaaa40d  movq $0x586, -0x58(%rbp)
0x7fc7cfaaa415  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa41d  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaa424  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa42c  mov %r12, -0x38(%rbp)   
0x7fc7cfaaa430  mov 0x176d238, %rsi     
0x7fc7cfaaa438  mov 0x20(%rsi), %rax    
0x7fc7cfaaa43c  mov $0x1c, -0xe4(%rbp)  
0x7fc7cfaaa446  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa44d  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa451  mov %r14, %rdi          
0x7fc7cfaaa454  callq *%rax             
0x7fc7cfaaa456  test %rax, %rax         
0x7fc7cfaaa459  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa45f  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa466  andq $0xf, %rax         
0x7fc7cfaaa46a  cmpq $0xa, %rax         
0x7fc7cfaaa46e  jnz 0x474                ; 0x7fc7cfaaa484
0x7fc7cfaaa474  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaa47f  jmp 0x669                ; 0x7fc7cfaaa679
0x7fc7cfaaa484  mov -0x120(%rbp), %rax  
0x7fc7cfaaa48b  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa492  mov -0x150(%rbp), %rcx  
0x7fc7cfaaa499  mov 0x18(%rcx), %rsi    
0x7fc7cfaaa49d  mov %rsi, -0xb8(%rbp)   
0x7fc7cfaaa4a4  mov %esi, %ecx          
0x7fc7cfaaa4a6  and %eax, %ecx          
0x7fc7cfaaa4a8  testb $0x1, %cl         
0x7fc7cfaaa4ab  jz 0x5f1                 ; 0x7fc7cfaaa601
0x7fc7cfaaa4b1  sarq $0x1, %rax         
0x7fc7cfaaa4b4  sarq $0x1, %rsi         
0x7fc7cfaaa4b7  add %rax, %rsi          
0x7fc7cfaaa4ba  mov $0x3fffffffffffffff, %rax
0x7fc7cfaaa4c4  add %rsi, %rax          
0x7fc7cfaaa4c7  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaaa4d1  cmp %rcx, %rax          
0x7fc7cfaaa4d4  ja 0x64c                 ; 0x7fc7cfaaa65c
0x7fc7cfaaa4da  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaaa4df  jmp 0x65b                ; 0x7fc7cfaaa66b
0x7fc7cfaaa4e4  mov 0x1584100, %rax     
0x7fc7cfaaa4ec  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa4f3  mov -0x130(%rbp), %rax  
0x7fc7cfaaa4fa  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa501  mov %rax, -0x50(%rbp)   
0x7fc7cfaaa505  movq $0x496e, -0x58(%rbp)
0x7fc7cfaaa50d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa515  mov $0x0, -0x40(%rbp)   
0x7fc7cfaaa51c  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa524  mov 0x176d668, %rsi     
0x7fc7cfaaa52c  mov 0x20(%rsi), %rax    
0x7fc7cfaaa530  mov $0xa2, -0xe4(%rbp)  
0x7fc7cfaaa53a  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa541  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa545  mov %r14, %rdi          
0x7fc7cfaaa548  callq *%rax             
0x7fc7cfaaa54a  test %rax, %rax         
0x7fc7cfaaa54d  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa553  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa55a  mov 0x176d680, %rax     
0x7fc7cfaaa562  mov 0x30(%rax), %rcx    
0x7fc7cfaaa566  cmp -0x100(%rbp), %rcx  
0x7fc7cfaaa56d  jnz 0x96c                ; 0x7fc7cfaaa97c
0x7fc7cfaaa573  mov 0x1582514, %ecx     
0x7fc7cfaaa57a  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa57d  jnz 0x96c                ; 0x7fc7cfaaa97c
0x7fc7cfaaa583  mov 0x20(%rax), %rax    
0x7fc7cfaaa587  jmp 0x99a                ; 0x7fc7cfaaa9aa
0x7fc7cfaaa58c  mov $0x13d, -0xe4(%rbp) 
0x7fc7cfaaa596  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa5a0  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa5a7  mov $0x176db40, %edx    
0x7fc7cfaaa5ac  mov %r14, %rdi          
0x7fc7cfaaa5af  callq *%rax             
0x7fc7cfaaa5b1  test %rax, %rax         
0x7fc7cfaaa5b4  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa5ba  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa5c1  mov %rbx, -0xb0(%rbp)   
0x7fc7cfaaa5c8  testb $0x3, %bl         
0x7fc7cfaaa5cb  jz 0xc45                 ; 0x7fc7cfaaac55
0x7fc7cfaaa5d1  cmpb $0x14, (%rax)      
0x7fc7cfaaa5d4  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaaa5da  mov 0x70(%rax), %edx    
0x7fc7cfaaa5dd  mov %rbx, %rcx          
0x7fc7cfaaa5e0  andq $0x7, %rcx         
0x7fc7cfaaa5e4  cmpq $0x6, %rcx         
0x7fc7cfaaa5e8  jnz 0xe6b                ; 0x7fc7cfaaae7b
0x7fc7cfaaa5ee  mov $0x12, %ecx         
0x7fc7cfaaa5f3  cmp $0x27, %edx         
0x7fc7cfaaa5f6  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaaa5fc  jmp 0x167b               ; 0x7fc7cfaab68b
0x7fc7cfaaa601  mov %rax, -0x50(%rbp)   
0x7fc7cfaaa605  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaa60d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa615  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaa61c  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa624  mov %r12, -0x38(%rbp)   
0x7fc7cfaaa628  mov 0x176d280, %rsi     
0x7fc7cfaaa630  mov 0x20(%rsi), %rax    
0x7fc7cfaaa634  mov $0x25, -0xe4(%rbp)  
0x7fc7cfaaa63e  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa645  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa649  mov %r14, %rdi          
0x7fc7cfaaa64c  callq *%rax             
0x7fc7cfaaa64e  test %rax, %rax         
0x7fc7cfaaa651  jnz 0x65b                ; 0x7fc7cfaaa66b
0x7fc7cfaaa657  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaaa65c  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaaa666  mov %r14, %rdi          
0x7fc7cfaaa669  callq *%rax             
0x7fc7cfaaa66b  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa672  mov %rax, -0x120(%rbp)  
0x7fc7cfaaa679  mov -0x128(%rbp), %rbx  
0x7fc7cfaaa680  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa687  mov %rbx, %rax          
0x7fc7cfaaa68a  andq $0xf, %rax         
0x7fc7cfaaa68e  cmpq $0xa, %rax         
0x7fc7cfaaa692  jnz 0x6cb                ; 0x7fc7cfaaa6db
0x7fc7cfaaa698  mov -0x120(%rbp), %rax  
0x7fc7cfaaa69f  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaa6a6  mov -0x150(%rbp), %rcx  
0x7fc7cfaaa6ad  mov 0x18(%rcx), %rcx    
0x7fc7cfaaa6b1  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaaa6b8  mov %ecx, %edx          
0x7fc7cfaaa6ba  and %eax, %edx          
0x7fc7cfaaa6bc  testb $0x1, %dl         
0x7fc7cfaaa6bf  jz 0x79f                 ; 0x7fc7cfaaa7af
0x7fc7cfaaa6c5  cmp %rcx, %rax          
0x7fc7cfaaa6c8  setge %al               
0x7fc7cfaaa6cb  movzxb %al, %eax        
0x7fc7cfaaa6ce  lea 0xa(%rax,8), %rcx   
0x7fc7cfaaa6d6  jmp 0x7f8                ; 0x7fc7cfaaa808
0x7fc7cfaaa6db  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa6e2  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaa6e9  mov 0x176d300, %rax     
0x7fc7cfaaa6f1  mov 0x30(%rax), %rcx    
0x7fc7cfaaa6f5  mov -0x100(%rbp), %r13  
0x7fc7cfaaa6fc  cmp %r13, %rcx          
0x7fc7cfaaa6ff  jnz 0x705                ; 0x7fc7cfaaa715
0x7fc7cfaaa705  mov 0x1582514, %ecx     
0x7fc7cfaaa70c  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa70f  jz 0x733                 ; 0x7fc7cfaaa743
0x7fc7cfaaa715  mov $0x35, -0xe4(%rbp)  
0x7fc7cfaaa71f  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa729  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa730  mov $0x176d300, %edx    
0x7fc7cfaaa735  mov %r14, %rdi          
0x7fc7cfaaa738  callq *%rax             
0x7fc7cfaaa73a  test %rax, %rax         
0x7fc7cfaaa73d  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa743  mov %rbx, -0xb0(%rbp)   
0x7fc7cfaaa74a  mov %rbx, %rax          
0x7fc7cfaaa74d  andq $0x1, %rax         
0x7fc7cfaaa751  lea 0xa(%rax,8), %rax   
0x7fc7cfaaa759  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa760  andq $0xa, %rax         
0x7fc7cfaaa764  cmpq $0xa, %rax         
0x7fc7cfaaa768  jnz 0x934                ; 0x7fc7cfaaa944
0x7fc7cfaaa76e  mov 0x1584100, %r15     
0x7fc7cfaaa776  mov %r15, -0xc0(%rbp)   
0x7fc7cfaaa77d  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaa784  mov 0x176d350, %rax     
0x7fc7cfaaa78c  cmp %r13, 0x30(%rax)    
0x7fc7cfaaa790  jnz 0x894                ; 0x7fc7cfaaa8a4
0x7fc7cfaaa796  mov 0x1582514, %ecx     
0x7fc7cfaaa79d  cmp 0x44(%rax), %ecx    
0x7fc7cfaaa7a0  jnz 0x894                ; 0x7fc7cfaaa8a4
0x7fc7cfaaa7a6  mov 0x20(%rax), %rax    
0x7fc7cfaaa7aa  jmp 0x8c2                ; 0x7fc7cfaaa8d2
0x7fc7cfaaa7af  mov %rax, -0x50(%rbp)   
0x7fc7cfaaa7b3  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaaa7bb  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa7c3  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaa7ca  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa7d2  mov %r12, -0x38(%rbp)   
0x7fc7cfaaa7d6  mov 0x176d3c8, %rsi     
0x7fc7cfaaa7de  mov 0x20(%rsi), %rax    
0x7fc7cfaaa7e2  mov $0x4e, -0xe4(%rbp)  
0x7fc7cfaaa7ec  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa7f3  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa7f7  mov %r14, %rdi          
0x7fc7cfaaa7fa  callq *%rax             
0x7fc7cfaaa7fc  mov %rax, %rcx          
0x7fc7cfaaa7ff  test %rcx, %rcx         
0x7fc7cfaaa802  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa808  andq $0xf, %rcx         
0x7fc7cfaaa80c  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaa817  mov $0x1a, %eax         
0x7fc7cfaaa81c  cmpq $0xa, %rcx         
0x7fc7cfaaa820  jnz 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaa826  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaaa830  mov %r14, %rdi          
0x7fc7cfaaa833  callq *%rax             
0x7fc7cfaaa835  mov %rax, -0x60(%rbp)   
0x7fc7cfaaa839  mov -0x150(%rbp), %rax  
0x7fc7cfaaa840  mov 0x20(%rax), %rcx    
0x7fc7cfaaa844  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaaa84b  mov 0x28(%rax), %rax    
0x7fc7cfaaa84f  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaa856  mov -0x120(%rbp), %rsi  
0x7fc7cfaaa85d  mov %rsi, -0xb0(%rbp)   
0x7fc7cfaaa864  mov %esi, %ecx          
0x7fc7cfaaa866  and %eax, %ecx          
0x7fc7cfaaa868  testb $0x1, %cl         
0x7fc7cfaaa86b  jz 0xb5e                 ; 0x7fc7cfaaab6e
0x7fc7cfaaa871  sarq $0x1, %rax         
0x7fc7cfaaa874  sarq $0x1, %rsi         
0x7fc7cfaaa877  add %rax, %rsi          
0x7fc7cfaaa87a  mov $0x3fffffffffffffff, %rax
0x7fc7cfaaa884  add %rsi, %rax          
0x7fc7cfaaa887  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaaa891  cmp %rcx, %rax          
0x7fc7cfaaa894  ja 0xc59                 ; 0x7fc7cfaaac69
0x7fc7cfaaa89a  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaaa89f  jmp 0xc68                ; 0x7fc7cfaaac78
0x7fc7cfaaa8a4  mov $0x3f, -0xe4(%rbp)  
0x7fc7cfaaa8ae  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa8b8  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa8bf  mov $0x176d350, %edx    
0x7fc7cfaaa8c4  mov %r14, %rdi          
0x7fc7cfaaa8c7  callq *%rax             
0x7fc7cfaaa8c9  test %rax, %rax         
0x7fc7cfaaa8cc  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa8d2  mov %rax, -0xb0(%rbp)   
0x7fc7cfaaa8d9  movq $0x398e, -0xa8(%rbp)
0x7fc7cfaaa8e4  mov %r15, -0x50(%rbp)   
0x7fc7cfaaa8e8  movq $0x3996, -0x58(%rbp)
0x7fc7cfaaa8f0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa8f8  mov $0x3, -0x40(%rbp)   
0x7fc7cfaaa8ff  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa907  mov %r12, -0x38(%rbp)   
0x7fc7cfaaa90b  mov 0x176d370, %rsi     
0x7fc7cfaaa913  mov 0x20(%rsi), %rax    
0x7fc7cfaaa917  mov $0x43, -0xe4(%rbp)  
0x7fc7cfaaa921  lea -0x108(%rbp), %rdx  
0x7fc7cfaaa928  lea -0x58(%rbp), %rcx   
0x7fc7cfaaa92c  mov %r14, %rdi          
0x7fc7cfaaa92f  callq *%rax             
0x7fc7cfaaa931  mov %rax, %rbx          
0x7fc7cfaaa934  test %rbx, %rbx         
0x7fc7cfaaa937  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa93d  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa944  mov %rbx, -0x118(%rbp)  
0x7fc7cfaaa94b  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaa952  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaaa95d  testb $0x1, %bl         
0x7fc7cfaaa960  jz 0xaa4                 ; 0x7fc7cfaaaab4
0x7fc7cfaaa966  test %rbx, %rbx         
0x7fc7cfaaa969  setle %al               
0x7fc7cfaaa96c  movzxb %al, %eax        
0x7fc7cfaaa96f  lea 0xa(%rax,8), %rcx   
0x7fc7cfaaa977  jmp 0xafd                ; 0x7fc7cfaaab0d
0x7fc7cfaaa97c  mov $0xa5, -0xe4(%rbp)  
0x7fc7cfaaa986  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaa990  lea -0x108(%rbp), %rsi  
0x7fc7cfaaa997  mov $0x176d680, %edx    
0x7fc7cfaaa99c  mov %r14, %rdi          
0x7fc7cfaaa99f  callq *%rax             
0x7fc7cfaaa9a1  test %rax, %rax         
0x7fc7cfaaa9a4  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaa9aa  mov %rax, -0xb0(%rbp)   
0x7fc7cfaaa9b1  movq $0x398e, -0xa8(%rbp)
0x7fc7cfaaa9bc  mov -0xc0(%rbp), %rax   
0x7fc7cfaaa9c3  mov %rax, -0x50(%rbp)   
0x7fc7cfaaa9c7  movq $0x3996, -0x58(%rbp)
0x7fc7cfaaa9cf  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaa9d7  mov $0x3, -0x40(%rbp)   
0x7fc7cfaaa9de  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaa9e6  mov %r12, -0x38(%rbp)   
0x7fc7cfaaa9ea  mov 0x176d6a0, %rsi     
0x7fc7cfaaa9f2  mov 0x20(%rsi), %rax    
0x7fc7cfaaa9f6  mov $0xa9, -0xe4(%rbp)  
0x7fc7cfaaaa00  lea -0x108(%rbp), %rdx  
0x7fc7cfaaaa07  lea -0x58(%rbp), %rcx   
0x7fc7cfaaaa0b  mov %r14, %rdi          
0x7fc7cfaaaa0e  callq *%rax             
0x7fc7cfaaaa10  test %rax, %rax         
0x7fc7cfaaaa13  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaaa19  mov %rax, -0x120(%rbp)  
0x7fc7cfaaaa20  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaaa27  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaaaa32  mov %rax, -0x50(%rbp)   
0x7fc7cfaaaa36  movq $0x586, -0x58(%rbp)
0x7fc7cfaaaa3e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaaa46  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaaa4d  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaaa55  mov %r12, -0x38(%rbp)   
0x7fc7cfaaaa59  mov 0x176d6e8, %rsi     
0x7fc7cfaaaa61  mov 0x20(%rsi), %rax    
0x7fc7cfaaaa65  mov $0xb2, -0xe4(%rbp)  
0x7fc7cfaaaa6f  lea -0x108(%rbp), %rdx  
0x7fc7cfaaaa76  lea -0x58(%rbp), %rcx   
0x7fc7cfaaaa7a  mov %r14, %rdi          
0x7fc7cfaaaa7d  callq *%rax             
0x7fc7cfaaaa7f  test %rax, %rax         
0x7fc7cfaaaa82  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaaa88  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaaa8f  andq $0xf, %rax         
0x7fc7cfaaaa93  cmpq $0xa, %rax         
0x7fc7cfaaaa97  jnz 0xe90                ; 0x7fc7cfaaaea0
0x7fc7cfaaaa9d  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaaaa8  mov -0x120(%rbp), %rax  
0x7fc7cfaaaaaf  jmp 0xf14                ; 0x7fc7cfaaaf24
0x7fc7cfaaaab4  mov %rbx, -0x50(%rbp)   
0x7fc7cfaaaab8  movq $0x586, -0x58(%rbp)
0x7fc7cfaaaac0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaaac8  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaaacf  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaaad7  mov %r12, -0x38(%rbp)   
0x7fc7cfaaaadb  mov 0x176dfd0, %rsi     
0x7fc7cfaaaae3  mov 0x20(%rsi), %rax    
0x7fc7cfaaaae7  mov $0x1cf, -0xe4(%rbp) 
0x7fc7cfaaaaf1  lea -0x108(%rbp), %rdx  
0x7fc7cfaaaaf8  lea -0x58(%rbp), %rcx   
0x7fc7cfaaaafc  mov %r14, %rdi          
0x7fc7cfaaaaff  callq *%rax             
0x7fc7cfaaab01  mov %rax, %rcx          
0x7fc7cfaaab04  test %rcx, %rcx         
0x7fc7cfaaab07  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaab0d  andq $0xf, %rcx         
0x7fc7cfaaab11  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaab1c  mov $0x1a, %eax         
0x7fc7cfaaab21  cmpq $0xa, %rcx         
0x7fc7cfaaab25  jnz 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaab2b  mov -0x120(%rbp), %rcx  
0x7fc7cfaaab32  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaaab39  mov -0x150(%rbp), %rax  
0x7fc7cfaaab40  mov 0x18(%rax), %rax    
0x7fc7cfaaab44  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaab4b  mov %eax, %edx          
0x7fc7cfaaab4d  and %ecx, %edx          
0x7fc7cfaaab4f  testb $0x1, %dl         
0x7fc7cfaaab52  jz 0xd3d                 ; 0x7fc7cfaaad4d
0x7fc7cfaaab58  cmp %rax, %rcx          
0x7fc7cfaaab5b  setge %al               
0x7fc7cfaaab5e  movzxb %al, %eax        
0x7fc7cfaaab61  lea 0xa(%rax,8), %rax   
0x7fc7cfaaab69  jmp 0xd9a                ; 0x7fc7cfaaadaa
0x7fc7cfaaab6e  mov %rax, -0x50(%rbp)   
0x7fc7cfaaab72  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaab7a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaab82  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaab89  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaab91  lea -0xb0(%rbp), %rbx   
0x7fc7cfaaab98  mov %rbx, -0x38(%rbp)   
0x7fc7cfaaab9c  mov 0x176d488, %rsi     
0x7fc7cfaaaba4  mov 0x20(%rsi), %rax    
0x7fc7cfaaaba8  mov $0x66, -0xe4(%rbp)  
0x7fc7cfaaabb2  lea -0x108(%rbp), %rdx  
0x7fc7cfaaabb9  lea -0x58(%rbp), %rcx   
0x7fc7cfaaabbd  mov %r14, %rdi          
0x7fc7cfaaabc0  callq *%rax             
0x7fc7cfaaabc2  test %rax, %rax         
0x7fc7cfaaabc5  jnz 0xc68                ; 0x7fc7cfaaac78
0x7fc7cfaaabcb  mov %rbx, %r12          
0x7fc7cfaaabce  mov $0x763170, %rax      ; rbx_raising_exception
0x7fc7cfaaabd8  mov %r14, %rdi          
0x7fc7cfaaabdb  callq *%rax             
0x7fc7cfaaabdd  testb $0x1, %al         
0x7fc7cfaaabe0  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaabe6  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaaabf0  mov %r14, %rdi          
0x7fc7cfaaabf3  callq *%rax             
0x7fc7cfaaabf5  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaabfc  mov %rax, -0x68(%rbp)   
0x7fc7cfaaac00  mov $0x763190, %rax      ; rbx_current_exception
0x7fc7cfaaac0a  mov %r14, %rdi          
0x7fc7cfaaac0d  callq *%rax             
0x7fc7cfaaac0f  mov %rax, %r15          
0x7fc7cfaaac12  mov %r15, -0xc0(%rbp)   
0x7fc7cfaaac19  mov %r15, -0xb8(%rbp)   
0x7fc7cfaaac20  mov 0x176d508, %rax     
0x7fc7cfaaac28  mov 0x30(%rax), %rcx    
0x7fc7cfaaac2c  mov -0x100(%rbp), %rbx  
0x7fc7cfaaac33  cmp %rbx, %rcx          
0x7fc7cfaaac36  jnz 0x123d               ; 0x7fc7cfaab24d
0x7fc7cfaaac3c  mov 0x1582514, %ecx     
0x7fc7cfaaac43  cmp 0x44(%rax), %ecx    
0x7fc7cfaaac46  jnz 0x123d               ; 0x7fc7cfaab24d
0x7fc7cfaaac4c  mov 0x20(%rax), %rax    
0x7fc7cfaaac50  jmp 0x126b               ; 0x7fc7cfaab27b
0x7fc7cfaaac55  cmp %rax, 0x8(%rbx)     
0x7fc7cfaaac59  mov $0x12, %ecx         
0x7fc7cfaaac5e  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaaac64  jmp 0x167b               ; 0x7fc7cfaab68b
0x7fc7cfaaac69  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaaac73  mov %r14, %rdi          
0x7fc7cfaaac76  callq *%rax             
0x7fc7cfaaac78  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaac7f  mov -0xc0(%rbp), %rcx   
0x7fc7cfaaac86  cmpb $0x49, (%rcx)      
0x7fc7cfaaac89  jnz 0xccc                ; 0x7fc7cfaaacdc
0x7fc7cfaaac8f  mov $0x8000000000000001, %rdx
0x7fc7cfaaac99  and %rax, %rdx          
0x7fc7cfaaac9c  cmpq $0x1, %rdx         
0x7fc7cfaaaca0  jnz 0xccc                ; 0x7fc7cfaaacdc
0x7fc7cfaaaca6  sarq $0x1, %rax         
0x7fc7cfaaaca9  mov 0x18(%rcx), %rdx    
0x7fc7cfaaacad  lea -0x20(%rdx), %rsi   
0x7fc7cfaaacb1  sarq $0x3f, %rsi        
0x7fc7cfaaacb5  shrq $0x3d, %rsi        
0x7fc7cfaaacb9  lea -0x20(%rdx,%rsi), %rdx
0x7fc7cfaaacbe  sarq $0x3, %rdx         
0x7fc7cfaaacc2  cmp %rdx, %rax          
0x7fc7cfaaacc5  jge 0xccc                ; 0x7fc7cfaaacdc
0x7fc7cfaaaccb  mov 0x20(%rcx,%rax,8), %rax
0x7fc7cfaaacd0  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaacd7  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaacdc  mov $0x69, -0xe4(%rbp)  
0x7fc7cfaaace6  mov $0x763ce0, %rax      ; rbx_setup_unwind
0x7fc7cfaaacf0  xor %esi, %esi          
0x7fc7cfaaacf2  mov $0x70, %edx         
0x7fc7cfaaacf7  mov $0xffffffff, %ecx   
0x7fc7cfaaacfc  xor %r8d, %r8d          
0x7fc7cfaaacff  mov %r14, %rdi          
0x7fc7cfaaad02  callq *%rax             
0x7fc7cfaaad04  mov $0x7fc7b40008f0, %rax
0x7fc7cfaaad0e  mov %rax, (%rsp)        
0x7fc7cfaaad12  mov $0x0, 0x10(%rsp)    
0x7fc7cfaaad1a  mov $0x1, 0x8(%rsp)     
0x7fc7cfaaad22  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfaaad2c  lea -0x108(%rbp), %rsi  
0x7fc7cfaaad33  mov $0x69, %edx         
0x7fc7cfaaad38  mov $0x1, %ecx          
0x7fc7cfaaad3d  xor %r9d, %r9d          
0x7fc7cfaaad40  mov %r14, %rdi          
0x7fc7cfaaad43  mov %rsi, %r8           
0x7fc7cfaaad46  callq *%rax             
0x7fc7cfaaad48  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaad4d  mov %rcx, -0x50(%rbp)   
0x7fc7cfaaad51  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaaad59  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaad61  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaad68  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaad70  mov %r12, -0x38(%rbp)   
0x7fc7cfaaad74  mov 0x176e048, %rsi     
0x7fc7cfaaad7c  mov 0x20(%rsi), %rax    
0x7fc7cfaaad80  mov $0x1de, -0xe4(%rbp) 
0x7fc7cfaaad8a  lea -0x108(%rbp), %rdx  
0x7fc7cfaaad91  lea -0x58(%rbp), %rcx   
0x7fc7cfaaad95  mov %r14, %rdi          
0x7fc7cfaaad98  callq *%rax             
0x7fc7cfaaad9a  test %rax, %rax         
0x7fc7cfaaad9d  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaada3  mov -0x120(%rbp), %rcx  
0x7fc7cfaaadaa  andq $0xf, %rax         
0x7fc7cfaaadae  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaaadb5  cmpq $0xa, %rax         
0x7fc7cfaaadb9  jnz 0xdd9                ; 0x7fc7cfaaade9
0x7fc7cfaaadbf  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaaadca  testb $0x1, %cl         
0x7fc7cfaaadcd  jz 0x10e4                ; 0x7fc7cfaab0f4
0x7fc7cfaaadd3  test %rcx, %rcx         
0x7fc7cfaaadd6  setle %al               
0x7fc7cfaaadd9  movzxb %al, %eax        
0x7fc7cfaaaddc  lea 0xa(%rax,8), %rcx   
0x7fc7cfaaade4  jmp 0x113d               ; 0x7fc7cfaab14d
0x7fc7cfaaade9  mov -0x150(%rbp), %rax  
0x7fc7cfaaadf0  mov 0x18(%rax), %rax    
0x7fc7cfaaadf4  mov %rax, -0xb8(%rbp)   
0x7fc7cfaaadfb  mov %rcx, -0x50(%rbp)   
0x7fc7cfaaadff  movq $0x56e, -0x58(%rbp)
0x7fc7cfaaae07  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaae0f  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaae16  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaae1e  mov %r12, -0x38(%rbp)   
0x7fc7cfaaae22  mov 0x176e090, %rsi     
0x7fc7cfaaae2a  mov 0x20(%rsi), %rax    
0x7fc7cfaaae2e  mov $0x1e7, -0xe4(%rbp) 
0x7fc7cfaaae38  lea -0x108(%rbp), %rdx  
0x7fc7cfaaae3f  lea -0x58(%rbp), %rcx   
0x7fc7cfaaae43  mov %r14, %rdi          
0x7fc7cfaaae46  callq *%rax             
0x7fc7cfaaae48  test %rax, %rax         
0x7fc7cfaaae4b  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaae51  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaae58  andq $0xf, %rax         
0x7fc7cfaaae5c  cmpq $0xa, %rax         
0x7fc7cfaaae60  jnz 0x11b7               ; 0x7fc7cfaab1c7
0x7fc7cfaaae66  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaaae71  mov $0x1a, %eax         
0x7fc7cfaaae76  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaae7b  testb $0x1, %bl         
0x7fc7cfaaae7e  jz 0x12d4                ; 0x7fc7cfaab2e4
0x7fc7cfaaae84  mov $0x12, %ecx         
0x7fc7cfaaae89  cmp $0x23, %edx         
0x7fc7cfaaae8c  jz 0x167b                ; 0x7fc7cfaab68b
0x7fc7cfaaae92  cmp $0x25, %edx         
0x7fc7cfaaae95  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaaae9b  jmp 0x167b               ; 0x7fc7cfaab68b
0x7fc7cfaaaea0  mov -0x120(%rbp), %rax  
0x7fc7cfaaaea7  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaaeae  mov -0x150(%rbp), %rcx  
0x7fc7cfaaaeb5  mov 0x18(%rcx), %rcx    
0x7fc7cfaaaeb9  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaaaec0  mov %rax, -0x50(%rbp)   
0x7fc7cfaaaec4  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaaecc  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaaed4  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaaedb  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaaee3  mov %r12, -0x38(%rbp)   
0x7fc7cfaaaee7  mov 0x176d730, %rsi     
0x7fc7cfaaaeef  mov 0x20(%rsi), %rax    
0x7fc7cfaaaef3  mov $0xbb, -0xe4(%rbp)  
0x7fc7cfaaaefd  lea -0x108(%rbp), %rdx  
0x7fc7cfaaaf04  lea -0x58(%rbp), %rcx   
0x7fc7cfaaaf08  mov %r14, %rdi          
0x7fc7cfaaaf0b  callq *%rax             
0x7fc7cfaaaf0d  test %rax, %rax         
0x7fc7cfaaaf10  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaaf16  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaaf1d  mov %rax, -0x120(%rbp)  
0x7fc7cfaaaf24  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaaf2b  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaaaf36  mov %rax, -0x50(%rbp)   
0x7fc7cfaaaf3a  movq $0x586, -0x58(%rbp)
0x7fc7cfaaaf42  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaaf4a  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaaf51  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaaf59  mov %r12, -0x38(%rbp)   
0x7fc7cfaaaf5d  mov 0x176d790, %rsi     
0x7fc7cfaaaf65  mov 0x20(%rsi), %rax    
0x7fc7cfaaaf69  mov $0xc7, -0xe4(%rbp)  
0x7fc7cfaaaf73  lea -0x108(%rbp), %rdx  
0x7fc7cfaaaf7a  lea -0x58(%rbp), %rcx   
0x7fc7cfaaaf7e  mov %r14, %rdi          
0x7fc7cfaaaf81  callq *%rax             
0x7fc7cfaaaf83  mov %rax, %rcx          
0x7fc7cfaaaf86  test %rcx, %rcx         
0x7fc7cfaaaf89  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaaaf8f  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaaaf96  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaaaf9d  mov %rcx, %rax          
0x7fc7cfaaafa0  andq $0xf, %rax         
0x7fc7cfaaafa4  cmpq $0xa, %rax         
0x7fc7cfaaafa8  jnz 0x101e               ; 0x7fc7cfaab02e
0x7fc7cfaaafae  mov -0x120(%rbp), %rax  
0x7fc7cfaaafb5  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaafbc  mov -0x150(%rbp), %rcx  
0x7fc7cfaaafc3  mov 0x18(%rcx), %rcx    
0x7fc7cfaaafc7  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaaafce  mov %rax, -0x50(%rbp)   
0x7fc7cfaaafd2  movq $0x58e, -0x58(%rbp)
0x7fc7cfaaafda  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaafe2  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaafe9  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaaff1  mov %r12, -0x38(%rbp)   
0x7fc7cfaaaff5  mov 0x176d7e8, %rsi     
0x7fc7cfaaaffd  mov 0x20(%rsi), %rax    
0x7fc7cfaab001  mov $0xd2, -0xe4(%rbp)  
0x7fc7cfaab00b  lea -0x108(%rbp), %rdx  
0x7fc7cfaab012  lea -0x58(%rbp), %rcx   
0x7fc7cfaab016  mov %r14, %rdi          
0x7fc7cfaab019  callq *%rax             
0x7fc7cfaab01b  mov %rax, %rcx          
0x7fc7cfaab01e  test %rcx, %rcx         
0x7fc7cfaab021  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab027  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaab02e  andq $0xf, %rcx         
0x7fc7cfaab032  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab03d  mov $0x1a, %eax         
0x7fc7cfaab042  cmpq $0xa, %rcx         
0x7fc7cfaab046  jnz 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaab04c  mov 0x1584100, %rax     
0x7fc7cfaab054  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab05b  mov -0x130(%rbp), %rax  
0x7fc7cfaab062  mov %rax, -0xb8(%rbp)   
0x7fc7cfaab069  mov %rax, -0x50(%rbp)   
0x7fc7cfaab06d  movq $0x4976, -0x58(%rbp)
0x7fc7cfaab075  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab07d  mov $0x0, -0x40(%rbp)   
0x7fc7cfaab084  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab08c  mov 0x176d858, %rsi     
0x7fc7cfaab094  mov 0x20(%rsi), %rax    
0x7fc7cfaab098  mov $0xe0, -0xe4(%rbp)  
0x7fc7cfaab0a2  lea -0x108(%rbp), %rdx  
0x7fc7cfaab0a9  lea -0x58(%rbp), %rcx   
0x7fc7cfaab0ad  mov %r14, %rdi          
0x7fc7cfaab0b0  callq *%rax             
0x7fc7cfaab0b2  test %rax, %rax         
0x7fc7cfaab0b5  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab0bb  mov %rax, -0xb8(%rbp)   
0x7fc7cfaab0c2  mov 0x176d870, %rax     
0x7fc7cfaab0ca  mov 0x30(%rax), %rcx    
0x7fc7cfaab0ce  cmp -0x100(%rbp), %rcx  
0x7fc7cfaab0d5  jnz 0x1507               ; 0x7fc7cfaab517
0x7fc7cfaab0db  mov 0x1582514, %ecx     
0x7fc7cfaab0e2  cmp 0x44(%rax), %ecx    
0x7fc7cfaab0e5  jnz 0x1507               ; 0x7fc7cfaab517
0x7fc7cfaab0eb  mov 0x20(%rax), %rax    
0x7fc7cfaab0ef  jmp 0x1535               ; 0x7fc7cfaab545
0x7fc7cfaab0f4  mov %rcx, -0x50(%rbp)   
0x7fc7cfaab0f8  movq $0x586, -0x58(%rbp)
0x7fc7cfaab100  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab108  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab10f  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab117  mov %r12, -0x38(%rbp)   
0x7fc7cfaab11b  mov 0x176e160, %rsi     
0x7fc7cfaab123  mov 0x20(%rsi), %rax    
0x7fc7cfaab127  mov $0x201, -0xe4(%rbp) 
0x7fc7cfaab131  lea -0x108(%rbp), %rdx  
0x7fc7cfaab138  lea -0x58(%rbp), %rcx   
0x7fc7cfaab13c  mov %r14, %rdi          
0x7fc7cfaab13f  callq *%rax             
0x7fc7cfaab141  mov %rax, %rcx          
0x7fc7cfaab144  test %rcx, %rcx         
0x7fc7cfaab147  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab14d  andq $0xf, %rcx         
0x7fc7cfaab151  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab15c  mov $0x1a, %eax         
0x7fc7cfaab161  cmpq $0xa, %rcx         
0x7fc7cfaab165  jnz 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaab16b  mov -0x120(%rbp), %rax  
0x7fc7cfaab172  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab179  mov -0x118(%rbp), %rsi  
0x7fc7cfaab180  mov %rsi, -0xb8(%rbp)   
0x7fc7cfaab187  mov %esi, %ecx          
0x7fc7cfaab189  and %eax, %ecx          
0x7fc7cfaab18b  testb $0x1, %cl         
0x7fc7cfaab18e  jz 0x12fb                ; 0x7fc7cfaab30b
0x7fc7cfaab194  sarq $0x1, %rax         
0x7fc7cfaab197  sarq $0x1, %rsi         
0x7fc7cfaab19a  add %rax, %rsi          
0x7fc7cfaab19d  mov $0x3fffffffffffffff, %rax
0x7fc7cfaab1a7  add %rsi, %rax          
0x7fc7cfaab1aa  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaab1b4  cmp %rcx, %rax          
0x7fc7cfaab1b7  ja 0x1356                ; 0x7fc7cfaab366
0x7fc7cfaab1bd  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaab1c2  jmp 0x1365               ; 0x7fc7cfaab375
0x7fc7cfaab1c7  mov -0x150(%rbp), %rax  
0x7fc7cfaab1ce  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab1d5  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaab1e0  movq $0x1, -0xb0(%rbp)  
0x7fc7cfaab1eb  mov %rax, -0x50(%rbp)   
0x7fc7cfaab1ef  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaab1f7  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab1ff  mov $0x2, -0x40(%rbp)   
0x7fc7cfaab206  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab20e  mov %r12, -0x38(%rbp)   
0x7fc7cfaab212  mov 0x176e0d8, %rsi     
0x7fc7cfaab21a  mov 0x20(%rsi), %rax    
0x7fc7cfaab21e  mov $0x1f0, -0xe4(%rbp) 
0x7fc7cfaab228  lea -0x108(%rbp), %rdx  
0x7fc7cfaab22f  lea -0x58(%rbp), %rcx   
0x7fc7cfaab233  mov %r14, %rdi          
0x7fc7cfaab236  callq *%rax             
0x7fc7cfaab238  test %rax, %rax         
0x7fc7cfaab23b  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab241  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab248  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaab24d  mov $0x76, -0xe4(%rbp)  
0x7fc7cfaab257  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaab261  lea -0x108(%rbp), %rsi  
0x7fc7cfaab268  mov $0x176d508, %edx    
0x7fc7cfaab26d  mov %r14, %rdi          
0x7fc7cfaab270  callq *%rax             
0x7fc7cfaab272  test %rax, %rax         
0x7fc7cfaab275  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab27b  mov %rax, -0xb0(%rbp)   
0x7fc7cfaab282  mov 0x176d518, %rcx     
0x7fc7cfaab28a  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaab28e  jnz 0x129e               ; 0x7fc7cfaab2ae
0x7fc7cfaab294  mov 0x1582514, %edx     
0x7fc7cfaab29b  cmp 0x44(%rcx), %edx    
0x7fc7cfaab29e  jnz 0x129e               ; 0x7fc7cfaab2ae
0x7fc7cfaab2a4  cmp %rax, 0x28(%rcx)    
0x7fc7cfaab2a8  jz 0x1e11                ; 0x7fc7cfaabe21
0x7fc7cfaab2ae  mov $0x78, -0xe4(%rbp)  
0x7fc7cfaab2b8  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7fc7cfaab2c2  lea -0x108(%rbp), %rsi  
0x7fc7cfaab2c9  mov $0x176d518, %edx    
0x7fc7cfaab2ce  mov %r14, %rdi          
0x7fc7cfaab2d1  mov %rax, %rcx          
0x7fc7cfaab2d4  callq *%rbx             
0x7fc7cfaab2d6  test %rax, %rax         
0x7fc7cfaab2d9  jnz 0x1e15               ; 0x7fc7cfaabe25
0x7fc7cfaab2df  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaab2e4  cmpq $0xa, %rbx         
0x7fc7cfaab2e8  jz 0x1638                ; 0x7fc7cfaab648
0x7fc7cfaab2ee  cmpq $0x12, %rbx        
0x7fc7cfaab2f2  jnz 0x164b               ; 0x7fc7cfaab65b
0x7fc7cfaab2f8  mov $0x12, %ecx         
0x7fc7cfaab2fd  cmp $0x1d, %edx         
0x7fc7cfaab300  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaab306  jmp 0x167b               ; 0x7fc7cfaab68b
0x7fc7cfaab30b  mov %rax, -0x50(%rbp)   
0x7fc7cfaab30f  movq $0x55e, -0x58(%rbp)
0x7fc7cfaab317  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab31f  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab326  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab32e  mov %r12, -0x38(%rbp)   
0x7fc7cfaab332  mov 0x176e1d8, %rsi     
0x7fc7cfaab33a  mov 0x20(%rsi), %rax    
0x7fc7cfaab33e  mov $0x210, -0xe4(%rbp) 
0x7fc7cfaab348  lea -0x108(%rbp), %rdx  
0x7fc7cfaab34f  lea -0x58(%rbp), %rcx   
0x7fc7cfaab353  mov %r14, %rdi          
0x7fc7cfaab356  callq *%rax             
0x7fc7cfaab358  test %rax, %rax         
0x7fc7cfaab35b  jnz 0x1365               ; 0x7fc7cfaab375
0x7fc7cfaab361  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaab366  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaab370  mov %r14, %rdi          
0x7fc7cfaab373  callq *%rax             
0x7fc7cfaab375  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab37c  mov -0x150(%rbp), %rcx  
0x7fc7cfaab383  mov 0x18(%rcx), %rcx    
0x7fc7cfaab387  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaab38e  mov %ecx, %edx          
0x7fc7cfaab390  and %eax, %edx          
0x7fc7cfaab392  testb $0x1, %dl         
0x7fc7cfaab395  jz 0x13a1                ; 0x7fc7cfaab3b1
0x7fc7cfaab39b  cmp %rcx, %rax          
0x7fc7cfaab39e  setg %al                
0x7fc7cfaab3a1  movzxb %al, %eax        
0x7fc7cfaab3a4  lea 0xa(%rax,8), %rax   
0x7fc7cfaab3ac  jmp 0x13f7               ; 0x7fc7cfaab407
0x7fc7cfaab3b1  mov %rax, -0x50(%rbp)   
0x7fc7cfaab3b5  movq $0x58e, -0x58(%rbp)
0x7fc7cfaab3bd  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab3c5  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab3cc  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab3d4  mov %r12, -0x38(%rbp)   
0x7fc7cfaab3d8  mov 0x176e200, %rsi     
0x7fc7cfaab3e0  mov 0x20(%rsi), %rax    
0x7fc7cfaab3e4  mov $0x215, -0xe4(%rbp) 
0x7fc7cfaab3ee  lea -0x108(%rbp), %rdx  
0x7fc7cfaab3f5  lea -0x58(%rbp), %rcx   
0x7fc7cfaab3f9  mov %r14, %rdi          
0x7fc7cfaab3fc  callq *%rax             
0x7fc7cfaab3fe  test %rax, %rax         
0x7fc7cfaab401  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab407  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab40e  andq $0xf, %rax         
0x7fc7cfaab412  cmpq $0xa, %rax         
0x7fc7cfaab416  jnz 0x141c               ; 0x7fc7cfaab42c
0x7fc7cfaab41c  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab427  jmp 0x14a0               ; 0x7fc7cfaab4b0
0x7fc7cfaab42c  mov -0x150(%rbp), %rax  
0x7fc7cfaab433  mov 0x18(%rax), %rax    
0x7fc7cfaab437  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab43e  mov -0x120(%rbp), %rcx  
0x7fc7cfaab445  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaab44c  mov %rax, -0x50(%rbp)   
0x7fc7cfaab450  movq $0x566, -0x58(%rbp)
0x7fc7cfaab458  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab460  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab467  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab46f  mov %r12, -0x38(%rbp)   
0x7fc7cfaab473  mov 0x176e248, %rsi     
0x7fc7cfaab47b  mov 0x20(%rsi), %rax    
0x7fc7cfaab47f  mov $0x21e, -0xe4(%rbp) 
0x7fc7cfaab489  lea -0x108(%rbp), %rdx  
0x7fc7cfaab490  lea -0x58(%rbp), %rcx   
0x7fc7cfaab494  mov %r14, %rdi          
0x7fc7cfaab497  callq *%rax             
0x7fc7cfaab499  test %rax, %rax         
0x7fc7cfaab49c  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab4a2  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab4a9  mov %rax, -0x118(%rbp)  
0x7fc7cfaab4b0  mov -0x150(%rbp), %rax  
0x7fc7cfaab4b7  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab4be  mov 0x28(%rax), %rax    
0x7fc7cfaab4c2  mov %rax, -0xb8(%rbp)   
0x7fc7cfaab4c9  mov -0x120(%rbp), %rsi  
0x7fc7cfaab4d0  mov %rsi, -0xb0(%rbp)   
0x7fc7cfaab4d7  mov %esi, %ecx          
0x7fc7cfaab4d9  and %eax, %ecx          
0x7fc7cfaab4db  testb $0x1, %cl         
0x7fc7cfaab4de  jz 0x1b9d                ; 0x7fc7cfaabbad
0x7fc7cfaab4e4  sarq $0x1, %rax         
0x7fc7cfaab4e7  sarq $0x1, %rsi         
0x7fc7cfaab4ea  add %rax, %rsi          
0x7fc7cfaab4ed  mov $0x3fffffffffffffff, %rax
0x7fc7cfaab4f7  add %rsi, %rax          
0x7fc7cfaab4fa  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaab504  cmp %rcx, %rax          
0x7fc7cfaab507  ja 0x1bff                ; 0x7fc7cfaabc0f
0x7fc7cfaab50d  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaab512  jmp 0x1c0e               ; 0x7fc7cfaabc1e
0x7fc7cfaab517  mov $0xe3, -0xe4(%rbp)  
0x7fc7cfaab521  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaab52b  lea -0x108(%rbp), %rsi  
0x7fc7cfaab532  mov $0x176d870, %edx    
0x7fc7cfaab537  mov %r14, %rdi          
0x7fc7cfaab53a  callq *%rax             
0x7fc7cfaab53c  test %rax, %rax         
0x7fc7cfaab53f  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab545  mov %rax, -0xb0(%rbp)   
0x7fc7cfaab54c  movq $0x398e, -0xa8(%rbp)
0x7fc7cfaab557  mov -0xc0(%rbp), %rax   
0x7fc7cfaab55e  mov %rax, -0x50(%rbp)   
0x7fc7cfaab562  movq $0x3996, -0x58(%rbp)
0x7fc7cfaab56a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab572  mov $0x3, -0x40(%rbp)   
0x7fc7cfaab579  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab581  mov %r12, -0x38(%rbp)   
0x7fc7cfaab585  mov 0x176d890, %rsi     
0x7fc7cfaab58d  mov 0x20(%rsi), %rax    
0x7fc7cfaab591  mov $0xe7, -0xe4(%rbp)  
0x7fc7cfaab59b  lea -0x108(%rbp), %rdx  
0x7fc7cfaab5a2  lea -0x58(%rbp), %rcx   
0x7fc7cfaab5a6  mov %r14, %rdi          
0x7fc7cfaab5a9  callq *%rax             
0x7fc7cfaab5ab  test %rax, %rax         
0x7fc7cfaab5ae  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab5b4  mov %rax, -0x110(%rbp)  
0x7fc7cfaab5bb  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab5c2  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaab5cd  mov %rax, -0x50(%rbp)   
0x7fc7cfaab5d1  movq $0x586, -0x58(%rbp)
0x7fc7cfaab5d9  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab5e1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab5e8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab5f0  mov %r12, -0x38(%rbp)   
0x7fc7cfaab5f4  mov 0x176d8d8, %rsi     
0x7fc7cfaab5fc  mov 0x20(%rsi), %rax    
0x7fc7cfaab600  mov $0xf0, -0xe4(%rbp)  
0x7fc7cfaab60a  lea -0x108(%rbp), %rdx  
0x7fc7cfaab611  lea -0x58(%rbp), %rcx   
0x7fc7cfaab615  mov %r14, %rdi          
0x7fc7cfaab618  callq *%rax             
0x7fc7cfaab61a  test %rax, %rax         
0x7fc7cfaab61d  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab623  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab62a  andq $0xf, %rax         
0x7fc7cfaab62e  cmpq $0xa, %rax         
0x7fc7cfaab632  jnz 0x1eec               ; 0x7fc7cfaabefc
0x7fc7cfaab638  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab643  jmp 0x1f79               ; 0x7fc7cfaabf89
0x7fc7cfaab648  mov $0x12, %ecx         
0x7fc7cfaab64d  cmp $0x1f, %edx         
0x7fc7cfaab650  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaab656  jmp 0x167b               ; 0x7fc7cfaab68b
0x7fc7cfaab65b  cmpq $0x1a, %rbx        
0x7fc7cfaab65f  jnz 0x1663               ; 0x7fc7cfaab673
0x7fc7cfaab665  mov $0x12, %ecx         
0x7fc7cfaab66a  cmp $0x1b, %edx         
0x7fc7cfaab66d  jz 0x167b                ; 0x7fc7cfaab68b
0x7fc7cfaab673  mov $0x7626f0, %rcx      ; rbx_kind_of
0x7fc7cfaab67d  mov %r14, %rdi          
0x7fc7cfaab680  mov %rbx, %rsi          
0x7fc7cfaab683  mov %rax, %rdx          
0x7fc7cfaab686  callq *%rcx             
0x7fc7cfaab688  mov %rax, %rcx          
0x7fc7cfaab68b  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaab692  andq $0xf, %rcx         
0x7fc7cfaab696  cmpq $0xa, %rcx         
0x7fc7cfaab69a  jnz 0x1771               ; 0x7fc7cfaab781
0x7fc7cfaab6a0  mov 0x1584100, %r15     
0x7fc7cfaab6a8  mov %r15, -0xc0(%rbp)   
0x7fc7cfaab6af  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaab6b6  mov 0x176db90, %rax     
0x7fc7cfaab6be  cmp %r13, 0x30(%rax)    
0x7fc7cfaab6c2  jnz 0x16d1               ; 0x7fc7cfaab6e1
0x7fc7cfaab6c8  mov 0x1582514, %ecx     
0x7fc7cfaab6cf  cmp 0x44(%rax), %ecx    
0x7fc7cfaab6d2  jnz 0x16d1               ; 0x7fc7cfaab6e1
0x7fc7cfaab6d8  mov 0x20(%rax), %rax    
0x7fc7cfaab6dc  jmp 0x16ff               ; 0x7fc7cfaab70f
0x7fc7cfaab6e1  mov $0x147, -0xe4(%rbp) 
0x7fc7cfaab6eb  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaab6f5  lea -0x108(%rbp), %rsi  
0x7fc7cfaab6fc  mov $0x176db90, %edx    
0x7fc7cfaab701  mov %r14, %rdi          
0x7fc7cfaab704  callq *%rax             
0x7fc7cfaab706  test %rax, %rax         
0x7fc7cfaab709  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab70f  mov %rax, -0xb0(%rbp)   
0x7fc7cfaab716  movq $0x398e, -0xa8(%rbp)
0x7fc7cfaab721  mov %r15, -0x50(%rbp)   
0x7fc7cfaab725  movq $0x3996, -0x58(%rbp)
0x7fc7cfaab72d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab735  mov $0x3, -0x40(%rbp)   
0x7fc7cfaab73c  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab744  mov %r12, -0x38(%rbp)   
0x7fc7cfaab748  mov 0x176dbb0, %rsi     
0x7fc7cfaab750  mov 0x20(%rsi), %rax    
0x7fc7cfaab754  mov $0x14b, -0xe4(%rbp) 
0x7fc7cfaab75e  lea -0x108(%rbp), %rdx  
0x7fc7cfaab765  lea -0x58(%rbp), %rcx   
0x7fc7cfaab769  mov %r14, %rdi          
0x7fc7cfaab76c  callq *%rax             
0x7fc7cfaab76e  mov %rax, %rbx          
0x7fc7cfaab771  test %rbx, %rbx         
0x7fc7cfaab774  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab77a  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaab781  mov %rbx, -0x120(%rbp)  
0x7fc7cfaab788  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaab78f  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaab79a  mov %rbx, -0x50(%rbp)   
0x7fc7cfaab79e  movq $0x586, -0x58(%rbp)
0x7fc7cfaab7a6  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab7ae  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab7b5  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab7bd  mov %r12, -0x38(%rbp)   
0x7fc7cfaab7c1  mov 0x176dbf8, %rsi     
0x7fc7cfaab7c9  mov 0x20(%rsi), %rax    
0x7fc7cfaab7cd  mov $0x154, -0xe4(%rbp) 
0x7fc7cfaab7d7  lea -0x108(%rbp), %rdx  
0x7fc7cfaab7de  lea -0x58(%rbp), %rcx   
0x7fc7cfaab7e2  mov %r14, %rdi          
0x7fc7cfaab7e5  callq *%rax             
0x7fc7cfaab7e7  test %rax, %rax         
0x7fc7cfaab7ea  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab7f0  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab7f7  andq $0xf, %rax         
0x7fc7cfaab7fb  cmpq $0xa, %rax         
0x7fc7cfaab7ff  jnz 0x1805               ; 0x7fc7cfaab815
0x7fc7cfaab805  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab810  jmp 0x1889               ; 0x7fc7cfaab899
0x7fc7cfaab815  mov -0x120(%rbp), %rax  
0x7fc7cfaab81c  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab823  mov -0x150(%rbp), %rcx  
0x7fc7cfaab82a  mov 0x18(%rcx), %rcx    
0x7fc7cfaab82e  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaab835  mov %rax, -0x50(%rbp)   
0x7fc7cfaab839  movq $0x55e, -0x58(%rbp)
0x7fc7cfaab841  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab849  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab850  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab858  mov %r12, -0x38(%rbp)   
0x7fc7cfaab85c  mov 0x176dc40, %rsi     
0x7fc7cfaab864  mov 0x20(%rsi), %rax    
0x7fc7cfaab868  mov $0x15d, -0xe4(%rbp) 
0x7fc7cfaab872  lea -0x108(%rbp), %rdx  
0x7fc7cfaab879  lea -0x58(%rbp), %rcx   
0x7fc7cfaab87d  mov %r14, %rdi          
0x7fc7cfaab880  callq *%rax             
0x7fc7cfaab882  test %rax, %rax         
0x7fc7cfaab885  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab88b  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab892  mov %rax, -0x120(%rbp)  
0x7fc7cfaab899  mov -0x128(%rbp), %rbx  
0x7fc7cfaab8a0  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaab8a7  mov %rbx, %rax          
0x7fc7cfaab8aa  andq $0xf, %rax         
0x7fc7cfaab8ae  cmpq $0xa, %rax         
0x7fc7cfaab8b2  jnz 0x1a4a               ; 0x7fc7cfaaba5a
0x7fc7cfaab8b8  mov -0x120(%rbp), %rax  
0x7fc7cfaab8bf  mov %rax, -0xc0(%rbp)   
0x7fc7cfaab8c6  mov -0x150(%rbp), %rcx  
0x7fc7cfaab8cd  mov 0x18(%rcx), %rcx    
0x7fc7cfaab8d1  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaab8d8  mov %rax, -0x50(%rbp)   
0x7fc7cfaab8dc  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaab8e4  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab8ec  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab8f3  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab8fb  mov %r12, -0x38(%rbp)   
0x7fc7cfaab8ff  mov 0x176dd88, %rsi     
0x7fc7cfaab907  mov 0x20(%rsi), %rax    
0x7fc7cfaab90b  mov $0x186, -0xe4(%rbp) 
0x7fc7cfaab915  lea -0x108(%rbp), %rdx  
0x7fc7cfaab91c  lea -0x58(%rbp), %rcx   
0x7fc7cfaab920  mov %r14, %rdi          
0x7fc7cfaab923  callq *%rax             
0x7fc7cfaab925  mov %rax, %rcx          
0x7fc7cfaab928  test %rcx, %rcx         
0x7fc7cfaab92b  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaab931  andq $0xf, %rcx         
0x7fc7cfaab935  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaab940  mov $0x1a, %eax         
0x7fc7cfaab945  cmpq $0xa, %rcx         
0x7fc7cfaab949  jnz 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaab94f  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaab959  mov %r14, %rdi          
0x7fc7cfaab95c  callq *%rax             
0x7fc7cfaab95e  mov %rax, -0x70(%rbp)   
0x7fc7cfaab962  mov -0x150(%rbp), %rax  
0x7fc7cfaab969  mov 0x20(%rax), %rcx    
0x7fc7cfaab96d  mov %rcx, -0xc0(%rbp)   
0x7fc7cfaab974  mov 0x28(%rax), %rax    
0x7fc7cfaab978  mov %rax, -0xb8(%rbp)   
0x7fc7cfaab97f  mov -0x120(%rbp), %rcx  
0x7fc7cfaab986  mov %rcx, -0xb0(%rbp)   
0x7fc7cfaab98d  mov %rax, -0x50(%rbp)   
0x7fc7cfaab991  movq $0x55e, -0x58(%rbp)
0x7fc7cfaab999  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaab9a1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaab9a8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaab9b0  lea -0xb0(%rbp), %rax   
0x7fc7cfaab9b7  mov %rax, -0x38(%rbp)   
0x7fc7cfaab9bb  mov 0x176de48, %rsi     
0x7fc7cfaab9c3  mov 0x20(%rsi), %rax    
0x7fc7cfaab9c7  mov $0x19e, -0xe4(%rbp) 
0x7fc7cfaab9d1  lea -0x108(%rbp), %rdx  
0x7fc7cfaab9d8  lea -0x58(%rbp), %rcx   
0x7fc7cfaab9dc  mov %r14, %rdi          
0x7fc7cfaab9df  callq *%rax             
0x7fc7cfaab9e1  test %rax, %rax         
0x7fc7cfaab9e4  jz 0x1b16                ; 0x7fc7cfaabb26
0x7fc7cfaab9ea  mov %rax, -0xb8(%rbp)   
0x7fc7cfaab9f1  mov -0xc0(%rbp), %rax   
0x7fc7cfaab9f8  mov %rax, -0x50(%rbp)   
0x7fc7cfaab9fc  movq $0x3bbe, -0x58(%rbp)
0x7fc7cfaaba04  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaba0c  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaba13  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaba1b  mov %r12, -0x38(%rbp)   
0x7fc7cfaaba1f  mov 0x176de60, %rsi     
0x7fc7cfaaba27  mov 0x20(%rsi), %rax    
0x7fc7cfaaba2b  mov $0x1a1, -0xe4(%rbp) 
0x7fc7cfaaba35  lea -0x108(%rbp), %rdx  
0x7fc7cfaaba3c  lea -0x58(%rbp), %rcx   
0x7fc7cfaaba40  mov %r14, %rdi          
0x7fc7cfaaba43  callq *%rax             
0x7fc7cfaaba45  test %rax, %rax         
0x7fc7cfaaba48  jz 0x1b16                ; 0x7fc7cfaabb26
0x7fc7cfaaba4e  mov %rax, -0xc0(%rbp)   
0x7fc7cfaaba55  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaaba5a  mov %rbx, -0xc0(%rbp)   
0x7fc7cfaaba61  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaaba68  mov 0x176dcc0, %rax     
0x7fc7cfaaba70  mov 0x30(%rax), %rcx    
0x7fc7cfaaba74  mov -0x100(%rbp), %r13  
0x7fc7cfaaba7b  cmp %r13, %rcx          
0x7fc7cfaaba7e  jnz 0x1a8d               ; 0x7fc7cfaaba9d
0x7fc7cfaaba84  mov 0x1582514, %ecx     
0x7fc7cfaaba8b  cmp 0x44(%rax), %ecx    
0x7fc7cfaaba8e  jnz 0x1a8d               ; 0x7fc7cfaaba9d
0x7fc7cfaaba94  mov 0x20(%rax), %rax    
0x7fc7cfaaba98  jmp 0x1abb               ; 0x7fc7cfaabacb
0x7fc7cfaaba9d  mov $0x16d, -0xe4(%rbp) 
0x7fc7cfaabaa7  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaabab1  lea -0x108(%rbp), %rsi  
0x7fc7cfaabab8  mov $0x176dcc0, %edx    
0x7fc7cfaababd  mov %r14, %rdi          
0x7fc7cfaabac0  callq *%rax             
0x7fc7cfaabac2  test %rax, %rax         
0x7fc7cfaabac5  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabacb  mov %rax, -0xb8(%rbp)   
0x7fc7cfaabad2  mov %rbx, -0xb0(%rbp)   
0x7fc7cfaabad9  testb $0x3, %bl         
0x7fc7cfaabadc  jz 0x1b02                ; 0x7fc7cfaabb12
0x7fc7cfaabae2  cmpb $0x14, (%rax)      
0x7fc7cfaabae5  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaabaeb  mov 0x70(%rax), %edx    
0x7fc7cfaabaee  mov %rbx, %rcx          
0x7fc7cfaabaf1  andq $0x7, %rcx         
0x7fc7cfaabaf5  cmpq $0x6, %rcx         
0x7fc7cfaabaf9  jnz 0x1ce3               ; 0x7fc7cfaabcf3
0x7fc7cfaabaff  mov $0x12, %ecx         
0x7fc7cfaabb04  cmp $0x27, %edx         
0x7fc7cfaabb07  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaabb0d  jmp 0x210a               ; 0x7fc7cfaac11a
0x7fc7cfaabb12  cmp %rax, 0x8(%rbx)     
0x7fc7cfaabb16  mov $0x12, %ecx         
0x7fc7cfaabb1b  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaabb21  jmp 0x210a               ; 0x7fc7cfaac11a
0x7fc7cfaabb26  mov $0x763170, %rax      ; rbx_raising_exception
0x7fc7cfaabb30  mov %r14, %rdi          
0x7fc7cfaabb33  callq *%rax             
0x7fc7cfaabb35  testb $0x1, %al         
0x7fc7cfaabb38  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabb3e  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaabb48  mov %r14, %rdi          
0x7fc7cfaabb4b  callq *%rax             
0x7fc7cfaabb4d  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabb54  mov %rax, -0x78(%rbp)   
0x7fc7cfaabb58  mov $0x763190, %rax      ; rbx_current_exception
0x7fc7cfaabb62  mov %r14, %rdi          
0x7fc7cfaabb65  callq *%rax             
0x7fc7cfaabb67  mov %rax, %r15          
0x7fc7cfaabb6a  mov %r15, -0xc0(%rbp)   
0x7fc7cfaabb71  mov %r15, -0xb8(%rbp)   
0x7fc7cfaabb78  mov 0x176dec8, %rax     
0x7fc7cfaabb80  mov 0x30(%rax), %rcx    
0x7fc7cfaabb84  mov -0x100(%rbp), %rbx  
0x7fc7cfaabb8b  cmp %rbx, %rcx          
0x7fc7cfaabb8e  jnz 0x1d08               ; 0x7fc7cfaabd18
0x7fc7cfaabb94  mov 0x1582514, %ecx     
0x7fc7cfaabb9b  cmp 0x44(%rax), %ecx    
0x7fc7cfaabb9e  jnz 0x1d08               ; 0x7fc7cfaabd18
0x7fc7cfaabba4  mov 0x20(%rax), %rax    
0x7fc7cfaabba8  jmp 0x1d36               ; 0x7fc7cfaabd46
0x7fc7cfaabbad  mov %rax, -0x50(%rbp)   
0x7fc7cfaabbb1  movq $0x55e, -0x58(%rbp)
0x7fc7cfaabbb9  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaabbc1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaabbc8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaabbd0  lea -0xb0(%rbp), %rax   
0x7fc7cfaabbd7  mov %rax, -0x38(%rbp)   
0x7fc7cfaabbdb  mov 0x176e2b8, %rsi     
0x7fc7cfaabbe3  mov 0x20(%rsi), %rax    
0x7fc7cfaabbe7  mov $0x22c, -0xe4(%rbp) 
0x7fc7cfaabbf1  lea -0x108(%rbp), %rdx  
0x7fc7cfaabbf8  lea -0x58(%rbp), %rcx   
0x7fc7cfaabbfc  mov %r14, %rdi          
0x7fc7cfaabbff  callq *%rax             
0x7fc7cfaabc01  test %rax, %rax         
0x7fc7cfaabc04  jnz 0x1c0e               ; 0x7fc7cfaabc1e
0x7fc7cfaabc0a  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaabc0f  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaabc19  mov %r14, %rdi          
0x7fc7cfaabc1c  callq *%rax             
0x7fc7cfaabc1e  mov %rax, -0xb8(%rbp)   
0x7fc7cfaabc25  mov -0x118(%rbp), %r8   
0x7fc7cfaabc2c  mov %r8, -0xb0(%rbp)    
0x7fc7cfaabc33  mov -0xc0(%rbp), %rdx   
0x7fc7cfaabc3a  testb $0x3, %dl         
0x7fc7cfaabc3d  jnz 0x1c81               ; 0x7fc7cfaabc91
0x7fc7cfaabc43  mov 0x8(%rdx), %rcx     
0x7fc7cfaabc47  cmp $0x6, 0x70(%rcx)    
0x7fc7cfaabc4b  jnz 0x1c81               ; 0x7fc7cfaabc91
0x7fc7cfaabc51  cmp $0xf3, 0x74(%rcx)   
0x7fc7cfaabc58  jnz 0x1da2               ; 0x7fc7cfaabdb2
0x7fc7cfaabc5e  mov $0x5d67c0, %rbx      ; jit_stub_array_new_range
0x7fc7cfaabc68  lea -0x108(%rbp), %rsi  
0x7fc7cfaabc6f  mov %r14, %rdi          
0x7fc7cfaabc72  mov %rax, %rcx          
0x7fc7cfaabc75  callq *%rbx             
0x7fc7cfaabc77  test %rax, %rax         
0x7fc7cfaabc7a  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabc80  cmpq $0x22, %rax        
0x7fc7cfaabc84  jnz 0x1cd7               ; 0x7fc7cfaabce7
0x7fc7cfaabc8a  mov -0xc0(%rbp), %rdx   
0x7fc7cfaabc91  mov %rdx, -0x50(%rbp)   
0x7fc7cfaabc95  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaabc9d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaabca5  mov $0x2, -0x40(%rbp)   
0x7fc7cfaabcac  movq $0x0, -0x30(%rbp)  
0x7fc7cfaabcb4  mov %r12, -0x38(%rbp)   
0x7fc7cfaabcb8  mov 0x176e2e8, %rsi     
0x7fc7cfaabcc0  mov 0x20(%rsi), %rax    
0x7fc7cfaabcc4  mov $0x232, -0xe4(%rbp) 
0x7fc7cfaabcce  lea -0x108(%rbp), %rdx  
0x7fc7cfaabcd5  lea -0x58(%rbp), %rcx   
0x7fc7cfaabcd9  mov %r14, %rdi          
0x7fc7cfaabcdc  callq *%rax             
0x7fc7cfaabcde  test %rax, %rax         
0x7fc7cfaabce1  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabce7  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabcee  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaabcf3  testb $0x1, %bl         
0x7fc7cfaabcf6  jz 0x1dea                ; 0x7fc7cfaabdfa
0x7fc7cfaabcfc  mov $0x12, %ecx         
0x7fc7cfaabd01  cmp $0x23, %edx         
0x7fc7cfaabd04  jz 0x210a                ; 0x7fc7cfaac11a
0x7fc7cfaabd0a  cmp $0x25, %edx         
0x7fc7cfaabd0d  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaabd13  jmp 0x210a               ; 0x7fc7cfaac11a
0x7fc7cfaabd18  mov $0x1ae, -0xe4(%rbp) 
0x7fc7cfaabd22  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaabd2c  lea -0x108(%rbp), %rsi  
0x7fc7cfaabd33  mov $0x176dec8, %edx    
0x7fc7cfaabd38  mov %r14, %rdi          
0x7fc7cfaabd3b  callq *%rax             
0x7fc7cfaabd3d  test %rax, %rax         
0x7fc7cfaabd40  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabd46  mov %rax, -0xb0(%rbp)   
0x7fc7cfaabd4d  mov 0x176ded8, %rcx     
0x7fc7cfaabd55  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaabd59  jnz 0x1d69               ; 0x7fc7cfaabd79
0x7fc7cfaabd5f  mov 0x1582514, %edx     
0x7fc7cfaabd66  cmp 0x44(%rcx), %edx    
0x7fc7cfaabd69  jnz 0x1d69               ; 0x7fc7cfaabd79
0x7fc7cfaabd6f  cmp %rax, 0x28(%rcx)    
0x7fc7cfaabd73  jz 0x200e                ; 0x7fc7cfaac01e
0x7fc7cfaabd79  mov $0x1b0, -0xe4(%rbp) 
0x7fc7cfaabd83  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7fc7cfaabd8d  lea -0x108(%rbp), %rcx  
0x7fc7cfaabd94  mov $0x176ded8, %edx    
0x7fc7cfaabd99  mov %r14, %rdi          
0x7fc7cfaabd9c  mov %rcx, %rsi          
0x7fc7cfaabd9f  mov %rax, %rcx          
0x7fc7cfaabda2  callq *%rbx             
0x7fc7cfaabda4  test %rax, %rax         
0x7fc7cfaabda7  jnz 0x2012               ; 0x7fc7cfaac022
0x7fc7cfaabdad  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaabdb2  mov $0x232, -0xe4(%rbp) 
0x7fc7cfaabdbc  mov $0x7fc7b40008f0, %rax
0x7fc7cfaabdc6  mov %rax, (%rsp)        
0x7fc7cfaabdca  mov $0x1, 0x10(%rsp)    
0x7fc7cfaabdd2  mov $0x0, 0x8(%rsp)     
0x7fc7cfaabdda  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfaabde4  lea -0x108(%rbp), %rsi  
0x7fc7cfaabdeb  mov $0x232, %edx        
0x7fc7cfaabdf0  mov $0x2, %ecx          
0x7fc7cfaabdf5  jmp 0xd2d                ; 0x7fc7cfaaad3d
0x7fc7cfaabdfa  cmpq $0xa, %rbx         
0x7fc7cfaabdfe  jz 0x20c7                ; 0x7fc7cfaac0d7
0x7fc7cfaabe04  cmpq $0x12, %rbx        
0x7fc7cfaabe08  jnz 0x20da               ; 0x7fc7cfaac0ea
0x7fc7cfaabe0e  mov $0x12, %ecx         
0x7fc7cfaabe13  cmp $0x1d, %edx         
0x7fc7cfaabe16  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaabe1c  jmp 0x210a               ; 0x7fc7cfaac11a
0x7fc7cfaabe21  mov 0x20(%rcx), %rax    
0x7fc7cfaabe25  mov %rax, -0xb8(%rbp)   
0x7fc7cfaabe2c  mov %r15, -0xb0(%rbp)   
0x7fc7cfaabe33  mov %rax, -0x50(%rbp)   
0x7fc7cfaabe37  movq $0x57e, -0x58(%rbp)
0x7fc7cfaabe3f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaabe47  mov $0x1, -0x40(%rbp)   
0x7fc7cfaabe4e  movq $0x0, -0x30(%rbp)  
0x7fc7cfaabe56  mov %r12, -0x38(%rbp)   
0x7fc7cfaabe5a  mov 0x176d530, %rsi     
0x7fc7cfaabe62  mov 0x20(%rsi), %rax    
0x7fc7cfaabe66  mov $0x7b, -0xe4(%rbp)  
0x7fc7cfaabe70  lea -0x108(%rbp), %rdx  
0x7fc7cfaabe77  lea -0x58(%rbp), %rcx   
0x7fc7cfaabe7b  mov %r14, %rdi          
0x7fc7cfaabe7e  callq *%rax             
0x7fc7cfaabe80  test %rax, %rax         
0x7fc7cfaabe83  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabe89  mov %rax, -0xb8(%rbp)   
0x7fc7cfaabe90  andq $0xf, %rax         
0x7fc7cfaabe94  cmpq $0xa, %rax         
0x7fc7cfaabe98  jnz 0x1eb4               ; 0x7fc7cfaabec4
0x7fc7cfaabe9e  mov -0x68(%rbp), %rdx   
0x7fc7cfaabea2  mov %rdx, -0xc0(%rbp)   
0x7fc7cfaabea9  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7fc7cfaabeb3  lea -0x108(%rbp), %rsi  
0x7fc7cfaabeba  mov %r14, %rdi          
0x7fc7cfaabebd  callq *%rax             
0x7fc7cfaabebf  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaabec4  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaabecf  mov -0x60(%rbp), %rdx   
0x7fc7cfaabed3  mov %rdx, -0xb8(%rbp)   
0x7fc7cfaabeda  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7fc7cfaabee4  lea -0x108(%rbp), %rsi  
0x7fc7cfaabeeb  mov %r14, %rdi          
0x7fc7cfaabeee  callq *%rax             
0x7fc7cfaabef0  mov -0xc0(%rbp), %rax   
0x7fc7cfaabef7  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaabefc  mov -0x110(%rbp), %rax  
0x7fc7cfaabf03  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabf0a  mov -0x150(%rbp), %rcx  
0x7fc7cfaabf11  mov 0x18(%rcx), %rcx    
0x7fc7cfaabf15  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaabf1c  mov %rax, -0x50(%rbp)   
0x7fc7cfaabf20  movq $0x55e, -0x58(%rbp)
0x7fc7cfaabf28  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaabf30  mov $0x1, -0x40(%rbp)   
0x7fc7cfaabf37  movq $0x0, -0x30(%rbp)  
0x7fc7cfaabf3f  mov %r12, -0x38(%rbp)   
0x7fc7cfaabf43  mov 0x176d920, %rax     
0x7fc7cfaabf4b  mov 0x20(%rax), %rbx    
0x7fc7cfaabf4f  mov $0xf9, -0xe4(%rbp)  
0x7fc7cfaabf59  lea -0x108(%rbp), %rcx  
0x7fc7cfaabf60  lea -0x58(%rbp), %r8    
0x7fc7cfaabf64  mov %r14, %rdi          
0x7fc7cfaabf67  mov %rax, %rsi          
0x7fc7cfaabf6a  mov %rcx, %rdx          
0x7fc7cfaabf6d  mov %r8, %rcx           
0x7fc7cfaabf70  callq *%rbx             
0x7fc7cfaabf72  test %rax, %rax         
0x7fc7cfaabf75  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabf7b  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabf82  mov %rax, -0x110(%rbp)  
0x7fc7cfaabf89  mov -0x130(%rbp), %rax  
0x7fc7cfaabf90  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabf97  mov %rax, -0x50(%rbp)   
0x7fc7cfaabf9b  movq $0x497e, -0x58(%rbp)
0x7fc7cfaabfa3  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaabfab  mov $0x0, -0x40(%rbp)   
0x7fc7cfaabfb2  movq $0x0, -0x30(%rbp)  
0x7fc7cfaabfba  mov 0x176d978, %rax     
0x7fc7cfaabfc2  mov 0x20(%rax), %rbx    
0x7fc7cfaabfc6  mov $0x104, -0xe4(%rbp) 
0x7fc7cfaabfd0  lea -0x108(%rbp), %rcx  
0x7fc7cfaabfd7  lea -0x58(%rbp), %r8    
0x7fc7cfaabfdb  mov %r14, %rdi          
0x7fc7cfaabfde  mov %rax, %rsi          
0x7fc7cfaabfe1  mov %rcx, %rdx          
0x7fc7cfaabfe4  mov %r8, %rcx           
0x7fc7cfaabfe7  callq *%rbx             
0x7fc7cfaabfe9  test %rax, %rax         
0x7fc7cfaabfec  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaabff2  mov %rax, -0xc0(%rbp)   
0x7fc7cfaabff9  andq $0xf, %rax         
0x7fc7cfaabffd  cmpq $0xa, %rax         
0x7fc7cfaac001  jnz 0x21e2               ; 0x7fc7cfaac1f2
0x7fc7cfaac007  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaac012  mov -0x110(%rbp), %rax  
0x7fc7cfaac019  jmp 0x2268               ; 0x7fc7cfaac278
0x7fc7cfaac01e  mov 0x20(%rcx), %rax    
0x7fc7cfaac022  mov %rax, -0xb8(%rbp)   
0x7fc7cfaac029  mov %r15, -0xb0(%rbp)   
0x7fc7cfaac030  mov %rax, -0x50(%rbp)   
0x7fc7cfaac034  movq $0x57e, -0x58(%rbp)
0x7fc7cfaac03c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac044  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac04b  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac053  lea -0xb0(%rbp), %rax   
0x7fc7cfaac05a  mov %rax, -0x38(%rbp)   
0x7fc7cfaac05e  mov 0x176def0, %rax     
0x7fc7cfaac066  mov 0x20(%rax), %rbx    
0x7fc7cfaac06a  mov $0x1b3, -0xe4(%rbp) 
0x7fc7cfaac074  lea -0x108(%rbp), %rcx  
0x7fc7cfaac07b  lea -0x58(%rbp), %r8    
0x7fc7cfaac07f  mov %r14, %rdi          
0x7fc7cfaac082  mov %rax, %rsi          
0x7fc7cfaac085  mov %rcx, %rdx          
0x7fc7cfaac088  mov %r8, %rcx           
0x7fc7cfaac08b  callq *%rbx             
0x7fc7cfaac08d  test %rax, %rax         
0x7fc7cfaac090  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac096  mov %rax, -0xb8(%rbp)   
0x7fc7cfaac09d  andq $0xf, %rax         
0x7fc7cfaac0a1  cmpq $0xa, %rax         
0x7fc7cfaac0a5  jnz 0x23d9               ; 0x7fc7cfaac3e9
0x7fc7cfaac0ab  mov -0x78(%rbp), %rax   
0x7fc7cfaac0af  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac0b6  mov $0x7631e0, %rcx      ; rbx_restore_exception_state
0x7fc7cfaac0c0  lea -0x108(%rbp), %rdx  
0x7fc7cfaac0c7  mov %r14, %rdi          
0x7fc7cfaac0ca  mov %rdx, %rsi          
0x7fc7cfaac0cd  mov %rax, %rdx          
0x7fc7cfaac0d0  callq *%rcx             
0x7fc7cfaac0d2  jmp 0x24a6               ; 0x7fc7cfaac4b6
0x7fc7cfaac0d7  mov $0x12, %ecx         
0x7fc7cfaac0dc  cmp $0x1f, %edx         
0x7fc7cfaac0df  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaac0e5  jmp 0x210a               ; 0x7fc7cfaac11a
0x7fc7cfaac0ea  cmpq $0x1a, %rbx        
0x7fc7cfaac0ee  jnz 0x20f2               ; 0x7fc7cfaac102
0x7fc7cfaac0f4  mov $0x12, %ecx         
0x7fc7cfaac0f9  cmp $0x1b, %edx         
0x7fc7cfaac0fc  jz 0x210a                ; 0x7fc7cfaac11a
0x7fc7cfaac102  mov $0x7626f0, %rcx      ; rbx_kind_of
0x7fc7cfaac10c  mov %r14, %rdi          
0x7fc7cfaac10f  mov %rbx, %rsi          
0x7fc7cfaac112  mov %rax, %rdx          
0x7fc7cfaac115  callq *%rcx             
0x7fc7cfaac117  mov %rax, %rcx          
0x7fc7cfaac11a  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaac121  andq $0xf, %rcx         
0x7fc7cfaac125  cmpq $0xa, %rcx         
0x7fc7cfaac129  jnz 0x934                ; 0x7fc7cfaaa944
0x7fc7cfaac12f  mov 0x1584100, %r15     
0x7fc7cfaac137  mov %r15, -0xc0(%rbp)   
0x7fc7cfaac13e  mov %rbx, -0xb8(%rbp)   
0x7fc7cfaac145  mov 0x176dd10, %rax     
0x7fc7cfaac14d  cmp %r13, 0x30(%rax)    
0x7fc7cfaac151  jnz 0x2160               ; 0x7fc7cfaac170
0x7fc7cfaac157  mov 0x1582514, %ecx     
0x7fc7cfaac15e  cmp 0x44(%rax), %ecx    
0x7fc7cfaac161  jnz 0x2160               ; 0x7fc7cfaac170
0x7fc7cfaac167  mov 0x20(%rax), %rax    
0x7fc7cfaac16b  jmp 0x218e               ; 0x7fc7cfaac19e
0x7fc7cfaac170  mov $0x177, -0xe4(%rbp) 
0x7fc7cfaac17a  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaac184  lea -0x108(%rbp), %rsi  
0x7fc7cfaac18b  mov $0x176dd10, %edx    
0x7fc7cfaac190  mov %r14, %rdi          
0x7fc7cfaac193  callq *%rax             
0x7fc7cfaac195  test %rax, %rax         
0x7fc7cfaac198  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac19e  mov %rax, -0xb0(%rbp)   
0x7fc7cfaac1a5  movq $0x398e, -0xa8(%rbp)
0x7fc7cfaac1b0  mov %r15, -0x50(%rbp)   
0x7fc7cfaac1b4  movq $0x3996, -0x58(%rbp)
0x7fc7cfaac1bc  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac1c4  mov $0x3, -0x40(%rbp)   
0x7fc7cfaac1cb  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac1d3  mov %r12, -0x38(%rbp)   
0x7fc7cfaac1d7  mov 0x176dd30, %rsi     
0x7fc7cfaac1df  mov 0x20(%rsi), %rax    
0x7fc7cfaac1e3  mov $0x17b, -0xe4(%rbp) 
0x7fc7cfaac1ed  jmp 0x911                ; 0x7fc7cfaaa921
0x7fc7cfaac1f2  mov -0x110(%rbp), %rax  
0x7fc7cfaac1f9  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac200  movq $0x3, -0xb8(%rbp)  
0x7fc7cfaac20b  mov %rax, -0x50(%rbp)   
0x7fc7cfaac20f  movq $0x566, -0x58(%rbp)
0x7fc7cfaac217  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac21f  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac226  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac22e  mov %r12, -0x38(%rbp)   
0x7fc7cfaac232  mov 0x176d9b8, %rax     
0x7fc7cfaac23a  mov 0x20(%rax), %rbx    
0x7fc7cfaac23e  mov $0x10c, -0xe4(%rbp) 
0x7fc7cfaac248  lea -0x108(%rbp), %rcx  
0x7fc7cfaac24f  lea -0x58(%rbp), %r8    
0x7fc7cfaac253  mov %r14, %rdi          
0x7fc7cfaac256  mov %rax, %rsi          
0x7fc7cfaac259  mov %rcx, %rdx          
0x7fc7cfaac25c  mov %r8, %rcx           
0x7fc7cfaac25f  callq *%rbx             
0x7fc7cfaac261  test %rax, %rax         
0x7fc7cfaac264  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac26a  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac271  mov %rax, -0x110(%rbp)  
0x7fc7cfaac278  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac27f  mov -0x120(%rbp), %rcx  
0x7fc7cfaac286  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaac28d  mov %rax, -0x50(%rbp)   
0x7fc7cfaac291  movq $0x586, -0x58(%rbp)
0x7fc7cfaac299  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac2a1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac2a8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac2b0  mov %r12, -0x38(%rbp)   
0x7fc7cfaac2b4  mov 0x176da20, %rax     
0x7fc7cfaac2bc  mov 0x20(%rax), %rbx    
0x7fc7cfaac2c0  mov $0x119, -0xe4(%rbp) 
0x7fc7cfaac2ca  lea -0x108(%rbp), %rcx  
0x7fc7cfaac2d1  lea -0x58(%rbp), %r8    
0x7fc7cfaac2d5  mov %r14, %rdi          
0x7fc7cfaac2d8  mov %rax, %rsi          
0x7fc7cfaac2db  mov %rcx, %rdx          
0x7fc7cfaac2de  mov %r8, %rcx           
0x7fc7cfaac2e1  callq *%rbx             
0x7fc7cfaac2e3  test %rax, %rax         
0x7fc7cfaac2e6  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac2ec  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac2f3  andq $0xf, %rax         
0x7fc7cfaac2f7  cmpq $0xa, %rax         
0x7fc7cfaac2fb  jnz 0x2417               ; 0x7fc7cfaac427
0x7fc7cfaac301  mov -0x110(%rbp), %rax  
0x7fc7cfaac308  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac30f  mov -0x120(%rbp), %rcx  
0x7fc7cfaac316  mov %rcx, -0xb8(%rbp)   
0x7fc7cfaac31d  mov %rax, -0x50(%rbp)   
0x7fc7cfaac321  movq $0x566, -0x58(%rbp)
0x7fc7cfaac329  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac331  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac338  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac340  mov %r12, -0x38(%rbp)   
0x7fc7cfaac344  mov 0x176dac8, %rax     
0x7fc7cfaac34c  mov 0x20(%rax), %rbx    
0x7fc7cfaac350  mov $0x12e, -0xe4(%rbp) 
0x7fc7cfaac35a  lea -0x108(%rbp), %rcx  
0x7fc7cfaac361  lea -0x58(%rbp), %r8    
0x7fc7cfaac365  mov %r14, %rdi          
0x7fc7cfaac368  mov %rax, %rsi          
0x7fc7cfaac36b  mov %rcx, %rdx          
0x7fc7cfaac36e  mov %r8, %rcx           
0x7fc7cfaac371  callq *%rbx             
0x7fc7cfaac373  test %rax, %rax         
0x7fc7cfaac376  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac37c  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac383  movq $0x3, -0xb8(%rbp)  
0x7fc7cfaac38e  mov %rax, -0x50(%rbp)   
0x7fc7cfaac392  movq $0x55e, -0x58(%rbp)
0x7fc7cfaac39a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac3a2  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac3a9  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac3b1  mov %r12, -0x38(%rbp)   
0x7fc7cfaac3b5  mov 0x176dae8, %rax     
0x7fc7cfaac3bd  mov 0x20(%rax), %rbx    
0x7fc7cfaac3c1  mov $0x132, -0xe4(%rbp) 
0x7fc7cfaac3cb  lea -0x108(%rbp), %rcx  
0x7fc7cfaac3d2  lea -0x58(%rbp), %r8    
0x7fc7cfaac3d6  mov %r14, %rdi          
0x7fc7cfaac3d9  mov %rax, %rsi          
0x7fc7cfaac3dc  mov %rcx, %rdx          
0x7fc7cfaac3df  mov %r8, %rcx           
0x7fc7cfaac3e2  callq *%rbx             
0x7fc7cfaac3e4  jmp 0x921                ; 0x7fc7cfaaa931
0x7fc7cfaac3e9  movq $0x1a, -0xc0(%rbp) 
0x7fc7cfaac3f4  mov -0x70(%rbp), %rax   
0x7fc7cfaac3f8  mov %rax, -0xb8(%rbp)   
0x7fc7cfaac3ff  mov $0x7631e0, %rcx      ; rbx_restore_exception_state
0x7fc7cfaac409  lea -0x108(%rbp), %rdx  
0x7fc7cfaac410  mov %r14, %rdi          
0x7fc7cfaac413  mov %rdx, %rsi          
0x7fc7cfaac416  mov %rax, %rdx          
0x7fc7cfaac419  callq *%rcx             
0x7fc7cfaac41b  mov -0xc0(%rbp), %rax   
0x7fc7cfaac422  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaac427  mov -0x150(%rbp), %rax  
0x7fc7cfaac42e  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac435  movq $0x1, -0xb8(%rbp)  
0x7fc7cfaac440  movq $0x1, -0xb0(%rbp)  
0x7fc7cfaac44b  mov %rax, -0x50(%rbp)   
0x7fc7cfaac44f  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaac457  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac45f  mov $0x2, -0x40(%rbp)   
0x7fc7cfaac466  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac46e  mov %r12, -0x38(%rbp)   
0x7fc7cfaac472  mov 0x176da68, %rax     
0x7fc7cfaac47a  mov 0x20(%rax), %rbx    
0x7fc7cfaac47e  mov $0x122, -0xe4(%rbp) 
0x7fc7cfaac488  lea -0x108(%rbp), %rcx  
0x7fc7cfaac48f  lea -0x58(%rbp), %r8    
0x7fc7cfaac493  mov %r14, %rdi          
0x7fc7cfaac496  mov %rax, %rsi          
0x7fc7cfaac499  mov %rcx, %rdx          
0x7fc7cfaac49c  mov %r8, %rcx           
0x7fc7cfaac49f  callq *%rbx             
0x7fc7cfaac4a1  test %rax, %rax         
0x7fc7cfaac4a4  jz 0x24a6                ; 0x7fc7cfaac4b6
0x7fc7cfaac4aa  mov %rax, -0xc0(%rbp)   
0x7fc7cfaac4b1  jmp 0x24d8               ; 0x7fc7cfaac4e8
0x7fc7cfaac4b6  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfaac4c0  lea -0x108(%rbp), %rsi  
0x7fc7cfaac4c7  mov %r14, %rdi          
0x7fc7cfaac4ca  callq *%rax             
0x7fc7cfaac4cc  mov %al, %cl            
0x7fc7cfaac4ce  xor %eax, %eax          
0x7fc7cfaac4d0  testb $0x1, %cl         
0x7fc7cfaac4d3  jz 0x24d8                ; 0x7fc7cfaac4e8
0x7fc7cfaac4d9  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfaac4e3  mov %r14, %rdi          
0x7fc7cfaac4e6  callq *%rax             
0x7fc7cfaac4e8  addq $0x158, %rsp       
0x7fc7cfaac4ef  pop %rbx                
0x7fc7cfaac4f0  pop %r12                
0x7fc7cfaac4f2  pop %r13                
0x7fc7cfaac4f4  pop %r14                
0x7fc7cfaac4f6  pop %r15                
0x7fc7cfaac4f8  pop %rbp                
0x7fc7cfaac4f9  ret                     
[[[ LLVM Simple IR: _X_Planet#move_from_i@2 ]]]

define %"struct.rubinius::Object"* @"_X_Planet#move_from_i@2"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !19
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !19
  %counter2 = alloca i32, !dbg !19
  %valid_flag = alloca i1, !dbg !19
  %cfstk = alloca %"struct.rubinius::Object"*, i32 25, !dbg !19
  %var_mem = alloca %"struct.rubinius::Object"*, i32 18, !dbg !19
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !19
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !19
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !19
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !19
  %arg.total = load i32* %total_pos, !dbg !19
  %arg_cmp = icmp ne i32 %arg.total, 4, !dbg !19
  %cfstk52 = alloca %"struct.rubinius::Object"*, i32 22
  %var_mem55 = alloca %"struct.rubinius::Object"*, i32 11
  %cfstk2454 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem2457 = alloca %"struct.rubinius::Object"*, i32 7
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !19

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 4), !dbg !19
  br label %return_pad, !dbg !19

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !19
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !19
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !19
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !19
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !19
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !19
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !19
  store i8* null, i8** %3, !dbg !19
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !19
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !19
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !19
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !19
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !19
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !19
  store i32 40, i32* %5, !dbg !19
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !19
  store i32 0, i32* %6, !dbg !19
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !19
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !19
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !19
  store i8* inttoptr (i64 140495695135376 to i8*), i8** %8, !dbg !19
  store i32 0, i32* %counter_alloca, !dbg !19
  br label %stack_nil, !dbg !19

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !19
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !19
  %added = add i32 %counter, 1, !dbg !19
  store i32 %added, i32* %counter_alloca, !dbg !19
  %loop_check = icmp eq i32 %added, 16, !dbg !19
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !19

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !19
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !19
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !19
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !19, !rbx-classid !20
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !19
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !19
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !19
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !19
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !19
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !19
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !19
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !19
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !19
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !19
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !19
  store i32 0, i32* %counter_alloca, !dbg !19
  br label %locactx_nil, !dbg !19

locactx_nil:                                      ; preds = %locactx_nil, %bottom
  %counter3 = load i32* %counter_alloca, !dbg !19
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %counter3, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !19
  %added4 = add i32 %counter3, 1, !dbg !19
  store i32 %added4, i32* %counter_alloca, !dbg !19
  %loop_check5 = icmp eq i32 %added4, 12, !dbg !19
  br i1 %loop_check5, label %bottom1, label %locactx_nil, !dbg !19

bottom1:                                          ; preds = %locactx_nil
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !19
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !19
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !19
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !19
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !19
  %arg_val_offset6 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 1, !dbg !19
  %arg_val7 = load %"struct.rubinius::Object"** %arg_val_offset6, !dbg !19
  %var_pos8 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !19
  store %"struct.rubinius::Object"* %arg_val7, %"struct.rubinius::Object"** %var_pos8, !dbg !19
  %arg_val_offset9 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 2, !dbg !19
  %arg_val10 = load %"struct.rubinius::Object"** %arg_val_offset9, !dbg !19
  %var_pos11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !19
  store %"struct.rubinius::Object"* %arg_val10, %"struct.rubinius::Object"** %var_pos11, !dbg !19
  %arg_val_offset12 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 3, !dbg !19
  %arg_val13 = load %"struct.rubinius::Object"** %arg_val_offset12, !dbg !19
  %var_pos14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !19
  store %"struct.rubinius::Object"* %arg_val13, %"struct.rubinius::Object"** %var_pos14, !dbg !19
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !21
  %vm_jit5106 = load %"struct.rubinius::VMJIT"** %17, !dbg !21
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit5106, i32 0, i32 1, !dbg !21
  %stack_limit = load i64* %18, !dbg !21
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !21
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !21
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit5106, i32 0, i32 5, !dbg !21
  %check_interrupts5107 = load i8* %20, !dbg !21
  %check_global_interrupts5108 = load i8* inttoptr (i64 22553886 to i8*), !dbg !21
  %has_interrupts = or i8 %check_interrupts5107, %check_global_interrupts5108, !dbg !21
  %needs_interrupts5109 = icmp ne i8 %has_interrupts, 0, !dbg !21
  %needs_check = or i1 %needs_interrupts5109, %19, !dbg !21
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !21

bail_out:                                         ; preds = %visit_push_ivar_fallback5069, %class_fallback5005, %class_fallback4944, %visit_push_ivar_fallback4861, %class_fallback4797, %class_fallback4736, %visit_push_ivar_fallback4653, %class_fallback4589, %class_fallback4528, %interrupts, %class_fallback4430, %class_fallback4311, %class_fallback4250, %class_fallback4110, %class_fallback4049, %class_fallback3909, %class_fallback3848, %visit_push_ivar_fallback3789, %class_fallback3725, %class_fallback3664, %visit_push_ivar_fallback3601, %class_fallback3537, %class_fallback3476, %visit_push_ivar_fallback3424, %class_fallback3360, %class_fallback3299, %class_fallback3183, %class_fallback3103, %class_fallback3014, %class_fallback2953, %class_fallback2889, %return_pad2445, %class_fallback2365, %class_fallback2304, %class_fallback2238, %class_fallback2177, %class_fallback2111, %use_call2092, %class_fallback2019, %class_fallback1916, %class_fallback1822, %return_pad45, %class_fallback
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !19

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !19
  br label %return_pad, !dbg !19

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !19

method_body:                                      ; preds = %prologue_check, %bottom1, %done4472
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !19
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !19
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !19
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !19
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !19
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !19
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !19
  %local_pos15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !22
  %local = load %"struct.rubinius::Object"** %local_pos15, !dbg !22, !rbx-classid !23
  %stack_pos16 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos16, !dbg !22
  %local_pos17 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !22
  %local18 = load %"struct.rubinius::Object"** %local_pos17, !dbg !22, !rbx-classid !24
  %stack_pos19 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !22
  store %"struct.rubinius::Object"* %local18, %"struct.rubinius::Object"** %stack_pos19, !dbg !22
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  %stack_load = load %"struct.rubinius::Object"** %stack_pos20, !dbg !22, !rbx-classid !23
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !22
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !22
  %stack_load22 = load %"struct.rubinius::Object"** %stack_pos21, !dbg !22, !rbx-classid !24
  %cast23 = ptrtoint %"struct.rubinius::Object"* %stack_load22 to i64, !dbg !22
  %fixnums_anded = and i64 %cast, %cast23
  %masked = and i64 %fixnums_anded, 1
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !22
  br i1 %is_fixnum, label %push_le, label %class_fallback, !dbg !22

class_fallback:                                   ; preds = %method_body
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !22, !rbx-classid !23
  store %"struct.rubinius::Object"* %stack_load25, %"struct.rubinius::Object"** %out_args_recv, !dbg !22
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !22
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !22
  store i32 1, i32* %out_args_total, !dbg !22
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !22
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !22
  store %"struct.rubinius::Object"** %stack_pos26, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !22
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 26548440 to %"struct.rubinius::CallSite"**), !dbg !22
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !22
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !22
  store i32 4, i32* %ip_pos, !dbg !22
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !22
  %null_check = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !22
  br i1 %null_check, label %bail_out, label %check_active, !dbg !22

serial_fallback:                                  ; No predecessors!
  store i32 4, i32* %ip_pos, !dbg !22
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !22
  br label %return_pad, !dbg !22

continue:                                         ; preds = %check_active, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %22, %push_le ], [ %call_site_execute, %check_active ], !dbg !22
  %stack_pos27 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos27, !dbg !22
  %stack_pos28 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  %stack_load29 = load %"struct.rubinius::Object"** %stack_pos28, !dbg !22
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load29 to i64, !dbg !22
  %and = and i64 %as_int, 15, !dbg !22
  %is_true = icmp eq i64 %and, 10, !dbg !22
  br i1 %is_true, label %ip274, label %continue30, !dbg !22

push_le:                                          ; preds = %method_body
  %fixnum.lt = icmp slt i64 %cast, %cast23, !dbg !22
  %22 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !22
  br label %continue, !dbg !22

check_active:                                     ; preds = %class_fallback
  br label %continue, !dbg !22

continue30:                                       ; preds = %continue
  br label %ip9, !dbg !22

ip9:                                              ; preds = %continue30
  %local_pos31 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !25
  %local32 = load %"struct.rubinius::Object"** %local_pos31, !dbg !25, !rbx-classid !26
  %stack_pos33 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !25
  store %"struct.rubinius::Object"* %local32, %"struct.rubinius::Object"** %stack_pos33, !dbg !25
  %local_pos34 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !25
  %local35 = load %"struct.rubinius::Object"** %local_pos34, !dbg !25, !rbx-classid !23
  %stack_pos36 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !25
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos36, !dbg !25
  %stack_pos40 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !25
  %stack_load41 = load %"struct.rubinius::Object"** %stack_pos40, !dbg !25, !rbx-classid !26
  %cast42 = ptrtoint %"struct.rubinius::Object"* %stack_load41 to i64, !dbg !25
  %masked43 = and i64 %cast42, 3, !dbg !25
  %is_reference = icmp eq i64 %masked43, 0, !dbg !25
  br i1 %is_reference, label %check_class_id, label %class_fallback37, !dbg !25

continue39:                                       ; preds = %continue1766
  %local_pos1770 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !25
  %stack_pos1771 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !25
  %stack_load1772 = load %"struct.rubinius::Object"** %stack_pos1771, !dbg !25
  store %"struct.rubinius::Object"* %stack_load1772, %"struct.rubinius::Object"** %local_pos1770, !dbg !25
  %stack_pos1774 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1774, !dbg !27
  %23 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !27
  %self1775 = load %"struct.rubinius::Object"** %23, !dbg !27
  %cast1776 = ptrtoint %"struct.rubinius::Object"* %self1775 to i64, !dbg !27
  %masked1777 = and i64 %cast1776, 3, !dbg !27
  %is_reference1778 = icmp eq i64 %masked1777, 0, !dbg !27
  br i1 %is_reference1778, label %check_class_id1779, label %visit_push_ivar_fallback, !dbg !27

check_class_id:                                   ; preds = %ip9
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load41, i32 0, i32 0, i32 1, !dbg !25
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !25
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !25
  %class_id = load i32* %class_id_pos, !dbg !25
  %check_class_id44 = icmp eq i32 %class_id, 6, !dbg !25
  br i1 %check_class_id44, label %correct_class, label %class_fallback37, !dbg !25

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !25
  %serial_id = load i32* %serial_id_pos, !dbg !25
  %check_serial_id = icmp eq i32 %serial_id, 249, !dbg !25
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback38, !dbg !25

class_fallback37:                                 ; preds = %check_class_id, %ip9
  store i32 13, i32* %ip_pos, !dbg !25
  %24 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !25
  br label %return_pad, !dbg !25

correct_serial:                                   ; preds = %correct_class
  %stack_pos47 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !25
  %stack_load48 = load %"struct.rubinius::Object"** %stack_pos47, !dbg !25, !rbx-classid !23
  %stack_pos49 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !25
  %stack_load50 = load %"struct.rubinius::Object"** %stack_pos49, !dbg !25, !rbx-classid !26
  br label %inline_entry, !dbg !25

serial_fallback38:                                ; preds = %correct_class
  store i32 13, i32* %ip_pos, !dbg !25
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !25
  br label %return_pad, !dbg !25

inline_entry:                                     ; preds = %correct_serial
  %call_frame53 = bitcast %"struct.rubinius::Object"** %cfstk52 to %"struct.rubinius::CallFrame"*, !dbg !28
  %stack54 = getelementptr %"struct.rubinius::Object"** %cfstk52, i32 9, !dbg !28
  %vars56 = bitcast %"struct.rubinius::Object"** %var_mem55 to %"struct.rubinius::StackVariables"*, !dbg !28
  %26 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 0, !dbg !28
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %26, !dbg !28
  %27 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 2, !dbg !28
  store i8* inttoptr (i64 140495695189184 to i8*), i8** %27, !dbg !28
  %compiled_code57 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695189184 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !28
  %28 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 3, !dbg !28
  store %"struct.rubinius::CompiledCode"* %compiled_code57, %"struct.rubinius::CompiledCode"** %28, !dbg !28
  %constant_scope_pos58 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code57, i32 0, i32 13, !dbg !28
  %constant_scope59 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos58, !dbg !28
  %29 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !28
  store %"struct.rubinius::ConstantScope"* %constant_scope59, %"struct.rubinius::ConstantScope"** %29, !dbg !28
  %30 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 4, !dbg !28
  store i32 12, i32* %30, !dbg !28
  %31 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 5, !dbg !28
  store i32 0, i32* %31, !dbg !28
  %32 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 8, !dbg !28
  store %"struct.rubinius::StackVariables"* %vars56, %"struct.rubinius::StackVariables"** %32, !dbg !28
  store i32 0, i32* %counter_alloca, !dbg !28
  br label %stack_nil60, !dbg !28

stack_nil60:                                      ; preds = %stack_nil60, %inline_entry
  %counter62 = load i32* %counter_alloca, !dbg !28
  %stack_pos63 = getelementptr %"struct.rubinius::Object"** %stack54, i32 %counter62, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos63, !dbg !28
  %added64 = add i32 %counter62, 1, !dbg !28
  store i32 %added64, i32* %counter_alloca, !dbg !28
  %loop_check65 = icmp eq i32 %added64, 13, !dbg !28
  br i1 %loop_check65, label %bottom61, label %stack_nil60, !dbg !28

bottom61:                                         ; preds = %stack_nil60
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695189184 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !28
  %33 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 0, !dbg !28
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %33, !dbg !28
  %34 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !28
  store %"struct.rubinius::Object"* %stack_load50, %"struct.rubinius::Object"** %34, !dbg !28
  %35 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 4, !dbg !28
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %35, !dbg !28
  %36 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 3, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %36, !dbg !28
  %37 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 1, !dbg !28
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %37, !dbg !28
  %38 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 5, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %38, !dbg !28
  %local_pos66 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos66, !dbg !28
  %local_pos67 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos67, !dbg !28
  %local_pos68 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos68, !dbg !28
  %local_pos69 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos69, !dbg !28
  %local_pos70 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos70, !dbg !28
  %local_pos71 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !28
  store %"struct.rubinius::Object"* %stack_load48, %"struct.rubinius::Object"** %local_pos71, !dbg !28
  br label %method_body51, !dbg !28

bail_out72:                                       ; preds = %ip451, %continue1711, %use_call1710, %use_call1685, %is_exception1626, %ip386, %continue1564, %use_call1563, %use_call1471, %ip345, %ip334, %continue1375, %use_call1374, %use_call1298, %continue1260, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %continue1116, %continue1096, %use_call1095, %ip219, %ip205, %ip195, %ip183, %continue965, %continue945, %use_call944, %ip158, %continue885, %use_call884, %ip139, %continue821, %use_call820, %use_call796, %is_exception, %class_fallback670, %class_fallback632, %continue643, %class_fallback591, %ip538, %class_fallback526, %class_fallback482, %class_fallback441, %ip492, %ip483, %class_fallback359, %class_fallback315, %continue282, %use_call281, %use_call231, %class_fallback177, %class_fallback142, %use_call
  %rth73 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53), !dbg !28
  br i1 %rth73, label %ret_raise_val74, label %ret_null75, !dbg !28

ret_raise_val74:                                  ; preds = %bail_out72
  %crv76 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !28
  br label %return_pad45, !dbg !28

ret_null75:                                       ; preds = %bail_out72
  br label %return_pad45, !dbg !28

method_body51:                                    ; preds = %bottom61
  %ip_pos77 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 5, !dbg !28
  %out_args_name78 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !28
  %out_args_recv79 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !28
  %out_args_block80 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !28
  %out_args_total81 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !28
  %out_args_arguments82 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !28
  %out_args_container83 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !28
  %stack_pos84 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos84, !dbg !28
  %stack_pos85 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !28
  %stack_load86 = load %"struct.rubinius::Object"** %stack_pos85, !dbg !28
  %as_int87 = ptrtoint %"struct.rubinius::Object"* %stack_load86 to i64, !dbg !28
  %and88 = and i64 %as_int87, 15, !dbg !28
  %is_true89 = icmp ne i64 %and88, 10, !dbg !28
  br i1 %is_true89, label %ip8, label %continue90, !dbg !28

continue90:                                       ; preds = %method_body51
  br label %ip4, !dbg !28

ip4:                                              ; preds = %continue90
  %stack_pos91 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos91, !dbg !28
  %local_pos92 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !28
  %stack_pos93 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !28
  %stack_load94 = load %"struct.rubinius::Object"** %stack_pos93, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %stack_load94, %"struct.rubinius::Object"** %local_pos92, !dbg !28
  br label %ip8, !dbg !28

ip8:                                              ; preds = %ip4, %method_body51
  %local_pos95 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !30
  %local96 = load %"struct.rubinius::Object"** %local_pos95, !dbg !30, !rbx-classid !26
  %stack_pos97 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local96, %"struct.rubinius::Object"** %stack_pos97, !dbg !30
  %stack_pos98 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !31
  %stack_load99 = load %"struct.rubinius::Object"** %stack_pos98, !dbg !31, !rbx-classid !26
  %stack_pos100 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !31
  store %"struct.rubinius::Object"* %stack_load99, %"struct.rubinius::Object"** %stack_pos100, !dbg !31
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), !dbg !31
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**), !dbg !31
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !31
  %constant_scope101 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !31
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !31
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !31
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope101, %frame_scope, !dbg !31
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !31

check_serial:                                     ; preds = %ip8
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !31
  %serial = load i32* %serial_pos, !dbg !31
  %use_cache103 = icmp eq i32 %global_serial, %serial, !dbg !31
  br i1 %use_cache103, label %use_cache, label %use_call, !dbg !31

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !31
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !31
  br label %continue102, !dbg !31

use_call:                                         ; preds = %check_serial, %ip8
  store i32 11, i32* %ip_pos77, !dbg !31
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !31
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !31
  br i1 %null_check106, label %bail_out72, label %check_active105, !dbg !31

continue102:                                      ; preds = %continue104, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue104 ], !dbg !31, !rbx-classid !32
  %stack_pos107 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !31
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos107, !dbg !31
  %stack_pos108 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !31
  %stack_load109 = load %"struct.rubinius::Object"** %stack_pos108, !dbg !31, !rbx-classid !32
  %stack_pos110 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !31
  %stack_load111 = load %"struct.rubinius::Object"** %stack_pos110, !dbg !31, !rbx-classid !26
  %stack_pos112 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !31
  store %"struct.rubinius::Object"* %stack_load109, %"struct.rubinius::Object"** %stack_pos112, !dbg !31
  %stack_pos113 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !31
  store %"struct.rubinius::Object"* %stack_load111, %"struct.rubinius::Object"** %stack_pos113, !dbg !31
  %stack_pos117 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !31
  %stack_load118 = load %"struct.rubinius::Object"** %stack_pos117, !dbg !31, !rbx-classid !26
  %stack_pos119 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !31
  %stack_load120 = load %"struct.rubinius::Object"** %stack_pos119, !dbg !31, !rbx-classid !26
  %cast121 = ptrtoint %"struct.rubinius::Object"* %stack_load120 to i64, !dbg !31
  %masked122 = and i64 %cast121, 1, !dbg !31
  %is_fixnum123 = icmp eq i64 %masked122, 1, !dbg !31
  %is_fixnum124 = select i1 %is_fixnum123, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !31
  %stack_pos125 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !31
  store %"struct.rubinius::Object"* %is_fixnum124, %"struct.rubinius::Object"** %stack_pos125, !dbg !31
  br label %continue116, !dbg !31

continue104:                                      ; preds = %check_active105
  br label %continue102, !dbg !31

check_active105:                                  ; preds = %use_call
  br label %continue104, !dbg !31

class_fallback114:                                ; No predecessors!
  store i32 14, i32* %ip_pos77, !dbg !31
  %39 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !31
  br label %return_pad45, !dbg !31

serial_fallback115:                               ; No predecessors!
  store i32 14, i32* %ip_pos77, !dbg !31
  %40 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad45, !dbg !31

continue116:                                      ; preds = %continue102
  %stack_pos126 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !31
  %stack_load127 = load %"struct.rubinius::Object"** %stack_pos126, !dbg !31
  %as_int128 = ptrtoint %"struct.rubinius::Object"* %stack_load127 to i64, !dbg !31
  %and129 = and i64 %as_int128, 15, !dbg !31
  %is_true130 = icmp eq i64 %and129, 10, !dbg !31
  br i1 %is_true130, label %ip149, label %continue131, !dbg !31

continue131:                                      ; preds = %continue116
  br label %ip19, !dbg !31

ip19:                                             ; preds = %continue131
  %local_pos132 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !33
  %local133 = load %"struct.rubinius::Object"** %local_pos132, !dbg !33, !rbx-classid !26
  %stack_pos134 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %local133, %"struct.rubinius::Object"** %stack_pos134, !dbg !33
  %local_pos135 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !33
  %stack_pos136 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !33
  %stack_load137 = load %"struct.rubinius::Object"** %stack_pos136, !dbg !33, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load137, %"struct.rubinius::Object"** %local_pos135, !dbg !33
  %local_pos138 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !34
  %local139 = load %"struct.rubinius::Object"** %local_pos138, !dbg !34, !rbx-classid !35
  %stack_pos140 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %local139, %"struct.rubinius::Object"** %stack_pos140, !dbg !34
  %stack_pos141 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos141, !dbg !34
  %stack_pos145 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load146 = load %"struct.rubinius::Object"** %stack_pos145, !dbg !34, !rbx-classid !35
  %cast147 = ptrtoint %"struct.rubinius::Object"* %stack_load146 to i64, !dbg !34
  %stack_pos148 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  %stack_load149 = load %"struct.rubinius::Object"** %stack_pos148, !dbg !34, !rbx-classid !36
  %cast150 = ptrtoint %"struct.rubinius::Object"* %stack_load149 to i64, !dbg !34
  %fixnums_anded151 = and i64 %cast147, %cast150
  %masked152 = and i64 %fixnums_anded151, 1
  %is_fixnum153 = icmp eq i64 %masked152, 1, !dbg !34
  br i1 %is_fixnum153, label %push_le154, label %class_fallback142, !dbg !34

class_fallback142:                                ; preds = %ip19
  %stack_pos156 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load157 = load %"struct.rubinius::Object"** %stack_pos156, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load157, %"struct.rubinius::Object"** %out_args_recv79, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !34
  store i32 1, i32* %out_args_total81, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !34
  %stack_pos158 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos158, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !34
  %cache_const159 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564280 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos160 = getelementptr %"struct.rubinius::CallSite"* %cache_const159, i32 0, i32 2, !dbg !34
  %execute161 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos160, !dbg !34
  store i32 28, i32* %ip_pos77, !dbg !34
  %call_site_execute162 = call %"struct.rubinius::Object"* %execute161(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const159, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check164 = icmp eq %"struct.rubinius::Object"* %call_site_execute162, null, !dbg !34
  br i1 %null_check164, label %bail_out72, label %check_active163, !dbg !34

serial_fallback143:                               ; No predecessors!
  store i32 28, i32* %ip_pos77, !dbg !34
  %41 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 28, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad45, !dbg !34

continue144:                                      ; preds = %check_active163, %push_le154
  %send_result165 = phi %"struct.rubinius::Object"* [ %42, %push_le154 ], [ %call_site_execute162, %check_active163 ], !dbg !34
  %stack_pos166 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %send_result165, %"struct.rubinius::Object"** %stack_pos166, !dbg !34
  %stack_pos167 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load168 = load %"struct.rubinius::Object"** %stack_pos167, !dbg !34
  %as_int169 = ptrtoint %"struct.rubinius::Object"* %stack_load168 to i64, !dbg !34
  %and170 = and i64 %as_int169, 15, !dbg !34
  %is_true171 = icmp eq i64 %and170, 10, !dbg !34
  br i1 %is_true171, label %ip44, label %continue172, !dbg !34

push_le154:                                       ; preds = %ip19
  %fixnum.lt155 = icmp slt i64 %cast147, %cast150, !dbg !34
  %42 = select i1 %fixnum.lt155, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !34
  br label %continue144, !dbg !34

check_active163:                                  ; preds = %class_fallback142
  br label %continue144, !dbg !34

continue172:                                      ; preds = %continue144
  br label %ip33, !dbg !34

ip33:                                             ; preds = %continue172
  %local_pos173 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !34
  %local174 = load %"struct.rubinius::Object"** %local_pos173, !dbg !34, !rbx-classid !35
  %stack_pos175 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %local174, %"struct.rubinius::Object"** %stack_pos175, !dbg !34
  %self_pos = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !34
  %self = load %"struct.rubinius::Object"** %self_pos, !dbg !34
  %obj_array = bitcast %"struct.rubinius::Object"* %self to %"struct.rubinius::Object"**, !dbg !34
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !34
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !34
  %stack_pos176 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos176, !dbg !34
  %stack_pos180 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load181 = load %"struct.rubinius::Object"** %stack_pos180, !dbg !34, !rbx-classid !35
  %stack_pos182 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  %stack_load183 = load %"struct.rubinius::Object"** %stack_pos182, !dbg !34
  %cast184 = ptrtoint %"struct.rubinius::Object"* %stack_load181 to i64, !dbg !34
  %cast185 = ptrtoint %"struct.rubinius::Object"* %stack_load183 to i64, !dbg !34
  %fixnums_anded186 = and i64 %cast184, %cast185, !dbg !34
  %masked187 = and i64 %fixnums_anded186, 1, !dbg !34
  %is_fixnum188 = icmp eq i64 %masked187, 1, !dbg !34
  br i1 %is_fixnum188, label %push_add, label %class_fallback177, !dbg !34

class_fallback177:                                ; preds = %ip33
  %stack_pos192 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load193 = load %"struct.rubinius::Object"** %stack_pos192, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load193, %"struct.rubinius::Object"** %out_args_recv79, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !34
  store i32 1, i32* %out_args_total81, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !34
  %stack_pos194 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos194, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !34
  %cache_const195 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564352 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos196 = getelementptr %"struct.rubinius::CallSite"* %cache_const195, i32 0, i32 2, !dbg !34
  %execute197 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos196, !dbg !34
  store i32 37, i32* %ip_pos77, !dbg !34
  %call_site_execute198 = call %"struct.rubinius::Object"* %execute197(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const195, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check200 = icmp eq %"struct.rubinius::Object"* %call_site_execute198, null, !dbg !34
  br i1 %null_check200, label %bail_out72, label %check_active199, !dbg !34

serial_fallback178:                               ; No predecessors!
  store i32 37, i32* %ip_pos77, !dbg !34
  %43 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 37, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad45, !dbg !34

continue179:                                      ; preds = %check_active199, %cont
  %send_result201 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute198, %check_active199 ], !dbg !34
  %stack_pos202 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %send_result201, %"struct.rubinius::Object"** %stack_pos202, !dbg !34
  %local_pos203 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !34
  %stack_pos204 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  %stack_load205 = load %"struct.rubinius::Object"** %stack_pos204, !dbg !34
  store %"struct.rubinius::Object"* %stack_load205, %"struct.rubinius::Object"** %local_pos203, !dbg !34
  br label %ip45, !dbg !34

push_add:                                         ; preds = %ip33
  %as_int189 = ptrtoint %"struct.rubinius::Object"* %stack_load181 to i64, !dbg !34
  %ashr = ashr i64 %as_int189, 1, !dbg !34
  %as_int190 = ptrtoint %"struct.rubinius::Object"* %stack_load183 to i64, !dbg !34
  %ashr191 = ashr i64 %as_int190, 1, !dbg !34
  %fixnum.add = add i64 %ashr, %ashr191, !dbg !34
  %44 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !34
  %45 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !34
  %fits_fixnum = and i1 %44, %45, !dbg !34
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !34

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !34
  %or = or i64 %shl, 1, !dbg !34
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !34
  br label %cont, !dbg !34

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !34
  br label %cont, !dbg !34

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !34
  br label %continue179, !dbg !34

check_active199:                                  ; preds = %class_fallback177
  br label %continue179, !dbg !34

continue206:                                      ; No predecessors!
  br label %ip44, !dbg !34

ip45:                                             ; preds = %ip44, %continue179
  %local_pos207 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !37
  %local208 = load %"struct.rubinius::Object"** %local_pos207, !dbg !37, !rbx-classid !24
  %stack_pos209 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !37
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack_pos209, !dbg !37
  %stack_pos210 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !37
  %stack_load211 = load %"struct.rubinius::Object"** %stack_pos210, !dbg !37, !rbx-classid !24
  %as_int212 = ptrtoint %"struct.rubinius::Object"* %stack_load211 to i64, !dbg !37
  %and213 = and i64 %as_int212, 15, !dbg !37
  %is_true214 = icmp eq i64 %and213, 10, !dbg !37
  br i1 %is_true214, label %ip74, label %continue215, !dbg !37

continue215:                                      ; preds = %ip45
  br label %ip50, !dbg !37

ip50:                                             ; preds = %continue215
  %local_pos216 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !38
  %local217 = load %"struct.rubinius::Object"** %local_pos216, !dbg !38, !rbx-classid !24
  %stack_pos218 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %local217, %"struct.rubinius::Object"** %stack_pos218, !dbg !38
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  %stack_load220 = load %"struct.rubinius::Object"** %stack_pos219, !dbg !38, !rbx-classid !24
  %stack_pos221 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %stack_load220, %"struct.rubinius::Object"** %stack_pos221, !dbg !38
  %global_serial222 = load i32* inttoptr (i64 22553876 to i32*), !dbg !38
  %constant_cache223 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**), !dbg !38
  %constant_cache_pos224 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache223, i32 0, i32 4, !dbg !38
  %constant_scope225 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos224, !dbg !38
  %scope_pos226 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !38
  %frame_scope227 = load %"struct.rubinius::ConstantScope"** %scope_pos226, !dbg !38
  %same_scope228 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope225, %frame_scope227, !dbg !38
  br i1 %same_scope228, label %check_serial229, label %use_call231, !dbg !38

check_serial229:                                  ; preds = %ip50
  %serial_pos233 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache223, i32 0, i32 7, !dbg !38
  %serial234 = load i32* %serial_pos233, !dbg !38
  %use_cache235 = icmp eq i32 %global_serial222, %serial234, !dbg !38
  br i1 %use_cache235, label %use_cache230, label %use_call231, !dbg !38

use_cache230:                                     ; preds = %check_serial229
  %value_pos236 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache223, i32 0, i32 2, !dbg !38
  %cached_value237 = load %"struct.rubinius::Object"** %value_pos236, !dbg !38
  br label %continue232, !dbg !38

use_call231:                                      ; preds = %check_serial229, %ip50
  store i32 53, i32* %ip_pos77, !dbg !38
  %push_const_fast238 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !38
  %null_check241 = icmp eq %"struct.rubinius::Object"* %push_const_fast238, null, !dbg !38
  br i1 %null_check241, label %bail_out72, label %check_active240, !dbg !38

continue232:                                      ; preds = %continue239, %use_cache230
  %constant242 = phi %"struct.rubinius::Object"* [ %cached_value237, %use_cache230 ], [ %push_const_fast238, %continue239 ], !dbg !38, !rbx-classid !39
  %stack_pos243 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %constant242, %"struct.rubinius::Object"** %stack_pos243, !dbg !38
  %stack_pos244 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !38
  %stack_load245 = load %"struct.rubinius::Object"** %stack_pos244, !dbg !38, !rbx-classid !39
  %stack_pos246 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  %stack_load247 = load %"struct.rubinius::Object"** %stack_pos246, !dbg !38, !rbx-classid !24
  %stack_pos248 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %stack_load245, %"struct.rubinius::Object"** %stack_pos248, !dbg !38
  %stack_pos249 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %stack_load247, %"struct.rubinius::Object"** %stack_pos249, !dbg !38
  %stack_pos250 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !38
  %stack_load251 = load %"struct.rubinius::Object"** %stack_pos250, !dbg !38, !rbx-classid !24
  %stack_pos252 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  %stack_load253 = load %"struct.rubinius::Object"** %stack_pos252, !dbg !38, !rbx-classid !39
  %cast257 = ptrtoint %"struct.rubinius::Object"* %stack_load251 to i64, !dbg !38
  %masked258 = and i64 %cast257, 1, !dbg !38
  %is_fixnum259 = icmp eq i64 %masked258, 1, !dbg !38
  br i1 %is_fixnum259, label %positive, label %negative, !dbg !38

continue239:                                      ; preds = %check_active240
  br label %continue232, !dbg !38

check_active240:                                  ; preds = %use_call231
  br label %continue239, !dbg !38

continue254:                                      ; preds = %use_call255, %negative, %positive
  %constant260 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call255 ], !dbg !38
  %stack_pos261 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %constant260, %"struct.rubinius::Object"** %stack_pos261, !dbg !38
  %stack_pos262 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  %stack_load263 = load %"struct.rubinius::Object"** %stack_pos262, !dbg !38
  %as_int264 = ptrtoint %"struct.rubinius::Object"* %stack_load263 to i64, !dbg !38
  %and265 = and i64 %as_int264, 15, !dbg !38
  %is_true266 = icmp ne i64 %and265, 10, !dbg !38
  br i1 %is_true266, label %ip70, label %continue267, !dbg !38

use_call255:                                      ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load251, %"struct.rubinius::Object"* %stack_load253) #0, !dbg !38
  br label %continue254, !dbg !38

positive:                                         ; preds = %continue232
  br label %continue254, !dbg !38

negative:                                         ; preds = %continue232
  br label %continue254, !dbg !38

use_cache256:                                     ; No predecessors!

continue267:                                      ; preds = %continue254
  br label %ip59, !dbg !38

ip59:                                             ; preds = %continue267
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !38
  %stack_pos268 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos268, !dbg !38
  %local_pos269 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !38
  %local270 = load %"struct.rubinius::Object"** %local_pos269, !dbg !38, !rbx-classid !24
  %stack_pos271 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %local270, %"struct.rubinius::Object"** %stack_pos271, !dbg !38
  %global_serial272 = load i32* inttoptr (i64 22553876 to i32*), !dbg !38
  %constant_cache273 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**), !dbg !38
  %constant_cache_pos274 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i32 0, i32 4, !dbg !38
  %constant_scope275 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos274, !dbg !38
  %scope_pos276 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !38
  %frame_scope277 = load %"struct.rubinius::ConstantScope"** %scope_pos276, !dbg !38
  %same_scope278 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope275, %frame_scope277, !dbg !38
  br i1 %same_scope278, label %check_serial279, label %use_call281, !dbg !38

check_serial279:                                  ; preds = %ip59
  %serial_pos283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i32 0, i32 7, !dbg !38
  %serial284 = load i32* %serial_pos283, !dbg !38
  %use_cache285 = icmp eq i32 %global_serial272, %serial284, !dbg !38
  br i1 %use_cache285, label %use_cache280, label %use_call281, !dbg !38

use_cache280:                                     ; preds = %check_serial279
  %value_pos286 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i32 0, i32 2, !dbg !38
  %cached_value287 = load %"struct.rubinius::Object"** %value_pos286, !dbg !38
  br label %continue282, !dbg !38

use_call281:                                      ; preds = %check_serial279, %ip59
  store i32 63, i32* %ip_pos77, !dbg !38
  %push_const_fast288 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !38
  %null_check291 = icmp eq %"struct.rubinius::Object"* %push_const_fast288, null, !dbg !38
  br i1 %null_check291, label %bail_out72, label %check_active290, !dbg !38

continue282:                                      ; preds = %continue289, %use_cache280
  %constant292 = phi %"struct.rubinius::Object"* [ %cached_value287, %use_cache280 ], [ %push_const_fast288, %continue289 ], !dbg !38, !rbx-classid !40
  %stack_pos293 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %constant292, %"struct.rubinius::Object"** %stack_pos293, !dbg !38
  %stack_pos294 = getelementptr %"struct.rubinius::Object"** %stack54, i32 3, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos294, !dbg !38
  %stack_pos295 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  %stack_load296 = load %"struct.rubinius::Object"** %stack_pos295, !dbg !38
  store %"struct.rubinius::Object"* %stack_load296, %"struct.rubinius::Object"** %out_args_recv79, !dbg !38
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !38
  store i32 3, i32* %out_args_total81, !dbg !38
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !38
  %stack_pos297 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !38
  store %"struct.rubinius::Object"** %stack_pos297, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !38
  %cache_const298 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564592 to %"struct.rubinius::CallSite"**), !dbg !38
  %execute_pos299 = getelementptr %"struct.rubinius::CallSite"* %cache_const298, i32 0, i32 2, !dbg !38
  %execute300 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos299, !dbg !38
  store i32 67, i32* %ip_pos77, !dbg !38
  %call_site_execute301 = call %"struct.rubinius::Object"* %execute300(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const298, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !38
  %null_check304 = icmp eq %"struct.rubinius::Object"* %call_site_execute301, null, !dbg !38
  br i1 %null_check304, label %bail_out72, label %check_active303, !dbg !38

continue289:                                      ; preds = %check_active290
  br label %continue282, !dbg !38

check_active290:                                  ; preds = %use_call281
  br label %continue289, !dbg !38

continue302:                                      ; preds = %check_active303
  %stack_pos305 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %call_site_execute301, %"struct.rubinius::Object"** %stack_pos305, !dbg !38
  br label %ip70, !dbg !38

ip70:                                             ; preds = %continue302, %continue254
  %local_pos306 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !38
  %stack_pos307 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !38
  %stack_load308 = load %"struct.rubinius::Object"** %stack_pos307, !dbg !38
  store %"struct.rubinius::Object"* %stack_load308, %"struct.rubinius::Object"** %local_pos306, !dbg !38
  br label %ip147, !dbg !38

check_active303:                                  ; preds = %continue282
  br label %continue302, !dbg !38

continue309:                                      ; No predecessors!
  br label %ip74, !dbg !38

ip147:                                            ; preds = %ip70
  br label %ip459, !dbg !41

continue310:                                      ; No predecessors!
  br label %ip149, !dbg !41

ip459:                                            ; preds = %ip382, %continue1272, %ip147
  %local_pos311 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !42
  %local312 = load %"struct.rubinius::Object"** %local_pos311, !dbg !42, !rbx-classid !23
  %stack_pos313 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %local312, %"struct.rubinius::Object"** %stack_pos313, !dbg !42
  %stack_pos314 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos314, !dbg !42
  %stack_pos318 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  %stack_load319 = load %"struct.rubinius::Object"** %stack_pos318, !dbg !42, !rbx-classid !23
  %cast320 = ptrtoint %"struct.rubinius::Object"* %stack_load319 to i64, !dbg !42
  %stack_pos321 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !42
  %stack_load322 = load %"struct.rubinius::Object"** %stack_pos321, !dbg !42, !rbx-classid !36
  %cast323 = ptrtoint %"struct.rubinius::Object"* %stack_load322 to i64, !dbg !42
  %fixnums_anded324 = and i64 %cast320, %cast323
  %masked325 = and i64 %fixnums_anded324, 1
  %is_fixnum326 = icmp eq i64 %masked325, 1, !dbg !42
  br i1 %is_fixnum326, label %push_le327, label %class_fallback315, !dbg !42

class_fallback315:                                ; preds = %ip459
  %stack_pos329 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  %stack_load330 = load %"struct.rubinius::Object"** %stack_pos329, !dbg !42, !rbx-classid !23
  store %"struct.rubinius::Object"* %stack_load330, %"struct.rubinius::Object"** %out_args_recv79, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !42
  store i32 1, i32* %out_args_total81, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !42
  %stack_pos331 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos331, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !42
  %cache_const332 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567760 to %"struct.rubinius::CallSite"**), !dbg !42
  %execute_pos333 = getelementptr %"struct.rubinius::CallSite"* %cache_const332, i32 0, i32 2, !dbg !42
  %execute334 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos333, !dbg !42
  store i32 463, i32* %ip_pos77, !dbg !42
  %call_site_execute335 = call %"struct.rubinius::Object"* %execute334(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const332, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check337 = icmp eq %"struct.rubinius::Object"* %call_site_execute335, null, !dbg !42
  br i1 %null_check337, label %bail_out72, label %check_active336, !dbg !42

serial_fallback316:                               ; No predecessors!
  store i32 463, i32* %ip_pos77, !dbg !42
  %46 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 463, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !42
  br label %return_pad45, !dbg !42

continue317:                                      ; preds = %check_active336, %push_le327
  %send_result338 = phi %"struct.rubinius::Object"* [ %47, %push_le327 ], [ %call_site_execute335, %check_active336 ], !dbg !42
  %stack_pos339 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %send_result338, %"struct.rubinius::Object"** %stack_pos339, !dbg !42
  %stack_pos340 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  %stack_load341 = load %"struct.rubinius::Object"** %stack_pos340, !dbg !42
  %as_int342 = ptrtoint %"struct.rubinius::Object"* %stack_load341 to i64, !dbg !42
  %and343 = and i64 %as_int342, 15, !dbg !42
  %is_true344 = icmp eq i64 %and343, 10, !dbg !42
  br i1 %is_true344, label %ip472, label %continue345, !dbg !42

push_le327:                                       ; preds = %ip459
  %fixnum.lt328 = icmp slt i64 %cast320, %cast323, !dbg !42
  %47 = select i1 %fixnum.lt328, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !42
  br label %continue317, !dbg !42

check_active336:                                  ; preds = %class_fallback315
  br label %continue317, !dbg !42

continue345:                                      ; preds = %continue317
  br label %ip468, !dbg !42

ip468:                                            ; preds = %continue345
  %stack_pos346 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos346, !dbg !42
  %stack_pos347 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  %stack_load348 = load %"struct.rubinius::Object"** %stack_pos347, !dbg !42, !rbx-classid !29
  br label %return_pad45, !dbg !42

ip472:                                            ; preds = %continue317
  %stack_pos349 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos349, !dbg !42
  %local_pos350 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !43
  %local351 = load %"struct.rubinius::Object"** %local_pos350, !dbg !43, !rbx-classid !35
  %stack_pos352 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  store %"struct.rubinius::Object"* %local351, %"struct.rubinius::Object"** %stack_pos352, !dbg !43
  %self_pos353 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !43
  %self354 = load %"struct.rubinius::Object"** %self_pos353, !dbg !43
  %obj_array355 = bitcast %"struct.rubinius::Object"* %self354 to %"struct.rubinius::Object"**, !dbg !43
  %field_pos356 = getelementptr %"struct.rubinius::Object"** %obj_array355, i32 3, !dbg !43
  %field357 = load %"struct.rubinius::Object"** %field_pos356, !dbg !43
  %stack_pos358 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %field357, %"struct.rubinius::Object"** %stack_pos358, !dbg !43
  %stack_pos362 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  %stack_load363 = load %"struct.rubinius::Object"** %stack_pos362, !dbg !43, !rbx-classid !35
  %cast364 = ptrtoint %"struct.rubinius::Object"* %stack_load363 to i64, !dbg !43
  %stack_pos365 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !43
  %stack_load366 = load %"struct.rubinius::Object"** %stack_pos365, !dbg !43
  %cast367 = ptrtoint %"struct.rubinius::Object"* %stack_load366 to i64, !dbg !43
  %fixnums_anded368 = and i64 %cast364, %cast367
  %masked369 = and i64 %fixnums_anded368, 1
  %is_fixnum370 = icmp eq i64 %masked369, 1, !dbg !43
  br i1 %is_fixnum370, label %push_le371, label %class_fallback359, !dbg !43

class_fallback359:                                ; preds = %ip472
  %stack_pos372 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  %stack_load373 = load %"struct.rubinius::Object"** %stack_pos372, !dbg !43, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load373, %"struct.rubinius::Object"** %out_args_recv79, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !43
  store i32 1, i32* %out_args_total81, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !43
  %stack_pos374 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos374, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !43
  %cache_const375 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567880 to %"struct.rubinius::CallSite"**), !dbg !43
  %execute_pos376 = getelementptr %"struct.rubinius::CallSite"* %cache_const375, i32 0, i32 2, !dbg !43
  %execute377 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos376, !dbg !43
  store i32 478, i32* %ip_pos77, !dbg !43
  %call_site_execute378 = call %"struct.rubinius::Object"* %execute377(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const375, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check380 = icmp eq %"struct.rubinius::Object"* %call_site_execute378, null, !dbg !43
  br i1 %null_check380, label %bail_out72, label %check_active379, !dbg !43

serial_fallback360:                               ; No predecessors!
  store i32 478, i32* %ip_pos77, !dbg !43
  %48 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 478, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !43
  br label %return_pad45, !dbg !43

continue361:                                      ; preds = %check_active379, %push_le371
  %send_result381 = phi %"struct.rubinius::Object"* [ %49, %push_le371 ], [ %call_site_execute378, %check_active379 ], !dbg !43
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  store %"struct.rubinius::Object"* %send_result381, %"struct.rubinius::Object"** %stack_pos382, !dbg !43
  %stack_pos383 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  %stack_load384 = load %"struct.rubinius::Object"** %stack_pos383, !dbg !43
  %as_int385 = ptrtoint %"struct.rubinius::Object"* %stack_load384 to i64, !dbg !43
  %and386 = and i64 %as_int385, 15, !dbg !43
  %is_true387 = icmp eq i64 %and386, 10, !dbg !43
  br i1 %is_true387, label %ip508, label %continue388, !dbg !43

push_le371:                                       ; preds = %ip472
  %fixnum.ge = icmp sge i64 %cast364, %cast367, !dbg !43
  %49 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !43
  br label %continue361, !dbg !43

check_active379:                                  ; preds = %class_fallback359
  br label %continue361, !dbg !43

continue388:                                      ; preds = %continue361
  br label %ip483, !dbg !43

ip483:                                            ; preds = %continue388
  %local_pos389 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !44
  %local390 = load %"struct.rubinius::Object"** %local_pos389, !dbg !44, !rbx-classid !35
  %stack_pos391 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %local390, %"struct.rubinius::Object"** %stack_pos391, !dbg !44
  %self_pos392 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !44
  %self393 = load %"struct.rubinius::Object"** %self_pos392, !dbg !44
  %obj_array394 = bitcast %"struct.rubinius::Object"* %self393 to %"struct.rubinius::Object"**, !dbg !44
  %field_pos395 = getelementptr %"struct.rubinius::Object"** %obj_array394, i32 3, !dbg !44
  %field396 = load %"struct.rubinius::Object"** %field_pos395, !dbg !44
  %stack_pos397 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %field396, %"struct.rubinius::Object"** %stack_pos397, !dbg !44
  %stack_pos398 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  %stack_load399 = load %"struct.rubinius::Object"** %stack_pos398, !dbg !44, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load399, %"struct.rubinius::Object"** %out_args_recv79, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !44
  store i32 1, i32* %out_args_total81, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !44
  %stack_pos400 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos400, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !44
  %cache_const401 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567952 to %"struct.rubinius::CallSite"**), !dbg !44
  %execute_pos402 = getelementptr %"struct.rubinius::CallSite"* %cache_const401, i32 0, i32 2, !dbg !44
  %execute403 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos402, !dbg !44
  store i32 487, i32* %ip_pos77, !dbg !44
  %call_site_execute404 = call %"struct.rubinius::Object"* %execute403(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const401, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check407 = icmp eq %"struct.rubinius::Object"* %call_site_execute404, null, !dbg !44
  br i1 %null_check407, label %bail_out72, label %check_active406, !dbg !44

continue405:                                      ; preds = %check_active406
  %stack_pos408 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute404, %"struct.rubinius::Object"** %stack_pos408, !dbg !44
  %stack_pos409 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  %stack_load410 = load %"struct.rubinius::Object"** %stack_pos409, !dbg !44
  %as_int411 = ptrtoint %"struct.rubinius::Object"* %stack_load410 to i64, !dbg !44
  %and412 = and i64 %as_int411, 15, !dbg !44
  %is_true413 = icmp eq i64 %and412, 10, !dbg !44
  br i1 %is_true413, label %ip502, label %continue414, !dbg !44

check_active406:                                  ; preds = %ip483
  br label %continue405, !dbg !44

continue414:                                      ; preds = %continue405
  br label %ip492, !dbg !44

ip492:                                            ; preds = %continue414
  %50 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !44
  %self415 = load %"struct.rubinius::Object"** %50, !dbg !44, !rbx-classid !45
  %stack_pos416 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %self415, %"struct.rubinius::Object"** %stack_pos416, !dbg !44
  %stack_pos417 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos417, !dbg !44
  %stack_pos418 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos418, !dbg !44
  %stack_pos419 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  %stack_load420 = load %"struct.rubinius::Object"** %stack_pos419, !dbg !44, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load420, %"struct.rubinius::Object"** %out_args_recv79, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !44
  store i32 2, i32* %out_args_total81, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !44
  %stack_pos421 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos421, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !44
  %cache_const422 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568024 to %"struct.rubinius::CallSite"**), !dbg !44
  %execute_pos423 = getelementptr %"struct.rubinius::CallSite"* %cache_const422, i32 0, i32 2, !dbg !44
  %execute424 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos423, !dbg !44
  store i32 496, i32* %ip_pos77, !dbg !44
  %call_site_execute425 = call %"struct.rubinius::Object"* %execute424(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const422, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check428 = icmp eq %"struct.rubinius::Object"* %call_site_execute425, null, !dbg !44
  br i1 %null_check428, label %bail_out72, label %check_active427, !dbg !44

continue426:                                      ; preds = %check_active427
  %stack_pos429 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute425, %"struct.rubinius::Object"** %stack_pos429, !dbg !44
  %stack_pos430 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  %stack_load431 = load %"struct.rubinius::Object"** %stack_pos430, !dbg !44
  br label %return_pad45, !dbg !44

ip502:                                            ; preds = %continue405
  %stack_pos432 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos432, !dbg !44
  %stack_pos433 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos433, !dbg !46
  %stack_pos434 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !46
  %stack_load435 = load %"struct.rubinius::Object"** %stack_pos434, !dbg !46, !rbx-classid !29
  br label %return_pad45, !dbg !46

ip508:                                            ; preds = %continue361
  %stack_pos436 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos436, !dbg !43
  %local_pos437 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !47
  %local438 = load %"struct.rubinius::Object"** %local_pos437, !dbg !47, !rbx-classid !35
  %stack_pos439 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %local438, %"struct.rubinius::Object"** %stack_pos439, !dbg !47
  %stack_pos440 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos440, !dbg !47
  %stack_pos444 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  %stack_load445 = load %"struct.rubinius::Object"** %stack_pos444, !dbg !47, !rbx-classid !35
  %cast446 = ptrtoint %"struct.rubinius::Object"* %stack_load445 to i64, !dbg !47
  %stack_pos447 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !47
  %stack_load448 = load %"struct.rubinius::Object"** %stack_pos447, !dbg !47, !rbx-classid !36
  %cast449 = ptrtoint %"struct.rubinius::Object"* %stack_load448 to i64, !dbg !47
  %fixnums_anded450 = and i64 %cast446, %cast449
  %masked451 = and i64 %fixnums_anded450, 1
  %is_fixnum452 = icmp eq i64 %masked451, 1, !dbg !47
  br i1 %is_fixnum452, label %push_le453, label %class_fallback441, !dbg !47

check_active427:                                  ; preds = %ip492
  br label %continue426, !dbg !44

class_fallback441:                                ; preds = %ip508
  %stack_pos455 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  %stack_load456 = load %"struct.rubinius::Object"** %stack_pos455, !dbg !47, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load456, %"struct.rubinius::Object"** %out_args_recv79, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !47
  store i32 1, i32* %out_args_total81, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !47
  %stack_pos457 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos457, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !47
  %cache_const458 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568160 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos459 = getelementptr %"struct.rubinius::CallSite"* %cache_const458, i32 0, i32 2, !dbg !47
  %execute460 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos459, !dbg !47
  store i32 513, i32* %ip_pos77, !dbg !47
  %call_site_execute461 = call %"struct.rubinius::Object"* %execute460(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const458, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check463 = icmp eq %"struct.rubinius::Object"* %call_site_execute461, null, !dbg !47
  br i1 %null_check463, label %bail_out72, label %check_active462, !dbg !47

serial_fallback442:                               ; No predecessors!
  store i32 513, i32* %ip_pos77, !dbg !47
  %51 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 513, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !47
  br label %return_pad45, !dbg !47

continue443:                                      ; preds = %check_active462, %push_le453
  %send_result464 = phi %"struct.rubinius::Object"* [ %52, %push_le453 ], [ %call_site_execute461, %check_active462 ], !dbg !47
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %send_result464, %"struct.rubinius::Object"** %stack_pos465, !dbg !47
  %stack_pos466 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  %stack_load467 = load %"struct.rubinius::Object"** %stack_pos466, !dbg !47
  %as_int468 = ptrtoint %"struct.rubinius::Object"* %stack_load467 to i64, !dbg !47
  %and469 = and i64 %as_int468, 15, !dbg !47
  %is_true470 = icmp eq i64 %and469, 10, !dbg !47
  br i1 %is_true470, label %ip522, label %continue471, !dbg !47

push_le453:                                       ; preds = %ip508
  %fixnum.lt454 = icmp slt i64 %cast446, %cast449, !dbg !47
  %52 = select i1 %fixnum.lt454, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !47
  br label %continue443, !dbg !47

check_active462:                                  ; preds = %class_fallback441
  br label %continue443, !dbg !47

continue471:                                      ; preds = %continue443
  br label %ip518, !dbg !47

ip518:                                            ; preds = %continue471
  %stack_pos472 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos472, !dbg !47
  %stack_pos473 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  %stack_load474 = load %"struct.rubinius::Object"** %stack_pos473, !dbg !47, !rbx-classid !29
  br label %return_pad45, !dbg !47

ip522:                                            ; preds = %continue443
  %stack_pos475 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos475, !dbg !47
  %local_pos476 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !48
  %local477 = load %"struct.rubinius::Object"** %local_pos476, !dbg !48, !rbx-classid !35
  %stack_pos478 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %local477, %"struct.rubinius::Object"** %stack_pos478, !dbg !48
  %local_pos479 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !48
  %local480 = load %"struct.rubinius::Object"** %local_pos479, !dbg !48, !rbx-classid !23
  %stack_pos481 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %local480, %"struct.rubinius::Object"** %stack_pos481, !dbg !48
  %stack_pos485 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  %stack_load486 = load %"struct.rubinius::Object"** %stack_pos485, !dbg !48, !rbx-classid !35
  %stack_pos487 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  %stack_load488 = load %"struct.rubinius::Object"** %stack_pos487, !dbg !48, !rbx-classid !23
  %cast493 = ptrtoint %"struct.rubinius::Object"* %stack_load486 to i64, !dbg !48
  %cast494 = ptrtoint %"struct.rubinius::Object"* %stack_load488 to i64, !dbg !48
  %fixnums_anded495 = and i64 %cast493, %cast494, !dbg !48
  %masked496 = and i64 %fixnums_anded495, 1, !dbg !48
  %is_fixnum497 = icmp eq i64 %masked496, 1, !dbg !48
  br i1 %is_fixnum497, label %push_add489, label %class_fallback482, !dbg !48

class_fallback482:                                ; preds = %ip522
  %stack_pos509 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  %stack_load510 = load %"struct.rubinius::Object"** %stack_pos509, !dbg !48, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load510, %"struct.rubinius::Object"** %out_args_recv79, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !48
  store i32 1, i32* %out_args_total81, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !48
  %stack_pos511 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos511, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !48
  %cache_const512 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568280 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos513 = getelementptr %"struct.rubinius::CallSite"* %cache_const512, i32 0, i32 2, !dbg !48
  %execute514 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos513, !dbg !48
  store i32 528, i32* %ip_pos77, !dbg !48
  %call_site_execute515 = call %"struct.rubinius::Object"* %execute514(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const512, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check517 = icmp eq %"struct.rubinius::Object"* %call_site_execute515, null, !dbg !48
  br i1 %null_check517, label %bail_out72, label %check_active516, !dbg !48

serial_fallback483:                               ; No predecessors!
  store i32 528, i32* %ip_pos77, !dbg !48
  %53 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 528, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !48
  br label %return_pad45, !dbg !48

continue484:                                      ; preds = %check_active516, %cont492
  %send_result518 = phi %"struct.rubinius::Object"* [ %result508, %cont492 ], [ %call_site_execute515, %check_active516 ], !dbg !48
  %stack_pos519 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %send_result518, %"struct.rubinius::Object"** %stack_pos519, !dbg !48
  %self_pos520 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !48
  %self521 = load %"struct.rubinius::Object"** %self_pos520, !dbg !48
  %obj_array522 = bitcast %"struct.rubinius::Object"* %self521 to %"struct.rubinius::Object"**, !dbg !48
  %field_pos523 = getelementptr %"struct.rubinius::Object"** %obj_array522, i32 3, !dbg !48
  %field524 = load %"struct.rubinius::Object"** %field_pos523, !dbg !48
  %stack_pos525 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %field524, %"struct.rubinius::Object"** %stack_pos525, !dbg !48
  %stack_pos529 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  %stack_load530 = load %"struct.rubinius::Object"** %stack_pos529, !dbg !48
  %cast531 = ptrtoint %"struct.rubinius::Object"* %stack_load530 to i64, !dbg !48
  %stack_pos532 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  %stack_load533 = load %"struct.rubinius::Object"** %stack_pos532, !dbg !48
  %cast534 = ptrtoint %"struct.rubinius::Object"* %stack_load533 to i64, !dbg !48
  %fixnums_anded535 = and i64 %cast531, %cast534
  %masked536 = and i64 %fixnums_anded535, 1
  %is_fixnum537 = icmp eq i64 %masked536, 1, !dbg !48
  br i1 %is_fixnum537, label %push_le538, label %class_fallback526, !dbg !48

push_add489:                                      ; preds = %ip522
  %as_int498 = ptrtoint %"struct.rubinius::Object"* %stack_load486 to i64, !dbg !48
  %ashr499 = ashr i64 %as_int498, 1, !dbg !48
  %as_int500 = ptrtoint %"struct.rubinius::Object"* %stack_load488 to i64, !dbg !48
  %ashr501 = ashr i64 %as_int500, 1, !dbg !48
  %fixnum.add502 = add i64 %ashr499, %ashr501, !dbg !48
  %54 = icmp sle i64 %fixnum.add502, 4611686018427387903, !dbg !48
  %55 = icmp sge i64 %fixnum.add502, -4611686018427387903, !dbg !48
  %fits_fixnum503 = and i1 %54, %55, !dbg !48
  br i1 %fits_fixnum503, label %tagnow490, label %bignum491, !dbg !48

tagnow490:                                        ; preds = %push_add489
  %shl505 = shl i64 %fixnum.add502, 1, !dbg !48
  %or506 = or i64 %shl505, 1, !dbg !48
  %as_obj507 = inttoptr i64 %or506 to %"struct.rubinius::Object"*, !dbg !48
  br label %cont492, !dbg !48

bignum491:                                        ; preds = %push_add489
  %big_value504 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add502) #1, !dbg !48
  br label %cont492, !dbg !48

cont492:                                          ; preds = %tagnow490, %bignum491
  %result508 = phi %"struct.rubinius::Object"* [ %big_value504, %bignum491 ], [ %as_obj507, %tagnow490 ], !dbg !48
  br label %continue484, !dbg !48

check_active516:                                  ; preds = %class_fallback482
  br label %continue484, !dbg !48

class_fallback526:                                ; preds = %continue484
  %stack_pos539 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  %stack_load540 = load %"struct.rubinius::Object"** %stack_pos539, !dbg !48
  store %"struct.rubinius::Object"* %stack_load540, %"struct.rubinius::Object"** %out_args_recv79, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !48
  store i32 1, i32* %out_args_total81, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !48
  %stack_pos541 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos541, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !48
  %cache_const542 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568320 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos543 = getelementptr %"struct.rubinius::CallSite"* %cache_const542, i32 0, i32 2, !dbg !48
  %execute544 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos543, !dbg !48
  store i32 533, i32* %ip_pos77, !dbg !48
  %call_site_execute545 = call %"struct.rubinius::Object"* %execute544(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const542, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check547 = icmp eq %"struct.rubinius::Object"* %call_site_execute545, null, !dbg !48
  br i1 %null_check547, label %bail_out72, label %check_active546, !dbg !48

serial_fallback527:                               ; No predecessors!
  store i32 533, i32* %ip_pos77, !dbg !48
  %56 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 533, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !48
  br label %return_pad45, !dbg !48

continue528:                                      ; preds = %check_active546, %push_le538
  %send_result548 = phi %"struct.rubinius::Object"* [ %57, %push_le538 ], [ %call_site_execute545, %check_active546 ], !dbg !48
  %stack_pos549 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %send_result548, %"struct.rubinius::Object"** %stack_pos549, !dbg !48
  %stack_pos550 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  %stack_load551 = load %"struct.rubinius::Object"** %stack_pos550, !dbg !48
  %as_int552 = ptrtoint %"struct.rubinius::Object"* %stack_load551 to i64, !dbg !48
  %and553 = and i64 %as_int552, 15, !dbg !48
  %is_true554 = icmp eq i64 %and553, 10, !dbg !48
  br i1 %is_true554, label %ip549, label %continue555, !dbg !48

push_le538:                                       ; preds = %continue484
  %fixnum.gt = icmp sgt i64 %cast531, %cast534, !dbg !48
  %57 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !48
  br label %continue528, !dbg !48

check_active546:                                  ; preds = %class_fallback526
  br label %continue528, !dbg !48

continue555:                                      ; preds = %continue528
  br label %ip538, !dbg !48

ip538:                                            ; preds = %continue555
  %self_pos556 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !49
  %self557 = load %"struct.rubinius::Object"** %self_pos556, !dbg !49
  %obj_array558 = bitcast %"struct.rubinius::Object"* %self557 to %"struct.rubinius::Object"**, !dbg !49
  %field_pos559 = getelementptr %"struct.rubinius::Object"** %obj_array558, i32 3, !dbg !49
  %field560 = load %"struct.rubinius::Object"** %field_pos559, !dbg !49
  %stack_pos561 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %field560, %"struct.rubinius::Object"** %stack_pos561, !dbg !49
  %local_pos562 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !49
  %local563 = load %"struct.rubinius::Object"** %local_pos562, !dbg !49, !rbx-classid !35
  %stack_pos564 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %local563, %"struct.rubinius::Object"** %stack_pos564, !dbg !49
  %stack_pos565 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !49
  %stack_load566 = load %"struct.rubinius::Object"** %stack_pos565, !dbg !49
  store %"struct.rubinius::Object"* %stack_load566, %"struct.rubinius::Object"** %out_args_recv79, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !49
  store i32 1, i32* %out_args_total81, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !49
  %stack_pos567 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos567, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !49
  %cache_const568 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568392 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos569 = getelementptr %"struct.rubinius::CallSite"* %cache_const568, i32 0, i32 2, !dbg !49
  %execute570 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos569, !dbg !49
  store i32 542, i32* %ip_pos77, !dbg !49
  %call_site_execute571 = call %"struct.rubinius::Object"* %execute570(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const568, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check574 = icmp eq %"struct.rubinius::Object"* %call_site_execute571, null, !dbg !49
  br i1 %null_check574, label %bail_out72, label %check_active573, !dbg !49

continue572:                                      ; preds = %check_active573
  %stack_pos575 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute571, %"struct.rubinius::Object"** %stack_pos575, !dbg !49
  %local_pos576 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !49
  %stack_pos577 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !49
  %stack_load578 = load %"struct.rubinius::Object"** %stack_pos577, !dbg !49
  store %"struct.rubinius::Object"* %stack_load578, %"struct.rubinius::Object"** %local_pos576, !dbg !49
  br label %ip550, !dbg !49

check_active573:                                  ; preds = %ip538
  br label %continue572, !dbg !49

continue579:                                      ; No predecessors!
  br label %ip549, !dbg !49

ip550:                                            ; preds = %ip549, %continue572
  %58 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !50
  %self580 = load %"struct.rubinius::Object"** %58, !dbg !50, !rbx-classid !45
  %stack_pos581 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  store %"struct.rubinius::Object"* %self580, %"struct.rubinius::Object"** %stack_pos581, !dbg !50
  %self_pos582 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !50
  %self583 = load %"struct.rubinius::Object"** %self_pos582, !dbg !50
  %obj_array584 = bitcast %"struct.rubinius::Object"* %self583 to %"struct.rubinius::Object"**, !dbg !50
  %field_pos585 = getelementptr %"struct.rubinius::Object"** %obj_array584, i32 5, !dbg !50
  %field586 = load %"struct.rubinius::Object"** %field_pos585, !dbg !50
  %stack_pos587 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  store %"struct.rubinius::Object"* %field586, %"struct.rubinius::Object"** %stack_pos587, !dbg !50
  %local_pos588 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !50
  %local589 = load %"struct.rubinius::Object"** %local_pos588, !dbg !50, !rbx-classid !35
  %stack_pos590 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !50
  store %"struct.rubinius::Object"* %local589, %"struct.rubinius::Object"** %stack_pos590, !dbg !50
  %stack_pos594 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  %stack_load595 = load %"struct.rubinius::Object"** %stack_pos594, !dbg !50
  %stack_pos596 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !50
  %stack_load597 = load %"struct.rubinius::Object"** %stack_pos596, !dbg !50, !rbx-classid !35
  %cast602 = ptrtoint %"struct.rubinius::Object"* %stack_load595 to i64, !dbg !50
  %cast603 = ptrtoint %"struct.rubinius::Object"* %stack_load597 to i64, !dbg !50
  %fixnums_anded604 = and i64 %cast602, %cast603, !dbg !50
  %masked605 = and i64 %fixnums_anded604, 1, !dbg !50
  %is_fixnum606 = icmp eq i64 %masked605, 1, !dbg !50
  br i1 %is_fixnum606, label %push_add598, label %class_fallback591, !dbg !50

class_fallback591:                                ; preds = %ip550
  %stack_pos618 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  %stack_load619 = load %"struct.rubinius::Object"** %stack_pos618, !dbg !50
  store %"struct.rubinius::Object"* %stack_load619, %"struct.rubinius::Object"** %out_args_recv79, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !50
  store i32 1, i32* %out_args_total81, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !50
  %stack_pos620 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !50
  store %"struct.rubinius::Object"** %stack_pos620, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !50
  %cache_const621 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568504 to %"struct.rubinius::CallSite"**), !dbg !50
  %execute_pos622 = getelementptr %"struct.rubinius::CallSite"* %cache_const621, i32 0, i32 2, !dbg !50
  %execute623 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos622, !dbg !50
  store i32 556, i32* %ip_pos77, !dbg !50
  %call_site_execute624 = call %"struct.rubinius::Object"* %execute623(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const621, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check626 = icmp eq %"struct.rubinius::Object"* %call_site_execute624, null, !dbg !50
  br i1 %null_check626, label %bail_out72, label %check_active625, !dbg !50

serial_fallback592:                               ; No predecessors!
  store i32 556, i32* %ip_pos77, !dbg !50
  %59 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 556, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !50
  br label %return_pad45, !dbg !50

continue593:                                      ; preds = %check_active625, %cont601
  %send_result627 = phi %"struct.rubinius::Object"* [ %result617, %cont601 ], [ %call_site_execute624, %check_active625 ], !dbg !50
  %stack_pos628 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  store %"struct.rubinius::Object"* %send_result627, %"struct.rubinius::Object"** %stack_pos628, !dbg !50
  %local_pos629 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !50
  %local630 = load %"struct.rubinius::Object"** %local_pos629, !dbg !50, !rbx-classid !23
  %stack_pos631 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !50
  store %"struct.rubinius::Object"* %local630, %"struct.rubinius::Object"** %stack_pos631, !dbg !50
  %stack_pos635 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  %stack_load636 = load %"struct.rubinius::Object"** %stack_pos635, !dbg !50, !rbx-classid !45
  %stack_pos637 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  %stack_load638 = load %"struct.rubinius::Object"** %stack_pos637, !dbg !50, !rbx-classid !45
  %stack_pos639 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  %stack_load640 = load %"struct.rubinius::Object"** %stack_pos639, !dbg !50
  %stack_pos641 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !50
  %stack_load642 = load %"struct.rubinius::Object"** %stack_pos641, !dbg !50, !rbx-classid !23
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load638, %"struct.rubinius::Object"* %stack_load640, %"struct.rubinius::Object"* %stack_load642) #1, !dbg !50
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !50
  %60 = icmp eq i64 %ptr2int, 34, !dbg !50
  br i1 %60, label %class_fallback632, label %continue643, !dbg !50

push_add598:                                      ; preds = %ip550
  %as_int607 = ptrtoint %"struct.rubinius::Object"* %stack_load595 to i64, !dbg !50
  %ashr608 = ashr i64 %as_int607, 1, !dbg !50
  %as_int609 = ptrtoint %"struct.rubinius::Object"* %stack_load597 to i64, !dbg !50
  %ashr610 = ashr i64 %as_int609, 1, !dbg !50
  %fixnum.add611 = add i64 %ashr608, %ashr610, !dbg !50
  %61 = icmp sle i64 %fixnum.add611, 4611686018427387903, !dbg !50
  %62 = icmp sge i64 %fixnum.add611, -4611686018427387903, !dbg !50
  %fits_fixnum612 = and i1 %61, %62, !dbg !50
  br i1 %fits_fixnum612, label %tagnow599, label %bignum600, !dbg !50

tagnow599:                                        ; preds = %push_add598
  %shl614 = shl i64 %fixnum.add611, 1, !dbg !50
  %or615 = or i64 %shl614, 1, !dbg !50
  %as_obj616 = inttoptr i64 %or615 to %"struct.rubinius::Object"*, !dbg !50
  br label %cont601, !dbg !50

bignum600:                                        ; preds = %push_add598
  %big_value613 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add611) #1, !dbg !50
  br label %cont601, !dbg !50

cont601:                                          ; preds = %tagnow599, %bignum600
  %result617 = phi %"struct.rubinius::Object"* [ %big_value613, %bignum600 ], [ %as_obj616, %tagnow599 ], !dbg !50
  br label %continue593, !dbg !50

check_active625:                                  ; preds = %class_fallback591
  br label %continue593, !dbg !50

class_fallback632:                                ; preds = %continue593
  %stack_pos647 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  %stack_load648 = load %"struct.rubinius::Object"** %stack_pos647, !dbg !50, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load648, %"struct.rubinius::Object"** %out_args_recv79, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !50
  store i32 2, i32* %out_args_total81, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !50
  %stack_pos649 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !50
  store %"struct.rubinius::Object"** %stack_pos649, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !50
  %cache_const650 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568552 to %"struct.rubinius::CallSite"**), !dbg !50
  %execute_pos651 = getelementptr %"struct.rubinius::CallSite"* %cache_const650, i32 0, i32 2, !dbg !50
  %execute652 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos651, !dbg !50
  store i32 562, i32* %ip_pos77, !dbg !50
  %call_site_execute653 = call %"struct.rubinius::Object"* %execute652(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const650, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check655 = icmp eq %"struct.rubinius::Object"* %call_site_execute653, null, !dbg !50
  br i1 %null_check655, label %bail_out72, label %check_active654, !dbg !50

serial_fallback633:                               ; No predecessors!
  store i32 562, i32* %ip_pos77, !dbg !50
  %63 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 562, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !50
  br label %return_pad45, !dbg !50

continue634:                                      ; preds = %check_active654, %continue644
  %send_result656 = phi %"struct.rubinius::Object"* [ %prim_value, %continue644 ], [ %call_site_execute653, %check_active654 ], !dbg !50
  %stack_pos657 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  store %"struct.rubinius::Object"* %send_result656, %"struct.rubinius::Object"** %stack_pos657, !dbg !50
  %stack_pos658 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !50
  %stack_load659 = load %"struct.rubinius::Object"** %stack_pos658, !dbg !50
  br label %return_pad45, !dbg !50

ip549:                                            ; preds = %continue579, %continue528
  %stack_pos660 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos660, !dbg !48
  br label %ip550, !dbg !48

ip74:                                             ; preds = %continue309, %ip45
  %local_pos661 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !51
  %local662 = load %"struct.rubinius::Object"** %local_pos661, !dbg !51, !rbx-classid !35
  %stack_pos663 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %local662, %"struct.rubinius::Object"** %stack_pos663, !dbg !51
  %self_pos664 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !51
  %self665 = load %"struct.rubinius::Object"** %self_pos664, !dbg !51
  %obj_array666 = bitcast %"struct.rubinius::Object"* %self665 to %"struct.rubinius::Object"**, !dbg !51
  %field_pos667 = getelementptr %"struct.rubinius::Object"** %obj_array666, i32 3, !dbg !51
  %field668 = load %"struct.rubinius::Object"** %field_pos667, !dbg !51
  %stack_pos669 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !51
  store %"struct.rubinius::Object"* %field668, %"struct.rubinius::Object"** %stack_pos669, !dbg !51
  %stack_pos673 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  %stack_load674 = load %"struct.rubinius::Object"** %stack_pos673, !dbg !51, !rbx-classid !35
  %cast675 = ptrtoint %"struct.rubinius::Object"* %stack_load674 to i64, !dbg !51
  %stack_pos676 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !51
  %stack_load677 = load %"struct.rubinius::Object"** %stack_pos676, !dbg !51
  %cast678 = ptrtoint %"struct.rubinius::Object"* %stack_load677 to i64, !dbg !51
  %fixnums_anded679 = and i64 %cast675, %cast678
  %masked680 = and i64 %fixnums_anded679, 1
  %is_fixnum681 = icmp eq i64 %masked680, 1, !dbg !51
  br i1 %is_fixnum681, label %push_le682, label %class_fallback670, !dbg !51

continue643:                                      ; preds = %continue593
  %null_check646 = icmp eq %"struct.rubinius::Object"* %prim_value, null, !dbg !50
  br i1 %null_check646, label %bail_out72, label %check_active645, !dbg !50

continue644:                                      ; preds = %check_active645
  br label %continue634, !dbg !50

check_active645:                                  ; preds = %continue643
  br label %continue644, !dbg !50

check_active654:                                  ; preds = %class_fallback632
  br label %continue634, !dbg !50

class_fallback670:                                ; preds = %ip74
  %stack_pos684 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  %stack_load685 = load %"struct.rubinius::Object"** %stack_pos684, !dbg !51, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load685, %"struct.rubinius::Object"** %out_args_recv79, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !51
  store i32 1, i32* %out_args_total81, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !51
  %stack_pos686 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos686, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !51
  %cache_const687 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564680 to %"struct.rubinius::CallSite"**), !dbg !51
  %execute_pos688 = getelementptr %"struct.rubinius::CallSite"* %cache_const687, i32 0, i32 2, !dbg !51
  %execute689 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos688, !dbg !51
  store i32 78, i32* %ip_pos77, !dbg !51
  %call_site_execute690 = call %"struct.rubinius::Object"* %execute689(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const687, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check692 = icmp eq %"struct.rubinius::Object"* %call_site_execute690, null, !dbg !51
  br i1 %null_check692, label %bail_out72, label %check_active691, !dbg !51

serial_fallback671:                               ; No predecessors!
  store i32 78, i32* %ip_pos77, !dbg !51
  %64 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 78, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !51
  br label %return_pad45, !dbg !51

continue672:                                      ; preds = %check_active691, %push_le682
  %send_result693 = phi %"struct.rubinius::Object"* [ %65, %push_le682 ], [ %call_site_execute690, %check_active691 ], !dbg !51
  %stack_pos694 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %send_result693, %"struct.rubinius::Object"** %stack_pos694, !dbg !51
  %stack_pos695 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  %stack_load696 = load %"struct.rubinius::Object"** %stack_pos695, !dbg !51
  %as_int697 = ptrtoint %"struct.rubinius::Object"* %stack_load696 to i64, !dbg !51
  %and698 = and i64 %as_int697, 15, !dbg !51
  %is_true699 = icmp eq i64 %and698, 10, !dbg !51
  br i1 %is_true699, label %ip87, label %continue700, !dbg !51

push_le682:                                       ; preds = %ip74
  %fixnum.ge683 = icmp sge i64 %cast675, %cast678, !dbg !51
  %65 = select i1 %fixnum.ge683, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !51
  br label %continue672, !dbg !51

check_active691:                                  ; preds = %class_fallback670
  br label %continue672, !dbg !51

continue700:                                      ; preds = %continue672
  br label %ip83, !dbg !51

ip83:                                             ; preds = %continue700
  %stack_pos701 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos701, !dbg !51
  %stack_pos702 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  %stack_load703 = load %"struct.rubinius::Object"** %stack_pos702, !dbg !51, !rbx-classid !29
  br label %return_pad45, !dbg !51

ip87:                                             ; preds = %continue672
  %stack_pos704 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos704, !dbg !51
  %66 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !52
  %stack_pos705 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !52
  store %"struct.rubinius::Object"* %66, %"struct.rubinius::Object"** %stack_pos705, !dbg !52
  %stack_pos706 = getelementptr %"struct.rubinius::Object"** %stack54, i32 12, !dbg !52
  %stack_pos707 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !52
  %stack_load708 = load %"struct.rubinius::Object"** %stack_pos707, !dbg !52
  store %"struct.rubinius::Object"* %stack_load708, %"struct.rubinius::Object"** %stack_pos706, !dbg !52
  br label %ip96, !dbg !52

ip96:                                             ; preds = %ip87
  %self_pos709 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !53
  %self710 = load %"struct.rubinius::Object"** %self_pos709, !dbg !53
  %obj_array711 = bitcast %"struct.rubinius::Object"* %self710 to %"struct.rubinius::Object"**, !dbg !53
  %field_pos712 = getelementptr %"struct.rubinius::Object"** %obj_array711, i32 4, !dbg !53
  %field713 = load %"struct.rubinius::Object"** %field_pos712, !dbg !53
  %stack_pos714 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %field713, %"struct.rubinius::Object"** %stack_pos714, !dbg !53
  %self_pos715 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !53
  %self716 = load %"struct.rubinius::Object"** %self_pos715, !dbg !53
  %obj_array717 = bitcast %"struct.rubinius::Object"* %self716 to %"struct.rubinius::Object"**, !dbg !53
  %field_pos718 = getelementptr %"struct.rubinius::Object"** %obj_array717, i32 5, !dbg !53
  %field719 = load %"struct.rubinius::Object"** %field_pos718, !dbg !53
  %stack_pos720 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !53
  store %"struct.rubinius::Object"* %field719, %"struct.rubinius::Object"** %stack_pos720, !dbg !53
  %local_pos721 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !53
  %local722 = load %"struct.rubinius::Object"** %local_pos721, !dbg !53, !rbx-classid !35
  %stack_pos723 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !53
  store %"struct.rubinius::Object"* %local722, %"struct.rubinius::Object"** %stack_pos723, !dbg !53
  %stack_pos727 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !53
  %stack_load728 = load %"struct.rubinius::Object"** %stack_pos727, !dbg !53
  %stack_pos729 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !53
  %stack_load730 = load %"struct.rubinius::Object"** %stack_pos729, !dbg !53, !rbx-classid !35
  %cast735 = ptrtoint %"struct.rubinius::Object"* %stack_load728 to i64, !dbg !53
  %cast736 = ptrtoint %"struct.rubinius::Object"* %stack_load730 to i64, !dbg !53
  %fixnums_anded737 = and i64 %cast735, %cast736, !dbg !53
  %masked738 = and i64 %fixnums_anded737, 1, !dbg !53
  %is_fixnum739 = icmp eq i64 %masked738, 1, !dbg !53
  br i1 %is_fixnum739, label %push_add731, label %class_fallback724, !dbg !53

is_exception:                                     ; preds = %class_fallback724
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !52
  br i1 %rae, label %ip112, label %bail_out72, !dbg !52

class_fallback724:                                ; preds = %ip96
  %stack_pos751 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !53
  %stack_load752 = load %"struct.rubinius::Object"** %stack_pos751, !dbg !53
  store %"struct.rubinius::Object"* %stack_load752, %"struct.rubinius::Object"** %out_args_recv79, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !53
  store i32 1, i32* %out_args_total81, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !53
  %stack_pos753 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos753, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !53
  %cache_const754 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564872 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos755 = getelementptr %"struct.rubinius::CallSite"* %cache_const754, i32 0, i32 2, !dbg !53
  %execute756 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos755, !dbg !53
  store i32 102, i32* %ip_pos77, !dbg !53
  %call_site_execute757 = call %"struct.rubinius::Object"* %execute756(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const754, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check759 = icmp eq %"struct.rubinius::Object"* %call_site_execute757, null, !dbg !53
  br i1 %null_check759, label %is_exception, label %check_active758, !dbg !53

serial_fallback725:                               ; No predecessors!
  store i32 102, i32* %ip_pos77, !dbg !53
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !53
  %67 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 102, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 1, i8 1), !dbg !53
  br label %return_pad45, !dbg !53

continue726:                                      ; preds = %check_active758, %cont734
  %send_result760 = phi %"struct.rubinius::Object"* [ %result750, %cont734 ], [ %call_site_execute757, %check_active758 ], !dbg !53
  %stack_pos761 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !53
  store %"struct.rubinius::Object"* %send_result760, %"struct.rubinius::Object"** %stack_pos761, !dbg !53
  %stack_pos765 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !53
  %stack_load766 = load %"struct.rubinius::Object"** %stack_pos765, !dbg !53
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load766, i32 0, i32 0, i32 0, i32 0, !dbg !53
  %flags = load i64* %word_pos, !dbg !53
  %mask = and i64 %flags, 255, !dbg !53
  %is_type = icmp eq i64 %mask, 73, !dbg !53
  br i1 %is_type, label %is_tuple, label %class_fallback762, !dbg !53

push_add731:                                      ; preds = %ip96
  %as_int740 = ptrtoint %"struct.rubinius::Object"* %stack_load728 to i64, !dbg !53
  %ashr741 = ashr i64 %as_int740, 1, !dbg !53
  %as_int742 = ptrtoint %"struct.rubinius::Object"* %stack_load730 to i64, !dbg !53
  %ashr743 = ashr i64 %as_int742, 1, !dbg !53
  %fixnum.add744 = add i64 %ashr741, %ashr743, !dbg !53
  %68 = icmp sle i64 %fixnum.add744, 4611686018427387903, !dbg !53
  %69 = icmp sge i64 %fixnum.add744, -4611686018427387903, !dbg !53
  %fits_fixnum745 = and i1 %68, %69, !dbg !53
  br i1 %fits_fixnum745, label %tagnow732, label %bignum733, !dbg !53

tagnow732:                                        ; preds = %push_add731
  %shl747 = shl i64 %fixnum.add744, 1, !dbg !53
  %or748 = or i64 %shl747, 1, !dbg !53
  %as_obj749 = inttoptr i64 %or748 to %"struct.rubinius::Object"*, !dbg !53
  br label %cont734, !dbg !53

bignum733:                                        ; preds = %push_add731
  %big_value746 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add744) #1, !dbg !53
  br label %cont734, !dbg !53

cont734:                                          ; preds = %tagnow732, %bignum733
  %result750 = phi %"struct.rubinius::Object"* [ %big_value746, %bignum733 ], [ %as_obj749, %tagnow732 ], !dbg !53
  br label %continue726, !dbg !53

check_active758:                                  ; preds = %class_fallback724
  br label %continue726, !dbg !53

class_fallback762:                                ; preds = %is_tuple, %continue726
  store i32 105, i32* %ip_pos77, !dbg !53
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !53
  %70 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 1, i8 0), !dbg !53
  br label %return_pad45, !dbg !53

serial_fallback763:                               ; No predecessors!
  store i32 105, i32* %ip_pos77, !dbg !53
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !53
  %71 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 1, i8 1), !dbg !53
  br label %return_pad45, !dbg !53

continue764:                                      ; preds = %tuple_at
  %stack_pos777 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !53
  %stack_load778 = load %"struct.rubinius::Object"** %stack_pos777, !dbg !53
  br label %return_pad45, !dbg !53

ip112:                                            ; preds = %is_exception
  %72 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !41
  %stack_pos779 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %72, %"struct.rubinius::Object"** %stack_pos779, !dbg !41
  %stack_pos780 = getelementptr %"struct.rubinius::Object"** %stack54, i32 11, !dbg !41
  %stack_pos781 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  %stack_load782 = load %"struct.rubinius::Object"** %stack_pos781, !dbg !41
  store %"struct.rubinius::Object"* %stack_load782, %"struct.rubinius::Object"** %stack_pos780, !dbg !41
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !41
  %stack_pos783 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos783, !dbg !41
  %stack_pos784 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !54
  %stack_load785 = load %"struct.rubinius::Object"** %stack_pos784, !dbg !54
  %stack_pos786 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %stack_load785, %"struct.rubinius::Object"** %stack_pos786, !dbg !54
  %global_serial787 = load i32* inttoptr (i64 22553876 to i32*), !dbg !54
  %constant_cache788 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**), !dbg !54
  %constant_cache_pos789 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i32 0, i32 4, !dbg !54
  %constant_scope790 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos789, !dbg !54
  %scope_pos791 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !54
  %frame_scope792 = load %"struct.rubinius::ConstantScope"** %scope_pos791, !dbg !54
  %same_scope793 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope790, %frame_scope792, !dbg !54
  br i1 %same_scope793, label %check_serial794, label %use_call796, !dbg !54

is_tuple:                                         ; preds = %continue726
  %stack_pos767 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !53
  %stack_load768 = load %"struct.rubinius::Object"** %stack_pos767, !dbg !53
  %cast769 = ptrtoint %"struct.rubinius::Object"* %stack_load768 to i64, !dbg !53
  %masked770 = and i64 %cast769, -9223372036854775807, !dbg !53
  %is_fixnum771 = icmp eq i64 %masked770, 1, !dbg !53
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load766 to %"struct.rubinius::Tuple"*, !dbg !53
  %as_int772 = ptrtoint %"struct.rubinius::Object"* %stack_load768 to i64, !dbg !53
  %ashr773 = ashr i64 %as_int772, 1, !dbg !53
  %table_size_pos = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 1, !dbg !53
  %table_size = load i64* %table_size_pos, !dbg !53
  %73 = sub i64 %table_size, 32, !dbg !53
  %74 = sdiv i64 %73, 8, !dbg !53
  %is_in_bounds = icmp slt i64 %ashr773, %74, !dbg !53
  %access_cmp = and i1 %is_fixnum771, %is_in_bounds, !dbg !53
  br i1 %access_cmp, label %tuple_at, label %class_fallback762, !dbg !53

tuple_at:                                         ; preds = %is_tuple
  %field_pos774 = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 2, i64 %ashr773, !dbg !53
  %tuple_at775 = load %"struct.rubinius::Object"** %field_pos774, !dbg !53
  %stack_pos776 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %tuple_at775, %"struct.rubinius::Object"** %stack_pos776, !dbg !53
  br label %continue764, !dbg !53

check_serial794:                                  ; preds = %ip112
  %serial_pos798 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i32 0, i32 7, !dbg !54
  %serial799 = load i32* %serial_pos798, !dbg !54
  %use_cache800 = icmp eq i32 %global_serial787, %serial799, !dbg !54
  br i1 %use_cache800, label %use_cache795, label %use_call796, !dbg !54

use_cache795:                                     ; preds = %check_serial794
  %value_pos801 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i32 0, i32 2, !dbg !54
  %cached_value802 = load %"struct.rubinius::Object"** %value_pos801, !dbg !54
  br label %continue797, !dbg !54

use_call796:                                      ; preds = %check_serial794, %ip112
  store i32 118, i32* %ip_pos77, !dbg !54
  %push_const_fast803 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !54
  %null_check806 = icmp eq %"struct.rubinius::Object"* %push_const_fast803, null, !dbg !54
  br i1 %null_check806, label %bail_out72, label %check_active805, !dbg !54

continue797:                                      ; preds = %continue804, %use_cache795
  %constant807 = phi %"struct.rubinius::Object"* [ %cached_value802, %use_cache795 ], [ %push_const_fast803, %continue804 ], !dbg !54, !rbx-classid !55
  %stack_pos808 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  store %"struct.rubinius::Object"* %constant807, %"struct.rubinius::Object"** %stack_pos808, !dbg !54
  %stack_pos809 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  %stack_load810 = load %"struct.rubinius::Object"** %stack_pos809, !dbg !54, !rbx-classid !55
  %global_serial811 = load i32* inttoptr (i64 22553876 to i32*), !dbg !54
  %constant_cache812 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), !dbg !54
  %constant_cache_pos813 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i32 0, i32 4, !dbg !54
  %constant_scope814 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos813, !dbg !54
  %scope_pos815 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !54
  %frame_scope816 = load %"struct.rubinius::ConstantScope"** %scope_pos815, !dbg !54
  %same_scope817 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope814, %frame_scope816, !dbg !54
  br i1 %same_scope817, label %check_serial818, label %use_call820, !dbg !54

continue804:                                      ; preds = %check_active805
  br label %continue797, !dbg !54

check_active805:                                  ; preds = %use_call796
  br label %continue804, !dbg !54

check_serial818:                                  ; preds = %continue797
  %serial_pos822 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i32 0, i32 7, !dbg !54
  %serial823 = load i32* %serial_pos822, !dbg !54
  %use_under = icmp eq i32 %global_serial811, %serial823, !dbg !54
  br i1 %use_under, label %check_under, label %use_call820, !dbg !54

check_under:                                      ; preds = %check_serial818
  %value_pos824 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i32 0, i32 3, !dbg !54
  %cached_under = load %"struct.rubinius::Module"** %value_pos824, !dbg !54
  %downcast = bitcast %"struct.rubinius::Module"* %cached_under to %"struct.rubinius::Object"*, !dbg !54
  %use_cache825 = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load810, !dbg !54
  br i1 %use_cache825, label %use_cache819, label %use_call820, !dbg !54

use_cache819:                                     ; preds = %check_under
  %value_pos826 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i32 0, i32 2, !dbg !54
  %cached_value827 = load %"struct.rubinius::Object"** %value_pos826, !dbg !54
  br label %continue821, !dbg !54

use_call820:                                      ; preds = %check_under, %check_serial818, %continue797
  store i32 120, i32* %ip_pos77, !dbg !54
  %constant828 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load810) #0, !dbg !54
  %null_check831 = icmp eq %"struct.rubinius::Object"* %constant828, null, !dbg !54
  br i1 %null_check831, label %bail_out72, label %check_active830, !dbg !54

continue821:                                      ; preds = %continue829, %use_cache819
  %constant832 = phi %"struct.rubinius::Object"* [ %cached_value827, %use_cache819 ], [ %constant828, %continue829 ], !dbg !54, !rbx-classid !56
  %stack_pos833 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  store %"struct.rubinius::Object"* %constant832, %"struct.rubinius::Object"** %stack_pos833, !dbg !54
  %stack_pos834 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  %stack_load835 = load %"struct.rubinius::Object"** %stack_pos834, !dbg !54, !rbx-classid !56
  %stack_pos836 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  %stack_load837 = load %"struct.rubinius::Object"** %stack_pos836, !dbg !54
  %stack_pos838 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %stack_load835, %"struct.rubinius::Object"** %stack_pos838, !dbg !54
  %stack_pos839 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  store %"struct.rubinius::Object"* %stack_load837, %"struct.rubinius::Object"** %stack_pos839, !dbg !54
  %stack_pos840 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  %stack_load841 = load %"struct.rubinius::Object"** %stack_pos840, !dbg !54, !rbx-classid !56
  store %"struct.rubinius::Object"* %stack_load841, %"struct.rubinius::Object"** %out_args_recv79, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !54
  store i32 1, i32* %out_args_total81, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !54
  %stack_pos842 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos842, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !54
  %cache_const843 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565040 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos844 = getelementptr %"struct.rubinius::CallSite"* %cache_const843, i32 0, i32 2, !dbg !54
  %execute845 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos844, !dbg !54
  store i32 123, i32* %ip_pos77, !dbg !54
  %call_site_execute846 = call %"struct.rubinius::Object"* %execute845(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const843, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check849 = icmp eq %"struct.rubinius::Object"* %call_site_execute846, null, !dbg !54
  br i1 %null_check849, label %bail_out72, label %check_active848, !dbg !54

continue829:                                      ; preds = %check_active830
  br label %continue821, !dbg !54

check_active830:                                  ; preds = %use_call820
  br label %continue829, !dbg !54

continue847:                                      ; preds = %check_active848
  %stack_pos850 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute846, %"struct.rubinius::Object"** %stack_pos850, !dbg !54
  %stack_pos851 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !54
  %stack_load852 = load %"struct.rubinius::Object"** %stack_pos851, !dbg !54
  %as_int853 = ptrtoint %"struct.rubinius::Object"* %stack_load852 to i64, !dbg !54
  %and854 = and i64 %as_int853, 15, !dbg !54
  %is_true855 = icmp ne i64 %and854, 10, !dbg !54
  br i1 %is_true855, label %ip130, label %continue856, !dbg !54

check_active848:                                  ; preds = %continue821
  br label %continue847, !dbg !54

continue856:                                      ; preds = %continue847
  br label %ip128, !dbg !54

ip128:                                            ; preds = %continue856
  br label %ip139, !dbg !54

continue857:                                      ; No predecessors!
  br label %ip130, !dbg !54

ip139:                                            ; preds = %ip128
  %stack_pos858 = getelementptr %"struct.rubinius::Object"** %stack54, i32 11, !dbg !57
  %stack_local = load %"struct.rubinius::Object"** %stack_pos858, !dbg !57
  %stack_pos859 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !57
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack_pos859, !dbg !57
  %stack_pos860 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !57
  %stack_load861 = load %"struct.rubinius::Object"** %stack_pos860, !dbg !57
  %75 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load861), !dbg !57
  br label %bail_out72, !dbg !57

continue862:                                      ; No predecessors!
  br label %ip130, !dbg !54

ip130:                                            ; preds = %continue862, %continue857, %continue847
  %stack_pos863 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos863, !dbg !57
  %stack_pos864 = getelementptr %"struct.rubinius::Object"** %stack54, i32 12, !dbg !57
  %stack_local865 = load %"struct.rubinius::Object"** %stack_pos864, !dbg !57
  %stack_pos866 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !57
  store %"struct.rubinius::Object"* %stack_local865, %"struct.rubinius::Object"** %stack_pos866, !dbg !57
  %stack_pos867 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !57
  %stack_load868 = load %"struct.rubinius::Object"** %stack_pos867, !dbg !57
  %76 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load868), !dbg !57
  %stack_pos869 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !57
  %stack_load870 = load %"struct.rubinius::Object"** %stack_pos869, !dbg !57, !rbx-classid !29
  br label %return_pad45, !dbg !57

ip44:                                             ; preds = %continue206, %continue144
  %stack_pos871 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos871, !dbg !34
  br label %ip45, !dbg !34

ip149:                                            ; preds = %continue310, %continue116
  %stack_pos872 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !58
  %stack_load873 = load %"struct.rubinius::Object"** %stack_pos872, !dbg !58
  %stack_pos874 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  store %"struct.rubinius::Object"* %stack_load873, %"struct.rubinius::Object"** %stack_pos874, !dbg !58
  %global_serial875 = load i32* inttoptr (i64 22553876 to i32*), !dbg !58
  %constant_cache876 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**), !dbg !58
  %constant_cache_pos877 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i32 0, i32 4, !dbg !58
  %constant_scope878 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos877, !dbg !58
  %scope_pos879 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !58
  %frame_scope880 = load %"struct.rubinius::ConstantScope"** %scope_pos879, !dbg !58
  %same_scope881 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope878, %frame_scope880, !dbg !58
  br i1 %same_scope881, label %check_serial882, label %use_call884, !dbg !58

check_serial882:                                  ; preds = %ip149
  %serial_pos886 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i32 0, i32 7, !dbg !58
  %serial887 = load i32* %serial_pos886, !dbg !58
  %use_cache888 = icmp eq i32 %global_serial875, %serial887, !dbg !58
  br i1 %use_cache888, label %use_cache883, label %use_call884, !dbg !58

use_cache883:                                     ; preds = %check_serial882
  %value_pos889 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i32 0, i32 2, !dbg !58
  %cached_value890 = load %"struct.rubinius::Object"** %value_pos889, !dbg !58
  br label %continue885, !dbg !58

use_call884:                                      ; preds = %check_serial882, %ip149
  store i32 150, i32* %ip_pos77, !dbg !58
  %push_const_fast891 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !58
  %null_check894 = icmp eq %"struct.rubinius::Object"* %push_const_fast891, null, !dbg !58
  br i1 %null_check894, label %bail_out72, label %check_active893, !dbg !58

continue885:                                      ; preds = %continue892, %use_cache883
  %constant895 = phi %"struct.rubinius::Object"* [ %cached_value890, %use_cache883 ], [ %push_const_fast891, %continue892 ], !dbg !58, !rbx-classid !59
  %stack_pos896 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !58
  store %"struct.rubinius::Object"* %constant895, %"struct.rubinius::Object"** %stack_pos896, !dbg !58
  %stack_pos897 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !58
  %stack_load898 = load %"struct.rubinius::Object"** %stack_pos897, !dbg !58, !rbx-classid !59
  %stack_pos899 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  %stack_load900 = load %"struct.rubinius::Object"** %stack_pos899, !dbg !58
  %stack_pos901 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  store %"struct.rubinius::Object"* %stack_load898, %"struct.rubinius::Object"** %stack_pos901, !dbg !58
  %stack_pos902 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !58
  store %"struct.rubinius::Object"* %stack_load900, %"struct.rubinius::Object"** %stack_pos902, !dbg !58
  %stack_pos903 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  %stack_load904 = load %"struct.rubinius::Object"** %stack_pos903, !dbg !58, !rbx-classid !59
  store %"struct.rubinius::Object"* %stack_load904, %"struct.rubinius::Object"** %out_args_recv79, !dbg !58
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !58
  store i32 1, i32* %out_args_total81, !dbg !58
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !58
  %stack_pos905 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !58
  store %"struct.rubinius::Object"** %stack_pos905, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !58
  %cache_const906 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565280 to %"struct.rubinius::CallSite"**), !dbg !58
  %execute_pos907 = getelementptr %"struct.rubinius::CallSite"* %cache_const906, i32 0, i32 2, !dbg !58
  %execute908 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos907, !dbg !58
  store i32 153, i32* %ip_pos77, !dbg !58
  %call_site_execute909 = call %"struct.rubinius::Object"* %execute908(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const906, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !58
  %null_check912 = icmp eq %"struct.rubinius::Object"* %call_site_execute909, null, !dbg !58
  br i1 %null_check912, label %bail_out72, label %check_active911, !dbg !58

continue892:                                      ; preds = %check_active893
  br label %continue885, !dbg !58

check_active893:                                  ; preds = %use_call884
  br label %continue892, !dbg !58

continue910:                                      ; preds = %check_active911
  %stack_pos913 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  store %"struct.rubinius::Object"* %call_site_execute909, %"struct.rubinius::Object"** %stack_pos913, !dbg !58
  %stack_pos914 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !58
  %stack_load915 = load %"struct.rubinius::Object"** %stack_pos914, !dbg !58
  %as_int916 = ptrtoint %"struct.rubinius::Object"* %stack_load915 to i64, !dbg !58
  %and917 = and i64 %as_int916, 15, !dbg !58
  %is_true918 = icmp eq i64 %and917, 10, !dbg !58
  br i1 %is_true918, label %ip313, label %continue919, !dbg !58

check_active911:                                  ; preds = %continue885
  br label %continue910, !dbg !58

continue919:                                      ; preds = %continue910
  br label %ip158, !dbg !58

ip158:                                            ; preds = %continue919
  %system_object920 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !60
  %stack_pos921 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %system_object920, %"struct.rubinius::Object"** %stack_pos921, !dbg !60
  %local_pos922 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !60
  %local923 = load %"struct.rubinius::Object"** %local_pos922, !dbg !60, !rbx-classid !26
  %stack_pos924 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %local923, %"struct.rubinius::Object"** %stack_pos924, !dbg !60
  %stack_pos925 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !60
  %stack_load926 = load %"struct.rubinius::Object"** %stack_pos925, !dbg !60, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load926, %"struct.rubinius::Object"** %out_args_recv79, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !60
  store i32 0, i32* %out_args_total81, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !60
  %cache_const927 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565352 to %"struct.rubinius::CallSite"**), !dbg !60
  %execute_pos928 = getelementptr %"struct.rubinius::CallSite"* %cache_const927, i32 0, i32 2, !dbg !60
  %execute929 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos928, !dbg !60
  store i32 162, i32* %ip_pos77, !dbg !60
  %call_site_execute930 = call %"struct.rubinius::Object"* %execute929(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const927, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check933 = icmp eq %"struct.rubinius::Object"* %call_site_execute930, null, !dbg !60
  br i1 %null_check933, label %bail_out72, label %check_active932, !dbg !60

continue931:                                      ; preds = %check_active932
  %stack_pos934 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %call_site_execute930, %"struct.rubinius::Object"** %stack_pos934, !dbg !60
  %global_serial935 = load i32* inttoptr (i64 22553876 to i32*), !dbg !60
  %constant_cache936 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**), !dbg !60
  %constant_cache_pos937 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i32 0, i32 4, !dbg !60
  %constant_scope938 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos937, !dbg !60
  %scope_pos939 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !60
  %frame_scope940 = load %"struct.rubinius::ConstantScope"** %scope_pos939, !dbg !60
  %same_scope941 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope938, %frame_scope940, !dbg !60
  br i1 %same_scope941, label %check_serial942, label %use_call944, !dbg !60

check_active932:                                  ; preds = %ip158
  br label %continue931, !dbg !60

check_serial942:                                  ; preds = %continue931
  %serial_pos946 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i32 0, i32 7, !dbg !60
  %serial947 = load i32* %serial_pos946, !dbg !60
  %use_cache948 = icmp eq i32 %global_serial935, %serial947, !dbg !60
  br i1 %use_cache948, label %use_cache943, label %use_call944, !dbg !60

use_cache943:                                     ; preds = %check_serial942
  %value_pos949 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i32 0, i32 2, !dbg !60
  %cached_value950 = load %"struct.rubinius::Object"** %value_pos949, !dbg !60
  br label %continue945, !dbg !60

use_call944:                                      ; preds = %check_serial942, %continue931
  store i32 165, i32* %ip_pos77, !dbg !60
  %push_const_fast951 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check954 = icmp eq %"struct.rubinius::Object"* %push_const_fast951, null, !dbg !60
  br i1 %null_check954, label %bail_out72, label %check_active953, !dbg !60

continue945:                                      ; preds = %continue952, %use_cache943
  %constant955 = phi %"struct.rubinius::Object"* [ %cached_value950, %use_cache943 ], [ %push_const_fast951, %continue952 ], !dbg !60, !rbx-classid !61
  %stack_pos956 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %constant955, %"struct.rubinius::Object"** %stack_pos956, !dbg !60
  %stack_pos957 = getelementptr %"struct.rubinius::Object"** %stack54, i32 3, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos957, !dbg !60
  %stack_pos958 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !60
  %stack_load959 = load %"struct.rubinius::Object"** %stack_pos958, !dbg !60
  store %"struct.rubinius::Object"* %stack_load959, %"struct.rubinius::Object"** %out_args_recv79, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !60
  store i32 3, i32* %out_args_total81, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !60
  %stack_pos960 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos960, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !60
  %cache_const961 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565408 to %"struct.rubinius::CallSite"**), !dbg !60
  %execute_pos962 = getelementptr %"struct.rubinius::CallSite"* %cache_const961, i32 0, i32 2, !dbg !60
  %execute963 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos962, !dbg !60
  store i32 169, i32* %ip_pos77, !dbg !60
  %call_site_execute964 = call %"struct.rubinius::Object"* %execute963(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const961, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check967 = icmp eq %"struct.rubinius::Object"* %call_site_execute964, null, !dbg !60
  br i1 %null_check967, label %bail_out72, label %check_active966, !dbg !60

continue952:                                      ; preds = %check_active953
  br label %continue945, !dbg !60

check_active953:                                  ; preds = %use_call944
  br label %continue952, !dbg !60

continue965:                                      ; preds = %check_active966
  %stack_pos968 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %call_site_execute964, %"struct.rubinius::Object"** %stack_pos968, !dbg !60
  %local_pos969 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !60
  %stack_pos970 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !60
  %stack_load971 = load %"struct.rubinius::Object"** %stack_pos970, !dbg !60
  store %"struct.rubinius::Object"* %stack_load971, %"struct.rubinius::Object"** %local_pos969, !dbg !60
  %local_pos972 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !62
  %local973 = load %"struct.rubinius::Object"** %local_pos972, !dbg !62, !rbx-classid !35
  %stack_pos974 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %local973, %"struct.rubinius::Object"** %stack_pos974, !dbg !62
  %stack_pos975 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos975, !dbg !62
  %stack_pos976 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  %stack_load977 = load %"struct.rubinius::Object"** %stack_pos976, !dbg !62, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load977, %"struct.rubinius::Object"** %out_args_recv79, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !62
  store i32 1, i32* %out_args_total81, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !62
  %stack_pos978 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos978, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !62
  %cache_const979 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565480 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos980 = getelementptr %"struct.rubinius::CallSite"* %cache_const979, i32 0, i32 2, !dbg !62
  %execute981 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos980, !dbg !62
  store i32 178, i32* %ip_pos77, !dbg !62
  %call_site_execute982 = call %"struct.rubinius::Object"* %execute981(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const979, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check985 = icmp eq %"struct.rubinius::Object"* %call_site_execute982, null, !dbg !62
  br i1 %null_check985, label %bail_out72, label %check_active984, !dbg !62

check_active966:                                  ; preds = %continue945
  br label %continue965, !dbg !60

continue983:                                      ; preds = %check_active984
  %stack_pos986 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute982, %"struct.rubinius::Object"** %stack_pos986, !dbg !62
  %stack_pos987 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  %stack_load988 = load %"struct.rubinius::Object"** %stack_pos987, !dbg !62
  %as_int989 = ptrtoint %"struct.rubinius::Object"* %stack_load988 to i64, !dbg !62
  %and990 = and i64 %as_int989, 15, !dbg !62
  %is_true991 = icmp eq i64 %and990, 10, !dbg !62
  br i1 %is_true991, label %ip194, label %continue992, !dbg !62

check_active984:                                  ; preds = %continue965
  br label %continue983, !dbg !62

continue992:                                      ; preds = %continue983
  br label %ip183, !dbg !62

ip183:                                            ; preds = %continue992
  %local_pos993 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !62
  %local994 = load %"struct.rubinius::Object"** %local_pos993, !dbg !62, !rbx-classid !35
  %stack_pos995 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %local994, %"struct.rubinius::Object"** %stack_pos995, !dbg !62
  %self_pos996 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !62
  %self997 = load %"struct.rubinius::Object"** %self_pos996, !dbg !62
  %obj_array998 = bitcast %"struct.rubinius::Object"* %self997 to %"struct.rubinius::Object"**, !dbg !62
  %field_pos999 = getelementptr %"struct.rubinius::Object"** %obj_array998, i32 3, !dbg !62
  %field1000 = load %"struct.rubinius::Object"** %field_pos999, !dbg !62
  %stack_pos1001 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %field1000, %"struct.rubinius::Object"** %stack_pos1001, !dbg !62
  %stack_pos1002 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  %stack_load1003 = load %"struct.rubinius::Object"** %stack_pos1002, !dbg !62, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1003, %"struct.rubinius::Object"** %out_args_recv79, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !62
  store i32 1, i32* %out_args_total81, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !62
  %stack_pos1004 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos1004, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !62
  %cache_const1005 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565552 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos1006 = getelementptr %"struct.rubinius::CallSite"* %cache_const1005, i32 0, i32 2, !dbg !62
  %execute1007 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1006, !dbg !62
  store i32 187, i32* %ip_pos77, !dbg !62
  %call_site_execute1008 = call %"struct.rubinius::Object"* %execute1007(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1005, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1011 = icmp eq %"struct.rubinius::Object"* %call_site_execute1008, null, !dbg !62
  br i1 %null_check1011, label %bail_out72, label %check_active1010, !dbg !62

continue1009:                                     ; preds = %check_active1010
  %stack_pos1012 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute1008, %"struct.rubinius::Object"** %stack_pos1012, !dbg !62
  %local_pos1013 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !62
  %stack_pos1014 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  %stack_load1015 = load %"struct.rubinius::Object"** %stack_pos1014, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1015, %"struct.rubinius::Object"** %local_pos1013, !dbg !62
  br label %ip195, !dbg !62

check_active1010:                                 ; preds = %ip183
  br label %continue1009, !dbg !62

continue1016:                                     ; No predecessors!
  br label %ip194, !dbg !62

ip195:                                            ; preds = %ip194, %continue1009
  %local_pos1017 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !63
  %local1018 = load %"struct.rubinius::Object"** %local_pos1017, !dbg !63, !rbx-classid !35
  %stack_pos1019 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %local1018, %"struct.rubinius::Object"** %stack_pos1019, !dbg !63
  %stack_pos1020 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1020, !dbg !63
  %stack_pos1021 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  %stack_load1022 = load %"struct.rubinius::Object"** %stack_pos1021, !dbg !63, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1022, %"struct.rubinius::Object"** %out_args_recv79, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !63
  store i32 1, i32* %out_args_total81, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !63
  %stack_pos1023 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos1023, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !63
  %cache_const1024 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565648 to %"struct.rubinius::CallSite"**), !dbg !63
  %execute_pos1025 = getelementptr %"struct.rubinius::CallSite"* %cache_const1024, i32 0, i32 2, !dbg !63
  %execute1026 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1025, !dbg !63
  store i32 199, i32* %ip_pos77, !dbg !63
  %call_site_execute1027 = call %"struct.rubinius::Object"* %execute1026(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1024, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1030 = icmp eq %"struct.rubinius::Object"* %call_site_execute1027, null, !dbg !63
  br i1 %null_check1030, label %bail_out72, label %check_active1029, !dbg !63

continue1028:                                     ; preds = %check_active1029
  %stack_pos1031 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %call_site_execute1027, %"struct.rubinius::Object"** %stack_pos1031, !dbg !63
  %stack_pos1032 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  %stack_load1033 = load %"struct.rubinius::Object"** %stack_pos1032, !dbg !63
  %stack_pos1034 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  store %"struct.rubinius::Object"* %stack_load1033, %"struct.rubinius::Object"** %stack_pos1034, !dbg !63
  %stack_pos1035 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  %stack_load1036 = load %"struct.rubinius::Object"** %stack_pos1035, !dbg !63
  %as_int1037 = ptrtoint %"struct.rubinius::Object"* %stack_load1036 to i64, !dbg !63
  %and1038 = and i64 %as_int1037, 15, !dbg !63
  %is_true1039 = icmp ne i64 %and1038, 10, !dbg !63
  br i1 %is_true1039, label %ip213, label %continue1040, !dbg !63

check_active1029:                                 ; preds = %ip195
  br label %continue1028, !dbg !63

continue1040:                                     ; preds = %continue1028
  br label %ip205, !dbg !63

ip205:                                            ; preds = %continue1040
  %local_pos1041 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !63
  %local1042 = load %"struct.rubinius::Object"** %local_pos1041, !dbg !63, !rbx-classid !35
  %stack_pos1043 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %local1042, %"struct.rubinius::Object"** %stack_pos1043, !dbg !63
  %self_pos1044 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !63
  %self1045 = load %"struct.rubinius::Object"** %self_pos1044, !dbg !63
  %obj_array1046 = bitcast %"struct.rubinius::Object"* %self1045 to %"struct.rubinius::Object"**, !dbg !63
  %field_pos1047 = getelementptr %"struct.rubinius::Object"** %obj_array1046, i32 3, !dbg !63
  %field1048 = load %"struct.rubinius::Object"** %field_pos1047, !dbg !63
  %stack_pos1049 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  store %"struct.rubinius::Object"* %field1048, %"struct.rubinius::Object"** %stack_pos1049, !dbg !63
  %stack_pos1050 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  %stack_load1051 = load %"struct.rubinius::Object"** %stack_pos1050, !dbg !63, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1051, %"struct.rubinius::Object"** %out_args_recv79, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !63
  store i32 1, i32* %out_args_total81, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !63
  %stack_pos1052 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos1052, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !63
  %cache_const1053 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565736 to %"struct.rubinius::CallSite"**), !dbg !63
  %execute_pos1054 = getelementptr %"struct.rubinius::CallSite"* %cache_const1053, i32 0, i32 2, !dbg !63
  %execute1055 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1054, !dbg !63
  store i32 210, i32* %ip_pos77, !dbg !63
  %call_site_execute1056 = call %"struct.rubinius::Object"* %execute1055(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1053, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1059 = icmp eq %"struct.rubinius::Object"* %call_site_execute1056, null, !dbg !63
  br i1 %null_check1059, label %bail_out72, label %check_active1058, !dbg !63

continue1057:                                     ; preds = %check_active1058
  %stack_pos1060 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %call_site_execute1056, %"struct.rubinius::Object"** %stack_pos1060, !dbg !63
  br label %ip213, !dbg !63

ip213:                                            ; preds = %continue1057, %continue1028
  %stack_pos1061 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  %stack_load1062 = load %"struct.rubinius::Object"** %stack_pos1061, !dbg !63
  %as_int1063 = ptrtoint %"struct.rubinius::Object"* %stack_load1062 to i64, !dbg !63
  %and1064 = and i64 %as_int1063, 15, !dbg !63
  %is_true1065 = icmp eq i64 %and1064, 10, !dbg !63
  br i1 %is_true1065, label %ip219, label %continue1066, !dbg !63

check_active1058:                                 ; preds = %ip205
  br label %continue1057, !dbg !63

continue1066:                                     ; preds = %ip213
  br label %ip215, !dbg !63

ip215:                                            ; preds = %continue1066
  %stack_pos1067 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1067, !dbg !63
  %stack_pos1068 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  %stack_load1069 = load %"struct.rubinius::Object"** %stack_pos1068, !dbg !63, !rbx-classid !29
  br label %return_pad45, !dbg !63

ip219:                                            ; preds = %ip213
  %stack_pos1070 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1070, !dbg !63
  %system_object1071 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !64
  %stack_pos1072 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !64
  store %"struct.rubinius::Object"* %system_object1071, %"struct.rubinius::Object"** %stack_pos1072, !dbg !64
  %local_pos1073 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !64
  %local1074 = load %"struct.rubinius::Object"** %local_pos1073, !dbg !64, !rbx-classid !26
  %stack_pos1075 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !64
  store %"struct.rubinius::Object"* %local1074, %"struct.rubinius::Object"** %stack_pos1075, !dbg !64
  %stack_pos1076 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !64
  %stack_load1077 = load %"struct.rubinius::Object"** %stack_pos1076, !dbg !64, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load1077, %"struct.rubinius::Object"** %out_args_recv79, !dbg !64
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !64
  store i32 0, i32* %out_args_total81, !dbg !64
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !64
  %cache_const1078 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565848 to %"struct.rubinius::CallSite"**), !dbg !64
  %execute_pos1079 = getelementptr %"struct.rubinius::CallSite"* %cache_const1078, i32 0, i32 2, !dbg !64
  %execute1080 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1079, !dbg !64
  store i32 224, i32* %ip_pos77, !dbg !64
  %call_site_execute1081 = call %"struct.rubinius::Object"* %execute1080(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1078, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !64
  %null_check1084 = icmp eq %"struct.rubinius::Object"* %call_site_execute1081, null, !dbg !64
  br i1 %null_check1084, label %bail_out72, label %check_active1083, !dbg !64

continue1082:                                     ; preds = %check_active1083
  %stack_pos1085 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !64
  store %"struct.rubinius::Object"* %call_site_execute1081, %"struct.rubinius::Object"** %stack_pos1085, !dbg !64
  %global_serial1086 = load i32* inttoptr (i64 22553876 to i32*), !dbg !64
  %constant_cache1087 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**), !dbg !64
  %constant_cache_pos1088 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i32 0, i32 4, !dbg !64
  %constant_scope1089 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1088, !dbg !64
  %scope_pos1090 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !64
  %frame_scope1091 = load %"struct.rubinius::ConstantScope"** %scope_pos1090, !dbg !64
  %same_scope1092 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1089, %frame_scope1091, !dbg !64
  br i1 %same_scope1092, label %check_serial1093, label %use_call1095, !dbg !64

check_active1083:                                 ; preds = %ip219
  br label %continue1082, !dbg !64

check_serial1093:                                 ; preds = %continue1082
  %serial_pos1097 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i32 0, i32 7, !dbg !64
  %serial1098 = load i32* %serial_pos1097, !dbg !64
  %use_cache1099 = icmp eq i32 %global_serial1086, %serial1098, !dbg !64
  br i1 %use_cache1099, label %use_cache1094, label %use_call1095, !dbg !64

use_cache1094:                                    ; preds = %check_serial1093
  %value_pos1100 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i32 0, i32 2, !dbg !64
  %cached_value1101 = load %"struct.rubinius::Object"** %value_pos1100, !dbg !64
  br label %continue1096, !dbg !64

use_call1095:                                     ; preds = %check_serial1093, %continue1082
  store i32 227, i32* %ip_pos77, !dbg !64
  %push_const_fast1102 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !64
  %null_check1105 = icmp eq %"struct.rubinius::Object"* %push_const_fast1102, null, !dbg !64
  br i1 %null_check1105, label %bail_out72, label %check_active1104, !dbg !64

continue1096:                                     ; preds = %continue1103, %use_cache1094
  %constant1106 = phi %"struct.rubinius::Object"* [ %cached_value1101, %use_cache1094 ], [ %push_const_fast1102, %continue1103 ], !dbg !64, !rbx-classid !65
  %stack_pos1107 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !64
  store %"struct.rubinius::Object"* %constant1106, %"struct.rubinius::Object"** %stack_pos1107, !dbg !64
  %stack_pos1108 = getelementptr %"struct.rubinius::Object"** %stack54, i32 3, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1108, !dbg !64
  %stack_pos1109 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !64
  %stack_load1110 = load %"struct.rubinius::Object"** %stack_pos1109, !dbg !64
  store %"struct.rubinius::Object"* %stack_load1110, %"struct.rubinius::Object"** %out_args_recv79, !dbg !64
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !64
  store i32 3, i32* %out_args_total81, !dbg !64
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !64
  %stack_pos1111 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !64
  store %"struct.rubinius::Object"** %stack_pos1111, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !64
  %cache_const1112 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565904 to %"struct.rubinius::CallSite"**), !dbg !64
  %execute_pos1113 = getelementptr %"struct.rubinius::CallSite"* %cache_const1112, i32 0, i32 2, !dbg !64
  %execute1114 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1113, !dbg !64
  store i32 231, i32* %ip_pos77, !dbg !64
  %call_site_execute1115 = call %"struct.rubinius::Object"* %execute1114(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1112, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !64
  %null_check1118 = icmp eq %"struct.rubinius::Object"* %call_site_execute1115, null, !dbg !64
  br i1 %null_check1118, label %bail_out72, label %check_active1117, !dbg !64

continue1103:                                     ; preds = %check_active1104
  br label %continue1096, !dbg !64

check_active1104:                                 ; preds = %use_call1095
  br label %continue1103, !dbg !64

continue1116:                                     ; preds = %check_active1117
  %stack_pos1119 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !64
  store %"struct.rubinius::Object"* %call_site_execute1115, %"struct.rubinius::Object"** %stack_pos1119, !dbg !64
  %local_pos1120 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !64
  %stack_pos1121 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !64
  %stack_load1122 = load %"struct.rubinius::Object"** %stack_pos1121, !dbg !64
  store %"struct.rubinius::Object"* %stack_load1122, %"struct.rubinius::Object"** %local_pos1120, !dbg !64
  %local_pos1123 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !66
  %local1124 = load %"struct.rubinius::Object"** %local_pos1123, !dbg !66, !rbx-classid !67
  %stack_pos1125 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  store %"struct.rubinius::Object"* %local1124, %"struct.rubinius::Object"** %stack_pos1125, !dbg !66
  %stack_pos1126 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1126, !dbg !66
  %stack_pos1127 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  %stack_load1128 = load %"struct.rubinius::Object"** %stack_pos1127, !dbg !66, !rbx-classid !67
  store %"struct.rubinius::Object"* %stack_load1128, %"struct.rubinius::Object"** %out_args_recv79, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !66
  store i32 1, i32* %out_args_total81, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !66
  %stack_pos1129 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos1129, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !66
  %cache_const1130 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565976 to %"struct.rubinius::CallSite"**), !dbg !66
  %execute_pos1131 = getelementptr %"struct.rubinius::CallSite"* %cache_const1130, i32 0, i32 2, !dbg !66
  %execute1132 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1131, !dbg !66
  store i32 240, i32* %ip_pos77, !dbg !66
  %call_site_execute1133 = call %"struct.rubinius::Object"* %execute1132(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1130, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1136 = icmp eq %"struct.rubinius::Object"* %call_site_execute1133, null, !dbg !66
  br i1 %null_check1136, label %bail_out72, label %check_active1135, !dbg !66

check_active1117:                                 ; preds = %continue1096
  br label %continue1116, !dbg !64

continue1134:                                     ; preds = %check_active1135
  %stack_pos1137 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1133, %"struct.rubinius::Object"** %stack_pos1137, !dbg !66
  %stack_pos1138 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  %stack_load1139 = load %"struct.rubinius::Object"** %stack_pos1138, !dbg !66
  %as_int1140 = ptrtoint %"struct.rubinius::Object"* %stack_load1139 to i64, !dbg !66
  %and1141 = and i64 %as_int1140, 15, !dbg !66
  %is_true1142 = icmp eq i64 %and1141, 10, !dbg !66
  br i1 %is_true1142, label %ip256, label %continue1143, !dbg !66

check_active1135:                                 ; preds = %continue1116
  br label %continue1134, !dbg !66

continue1143:                                     ; preds = %continue1134
  br label %ip245, !dbg !66

ip245:                                            ; preds = %continue1143
  %local_pos1144 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !66
  %local1145 = load %"struct.rubinius::Object"** %local_pos1144, !dbg !66, !rbx-classid !67
  %stack_pos1146 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  store %"struct.rubinius::Object"* %local1145, %"struct.rubinius::Object"** %stack_pos1146, !dbg !66
  %self_pos1147 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !66
  %self1148 = load %"struct.rubinius::Object"** %self_pos1147, !dbg !66
  %obj_array1149 = bitcast %"struct.rubinius::Object"* %self1148 to %"struct.rubinius::Object"**, !dbg !66
  %field_pos1150 = getelementptr %"struct.rubinius::Object"** %obj_array1149, i32 3, !dbg !66
  %field1151 = load %"struct.rubinius::Object"** %field_pos1150, !dbg !66
  %stack_pos1152 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %field1151, %"struct.rubinius::Object"** %stack_pos1152, !dbg !66
  %stack_pos1153 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  %stack_load1154 = load %"struct.rubinius::Object"** %stack_pos1153, !dbg !66, !rbx-classid !67
  store %"struct.rubinius::Object"* %stack_load1154, %"struct.rubinius::Object"** %out_args_recv79, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !66
  store i32 1, i32* %out_args_total81, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !66
  %stack_pos1155 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos1155, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !66
  %cache_const1156 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566048 to %"struct.rubinius::CallSite"**), !dbg !66
  %execute_pos1157 = getelementptr %"struct.rubinius::CallSite"* %cache_const1156, i32 0, i32 2, !dbg !66
  %execute1158 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1157, !dbg !66
  store i32 249, i32* %ip_pos77, !dbg !66
  %call_site_execute1159 = call %"struct.rubinius::Object"* %execute1158(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1156, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1162 = icmp eq %"struct.rubinius::Object"* %call_site_execute1159, null, !dbg !66
  br i1 %null_check1162, label %bail_out72, label %check_active1161, !dbg !66

continue1160:                                     ; preds = %check_active1161
  %stack_pos1163 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1159, %"struct.rubinius::Object"** %stack_pos1163, !dbg !66
  %local_pos1164 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !66
  %stack_pos1165 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  %stack_load1166 = load %"struct.rubinius::Object"** %stack_pos1165, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1166, %"struct.rubinius::Object"** %local_pos1164, !dbg !66
  br label %ip257, !dbg !66

check_active1161:                                 ; preds = %ip245
  br label %continue1160, !dbg !66

continue1167:                                     ; No predecessors!
  br label %ip256, !dbg !66

ip257:                                            ; preds = %ip256, %continue1160
  %local_pos1168 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !68
  %local1169 = load %"struct.rubinius::Object"** %local_pos1168, !dbg !68, !rbx-classid !26
  %stack_pos1170 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %local1169, %"struct.rubinius::Object"** %stack_pos1170, !dbg !68
  %stack_pos1171 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  %stack_load1172 = load %"struct.rubinius::Object"** %stack_pos1171, !dbg !68, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load1172, %"struct.rubinius::Object"** %out_args_recv79, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !68
  store i32 0, i32* %out_args_total81, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !68
  %cache_const1173 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566136 to %"struct.rubinius::CallSite"**), !dbg !68
  %execute_pos1174 = getelementptr %"struct.rubinius::CallSite"* %cache_const1173, i32 0, i32 2, !dbg !68
  %execute1175 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1174, !dbg !68
  store i32 260, i32* %ip_pos77, !dbg !68
  %call_site_execute1176 = call %"struct.rubinius::Object"* %execute1175(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1173, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check1179 = icmp eq %"struct.rubinius::Object"* %call_site_execute1176, null, !dbg !68
  br i1 %null_check1179, label %bail_out72, label %check_active1178, !dbg !68

continue1177:                                     ; preds = %check_active1178
  %stack_pos1180 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %call_site_execute1176, %"struct.rubinius::Object"** %stack_pos1180, !dbg !68
  %stack_pos1181 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  %stack_load1182 = load %"struct.rubinius::Object"** %stack_pos1181, !dbg !68
  %as_int1183 = ptrtoint %"struct.rubinius::Object"* %stack_load1182 to i64, !dbg !68
  %and1184 = and i64 %as_int1183, 15, !dbg !68
  %is_true1185 = icmp eq i64 %and1184, 10, !dbg !68
  br i1 %is_true1185, label %ip275, label %continue1186, !dbg !68

check_active1178:                                 ; preds = %ip257
  br label %continue1177, !dbg !68

continue1186:                                     ; preds = %continue1177
  br label %ip265, !dbg !68

ip265:                                            ; preds = %continue1186
  %local_pos1187 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !68
  %local1188 = load %"struct.rubinius::Object"** %local_pos1187, !dbg !68, !rbx-classid !67
  %stack_pos1189 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos1189, !dbg !68
  %stack_pos1190 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1190, !dbg !68
  %stack_pos1191 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  %stack_load1192 = load %"struct.rubinius::Object"** %stack_pos1191, !dbg !68, !rbx-classid !67
  store %"struct.rubinius::Object"* %stack_load1192, %"struct.rubinius::Object"** %out_args_recv79, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !68
  store i32 1, i32* %out_args_total81, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !68
  %stack_pos1193 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !68
  store %"struct.rubinius::Object"** %stack_pos1193, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !68
  %cache_const1194 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566200 to %"struct.rubinius::CallSite"**), !dbg !68
  %execute_pos1195 = getelementptr %"struct.rubinius::CallSite"* %cache_const1194, i32 0, i32 2, !dbg !68
  %execute1196 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1195, !dbg !68
  store i32 268, i32* %ip_pos77, !dbg !68
  %call_site_execute1197 = call %"struct.rubinius::Object"* %execute1196(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1194, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check1200 = icmp eq %"struct.rubinius::Object"* %call_site_execute1197, null, !dbg !68
  br i1 %null_check1200, label %bail_out72, label %check_active1199, !dbg !68

continue1198:                                     ; preds = %check_active1199
  %stack_pos1201 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %call_site_execute1197, %"struct.rubinius::Object"** %stack_pos1201, !dbg !68
  %local_pos1202 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !68
  %stack_pos1203 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  %stack_load1204 = load %"struct.rubinius::Object"** %stack_pos1203, !dbg !68
  store %"struct.rubinius::Object"* %stack_load1204, %"struct.rubinius::Object"** %local_pos1202, !dbg !68
  br label %ip276, !dbg !68

check_active1199:                                 ; preds = %ip265
  br label %continue1198, !dbg !68

continue1205:                                     ; No predecessors!
  br label %ip275, !dbg !68

ip276:                                            ; preds = %ip275, %continue1198
  %local_pos1206 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !69
  %local1207 = load %"struct.rubinius::Object"** %local_pos1206, !dbg !69, !rbx-classid !67
  %stack_pos1208 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %local1207, %"struct.rubinius::Object"** %stack_pos1208, !dbg !69
  %local_pos1209 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !69
  %local1210 = load %"struct.rubinius::Object"** %local_pos1209, !dbg !69, !rbx-classid !35
  %stack_pos1211 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %local1210, %"struct.rubinius::Object"** %stack_pos1211, !dbg !69
  %stack_pos1212 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  %stack_load1213 = load %"struct.rubinius::Object"** %stack_pos1212, !dbg !69, !rbx-classid !67
  store %"struct.rubinius::Object"* %stack_load1213, %"struct.rubinius::Object"** %out_args_recv79, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !69
  store i32 1, i32* %out_args_total81, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !69
  %stack_pos1214 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos1214, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !69
  %cache_const1215 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566304 to %"struct.rubinius::CallSite"**), !dbg !69
  %execute_pos1216 = getelementptr %"struct.rubinius::CallSite"* %cache_const1215, i32 0, i32 2, !dbg !69
  %execute1217 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1216, !dbg !69
  store i32 281, i32* %ip_pos77, !dbg !69
  %call_site_execute1218 = call %"struct.rubinius::Object"* %execute1217(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1215, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check1221 = icmp eq %"struct.rubinius::Object"* %call_site_execute1218, null, !dbg !69
  br i1 %null_check1221, label %bail_out72, label %check_active1220, !dbg !69

continue1219:                                     ; preds = %check_active1220
  %stack_pos1222 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %call_site_execute1218, %"struct.rubinius::Object"** %stack_pos1222, !dbg !69
  %stack_pos1223 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  %stack_load1224 = load %"struct.rubinius::Object"** %stack_pos1223, !dbg !69
  %as_int1225 = ptrtoint %"struct.rubinius::Object"* %stack_load1224 to i64, !dbg !69
  %and1226 = and i64 %as_int1225, 15, !dbg !69
  %is_true1227 = icmp eq i64 %and1226, 10, !dbg !69
  br i1 %is_true1227, label %ip296, label %continue1228, !dbg !69

check_active1220:                                 ; preds = %ip276
  br label %continue1219, !dbg !69

continue1228:                                     ; preds = %continue1219
  br label %ip286, !dbg !69

ip286:                                            ; preds = %continue1228
  %77 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !69
  %self1229 = load %"struct.rubinius::Object"** %77, !dbg !69, !rbx-classid !45
  %stack_pos1230 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %self1229, %"struct.rubinius::Object"** %stack_pos1230, !dbg !69
  %stack_pos1231 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1231, !dbg !69
  %stack_pos1232 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1232, !dbg !69
  %stack_pos1233 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  %stack_load1234 = load %"struct.rubinius::Object"** %stack_pos1233, !dbg !69, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load1234, %"struct.rubinius::Object"** %out_args_recv79, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !69
  store i32 2, i32* %out_args_total81, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !69
  %stack_pos1235 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos1235, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !69
  %cache_const1236 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566376 to %"struct.rubinius::CallSite"**), !dbg !69
  %execute_pos1237 = getelementptr %"struct.rubinius::CallSite"* %cache_const1236, i32 0, i32 2, !dbg !69
  %execute1238 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1237, !dbg !69
  store i32 290, i32* %ip_pos77, !dbg !69
  %call_site_execute1239 = call %"struct.rubinius::Object"* %execute1238(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1236, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check1242 = icmp eq %"struct.rubinius::Object"* %call_site_execute1239, null, !dbg !69
  br i1 %null_check1242, label %bail_out72, label %check_active1241, !dbg !69

continue1240:                                     ; preds = %check_active1241
  %stack_pos1243 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %call_site_execute1239, %"struct.rubinius::Object"** %stack_pos1243, !dbg !69
  %stack_pos1244 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  %stack_load1245 = load %"struct.rubinius::Object"** %stack_pos1244, !dbg !69
  br label %return_pad45, !dbg !69

ip296:                                            ; preds = %continue1219
  %stack_pos1246 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1246, !dbg !69
  %local_pos1247 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 4, !dbg !70
  %local1248 = load %"struct.rubinius::Object"** %local_pos1247, !dbg !70, !rbx-classid !67
  %stack_pos1249 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  store %"struct.rubinius::Object"* %local1248, %"struct.rubinius::Object"** %stack_pos1249, !dbg !70
  %local_pos1250 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !70
  %local1251 = load %"struct.rubinius::Object"** %local_pos1250, !dbg !70, !rbx-classid !35
  %stack_pos1252 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !70
  store %"struct.rubinius::Object"* %local1251, %"struct.rubinius::Object"** %stack_pos1252, !dbg !70
  %stack_pos1253 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  %stack_load1254 = load %"struct.rubinius::Object"** %stack_pos1253, !dbg !70, !rbx-classid !67
  store %"struct.rubinius::Object"* %stack_load1254, %"struct.rubinius::Object"** %out_args_recv79, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !70
  store i32 1, i32* %out_args_total81, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !70
  %stack_pos1255 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos1255, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !70
  %cache_const1256 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), !dbg !70
  %execute_pos1257 = getelementptr %"struct.rubinius::CallSite"* %cache_const1256, i32 0, i32 2, !dbg !70
  %execute1258 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1257, !dbg !70
  store i32 302, i32* %ip_pos77, !dbg !70
  %call_site_execute1259 = call %"struct.rubinius::Object"* %execute1258(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1256, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check1262 = icmp eq %"struct.rubinius::Object"* %call_site_execute1259, null, !dbg !70
  br i1 %null_check1262, label %bail_out72, label %check_active1261, !dbg !70

check_active1241:                                 ; preds = %ip286
  br label %continue1240, !dbg !69

continue1260:                                     ; preds = %check_active1261
  %stack_pos1263 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  store %"struct.rubinius::Object"* %call_site_execute1259, %"struct.rubinius::Object"** %stack_pos1263, !dbg !70
  %stack_pos1264 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1264, !dbg !70
  %stack_pos1265 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  %stack_load1266 = load %"struct.rubinius::Object"** %stack_pos1265, !dbg !70
  store %"struct.rubinius::Object"* %stack_load1266, %"struct.rubinius::Object"** %out_args_recv79, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !70
  store i32 1, i32* %out_args_total81, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !70
  %stack_pos1267 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos1267, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !70
  %cache_const1268 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566504 to %"struct.rubinius::CallSite"**), !dbg !70
  %execute_pos1269 = getelementptr %"struct.rubinius::CallSite"* %cache_const1268, i32 0, i32 2, !dbg !70
  %execute1270 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1269, !dbg !70
  store i32 306, i32* %ip_pos77, !dbg !70
  %call_site_execute1271 = call %"struct.rubinius::Object"* %execute1270(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1268, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check1274 = icmp eq %"struct.rubinius::Object"* %call_site_execute1271, null, !dbg !70
  br i1 %null_check1274, label %bail_out72, label %check_active1273, !dbg !70

check_active1261:                                 ; preds = %ip296
  br label %continue1260, !dbg !70

continue1272:                                     ; preds = %check_active1273
  %stack_pos1275 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  store %"struct.rubinius::Object"* %call_site_execute1271, %"struct.rubinius::Object"** %stack_pos1275, !dbg !70
  %local_pos1276 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !70
  %stack_pos1277 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !70
  %stack_load1278 = load %"struct.rubinius::Object"** %stack_pos1277, !dbg !70
  store %"struct.rubinius::Object"* %stack_load1278, %"struct.rubinius::Object"** %local_pos1276, !dbg !70
  br label %ip459, !dbg !70

check_active1273:                                 ; preds = %continue1260
  br label %continue1272, !dbg !70

continue1279:                                     ; No predecessors!
  br label %ip313, !dbg !70

ip275:                                            ; preds = %continue1205, %continue1177
  %stack_pos1280 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1280, !dbg !68
  br label %ip276, !dbg !68

ip256:                                            ; preds = %continue1167, %continue1134
  %stack_pos1281 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1281, !dbg !66
  br label %ip257, !dbg !66

ip194:                                            ; preds = %continue1016, %continue983
  %stack_pos1282 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1282, !dbg !62
  br label %ip195, !dbg !62

ip313:                                            ; preds = %continue1279, %continue910
  %local_pos1283 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !71
  %local1284 = load %"struct.rubinius::Object"** %local_pos1283, !dbg !71, !rbx-classid !26
  %stack_pos1285 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  store %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"** %stack_pos1285, !dbg !71
  %stack_pos1286 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  %stack_load1287 = load %"struct.rubinius::Object"** %stack_pos1286, !dbg !71, !rbx-classid !26
  %stack_pos1288 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %stack_load1287, %"struct.rubinius::Object"** %stack_pos1288, !dbg !71
  %global_serial1289 = load i32* inttoptr (i64 22553876 to i32*), !dbg !71
  %constant_cache1290 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**), !dbg !71
  %constant_cache_pos1291 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i32 0, i32 4, !dbg !71
  %constant_scope1292 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1291, !dbg !71
  %scope_pos1293 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !71
  %frame_scope1294 = load %"struct.rubinius::ConstantScope"** %scope_pos1293, !dbg !71
  %same_scope1295 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1292, %frame_scope1294, !dbg !71
  br i1 %same_scope1295, label %check_serial1296, label %use_call1298, !dbg !71

check_serial1296:                                 ; preds = %ip313
  %serial_pos1300 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i32 0, i32 7, !dbg !71
  %serial1301 = load i32* %serial_pos1300, !dbg !71
  %use_cache1302 = icmp eq i32 %global_serial1289, %serial1301, !dbg !71
  br i1 %use_cache1302, label %use_cache1297, label %use_call1298, !dbg !71

use_cache1297:                                    ; preds = %check_serial1296
  %value_pos1303 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i32 0, i32 2, !dbg !71
  %cached_value1304 = load %"struct.rubinius::Object"** %value_pos1303, !dbg !71
  br label %continue1299, !dbg !71

use_call1298:                                     ; preds = %check_serial1296, %ip313
  store i32 317, i32* %ip_pos77, !dbg !71
  %push_const_fast1305 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !71
  %null_check1308 = icmp eq %"struct.rubinius::Object"* %push_const_fast1305, null, !dbg !71
  br i1 %null_check1308, label %bail_out72, label %check_active1307, !dbg !71

continue1299:                                     ; preds = %continue1306, %use_cache1297
  %constant1309 = phi %"struct.rubinius::Object"* [ %cached_value1304, %use_cache1297 ], [ %push_const_fast1305, %continue1306 ], !dbg !71, !rbx-classid !72
  %stack_pos1310 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %constant1309, %"struct.rubinius::Object"** %stack_pos1310, !dbg !71
  %stack_pos1311 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !71
  %stack_load1312 = load %"struct.rubinius::Object"** %stack_pos1311, !dbg !71, !rbx-classid !72
  %stack_pos1313 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  %stack_load1314 = load %"struct.rubinius::Object"** %stack_pos1313, !dbg !71, !rbx-classid !26
  %stack_pos1315 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %stack_load1312, %"struct.rubinius::Object"** %stack_pos1315, !dbg !71
  %stack_pos1316 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %stack_load1314, %"struct.rubinius::Object"** %stack_pos1316, !dbg !71
  %stack_pos1317 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !71
  %stack_load1318 = load %"struct.rubinius::Object"** %stack_pos1317, !dbg !71, !rbx-classid !26
  %stack_pos1319 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  %stack_load1320 = load %"struct.rubinius::Object"** %stack_pos1319, !dbg !71, !rbx-classid !72
  %cast1325 = ptrtoint %"struct.rubinius::Object"* %stack_load1318 to i64, !dbg !71
  %masked1326 = and i64 %cast1325, 3, !dbg !71
  %is_reference1327 = icmp eq i64 %masked1326, 0, !dbg !71
  br i1 %is_reference1327, label %reference_block, label %class_verified_block, !dbg !71

continue1306:                                     ; preds = %check_active1307
  br label %continue1299, !dbg !71

check_active1307:                                 ; preds = %use_call1298
  br label %continue1306, !dbg !71

continue1321:                                     ; preds = %use_call1322, %negative1324, %positive1323
  %constant1352 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1323 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1324 ], [ %kind_of1351, %use_call1322 ], !dbg !71
  %stack_pos1353 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %constant1352, %"struct.rubinius::Object"** %stack_pos1353, !dbg !71
  %stack_pos1354 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  %stack_load1355 = load %"struct.rubinius::Object"** %stack_pos1354, !dbg !71
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %stack_load1355 to i64, !dbg !71
  %and1357 = and i64 %as_int1356, 15, !dbg !71
  %is_true1358 = icmp ne i64 %and1357, 10, !dbg !71
  br i1 %is_true1358, label %ip334, label %continue1359, !dbg !71

use_call1322:                                     ; preds = %is_false_block, %check_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1351 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1318, %"struct.rubinius::Object"* %stack_load1320) #0, !dbg !71
  br label %continue1321, !dbg !71

positive1323:                                     ; preds = %is_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_fixnum_block, %is_symbol_block, %reference_block
  br label %continue1321, !dbg !71

negative1324:                                     ; No predecessors!
  br label %continue1321, !dbg !71

class_verified_block:                             ; preds = %continue1299
  %word_pos1331 = getelementptr %"struct.rubinius::Object"* %stack_load1320, i32 0, i32 0, i32 0, i32 0, !dbg !71
  %flags1332 = load i64* %word_pos1331, !dbg !71
  %mask1333 = and i64 %flags1332, 255, !dbg !71
  %is_type1334 = icmp eq i64 %mask1333, 20, !dbg !71
  br i1 %is_type1334, label %check_symbol_block, label %use_call1322, !dbg !71

reference_block:                                  ; preds = %continue1299
  %class_pos1328 = getelementptr %"struct.rubinius::Object"* %stack_load1318, i32 0, i32 0, i32 1, !dbg !71
  %ref_class1329 = load %"struct.rubinius::Class"** %class_pos1328, !dbg !71
  %downcast1330 = bitcast %"struct.rubinius::Class"* %ref_class1329 to %"struct.rubinius::Object"*, !dbg !71
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1330, %stack_load1320, !dbg !71
  br i1 %check_class, label %positive1323, label %use_call1322, !dbg !71

check_symbol_block:                               ; preds = %class_verified_block
  %upcast1335 = bitcast %"struct.rubinius::Object"* %stack_load1320 to %"struct.rubinius::Class"*, !dbg !71
  %class_id_pos1336 = getelementptr %"struct.rubinius::Class"* %upcast1335, i32 0, i32 4, !dbg !71
  %class_id1337 = load i32* %class_id_pos1336, !dbg !71
  %cast1338 = ptrtoint %"struct.rubinius::Object"* %stack_load1318 to i64, !dbg !71
  %masked1339 = and i64 %cast1338, 7, !dbg !71
  %is_symbol = icmp eq i64 %masked1339, 6, !dbg !71
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !71

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1340 = icmp eq i32 %class_id1337, 39, !dbg !71
  br i1 %check_class_id1340, label %positive1323, label %use_call1322, !dbg !71

check_fixnum_block:                               ; preds = %check_symbol_block
  %cast1341 = ptrtoint %"struct.rubinius::Object"* %stack_load1318 to i64, !dbg !71
  %masked1342 = and i64 %cast1341, 1, !dbg !71
  %is_fixnum1343 = icmp eq i64 %masked1342, 1, !dbg !71
  br i1 %is_fixnum1343, label %is_fixnum_block, label %check_nil_block, !dbg !71

is_fixnum_block:                                  ; preds = %check_fixnum_block
  %check_class_id1344 = icmp eq i32 %class_id1337, 37, !dbg !71
  br i1 %check_class_id1344, label %positive1323, label %is_integer_block, !dbg !71

is_integer_block:                                 ; preds = %is_fixnum_block
  %check_class_id1345 = icmp eq i32 %class_id1337, 35, !dbg !71
  br i1 %check_class_id1345, label %positive1323, label %use_call1322, !dbg !71

check_nil_block:                                  ; preds = %check_fixnum_block
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load1318, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !71
  br i1 %is_immediate, label %is_nil_block, label %check_true_block, !dbg !71

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1346 = icmp eq i32 %class_id1337, 27, !dbg !71
  br i1 %check_class_id1346, label %positive1323, label %use_call1322, !dbg !71

check_true_block:                                 ; preds = %check_nil_block
  %is_immediate1347 = icmp eq %"struct.rubinius::Object"* %stack_load1318, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !71
  br i1 %is_immediate1347, label %is_true_block, label %check_false_block, !dbg !71

is_true_block:                                    ; preds = %check_true_block
  %check_class_id1348 = icmp eq i32 %class_id1337, 29, !dbg !71
  br i1 %check_class_id1348, label %positive1323, label %use_call1322, !dbg !71

check_false_block:                                ; preds = %check_true_block
  %is_immediate1349 = icmp eq %"struct.rubinius::Object"* %stack_load1318, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !71
  br i1 %is_immediate1349, label %is_false_block, label %use_call1322, !dbg !71

is_false_block:                                   ; preds = %check_false_block
  %check_class_id1350 = icmp eq i32 %class_id1337, 31, !dbg !71
  br i1 %check_class_id1350, label %positive1323, label %use_call1322, !dbg !71

continue1359:                                     ; preds = %continue1321
  br label %ip323, !dbg !71

ip323:                                            ; preds = %continue1359
  %system_object1360 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !71
  %stack_pos1361 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  store %"struct.rubinius::Object"* %system_object1360, %"struct.rubinius::Object"** %stack_pos1361, !dbg !71
  %local_pos1362 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 0, !dbg !71
  %local1363 = load %"struct.rubinius::Object"** %local_pos1362, !dbg !71, !rbx-classid !26
  %stack_pos1364 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %local1363, %"struct.rubinius::Object"** %stack_pos1364, !dbg !71
  %global_serial1365 = load i32* inttoptr (i64 22553876 to i32*), !dbg !71
  %constant_cache1366 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**), !dbg !71
  %constant_cache_pos1367 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i32 0, i32 4, !dbg !71
  %constant_scope1368 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1367, !dbg !71
  %scope_pos1369 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !71
  %frame_scope1370 = load %"struct.rubinius::ConstantScope"** %scope_pos1369, !dbg !71
  %same_scope1371 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1368, %frame_scope1370, !dbg !71
  br i1 %same_scope1371, label %check_serial1372, label %use_call1374, !dbg !71

check_serial1372:                                 ; preds = %ip323
  %serial_pos1376 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i32 0, i32 7, !dbg !71
  %serial1377 = load i32* %serial_pos1376, !dbg !71
  %use_cache1378 = icmp eq i32 %global_serial1365, %serial1377, !dbg !71
  br i1 %use_cache1378, label %use_cache1373, label %use_call1374, !dbg !71

use_cache1373:                                    ; preds = %check_serial1372
  %value_pos1379 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i32 0, i32 2, !dbg !71
  %cached_value1380 = load %"struct.rubinius::Object"** %value_pos1379, !dbg !71
  br label %continue1375, !dbg !71

use_call1374:                                     ; preds = %check_serial1372, %ip323
  store i32 327, i32* %ip_pos77, !dbg !71
  %push_const_fast1381 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !71
  %null_check1384 = icmp eq %"struct.rubinius::Object"* %push_const_fast1381, null, !dbg !71
  br i1 %null_check1384, label %bail_out72, label %check_active1383, !dbg !71

continue1375:                                     ; preds = %continue1382, %use_cache1373
  %constant1385 = phi %"struct.rubinius::Object"* [ %cached_value1380, %use_cache1373 ], [ %push_const_fast1381, %continue1382 ], !dbg !71, !rbx-classid !73
  %stack_pos1386 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %constant1385, %"struct.rubinius::Object"** %stack_pos1386, !dbg !71
  %stack_pos1387 = getelementptr %"struct.rubinius::Object"** %stack54, i32 3, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1387, !dbg !71
  %stack_pos1388 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  %stack_load1389 = load %"struct.rubinius::Object"** %stack_pos1388, !dbg !71
  store %"struct.rubinius::Object"* %stack_load1389, %"struct.rubinius::Object"** %out_args_recv79, !dbg !71
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !71
  store i32 3, i32* %out_args_total81, !dbg !71
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !71
  %stack_pos1390 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !71
  store %"struct.rubinius::Object"** %stack_pos1390, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !71
  %cache_const1391 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566704 to %"struct.rubinius::CallSite"**), !dbg !71
  %execute_pos1392 = getelementptr %"struct.rubinius::CallSite"* %cache_const1391, i32 0, i32 2, !dbg !71
  %execute1393 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1392, !dbg !71
  store i32 331, i32* %ip_pos77, !dbg !71
  %call_site_execute1394 = call %"struct.rubinius::Object"* %execute1393(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1391, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !71
  %null_check1397 = icmp eq %"struct.rubinius::Object"* %call_site_execute1394, null, !dbg !71
  br i1 %null_check1397, label %bail_out72, label %check_active1396, !dbg !71

continue1382:                                     ; preds = %check_active1383
  br label %continue1375, !dbg !71

check_active1383:                                 ; preds = %use_call1374
  br label %continue1382, !dbg !71

continue1395:                                     ; preds = %check_active1396
  %stack_pos1398 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  store %"struct.rubinius::Object"* %call_site_execute1394, %"struct.rubinius::Object"** %stack_pos1398, !dbg !71
  br label %ip334, !dbg !71

ip334:                                            ; preds = %continue1395, %continue1321
  %local_pos1399 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !71
  %stack_pos1400 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !71
  %stack_load1401 = load %"struct.rubinius::Object"** %stack_pos1400, !dbg !71
  store %"struct.rubinius::Object"* %stack_load1401, %"struct.rubinius::Object"** %local_pos1399, !dbg !71
  %local_pos1402 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !74
  %local1403 = load %"struct.rubinius::Object"** %local_pos1402, !dbg !74, !rbx-classid !35
  %stack_pos1404 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  store %"struct.rubinius::Object"* %local1403, %"struct.rubinius::Object"** %stack_pos1404, !dbg !74
  %stack_pos1405 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !74
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1405, !dbg !74
  %stack_pos1406 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  %stack_load1407 = load %"struct.rubinius::Object"** %stack_pos1406, !dbg !74, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1407, %"struct.rubinius::Object"** %out_args_recv79, !dbg !74
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !74
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !74
  store i32 1, i32* %out_args_total81, !dbg !74
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !74
  %stack_pos1408 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !74
  store %"struct.rubinius::Object"** %stack_pos1408, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !74
  %cache_const1409 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566776 to %"struct.rubinius::CallSite"**), !dbg !74
  %execute_pos1410 = getelementptr %"struct.rubinius::CallSite"* %cache_const1409, i32 0, i32 2, !dbg !74
  %execute1411 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1410, !dbg !74
  store i32 340, i32* %ip_pos77, !dbg !74
  %call_site_execute1412 = call %"struct.rubinius::Object"* %execute1411(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1409, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !74
  %null_check1415 = icmp eq %"struct.rubinius::Object"* %call_site_execute1412, null, !dbg !74
  br i1 %null_check1415, label %bail_out72, label %check_active1414, !dbg !74

check_active1396:                                 ; preds = %continue1375
  br label %continue1395, !dbg !71

continue1413:                                     ; preds = %check_active1414
  %stack_pos1416 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  store %"struct.rubinius::Object"* %call_site_execute1412, %"struct.rubinius::Object"** %stack_pos1416, !dbg !74
  %stack_pos1417 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  %stack_load1418 = load %"struct.rubinius::Object"** %stack_pos1417, !dbg !74
  %as_int1419 = ptrtoint %"struct.rubinius::Object"* %stack_load1418 to i64, !dbg !74
  %and1420 = and i64 %as_int1419, 15, !dbg !74
  %is_true1421 = icmp eq i64 %and1420, 10, !dbg !74
  br i1 %is_true1421, label %ip356, label %continue1422, !dbg !74

check_active1414:                                 ; preds = %ip334
  br label %continue1413, !dbg !74

continue1422:                                     ; preds = %continue1413
  br label %ip345, !dbg !74

ip345:                                            ; preds = %continue1422
  %local_pos1423 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !74
  %local1424 = load %"struct.rubinius::Object"** %local_pos1423, !dbg !74, !rbx-classid !35
  %stack_pos1425 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  store %"struct.rubinius::Object"* %local1424, %"struct.rubinius::Object"** %stack_pos1425, !dbg !74
  %self_pos1426 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !74
  %self1427 = load %"struct.rubinius::Object"** %self_pos1426, !dbg !74
  %obj_array1428 = bitcast %"struct.rubinius::Object"* %self1427 to %"struct.rubinius::Object"**, !dbg !74
  %field_pos1429 = getelementptr %"struct.rubinius::Object"** %obj_array1428, i32 3, !dbg !74
  %field1430 = load %"struct.rubinius::Object"** %field_pos1429, !dbg !74
  %stack_pos1431 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !74
  store %"struct.rubinius::Object"* %field1430, %"struct.rubinius::Object"** %stack_pos1431, !dbg !74
  %stack_pos1432 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  %stack_load1433 = load %"struct.rubinius::Object"** %stack_pos1432, !dbg !74, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1433, %"struct.rubinius::Object"** %out_args_recv79, !dbg !74
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !74
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !74
  store i32 1, i32* %out_args_total81, !dbg !74
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !74
  %stack_pos1434 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !74
  store %"struct.rubinius::Object"** %stack_pos1434, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !74
  %cache_const1435 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566848 to %"struct.rubinius::CallSite"**), !dbg !74
  %execute_pos1436 = getelementptr %"struct.rubinius::CallSite"* %cache_const1435, i32 0, i32 2, !dbg !74
  %execute1437 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1436, !dbg !74
  store i32 349, i32* %ip_pos77, !dbg !74
  %call_site_execute1438 = call %"struct.rubinius::Object"* %execute1437(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1435, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !74
  %null_check1441 = icmp eq %"struct.rubinius::Object"* %call_site_execute1438, null, !dbg !74
  br i1 %null_check1441, label %bail_out72, label %check_active1440, !dbg !74

continue1439:                                     ; preds = %check_active1440
  %stack_pos1442 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  store %"struct.rubinius::Object"* %call_site_execute1438, %"struct.rubinius::Object"** %stack_pos1442, !dbg !74
  %local_pos1443 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !74
  %stack_pos1444 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  %stack_load1445 = load %"struct.rubinius::Object"** %stack_pos1444, !dbg !74
  store %"struct.rubinius::Object"* %stack_load1445, %"struct.rubinius::Object"** %local_pos1443, !dbg !74
  br label %ip357, !dbg !74

check_active1440:                                 ; preds = %ip345
  br label %continue1439, !dbg !74

continue1446:                                     ; No predecessors!
  br label %ip356, !dbg !74

ip357:                                            ; preds = %ip356, %continue1439
  %local_pos1447 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !75
  %local1448 = load %"struct.rubinius::Object"** %local_pos1447, !dbg !75, !rbx-classid !24
  %stack_pos1449 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !75
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack_pos1449, !dbg !75
  %stack_pos1450 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !75
  %stack_load1451 = load %"struct.rubinius::Object"** %stack_pos1450, !dbg !75, !rbx-classid !24
  %as_int1452 = ptrtoint %"struct.rubinius::Object"* %stack_load1451 to i64, !dbg !75
  %and1453 = and i64 %as_int1452, 15, !dbg !75
  %is_true1454 = icmp eq i64 %and1453, 10, !dbg !75
  br i1 %is_true1454, label %ip386, label %continue1455, !dbg !75

continue1455:                                     ; preds = %ip357
  br label %ip362, !dbg !75

ip362:                                            ; preds = %continue1455
  %local_pos1456 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !76
  %local1457 = load %"struct.rubinius::Object"** %local_pos1456, !dbg !76, !rbx-classid !24
  %stack_pos1458 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %local1457, %"struct.rubinius::Object"** %stack_pos1458, !dbg !76
  %stack_pos1459 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  %stack_load1460 = load %"struct.rubinius::Object"** %stack_pos1459, !dbg !76, !rbx-classid !24
  %stack_pos1461 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %stack_load1460, %"struct.rubinius::Object"** %stack_pos1461, !dbg !76
  %global_serial1462 = load i32* inttoptr (i64 22553876 to i32*), !dbg !76
  %constant_cache1463 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**), !dbg !76
  %constant_cache_pos1464 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i32 0, i32 4, !dbg !76
  %constant_scope1465 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1464, !dbg !76
  %scope_pos1466 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !76
  %frame_scope1467 = load %"struct.rubinius::ConstantScope"** %scope_pos1466, !dbg !76
  %same_scope1468 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1465, %frame_scope1467, !dbg !76
  br i1 %same_scope1468, label %check_serial1469, label %use_call1471, !dbg !76

check_serial1469:                                 ; preds = %ip362
  %serial_pos1473 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i32 0, i32 7, !dbg !76
  %serial1474 = load i32* %serial_pos1473, !dbg !76
  %use_cache1475 = icmp eq i32 %global_serial1462, %serial1474, !dbg !76
  br i1 %use_cache1475, label %use_cache1470, label %use_call1471, !dbg !76

use_cache1470:                                    ; preds = %check_serial1469
  %value_pos1476 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i32 0, i32 2, !dbg !76
  %cached_value1477 = load %"struct.rubinius::Object"** %value_pos1476, !dbg !76
  br label %continue1472, !dbg !76

use_call1471:                                     ; preds = %check_serial1469, %ip362
  store i32 365, i32* %ip_pos77, !dbg !76
  %push_const_fast1478 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !76
  %null_check1481 = icmp eq %"struct.rubinius::Object"* %push_const_fast1478, null, !dbg !76
  br i1 %null_check1481, label %bail_out72, label %check_active1480, !dbg !76

continue1472:                                     ; preds = %continue1479, %use_cache1470
  %constant1482 = phi %"struct.rubinius::Object"* [ %cached_value1477, %use_cache1470 ], [ %push_const_fast1478, %continue1479 ], !dbg !76, !rbx-classid !77
  %stack_pos1483 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !76
  store %"struct.rubinius::Object"* %constant1482, %"struct.rubinius::Object"** %stack_pos1483, !dbg !76
  %stack_pos1484 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !76
  %stack_load1485 = load %"struct.rubinius::Object"** %stack_pos1484, !dbg !76, !rbx-classid !77
  %stack_pos1486 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  %stack_load1487 = load %"struct.rubinius::Object"** %stack_pos1486, !dbg !76, !rbx-classid !24
  %stack_pos1488 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %stack_load1485, %"struct.rubinius::Object"** %stack_pos1488, !dbg !76
  %stack_pos1489 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !76
  store %"struct.rubinius::Object"* %stack_load1487, %"struct.rubinius::Object"** %stack_pos1489, !dbg !76
  %stack_pos1490 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !76
  %stack_load1491 = load %"struct.rubinius::Object"** %stack_pos1490, !dbg !76, !rbx-classid !24
  %stack_pos1492 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  %stack_load1493 = load %"struct.rubinius::Object"** %stack_pos1492, !dbg !76, !rbx-classid !77
  %cast1511 = ptrtoint %"struct.rubinius::Object"* %stack_load1491 to i64, !dbg !76
  %masked1512 = and i64 %cast1511, 3, !dbg !76
  %is_reference1513 = icmp eq i64 %masked1512, 0, !dbg !76
  br i1 %is_reference1513, label %reference_block1499, label %class_verified_block1498, !dbg !76

continue1479:                                     ; preds = %check_active1480
  br label %continue1472, !dbg !76

check_active1480:                                 ; preds = %use_call1471
  br label %continue1479, !dbg !76

continue1494:                                     ; preds = %use_call1495, %negative1497, %positive1496
  %constant1541 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1496 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1497 ], [ %kind_of1540, %use_call1495 ], !dbg !76
  %stack_pos1542 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %constant1541, %"struct.rubinius::Object"** %stack_pos1542, !dbg !76
  %stack_pos1543 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  %stack_load1544 = load %"struct.rubinius::Object"** %stack_pos1543, !dbg !76
  %as_int1545 = ptrtoint %"struct.rubinius::Object"* %stack_load1544 to i64, !dbg !76
  %and1546 = and i64 %as_int1545, 15, !dbg !76
  %is_true1547 = icmp ne i64 %and1546, 10, !dbg !76
  br i1 %is_true1547, label %ip382, label %continue1548, !dbg !76

use_call1495:                                     ; preds = %is_false_block1510, %check_false_block1509, %is_true_block1508, %is_nil_block1506, %is_integer_block1504, %is_symbol_block1501, %class_verified_block1498, %reference_block1499
  %kind_of1540 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1491, %"struct.rubinius::Object"* %stack_load1493) #0, !dbg !76
  br label %continue1494, !dbg !76

positive1496:                                     ; preds = %is_false_block1510, %is_true_block1508, %is_nil_block1506, %is_integer_block1504, %is_fixnum_block1503, %is_symbol_block1501, %reference_block1499
  br label %continue1494, !dbg !76

negative1497:                                     ; No predecessors!
  br label %continue1494, !dbg !76

class_verified_block1498:                         ; preds = %continue1472
  %word_pos1518 = getelementptr %"struct.rubinius::Object"* %stack_load1493, i32 0, i32 0, i32 0, i32 0, !dbg !76
  %flags1519 = load i64* %word_pos1518, !dbg !76
  %mask1520 = and i64 %flags1519, 255, !dbg !76
  %is_type1521 = icmp eq i64 %mask1520, 20, !dbg !76
  br i1 %is_type1521, label %check_symbol_block1500, label %use_call1495, !dbg !76

reference_block1499:                              ; preds = %continue1472
  %class_pos1514 = getelementptr %"struct.rubinius::Object"* %stack_load1491, i32 0, i32 0, i32 1, !dbg !76
  %ref_class1515 = load %"struct.rubinius::Class"** %class_pos1514, !dbg !76
  %downcast1516 = bitcast %"struct.rubinius::Class"* %ref_class1515 to %"struct.rubinius::Object"*, !dbg !76
  %check_class1517 = icmp eq %"struct.rubinius::Object"* %downcast1516, %stack_load1493, !dbg !76
  br i1 %check_class1517, label %positive1496, label %use_call1495, !dbg !76

check_symbol_block1500:                           ; preds = %class_verified_block1498
  %upcast1522 = bitcast %"struct.rubinius::Object"* %stack_load1493 to %"struct.rubinius::Class"*, !dbg !76
  %class_id_pos1523 = getelementptr %"struct.rubinius::Class"* %upcast1522, i32 0, i32 4, !dbg !76
  %class_id1524 = load i32* %class_id_pos1523, !dbg !76
  %cast1525 = ptrtoint %"struct.rubinius::Object"* %stack_load1491 to i64, !dbg !76
  %masked1526 = and i64 %cast1525, 7, !dbg !76
  %is_symbol1527 = icmp eq i64 %masked1526, 6, !dbg !76
  br i1 %is_symbol1527, label %is_symbol_block1501, label %check_fixnum_block1502, !dbg !76

is_symbol_block1501:                              ; preds = %check_symbol_block1500
  %check_class_id1528 = icmp eq i32 %class_id1524, 39, !dbg !76
  br i1 %check_class_id1528, label %positive1496, label %use_call1495, !dbg !76

check_fixnum_block1502:                           ; preds = %check_symbol_block1500
  %cast1529 = ptrtoint %"struct.rubinius::Object"* %stack_load1491 to i64, !dbg !76
  %masked1530 = and i64 %cast1529, 1, !dbg !76
  %is_fixnum1531 = icmp eq i64 %masked1530, 1, !dbg !76
  br i1 %is_fixnum1531, label %is_fixnum_block1503, label %check_nil_block1505, !dbg !76

is_fixnum_block1503:                              ; preds = %check_fixnum_block1502
  %check_class_id1532 = icmp eq i32 %class_id1524, 37, !dbg !76
  br i1 %check_class_id1532, label %positive1496, label %is_integer_block1504, !dbg !76

is_integer_block1504:                             ; preds = %is_fixnum_block1503
  %check_class_id1533 = icmp eq i32 %class_id1524, 35, !dbg !76
  br i1 %check_class_id1533, label %positive1496, label %use_call1495, !dbg !76

check_nil_block1505:                              ; preds = %check_fixnum_block1502
  %is_immediate1534 = icmp eq %"struct.rubinius::Object"* %stack_load1491, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !76
  br i1 %is_immediate1534, label %is_nil_block1506, label %check_true_block1507, !dbg !76

is_nil_block1506:                                 ; preds = %check_nil_block1505
  %check_class_id1535 = icmp eq i32 %class_id1524, 27, !dbg !76
  br i1 %check_class_id1535, label %positive1496, label %use_call1495, !dbg !76

check_true_block1507:                             ; preds = %check_nil_block1505
  %is_immediate1536 = icmp eq %"struct.rubinius::Object"* %stack_load1491, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !76
  br i1 %is_immediate1536, label %is_true_block1508, label %check_false_block1509, !dbg !76

is_true_block1508:                                ; preds = %check_true_block1507
  %check_class_id1537 = icmp eq i32 %class_id1524, 29, !dbg !76
  br i1 %check_class_id1537, label %positive1496, label %use_call1495, !dbg !76

check_false_block1509:                            ; preds = %check_true_block1507
  %is_immediate1538 = icmp eq %"struct.rubinius::Object"* %stack_load1491, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !76
  br i1 %is_immediate1538, label %is_false_block1510, label %use_call1495, !dbg !76

is_false_block1510:                               ; preds = %check_false_block1509
  %check_class_id1539 = icmp eq i32 %class_id1524, 31, !dbg !76
  br i1 %check_class_id1539, label %positive1496, label %use_call1495, !dbg !76

continue1548:                                     ; preds = %continue1494
  br label %ip371, !dbg !76

ip371:                                            ; preds = %continue1548
  %system_object1549 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !76
  %stack_pos1550 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %system_object1549, %"struct.rubinius::Object"** %stack_pos1550, !dbg !76
  %local_pos1551 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 1, !dbg !76
  %local1552 = load %"struct.rubinius::Object"** %local_pos1551, !dbg !76, !rbx-classid !24
  %stack_pos1553 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %local1552, %"struct.rubinius::Object"** %stack_pos1553, !dbg !76
  %global_serial1554 = load i32* inttoptr (i64 22553876 to i32*), !dbg !76
  %constant_cache1555 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**), !dbg !76
  %constant_cache_pos1556 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i32 0, i32 4, !dbg !76
  %constant_scope1557 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1556, !dbg !76
  %scope_pos1558 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !76
  %frame_scope1559 = load %"struct.rubinius::ConstantScope"** %scope_pos1558, !dbg !76
  %same_scope1560 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1557, %frame_scope1559, !dbg !76
  br i1 %same_scope1560, label %check_serial1561, label %use_call1563, !dbg !76

check_serial1561:                                 ; preds = %ip371
  %serial_pos1565 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i32 0, i32 7, !dbg !76
  %serial1566 = load i32* %serial_pos1565, !dbg !76
  %use_cache1567 = icmp eq i32 %global_serial1554, %serial1566, !dbg !76
  br i1 %use_cache1567, label %use_cache1562, label %use_call1563, !dbg !76

use_cache1562:                                    ; preds = %check_serial1561
  %value_pos1568 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i32 0, i32 2, !dbg !76
  %cached_value1569 = load %"struct.rubinius::Object"** %value_pos1568, !dbg !76
  br label %continue1564, !dbg !76

use_call1563:                                     ; preds = %check_serial1561, %ip371
  store i32 375, i32* %ip_pos77, !dbg !76
  %push_const_fast1570 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !76
  %null_check1573 = icmp eq %"struct.rubinius::Object"* %push_const_fast1570, null, !dbg !76
  br i1 %null_check1573, label %bail_out72, label %check_active1572, !dbg !76

continue1564:                                     ; preds = %continue1571, %use_cache1562
  %constant1574 = phi %"struct.rubinius::Object"* [ %cached_value1569, %use_cache1562 ], [ %push_const_fast1570, %continue1571 ], !dbg !76, !rbx-classid !78
  %stack_pos1575 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !76
  store %"struct.rubinius::Object"* %constant1574, %"struct.rubinius::Object"** %stack_pos1575, !dbg !76
  %stack_pos1576 = getelementptr %"struct.rubinius::Object"** %stack54, i32 3, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1576, !dbg !76
  %stack_pos1577 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  %stack_load1578 = load %"struct.rubinius::Object"** %stack_pos1577, !dbg !76
  store %"struct.rubinius::Object"* %stack_load1578, %"struct.rubinius::Object"** %out_args_recv79, !dbg !76
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !76
  store i32 3, i32* %out_args_total81, !dbg !76
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !76
  %stack_pos1579 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !76
  store %"struct.rubinius::Object"** %stack_pos1579, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !76
  %cache_const1580 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567088 to %"struct.rubinius::CallSite"**), !dbg !76
  %execute_pos1581 = getelementptr %"struct.rubinius::CallSite"* %cache_const1580, i32 0, i32 2, !dbg !76
  %execute1582 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1581, !dbg !76
  store i32 379, i32* %ip_pos77, !dbg !76
  %call_site_execute1583 = call %"struct.rubinius::Object"* %execute1582(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1580, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !76
  %null_check1586 = icmp eq %"struct.rubinius::Object"* %call_site_execute1583, null, !dbg !76
  br i1 %null_check1586, label %bail_out72, label %check_active1585, !dbg !76

continue1571:                                     ; preds = %check_active1572
  br label %continue1564, !dbg !76

check_active1572:                                 ; preds = %use_call1563
  br label %continue1571, !dbg !76

continue1584:                                     ; preds = %check_active1585
  %stack_pos1587 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %call_site_execute1583, %"struct.rubinius::Object"** %stack_pos1587, !dbg !76
  br label %ip382, !dbg !76

ip382:                                            ; preds = %continue1584, %continue1494
  %local_pos1588 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 3, !dbg !76
  %stack_pos1589 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !76
  %stack_load1590 = load %"struct.rubinius::Object"** %stack_pos1589, !dbg !76
  store %"struct.rubinius::Object"* %stack_load1590, %"struct.rubinius::Object"** %local_pos1588, !dbg !76
  br label %ip459, !dbg !76

check_active1585:                                 ; preds = %continue1564
  br label %continue1584, !dbg !76

continue1591:                                     ; No predecessors!
  br label %ip386, !dbg !76

ip386:                                            ; preds = %continue1591, %ip357
  %local_pos1592 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !79
  %local1593 = load %"struct.rubinius::Object"** %local_pos1592, !dbg !79, !rbx-classid !35
  %stack_pos1594 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  store %"struct.rubinius::Object"* %local1593, %"struct.rubinius::Object"** %stack_pos1594, !dbg !79
  %self_pos1595 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !79
  %self1596 = load %"struct.rubinius::Object"** %self_pos1595, !dbg !79
  %obj_array1597 = bitcast %"struct.rubinius::Object"* %self1596 to %"struct.rubinius::Object"**, !dbg !79
  %field_pos1598 = getelementptr %"struct.rubinius::Object"** %obj_array1597, i32 3, !dbg !79
  %field1599 = load %"struct.rubinius::Object"** %field_pos1598, !dbg !79
  %stack_pos1600 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !79
  store %"struct.rubinius::Object"* %field1599, %"struct.rubinius::Object"** %stack_pos1600, !dbg !79
  %stack_pos1601 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  %stack_load1602 = load %"struct.rubinius::Object"** %stack_pos1601, !dbg !79, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load1602, %"struct.rubinius::Object"** %out_args_recv79, !dbg !79
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !79
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !79
  store i32 1, i32* %out_args_total81, !dbg !79
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !79
  %stack_pos1603 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !79
  store %"struct.rubinius::Object"** %stack_pos1603, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !79
  %cache_const1604 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567176 to %"struct.rubinius::CallSite"**), !dbg !79
  %execute_pos1605 = getelementptr %"struct.rubinius::CallSite"* %cache_const1604, i32 0, i32 2, !dbg !79
  %execute1606 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1605, !dbg !79
  store i32 390, i32* %ip_pos77, !dbg !79
  %call_site_execute1607 = call %"struct.rubinius::Object"* %execute1606(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1604, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !79
  %null_check1610 = icmp eq %"struct.rubinius::Object"* %call_site_execute1607, null, !dbg !79
  br i1 %null_check1610, label %bail_out72, label %check_active1609, !dbg !79

continue1608:                                     ; preds = %check_active1609
  %stack_pos1611 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  store %"struct.rubinius::Object"* %call_site_execute1607, %"struct.rubinius::Object"** %stack_pos1611, !dbg !79
  %stack_pos1612 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  %stack_load1613 = load %"struct.rubinius::Object"** %stack_pos1612, !dbg !79
  %as_int1614 = ptrtoint %"struct.rubinius::Object"* %stack_load1613 to i64, !dbg !79
  %and1615 = and i64 %as_int1614, 15, !dbg !79
  %is_true1616 = icmp eq i64 %and1615, 10, !dbg !79
  br i1 %is_true1616, label %ip399, label %continue1617, !dbg !79

check_active1609:                                 ; preds = %ip386
  br label %continue1608, !dbg !79

continue1617:                                     ; preds = %continue1608
  br label %ip395, !dbg !79

ip395:                                            ; preds = %continue1617
  %stack_pos1618 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1618, !dbg !79
  %stack_pos1619 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  %stack_load1620 = load %"struct.rubinius::Object"** %stack_pos1619, !dbg !79, !rbx-classid !29
  br label %return_pad45, !dbg !79

ip399:                                            ; preds = %continue1608
  %stack_pos1621 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !79
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1621, !dbg !79
  %78 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !80
  %stack_pos1622 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !80
  store %"struct.rubinius::Object"* %78, %"struct.rubinius::Object"** %stack_pos1622, !dbg !80
  %stack_pos1623 = getelementptr %"struct.rubinius::Object"** %stack54, i32 10, !dbg !80
  %stack_pos1624 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !80
  %stack_load1625 = load %"struct.rubinius::Object"** %stack_pos1624, !dbg !80
  store %"struct.rubinius::Object"* %stack_load1625, %"struct.rubinius::Object"** %stack_pos1623, !dbg !80
  br label %ip408, !dbg !80

ip408:                                            ; preds = %ip399
  %self_pos1628 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !81
  %self1629 = load %"struct.rubinius::Object"** %self_pos1628, !dbg !81
  %obj_array1630 = bitcast %"struct.rubinius::Object"* %self1629 to %"struct.rubinius::Object"**, !dbg !81
  %field_pos1631 = getelementptr %"struct.rubinius::Object"** %obj_array1630, i32 4, !dbg !81
  %field1632 = load %"struct.rubinius::Object"** %field_pos1631, !dbg !81
  %stack_pos1633 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !81
  store %"struct.rubinius::Object"* %field1632, %"struct.rubinius::Object"** %stack_pos1633, !dbg !81
  %self_pos1634 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 2, !dbg !81
  %self1635 = load %"struct.rubinius::Object"** %self_pos1634, !dbg !81
  %obj_array1636 = bitcast %"struct.rubinius::Object"* %self1635 to %"struct.rubinius::Object"**, !dbg !81
  %field_pos1637 = getelementptr %"struct.rubinius::Object"** %obj_array1636, i32 5, !dbg !81
  %field1638 = load %"struct.rubinius::Object"** %field_pos1637, !dbg !81
  %stack_pos1639 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !81
  store %"struct.rubinius::Object"* %field1638, %"struct.rubinius::Object"** %stack_pos1639, !dbg !81
  %local_pos1640 = getelementptr %"struct.rubinius::StackVariables"* %vars56, i32 0, i32 6, i32 2, !dbg !81
  %local1641 = load %"struct.rubinius::Object"** %local_pos1640, !dbg !81, !rbx-classid !35
  %stack_pos1642 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !81
  store %"struct.rubinius::Object"* %local1641, %"struct.rubinius::Object"** %stack_pos1642, !dbg !81
  %stack_pos1643 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !81
  %stack_load1644 = load %"struct.rubinius::Object"** %stack_pos1643, !dbg !81
  store %"struct.rubinius::Object"* %stack_load1644, %"struct.rubinius::Object"** %out_args_recv79, !dbg !81
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !81
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !81
  store i32 1, i32* %out_args_total81, !dbg !81
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !81
  %stack_pos1645 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !81
  store %"struct.rubinius::Object"** %stack_pos1645, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !81
  %cache_const1646 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567368 to %"struct.rubinius::CallSite"**), !dbg !81
  %execute_pos1647 = getelementptr %"struct.rubinius::CallSite"* %cache_const1646, i32 0, i32 2, !dbg !81
  %execute1648 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1647, !dbg !81
  store i32 414, i32* %ip_pos77, !dbg !81
  %call_site_execute1649 = call %"struct.rubinius::Object"* %execute1648(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1646, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !81
  %null_check1652 = icmp eq %"struct.rubinius::Object"* %call_site_execute1649, null, !dbg !81
  br i1 %null_check1652, label %is_exception1626, label %check_active1651, !dbg !81

is_exception1626:                                 ; preds = %continue1650, %ip408
  %rae1627 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !80
  br i1 %rae1627, label %ip424, label %bail_out72, !dbg !80

continue1650:                                     ; preds = %check_active1651
  %stack_pos1653 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !81
  store %"struct.rubinius::Object"* %call_site_execute1649, %"struct.rubinius::Object"** %stack_pos1653, !dbg !81
  %stack_pos1654 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !81
  %stack_load1655 = load %"struct.rubinius::Object"** %stack_pos1654, !dbg !81
  store %"struct.rubinius::Object"* %stack_load1655, %"struct.rubinius::Object"** %out_args_recv79, !dbg !81
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !81
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !81
  store i32 1, i32* %out_args_total81, !dbg !81
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !81
  %stack_pos1656 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !81
  store %"struct.rubinius::Object"** %stack_pos1656, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !81
  %cache_const1657 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567392 to %"struct.rubinius::CallSite"**), !dbg !81
  %execute_pos1658 = getelementptr %"struct.rubinius::CallSite"* %cache_const1657, i32 0, i32 2, !dbg !81
  %execute1659 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1658, !dbg !81
  store i32 417, i32* %ip_pos77, !dbg !81
  %call_site_execute1660 = call %"struct.rubinius::Object"* %execute1659(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1657, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !81
  %null_check1663 = icmp eq %"struct.rubinius::Object"* %call_site_execute1660, null, !dbg !81
  br i1 %null_check1663, label %is_exception1626, label %check_active1662, !dbg !81

check_active1651:                                 ; preds = %ip408
  br label %continue1650, !dbg !81

continue1661:                                     ; preds = %check_active1662
  %stack_pos1664 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !81
  store %"struct.rubinius::Object"* %call_site_execute1660, %"struct.rubinius::Object"** %stack_pos1664, !dbg !81
  %stack_pos1665 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !81
  %stack_load1666 = load %"struct.rubinius::Object"** %stack_pos1665, !dbg !81
  br label %return_pad45, !dbg !81

ip424:                                            ; preds = %is_exception1626
  %79 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !41
  %stack_pos1667 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %79, %"struct.rubinius::Object"** %stack_pos1667, !dbg !41
  %stack_pos1668 = getelementptr %"struct.rubinius::Object"** %stack54, i32 9, !dbg !41
  %stack_pos1669 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  %stack_load1670 = load %"struct.rubinius::Object"** %stack_pos1669, !dbg !41
  store %"struct.rubinius::Object"* %stack_load1670, %"struct.rubinius::Object"** %stack_pos1668, !dbg !41
  %ce1671 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !41
  %stack_pos1672 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %ce1671, %"struct.rubinius::Object"** %stack_pos1672, !dbg !41
  %stack_pos1673 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !82
  %stack_load1674 = load %"struct.rubinius::Object"** %stack_pos1673, !dbg !82
  %stack_pos1675 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  store %"struct.rubinius::Object"* %stack_load1674, %"struct.rubinius::Object"** %stack_pos1675, !dbg !82
  %global_serial1676 = load i32* inttoptr (i64 22553876 to i32*), !dbg !82
  %constant_cache1677 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**), !dbg !82
  %constant_cache_pos1678 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i32 0, i32 4, !dbg !82
  %constant_scope1679 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1678, !dbg !82
  %scope_pos1680 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !82
  %frame_scope1681 = load %"struct.rubinius::ConstantScope"** %scope_pos1680, !dbg !82
  %same_scope1682 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1679, %frame_scope1681, !dbg !82
  br i1 %same_scope1682, label %check_serial1683, label %use_call1685, !dbg !82

check_active1662:                                 ; preds = %continue1650
  br label %continue1661, !dbg !81

check_serial1683:                                 ; preds = %ip424
  %serial_pos1687 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i32 0, i32 7, !dbg !82
  %serial1688 = load i32* %serial_pos1687, !dbg !82
  %use_cache1689 = icmp eq i32 %global_serial1676, %serial1688, !dbg !82
  br i1 %use_cache1689, label %use_cache1684, label %use_call1685, !dbg !82

use_cache1684:                                    ; preds = %check_serial1683
  %value_pos1690 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i32 0, i32 2, !dbg !82
  %cached_value1691 = load %"struct.rubinius::Object"** %value_pos1690, !dbg !82
  br label %continue1686, !dbg !82

use_call1685:                                     ; preds = %check_serial1683, %ip424
  store i32 430, i32* %ip_pos77, !dbg !82
  %push_const_fast1692 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !82
  %null_check1695 = icmp eq %"struct.rubinius::Object"* %push_const_fast1692, null, !dbg !82
  br i1 %null_check1695, label %bail_out72, label %check_active1694, !dbg !82

continue1686:                                     ; preds = %continue1693, %use_cache1684
  %constant1696 = phi %"struct.rubinius::Object"* [ %cached_value1691, %use_cache1684 ], [ %push_const_fast1692, %continue1693 ], !dbg !82, !rbx-classid !83
  %stack_pos1697 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  store %"struct.rubinius::Object"* %constant1696, %"struct.rubinius::Object"** %stack_pos1697, !dbg !82
  %stack_pos1698 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  %stack_load1699 = load %"struct.rubinius::Object"** %stack_pos1698, !dbg !82, !rbx-classid !83
  %global_serial1700 = load i32* inttoptr (i64 22553876 to i32*), !dbg !82
  %constant_cache1701 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), !dbg !82
  %constant_cache_pos1702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i32 0, i32 4, !dbg !82
  %constant_scope1703 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1702, !dbg !82
  %scope_pos1704 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i32 0, i32 1, !dbg !82
  %frame_scope1705 = load %"struct.rubinius::ConstantScope"** %scope_pos1704, !dbg !82
  %same_scope1706 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1703, %frame_scope1705, !dbg !82
  br i1 %same_scope1706, label %check_serial1707, label %use_call1710, !dbg !82

continue1693:                                     ; preds = %check_active1694
  br label %continue1686, !dbg !82

check_active1694:                                 ; preds = %use_call1685
  br label %continue1693, !dbg !82

check_serial1707:                                 ; preds = %continue1686
  %serial_pos1712 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i32 0, i32 7, !dbg !82
  %serial1713 = load i32* %serial_pos1712, !dbg !82
  %use_under1714 = icmp eq i32 %global_serial1700, %serial1713, !dbg !82
  br i1 %use_under1714, label %check_under1708, label %use_call1710, !dbg !82

check_under1708:                                  ; preds = %check_serial1707
  %value_pos1715 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i32 0, i32 3, !dbg !82
  %cached_under1716 = load %"struct.rubinius::Module"** %value_pos1715, !dbg !82
  %downcast1717 = bitcast %"struct.rubinius::Module"* %cached_under1716 to %"struct.rubinius::Object"*, !dbg !82
  %use_cache1718 = icmp eq %"struct.rubinius::Object"* %downcast1717, %stack_load1699, !dbg !82
  br i1 %use_cache1718, label %use_cache1709, label %use_call1710, !dbg !82

use_cache1709:                                    ; preds = %check_under1708
  %value_pos1719 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i32 0, i32 2, !dbg !82
  %cached_value1720 = load %"struct.rubinius::Object"** %value_pos1719, !dbg !82
  br label %continue1711, !dbg !82

use_call1710:                                     ; preds = %check_under1708, %check_serial1707, %continue1686
  store i32 432, i32* %ip_pos77, !dbg !82
  %constant1721 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1699) #0, !dbg !82
  %null_check1724 = icmp eq %"struct.rubinius::Object"* %constant1721, null, !dbg !82
  br i1 %null_check1724, label %bail_out72, label %check_active1723, !dbg !82

continue1711:                                     ; preds = %continue1722, %use_cache1709
  %constant1725 = phi %"struct.rubinius::Object"* [ %cached_value1720, %use_cache1709 ], [ %constant1721, %continue1722 ], !dbg !82, !rbx-classid !84
  %stack_pos1726 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  store %"struct.rubinius::Object"* %constant1725, %"struct.rubinius::Object"** %stack_pos1726, !dbg !82
  %stack_pos1727 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  %stack_load1728 = load %"struct.rubinius::Object"** %stack_pos1727, !dbg !82, !rbx-classid !84
  %stack_pos1729 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  %stack_load1730 = load %"struct.rubinius::Object"** %stack_pos1729, !dbg !82
  %stack_pos1731 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  store %"struct.rubinius::Object"* %stack_load1728, %"struct.rubinius::Object"** %stack_pos1731, !dbg !82
  %stack_pos1732 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  store %"struct.rubinius::Object"* %stack_load1730, %"struct.rubinius::Object"** %stack_pos1732, !dbg !82
  %stack_pos1733 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  %stack_load1734 = load %"struct.rubinius::Object"** %stack_pos1733, !dbg !82, !rbx-classid !84
  store %"struct.rubinius::Object"* %stack_load1734, %"struct.rubinius::Object"** %out_args_recv79, !dbg !82
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name78, !dbg !82
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block80, !dbg !82
  store i32 1, i32* %out_args_total81, !dbg !82
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container83, !dbg !82
  %stack_pos1735 = getelementptr %"struct.rubinius::Object"** %stack54, i32 2, !dbg !82
  store %"struct.rubinius::Object"** %stack_pos1735, %"struct.rubinius::Object"*** %out_args_arguments82, !dbg !82
  %cache_const1736 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567536 to %"struct.rubinius::CallSite"**), !dbg !82
  %execute_pos1737 = getelementptr %"struct.rubinius::CallSite"* %cache_const1736, i32 0, i32 2, !dbg !82
  %execute1738 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1737, !dbg !82
  store i32 435, i32* %ip_pos77, !dbg !82
  %call_site_execute1739 = call %"struct.rubinius::Object"* %execute1738(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1736, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !82
  %null_check1742 = icmp eq %"struct.rubinius::Object"* %call_site_execute1739, null, !dbg !82
  br i1 %null_check1742, label %bail_out72, label %check_active1741, !dbg !82

continue1722:                                     ; preds = %check_active1723
  br label %continue1711, !dbg !82

check_active1723:                                 ; preds = %use_call1710
  br label %continue1722, !dbg !82

continue1740:                                     ; preds = %check_active1741
  %stack_pos1743 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  store %"struct.rubinius::Object"* %call_site_execute1739, %"struct.rubinius::Object"** %stack_pos1743, !dbg !82
  %stack_pos1744 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !82
  %stack_load1745 = load %"struct.rubinius::Object"** %stack_pos1744, !dbg !82
  %as_int1746 = ptrtoint %"struct.rubinius::Object"* %stack_load1745 to i64, !dbg !82
  %and1747 = and i64 %as_int1746, 15, !dbg !82
  %is_true1748 = icmp ne i64 %and1747, 10, !dbg !82
  br i1 %is_true1748, label %ip442, label %continue1749, !dbg !82

check_active1741:                                 ; preds = %continue1711
  br label %continue1740, !dbg !82

continue1749:                                     ; preds = %continue1740
  br label %ip440, !dbg !82

ip440:                                            ; preds = %continue1749
  br label %ip451, !dbg !82

continue1750:                                     ; No predecessors!
  br label %ip442, !dbg !82

ip451:                                            ; preds = %ip440
  %stack_pos1751 = getelementptr %"struct.rubinius::Object"** %stack54, i32 9, !dbg !85
  %stack_local1752 = load %"struct.rubinius::Object"** %stack_pos1751, !dbg !85
  %stack_pos1753 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !85
  store %"struct.rubinius::Object"* %stack_local1752, %"struct.rubinius::Object"** %stack_pos1753, !dbg !85
  %stack_pos1754 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !85
  %stack_load1755 = load %"struct.rubinius::Object"** %stack_pos1754, !dbg !85
  %80 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load1755), !dbg !85
  br label %bail_out72, !dbg !85

continue1756:                                     ; No predecessors!
  br label %ip442, !dbg !82

ip442:                                            ; preds = %continue1756, %continue1750, %continue1740
  %stack_pos1757 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !85
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1757, !dbg !85
  %stack_pos1758 = getelementptr %"struct.rubinius::Object"** %stack54, i32 10, !dbg !85
  %stack_local1759 = load %"struct.rubinius::Object"** %stack_pos1758, !dbg !85
  %stack_pos1760 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !85
  store %"struct.rubinius::Object"* %stack_local1759, %"struct.rubinius::Object"** %stack_pos1760, !dbg !85
  %stack_pos1761 = getelementptr %"struct.rubinius::Object"** %stack54, i32 1, !dbg !85
  %stack_load1762 = load %"struct.rubinius::Object"** %stack_pos1761, !dbg !85
  %81 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load1762), !dbg !85
  %stack_pos1763 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !85
  %stack_load1764 = load %"struct.rubinius::Object"** %stack_pos1763, !dbg !85, !rbx-classid !29
  br label %return_pad45, !dbg !85

ip356:                                            ; preds = %continue1446, %continue1413
  %stack_pos1765 = getelementptr %"struct.rubinius::Object"** %stack54, i32 0, !dbg !74
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1765, !dbg !74
  br label %ip357, !dbg !74

return_pad45:                                     ; preds = %ip442, %continue1661, %ip395, %continue1240, %ip215, %ip130, %continue764, %serial_fallback763, %class_fallback762, %serial_fallback725, %ip83, %serial_fallback671, %continue634, %serial_fallback633, %serial_fallback592, %serial_fallback527, %serial_fallback483, %ip518, %serial_fallback442, %ip502, %continue426, %serial_fallback360, %ip468, %serial_fallback316, %serial_fallback178, %serial_fallback143, %serial_fallback115, %class_fallback114, %ret_raise_val74, %ret_null75
  %return_phi46 = phi %"struct.rubinius::Object"* [ null, %ret_null75 ], [ %crv76, %ret_raise_val74 ], [ %39, %class_fallback114 ], [ %40, %serial_fallback115 ], [ %41, %serial_fallback143 ], [ %43, %serial_fallback178 ], [ %46, %serial_fallback316 ], [ %stack_load348, %ip468 ], [ %48, %serial_fallback360 ], [ %stack_load431, %continue426 ], [ %stack_load435, %ip502 ], [ %51, %serial_fallback442 ], [ %stack_load474, %ip518 ], [ %53, %serial_fallback483 ], [ %56, %serial_fallback527 ], [ %59, %serial_fallback592 ], [ %63, %serial_fallback633 ], [ %stack_load659, %continue634 ], [ %64, %serial_fallback671 ], [ %stack_load703, %ip83 ], [ %67, %serial_fallback725 ], [ %70, %class_fallback762 ], [ %71, %serial_fallback763 ], [ %stack_load778, %continue764 ], [ %stack_load870, %ip130 ], [ %stack_load1069, %ip215 ], [ %stack_load1245, %continue1240 ], [ %stack_load1620, %ip395 ], [ %stack_load1666, %continue1661 ], [ %stack_load1764, %ip442 ]
  %null_check1768 = icmp eq %"struct.rubinius::Object"* %return_phi46, null, !dbg !25
  br i1 %null_check1768, label %bail_out, label %check_active1767, !dbg !25

continue1766:                                     ; preds = %check_active1767
  %stack_pos1769 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !25
  store %"struct.rubinius::Object"* %return_phi46, %"struct.rubinius::Object"** %stack_pos1769, !dbg !25
  br label %continue39, !dbg !25

check_active1767:                                 ; preds = %return_pad45
  br label %continue1766, !dbg !25

continue1773:                                     ; preds = %visit_push_ivar_fallback, %correct_class1780
  %local_pos1792 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !27
  %local1793 = load %"struct.rubinius::Object"** %local_pos1792, !dbg !27, !rbx-classid !67
  %stack_pos1794 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %local1793, %"struct.rubinius::Object"** %stack_pos1794, !dbg !27
  %stack_pos1798 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load1799 = load %"struct.rubinius::Object"** %stack_pos1798, !dbg !27, !rbx-classid !67
  %cast1800 = ptrtoint %"struct.rubinius::Object"* %stack_load1799 to i64, !dbg !27
  %masked1801 = and i64 %cast1800, 3, !dbg !27
  %is_reference1802 = icmp eq i64 %masked1801, 0, !dbg !27
  br i1 %is_reference1802, label %check_class_id1803, label %class_fallback1795, !dbg !27

check_class_id1779:                               ; preds = %continue39
  %class_pos1781 = getelementptr %"struct.rubinius::Object"* %self1775, i32 0, i32 0, i32 1, !dbg !27
  %ref_class1782 = load %"struct.rubinius::Class"** %class_pos1781, !dbg !27
  %class_id_pos1783 = getelementptr %"struct.rubinius::Class"* %ref_class1782, i32 0, i32 4, !dbg !27
  %class_id1784 = load i32* %class_id_pos1783, !dbg !27
  %check_class_id1785 = icmp eq i32 %class_id1784, 1285, !dbg !27
  br i1 %check_class_id1785, label %correct_class1780, label %visit_push_ivar_fallback, !dbg !27

correct_class1780:                                ; preds = %check_class_id1779
  %obj_array1786 = bitcast %"struct.rubinius::Object"* %self1775 to %"struct.rubinius::Object"**, !dbg !27
  %field_pos1787 = getelementptr %"struct.rubinius::Object"** %obj_array1786, i32 3, !dbg !27
  %field1788 = load %"struct.rubinius::Object"** %field_pos1787, !dbg !27
  %prune_undef = icmp eq %"struct.rubinius::Object"* %field1788, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !27
  %"select ivar" = select i1 %prune_undef, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1788, !dbg !27
  %stack_pos1789 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %"select ivar", %"struct.rubinius::Object"** %stack_pos1789, !dbg !27
  br label %continue1773, !dbg !27

visit_push_ivar_fallback:                         ; preds = %check_class_id1779, %continue39
  %82 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !27
  %self1790 = load %"struct.rubinius::Object"** %82, !dbg !27
  %ivar = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1790, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !27
  %stack_pos1791 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %ivar, %"struct.rubinius::Object"** %stack_pos1791, !dbg !27
  br label %continue1773, !dbg !27

continue1797:                                     ; preds = %correct_serial1805
  %stack_pos1825 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load1826 = load %"struct.rubinius::Object"** %stack_pos1825, !dbg !27
  %cast1827 = ptrtoint %"struct.rubinius::Object"* %stack_load1826 to i64, !dbg !27
  %masked1828 = and i64 %cast1827, 3, !dbg !27
  %is_reference1829 = icmp eq i64 %masked1828, 0, !dbg !27
  br i1 %is_reference1829, label %check_class_id1830, label %class_fallback1822, !dbg !27

check_class_id1803:                               ; preds = %continue1773
  %class_pos1806 = getelementptr %"struct.rubinius::Object"* %stack_load1799, i32 0, i32 0, i32 1, !dbg !27
  %ref_class1807 = load %"struct.rubinius::Class"** %class_pos1806, !dbg !27
  %class_id_pos1808 = getelementptr %"struct.rubinius::Class"* %ref_class1807, i32 0, i32 4, !dbg !27
  %class_id1809 = load i32* %class_id_pos1808, !dbg !27
  %check_class_id1810 = icmp eq i32 %class_id1809, 1285, !dbg !27
  br i1 %check_class_id1810, label %correct_class1804, label %class_fallback1795, !dbg !27

correct_class1804:                                ; preds = %check_class_id1803
  %serial_id_pos1811 = getelementptr %"struct.rubinius::Class"* %ref_class1807, i32 0, i32 5, !dbg !27
  %serial_id1812 = load i32* %serial_id_pos1811, !dbg !27
  %check_serial_id1813 = icmp eq i32 %serial_id1812, 2, !dbg !27
  br i1 %check_serial_id1813, label %correct_serial1805, label %serial_fallback1796, !dbg !27

class_fallback1795:                               ; preds = %check_class_id1803, %continue1773
  store i32 23, i32* %ip_pos, !dbg !27
  %83 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !27
  br label %return_pad, !dbg !27

correct_serial1805:                               ; preds = %correct_class1804
  %stack_pos1814 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load1815 = load %"struct.rubinius::Object"** %stack_pos1814, !dbg !27, !rbx-classid !67
  %obj_array1816 = bitcast %"struct.rubinius::Object"* %stack_load1815 to %"struct.rubinius::Object"**, !dbg !27
  %field_pos1817 = getelementptr %"struct.rubinius::Object"** %obj_array1816, i32 3, !dbg !27
  %field1818 = load %"struct.rubinius::Object"** %field_pos1817, !dbg !27
  %prune_undef1819 = icmp eq %"struct.rubinius::Object"* %field1818, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !27
  %"select ivar1820" = select i1 %prune_undef1819, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1818, !dbg !27
  %stack_pos1821 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %"select ivar1820", %"struct.rubinius::Object"** %stack_pos1821, !dbg !27
  br label %continue1797, !dbg !27

serial_fallback1796:                              ; preds = %correct_class1804
  store i32 23, i32* %ip_pos, !dbg !27
  %84 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue1824:                                     ; preds = %check_active1870, %continue1854
  %send_result1872 = phi %"struct.rubinius::Object"* [ %89, %continue1854 ], [ %call_site_execute1869, %check_active1870 ], !dbg !27
  %stack_pos1873 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result1872, %"struct.rubinius::Object"** %stack_pos1873, !dbg !27
  %local_pos1874 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 5, !dbg !27
  %stack_pos1875 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load1876 = load %"struct.rubinius::Object"** %stack_pos1875, !dbg !27
  store %"struct.rubinius::Object"* %stack_load1876, %"struct.rubinius::Object"** %local_pos1874, !dbg !27
  %stack_pos1879 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1879, !dbg !86
  %85 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !86
  %self1880 = load %"struct.rubinius::Object"** %85, !dbg !86
  %cast1881 = ptrtoint %"struct.rubinius::Object"* %self1880 to i64, !dbg !86
  %masked1882 = and i64 %cast1881, 3, !dbg !86
  %is_reference1883 = icmp eq i64 %masked1882, 0, !dbg !86
  br i1 %is_reference1883, label %check_class_id1884, label %visit_push_ivar_fallback1877, !dbg !86

check_class_id1830:                               ; preds = %continue1797
  %class_pos1833 = getelementptr %"struct.rubinius::Object"* %stack_load1826, i32 0, i32 0, i32 1, !dbg !27
  %ref_class1834 = load %"struct.rubinius::Class"** %class_pos1833, !dbg !27
  %class_id_pos1835 = getelementptr %"struct.rubinius::Class"* %ref_class1834, i32 0, i32 4, !dbg !27
  %class_id1836 = load i32* %class_id_pos1835, !dbg !27
  %check_class_id1837 = icmp eq i32 %class_id1836, 77, !dbg !27
  br i1 %check_class_id1837, label %correct_class1831, label %class_fallback1822, !dbg !27

correct_class1831:                                ; preds = %check_class_id1830
  %serial_id_pos1838 = getelementptr %"struct.rubinius::Class"* %ref_class1834, i32 0, i32 5, !dbg !27
  %serial_id1839 = load i32* %serial_id_pos1838, !dbg !27
  %check_serial_id1840 = icmp eq i32 %serial_id1839, 224, !dbg !27
  br i1 %check_serial_id1840, label %correct_serial1832, label %serial_fallback1823, !dbg !27

correct_serial1832:                               ; preds = %correct_class1831
  %stack_pos1841 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load1842 = load %"struct.rubinius::Object"** %stack_pos1841, !dbg !27
  %cast1844 = ptrtoint %"struct.rubinius::Object"* %stack_load1842 to i64, !dbg !27
  %masked1845 = and i64 %cast1844, 3, !dbg !27
  %is_reference1846 = icmp eq i64 %masked1845, 0, !dbg !27
  br i1 %is_reference1846, label %check_class_id1847, label %continue1843, !dbg !27

serial_fallback1823:                              ; preds = %correct_class1831
  store i32 26, i32* %ip_pos, !dbg !27
  %86 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 26, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

check_class_id1847:                               ; preds = %correct_serial1832
  %class_pos1849 = getelementptr %"struct.rubinius::Object"* %stack_load1842, i32 0, i32 0, i32 1, !dbg !27
  %ref_class1850 = load %"struct.rubinius::Class"** %class_pos1849, !dbg !27
  %class_id_pos1851 = getelementptr %"struct.rubinius::Class"* %ref_class1850, i32 0, i32 4, !dbg !27
  %class_id1852 = load i32* %class_id_pos1851, !dbg !27
  %check_class_id1853 = icmp eq i32 %class_id1852, 77, !dbg !27
  br i1 %check_class_id1853, label %correct_class1848, label %continue1843, !dbg !27

correct_class1848:                                ; preds = %check_class_id1847
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load1842 to %"struct.rubinius::Float"*, !dbg !27
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !27
  %farg = load double* %arg.value_pos, !dbg !27
  br label %continue1854, !dbg !27

continue1843:                                     ; preds = %check_class_id1847, %correct_serial1832
  %cast1855 = ptrtoint %"struct.rubinius::Object"* %stack_load1842 to i64, !dbg !27
  %masked1856 = and i64 %cast1855, 1, !dbg !27
  %is_fixnum1857 = icmp eq i64 %masked1856, 1, !dbg !27
  br i1 %is_fixnum1857, label %guarded_body, label %class_fallback1822, !dbg !27

guarded_body:                                     ; preds = %continue1843
  %as_int1858 = ptrtoint %"struct.rubinius::Object"* %stack_load1842 to i64, !dbg !27
  %ashr1859 = ashr i64 %as_int1858, 1, !dbg !27
  %87 = sitofp i64 %ashr1859 to double, !dbg !27
  br label %continue1854, !dbg !27

continue1854:                                     ; preds = %guarded_body, %correct_class1848
  %rhs = phi double [ %farg, %correct_class1848 ], [ %87, %guarded_body ], !dbg !27
  %stack_pos1860 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load1861 = load %"struct.rubinius::Object"** %stack_pos1860, !dbg !27
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load1861 to %"struct.rubinius::Float"*, !dbg !27
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !27
  %fself = load double* %self.value_pos, !dbg !27
  %float.sub = fsub double %fself, %rhs, !dbg !27
  %result1862 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !27, !rbx-classid !87
  %88 = getelementptr %"struct.rubinius::Float"* %result1862, i32 0, i32 1, !dbg !27
  store double %float.sub, double* %88, !dbg !27
  %89 = bitcast %"struct.rubinius::Float"* %result1862 to %"struct.rubinius::Object"*, !dbg !27
  br label %continue1824, !dbg !27

class_fallback1822:                               ; preds = %continue1843, %check_class_id1830, %continue1797
  %stack_pos1863 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load1864 = load %"struct.rubinius::Object"** %stack_pos1863, !dbg !27
  store %"struct.rubinius::Object"* %stack_load1864, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 1, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %stack_pos1865 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos1865, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !27
  %cache_const1866 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548616 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos1867 = getelementptr %"struct.rubinius::CallSite"* %cache_const1866, i32 0, i32 2, !dbg !27
  %execute1868 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1867, !dbg !27
  store i32 26, i32* %ip_pos, !dbg !27
  %call_site_execute1869 = call %"struct.rubinius::Object"* %execute1868(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1866, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check1871 = icmp eq %"struct.rubinius::Object"* %call_site_execute1869, null, !dbg !27
  br i1 %null_check1871, label %bail_out, label %check_active1870, !dbg !27

check_active1870:                                 ; preds = %class_fallback1822
  br label %continue1824, !dbg !27

continue1878:                                     ; preds = %visit_push_ivar_fallback1877, %correct_class1885
  %local_pos1900 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !86
  %local1901 = load %"struct.rubinius::Object"** %local_pos1900, !dbg !86, !rbx-classid !88
  %stack_pos1902 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  store %"struct.rubinius::Object"* %local1901, %"struct.rubinius::Object"** %stack_pos1902, !dbg !86
  %stack_pos1906 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  %stack_load1907 = load %"struct.rubinius::Object"** %stack_pos1906, !dbg !86, !rbx-classid !88
  %stack_pos1908 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  %stack_load1909 = load %"struct.rubinius::Object"** %stack_pos1908, !dbg !86, !rbx-classid !88
  %obj_array1910 = bitcast %"struct.rubinius::Object"* %stack_load1909 to %"struct.rubinius::Object"**, !dbg !86
  %field_pos1911 = getelementptr %"struct.rubinius::Object"** %obj_array1910, i32 4, !dbg !86
  %field1912 = load %"struct.rubinius::Object"** %field_pos1911, !dbg !86
  %prune_undef1913 = icmp eq %"struct.rubinius::Object"* %field1912, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !86
  %"select ivar1914" = select i1 %prune_undef1913, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1912, !dbg !86
  %stack_pos1915 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  store %"struct.rubinius::Object"* %"select ivar1914", %"struct.rubinius::Object"** %stack_pos1915, !dbg !86
  br label %continue1905, !dbg !86

check_class_id1884:                               ; preds = %continue1824
  %class_pos1886 = getelementptr %"struct.rubinius::Object"* %self1880, i32 0, i32 0, i32 1, !dbg !86
  %ref_class1887 = load %"struct.rubinius::Class"** %class_pos1886, !dbg !86
  %class_id_pos1888 = getelementptr %"struct.rubinius::Class"* %ref_class1887, i32 0, i32 4, !dbg !86
  %class_id1889 = load i32* %class_id_pos1888, !dbg !86
  %check_class_id1890 = icmp eq i32 %class_id1889, 1285, !dbg !86
  br i1 %check_class_id1890, label %correct_class1885, label %visit_push_ivar_fallback1877, !dbg !86

correct_class1885:                                ; preds = %check_class_id1884
  %obj_array1891 = bitcast %"struct.rubinius::Object"* %self1880 to %"struct.rubinius::Object"**, !dbg !86
  %field_pos1892 = getelementptr %"struct.rubinius::Object"** %obj_array1891, i32 4, !dbg !86
  %field1893 = load %"struct.rubinius::Object"** %field_pos1892, !dbg !86
  %prune_undef1894 = icmp eq %"struct.rubinius::Object"* %field1893, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !86
  %"select ivar1895" = select i1 %prune_undef1894, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1893, !dbg !86
  %stack_pos1896 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  store %"struct.rubinius::Object"* %"select ivar1895", %"struct.rubinius::Object"** %stack_pos1896, !dbg !86
  br label %continue1878, !dbg !86

visit_push_ivar_fallback1877:                     ; preds = %check_class_id1884, %continue1824
  %90 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !86
  %self1897 = load %"struct.rubinius::Object"** %90, !dbg !86
  %ivar1898 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1897, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !86
  %stack_pos1899 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  store %"struct.rubinius::Object"* %ivar1898, %"struct.rubinius::Object"** %stack_pos1899, !dbg !86
  br label %continue1878, !dbg !86

class_fallback1903:                               ; No predecessors!
  store i32 36, i32* %ip_pos, !dbg !86
  %91 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !86
  br label %return_pad, !dbg !86

serial_fallback1904:                              ; No predecessors!
  store i32 36, i32* %ip_pos, !dbg !86
  %92 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !86
  br label %return_pad, !dbg !86

continue1905:                                     ; preds = %continue1878
  %stack_pos1919 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  %stack_load1920 = load %"struct.rubinius::Object"** %stack_pos1919, !dbg !86
  %cast1921 = ptrtoint %"struct.rubinius::Object"* %stack_load1920 to i64, !dbg !86
  %masked1922 = and i64 %cast1921, 3, !dbg !86
  %is_reference1923 = icmp eq i64 %masked1922, 0, !dbg !86
  br i1 %is_reference1923, label %check_class_id1924, label %class_fallback1916, !dbg !86

continue1918:                                     ; preds = %check_active1973, %continue1951
  %send_result1975 = phi %"struct.rubinius::Object"* [ %97, %continue1951 ], [ %call_site_execute1972, %check_active1973 ], !dbg !86
  %stack_pos1976 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  store %"struct.rubinius::Object"* %send_result1975, %"struct.rubinius::Object"** %stack_pos1976, !dbg !86
  %local_pos1977 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 6, !dbg !86
  %stack_pos1978 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  %stack_load1979 = load %"struct.rubinius::Object"** %stack_pos1978, !dbg !86
  store %"struct.rubinius::Object"* %stack_load1979, %"struct.rubinius::Object"** %local_pos1977, !dbg !86
  %stack_pos1982 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1982, !dbg !89
  %93 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !89
  %self1983 = load %"struct.rubinius::Object"** %93, !dbg !89
  %cast1984 = ptrtoint %"struct.rubinius::Object"* %self1983 to i64, !dbg !89
  %masked1985 = and i64 %cast1984, 3, !dbg !89
  %is_reference1986 = icmp eq i64 %masked1985, 0, !dbg !89
  br i1 %is_reference1986, label %check_class_id1987, label %visit_push_ivar_fallback1980, !dbg !89

check_class_id1924:                               ; preds = %continue1905
  %class_pos1927 = getelementptr %"struct.rubinius::Object"* %stack_load1920, i32 0, i32 0, i32 1, !dbg !86
  %ref_class1928 = load %"struct.rubinius::Class"** %class_pos1927, !dbg !86
  %class_id_pos1929 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i32 0, i32 4, !dbg !86
  %class_id1930 = load i32* %class_id_pos1929, !dbg !86
  %check_class_id1931 = icmp eq i32 %class_id1930, 77, !dbg !86
  br i1 %check_class_id1931, label %correct_class1925, label %class_fallback1916, !dbg !86

correct_class1925:                                ; preds = %check_class_id1924
  %serial_id_pos1932 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i32 0, i32 5, !dbg !86
  %serial_id1933 = load i32* %serial_id_pos1932, !dbg !86
  %check_serial_id1934 = icmp eq i32 %serial_id1933, 224, !dbg !86
  br i1 %check_serial_id1934, label %correct_serial1926, label %serial_fallback1917, !dbg !86

correct_serial1926:                               ; preds = %correct_class1925
  %stack_pos1935 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  %stack_load1936 = load %"struct.rubinius::Object"** %stack_pos1935, !dbg !86
  %cast1938 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !86
  %masked1939 = and i64 %cast1938, 3, !dbg !86
  %is_reference1940 = icmp eq i64 %masked1939, 0, !dbg !86
  br i1 %is_reference1940, label %check_class_id1941, label %continue1937, !dbg !86

serial_fallback1917:                              ; preds = %correct_class1925
  store i32 39, i32* %ip_pos, !dbg !86
  %94 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 39, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !86
  br label %return_pad, !dbg !86

check_class_id1941:                               ; preds = %correct_serial1926
  %class_pos1943 = getelementptr %"struct.rubinius::Object"* %stack_load1936, i32 0, i32 0, i32 1, !dbg !86
  %ref_class1944 = load %"struct.rubinius::Class"** %class_pos1943, !dbg !86
  %class_id_pos1945 = getelementptr %"struct.rubinius::Class"* %ref_class1944, i32 0, i32 4, !dbg !86
  %class_id1946 = load i32* %class_id_pos1945, !dbg !86
  %check_class_id1947 = icmp eq i32 %class_id1946, 77, !dbg !86
  br i1 %check_class_id1947, label %correct_class1942, label %continue1937, !dbg !86

correct_class1942:                                ; preds = %check_class_id1941
  %arg_float1948 = bitcast %"struct.rubinius::Object"* %stack_load1936 to %"struct.rubinius::Float"*, !dbg !86
  %arg.value_pos1949 = getelementptr %"struct.rubinius::Float"* %arg_float1948, i32 0, i32 1, !dbg !86
  %farg1950 = load double* %arg.value_pos1949, !dbg !86
  br label %continue1951, !dbg !86

continue1937:                                     ; preds = %check_class_id1941, %correct_serial1926
  %cast1952 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !86
  %masked1953 = and i64 %cast1952, 1, !dbg !86
  %is_fixnum1954 = icmp eq i64 %masked1953, 1, !dbg !86
  br i1 %is_fixnum1954, label %guarded_body1955, label %class_fallback1916, !dbg !86

guarded_body1955:                                 ; preds = %continue1937
  %as_int1956 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !86
  %ashr1957 = ashr i64 %as_int1956, 1, !dbg !86
  %95 = sitofp i64 %ashr1957 to double, !dbg !86
  br label %continue1951, !dbg !86

continue1951:                                     ; preds = %guarded_body1955, %correct_class1942
  %rhs1958 = phi double [ %farg1950, %correct_class1942 ], [ %95, %guarded_body1955 ], !dbg !86
  %stack_pos1959 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  %stack_load1960 = load %"struct.rubinius::Object"** %stack_pos1959, !dbg !86
  %self_float1961 = bitcast %"struct.rubinius::Object"* %stack_load1960 to %"struct.rubinius::Float"*, !dbg !86
  %self.value_pos1962 = getelementptr %"struct.rubinius::Float"* %self_float1961, i32 0, i32 1, !dbg !86
  %fself1963 = load double* %self.value_pos1962, !dbg !86
  %float.sub1964 = fsub double %fself1963, %rhs1958, !dbg !86
  %result1965 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !86, !rbx-classid !87
  %96 = getelementptr %"struct.rubinius::Float"* %result1965, i32 0, i32 1, !dbg !86
  store double %float.sub1964, double* %96, !dbg !86
  %97 = bitcast %"struct.rubinius::Float"* %result1965 to %"struct.rubinius::Object"*, !dbg !86
  br label %continue1918, !dbg !86

class_fallback1916:                               ; preds = %continue1937, %check_class_id1924, %continue1905
  %stack_pos1966 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !86
  %stack_load1967 = load %"struct.rubinius::Object"** %stack_pos1966, !dbg !86
  store %"struct.rubinius::Object"* %stack_load1967, %"struct.rubinius::Object"** %out_args_recv, !dbg !86
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !86
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !86
  store i32 1, i32* %out_args_total, !dbg !86
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !86
  %stack_pos1968 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !86
  store %"struct.rubinius::Object"** %stack_pos1968, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !86
  %cache_const1969 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548720 to %"struct.rubinius::CallSite"**), !dbg !86
  %execute_pos1970 = getelementptr %"struct.rubinius::CallSite"* %cache_const1969, i32 0, i32 2, !dbg !86
  %execute1971 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1970, !dbg !86
  store i32 39, i32* %ip_pos, !dbg !86
  %call_site_execute1972 = call %"struct.rubinius::Object"* %execute1971(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1969, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !86
  %null_check1974 = icmp eq %"struct.rubinius::Object"* %call_site_execute1972, null, !dbg !86
  br i1 %null_check1974, label %bail_out, label %check_active1973, !dbg !86

check_active1973:                                 ; preds = %class_fallback1916
  br label %continue1918, !dbg !86

continue1981:                                     ; preds = %visit_push_ivar_fallback1980, %correct_class1988
  %local_pos2003 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !89
  %local2004 = load %"struct.rubinius::Object"** %local_pos2003, !dbg !89, !rbx-classid !88
  %stack_pos2005 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  store %"struct.rubinius::Object"* %local2004, %"struct.rubinius::Object"** %stack_pos2005, !dbg !89
  %stack_pos2009 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  %stack_load2010 = load %"struct.rubinius::Object"** %stack_pos2009, !dbg !89, !rbx-classid !88
  %stack_pos2011 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  %stack_load2012 = load %"struct.rubinius::Object"** %stack_pos2011, !dbg !89, !rbx-classid !88
  %obj_array2013 = bitcast %"struct.rubinius::Object"* %stack_load2012 to %"struct.rubinius::Object"**, !dbg !89
  %field_pos2014 = getelementptr %"struct.rubinius::Object"** %obj_array2013, i32 5, !dbg !89
  %field2015 = load %"struct.rubinius::Object"** %field_pos2014, !dbg !89
  %prune_undef2016 = icmp eq %"struct.rubinius::Object"* %field2015, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !89
  %"select ivar2017" = select i1 %prune_undef2016, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2015, !dbg !89
  %stack_pos2018 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  store %"struct.rubinius::Object"* %"select ivar2017", %"struct.rubinius::Object"** %stack_pos2018, !dbg !89
  br label %continue2008, !dbg !89

check_class_id1987:                               ; preds = %continue1918
  %class_pos1989 = getelementptr %"struct.rubinius::Object"* %self1983, i32 0, i32 0, i32 1, !dbg !89
  %ref_class1990 = load %"struct.rubinius::Class"** %class_pos1989, !dbg !89
  %class_id_pos1991 = getelementptr %"struct.rubinius::Class"* %ref_class1990, i32 0, i32 4, !dbg !89
  %class_id1992 = load i32* %class_id_pos1991, !dbg !89
  %check_class_id1993 = icmp eq i32 %class_id1992, 1285, !dbg !89
  br i1 %check_class_id1993, label %correct_class1988, label %visit_push_ivar_fallback1980, !dbg !89

correct_class1988:                                ; preds = %check_class_id1987
  %obj_array1994 = bitcast %"struct.rubinius::Object"* %self1983 to %"struct.rubinius::Object"**, !dbg !89
  %field_pos1995 = getelementptr %"struct.rubinius::Object"** %obj_array1994, i32 5, !dbg !89
  %field1996 = load %"struct.rubinius::Object"** %field_pos1995, !dbg !89
  %prune_undef1997 = icmp eq %"struct.rubinius::Object"* %field1996, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !89
  %"select ivar1998" = select i1 %prune_undef1997, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1996, !dbg !89
  %stack_pos1999 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  store %"struct.rubinius::Object"* %"select ivar1998", %"struct.rubinius::Object"** %stack_pos1999, !dbg !89
  br label %continue1981, !dbg !89

visit_push_ivar_fallback1980:                     ; preds = %check_class_id1987, %continue1918
  %98 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !89
  %self2000 = load %"struct.rubinius::Object"** %98, !dbg !89
  %ivar2001 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2000, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !89
  %stack_pos2002 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  store %"struct.rubinius::Object"* %ivar2001, %"struct.rubinius::Object"** %stack_pos2002, !dbg !89
  br label %continue1981, !dbg !89

class_fallback2006:                               ; No predecessors!
  store i32 49, i32* %ip_pos, !dbg !89
  %99 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 49, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !89
  br label %return_pad, !dbg !89

serial_fallback2007:                              ; No predecessors!
  store i32 49, i32* %ip_pos, !dbg !89
  %100 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 49, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !89
  br label %return_pad, !dbg !89

continue2008:                                     ; preds = %continue1981
  %stack_pos2022 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  %stack_load2023 = load %"struct.rubinius::Object"** %stack_pos2022, !dbg !89
  %cast2024 = ptrtoint %"struct.rubinius::Object"* %stack_load2023 to i64, !dbg !89
  %masked2025 = and i64 %cast2024, 3, !dbg !89
  %is_reference2026 = icmp eq i64 %masked2025, 0, !dbg !89
  br i1 %is_reference2026, label %check_class_id2027, label %class_fallback2019, !dbg !89

continue2021:                                     ; preds = %check_active2076, %continue2054
  %send_result2078 = phi %"struct.rubinius::Object"* [ %104, %continue2054 ], [ %call_site_execute2075, %check_active2076 ], !dbg !89
  %stack_pos2079 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  store %"struct.rubinius::Object"* %send_result2078, %"struct.rubinius::Object"** %stack_pos2079, !dbg !89
  %local_pos2080 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 7, !dbg !89
  %stack_pos2081 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  %stack_load2082 = load %"struct.rubinius::Object"** %stack_pos2081, !dbg !89
  store %"struct.rubinius::Object"* %stack_load2082, %"struct.rubinius::Object"** %local_pos2080, !dbg !89
  %global_serial2083 = load i32* inttoptr (i64 22553876 to i32*), !dbg !90
  %constant_cache2084 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**), !dbg !90
  %constant_cache_pos2085 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i32 0, i32 4, !dbg !90
  %constant_scope2086 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2085, !dbg !90
  %scope_pos2087 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !90
  %frame_scope2088 = load %"struct.rubinius::ConstantScope"** %scope_pos2087, !dbg !90
  %same_scope2089 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2086, %frame_scope2088, !dbg !90
  br i1 %same_scope2089, label %check_serial2090, label %use_call2092, !dbg !90

check_class_id2027:                               ; preds = %continue2008
  %class_pos2030 = getelementptr %"struct.rubinius::Object"* %stack_load2023, i32 0, i32 0, i32 1, !dbg !89
  %ref_class2031 = load %"struct.rubinius::Class"** %class_pos2030, !dbg !89
  %class_id_pos2032 = getelementptr %"struct.rubinius::Class"* %ref_class2031, i32 0, i32 4, !dbg !89
  %class_id2033 = load i32* %class_id_pos2032, !dbg !89
  %check_class_id2034 = icmp eq i32 %class_id2033, 77, !dbg !89
  br i1 %check_class_id2034, label %correct_class2028, label %class_fallback2019, !dbg !89

correct_class2028:                                ; preds = %check_class_id2027
  %serial_id_pos2035 = getelementptr %"struct.rubinius::Class"* %ref_class2031, i32 0, i32 5, !dbg !89
  %serial_id2036 = load i32* %serial_id_pos2035, !dbg !89
  %check_serial_id2037 = icmp eq i32 %serial_id2036, 224, !dbg !89
  br i1 %check_serial_id2037, label %correct_serial2029, label %serial_fallback2020, !dbg !89

correct_serial2029:                               ; preds = %correct_class2028
  %stack_pos2038 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  %stack_load2039 = load %"struct.rubinius::Object"** %stack_pos2038, !dbg !89
  %cast2041 = ptrtoint %"struct.rubinius::Object"* %stack_load2039 to i64, !dbg !89
  %masked2042 = and i64 %cast2041, 3, !dbg !89
  %is_reference2043 = icmp eq i64 %masked2042, 0, !dbg !89
  br i1 %is_reference2043, label %check_class_id2044, label %continue2040, !dbg !89

serial_fallback2020:                              ; preds = %correct_class2028
  store i32 52, i32* %ip_pos, !dbg !89
  %101 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 52, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !89
  br label %return_pad, !dbg !89

check_class_id2044:                               ; preds = %correct_serial2029
  %class_pos2046 = getelementptr %"struct.rubinius::Object"* %stack_load2039, i32 0, i32 0, i32 1, !dbg !89
  %ref_class2047 = load %"struct.rubinius::Class"** %class_pos2046, !dbg !89
  %class_id_pos2048 = getelementptr %"struct.rubinius::Class"* %ref_class2047, i32 0, i32 4, !dbg !89
  %class_id2049 = load i32* %class_id_pos2048, !dbg !89
  %check_class_id2050 = icmp eq i32 %class_id2049, 77, !dbg !89
  br i1 %check_class_id2050, label %correct_class2045, label %continue2040, !dbg !89

correct_class2045:                                ; preds = %check_class_id2044
  %arg_float2051 = bitcast %"struct.rubinius::Object"* %stack_load2039 to %"struct.rubinius::Float"*, !dbg !89
  %arg.value_pos2052 = getelementptr %"struct.rubinius::Float"* %arg_float2051, i32 0, i32 1, !dbg !89
  %farg2053 = load double* %arg.value_pos2052, !dbg !89
  br label %continue2054, !dbg !89

continue2040:                                     ; preds = %check_class_id2044, %correct_serial2029
  %cast2055 = ptrtoint %"struct.rubinius::Object"* %stack_load2039 to i64, !dbg !89
  %masked2056 = and i64 %cast2055, 1, !dbg !89
  %is_fixnum2057 = icmp eq i64 %masked2056, 1, !dbg !89
  br i1 %is_fixnum2057, label %guarded_body2058, label %class_fallback2019, !dbg !89

guarded_body2058:                                 ; preds = %continue2040
  %as_int2059 = ptrtoint %"struct.rubinius::Object"* %stack_load2039 to i64, !dbg !89
  %ashr2060 = ashr i64 %as_int2059, 1, !dbg !89
  %102 = sitofp i64 %ashr2060 to double, !dbg !89
  br label %continue2054, !dbg !89

continue2054:                                     ; preds = %guarded_body2058, %correct_class2045
  %rhs2061 = phi double [ %farg2053, %correct_class2045 ], [ %102, %guarded_body2058 ], !dbg !89
  %stack_pos2062 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  %stack_load2063 = load %"struct.rubinius::Object"** %stack_pos2062, !dbg !89
  %self_float2064 = bitcast %"struct.rubinius::Object"* %stack_load2063 to %"struct.rubinius::Float"*, !dbg !89
  %self.value_pos2065 = getelementptr %"struct.rubinius::Float"* %self_float2064, i32 0, i32 1, !dbg !89
  %fself2066 = load double* %self.value_pos2065, !dbg !89
  %float.sub2067 = fsub double %fself2066, %rhs2061, !dbg !89
  %result2068 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !89, !rbx-classid !87
  %103 = getelementptr %"struct.rubinius::Float"* %result2068, i32 0, i32 1, !dbg !89
  store double %float.sub2067, double* %103, !dbg !89
  %104 = bitcast %"struct.rubinius::Float"* %result2068 to %"struct.rubinius::Object"*, !dbg !89
  br label %continue2021, !dbg !89

class_fallback2019:                               ; preds = %continue2040, %check_class_id2027, %continue2008
  %stack_pos2069 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !89
  %stack_load2070 = load %"struct.rubinius::Object"** %stack_pos2069, !dbg !89
  store %"struct.rubinius::Object"* %stack_load2070, %"struct.rubinius::Object"** %out_args_recv, !dbg !89
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !89
  store i32 1, i32* %out_args_total, !dbg !89
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !89
  %stack_pos2071 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !89
  store %"struct.rubinius::Object"** %stack_pos2071, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !89
  %cache_const2072 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548824 to %"struct.rubinius::CallSite"**), !dbg !89
  %execute_pos2073 = getelementptr %"struct.rubinius::CallSite"* %cache_const2072, i32 0, i32 2, !dbg !89
  %execute2074 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2073, !dbg !89
  store i32 52, i32* %ip_pos, !dbg !89
  %call_site_execute2075 = call %"struct.rubinius::Object"* %execute2074(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2072, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !89
  %null_check2077 = icmp eq %"struct.rubinius::Object"* %call_site_execute2075, null, !dbg !89
  br i1 %null_check2077, label %bail_out, label %check_active2076, !dbg !89

check_active2076:                                 ; preds = %class_fallback2019
  br label %continue2021, !dbg !89

check_serial2090:                                 ; preds = %continue2021
  %serial_pos2094 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i32 0, i32 7, !dbg !90
  %serial2095 = load i32* %serial_pos2094, !dbg !90
  %use_cache2096 = icmp eq i32 %global_serial2083, %serial2095, !dbg !90
  br i1 %use_cache2096, label %use_cache2091, label %use_call2092, !dbg !90

use_cache2091:                                    ; preds = %check_serial2090
  %value_pos2097 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i32 0, i32 2, !dbg !90
  %cached_value2098 = load %"struct.rubinius::Object"** %value_pos2097, !dbg !90
  br label %continue2093, !dbg !90

use_call2092:                                     ; preds = %check_serial2090, %continue2021
  store i32 58, i32* %ip_pos, !dbg !90
  %push_const_fast2099 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !90
  %null_check2102 = icmp eq %"struct.rubinius::Object"* %push_const_fast2099, null, !dbg !90
  br i1 %null_check2102, label %bail_out, label %check_active2101, !dbg !90

continue2093:                                     ; preds = %continue2100, %use_cache2091
  %constant2103 = phi %"struct.rubinius::Object"* [ %cached_value2098, %use_cache2091 ], [ %push_const_fast2099, %continue2100 ], !dbg !90, !rbx-classid !91
  %stack_pos2104 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !90
  store %"struct.rubinius::Object"* %constant2103, %"struct.rubinius::Object"** %stack_pos2104, !dbg !90
  %local_pos2105 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 5, !dbg !90
  %local2106 = load %"struct.rubinius::Object"** %local_pos2105, !dbg !90, !rbx-classid !92
  %stack_pos2107 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  store %"struct.rubinius::Object"* %local2106, %"struct.rubinius::Object"** %stack_pos2107, !dbg !90
  %local_pos2108 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 5, !dbg !90
  %local2109 = load %"struct.rubinius::Object"** %local_pos2108, !dbg !90, !rbx-classid !92
  %stack_pos2110 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"* %local2109, %"struct.rubinius::Object"** %stack_pos2110, !dbg !90
  %stack_pos2114 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2115 = load %"struct.rubinius::Object"** %stack_pos2114, !dbg !90, !rbx-classid !92
  %cast2116 = ptrtoint %"struct.rubinius::Object"* %stack_load2115 to i64, !dbg !90
  %masked2117 = and i64 %cast2116, 3, !dbg !90
  %is_reference2118 = icmp eq i64 %masked2117, 0, !dbg !90
  br i1 %is_reference2118, label %check_class_id2119, label %class_fallback2111, !dbg !90

continue2100:                                     ; preds = %check_active2101
  br label %continue2093, !dbg !90

check_active2101:                                 ; preds = %use_call2092
  br label %continue2100, !dbg !90

continue2113:                                     ; preds = %check_active2167, %continue2146
  %send_result2169 = phi %"struct.rubinius::Object"* [ %108, %continue2146 ], [ %call_site_execute2166, %check_active2167 ], !dbg !90
  %stack_pos2170 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  store %"struct.rubinius::Object"* %send_result2169, %"struct.rubinius::Object"** %stack_pos2170, !dbg !90
  %local_pos2171 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 6, !dbg !90
  %local2172 = load %"struct.rubinius::Object"** %local_pos2171, !dbg !90, !rbx-classid !93
  %stack_pos2173 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"* %local2172, %"struct.rubinius::Object"** %stack_pos2173, !dbg !90
  %local_pos2174 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 6, !dbg !90
  %local2175 = load %"struct.rubinius::Object"** %local_pos2174, !dbg !90, !rbx-classid !93
  %stack_pos2176 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  store %"struct.rubinius::Object"* %local2175, %"struct.rubinius::Object"** %stack_pos2176, !dbg !90
  %stack_pos2180 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2181 = load %"struct.rubinius::Object"** %stack_pos2180, !dbg !90, !rbx-classid !93
  %cast2182 = ptrtoint %"struct.rubinius::Object"* %stack_load2181 to i64, !dbg !90
  %masked2183 = and i64 %cast2182, 3, !dbg !90
  %is_reference2184 = icmp eq i64 %masked2183, 0, !dbg !90
  br i1 %is_reference2184, label %check_class_id2185, label %class_fallback2177, !dbg !90

check_class_id2119:                               ; preds = %continue2093
  %class_pos2122 = getelementptr %"struct.rubinius::Object"* %stack_load2115, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2123 = load %"struct.rubinius::Class"** %class_pos2122, !dbg !90
  %class_id_pos2124 = getelementptr %"struct.rubinius::Class"* %ref_class2123, i32 0, i32 4, !dbg !90
  %class_id2125 = load i32* %class_id_pos2124, !dbg !90
  %check_class_id2126 = icmp eq i32 %class_id2125, 77, !dbg !90
  br i1 %check_class_id2126, label %correct_class2120, label %class_fallback2111, !dbg !90

correct_class2120:                                ; preds = %check_class_id2119
  %serial_id_pos2127 = getelementptr %"struct.rubinius::Class"* %ref_class2123, i32 0, i32 5, !dbg !90
  %serial_id2128 = load i32* %serial_id_pos2127, !dbg !90
  %check_serial_id2129 = icmp eq i32 %serial_id2128, 224, !dbg !90
  br i1 %check_serial_id2129, label %correct_serial2121, label %serial_fallback2112, !dbg !90

correct_serial2121:                               ; preds = %correct_class2120
  %stack_pos2130 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2131 = load %"struct.rubinius::Object"** %stack_pos2130, !dbg !90, !rbx-classid !92
  %cast2133 = ptrtoint %"struct.rubinius::Object"* %stack_load2131 to i64, !dbg !90
  %masked2134 = and i64 %cast2133, 3, !dbg !90
  %is_reference2135 = icmp eq i64 %masked2134, 0, !dbg !90
  br i1 %is_reference2135, label %check_class_id2136, label %continue2132, !dbg !90

serial_fallback2112:                              ; preds = %correct_class2120
  store i32 64, i32* %ip_pos, !dbg !90
  %105 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 64, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

check_class_id2136:                               ; preds = %correct_serial2121
  %class_pos2138 = getelementptr %"struct.rubinius::Object"* %stack_load2131, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2139 = load %"struct.rubinius::Class"** %class_pos2138, !dbg !90
  %class_id_pos2140 = getelementptr %"struct.rubinius::Class"* %ref_class2139, i32 0, i32 4, !dbg !90
  %class_id2141 = load i32* %class_id_pos2140, !dbg !90
  %check_class_id2142 = icmp eq i32 %class_id2141, 77, !dbg !90
  br i1 %check_class_id2142, label %correct_class2137, label %continue2132, !dbg !90

correct_class2137:                                ; preds = %check_class_id2136
  %arg_float2143 = bitcast %"struct.rubinius::Object"* %stack_load2131 to %"struct.rubinius::Float"*, !dbg !90
  %arg.value_pos2144 = getelementptr %"struct.rubinius::Float"* %arg_float2143, i32 0, i32 1, !dbg !90
  %farg2145 = load double* %arg.value_pos2144, !dbg !90
  br label %continue2146, !dbg !90

continue2132:                                     ; preds = %check_class_id2136, %correct_serial2121
  %cast2147 = ptrtoint %"struct.rubinius::Object"* %stack_load2131 to i64, !dbg !90
  %masked2148 = and i64 %cast2147, 1, !dbg !90
  %is_fixnum2149 = icmp eq i64 %masked2148, 1, !dbg !90
  br i1 %is_fixnum2149, label %guarded_body2150, label %class_fallback2111, !dbg !90

guarded_body2150:                                 ; preds = %continue2132
  %as_int2151 = ptrtoint %"struct.rubinius::Object"* %stack_load2131 to i64, !dbg !90
  %ashr2152 = ashr i64 %as_int2151, 1, !dbg !90
  %106 = sitofp i64 %ashr2152 to double, !dbg !90
  br label %continue2146, !dbg !90

continue2146:                                     ; preds = %guarded_body2150, %correct_class2137
  %rhs2153 = phi double [ %farg2145, %correct_class2137 ], [ %106, %guarded_body2150 ], !dbg !90
  %stack_pos2154 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2155 = load %"struct.rubinius::Object"** %stack_pos2154, !dbg !90, !rbx-classid !92
  %self_float2156 = bitcast %"struct.rubinius::Object"* %stack_load2155 to %"struct.rubinius::Float"*, !dbg !90
  %self.value_pos2157 = getelementptr %"struct.rubinius::Float"* %self_float2156, i32 0, i32 1, !dbg !90
  %fself2158 = load double* %self.value_pos2157, !dbg !90
  %float.mul = fmul double %fself2158, %rhs2153, !dbg !90
  %result2159 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !90, !rbx-classid !87
  %107 = getelementptr %"struct.rubinius::Float"* %result2159, i32 0, i32 1, !dbg !90
  store double %float.mul, double* %107, !dbg !90
  %108 = bitcast %"struct.rubinius::Float"* %result2159 to %"struct.rubinius::Object"*, !dbg !90
  br label %continue2113, !dbg !90

class_fallback2111:                               ; preds = %continue2132, %check_class_id2119, %continue2093
  %stack_pos2160 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2161 = load %"struct.rubinius::Object"** %stack_pos2160, !dbg !90, !rbx-classid !92
  store %"struct.rubinius::Object"* %stack_load2161, %"struct.rubinius::Object"** %out_args_recv, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !90
  store i32 1, i32* %out_args_total, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !90
  %stack_pos2162 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"** %stack_pos2162, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !90
  %cache_const2163 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548920 to %"struct.rubinius::CallSite"**), !dbg !90
  %execute_pos2164 = getelementptr %"struct.rubinius::CallSite"* %cache_const2163, i32 0, i32 2, !dbg !90
  %execute2165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2164, !dbg !90
  store i32 64, i32* %ip_pos, !dbg !90
  %call_site_execute2166 = call %"struct.rubinius::Object"* %execute2165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2168 = icmp eq %"struct.rubinius::Object"* %call_site_execute2166, null, !dbg !90
  br i1 %null_check2168, label %bail_out, label %check_active2167, !dbg !90

check_active2167:                                 ; preds = %class_fallback2111
  br label %continue2113, !dbg !90

continue2179:                                     ; preds = %check_active2234, %continue2212
  %send_result2236 = phi %"struct.rubinius::Object"* [ %112, %continue2212 ], [ %call_site_execute2233, %check_active2234 ], !dbg !90
  %stack_pos2237 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"* %send_result2236, %"struct.rubinius::Object"** %stack_pos2237, !dbg !90
  %stack_pos2241 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2242 = load %"struct.rubinius::Object"** %stack_pos2241, !dbg !90
  %cast2243 = ptrtoint %"struct.rubinius::Object"* %stack_load2242 to i64, !dbg !90
  %masked2244 = and i64 %cast2243, 3, !dbg !90
  %is_reference2245 = icmp eq i64 %masked2244, 0, !dbg !90
  br i1 %is_reference2245, label %check_class_id2246, label %class_fallback2238, !dbg !90

check_class_id2185:                               ; preds = %continue2113
  %class_pos2188 = getelementptr %"struct.rubinius::Object"* %stack_load2181, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2189 = load %"struct.rubinius::Class"** %class_pos2188, !dbg !90
  %class_id_pos2190 = getelementptr %"struct.rubinius::Class"* %ref_class2189, i32 0, i32 4, !dbg !90
  %class_id2191 = load i32* %class_id_pos2190, !dbg !90
  %check_class_id2192 = icmp eq i32 %class_id2191, 77, !dbg !90
  br i1 %check_class_id2192, label %correct_class2186, label %class_fallback2177, !dbg !90

correct_class2186:                                ; preds = %check_class_id2185
  %serial_id_pos2193 = getelementptr %"struct.rubinius::Class"* %ref_class2189, i32 0, i32 5, !dbg !90
  %serial_id2194 = load i32* %serial_id_pos2193, !dbg !90
  %check_serial_id2195 = icmp eq i32 %serial_id2194, 224, !dbg !90
  br i1 %check_serial_id2195, label %correct_serial2187, label %serial_fallback2178, !dbg !90

correct_serial2187:                               ; preds = %correct_class2186
  %stack_pos2196 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  %stack_load2197 = load %"struct.rubinius::Object"** %stack_pos2196, !dbg !90, !rbx-classid !93
  %cast2199 = ptrtoint %"struct.rubinius::Object"* %stack_load2197 to i64, !dbg !90
  %masked2200 = and i64 %cast2199, 3, !dbg !90
  %is_reference2201 = icmp eq i64 %masked2200, 0, !dbg !90
  br i1 %is_reference2201, label %check_class_id2202, label %continue2198, !dbg !90

serial_fallback2178:                              ; preds = %correct_class2186
  store i32 71, i32* %ip_pos, !dbg !90
  %109 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

check_class_id2202:                               ; preds = %correct_serial2187
  %class_pos2204 = getelementptr %"struct.rubinius::Object"* %stack_load2197, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2205 = load %"struct.rubinius::Class"** %class_pos2204, !dbg !90
  %class_id_pos2206 = getelementptr %"struct.rubinius::Class"* %ref_class2205, i32 0, i32 4, !dbg !90
  %class_id2207 = load i32* %class_id_pos2206, !dbg !90
  %check_class_id2208 = icmp eq i32 %class_id2207, 77, !dbg !90
  br i1 %check_class_id2208, label %correct_class2203, label %continue2198, !dbg !90

correct_class2203:                                ; preds = %check_class_id2202
  %arg_float2209 = bitcast %"struct.rubinius::Object"* %stack_load2197 to %"struct.rubinius::Float"*, !dbg !90
  %arg.value_pos2210 = getelementptr %"struct.rubinius::Float"* %arg_float2209, i32 0, i32 1, !dbg !90
  %farg2211 = load double* %arg.value_pos2210, !dbg !90
  br label %continue2212, !dbg !90

continue2198:                                     ; preds = %check_class_id2202, %correct_serial2187
  %cast2213 = ptrtoint %"struct.rubinius::Object"* %stack_load2197 to i64, !dbg !90
  %masked2214 = and i64 %cast2213, 1, !dbg !90
  %is_fixnum2215 = icmp eq i64 %masked2214, 1, !dbg !90
  br i1 %is_fixnum2215, label %guarded_body2216, label %class_fallback2177, !dbg !90

guarded_body2216:                                 ; preds = %continue2198
  %as_int2217 = ptrtoint %"struct.rubinius::Object"* %stack_load2197 to i64, !dbg !90
  %ashr2218 = ashr i64 %as_int2217, 1, !dbg !90
  %110 = sitofp i64 %ashr2218 to double, !dbg !90
  br label %continue2212, !dbg !90

continue2212:                                     ; preds = %guarded_body2216, %correct_class2203
  %rhs2219 = phi double [ %farg2211, %correct_class2203 ], [ %110, %guarded_body2216 ], !dbg !90
  %stack_pos2220 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2221 = load %"struct.rubinius::Object"** %stack_pos2220, !dbg !90, !rbx-classid !93
  %self_float2222 = bitcast %"struct.rubinius::Object"* %stack_load2221 to %"struct.rubinius::Float"*, !dbg !90
  %self.value_pos2223 = getelementptr %"struct.rubinius::Float"* %self_float2222, i32 0, i32 1, !dbg !90
  %fself2224 = load double* %self.value_pos2223, !dbg !90
  %float.mul2225 = fmul double %fself2224, %rhs2219, !dbg !90
  %result2226 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !90, !rbx-classid !87
  %111 = getelementptr %"struct.rubinius::Float"* %result2226, i32 0, i32 1, !dbg !90
  store double %float.mul2225, double* %111, !dbg !90
  %112 = bitcast %"struct.rubinius::Float"* %result2226 to %"struct.rubinius::Object"*, !dbg !90
  br label %continue2179, !dbg !90

class_fallback2177:                               ; preds = %continue2198, %check_class_id2185, %continue2113
  %stack_pos2227 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2228 = load %"struct.rubinius::Object"** %stack_pos2227, !dbg !90, !rbx-classid !93
  store %"struct.rubinius::Object"* %stack_load2228, %"struct.rubinius::Object"** %out_args_recv, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !90
  store i32 1, i32* %out_args_total, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !90
  %stack_pos2229 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  store %"struct.rubinius::Object"** %stack_pos2229, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !90
  %cache_const2230 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548976 to %"struct.rubinius::CallSite"**), !dbg !90
  %execute_pos2231 = getelementptr %"struct.rubinius::CallSite"* %cache_const2230, i32 0, i32 2, !dbg !90
  %execute2232 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2231, !dbg !90
  store i32 71, i32* %ip_pos, !dbg !90
  %call_site_execute2233 = call %"struct.rubinius::Object"* %execute2232(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2230, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2235 = icmp eq %"struct.rubinius::Object"* %call_site_execute2233, null, !dbg !90
  br i1 %null_check2235, label %bail_out, label %check_active2234, !dbg !90

check_active2234:                                 ; preds = %class_fallback2177
  br label %continue2179, !dbg !90

continue2240:                                     ; preds = %check_active2294, %continue2273
  %send_result2296 = phi %"struct.rubinius::Object"* [ %116, %continue2273 ], [ %call_site_execute2293, %check_active2294 ], !dbg !90
  %stack_pos2297 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  store %"struct.rubinius::Object"* %send_result2296, %"struct.rubinius::Object"** %stack_pos2297, !dbg !90
  %local_pos2298 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 7, !dbg !90
  %local2299 = load %"struct.rubinius::Object"** %local_pos2298, !dbg !90, !rbx-classid !94
  %stack_pos2300 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"* %local2299, %"struct.rubinius::Object"** %stack_pos2300, !dbg !90
  %local_pos2301 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 7, !dbg !90
  %local2302 = load %"struct.rubinius::Object"** %local_pos2301, !dbg !90, !rbx-classid !94
  %stack_pos2303 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  store %"struct.rubinius::Object"* %local2302, %"struct.rubinius::Object"** %stack_pos2303, !dbg !90
  %stack_pos2307 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2308 = load %"struct.rubinius::Object"** %stack_pos2307, !dbg !90, !rbx-classid !94
  %cast2309 = ptrtoint %"struct.rubinius::Object"* %stack_load2308 to i64, !dbg !90
  %masked2310 = and i64 %cast2309, 3, !dbg !90
  %is_reference2311 = icmp eq i64 %masked2310, 0, !dbg !90
  br i1 %is_reference2311, label %check_class_id2312, label %class_fallback2304, !dbg !90

check_class_id2246:                               ; preds = %continue2179
  %class_pos2249 = getelementptr %"struct.rubinius::Object"* %stack_load2242, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2250 = load %"struct.rubinius::Class"** %class_pos2249, !dbg !90
  %class_id_pos2251 = getelementptr %"struct.rubinius::Class"* %ref_class2250, i32 0, i32 4, !dbg !90
  %class_id2252 = load i32* %class_id_pos2251, !dbg !90
  %check_class_id2253 = icmp eq i32 %class_id2252, 77, !dbg !90
  br i1 %check_class_id2253, label %correct_class2247, label %class_fallback2238, !dbg !90

correct_class2247:                                ; preds = %check_class_id2246
  %serial_id_pos2254 = getelementptr %"struct.rubinius::Class"* %ref_class2250, i32 0, i32 5, !dbg !90
  %serial_id2255 = load i32* %serial_id_pos2254, !dbg !90
  %check_serial_id2256 = icmp eq i32 %serial_id2255, 224, !dbg !90
  br i1 %check_serial_id2256, label %correct_serial2248, label %serial_fallback2239, !dbg !90

correct_serial2248:                               ; preds = %correct_class2247
  %stack_pos2257 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2258 = load %"struct.rubinius::Object"** %stack_pos2257, !dbg !90
  %cast2260 = ptrtoint %"struct.rubinius::Object"* %stack_load2258 to i64, !dbg !90
  %masked2261 = and i64 %cast2260, 3, !dbg !90
  %is_reference2262 = icmp eq i64 %masked2261, 0, !dbg !90
  br i1 %is_reference2262, label %check_class_id2263, label %continue2259, !dbg !90

serial_fallback2239:                              ; preds = %correct_class2247
  store i32 74, i32* %ip_pos, !dbg !90
  %113 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

check_class_id2263:                               ; preds = %correct_serial2248
  %class_pos2265 = getelementptr %"struct.rubinius::Object"* %stack_load2258, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2266 = load %"struct.rubinius::Class"** %class_pos2265, !dbg !90
  %class_id_pos2267 = getelementptr %"struct.rubinius::Class"* %ref_class2266, i32 0, i32 4, !dbg !90
  %class_id2268 = load i32* %class_id_pos2267, !dbg !90
  %check_class_id2269 = icmp eq i32 %class_id2268, 77, !dbg !90
  br i1 %check_class_id2269, label %correct_class2264, label %continue2259, !dbg !90

correct_class2264:                                ; preds = %check_class_id2263
  %arg_float2270 = bitcast %"struct.rubinius::Object"* %stack_load2258 to %"struct.rubinius::Float"*, !dbg !90
  %arg.value_pos2271 = getelementptr %"struct.rubinius::Float"* %arg_float2270, i32 0, i32 1, !dbg !90
  %farg2272 = load double* %arg.value_pos2271, !dbg !90
  br label %continue2273, !dbg !90

continue2259:                                     ; preds = %check_class_id2263, %correct_serial2248
  %cast2274 = ptrtoint %"struct.rubinius::Object"* %stack_load2258 to i64, !dbg !90
  %masked2275 = and i64 %cast2274, 1, !dbg !90
  %is_fixnum2276 = icmp eq i64 %masked2275, 1, !dbg !90
  br i1 %is_fixnum2276, label %guarded_body2277, label %class_fallback2238, !dbg !90

guarded_body2277:                                 ; preds = %continue2259
  %as_int2278 = ptrtoint %"struct.rubinius::Object"* %stack_load2258 to i64, !dbg !90
  %ashr2279 = ashr i64 %as_int2278, 1, !dbg !90
  %114 = sitofp i64 %ashr2279 to double, !dbg !90
  br label %continue2273, !dbg !90

continue2273:                                     ; preds = %guarded_body2277, %correct_class2264
  %rhs2280 = phi double [ %farg2272, %correct_class2264 ], [ %114, %guarded_body2277 ], !dbg !90
  %stack_pos2281 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2282 = load %"struct.rubinius::Object"** %stack_pos2281, !dbg !90
  %self_float2283 = bitcast %"struct.rubinius::Object"* %stack_load2282 to %"struct.rubinius::Float"*, !dbg !90
  %self.value_pos2284 = getelementptr %"struct.rubinius::Float"* %self_float2283, i32 0, i32 1, !dbg !90
  %fself2285 = load double* %self.value_pos2284, !dbg !90
  %float.add = fadd double %fself2285, %rhs2280, !dbg !90
  %result2286 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !90, !rbx-classid !87
  %115 = getelementptr %"struct.rubinius::Float"* %result2286, i32 0, i32 1, !dbg !90
  store double %float.add, double* %115, !dbg !90
  %116 = bitcast %"struct.rubinius::Float"* %result2286 to %"struct.rubinius::Object"*, !dbg !90
  br label %continue2240, !dbg !90

class_fallback2238:                               ; preds = %continue2259, %check_class_id2246, %continue2179
  %stack_pos2287 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2288 = load %"struct.rubinius::Object"** %stack_pos2287, !dbg !90
  store %"struct.rubinius::Object"* %stack_load2288, %"struct.rubinius::Object"** %out_args_recv, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !90
  store i32 1, i32* %out_args_total, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !90
  %stack_pos2289 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"** %stack_pos2289, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !90
  %cache_const2290 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549000 to %"struct.rubinius::CallSite"**), !dbg !90
  %execute_pos2291 = getelementptr %"struct.rubinius::CallSite"* %cache_const2290, i32 0, i32 2, !dbg !90
  %execute2292 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2291, !dbg !90
  store i32 74, i32* %ip_pos, !dbg !90
  %call_site_execute2293 = call %"struct.rubinius::Object"* %execute2292(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2290, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2295 = icmp eq %"struct.rubinius::Object"* %call_site_execute2293, null, !dbg !90
  br i1 %null_check2295, label %bail_out, label %check_active2294, !dbg !90

check_active2294:                                 ; preds = %class_fallback2238
  br label %continue2240, !dbg !90

continue2306:                                     ; preds = %check_active2361, %continue2339
  %send_result2363 = phi %"struct.rubinius::Object"* [ %120, %continue2339 ], [ %call_site_execute2360, %check_active2361 ], !dbg !90
  %stack_pos2364 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"* %send_result2363, %"struct.rubinius::Object"** %stack_pos2364, !dbg !90
  %stack_pos2368 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2369 = load %"struct.rubinius::Object"** %stack_pos2368, !dbg !90
  %cast2370 = ptrtoint %"struct.rubinius::Object"* %stack_load2369 to i64, !dbg !90
  %masked2371 = and i64 %cast2370, 3, !dbg !90
  %is_reference2372 = icmp eq i64 %masked2371, 0, !dbg !90
  br i1 %is_reference2372, label %check_class_id2373, label %class_fallback2365, !dbg !90

check_class_id2312:                               ; preds = %continue2240
  %class_pos2315 = getelementptr %"struct.rubinius::Object"* %stack_load2308, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2316 = load %"struct.rubinius::Class"** %class_pos2315, !dbg !90
  %class_id_pos2317 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i32 0, i32 4, !dbg !90
  %class_id2318 = load i32* %class_id_pos2317, !dbg !90
  %check_class_id2319 = icmp eq i32 %class_id2318, 77, !dbg !90
  br i1 %check_class_id2319, label %correct_class2313, label %class_fallback2304, !dbg !90

correct_class2313:                                ; preds = %check_class_id2312
  %serial_id_pos2320 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i32 0, i32 5, !dbg !90
  %serial_id2321 = load i32* %serial_id_pos2320, !dbg !90
  %check_serial_id2322 = icmp eq i32 %serial_id2321, 224, !dbg !90
  br i1 %check_serial_id2322, label %correct_serial2314, label %serial_fallback2305, !dbg !90

correct_serial2314:                               ; preds = %correct_class2313
  %stack_pos2323 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  %stack_load2324 = load %"struct.rubinius::Object"** %stack_pos2323, !dbg !90, !rbx-classid !94
  %cast2326 = ptrtoint %"struct.rubinius::Object"* %stack_load2324 to i64, !dbg !90
  %masked2327 = and i64 %cast2326, 3, !dbg !90
  %is_reference2328 = icmp eq i64 %masked2327, 0, !dbg !90
  br i1 %is_reference2328, label %check_class_id2329, label %continue2325, !dbg !90

serial_fallback2305:                              ; preds = %correct_class2313
  store i32 81, i32* %ip_pos, !dbg !90
  %117 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 81, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

check_class_id2329:                               ; preds = %correct_serial2314
  %class_pos2331 = getelementptr %"struct.rubinius::Object"* %stack_load2324, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2332 = load %"struct.rubinius::Class"** %class_pos2331, !dbg !90
  %class_id_pos2333 = getelementptr %"struct.rubinius::Class"* %ref_class2332, i32 0, i32 4, !dbg !90
  %class_id2334 = load i32* %class_id_pos2333, !dbg !90
  %check_class_id2335 = icmp eq i32 %class_id2334, 77, !dbg !90
  br i1 %check_class_id2335, label %correct_class2330, label %continue2325, !dbg !90

correct_class2330:                                ; preds = %check_class_id2329
  %arg_float2336 = bitcast %"struct.rubinius::Object"* %stack_load2324 to %"struct.rubinius::Float"*, !dbg !90
  %arg.value_pos2337 = getelementptr %"struct.rubinius::Float"* %arg_float2336, i32 0, i32 1, !dbg !90
  %farg2338 = load double* %arg.value_pos2337, !dbg !90
  br label %continue2339, !dbg !90

continue2325:                                     ; preds = %check_class_id2329, %correct_serial2314
  %cast2340 = ptrtoint %"struct.rubinius::Object"* %stack_load2324 to i64, !dbg !90
  %masked2341 = and i64 %cast2340, 1, !dbg !90
  %is_fixnum2342 = icmp eq i64 %masked2341, 1, !dbg !90
  br i1 %is_fixnum2342, label %guarded_body2343, label %class_fallback2304, !dbg !90

guarded_body2343:                                 ; preds = %continue2325
  %as_int2344 = ptrtoint %"struct.rubinius::Object"* %stack_load2324 to i64, !dbg !90
  %ashr2345 = ashr i64 %as_int2344, 1, !dbg !90
  %118 = sitofp i64 %ashr2345 to double, !dbg !90
  br label %continue2339, !dbg !90

continue2339:                                     ; preds = %guarded_body2343, %correct_class2330
  %rhs2346 = phi double [ %farg2338, %correct_class2330 ], [ %118, %guarded_body2343 ], !dbg !90
  %stack_pos2347 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2348 = load %"struct.rubinius::Object"** %stack_pos2347, !dbg !90, !rbx-classid !94
  %self_float2349 = bitcast %"struct.rubinius::Object"* %stack_load2348 to %"struct.rubinius::Float"*, !dbg !90
  %self.value_pos2350 = getelementptr %"struct.rubinius::Float"* %self_float2349, i32 0, i32 1, !dbg !90
  %fself2351 = load double* %self.value_pos2350, !dbg !90
  %float.mul2352 = fmul double %fself2351, %rhs2346, !dbg !90
  %result2353 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !90, !rbx-classid !87
  %119 = getelementptr %"struct.rubinius::Float"* %result2353, i32 0, i32 1, !dbg !90
  store double %float.mul2352, double* %119, !dbg !90
  %120 = bitcast %"struct.rubinius::Float"* %result2353 to %"struct.rubinius::Object"*, !dbg !90
  br label %continue2306, !dbg !90

class_fallback2304:                               ; preds = %continue2325, %check_class_id2312, %continue2240
  %stack_pos2354 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2355 = load %"struct.rubinius::Object"** %stack_pos2354, !dbg !90, !rbx-classid !94
  store %"struct.rubinius::Object"* %stack_load2355, %"struct.rubinius::Object"** %out_args_recv, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !90
  store i32 1, i32* %out_args_total, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !90
  %stack_pos2356 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !90
  store %"struct.rubinius::Object"** %stack_pos2356, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !90
  %cache_const2357 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549056 to %"struct.rubinius::CallSite"**), !dbg !90
  %execute_pos2358 = getelementptr %"struct.rubinius::CallSite"* %cache_const2357, i32 0, i32 2, !dbg !90
  %execute2359 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2358, !dbg !90
  store i32 81, i32* %ip_pos, !dbg !90
  %call_site_execute2360 = call %"struct.rubinius::Object"* %execute2359(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2357, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2362 = icmp eq %"struct.rubinius::Object"* %call_site_execute2360, null, !dbg !90
  br i1 %null_check2362, label %bail_out, label %check_active2361, !dbg !90

check_active2361:                                 ; preds = %class_fallback2304
  br label %continue2306, !dbg !90

continue2367:                                     ; preds = %check_active2422, %continue2400
  %send_result2424 = phi %"struct.rubinius::Object"* [ %124, %continue2400 ], [ %call_site_execute2421, %check_active2422 ], !dbg !90
  %stack_pos2425 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  store %"struct.rubinius::Object"* %send_result2424, %"struct.rubinius::Object"** %stack_pos2425, !dbg !90
  %stack_pos2429 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !90
  %stack_load2430 = load %"struct.rubinius::Object"** %stack_pos2429, !dbg !90, !rbx-classid !91
  %cast2431 = ptrtoint %"struct.rubinius::Object"* %stack_load2430 to i64, !dbg !90
  %masked2432 = and i64 %cast2431, 3, !dbg !90
  %is_reference2433 = icmp eq i64 %masked2432, 0, !dbg !90
  br i1 %is_reference2433, label %check_class_id2434, label %class_fallback2426, !dbg !90

check_class_id2373:                               ; preds = %continue2306
  %class_pos2376 = getelementptr %"struct.rubinius::Object"* %stack_load2369, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2377 = load %"struct.rubinius::Class"** %class_pos2376, !dbg !90
  %class_id_pos2378 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i32 0, i32 4, !dbg !90
  %class_id2379 = load i32* %class_id_pos2378, !dbg !90
  %check_class_id2380 = icmp eq i32 %class_id2379, 77, !dbg !90
  br i1 %check_class_id2380, label %correct_class2374, label %class_fallback2365, !dbg !90

correct_class2374:                                ; preds = %check_class_id2373
  %serial_id_pos2381 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i32 0, i32 5, !dbg !90
  %serial_id2382 = load i32* %serial_id_pos2381, !dbg !90
  %check_serial_id2383 = icmp eq i32 %serial_id2382, 224, !dbg !90
  br i1 %check_serial_id2383, label %correct_serial2375, label %serial_fallback2366, !dbg !90

correct_serial2375:                               ; preds = %correct_class2374
  %stack_pos2384 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  %stack_load2385 = load %"struct.rubinius::Object"** %stack_pos2384, !dbg !90
  %cast2387 = ptrtoint %"struct.rubinius::Object"* %stack_load2385 to i64, !dbg !90
  %masked2388 = and i64 %cast2387, 3, !dbg !90
  %is_reference2389 = icmp eq i64 %masked2388, 0, !dbg !90
  br i1 %is_reference2389, label %check_class_id2390, label %continue2386, !dbg !90

serial_fallback2366:                              ; preds = %correct_class2374
  store i32 84, i32* %ip_pos, !dbg !90
  %121 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 84, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

check_class_id2390:                               ; preds = %correct_serial2375
  %class_pos2392 = getelementptr %"struct.rubinius::Object"* %stack_load2385, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2393 = load %"struct.rubinius::Class"** %class_pos2392, !dbg !90
  %class_id_pos2394 = getelementptr %"struct.rubinius::Class"* %ref_class2393, i32 0, i32 4, !dbg !90
  %class_id2395 = load i32* %class_id_pos2394, !dbg !90
  %check_class_id2396 = icmp eq i32 %class_id2395, 77, !dbg !90
  br i1 %check_class_id2396, label %correct_class2391, label %continue2386, !dbg !90

correct_class2391:                                ; preds = %check_class_id2390
  %arg_float2397 = bitcast %"struct.rubinius::Object"* %stack_load2385 to %"struct.rubinius::Float"*, !dbg !90
  %arg.value_pos2398 = getelementptr %"struct.rubinius::Float"* %arg_float2397, i32 0, i32 1, !dbg !90
  %farg2399 = load double* %arg.value_pos2398, !dbg !90
  br label %continue2400, !dbg !90

continue2386:                                     ; preds = %check_class_id2390, %correct_serial2375
  %cast2401 = ptrtoint %"struct.rubinius::Object"* %stack_load2385 to i64, !dbg !90
  %masked2402 = and i64 %cast2401, 1, !dbg !90
  %is_fixnum2403 = icmp eq i64 %masked2402, 1, !dbg !90
  br i1 %is_fixnum2403, label %guarded_body2404, label %class_fallback2365, !dbg !90

guarded_body2404:                                 ; preds = %continue2386
  %as_int2405 = ptrtoint %"struct.rubinius::Object"* %stack_load2385 to i64, !dbg !90
  %ashr2406 = ashr i64 %as_int2405, 1, !dbg !90
  %122 = sitofp i64 %ashr2406 to double, !dbg !90
  br label %continue2400, !dbg !90

continue2400:                                     ; preds = %guarded_body2404, %correct_class2391
  %rhs2407 = phi double [ %farg2399, %correct_class2391 ], [ %122, %guarded_body2404 ], !dbg !90
  %stack_pos2408 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2409 = load %"struct.rubinius::Object"** %stack_pos2408, !dbg !90
  %self_float2410 = bitcast %"struct.rubinius::Object"* %stack_load2409 to %"struct.rubinius::Float"*, !dbg !90
  %self.value_pos2411 = getelementptr %"struct.rubinius::Float"* %self_float2410, i32 0, i32 1, !dbg !90
  %fself2412 = load double* %self.value_pos2411, !dbg !90
  %float.add2413 = fadd double %fself2412, %rhs2407, !dbg !90
  %result2414 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !90, !rbx-classid !87
  %123 = getelementptr %"struct.rubinius::Float"* %result2414, i32 0, i32 1, !dbg !90
  store double %float.add2413, double* %123, !dbg !90
  %124 = bitcast %"struct.rubinius::Float"* %result2414 to %"struct.rubinius::Object"*, !dbg !90
  br label %continue2367, !dbg !90

class_fallback2365:                               ; preds = %continue2386, %check_class_id2373, %continue2306
  %stack_pos2415 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2416 = load %"struct.rubinius::Object"** %stack_pos2415, !dbg !90
  store %"struct.rubinius::Object"* %stack_load2416, %"struct.rubinius::Object"** %out_args_recv, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !90
  store i32 1, i32* %out_args_total, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !90
  %stack_pos2417 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !90
  store %"struct.rubinius::Object"** %stack_pos2417, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !90
  %cache_const2418 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549080 to %"struct.rubinius::CallSite"**), !dbg !90
  %execute_pos2419 = getelementptr %"struct.rubinius::CallSite"* %cache_const2418, i32 0, i32 2, !dbg !90
  %execute2420 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2419, !dbg !90
  store i32 84, i32* %ip_pos, !dbg !90
  %call_site_execute2421 = call %"struct.rubinius::Object"* %execute2420(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2418, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2423 = icmp eq %"struct.rubinius::Object"* %call_site_execute2421, null, !dbg !90
  br i1 %null_check2423, label %bail_out, label %check_active2422, !dbg !90

check_active2422:                                 ; preds = %class_fallback2365
  br label %continue2367, !dbg !90

continue2428:                                     ; preds = %continue2873
  %local_pos2877 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 8, !dbg !90
  %stack_pos2878 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !90
  %stack_load2879 = load %"struct.rubinius::Object"** %stack_pos2878, !dbg !90
  store %"struct.rubinius::Object"* %stack_load2879, %"struct.rubinius::Object"** %local_pos2877, !dbg !90
  %local_pos2880 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !95
  %local2881 = load %"struct.rubinius::Object"** %local_pos2880, !dbg !95, !rbx-classid !35
  %stack_pos2882 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  store %"struct.rubinius::Object"* %local2881, %"struct.rubinius::Object"** %stack_pos2882, !dbg !95
  %local_pos2883 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 8, !dbg !95
  %local2884 = load %"struct.rubinius::Object"** %local_pos2883, !dbg !95, !rbx-classid !96
  %stack_pos2885 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  store %"struct.rubinius::Object"* %local2884, %"struct.rubinius::Object"** %stack_pos2885, !dbg !95
  %local_pos2886 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 8, !dbg !95
  %local2887 = load %"struct.rubinius::Object"** %local_pos2886, !dbg !95, !rbx-classid !96
  %stack_pos2888 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  store %"struct.rubinius::Object"* %local2887, %"struct.rubinius::Object"** %stack_pos2888, !dbg !95
  %stack_pos2892 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load2893 = load %"struct.rubinius::Object"** %stack_pos2892, !dbg !95, !rbx-classid !96
  %cast2894 = ptrtoint %"struct.rubinius::Object"* %stack_load2893 to i64, !dbg !95
  %masked2895 = and i64 %cast2894, 3, !dbg !95
  %is_reference2896 = icmp eq i64 %masked2895, 0, !dbg !95
  br i1 %is_reference2896, label %check_class_id2897, label %class_fallback2889, !dbg !95

check_class_id2434:                               ; preds = %continue2367
  %class_pos2437 = getelementptr %"struct.rubinius::Object"* %stack_load2430, i32 0, i32 0, i32 1, !dbg !90
  %ref_class2438 = load %"struct.rubinius::Class"** %class_pos2437, !dbg !90
  %class_id_pos2439 = getelementptr %"struct.rubinius::Class"* %ref_class2438, i32 0, i32 4, !dbg !90
  %class_id2440 = load i32* %class_id_pos2439, !dbg !90
  %check_class_id2441 = icmp eq i32 %class_id2440, 779, !dbg !90
  br i1 %check_class_id2441, label %correct_class2435, label %class_fallback2426, !dbg !90

correct_class2435:                                ; preds = %check_class_id2434
  %serial_id_pos2442 = getelementptr %"struct.rubinius::Class"* %ref_class2438, i32 0, i32 5, !dbg !90
  %serial_id2443 = load i32* %serial_id_pos2442, !dbg !90
  %check_serial_id2444 = icmp eq i32 %serial_id2443, 7, !dbg !90
  br i1 %check_serial_id2444, label %correct_serial2436, label %serial_fallback2427, !dbg !90

class_fallback2426:                               ; preds = %check_class_id2434, %continue2367
  store i32 87, i32* %ip_pos, !dbg !90
  %125 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !90
  br label %return_pad, !dbg !90

correct_serial2436:                               ; preds = %correct_class2435
  %stack_pos2447 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !90
  %stack_load2448 = load %"struct.rubinius::Object"** %stack_pos2447, !dbg !90
  %stack_pos2449 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !90
  %stack_load2450 = load %"struct.rubinius::Object"** %stack_pos2449, !dbg !90, !rbx-classid !91
  br label %inline_entry2451, !dbg !90

serial_fallback2427:                              ; preds = %correct_class2435
  store i32 87, i32* %ip_pos, !dbg !90
  %126 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad, !dbg !90

inline_entry2451:                                 ; preds = %correct_serial2436
  %call_frame2455 = bitcast %"struct.rubinius::Object"** %cfstk2454 to %"struct.rubinius::CallFrame"*, !dbg !97
  %stack2456 = getelementptr %"struct.rubinius::Object"** %cfstk2454, i32 9, !dbg !97
  %vars2458 = bitcast %"struct.rubinius::Object"** %var_mem2457 to %"struct.rubinius::StackVariables"*, !dbg !97
  %127 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 0, !dbg !97
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %127, !dbg !97
  %128 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 2, !dbg !97
  store i8* inttoptr (i64 140495695957536 to i8*), i8** %128, !dbg !97
  %compiled_code2459 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695957536 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !97
  %129 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 3, !dbg !97
  store %"struct.rubinius::CompiledCode"* %compiled_code2459, %"struct.rubinius::CompiledCode"** %129, !dbg !97
  %constant_scope_pos2460 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code2459, i32 0, i32 13, !dbg !97
  %constant_scope2461 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos2460, !dbg !97
  %130 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !97
  store %"struct.rubinius::ConstantScope"* %constant_scope2461, %"struct.rubinius::ConstantScope"** %130, !dbg !97
  %131 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 4, !dbg !97
  store i32 12, i32* %131, !dbg !97
  %132 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 5, !dbg !97
  store i32 0, i32* %132, !dbg !97
  %133 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 8, !dbg !97
  store %"struct.rubinius::StackVariables"* %vars2458, %"struct.rubinius::StackVariables"** %133, !dbg !97
  %stack_pos2462 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2462, !dbg !97
  %stack_pos2463 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2463, !dbg !97
  %stack_pos2464 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 2, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2464, !dbg !97
  %stack_pos2465 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 3, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2465, !dbg !97
  %module2466 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695957536 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !97
  %134 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 0, !dbg !97
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %134, !dbg !97
  %135 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 2, !dbg !97
  store %"struct.rubinius::Object"* %stack_load2450, %"struct.rubinius::Object"** %135, !dbg !97
  %136 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 4, !dbg !97
  store %"struct.rubinius::Module"* %module2466, %"struct.rubinius::Module"** %136, !dbg !97
  %137 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 3, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %137, !dbg !97
  %138 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 1, !dbg !97
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %138, !dbg !97
  %139 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 5, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %139, !dbg !97
  %local_pos2467 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !97
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2467, !dbg !97
  %local_pos2468 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !97
  store %"struct.rubinius::Object"* %stack_load2448, %"struct.rubinius::Object"** %local_pos2468, !dbg !97
  br label %method_body2452, !dbg !97

bail_out2469:                                     ; preds = %continue2858, %continue2837, %use_call2836, %use_call2780, %use_call2751, %use_call2726, %class_fallback2663, %ip25, %use_call2617, %use_call2592, %class_fallback2540, %continue2562, %use_call2493
  %rth2470 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !97
  br i1 %rth2470, label %ret_raise_val2471, label %ret_null2472, !dbg !97

ret_raise_val2471:                                ; preds = %bail_out2469
  %crv2473 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !97
  br label %return_pad2445, !dbg !97

ret_null2472:                                     ; preds = %bail_out2469
  br label %return_pad2445, !dbg !97

method_body2452:                                  ; preds = %inline_entry2451
  %ip_pos2474 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 5, !dbg !97
  %out_args_name2475 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !97
  %out_args_recv2476 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !97
  %out_args_block2477 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !97
  %out_args_total2478 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !97
  %out_args_arguments2479 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !97
  %out_args_container2480 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !97
  %local_pos2481 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !98
  %local2482 = load %"struct.rubinius::Object"** %local_pos2481, !dbg !98, !rbx-classid !26
  %stack_pos2483 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %local2482, %"struct.rubinius::Object"** %stack_pos2483, !dbg !98
  %global_serial2484 = load i32* inttoptr (i64 22553876 to i32*), !dbg !98
  %constant_cache2485 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), !dbg !98
  %constant_cache_pos2486 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i32 0, i32 4, !dbg !98
  %constant_scope2487 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2486, !dbg !98
  %scope_pos2488 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !98
  %frame_scope2489 = load %"struct.rubinius::ConstantScope"** %scope_pos2488, !dbg !98
  %same_scope2490 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2487, %frame_scope2489, !dbg !98
  br i1 %same_scope2490, label %check_serial2491, label %use_call2493, !dbg !98

check_serial2491:                                 ; preds = %method_body2452
  %serial_pos2495 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i32 0, i32 7, !dbg !98
  %serial2496 = load i32* %serial_pos2495, !dbg !98
  %use_cache2497 = icmp eq i32 %global_serial2484, %serial2496, !dbg !98
  br i1 %use_cache2497, label %use_cache2492, label %use_call2493, !dbg !98

use_cache2492:                                    ; preds = %check_serial2491
  %value_pos2498 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i32 0, i32 2, !dbg !98
  %cached_value2499 = load %"struct.rubinius::Object"** %value_pos2498, !dbg !98
  br label %continue2494, !dbg !98

use_call2493:                                     ; preds = %check_serial2491, %method_body2452
  store i32 2, i32* %ip_pos2474, !dbg !98
  %push_const_fast2500 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !98
  %null_check2503 = icmp eq %"struct.rubinius::Object"* %push_const_fast2500, null, !dbg !98
  br i1 %null_check2503, label %bail_out2469, label %check_active2502, !dbg !98

continue2494:                                     ; preds = %continue2501, %use_cache2492
  %constant2504 = phi %"struct.rubinius::Object"* [ %cached_value2499, %use_cache2492 ], [ %push_const_fast2500, %continue2501 ], !dbg !98, !rbx-classid !99
  %stack_pos2505 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !98
  store %"struct.rubinius::Object"* %constant2504, %"struct.rubinius::Object"** %stack_pos2505, !dbg !98
  %stack_pos2509 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2510 = load %"struct.rubinius::Object"** %stack_pos2509, !dbg !98, !rbx-classid !26
  %stack_pos2511 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !98
  %stack_load2512 = load %"struct.rubinius::Object"** %stack_pos2511, !dbg !98, !rbx-classid !99
  %cast2518 = ptrtoint %"struct.rubinius::Object"* %stack_load2510 to i64, !dbg !98
  %masked2519 = and i64 %cast2518, 3, !dbg !98
  %is_reference2520 = icmp eq i64 %masked2519, 0, !dbg !98
  br i1 %is_reference2520, label %use_cache2517, label %negative2516, !dbg !98

continue2501:                                     ; preds = %check_active2502
  br label %continue2494, !dbg !98

check_active2502:                                 ; preds = %use_call2493
  br label %continue2501, !dbg !98

class_fallback2506:                               ; No predecessors!
  store i32 4, i32* %ip_pos2474, !dbg !98
  %140 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !98
  br label %return_pad2445, !dbg !98

serial_fallback2507:                              ; No predecessors!
  store i32 4, i32* %ip_pos2474, !dbg !98
  %141 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !98
  br label %return_pad2445, !dbg !98

continue2508:                                     ; preds = %continue2513
  %stack_pos2528 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2529 = load %"struct.rubinius::Object"** %stack_pos2528, !dbg !98
  %stack_pos2530 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !98
  store %"struct.rubinius::Object"* %stack_load2529, %"struct.rubinius::Object"** %stack_pos2530, !dbg !98
  %stack_pos2531 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !98
  %stack_load2532 = load %"struct.rubinius::Object"** %stack_pos2531, !dbg !98
  %as_int2533 = ptrtoint %"struct.rubinius::Object"* %stack_load2532 to i64, !dbg !98
  %and2534 = and i64 %as_int2533, 15, !dbg !98
  %is_true2535 = icmp eq i64 %and2534, 10, !dbg !98
  br i1 %is_true2535, label %ip16, label %continue2536, !dbg !98

continue2513:                                     ; preds = %use_call2514, %negative2516, %positive2515
  %constant2526 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive2515 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative2516 ], [ %kind_of2525, %use_call2514 ], !dbg !98
  %stack_pos2527 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %constant2526, %"struct.rubinius::Object"** %stack_pos2527, !dbg !98
  br label %continue2508, !dbg !98

use_call2514:                                     ; No predecessors!
  %kind_of2525 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2510, %"struct.rubinius::Object"* %stack_load2512) #0, !dbg !98
  br label %continue2513, !dbg !98

positive2515:                                     ; preds = %use_cache2517
  br label %continue2513, !dbg !98

negative2516:                                     ; preds = %use_cache2517, %continue2494
  br label %continue2513, !dbg !98

use_cache2517:                                    ; preds = %continue2494
  %word_pos2521 = getelementptr %"struct.rubinius::Object"* %stack_load2510, i32 0, i32 0, i32 0, i32 0, !dbg !98
  %flags2522 = load i64* %word_pos2521, !dbg !98
  %mask2523 = and i64 %flags2522, 255, !dbg !98
  %is_type2524 = icmp eq i64 %mask2523, 35, !dbg !98
  br i1 %is_type2524, label %positive2515, label %negative2516, !dbg !98

continue2536:                                     ; preds = %continue2508
  br label %ip10, !dbg !98

ip10:                                             ; preds = %continue2536
  %local_pos2537 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !98
  %local2538 = load %"struct.rubinius::Object"** %local_pos2537, !dbg !98, !rbx-classid !26
  %stack_pos2539 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %local2538, %"struct.rubinius::Object"** %stack_pos2539, !dbg !98
  %stack_pos2543 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2544 = load %"struct.rubinius::Object"** %stack_pos2543, !dbg !98, !rbx-classid !26
  %cast2545 = ptrtoint %"struct.rubinius::Object"* %stack_load2544 to i64, !dbg !98
  %masked2546 = and i64 %cast2545, 3, !dbg !98
  %is_reference2547 = icmp eq i64 %masked2546, 0, !dbg !98
  br i1 %is_reference2547, label %check_class_id2548, label %class_fallback2540, !dbg !98

continue2542:                                     ; preds = %check_active2573, %continue2564
  %send_result2575 = phi %"struct.rubinius::Object"* [ %prim_value2561, %continue2564 ], [ %call_site_execute2572, %check_active2573 ], !dbg !98
  %stack_pos2576 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %send_result2575, %"struct.rubinius::Object"** %stack_pos2576, !dbg !98
  br label %ip16, !dbg !98

ip16:                                             ; preds = %continue2542, %continue2508
  %stack_pos2577 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2578 = load %"struct.rubinius::Object"** %stack_pos2577, !dbg !98
  %as_int2579 = ptrtoint %"struct.rubinius::Object"* %stack_load2578 to i64, !dbg !98
  %and2580 = and i64 %as_int2579, 15, !dbg !98
  %is_true2581 = icmp eq i64 %and2580, 10, !dbg !98
  br i1 %is_true2581, label %ip25, label %continue2582, !dbg !98

check_class_id2548:                               ; preds = %ip10
  %class_pos2551 = getelementptr %"struct.rubinius::Object"* %stack_load2544, i32 0, i32 0, i32 1, !dbg !98
  %ref_class2552 = load %"struct.rubinius::Class"** %class_pos2551, !dbg !98
  %class_id_pos2553 = getelementptr %"struct.rubinius::Class"* %ref_class2552, i32 0, i32 4, !dbg !98
  %class_id2554 = load i32* %class_id_pos2553, !dbg !98
  %check_class_id2555 = icmp eq i32 %class_id2554, 77, !dbg !98
  br i1 %check_class_id2555, label %correct_class2549, label %class_fallback2540, !dbg !98

correct_class2549:                                ; preds = %check_class_id2548
  %serial_id_pos2556 = getelementptr %"struct.rubinius::Class"* %ref_class2552, i32 0, i32 5, !dbg !98
  %serial_id2557 = load i32* %serial_id_pos2556, !dbg !98
  %check_serial_id2558 = icmp eq i32 %serial_id2557, 224, !dbg !98
  br i1 %check_serial_id2558, label %correct_serial2550, label %serial_fallback2541, !dbg !98

class_fallback2540:                               ; preds = %correct_serial2550, %check_class_id2548, %ip10
  %stack_pos2567 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2568 = load %"struct.rubinius::Object"** %stack_pos2567, !dbg !98, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load2568, %"struct.rubinius::Object"** %out_args_recv2476, !dbg !98
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name2475, !dbg !98
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block2477, !dbg !98
  store i32 0, i32* %out_args_total2478, !dbg !98
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container2480, !dbg !98
  %cache_const2569 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), !dbg !98
  %execute_pos2570 = getelementptr %"struct.rubinius::CallSite"* %cache_const2569, i32 0, i32 2, !dbg !98
  %execute2571 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2570, !dbg !98
  store i32 13, i32* %ip_pos2474, !dbg !98
  %call_site_execute2572 = call %"struct.rubinius::Object"* %execute2571(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2569, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !98
  %null_check2574 = icmp eq %"struct.rubinius::Object"* %call_site_execute2572, null, !dbg !98
  br i1 %null_check2574, label %bail_out2469, label %check_active2573, !dbg !98

correct_serial2550:                               ; preds = %correct_class2549
  %stack_pos2559 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2560 = load %"struct.rubinius::Object"** %stack_pos2559, !dbg !98, !rbx-classid !26
  %prim_value2561 = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2560) #1, !dbg !98
  %ptr2int2563 = ptrtoint %"struct.rubinius::Object"* %prim_value2561 to i64, !dbg !98
  %142 = icmp eq i64 %ptr2int2563, 34, !dbg !98
  br i1 %142, label %class_fallback2540, label %continue2562, !dbg !98

serial_fallback2541:                              ; preds = %correct_class2549
  store i32 13, i32* %ip_pos2474, !dbg !98
  %143 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !98
  br label %return_pad2445, !dbg !98

continue2562:                                     ; preds = %correct_serial2550
  %null_check2566 = icmp eq %"struct.rubinius::Object"* %prim_value2561, null, !dbg !98
  br i1 %null_check2566, label %bail_out2469, label %check_active2565, !dbg !98

continue2564:                                     ; preds = %check_active2565
  br label %continue2542, !dbg !98

check_active2565:                                 ; preds = %continue2562
  br label %continue2564, !dbg !98

check_active2573:                                 ; preds = %class_fallback2540
  br label %continue2542, !dbg !98

continue2582:                                     ; preds = %ip16
  br label %ip18, !dbg !98

ip18:                                             ; preds = %continue2582
  %global_serial2583 = load i32* inttoptr (i64 22553876 to i32*), !dbg !98
  %constant_cache2584 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), !dbg !98
  %constant_cache_pos2585 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i32 0, i32 4, !dbg !98
  %constant_scope2586 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2585, !dbg !98
  %scope_pos2587 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !98
  %frame_scope2588 = load %"struct.rubinius::ConstantScope"** %scope_pos2587, !dbg !98
  %same_scope2589 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2586, %frame_scope2588, !dbg !98
  br i1 %same_scope2589, label %check_serial2590, label %use_call2592, !dbg !98

check_serial2590:                                 ; preds = %ip18
  %serial_pos2594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i32 0, i32 7, !dbg !98
  %serial2595 = load i32* %serial_pos2594, !dbg !98
  %use_cache2596 = icmp eq i32 %global_serial2583, %serial2595, !dbg !98
  br i1 %use_cache2596, label %use_cache2591, label %use_call2592, !dbg !98

use_cache2591:                                    ; preds = %check_serial2590
  %value_pos2597 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i32 0, i32 2, !dbg !98
  %cached_value2598 = load %"struct.rubinius::Object"** %value_pos2597, !dbg !98
  br label %continue2593, !dbg !98

use_call2592:                                     ; preds = %check_serial2590, %ip18
  store i32 18, i32* %ip_pos2474, !dbg !98
  %push_const_fast2599 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !98
  %null_check2602 = icmp eq %"struct.rubinius::Object"* %push_const_fast2599, null, !dbg !98
  br i1 %null_check2602, label %bail_out2469, label %check_active2601, !dbg !98

continue2593:                                     ; preds = %continue2600, %use_cache2591
  %constant2603 = phi %"struct.rubinius::Object"* [ %cached_value2598, %use_cache2591 ], [ %push_const_fast2599, %continue2600 ], !dbg !98, !rbx-classid !100
  %stack_pos2604 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %constant2603, %"struct.rubinius::Object"** %stack_pos2604, !dbg !98
  %stack_pos2605 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2606 = load %"struct.rubinius::Object"** %stack_pos2605, !dbg !98, !rbx-classid !100
  %global_serial2607 = load i32* inttoptr (i64 22553876 to i32*), !dbg !98
  %constant_cache2608 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), !dbg !98
  %constant_cache_pos2609 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i32 0, i32 4, !dbg !98
  %constant_scope2610 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2609, !dbg !98
  %scope_pos2611 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !98
  %frame_scope2612 = load %"struct.rubinius::ConstantScope"** %scope_pos2611, !dbg !98
  %same_scope2613 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2610, %frame_scope2612, !dbg !98
  br i1 %same_scope2613, label %check_serial2614, label %use_call2617, !dbg !98

continue2600:                                     ; preds = %check_active2601
  br label %continue2593, !dbg !98

check_active2601:                                 ; preds = %use_call2592
  br label %continue2600, !dbg !98

check_serial2614:                                 ; preds = %continue2593
  %serial_pos2619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i32 0, i32 7, !dbg !98
  %serial2620 = load i32* %serial_pos2619, !dbg !98
  %use_under2621 = icmp eq i32 %global_serial2607, %serial2620, !dbg !98
  br i1 %use_under2621, label %check_under2615, label %use_call2617, !dbg !98

check_under2615:                                  ; preds = %check_serial2614
  %value_pos2622 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i32 0, i32 3, !dbg !98
  %cached_under2623 = load %"struct.rubinius::Module"** %value_pos2622, !dbg !98
  %downcast2624 = bitcast %"struct.rubinius::Module"* %cached_under2623 to %"struct.rubinius::Object"*, !dbg !98
  %use_cache2625 = icmp eq %"struct.rubinius::Object"* %downcast2624, %stack_load2606, !dbg !98
  br i1 %use_cache2625, label %use_cache2616, label %use_call2617, !dbg !98

use_cache2616:                                    ; preds = %check_under2615
  %value_pos2626 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i32 0, i32 2, !dbg !98
  %cached_value2627 = load %"struct.rubinius::Object"** %value_pos2626, !dbg !98
  br label %continue2618, !dbg !98

use_call2617:                                     ; preds = %check_under2615, %check_serial2614, %continue2593
  store i32 20, i32* %ip_pos2474, !dbg !98
  %constant2628 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load2606) #0, !dbg !98
  %null_check2631 = icmp eq %"struct.rubinius::Object"* %constant2628, null, !dbg !98
  br i1 %null_check2631, label %bail_out2469, label %check_active2630, !dbg !98

continue2618:                                     ; preds = %continue2629, %use_cache2616
  %constant2632 = phi %"struct.rubinius::Object"* [ %cached_value2627, %use_cache2616 ], [ %constant2628, %continue2629 ], !dbg !98, !rbx-classid !101
  %stack_pos2633 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* %constant2632, %"struct.rubinius::Object"** %stack_pos2633, !dbg !98
  %stack_pos2634 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  %stack_load2635 = load %"struct.rubinius::Object"** %stack_pos2634, !dbg !98, !rbx-classid !101
  br label %return_pad2445, !dbg !98

ip25:                                             ; preds = %ip16
  %stack_pos2636 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !98
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2636, !dbg !98
  %system_object2637 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !102
  %stack_pos2638 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !102
  store %"struct.rubinius::Object"* %system_object2637, %"struct.rubinius::Object"** %stack_pos2638, !dbg !102
  %local_pos2639 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !102
  %local2640 = load %"struct.rubinius::Object"** %local_pos2639, !dbg !102, !rbx-classid !26
  %stack_pos2641 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !102
  store %"struct.rubinius::Object"* %local2640, %"struct.rubinius::Object"** %stack_pos2641, !dbg !102
  %stack_pos2645 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !102
  %stack_load2646 = load %"struct.rubinius::Object"** %stack_pos2645, !dbg !102
  store %"struct.rubinius::Object"* %stack_load2646, %"struct.rubinius::Object"** %out_args_recv2476, !dbg !102
  store %"struct.rubinius::Symbol"* inttoptr (i64 18734 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name2475, !dbg !102
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block2477, !dbg !102
  store i32 1, i32* %out_args_total2478, !dbg !102
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container2480, !dbg !102
  %stack_pos2647 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !102
  store %"struct.rubinius::Object"** %stack_pos2647, %"struct.rubinius::Object"*** %out_args_arguments2479, !dbg !102
  %cache_const2648 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411784 to %"struct.rubinius::CallSite"**), !dbg !102
  %execute_pos2649 = getelementptr %"struct.rubinius::CallSite"* %cache_const2648, i32 0, i32 2, !dbg !102
  %execute2650 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2649, !dbg !102
  store i32 30, i32* %ip_pos2474, !dbg !102
  %call_site_execute2651 = call %"struct.rubinius::Object"* %execute2650(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2648, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !102
  %null_check2654 = icmp eq %"struct.rubinius::Object"* %call_site_execute2651, null, !dbg !102
  br i1 %null_check2654, label %bail_out2469, label %check_active2653, !dbg !102

continue2629:                                     ; preds = %check_active2630
  br label %continue2618, !dbg !98

check_active2630:                                 ; preds = %use_call2617
  br label %continue2629, !dbg !98

class_fallback2642:                               ; No predecessors!

serial_fallback2643:                              ; No predecessors!

continue2644:                                     ; No predecessors!

continue2652:                                     ; preds = %check_active2653
  %stack_pos2655 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !102
  store %"struct.rubinius::Object"* %call_site_execute2651, %"struct.rubinius::Object"** %stack_pos2655, !dbg !102
  %local_pos2656 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !102
  %stack_pos2657 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !102
  %stack_load2658 = load %"struct.rubinius::Object"** %stack_pos2657, !dbg !102
  store %"struct.rubinius::Object"* %stack_load2658, %"struct.rubinius::Object"** %local_pos2656, !dbg !102
  %local_pos2659 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !103
  %local2660 = load %"struct.rubinius::Object"** %local_pos2659, !dbg !103, !rbx-classid !26
  %stack_pos2661 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  store %"struct.rubinius::Object"* %local2660, %"struct.rubinius::Object"** %stack_pos2661, !dbg !103
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 3, !dbg !103
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !103
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !103
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !103
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 5, !dbg !103
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !103, !rbx-classid !87
  %stack_pos2662 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !103
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos2662, !dbg !103
  %stack_pos2666 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  %stack_load2667 = load %"struct.rubinius::Object"** %stack_pos2666, !dbg !103, !rbx-classid !26
  %cast2668 = ptrtoint %"struct.rubinius::Object"* %stack_load2667 to i64, !dbg !103
  %masked2669 = and i64 %cast2668, 3, !dbg !103
  %is_reference2670 = icmp eq i64 %masked2669, 0, !dbg !103
  br i1 %is_reference2670, label %check_class_id2671, label %class_fallback2663, !dbg !103

check_active2653:                                 ; preds = %ip25
  br label %continue2652, !dbg !102

continue2665:                                     ; preds = %check_active2705, %float_compare_operation
  %send_result2707 = phi %"struct.rubinius::Object"* [ %select_bool, %float_compare_operation ], [ %call_site_execute2704, %check_active2705 ], !dbg !103
  %stack_pos2708 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  store %"struct.rubinius::Object"* %send_result2707, %"struct.rubinius::Object"** %stack_pos2708, !dbg !103
  %stack_pos2709 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  %stack_load2710 = load %"struct.rubinius::Object"** %stack_pos2709, !dbg !103
  %as_int2711 = ptrtoint %"struct.rubinius::Object"* %stack_load2710 to i64, !dbg !103
  %and2712 = and i64 %as_int2711, 15, !dbg !103
  %is_true2713 = icmp eq i64 %and2712, 10, !dbg !103
  br i1 %is_true2713, label %ip48, label %continue2714, !dbg !103

check_class_id2671:                               ; preds = %continue2652
  %class_pos2674 = getelementptr %"struct.rubinius::Object"* %stack_load2667, i32 0, i32 0, i32 1, !dbg !103
  %ref_class2675 = load %"struct.rubinius::Class"** %class_pos2674, !dbg !103
  %class_id_pos2676 = getelementptr %"struct.rubinius::Class"* %ref_class2675, i32 0, i32 4, !dbg !103
  %class_id2677 = load i32* %class_id_pos2676, !dbg !103
  %check_class_id2678 = icmp eq i32 %class_id2677, 77, !dbg !103
  br i1 %check_class_id2678, label %correct_class2672, label %class_fallback2663, !dbg !103

correct_class2672:                                ; preds = %check_class_id2671
  %serial_id_pos2679 = getelementptr %"struct.rubinius::Class"* %ref_class2675, i32 0, i32 5, !dbg !103
  %serial_id2680 = load i32* %serial_id_pos2679, !dbg !103
  %check_serial_id2681 = icmp eq i32 %serial_id2680, 224, !dbg !103
  br i1 %check_serial_id2681, label %correct_serial2673, label %serial_fallback2664, !dbg !103

correct_serial2673:                               ; preds = %correct_class2672
  %stack_pos2682 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !103
  %stack_load2683 = load %"struct.rubinius::Object"** %stack_pos2682, !dbg !103, !rbx-classid !87
  %arg_float2684 = bitcast %"struct.rubinius::Object"* %stack_load2683 to %"struct.rubinius::Float"*, !dbg !103
  %arg.value_pos2685 = getelementptr %"struct.rubinius::Float"* %arg_float2684, i32 0, i32 1, !dbg !103
  %farg2686 = load double* %arg.value_pos2685, !dbg !103
  br label %float_compare_operation, !dbg !103

serial_fallback2664:                              ; preds = %correct_class2672
  store i32 40, i32* %ip_pos2474, !dbg !103
  %144 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !103
  br label %return_pad2445, !dbg !103

check_fixnum:                                     ; No predecessors!
  %cast2687 = ptrtoint %"struct.rubinius::Object"* %stack_load2683 to i64, !dbg !103
  %masked2688 = and i64 %cast2687, 1, !dbg !103
  %is_fixnum2689 = icmp eq i64 %masked2688, 1, !dbg !103
  br i1 %is_fixnum2689, label %guarded_body2690, label %class_fallback2663, !dbg !103

guarded_body2690:                                 ; preds = %check_fixnum
  %as_int2691 = ptrtoint %"struct.rubinius::Object"* %stack_load2683 to i64, !dbg !103
  %ashr2692 = ashr i64 %as_int2691, 1, !dbg !103
  %145 = uitofp i64 %ashr2692 to double, !dbg !103
  br label %float_compare_operation, !dbg !103

float_compare_operation:                          ; preds = %guarded_body2690, %correct_serial2673
  %float_rhs = phi double [ %farg2686, %correct_serial2673 ], [ %145, %guarded_body2690 ], !dbg !103
  %stack_pos2693 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  %stack_load2694 = load %"struct.rubinius::Object"** %stack_pos2693, !dbg !103, !rbx-classid !26
  %self_float2695 = bitcast %"struct.rubinius::Object"* %stack_load2694 to %"struct.rubinius::Float"*, !dbg !103
  %self.value_pos2696 = getelementptr %"struct.rubinius::Float"* %self_float2695, i32 0, i32 1, !dbg !103
  %fself2697 = load double* %self.value_pos2696, !dbg !103
  %float.ge = fcmp uge double %fself2697, %float_rhs, !dbg !103
  %select_bool = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !103
  br label %continue2665, !dbg !103

class_fallback2663:                               ; preds = %check_fixnum, %check_class_id2671, %continue2652
  %stack_pos2698 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  %stack_load2699 = load %"struct.rubinius::Object"** %stack_pos2698, !dbg !103, !rbx-classid !26
  store %"struct.rubinius::Object"* %stack_load2699, %"struct.rubinius::Object"** %out_args_recv2476, !dbg !103
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name2475, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block2477, !dbg !103
  store i32 1, i32* %out_args_total2478, !dbg !103
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container2480, !dbg !103
  %stack_pos2700 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !103
  store %"struct.rubinius::Object"** %stack_pos2700, %"struct.rubinius::Object"*** %out_args_arguments2479, !dbg !103
  %cache_const2701 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), !dbg !103
  %execute_pos2702 = getelementptr %"struct.rubinius::CallSite"* %cache_const2701, i32 0, i32 2, !dbg !103
  %execute2703 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2702, !dbg !103
  store i32 40, i32* %ip_pos2474, !dbg !103
  %call_site_execute2704 = call %"struct.rubinius::Object"* %execute2703(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2701, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !103
  %null_check2706 = icmp eq %"struct.rubinius::Object"* %call_site_execute2704, null, !dbg !103
  br i1 %null_check2706, label %bail_out2469, label %check_active2705, !dbg !103

check_active2705:                                 ; preds = %class_fallback2663
  br label %continue2665, !dbg !103

continue2714:                                     ; preds = %continue2665
  br label %ip452453, !dbg !103

ip452453:                                         ; preds = %continue2714
  %stack_pos2715 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2715, !dbg !103
  br label %ip58, !dbg !103

continue2716:                                     ; No predecessors!
  br label %ip48, !dbg !103

ip58:                                             ; preds = %continue2869, %ip452453
  %global_serial2717 = load i32* inttoptr (i64 22553876 to i32*), !dbg !104
  %constant_cache2718 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), !dbg !104
  %constant_cache_pos2719 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i32 0, i32 4, !dbg !104
  %constant_scope2720 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2719, !dbg !104
  %scope_pos2721 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !104
  %frame_scope2722 = load %"struct.rubinius::ConstantScope"** %scope_pos2721, !dbg !104
  %same_scope2723 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2720, %frame_scope2722, !dbg !104
  br i1 %same_scope2723, label %check_serial2724, label %use_call2726, !dbg !104

check_serial2724:                                 ; preds = %ip58
  %serial_pos2728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i32 0, i32 7, !dbg !104
  %serial2729 = load i32* %serial_pos2728, !dbg !104
  %use_cache2730 = icmp eq i32 %global_serial2717, %serial2729, !dbg !104
  br i1 %use_cache2730, label %use_cache2725, label %use_call2726, !dbg !104

use_cache2725:                                    ; preds = %check_serial2724
  %value_pos2731 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i32 0, i32 2, !dbg !104
  %cached_value2732 = load %"struct.rubinius::Object"** %value_pos2731, !dbg !104
  br label %continue2727, !dbg !104

use_call2726:                                     ; preds = %check_serial2724, %ip58
  store i32 59, i32* %ip_pos2474, !dbg !104
  %push_const_fast2733 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !104
  %null_check2736 = icmp eq %"struct.rubinius::Object"* %push_const_fast2733, null, !dbg !104
  br i1 %null_check2736, label %bail_out2469, label %check_active2735, !dbg !104

continue2727:                                     ; preds = %continue2734, %use_cache2725
  %constant2737 = phi %"struct.rubinius::Object"* [ %cached_value2732, %use_cache2725 ], [ %push_const_fast2733, %continue2734 ], !dbg !104, !rbx-classid !105
  %stack_pos2738 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  store %"struct.rubinius::Object"* %constant2737, %"struct.rubinius::Object"** %stack_pos2738, !dbg !104
  %stack_pos2739 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  %stack_load2740 = load %"struct.rubinius::Object"** %stack_pos2739, !dbg !104, !rbx-classid !105
  %global_serial2741 = load i32* inttoptr (i64 22553876 to i32*), !dbg !104
  %constant_cache2742 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), !dbg !104
  %constant_cache_pos2743 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i32 0, i32 4, !dbg !104
  %constant_scope2744 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2743, !dbg !104
  %scope_pos2745 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !104
  %frame_scope2746 = load %"struct.rubinius::ConstantScope"** %scope_pos2745, !dbg !104
  %same_scope2747 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2744, %frame_scope2746, !dbg !104
  br i1 %same_scope2747, label %check_serial2748, label %use_call2751, !dbg !104

continue2734:                                     ; preds = %check_active2735
  br label %continue2727, !dbg !104

check_active2735:                                 ; preds = %use_call2726
  br label %continue2734, !dbg !104

check_serial2748:                                 ; preds = %continue2727
  %serial_pos2753 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i32 0, i32 7, !dbg !104
  %serial2754 = load i32* %serial_pos2753, !dbg !104
  %use_under2755 = icmp eq i32 %global_serial2741, %serial2754, !dbg !104
  br i1 %use_under2755, label %check_under2749, label %use_call2751, !dbg !104

check_under2749:                                  ; preds = %check_serial2748
  %value_pos2756 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i32 0, i32 3, !dbg !104
  %cached_under2757 = load %"struct.rubinius::Module"** %value_pos2756, !dbg !104
  %downcast2758 = bitcast %"struct.rubinius::Module"* %cached_under2757 to %"struct.rubinius::Object"*, !dbg !104
  %use_cache2759 = icmp eq %"struct.rubinius::Object"* %downcast2758, %stack_load2740, !dbg !104
  br i1 %use_cache2759, label %use_cache2750, label %use_call2751, !dbg !104

use_cache2750:                                    ; preds = %check_under2749
  %value_pos2760 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i32 0, i32 2, !dbg !104
  %cached_value2761 = load %"struct.rubinius::Object"** %value_pos2760, !dbg !104
  br label %continue2752, !dbg !104

use_call2751:                                     ; preds = %check_under2749, %check_serial2748, %continue2727
  store i32 61, i32* %ip_pos2474, !dbg !104
  %constant2762 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load2740) #0, !dbg !104
  %null_check2765 = icmp eq %"struct.rubinius::Object"* %constant2762, null, !dbg !104
  br i1 %null_check2765, label %bail_out2469, label %check_active2764, !dbg !104

continue2752:                                     ; preds = %continue2763, %use_cache2750
  %constant2766 = phi %"struct.rubinius::Object"* [ %cached_value2761, %use_cache2750 ], [ %constant2762, %continue2763 ], !dbg !104, !rbx-classid !106
  %stack_pos2767 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  store %"struct.rubinius::Object"* %constant2766, %"struct.rubinius::Object"** %stack_pos2767, !dbg !104
  %stack_pos2768 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  %stack_load2769 = load %"struct.rubinius::Object"** %stack_pos2768, !dbg !104, !rbx-classid !106
  %global_serial2770 = load i32* inttoptr (i64 22553876 to i32*), !dbg !104
  %constant_cache2771 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), !dbg !104
  %constant_cache_pos2772 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i32 0, i32 4, !dbg !104
  %constant_scope2773 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2772, !dbg !104
  %scope_pos2774 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !104
  %frame_scope2775 = load %"struct.rubinius::ConstantScope"** %scope_pos2774, !dbg !104
  %same_scope2776 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2773, %frame_scope2775, !dbg !104
  br i1 %same_scope2776, label %check_serial2777, label %use_call2780, !dbg !104

continue2763:                                     ; preds = %check_active2764
  br label %continue2752, !dbg !104

check_active2764:                                 ; preds = %use_call2751
  br label %continue2763, !dbg !104

check_serial2777:                                 ; preds = %continue2752
  %serial_pos2782 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i32 0, i32 7, !dbg !104
  %serial2783 = load i32* %serial_pos2782, !dbg !104
  %use_under2784 = icmp eq i32 %global_serial2770, %serial2783, !dbg !104
  br i1 %use_under2784, label %check_under2778, label %use_call2780, !dbg !104

check_under2778:                                  ; preds = %check_serial2777
  %value_pos2785 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i32 0, i32 3, !dbg !104
  %cached_under2786 = load %"struct.rubinius::Module"** %value_pos2785, !dbg !104
  %downcast2787 = bitcast %"struct.rubinius::Module"* %cached_under2786 to %"struct.rubinius::Object"*, !dbg !104
  %use_cache2788 = icmp eq %"struct.rubinius::Object"* %downcast2787, %stack_load2769, !dbg !104
  br i1 %use_cache2788, label %use_cache2779, label %use_call2780, !dbg !104

use_cache2779:                                    ; preds = %check_under2778
  %value_pos2789 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i32 0, i32 2, !dbg !104
  %cached_value2790 = load %"struct.rubinius::Object"** %value_pos2789, !dbg !104
  br label %continue2781, !dbg !104

use_call2780:                                     ; preds = %check_under2778, %check_serial2777, %continue2752
  store i32 63, i32* %ip_pos2474, !dbg !104
  %constant2791 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load2769) #0, !dbg !104
  %null_check2794 = icmp eq %"struct.rubinius::Object"* %constant2791, null, !dbg !104
  br i1 %null_check2794, label %bail_out2469, label %check_active2793, !dbg !104

continue2781:                                     ; preds = %continue2792, %use_cache2779
  %constant2795 = phi %"struct.rubinius::Object"* [ %cached_value2790, %use_cache2779 ], [ %constant2791, %continue2792 ], !dbg !104, !rbx-classid !107
  %stack_pos2796 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  store %"struct.rubinius::Object"* %constant2795, %"struct.rubinius::Object"** %stack_pos2796, !dbg !104
  %local_pos2797 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 6, i32 0, !dbg !104
  %local2798 = load %"struct.rubinius::Object"** %local_pos2797, !dbg !104, !rbx-classid !26
  %stack_pos2799 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !104
  store %"struct.rubinius::Object"* %local2798, %"struct.rubinius::Object"** %stack_pos2799, !dbg !104
  %stack_pos2803 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  %stack_load2804 = load %"struct.rubinius::Object"** %stack_pos2803, !dbg !104, !rbx-classid !107
  %cast2805 = ptrtoint %"struct.rubinius::Object"* %stack_load2804 to i64, !dbg !104
  %masked2806 = and i64 %cast2805, 3, !dbg !104
  %is_reference2807 = icmp eq i64 %masked2806, 0, !dbg !104
  br i1 %is_reference2807, label %check_class_id2808, label %class_fallback2800, !dbg !104

continue2792:                                     ; preds = %check_active2793
  br label %continue2781, !dbg !104

check_active2793:                                 ; preds = %use_call2780
  br label %continue2792, !dbg !104

continue2802:                                     ; preds = %ffi_continue
  %stack_pos2823 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  %stack_load2824 = load %"struct.rubinius::Object"** %stack_pos2823, !dbg !104
  br label %return_pad2445, !dbg !104

ip48:                                             ; preds = %continue2716, %continue2665
  %146 = getelementptr %"struct.rubinius::StackVariables"* %vars2458, i32 0, i32 2, !dbg !103
  %self2825 = load %"struct.rubinius::Object"** %146, !dbg !103, !rbx-classid !108
  %stack_pos2826 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  store %"struct.rubinius::Object"* %self2825, %"struct.rubinius::Object"** %stack_pos2826, !dbg !103
  %global_serial2827 = load i32* inttoptr (i64 22553876 to i32*), !dbg !103
  %constant_cache2828 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), !dbg !103
  %constant_cache_pos2829 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i32 0, i32 4, !dbg !103
  %constant_scope2830 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2829, !dbg !103
  %scope_pos2831 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 1, !dbg !103
  %frame_scope2832 = load %"struct.rubinius::ConstantScope"** %scope_pos2831, !dbg !103
  %same_scope2833 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2830, %frame_scope2832, !dbg !103
  br i1 %same_scope2833, label %check_serial2834, label %use_call2836, !dbg !103

check_class_id2808:                               ; preds = %continue2781
  %class_pos2811 = getelementptr %"struct.rubinius::Object"* %stack_load2804, i32 0, i32 0, i32 1, !dbg !104
  %ref_class2812 = load %"struct.rubinius::Class"** %class_pos2811, !dbg !104
  %class_id_pos2813 = getelementptr %"struct.rubinius::Class"* %ref_class2812, i32 0, i32 4, !dbg !104
  %class_id2814 = load i32* %class_id_pos2813, !dbg !104
  %check_class_id2815 = icmp eq i32 %class_id2814, 507, !dbg !104
  br i1 %check_class_id2815, label %correct_class2809, label %class_fallback2800, !dbg !104

correct_class2809:                                ; preds = %check_class_id2808
  %serial_id_pos2816 = getelementptr %"struct.rubinius::Class"* %ref_class2812, i32 0, i32 5, !dbg !104
  %serial_id2817 = load i32* %serial_id_pos2816, !dbg !104
  %check_serial_id2818 = icmp eq i32 %serial_id2817, 210, !dbg !104
  br i1 %check_serial_id2818, label %correct_serial2810, label %serial_fallback2801, !dbg !104

class_fallback2800:                               ; preds = %correct_serial2810, %check_class_id2808, %continue2781
  store i32 67, i32* %ip_pos2474, !dbg !104
  %147 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !104
  br label %return_pad2445, !dbg !104

correct_serial2810:                               ; preds = %correct_class2809
  %stack_pos2819 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !104
  %stack_load2820 = load %"struct.rubinius::Object"** %stack_pos2819, !dbg !104, !rbx-classid !26
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2820, i1* %valid_flag), !dbg !104
  %148 = load i1* %valid_flag, !dbg !104
  br i1 %148, label %ffi_continue, label %class_fallback2800, !dbg !104

serial_fallback2801:                              ; preds = %correct_class2809
  store i32 67, i32* %ip_pos2474, !dbg !104
  %149 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !104
  br label %return_pad2445, !dbg !104

ffi_continue:                                     ; preds = %correct_serial2810
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !104
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !104
  %unused2821 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !104
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !104
  %stack_pos2822 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !104
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack_pos2822, !dbg !104
  br label %continue2802, !dbg !104

check_serial2834:                                 ; preds = %ip48
  %serial_pos2838 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i32 0, i32 7, !dbg !103
  %serial2839 = load i32* %serial_pos2838, !dbg !103
  %use_cache2840 = icmp eq i32 %global_serial2827, %serial2839, !dbg !103
  br i1 %use_cache2840, label %use_cache2835, label %use_call2836, !dbg !103

use_cache2835:                                    ; preds = %check_serial2834
  %value_pos2841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i32 0, i32 2, !dbg !103
  %cached_value2842 = load %"struct.rubinius::Object"** %value_pos2841, !dbg !103
  br label %continue2837, !dbg !103

use_call2836:                                     ; preds = %check_serial2834, %ip48
  store i32 49, i32* %ip_pos2474, !dbg !103
  %push_const_fast2843 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !103
  %null_check2846 = icmp eq %"struct.rubinius::Object"* %push_const_fast2843, null, !dbg !103
  br i1 %null_check2846, label %bail_out2469, label %check_active2845, !dbg !103

continue2837:                                     ; preds = %continue2844, %use_cache2835
  %constant2847 = phi %"struct.rubinius::Object"* [ %cached_value2842, %use_cache2835 ], [ %push_const_fast2843, %continue2844 ], !dbg !103, !rbx-classid !109
  %stack_pos2848 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !103
  store %"struct.rubinius::Object"* %constant2847, %"struct.rubinius::Object"** %stack_pos2848, !dbg !103
  %code_pos2849 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i32 0, i32 3, !dbg !103
  %code2850 = load %"struct.rubinius::CompiledCode"** %code_pos2849, !dbg !103
  %literals_pos2851 = getelementptr %"struct.rubinius::CompiledCode"* %code2850, i32 0, i32 17, !dbg !103
  %literals2852 = load %"struct.rubinius::Tuple"** %literals_pos2851, !dbg !103
  %literal_pos2853 = getelementptr %"struct.rubinius::Tuple"* %literals2852, i32 0, i32 2, i32 8, !dbg !103
  %literal2854 = load %"struct.rubinius::Object"** %literal_pos2853, !dbg !103, !rbx-classid !110
  %stack_pos2855 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 2, !dbg !103
  store %"struct.rubinius::Object"* %literal2854, %"struct.rubinius::Object"** %stack_pos2855, !dbg !103
  %stack_pos2856 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 2, !dbg !103
  %stack_load2857 = load %"struct.rubinius::Object"** %stack_pos2856, !dbg !103, !rbx-classid !110
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Object"* %stack_load2857), !dbg !103, !rbx-classid !110
  %null_check2860 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !103
  br i1 %null_check2860, label %bail_out2469, label %check_active2859, !dbg !103

continue2844:                                     ; preds = %check_active2845
  br label %continue2837, !dbg !103

check_active2845:                                 ; preds = %use_call2836
  br label %continue2844, !dbg !103

continue2858:                                     ; preds = %check_active2859
  %stack_pos2861 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 2, !dbg !103
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos2861, !dbg !103
  %stack_pos2862 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  %stack_load2863 = load %"struct.rubinius::Object"** %stack_pos2862, !dbg !103, !rbx-classid !108
  store %"struct.rubinius::Object"* %stack_load2863, %"struct.rubinius::Object"** %out_args_recv2476, !dbg !103
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name2475, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block2477, !dbg !103
  store i32 2, i32* %out_args_total2478, !dbg !103
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container2480, !dbg !103
  %stack_pos2864 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 1, !dbg !103
  store %"struct.rubinius::Object"** %stack_pos2864, %"struct.rubinius::Object"*** %out_args_arguments2479, !dbg !103
  %cache_const2865 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), !dbg !103
  %execute_pos2866 = getelementptr %"struct.rubinius::CallSite"* %cache_const2865, i32 0, i32 2, !dbg !103
  %execute2867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2866, !dbg !103
  store i32 55, i32* %ip_pos2474, !dbg !103
  %call_site_execute2868 = call %"struct.rubinius::Object"* %execute2867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2865, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !103
  %null_check2871 = icmp eq %"struct.rubinius::Object"* %call_site_execute2868, null, !dbg !103
  br i1 %null_check2871, label %bail_out2469, label %check_active2870, !dbg !103

check_active2859:                                 ; preds = %continue2837
  br label %continue2858, !dbg !103

continue2869:                                     ; preds = %check_active2870
  %stack_pos2872 = getelementptr %"struct.rubinius::Object"** %stack2456, i32 0, !dbg !103
  store %"struct.rubinius::Object"* %call_site_execute2868, %"struct.rubinius::Object"** %stack_pos2872, !dbg !103
  br label %ip58, !dbg !103

return_pad2445:                                   ; preds = %continue2802, %serial_fallback2801, %class_fallback2800, %serial_fallback2664, %continue2618, %serial_fallback2541, %serial_fallback2507, %class_fallback2506, %ret_raise_val2471, %ret_null2472
  %return_phi2446 = phi %"struct.rubinius::Object"* [ null, %ret_null2472 ], [ %crv2473, %ret_raise_val2471 ], [ %140, %class_fallback2506 ], [ %141, %serial_fallback2507 ], [ %143, %serial_fallback2541 ], [ %stack_load2635, %continue2618 ], [ %144, %serial_fallback2664 ], [ %147, %class_fallback2800 ], [ %149, %serial_fallback2801 ], [ %stack_load2824, %continue2802 ]
  %null_check2875 = icmp eq %"struct.rubinius::Object"* %return_phi2446, null, !dbg !90
  br i1 %null_check2875, label %bail_out, label %check_active2874, !dbg !90

check_active2870:                                 ; preds = %continue2858
  br label %continue2869, !dbg !103

continue2873:                                     ; preds = %check_active2874
  %stack_pos2876 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !90
  store %"struct.rubinius::Object"* %return_phi2446, %"struct.rubinius::Object"** %stack_pos2876, !dbg !90
  br label %continue2428, !dbg !90

check_active2874:                                 ; preds = %return_pad2445
  br label %continue2873, !dbg !90

continue2891:                                     ; preds = %check_active2946, %continue2924
  %send_result2948 = phi %"struct.rubinius::Object"* [ %153, %continue2924 ], [ %call_site_execute2945, %check_active2946 ], !dbg !95
  %stack_pos2949 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  store %"struct.rubinius::Object"* %send_result2948, %"struct.rubinius::Object"** %stack_pos2949, !dbg !95
  %local_pos2950 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 8, !dbg !95
  %local2951 = load %"struct.rubinius::Object"** %local_pos2950, !dbg !95, !rbx-classid !96
  %stack_pos2952 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  store %"struct.rubinius::Object"* %local2951, %"struct.rubinius::Object"** %stack_pos2952, !dbg !95
  %stack_pos2956 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load2957 = load %"struct.rubinius::Object"** %stack_pos2956, !dbg !95
  %cast2958 = ptrtoint %"struct.rubinius::Object"* %stack_load2957 to i64, !dbg !95
  %masked2959 = and i64 %cast2958, 3, !dbg !95
  %is_reference2960 = icmp eq i64 %masked2959, 0, !dbg !95
  br i1 %is_reference2960, label %check_class_id2961, label %class_fallback2953, !dbg !95

check_class_id2897:                               ; preds = %continue2428
  %class_pos2900 = getelementptr %"struct.rubinius::Object"* %stack_load2893, i32 0, i32 0, i32 1, !dbg !95
  %ref_class2901 = load %"struct.rubinius::Class"** %class_pos2900, !dbg !95
  %class_id_pos2902 = getelementptr %"struct.rubinius::Class"* %ref_class2901, i32 0, i32 4, !dbg !95
  %class_id2903 = load i32* %class_id_pos2902, !dbg !95
  %check_class_id2904 = icmp eq i32 %class_id2903, 77, !dbg !95
  br i1 %check_class_id2904, label %correct_class2898, label %class_fallback2889, !dbg !95

correct_class2898:                                ; preds = %check_class_id2897
  %serial_id_pos2905 = getelementptr %"struct.rubinius::Class"* %ref_class2901, i32 0, i32 5, !dbg !95
  %serial_id2906 = load i32* %serial_id_pos2905, !dbg !95
  %check_serial_id2907 = icmp eq i32 %serial_id2906, 224, !dbg !95
  br i1 %check_serial_id2907, label %correct_serial2899, label %serial_fallback2890, !dbg !95

correct_serial2899:                               ; preds = %correct_class2898
  %stack_pos2908 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  %stack_load2909 = load %"struct.rubinius::Object"** %stack_pos2908, !dbg !95, !rbx-classid !96
  %cast2911 = ptrtoint %"struct.rubinius::Object"* %stack_load2909 to i64, !dbg !95
  %masked2912 = and i64 %cast2911, 3, !dbg !95
  %is_reference2913 = icmp eq i64 %masked2912, 0, !dbg !95
  br i1 %is_reference2913, label %check_class_id2914, label %continue2910, !dbg !95

serial_fallback2890:                              ; preds = %correct_class2898
  store i32 99, i32* %ip_pos, !dbg !95
  %150 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 99, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !95
  br label %return_pad, !dbg !95

check_class_id2914:                               ; preds = %correct_serial2899
  %class_pos2916 = getelementptr %"struct.rubinius::Object"* %stack_load2909, i32 0, i32 0, i32 1, !dbg !95
  %ref_class2917 = load %"struct.rubinius::Class"** %class_pos2916, !dbg !95
  %class_id_pos2918 = getelementptr %"struct.rubinius::Class"* %ref_class2917, i32 0, i32 4, !dbg !95
  %class_id2919 = load i32* %class_id_pos2918, !dbg !95
  %check_class_id2920 = icmp eq i32 %class_id2919, 77, !dbg !95
  br i1 %check_class_id2920, label %correct_class2915, label %continue2910, !dbg !95

correct_class2915:                                ; preds = %check_class_id2914
  %arg_float2921 = bitcast %"struct.rubinius::Object"* %stack_load2909 to %"struct.rubinius::Float"*, !dbg !95
  %arg.value_pos2922 = getelementptr %"struct.rubinius::Float"* %arg_float2921, i32 0, i32 1, !dbg !95
  %farg2923 = load double* %arg.value_pos2922, !dbg !95
  br label %continue2924, !dbg !95

continue2910:                                     ; preds = %check_class_id2914, %correct_serial2899
  %cast2925 = ptrtoint %"struct.rubinius::Object"* %stack_load2909 to i64, !dbg !95
  %masked2926 = and i64 %cast2925, 1, !dbg !95
  %is_fixnum2927 = icmp eq i64 %masked2926, 1, !dbg !95
  br i1 %is_fixnum2927, label %guarded_body2928, label %class_fallback2889, !dbg !95

guarded_body2928:                                 ; preds = %continue2910
  %as_int2929 = ptrtoint %"struct.rubinius::Object"* %stack_load2909 to i64, !dbg !95
  %ashr2930 = ashr i64 %as_int2929, 1, !dbg !95
  %151 = sitofp i64 %ashr2930 to double, !dbg !95
  br label %continue2924, !dbg !95

continue2924:                                     ; preds = %guarded_body2928, %correct_class2915
  %rhs2931 = phi double [ %farg2923, %correct_class2915 ], [ %151, %guarded_body2928 ], !dbg !95
  %stack_pos2932 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load2933 = load %"struct.rubinius::Object"** %stack_pos2932, !dbg !95, !rbx-classid !96
  %self_float2934 = bitcast %"struct.rubinius::Object"* %stack_load2933 to %"struct.rubinius::Float"*, !dbg !95
  %self.value_pos2935 = getelementptr %"struct.rubinius::Float"* %self_float2934, i32 0, i32 1, !dbg !95
  %fself2936 = load double* %self.value_pos2935, !dbg !95
  %float.mul2937 = fmul double %fself2936, %rhs2931, !dbg !95
  %result2938 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !95, !rbx-classid !87
  %152 = getelementptr %"struct.rubinius::Float"* %result2938, i32 0, i32 1, !dbg !95
  store double %float.mul2937, double* %152, !dbg !95
  %153 = bitcast %"struct.rubinius::Float"* %result2938 to %"struct.rubinius::Object"*, !dbg !95
  br label %continue2891, !dbg !95

class_fallback2889:                               ; preds = %continue2910, %check_class_id2897, %continue2428
  %stack_pos2939 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load2940 = load %"struct.rubinius::Object"** %stack_pos2939, !dbg !95, !rbx-classid !96
  store %"struct.rubinius::Object"* %stack_load2940, %"struct.rubinius::Object"** %out_args_recv, !dbg !95
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !95
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !95
  store i32 1, i32* %out_args_total, !dbg !95
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !95
  %stack_pos2941 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  store %"struct.rubinius::Object"** %stack_pos2941, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !95
  %cache_const2942 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549200 to %"struct.rubinius::CallSite"**), !dbg !95
  %execute_pos2943 = getelementptr %"struct.rubinius::CallSite"* %cache_const2942, i32 0, i32 2, !dbg !95
  %execute2944 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2943, !dbg !95
  store i32 99, i32* %ip_pos, !dbg !95
  %call_site_execute2945 = call %"struct.rubinius::Object"* %execute2944(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2942, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !95
  %null_check2947 = icmp eq %"struct.rubinius::Object"* %call_site_execute2945, null, !dbg !95
  br i1 %null_check2947, label %bail_out, label %check_active2946, !dbg !95

check_active2946:                                 ; preds = %class_fallback2889
  br label %continue2891, !dbg !95

continue2955:                                     ; preds = %check_active3010, %continue2988
  %send_result3012 = phi %"struct.rubinius::Object"* [ %157, %continue2988 ], [ %call_site_execute3009, %check_active3010 ], !dbg !95
  %stack_pos3013 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  store %"struct.rubinius::Object"* %send_result3012, %"struct.rubinius::Object"** %stack_pos3013, !dbg !95
  %stack_pos3017 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  %stack_load3018 = load %"struct.rubinius::Object"** %stack_pos3017, !dbg !95, !rbx-classid !35
  %cast3019 = ptrtoint %"struct.rubinius::Object"* %stack_load3018 to i64, !dbg !95
  %masked3020 = and i64 %cast3019, 3, !dbg !95
  %is_reference3021 = icmp eq i64 %masked3020, 0, !dbg !95
  br i1 %is_reference3021, label %check_class_id3022, label %class_fallback3014, !dbg !95

check_class_id2961:                               ; preds = %continue2891
  %class_pos2964 = getelementptr %"struct.rubinius::Object"* %stack_load2957, i32 0, i32 0, i32 1, !dbg !95
  %ref_class2965 = load %"struct.rubinius::Class"** %class_pos2964, !dbg !95
  %class_id_pos2966 = getelementptr %"struct.rubinius::Class"* %ref_class2965, i32 0, i32 4, !dbg !95
  %class_id2967 = load i32* %class_id_pos2966, !dbg !95
  %check_class_id2968 = icmp eq i32 %class_id2967, 77, !dbg !95
  br i1 %check_class_id2968, label %correct_class2962, label %class_fallback2953, !dbg !95

correct_class2962:                                ; preds = %check_class_id2961
  %serial_id_pos2969 = getelementptr %"struct.rubinius::Class"* %ref_class2965, i32 0, i32 5, !dbg !95
  %serial_id2970 = load i32* %serial_id_pos2969, !dbg !95
  %check_serial_id2971 = icmp eq i32 %serial_id2970, 224, !dbg !95
  br i1 %check_serial_id2971, label %correct_serial2963, label %serial_fallback2954, !dbg !95

correct_serial2963:                               ; preds = %correct_class2962
  %stack_pos2972 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  %stack_load2973 = load %"struct.rubinius::Object"** %stack_pos2972, !dbg !95, !rbx-classid !96
  %cast2975 = ptrtoint %"struct.rubinius::Object"* %stack_load2973 to i64, !dbg !95
  %masked2976 = and i64 %cast2975, 3, !dbg !95
  %is_reference2977 = icmp eq i64 %masked2976, 0, !dbg !95
  br i1 %is_reference2977, label %check_class_id2978, label %continue2974, !dbg !95

serial_fallback2954:                              ; preds = %correct_class2962
  store i32 104, i32* %ip_pos, !dbg !95
  %154 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 104, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !95
  br label %return_pad, !dbg !95

check_class_id2978:                               ; preds = %correct_serial2963
  %class_pos2980 = getelementptr %"struct.rubinius::Object"* %stack_load2973, i32 0, i32 0, i32 1, !dbg !95
  %ref_class2981 = load %"struct.rubinius::Class"** %class_pos2980, !dbg !95
  %class_id_pos2982 = getelementptr %"struct.rubinius::Class"* %ref_class2981, i32 0, i32 4, !dbg !95
  %class_id2983 = load i32* %class_id_pos2982, !dbg !95
  %check_class_id2984 = icmp eq i32 %class_id2983, 77, !dbg !95
  br i1 %check_class_id2984, label %correct_class2979, label %continue2974, !dbg !95

correct_class2979:                                ; preds = %check_class_id2978
  %arg_float2985 = bitcast %"struct.rubinius::Object"* %stack_load2973 to %"struct.rubinius::Float"*, !dbg !95
  %arg.value_pos2986 = getelementptr %"struct.rubinius::Float"* %arg_float2985, i32 0, i32 1, !dbg !95
  %farg2987 = load double* %arg.value_pos2986, !dbg !95
  br label %continue2988, !dbg !95

continue2974:                                     ; preds = %check_class_id2978, %correct_serial2963
  %cast2989 = ptrtoint %"struct.rubinius::Object"* %stack_load2973 to i64, !dbg !95
  %masked2990 = and i64 %cast2989, 1, !dbg !95
  %is_fixnum2991 = icmp eq i64 %masked2990, 1, !dbg !95
  br i1 %is_fixnum2991, label %guarded_body2992, label %class_fallback2953, !dbg !95

guarded_body2992:                                 ; preds = %continue2974
  %as_int2993 = ptrtoint %"struct.rubinius::Object"* %stack_load2973 to i64, !dbg !95
  %ashr2994 = ashr i64 %as_int2993, 1, !dbg !95
  %155 = sitofp i64 %ashr2994 to double, !dbg !95
  br label %continue2988, !dbg !95

continue2988:                                     ; preds = %guarded_body2992, %correct_class2979
  %rhs2995 = phi double [ %farg2987, %correct_class2979 ], [ %155, %guarded_body2992 ], !dbg !95
  %stack_pos2996 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load2997 = load %"struct.rubinius::Object"** %stack_pos2996, !dbg !95
  %self_float2998 = bitcast %"struct.rubinius::Object"* %stack_load2997 to %"struct.rubinius::Float"*, !dbg !95
  %self.value_pos2999 = getelementptr %"struct.rubinius::Float"* %self_float2998, i32 0, i32 1, !dbg !95
  %fself3000 = load double* %self.value_pos2999, !dbg !95
  %float.mul3001 = fmul double %fself3000, %rhs2995, !dbg !95
  %result3002 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !95, !rbx-classid !87
  %156 = getelementptr %"struct.rubinius::Float"* %result3002, i32 0, i32 1, !dbg !95
  store double %float.mul3001, double* %156, !dbg !95
  %157 = bitcast %"struct.rubinius::Float"* %result3002 to %"struct.rubinius::Object"*, !dbg !95
  br label %continue2955, !dbg !95

class_fallback2953:                               ; preds = %continue2974, %check_class_id2961, %continue2891
  %stack_pos3003 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load3004 = load %"struct.rubinius::Object"** %stack_pos3003, !dbg !95
  store %"struct.rubinius::Object"* %stack_load3004, %"struct.rubinius::Object"** %out_args_recv, !dbg !95
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !95
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !95
  store i32 1, i32* %out_args_total, !dbg !95
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !95
  %stack_pos3005 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !95
  store %"struct.rubinius::Object"** %stack_pos3005, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !95
  %cache_const3006 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549240 to %"struct.rubinius::CallSite"**), !dbg !95
  %execute_pos3007 = getelementptr %"struct.rubinius::CallSite"* %cache_const3006, i32 0, i32 2, !dbg !95
  %execute3008 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3007, !dbg !95
  store i32 104, i32* %ip_pos, !dbg !95
  %call_site_execute3009 = call %"struct.rubinius::Object"* %execute3008(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3006, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !95
  %null_check3011 = icmp eq %"struct.rubinius::Object"* %call_site_execute3009, null, !dbg !95
  br i1 %null_check3011, label %bail_out, label %check_active3010, !dbg !95

check_active3010:                                 ; preds = %class_fallback2953
  br label %continue2955, !dbg !95

continue3016:                                     ; preds = %check_active3070, %continue3049
  %send_result3072 = phi %"struct.rubinius::Object"* [ %162, %continue3049 ], [ %call_site_execute3069, %check_active3070 ], !dbg !95
  %stack_pos3073 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  store %"struct.rubinius::Object"* %send_result3072, %"struct.rubinius::Object"** %stack_pos3073, !dbg !95
  %local_pos3074 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 9, !dbg !95
  %stack_pos3075 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  %stack_load3076 = load %"struct.rubinius::Object"** %stack_pos3075, !dbg !95
  store %"struct.rubinius::Object"* %stack_load3076, %"struct.rubinius::Object"** %local_pos3074, !dbg !95
  %stack_pos3079 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3079, !dbg !111
  %158 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !111
  %self3080 = load %"struct.rubinius::Object"** %158, !dbg !111
  %cast3081 = ptrtoint %"struct.rubinius::Object"* %self3080 to i64, !dbg !111
  %masked3082 = and i64 %cast3081, 3, !dbg !111
  %is_reference3083 = icmp eq i64 %masked3082, 0, !dbg !111
  br i1 %is_reference3083, label %check_class_id3084, label %visit_push_ivar_fallback3077, !dbg !111

check_class_id3022:                               ; preds = %continue2955
  %class_pos3025 = getelementptr %"struct.rubinius::Object"* %stack_load3018, i32 0, i32 0, i32 1, !dbg !95
  %ref_class3026 = load %"struct.rubinius::Class"** %class_pos3025, !dbg !95
  %class_id_pos3027 = getelementptr %"struct.rubinius::Class"* %ref_class3026, i32 0, i32 4, !dbg !95
  %class_id3028 = load i32* %class_id_pos3027, !dbg !95
  %check_class_id3029 = icmp eq i32 %class_id3028, 77, !dbg !95
  br i1 %check_class_id3029, label %correct_class3023, label %class_fallback3014, !dbg !95

correct_class3023:                                ; preds = %check_class_id3022
  %serial_id_pos3030 = getelementptr %"struct.rubinius::Class"* %ref_class3026, i32 0, i32 5, !dbg !95
  %serial_id3031 = load i32* %serial_id_pos3030, !dbg !95
  %check_serial_id3032 = icmp eq i32 %serial_id3031, 224, !dbg !95
  br i1 %check_serial_id3032, label %correct_serial3024, label %serial_fallback3015, !dbg !95

correct_serial3024:                               ; preds = %correct_class3023
  %stack_pos3033 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  %stack_load3034 = load %"struct.rubinius::Object"** %stack_pos3033, !dbg !95
  %cast3036 = ptrtoint %"struct.rubinius::Object"* %stack_load3034 to i64, !dbg !95
  %masked3037 = and i64 %cast3036, 3, !dbg !95
  %is_reference3038 = icmp eq i64 %masked3037, 0, !dbg !95
  br i1 %is_reference3038, label %check_class_id3039, label %continue3035, !dbg !95

serial_fallback3015:                              ; preds = %correct_class3023
  store i32 107, i32* %ip_pos, !dbg !95
  %159 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 107, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !95
  br label %return_pad, !dbg !95

check_class_id3039:                               ; preds = %correct_serial3024
  %class_pos3041 = getelementptr %"struct.rubinius::Object"* %stack_load3034, i32 0, i32 0, i32 1, !dbg !95
  %ref_class3042 = load %"struct.rubinius::Class"** %class_pos3041, !dbg !95
  %class_id_pos3043 = getelementptr %"struct.rubinius::Class"* %ref_class3042, i32 0, i32 4, !dbg !95
  %class_id3044 = load i32* %class_id_pos3043, !dbg !95
  %check_class_id3045 = icmp eq i32 %class_id3044, 77, !dbg !95
  br i1 %check_class_id3045, label %correct_class3040, label %continue3035, !dbg !95

correct_class3040:                                ; preds = %check_class_id3039
  %arg_float3046 = bitcast %"struct.rubinius::Object"* %stack_load3034 to %"struct.rubinius::Float"*, !dbg !95
  %arg.value_pos3047 = getelementptr %"struct.rubinius::Float"* %arg_float3046, i32 0, i32 1, !dbg !95
  %farg3048 = load double* %arg.value_pos3047, !dbg !95
  br label %continue3049, !dbg !95

continue3035:                                     ; preds = %check_class_id3039, %correct_serial3024
  %cast3050 = ptrtoint %"struct.rubinius::Object"* %stack_load3034 to i64, !dbg !95
  %masked3051 = and i64 %cast3050, 1, !dbg !95
  %is_fixnum3052 = icmp eq i64 %masked3051, 1, !dbg !95
  br i1 %is_fixnum3052, label %guarded_body3053, label %class_fallback3014, !dbg !95

guarded_body3053:                                 ; preds = %continue3035
  %as_int3054 = ptrtoint %"struct.rubinius::Object"* %stack_load3034 to i64, !dbg !95
  %ashr3055 = ashr i64 %as_int3054, 1, !dbg !95
  %160 = sitofp i64 %ashr3055 to double, !dbg !95
  br label %continue3049, !dbg !95

continue3049:                                     ; preds = %guarded_body3053, %correct_class3040
  %rhs3056 = phi double [ %farg3048, %correct_class3040 ], [ %160, %guarded_body3053 ], !dbg !95
  %stack_pos3057 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  %stack_load3058 = load %"struct.rubinius::Object"** %stack_pos3057, !dbg !95, !rbx-classid !35
  %self_float3059 = bitcast %"struct.rubinius::Object"* %stack_load3058 to %"struct.rubinius::Float"*, !dbg !95
  %self.value_pos3060 = getelementptr %"struct.rubinius::Float"* %self_float3059, i32 0, i32 1, !dbg !95
  %fself3061 = load double* %self.value_pos3060, !dbg !95
  %float.div = fdiv double %fself3061, %rhs3056, !dbg !95
  %result3062 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !95, !rbx-classid !87
  %161 = getelementptr %"struct.rubinius::Float"* %result3062, i32 0, i32 1, !dbg !95
  store double %float.div, double* %161, !dbg !95
  %162 = bitcast %"struct.rubinius::Float"* %result3062 to %"struct.rubinius::Object"*, !dbg !95
  br label %continue3016, !dbg !95

class_fallback3014:                               ; preds = %continue3035, %check_class_id3022, %continue2955
  %stack_pos3063 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !95
  %stack_load3064 = load %"struct.rubinius::Object"** %stack_pos3063, !dbg !95, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load3064, %"struct.rubinius::Object"** %out_args_recv, !dbg !95
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !95
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !95
  store i32 1, i32* %out_args_total, !dbg !95
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !95
  %stack_pos3065 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !95
  store %"struct.rubinius::Object"** %stack_pos3065, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !95
  %cache_const3066 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549264 to %"struct.rubinius::CallSite"**), !dbg !95
  %execute_pos3067 = getelementptr %"struct.rubinius::CallSite"* %cache_const3066, i32 0, i32 2, !dbg !95
  %execute3068 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3067, !dbg !95
  store i32 107, i32* %ip_pos, !dbg !95
  %call_site_execute3069 = call %"struct.rubinius::Object"* %execute3068(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3066, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !95
  %null_check3071 = icmp eq %"struct.rubinius::Object"* %call_site_execute3069, null, !dbg !95
  br i1 %null_check3071, label %bail_out, label %check_active3070, !dbg !95

check_active3070:                                 ; preds = %class_fallback3014
  br label %continue3016, !dbg !95

continue3078:                                     ; preds = %visit_push_ivar_fallback3077, %correct_class3085
  %local_pos3100 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 9, !dbg !111
  %local3101 = load %"struct.rubinius::Object"** %local_pos3100, !dbg !111, !rbx-classid !112
  %stack_pos3102 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %local3101, %"struct.rubinius::Object"** %stack_pos3102, !dbg !111
  %stack_pos3106 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  %stack_load3107 = load %"struct.rubinius::Object"** %stack_pos3106, !dbg !111
  %cast3108 = ptrtoint %"struct.rubinius::Object"* %stack_load3107 to i64, !dbg !111
  %masked3109 = and i64 %cast3108, 3, !dbg !111
  %is_reference3110 = icmp eq i64 %masked3109, 0, !dbg !111
  br i1 %is_reference3110, label %check_class_id3111, label %class_fallback3103, !dbg !111

check_class_id3084:                               ; preds = %continue3016
  %class_pos3086 = getelementptr %"struct.rubinius::Object"* %self3080, i32 0, i32 0, i32 1, !dbg !111
  %ref_class3087 = load %"struct.rubinius::Class"** %class_pos3086, !dbg !111
  %class_id_pos3088 = getelementptr %"struct.rubinius::Class"* %ref_class3087, i32 0, i32 4, !dbg !111
  %class_id3089 = load i32* %class_id_pos3088, !dbg !111
  %check_class_id3090 = icmp eq i32 %class_id3089, 1285, !dbg !111
  br i1 %check_class_id3090, label %correct_class3085, label %visit_push_ivar_fallback3077, !dbg !111

correct_class3085:                                ; preds = %check_class_id3084
  %obj_array3091 = bitcast %"struct.rubinius::Object"* %self3080 to %"struct.rubinius::Object"**, !dbg !111
  %field_pos3092 = getelementptr %"struct.rubinius::Object"** %obj_array3091, i32 9, !dbg !111
  %field3093 = load %"struct.rubinius::Object"** %field_pos3092, !dbg !111
  %prune_undef3094 = icmp eq %"struct.rubinius::Object"* %field3093, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !111
  %"select ivar3095" = select i1 %prune_undef3094, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3093, !dbg !111
  %stack_pos3096 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  store %"struct.rubinius::Object"* %"select ivar3095", %"struct.rubinius::Object"** %stack_pos3096, !dbg !111
  br label %continue3078, !dbg !111

visit_push_ivar_fallback3077:                     ; preds = %check_class_id3084, %continue3016
  %163 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !111
  %self3097 = load %"struct.rubinius::Object"** %163, !dbg !111
  %ivar3098 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3097, %"struct.rubinius::Object"* inttoptr (i64 65670 to %"struct.rubinius::Object"*)) #0, !dbg !111
  %stack_pos3099 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  store %"struct.rubinius::Object"* %ivar3098, %"struct.rubinius::Object"** %stack_pos3099, !dbg !111
  br label %continue3078, !dbg !111

continue3105:                                     ; preds = %check_active3160, %continue3138
  %send_result3162 = phi %"struct.rubinius::Object"* [ %167, %continue3138 ], [ %call_site_execute3159, %check_active3160 ], !dbg !111
  %stack_pos3163 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  store %"struct.rubinius::Object"* %send_result3162, %"struct.rubinius::Object"** %stack_pos3163, !dbg !111
  %local_pos3164 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !111
  %local3165 = load %"struct.rubinius::Object"** %local_pos3164, !dbg !111, !rbx-classid !88
  %stack_pos3166 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %local3165, %"struct.rubinius::Object"** %stack_pos3166, !dbg !111
  %stack_pos3170 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3171 = load %"struct.rubinius::Object"** %stack_pos3170, !dbg !111, !rbx-classid !88
  %stack_pos3172 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3173 = load %"struct.rubinius::Object"** %stack_pos3172, !dbg !111, !rbx-classid !88
  %obj_array3174 = bitcast %"struct.rubinius::Object"* %stack_load3173 to %"struct.rubinius::Object"**, !dbg !111
  %field_pos3175 = getelementptr %"struct.rubinius::Object"** %obj_array3174, i32 9, !dbg !111
  %field3176 = load %"struct.rubinius::Object"** %field_pos3175, !dbg !111
  %prune_undef3177 = icmp eq %"struct.rubinius::Object"* %field3176, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !111
  %"select ivar3178" = select i1 %prune_undef3177, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3176, !dbg !111
  %stack_pos3179 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %"select ivar3178", %"struct.rubinius::Object"** %stack_pos3179, !dbg !111
  br label %continue3169, !dbg !111

check_class_id3111:                               ; preds = %continue3078
  %class_pos3114 = getelementptr %"struct.rubinius::Object"* %stack_load3107, i32 0, i32 0, i32 1, !dbg !111
  %ref_class3115 = load %"struct.rubinius::Class"** %class_pos3114, !dbg !111
  %class_id_pos3116 = getelementptr %"struct.rubinius::Class"* %ref_class3115, i32 0, i32 4, !dbg !111
  %class_id3117 = load i32* %class_id_pos3116, !dbg !111
  %check_class_id3118 = icmp eq i32 %class_id3117, 77, !dbg !111
  br i1 %check_class_id3118, label %correct_class3112, label %class_fallback3103, !dbg !111

correct_class3112:                                ; preds = %check_class_id3111
  %serial_id_pos3119 = getelementptr %"struct.rubinius::Class"* %ref_class3115, i32 0, i32 5, !dbg !111
  %serial_id3120 = load i32* %serial_id_pos3119, !dbg !111
  %check_serial_id3121 = icmp eq i32 %serial_id3120, 224, !dbg !111
  br i1 %check_serial_id3121, label %correct_serial3113, label %serial_fallback3104, !dbg !111

correct_serial3113:                               ; preds = %correct_class3112
  %stack_pos3122 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3123 = load %"struct.rubinius::Object"** %stack_pos3122, !dbg !111, !rbx-classid !112
  %cast3125 = ptrtoint %"struct.rubinius::Object"* %stack_load3123 to i64, !dbg !111
  %masked3126 = and i64 %cast3125, 3, !dbg !111
  %is_reference3127 = icmp eq i64 %masked3126, 0, !dbg !111
  br i1 %is_reference3127, label %check_class_id3128, label %continue3124, !dbg !111

serial_fallback3104:                              ; preds = %correct_class3112
  store i32 117, i32* %ip_pos, !dbg !111
  %164 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 117, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !111
  br label %return_pad, !dbg !111

check_class_id3128:                               ; preds = %correct_serial3113
  %class_pos3130 = getelementptr %"struct.rubinius::Object"* %stack_load3123, i32 0, i32 0, i32 1, !dbg !111
  %ref_class3131 = load %"struct.rubinius::Class"** %class_pos3130, !dbg !111
  %class_id_pos3132 = getelementptr %"struct.rubinius::Class"* %ref_class3131, i32 0, i32 4, !dbg !111
  %class_id3133 = load i32* %class_id_pos3132, !dbg !111
  %check_class_id3134 = icmp eq i32 %class_id3133, 77, !dbg !111
  br i1 %check_class_id3134, label %correct_class3129, label %continue3124, !dbg !111

correct_class3129:                                ; preds = %check_class_id3128
  %arg_float3135 = bitcast %"struct.rubinius::Object"* %stack_load3123 to %"struct.rubinius::Float"*, !dbg !111
  %arg.value_pos3136 = getelementptr %"struct.rubinius::Float"* %arg_float3135, i32 0, i32 1, !dbg !111
  %farg3137 = load double* %arg.value_pos3136, !dbg !111
  br label %continue3138, !dbg !111

continue3124:                                     ; preds = %check_class_id3128, %correct_serial3113
  %cast3139 = ptrtoint %"struct.rubinius::Object"* %stack_load3123 to i64, !dbg !111
  %masked3140 = and i64 %cast3139, 1, !dbg !111
  %is_fixnum3141 = icmp eq i64 %masked3140, 1, !dbg !111
  br i1 %is_fixnum3141, label %guarded_body3142, label %class_fallback3103, !dbg !111

guarded_body3142:                                 ; preds = %continue3124
  %as_int3143 = ptrtoint %"struct.rubinius::Object"* %stack_load3123 to i64, !dbg !111
  %ashr3144 = ashr i64 %as_int3143, 1, !dbg !111
  %165 = sitofp i64 %ashr3144 to double, !dbg !111
  br label %continue3138, !dbg !111

continue3138:                                     ; preds = %guarded_body3142, %correct_class3129
  %rhs3145 = phi double [ %farg3137, %correct_class3129 ], [ %165, %guarded_body3142 ], !dbg !111
  %stack_pos3146 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  %stack_load3147 = load %"struct.rubinius::Object"** %stack_pos3146, !dbg !111
  %self_float3148 = bitcast %"struct.rubinius::Object"* %stack_load3147 to %"struct.rubinius::Float"*, !dbg !111
  %self.value_pos3149 = getelementptr %"struct.rubinius::Float"* %self_float3148, i32 0, i32 1, !dbg !111
  %fself3150 = load double* %self.value_pos3149, !dbg !111
  %float.mul3151 = fmul double %fself3150, %rhs3145, !dbg !111
  %result3152 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !111, !rbx-classid !87
  %166 = getelementptr %"struct.rubinius::Float"* %result3152, i32 0, i32 1, !dbg !111
  store double %float.mul3151, double* %166, !dbg !111
  %167 = bitcast %"struct.rubinius::Float"* %result3152 to %"struct.rubinius::Object"*, !dbg !111
  br label %continue3105, !dbg !111

class_fallback3103:                               ; preds = %continue3124, %check_class_id3111, %continue3078
  %stack_pos3153 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  %stack_load3154 = load %"struct.rubinius::Object"** %stack_pos3153, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3154, %"struct.rubinius::Object"** %out_args_recv, !dbg !111
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !111
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !111
  store i32 1, i32* %out_args_total, !dbg !111
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !111
  %stack_pos3155 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"** %stack_pos3155, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !111
  %cache_const3156 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549344 to %"struct.rubinius::CallSite"**), !dbg !111
  %execute_pos3157 = getelementptr %"struct.rubinius::CallSite"* %cache_const3156, i32 0, i32 2, !dbg !111
  %execute3158 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3157, !dbg !111
  store i32 117, i32* %ip_pos, !dbg !111
  %call_site_execute3159 = call %"struct.rubinius::Object"* %execute3158(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3156, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !111
  %null_check3161 = icmp eq %"struct.rubinius::Object"* %call_site_execute3159, null, !dbg !111
  br i1 %null_check3161, label %bail_out, label %check_active3160, !dbg !111

check_active3160:                                 ; preds = %class_fallback3103
  br label %continue3105, !dbg !111

class_fallback3167:                               ; No predecessors!
  store i32 122, i32* %ip_pos, !dbg !111
  %168 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 122, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !111
  br label %return_pad, !dbg !111

serial_fallback3168:                              ; No predecessors!
  store i32 122, i32* %ip_pos, !dbg !111
  %169 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 122, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !111
  br label %return_pad, !dbg !111

continue3169:                                     ; preds = %continue3105
  %local_pos3180 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 9, !dbg !111
  %local3181 = load %"struct.rubinius::Object"** %local_pos3180, !dbg !111, !rbx-classid !112
  %stack_pos3182 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %local3181, %"struct.rubinius::Object"** %stack_pos3182, !dbg !111
  %stack_pos3186 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3187 = load %"struct.rubinius::Object"** %stack_pos3186, !dbg !111
  %cast3188 = ptrtoint %"struct.rubinius::Object"* %stack_load3187 to i64, !dbg !111
  %masked3189 = and i64 %cast3188, 3, !dbg !111
  %is_reference3190 = icmp eq i64 %masked3189, 0, !dbg !111
  br i1 %is_reference3190, label %check_class_id3191, label %class_fallback3183, !dbg !111

continue3185:                                     ; preds = %check_active3240, %continue3218
  %send_result3242 = phi %"struct.rubinius::Object"* [ %178, %continue3218 ], [ %call_site_execute3239, %check_active3240 ], !dbg !111
  %stack_pos3243 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %send_result3242, %"struct.rubinius::Object"** %stack_pos3243, !dbg !111
  %stack_pos3244 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  %170 = getelementptr %"struct.rubinius::Object"** %stack_pos3244, i32 0, !dbg !111
  %171 = load %"struct.rubinius::Object"** %170, !dbg !111
  %stack_pos3245 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %171, %"struct.rubinius::Object"** %stack_pos3245, !dbg !111
  %172 = getelementptr %"struct.rubinius::Object"** %stack_pos3244, i32 1, !dbg !111
  %173 = load %"struct.rubinius::Object"** %172, !dbg !111
  %stack_pos3246 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !111
  store %"struct.rubinius::Object"* %173, %"struct.rubinius::Object"** %stack_pos3246, !dbg !111
  %stack_pos3247 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  %constant3248 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos3247), !dbg !111, !rbx-classid !113
  %stack_pos3249 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %constant3248, %"struct.rubinius::Object"** %stack_pos3249, !dbg !111
  %stack_pos3250 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  %stack_load3251 = load %"struct.rubinius::Object"** %stack_pos3250, !dbg !111, !rbx-classid !113
  %stack_pos3252 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3253 = load %"struct.rubinius::Object"** %stack_pos3252, !dbg !111
  %stack_pos3254 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3253, %"struct.rubinius::Object"** %stack_pos3254, !dbg !111
  %stack_pos3255 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  %stack_load3256 = load %"struct.rubinius::Object"** %stack_pos3255, !dbg !111
  %stack_pos3257 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3256, %"struct.rubinius::Object"** %stack_pos3257, !dbg !111
  %stack_pos3258 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3251, %"struct.rubinius::Object"** %stack_pos3258, !dbg !111
  %stack_pos3259 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_pos3260 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  %rotate = load %"struct.rubinius::Object"** %stack_pos3259, !dbg !111
  %rotate3261 = load %"struct.rubinius::Object"** %stack_pos3260, !dbg !111
  %stack_pos3262 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  store %"struct.rubinius::Object"* %rotate3261, %"struct.rubinius::Object"** %stack_pos3262, !dbg !111
  %stack_pos3263 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %rotate, %"struct.rubinius::Object"** %stack_pos3263, !dbg !111
  %local_pos3264 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 10, !dbg !111
  %stack_pos3265 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  %stack_load3266 = load %"struct.rubinius::Object"** %stack_pos3265, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3266, %"struct.rubinius::Object"** %local_pos3264, !dbg !111
  %local_pos3267 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 11, !dbg !111
  %stack_pos3268 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3269 = load %"struct.rubinius::Object"** %stack_pos3268, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3269, %"struct.rubinius::Object"** %local_pos3267, !dbg !111
  %stack_pos3272 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3272, !dbg !114
  %174 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !114
  %self3273 = load %"struct.rubinius::Object"** %174, !dbg !114
  %cast3274 = ptrtoint %"struct.rubinius::Object"* %self3273 to i64, !dbg !114
  %masked3275 = and i64 %cast3274, 3, !dbg !114
  %is_reference3276 = icmp eq i64 %masked3275, 0, !dbg !114
  br i1 %is_reference3276, label %check_class_id3277, label %visit_push_ivar_fallback3270, !dbg !114

check_class_id3191:                               ; preds = %continue3169
  %class_pos3194 = getelementptr %"struct.rubinius::Object"* %stack_load3187, i32 0, i32 0, i32 1, !dbg !111
  %ref_class3195 = load %"struct.rubinius::Class"** %class_pos3194, !dbg !111
  %class_id_pos3196 = getelementptr %"struct.rubinius::Class"* %ref_class3195, i32 0, i32 4, !dbg !111
  %class_id3197 = load i32* %class_id_pos3196, !dbg !111
  %check_class_id3198 = icmp eq i32 %class_id3197, 77, !dbg !111
  br i1 %check_class_id3198, label %correct_class3192, label %class_fallback3183, !dbg !111

correct_class3192:                                ; preds = %check_class_id3191
  %serial_id_pos3199 = getelementptr %"struct.rubinius::Class"* %ref_class3195, i32 0, i32 5, !dbg !111
  %serial_id3200 = load i32* %serial_id_pos3199, !dbg !111
  %check_serial_id3201 = icmp eq i32 %serial_id3200, 224, !dbg !111
  br i1 %check_serial_id3201, label %correct_serial3193, label %serial_fallback3184, !dbg !111

correct_serial3193:                               ; preds = %correct_class3192
  %stack_pos3202 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  %stack_load3203 = load %"struct.rubinius::Object"** %stack_pos3202, !dbg !111, !rbx-classid !112
  %cast3205 = ptrtoint %"struct.rubinius::Object"* %stack_load3203 to i64, !dbg !111
  %masked3206 = and i64 %cast3205, 3, !dbg !111
  %is_reference3207 = icmp eq i64 %masked3206, 0, !dbg !111
  br i1 %is_reference3207, label %check_class_id3208, label %continue3204, !dbg !111

serial_fallback3184:                              ; preds = %correct_class3192
  store i32 127, i32* %ip_pos, !dbg !111
  %175 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 127, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !111
  br label %return_pad, !dbg !111

check_class_id3208:                               ; preds = %correct_serial3193
  %class_pos3210 = getelementptr %"struct.rubinius::Object"* %stack_load3203, i32 0, i32 0, i32 1, !dbg !111
  %ref_class3211 = load %"struct.rubinius::Class"** %class_pos3210, !dbg !111
  %class_id_pos3212 = getelementptr %"struct.rubinius::Class"* %ref_class3211, i32 0, i32 4, !dbg !111
  %class_id3213 = load i32* %class_id_pos3212, !dbg !111
  %check_class_id3214 = icmp eq i32 %class_id3213, 77, !dbg !111
  br i1 %check_class_id3214, label %correct_class3209, label %continue3204, !dbg !111

correct_class3209:                                ; preds = %check_class_id3208
  %arg_float3215 = bitcast %"struct.rubinius::Object"* %stack_load3203 to %"struct.rubinius::Float"*, !dbg !111
  %arg.value_pos3216 = getelementptr %"struct.rubinius::Float"* %arg_float3215, i32 0, i32 1, !dbg !111
  %farg3217 = load double* %arg.value_pos3216, !dbg !111
  br label %continue3218, !dbg !111

continue3204:                                     ; preds = %check_class_id3208, %correct_serial3193
  %cast3219 = ptrtoint %"struct.rubinius::Object"* %stack_load3203 to i64, !dbg !111
  %masked3220 = and i64 %cast3219, 1, !dbg !111
  %is_fixnum3221 = icmp eq i64 %masked3220, 1, !dbg !111
  br i1 %is_fixnum3221, label %guarded_body3222, label %class_fallback3183, !dbg !111

guarded_body3222:                                 ; preds = %continue3204
  %as_int3223 = ptrtoint %"struct.rubinius::Object"* %stack_load3203 to i64, !dbg !111
  %ashr3224 = ashr i64 %as_int3223, 1, !dbg !111
  %176 = sitofp i64 %ashr3224 to double, !dbg !111
  br label %continue3218, !dbg !111

continue3218:                                     ; preds = %guarded_body3222, %correct_class3209
  %rhs3225 = phi double [ %farg3217, %correct_class3209 ], [ %176, %guarded_body3222 ], !dbg !111
  %stack_pos3226 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3227 = load %"struct.rubinius::Object"** %stack_pos3226, !dbg !111
  %self_float3228 = bitcast %"struct.rubinius::Object"* %stack_load3227 to %"struct.rubinius::Float"*, !dbg !111
  %self.value_pos3229 = getelementptr %"struct.rubinius::Float"* %self_float3228, i32 0, i32 1, !dbg !111
  %fself3230 = load double* %self.value_pos3229, !dbg !111
  %float.mul3231 = fmul double %fself3230, %rhs3225, !dbg !111
  %result3232 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !111, !rbx-classid !87
  %177 = getelementptr %"struct.rubinius::Float"* %result3232, i32 0, i32 1, !dbg !111
  store double %float.mul3231, double* %177, !dbg !111
  %178 = bitcast %"struct.rubinius::Float"* %result3232 to %"struct.rubinius::Object"*, !dbg !111
  br label %continue3185, !dbg !111

class_fallback3183:                               ; preds = %continue3204, %check_class_id3191, %continue3169
  %stack_pos3233 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !111
  %stack_load3234 = load %"struct.rubinius::Object"** %stack_pos3233, !dbg !111
  store %"struct.rubinius::Object"* %stack_load3234, %"struct.rubinius::Object"** %out_args_recv, !dbg !111
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !111
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !111
  store i32 1, i32* %out_args_total, !dbg !111
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !111
  %stack_pos3235 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !111
  store %"struct.rubinius::Object"** %stack_pos3235, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !111
  %cache_const3236 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549424 to %"struct.rubinius::CallSite"**), !dbg !111
  %execute_pos3237 = getelementptr %"struct.rubinius::CallSite"* %cache_const3236, i32 0, i32 2, !dbg !111
  %execute3238 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3237, !dbg !111
  store i32 127, i32* %ip_pos, !dbg !111
  %call_site_execute3239 = call %"struct.rubinius::Object"* %execute3238(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3236, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !111
  %null_check3241 = icmp eq %"struct.rubinius::Object"* %call_site_execute3239, null, !dbg !111
  br i1 %null_check3241, label %bail_out, label %check_active3240, !dbg !111

check_active3240:                                 ; preds = %class_fallback3183
  br label %continue3185, !dbg !111

continue3271:                                     ; preds = %visit_push_ivar_fallback3270, %correct_class3278
  %local_pos3293 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 5, !dbg !114
  %local3294 = load %"struct.rubinius::Object"** %local_pos3293, !dbg !114, !rbx-classid !92
  %stack_pos3295 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  store %"struct.rubinius::Object"* %local3294, %"struct.rubinius::Object"** %stack_pos3295, !dbg !114
  %local_pos3296 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 11, !dbg !114
  %local3297 = load %"struct.rubinius::Object"** %local_pos3296, !dbg !114, !rbx-classid !115
  %stack_pos3298 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !114
  store %"struct.rubinius::Object"* %local3297, %"struct.rubinius::Object"** %stack_pos3298, !dbg !114
  %stack_pos3302 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  %stack_load3303 = load %"struct.rubinius::Object"** %stack_pos3302, !dbg !114, !rbx-classid !92
  %cast3304 = ptrtoint %"struct.rubinius::Object"* %stack_load3303 to i64, !dbg !114
  %masked3305 = and i64 %cast3304, 3, !dbg !114
  %is_reference3306 = icmp eq i64 %masked3305, 0, !dbg !114
  br i1 %is_reference3306, label %check_class_id3307, label %class_fallback3299, !dbg !114

check_class_id3277:                               ; preds = %continue3185
  %class_pos3279 = getelementptr %"struct.rubinius::Object"* %self3273, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3280 = load %"struct.rubinius::Class"** %class_pos3279, !dbg !114
  %class_id_pos3281 = getelementptr %"struct.rubinius::Class"* %ref_class3280, i32 0, i32 4, !dbg !114
  %class_id3282 = load i32* %class_id_pos3281, !dbg !114
  %check_class_id3283 = icmp eq i32 %class_id3282, 1285, !dbg !114
  br i1 %check_class_id3283, label %correct_class3278, label %visit_push_ivar_fallback3270, !dbg !114

correct_class3278:                                ; preds = %check_class_id3277
  %obj_array3284 = bitcast %"struct.rubinius::Object"* %self3273 to %"struct.rubinius::Object"**, !dbg !114
  %field_pos3285 = getelementptr %"struct.rubinius::Object"** %obj_array3284, i32 6, !dbg !114
  %field3286 = load %"struct.rubinius::Object"** %field_pos3285, !dbg !114
  %prune_undef3287 = icmp eq %"struct.rubinius::Object"* %field3286, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !114
  %"select ivar3288" = select i1 %prune_undef3287, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3286, !dbg !114
  %stack_pos3289 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  store %"struct.rubinius::Object"* %"select ivar3288", %"struct.rubinius::Object"** %stack_pos3289, !dbg !114
  br label %continue3271, !dbg !114

visit_push_ivar_fallback3270:                     ; preds = %check_class_id3277, %continue3185
  %179 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !114
  %self3290 = load %"struct.rubinius::Object"** %179, !dbg !114
  %ivar3291 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3290, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !114
  %stack_pos3292 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  store %"struct.rubinius::Object"* %ivar3291, %"struct.rubinius::Object"** %stack_pos3292, !dbg !114
  br label %continue3271, !dbg !114

continue3301:                                     ; preds = %check_active3356, %continue3334
  %send_result3358 = phi %"struct.rubinius::Object"* [ %183, %continue3334 ], [ %call_site_execute3355, %check_active3356 ], !dbg !114
  %stack_pos3359 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  store %"struct.rubinius::Object"* %send_result3358, %"struct.rubinius::Object"** %stack_pos3359, !dbg !114
  %stack_pos3363 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  %stack_load3364 = load %"struct.rubinius::Object"** %stack_pos3363, !dbg !114
  %cast3365 = ptrtoint %"struct.rubinius::Object"* %stack_load3364 to i64, !dbg !114
  %masked3366 = and i64 %cast3365, 3, !dbg !114
  %is_reference3367 = icmp eq i64 %masked3366, 0, !dbg !114
  br i1 %is_reference3367, label %check_class_id3368, label %class_fallback3360, !dbg !114

check_class_id3307:                               ; preds = %continue3271
  %class_pos3310 = getelementptr %"struct.rubinius::Object"* %stack_load3303, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3311 = load %"struct.rubinius::Class"** %class_pos3310, !dbg !114
  %class_id_pos3312 = getelementptr %"struct.rubinius::Class"* %ref_class3311, i32 0, i32 4, !dbg !114
  %class_id3313 = load i32* %class_id_pos3312, !dbg !114
  %check_class_id3314 = icmp eq i32 %class_id3313, 77, !dbg !114
  br i1 %check_class_id3314, label %correct_class3308, label %class_fallback3299, !dbg !114

correct_class3308:                                ; preds = %check_class_id3307
  %serial_id_pos3315 = getelementptr %"struct.rubinius::Class"* %ref_class3311, i32 0, i32 5, !dbg !114
  %serial_id3316 = load i32* %serial_id_pos3315, !dbg !114
  %check_serial_id3317 = icmp eq i32 %serial_id3316, 224, !dbg !114
  br i1 %check_serial_id3317, label %correct_serial3309, label %serial_fallback3300, !dbg !114

correct_serial3309:                               ; preds = %correct_class3308
  %stack_pos3318 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !114
  %stack_load3319 = load %"struct.rubinius::Object"** %stack_pos3318, !dbg !114, !rbx-classid !115
  %cast3321 = ptrtoint %"struct.rubinius::Object"* %stack_load3319 to i64, !dbg !114
  %masked3322 = and i64 %cast3321, 3, !dbg !114
  %is_reference3323 = icmp eq i64 %masked3322, 0, !dbg !114
  br i1 %is_reference3323, label %check_class_id3324, label %continue3320, !dbg !114

serial_fallback3300:                              ; preds = %correct_class3308
  store i32 151, i32* %ip_pos, !dbg !114
  %180 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 151, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !114
  br label %return_pad, !dbg !114

check_class_id3324:                               ; preds = %correct_serial3309
  %class_pos3326 = getelementptr %"struct.rubinius::Object"* %stack_load3319, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3327 = load %"struct.rubinius::Class"** %class_pos3326, !dbg !114
  %class_id_pos3328 = getelementptr %"struct.rubinius::Class"* %ref_class3327, i32 0, i32 4, !dbg !114
  %class_id3329 = load i32* %class_id_pos3328, !dbg !114
  %check_class_id3330 = icmp eq i32 %class_id3329, 77, !dbg !114
  br i1 %check_class_id3330, label %correct_class3325, label %continue3320, !dbg !114

correct_class3325:                                ; preds = %check_class_id3324
  %arg_float3331 = bitcast %"struct.rubinius::Object"* %stack_load3319 to %"struct.rubinius::Float"*, !dbg !114
  %arg.value_pos3332 = getelementptr %"struct.rubinius::Float"* %arg_float3331, i32 0, i32 1, !dbg !114
  %farg3333 = load double* %arg.value_pos3332, !dbg !114
  br label %continue3334, !dbg !114

continue3320:                                     ; preds = %check_class_id3324, %correct_serial3309
  %cast3335 = ptrtoint %"struct.rubinius::Object"* %stack_load3319 to i64, !dbg !114
  %masked3336 = and i64 %cast3335, 1, !dbg !114
  %is_fixnum3337 = icmp eq i64 %masked3336, 1, !dbg !114
  br i1 %is_fixnum3337, label %guarded_body3338, label %class_fallback3299, !dbg !114

guarded_body3338:                                 ; preds = %continue3320
  %as_int3339 = ptrtoint %"struct.rubinius::Object"* %stack_load3319 to i64, !dbg !114
  %ashr3340 = ashr i64 %as_int3339, 1, !dbg !114
  %181 = sitofp i64 %ashr3340 to double, !dbg !114
  br label %continue3334, !dbg !114

continue3334:                                     ; preds = %guarded_body3338, %correct_class3325
  %rhs3341 = phi double [ %farg3333, %correct_class3325 ], [ %181, %guarded_body3338 ], !dbg !114
  %stack_pos3342 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  %stack_load3343 = load %"struct.rubinius::Object"** %stack_pos3342, !dbg !114, !rbx-classid !92
  %self_float3344 = bitcast %"struct.rubinius::Object"* %stack_load3343 to %"struct.rubinius::Float"*, !dbg !114
  %self.value_pos3345 = getelementptr %"struct.rubinius::Float"* %self_float3344, i32 0, i32 1, !dbg !114
  %fself3346 = load double* %self.value_pos3345, !dbg !114
  %float.mul3347 = fmul double %fself3346, %rhs3341, !dbg !114
  %result3348 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !114, !rbx-classid !87
  %182 = getelementptr %"struct.rubinius::Float"* %result3348, i32 0, i32 1, !dbg !114
  store double %float.mul3347, double* %182, !dbg !114
  %183 = bitcast %"struct.rubinius::Float"* %result3348 to %"struct.rubinius::Object"*, !dbg !114
  br label %continue3301, !dbg !114

class_fallback3299:                               ; preds = %continue3320, %check_class_id3307, %continue3271
  %stack_pos3349 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  %stack_load3350 = load %"struct.rubinius::Object"** %stack_pos3349, !dbg !114, !rbx-classid !92
  store %"struct.rubinius::Object"* %stack_load3350, %"struct.rubinius::Object"** %out_args_recv, !dbg !114
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !114
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !114
  store i32 1, i32* %out_args_total, !dbg !114
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !114
  %stack_pos3351 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !114
  store %"struct.rubinius::Object"** %stack_pos3351, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !114
  %cache_const3352 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549616 to %"struct.rubinius::CallSite"**), !dbg !114
  %execute_pos3353 = getelementptr %"struct.rubinius::CallSite"* %cache_const3352, i32 0, i32 2, !dbg !114
  %execute3354 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3353, !dbg !114
  store i32 151, i32* %ip_pos, !dbg !114
  %call_site_execute3355 = call %"struct.rubinius::Object"* %execute3354(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3352, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !114
  %null_check3357 = icmp eq %"struct.rubinius::Object"* %call_site_execute3355, null, !dbg !114
  br i1 %null_check3357, label %bail_out, label %check_active3356, !dbg !114

check_active3356:                                 ; preds = %class_fallback3299
  br label %continue3301, !dbg !114

continue3362:                                     ; preds = %check_active3417, %continue3395
  %send_result3419 = phi %"struct.rubinius::Object"* [ %188, %continue3395 ], [ %call_site_execute3416, %check_active3417 ], !dbg !114
  %stack_pos3420 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  store %"struct.rubinius::Object"* %send_result3419, %"struct.rubinius::Object"** %stack_pos3420, !dbg !114
  %184 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !114
  %self3421 = load %"struct.rubinius::Object"** %184, !dbg !114
  %stack_pos3422 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  %stack_load3423 = load %"struct.rubinius::Object"** %stack_pos3422, !dbg !114
  %cast3426 = ptrtoint %"struct.rubinius::Object"* %self3421 to i64, !dbg !114
  %masked3427 = and i64 %cast3426, 3, !dbg !114
  %is_reference3428 = icmp eq i64 %masked3427, 0, !dbg !114
  br i1 %is_reference3428, label %check_class_id3429, label %visit_push_ivar_fallback3424, !dbg !114

check_class_id3368:                               ; preds = %continue3301
  %class_pos3371 = getelementptr %"struct.rubinius::Object"* %stack_load3364, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3372 = load %"struct.rubinius::Class"** %class_pos3371, !dbg !114
  %class_id_pos3373 = getelementptr %"struct.rubinius::Class"* %ref_class3372, i32 0, i32 4, !dbg !114
  %class_id3374 = load i32* %class_id_pos3373, !dbg !114
  %check_class_id3375 = icmp eq i32 %class_id3374, 77, !dbg !114
  br i1 %check_class_id3375, label %correct_class3369, label %class_fallback3360, !dbg !114

correct_class3369:                                ; preds = %check_class_id3368
  %serial_id_pos3376 = getelementptr %"struct.rubinius::Class"* %ref_class3372, i32 0, i32 5, !dbg !114
  %serial_id3377 = load i32* %serial_id_pos3376, !dbg !114
  %check_serial_id3378 = icmp eq i32 %serial_id3377, 224, !dbg !114
  br i1 %check_serial_id3378, label %correct_serial3370, label %serial_fallback3361, !dbg !114

correct_serial3370:                               ; preds = %correct_class3369
  %stack_pos3379 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  %stack_load3380 = load %"struct.rubinius::Object"** %stack_pos3379, !dbg !114
  %cast3382 = ptrtoint %"struct.rubinius::Object"* %stack_load3380 to i64, !dbg !114
  %masked3383 = and i64 %cast3382, 3, !dbg !114
  %is_reference3384 = icmp eq i64 %masked3383, 0, !dbg !114
  br i1 %is_reference3384, label %check_class_id3385, label %continue3381, !dbg !114

serial_fallback3361:                              ; preds = %correct_class3369
  store i32 154, i32* %ip_pos, !dbg !114
  %185 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 154, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !114
  br label %return_pad, !dbg !114

check_class_id3385:                               ; preds = %correct_serial3370
  %class_pos3387 = getelementptr %"struct.rubinius::Object"* %stack_load3380, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3388 = load %"struct.rubinius::Class"** %class_pos3387, !dbg !114
  %class_id_pos3389 = getelementptr %"struct.rubinius::Class"* %ref_class3388, i32 0, i32 4, !dbg !114
  %class_id3390 = load i32* %class_id_pos3389, !dbg !114
  %check_class_id3391 = icmp eq i32 %class_id3390, 77, !dbg !114
  br i1 %check_class_id3391, label %correct_class3386, label %continue3381, !dbg !114

correct_class3386:                                ; preds = %check_class_id3385
  %arg_float3392 = bitcast %"struct.rubinius::Object"* %stack_load3380 to %"struct.rubinius::Float"*, !dbg !114
  %arg.value_pos3393 = getelementptr %"struct.rubinius::Float"* %arg_float3392, i32 0, i32 1, !dbg !114
  %farg3394 = load double* %arg.value_pos3393, !dbg !114
  br label %continue3395, !dbg !114

continue3381:                                     ; preds = %check_class_id3385, %correct_serial3370
  %cast3396 = ptrtoint %"struct.rubinius::Object"* %stack_load3380 to i64, !dbg !114
  %masked3397 = and i64 %cast3396, 1, !dbg !114
  %is_fixnum3398 = icmp eq i64 %masked3397, 1, !dbg !114
  br i1 %is_fixnum3398, label %guarded_body3399, label %class_fallback3360, !dbg !114

guarded_body3399:                                 ; preds = %continue3381
  %as_int3400 = ptrtoint %"struct.rubinius::Object"* %stack_load3380 to i64, !dbg !114
  %ashr3401 = ashr i64 %as_int3400, 1, !dbg !114
  %186 = sitofp i64 %ashr3401 to double, !dbg !114
  br label %continue3395, !dbg !114

continue3395:                                     ; preds = %guarded_body3399, %correct_class3386
  %rhs3402 = phi double [ %farg3394, %correct_class3386 ], [ %186, %guarded_body3399 ], !dbg !114
  %stack_pos3403 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  %stack_load3404 = load %"struct.rubinius::Object"** %stack_pos3403, !dbg !114
  %self_float3405 = bitcast %"struct.rubinius::Object"* %stack_load3404 to %"struct.rubinius::Float"*, !dbg !114
  %self.value_pos3406 = getelementptr %"struct.rubinius::Float"* %self_float3405, i32 0, i32 1, !dbg !114
  %fself3407 = load double* %self.value_pos3406, !dbg !114
  %float.sub3408 = fsub double %fself3407, %rhs3402, !dbg !114
  %result3409 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !114, !rbx-classid !87
  %187 = getelementptr %"struct.rubinius::Float"* %result3409, i32 0, i32 1, !dbg !114
  store double %float.sub3408, double* %187, !dbg !114
  %188 = bitcast %"struct.rubinius::Float"* %result3409 to %"struct.rubinius::Object"*, !dbg !114
  br label %continue3362, !dbg !114

class_fallback3360:                               ; preds = %continue3381, %check_class_id3368, %continue3301
  %stack_pos3410 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !114
  %stack_load3411 = load %"struct.rubinius::Object"** %stack_pos3410, !dbg !114
  store %"struct.rubinius::Object"* %stack_load3411, %"struct.rubinius::Object"** %out_args_recv, !dbg !114
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !114
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !114
  store i32 1, i32* %out_args_total, !dbg !114
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !114
  %stack_pos3412 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !114
  store %"struct.rubinius::Object"** %stack_pos3412, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !114
  %cache_const3413 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549640 to %"struct.rubinius::CallSite"**), !dbg !114
  %execute_pos3414 = getelementptr %"struct.rubinius::CallSite"* %cache_const3413, i32 0, i32 2, !dbg !114
  %execute3415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3414, !dbg !114
  store i32 154, i32* %ip_pos, !dbg !114
  %call_site_execute3416 = call %"struct.rubinius::Object"* %execute3415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !114
  %null_check3418 = icmp eq %"struct.rubinius::Object"* %call_site_execute3416, null, !dbg !114
  br i1 %null_check3418, label %bail_out, label %check_active3417, !dbg !114

check_active3417:                                 ; preds = %class_fallback3360
  br label %continue3362, !dbg !114

continue3425:                                     ; preds = %continue3444, %done
  %stack_pos3449 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3449, !dbg !116
  %189 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !116
  %self3450 = load %"struct.rubinius::Object"** %189, !dbg !116
  %cast3451 = ptrtoint %"struct.rubinius::Object"* %self3450 to i64, !dbg !116
  %masked3452 = and i64 %cast3451, 3, !dbg !116
  %is_reference3453 = icmp eq i64 %masked3452, 0, !dbg !116
  br i1 %is_reference3453, label %check_class_id3454, label %visit_push_ivar_fallback3447, !dbg !116

check_class_id3429:                               ; preds = %continue3362
  %class_pos3431 = getelementptr %"struct.rubinius::Object"* %self3421, i32 0, i32 0, i32 1, !dbg !114
  %ref_class3432 = load %"struct.rubinius::Class"** %class_pos3431, !dbg !114
  %class_id_pos3433 = getelementptr %"struct.rubinius::Class"* %ref_class3432, i32 0, i32 4, !dbg !114
  %class_id3434 = load i32* %class_id_pos3433, !dbg !114
  %check_class_id3435 = icmp eq i32 %class_id3434, 1285, !dbg !114
  br i1 %check_class_id3435, label %correct_class3430, label %visit_push_ivar_fallback3424, !dbg !114

correct_class3430:                                ; preds = %check_class_id3429
  %obj_array3436 = bitcast %"struct.rubinius::Object"* %self3421 to %"struct.rubinius::Object"**, !dbg !114
  %field_pos3437 = getelementptr %"struct.rubinius::Object"** %obj_array3436, i32 6, !dbg !114
  store %"struct.rubinius::Object"* %stack_load3423, %"struct.rubinius::Object"** %field_pos3437, !dbg !114
  %cast3438 = ptrtoint %"struct.rubinius::Object"* %stack_load3423 to i64, !dbg !114
  %masked3439 = and i64 %cast3438, 3, !dbg !114
  %is_reference3440 = icmp eq i64 %masked3439, 0, !dbg !114
  br i1 %is_reference3440, label %reference_obj, label %done, !dbg !114

visit_push_ivar_fallback3424:                     ; preds = %check_class_id3429, %continue3362
  %ivar3443 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3421, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3423), !dbg !114
  %null_check3446 = icmp eq %"struct.rubinius::Object"* %ivar3443, null, !dbg !114
  br i1 %null_check3446, label %bail_out, label %check_active3445, !dbg !114

reference_obj:                                    ; preds = %correct_class3430
  %object_memory_mark = load i32* inttoptr (i64 22565880 to i32*), !dbg !114
  %word_pos3441 = getelementptr %"struct.rubinius::Object"* %self3421, i32 0, i32 0, i32 0, i32 0, !dbg !114
  %flags3442 = load i64* %word_pos3441, !dbg !114
  %mark_mask = and i64 %flags3442, 3670016, !dbg !114
  %scan_mark = add i32 %object_memory_mark, 1, !dbg !114
  %190 = zext i32 %scan_mark to i64, !dbg !114
  %lshr = shl i64 %190, 19, !dbg !114
  %is_scanned = icmp eq i64 %mark_mask, %lshr, !dbg !114
  br i1 %is_scanned, label %run_barrier, label %object_not_scanned, !dbg !114

object_not_scanned:                               ; preds = %reference_obj
  %zone_mask = and i64 %flags3442, 768, !dbg !114
  %is_young = icmp eq i64 %zone_mask, 512, !dbg !114
  br i1 %is_young, label %done, label %run_barrier, !dbg !114

run_barrier:                                      ; preds = %object_not_scanned, %reference_obj
  %191 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3421, %"struct.rubinius::Object"* %stack_load3423), !dbg !114
  br label %done, !dbg !114

done:                                             ; preds = %run_barrier, %object_not_scanned, %correct_class3430
  br label %continue3425, !dbg !114

continue3444:                                     ; preds = %check_active3445
  br label %continue3425, !dbg !114

check_active3445:                                 ; preds = %visit_push_ivar_fallback3424
  br label %continue3444, !dbg !114

continue3448:                                     ; preds = %visit_push_ivar_fallback3447, %correct_class3455
  %local_pos3470 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 6, !dbg !116
  %local3471 = load %"struct.rubinius::Object"** %local_pos3470, !dbg !116, !rbx-classid !93
  %stack_pos3472 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  store %"struct.rubinius::Object"* %local3471, %"struct.rubinius::Object"** %stack_pos3472, !dbg !116
  %local_pos3473 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 11, !dbg !116
  %local3474 = load %"struct.rubinius::Object"** %local_pos3473, !dbg !116, !rbx-classid !115
  %stack_pos3475 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !116
  store %"struct.rubinius::Object"* %local3474, %"struct.rubinius::Object"** %stack_pos3475, !dbg !116
  %stack_pos3479 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  %stack_load3480 = load %"struct.rubinius::Object"** %stack_pos3479, !dbg !116, !rbx-classid !93
  %cast3481 = ptrtoint %"struct.rubinius::Object"* %stack_load3480 to i64, !dbg !116
  %masked3482 = and i64 %cast3481, 3, !dbg !116
  %is_reference3483 = icmp eq i64 %masked3482, 0, !dbg !116
  br i1 %is_reference3483, label %check_class_id3484, label %class_fallback3476, !dbg !116

check_class_id3454:                               ; preds = %continue3425
  %class_pos3456 = getelementptr %"struct.rubinius::Object"* %self3450, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3457 = load %"struct.rubinius::Class"** %class_pos3456, !dbg !116
  %class_id_pos3458 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i32 0, i32 4, !dbg !116
  %class_id3459 = load i32* %class_id_pos3458, !dbg !116
  %check_class_id3460 = icmp eq i32 %class_id3459, 1285, !dbg !116
  br i1 %check_class_id3460, label %correct_class3455, label %visit_push_ivar_fallback3447, !dbg !116

correct_class3455:                                ; preds = %check_class_id3454
  %obj_array3461 = bitcast %"struct.rubinius::Object"* %self3450 to %"struct.rubinius::Object"**, !dbg !116
  %field_pos3462 = getelementptr %"struct.rubinius::Object"** %obj_array3461, i32 7, !dbg !116
  %field3463 = load %"struct.rubinius::Object"** %field_pos3462, !dbg !116
  %prune_undef3464 = icmp eq %"struct.rubinius::Object"* %field3463, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !116
  %"select ivar3465" = select i1 %prune_undef3464, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3463, !dbg !116
  %stack_pos3466 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  store %"struct.rubinius::Object"* %"select ivar3465", %"struct.rubinius::Object"** %stack_pos3466, !dbg !116
  br label %continue3448, !dbg !116

visit_push_ivar_fallback3447:                     ; preds = %check_class_id3454, %continue3425
  %192 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !116
  %self3467 = load %"struct.rubinius::Object"** %192, !dbg !116
  %ivar3468 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3467, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !116
  %stack_pos3469 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  store %"struct.rubinius::Object"* %ivar3468, %"struct.rubinius::Object"** %stack_pos3469, !dbg !116
  br label %continue3448, !dbg !116

continue3478:                                     ; preds = %check_active3533, %continue3511
  %send_result3535 = phi %"struct.rubinius::Object"* [ %196, %continue3511 ], [ %call_site_execute3532, %check_active3533 ], !dbg !116
  %stack_pos3536 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  store %"struct.rubinius::Object"* %send_result3535, %"struct.rubinius::Object"** %stack_pos3536, !dbg !116
  %stack_pos3540 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  %stack_load3541 = load %"struct.rubinius::Object"** %stack_pos3540, !dbg !116
  %cast3542 = ptrtoint %"struct.rubinius::Object"* %stack_load3541 to i64, !dbg !116
  %masked3543 = and i64 %cast3542, 3, !dbg !116
  %is_reference3544 = icmp eq i64 %masked3543, 0, !dbg !116
  br i1 %is_reference3544, label %check_class_id3545, label %class_fallback3537, !dbg !116

check_class_id3484:                               ; preds = %continue3448
  %class_pos3487 = getelementptr %"struct.rubinius::Object"* %stack_load3480, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3488 = load %"struct.rubinius::Class"** %class_pos3487, !dbg !116
  %class_id_pos3489 = getelementptr %"struct.rubinius::Class"* %ref_class3488, i32 0, i32 4, !dbg !116
  %class_id3490 = load i32* %class_id_pos3489, !dbg !116
  %check_class_id3491 = icmp eq i32 %class_id3490, 77, !dbg !116
  br i1 %check_class_id3491, label %correct_class3485, label %class_fallback3476, !dbg !116

correct_class3485:                                ; preds = %check_class_id3484
  %serial_id_pos3492 = getelementptr %"struct.rubinius::Class"* %ref_class3488, i32 0, i32 5, !dbg !116
  %serial_id3493 = load i32* %serial_id_pos3492, !dbg !116
  %check_serial_id3494 = icmp eq i32 %serial_id3493, 224, !dbg !116
  br i1 %check_serial_id3494, label %correct_serial3486, label %serial_fallback3477, !dbg !116

correct_serial3486:                               ; preds = %correct_class3485
  %stack_pos3495 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !116
  %stack_load3496 = load %"struct.rubinius::Object"** %stack_pos3495, !dbg !116, !rbx-classid !115
  %cast3498 = ptrtoint %"struct.rubinius::Object"* %stack_load3496 to i64, !dbg !116
  %masked3499 = and i64 %cast3498, 3, !dbg !116
  %is_reference3500 = icmp eq i64 %masked3499, 0, !dbg !116
  br i1 %is_reference3500, label %check_class_id3501, label %continue3497, !dbg !116

serial_fallback3477:                              ; preds = %correct_class3485
  store i32 166, i32* %ip_pos, !dbg !116
  %193 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 166, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !116
  br label %return_pad, !dbg !116

check_class_id3501:                               ; preds = %correct_serial3486
  %class_pos3503 = getelementptr %"struct.rubinius::Object"* %stack_load3496, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3504 = load %"struct.rubinius::Class"** %class_pos3503, !dbg !116
  %class_id_pos3505 = getelementptr %"struct.rubinius::Class"* %ref_class3504, i32 0, i32 4, !dbg !116
  %class_id3506 = load i32* %class_id_pos3505, !dbg !116
  %check_class_id3507 = icmp eq i32 %class_id3506, 77, !dbg !116
  br i1 %check_class_id3507, label %correct_class3502, label %continue3497, !dbg !116

correct_class3502:                                ; preds = %check_class_id3501
  %arg_float3508 = bitcast %"struct.rubinius::Object"* %stack_load3496 to %"struct.rubinius::Float"*, !dbg !116
  %arg.value_pos3509 = getelementptr %"struct.rubinius::Float"* %arg_float3508, i32 0, i32 1, !dbg !116
  %farg3510 = load double* %arg.value_pos3509, !dbg !116
  br label %continue3511, !dbg !116

continue3497:                                     ; preds = %check_class_id3501, %correct_serial3486
  %cast3512 = ptrtoint %"struct.rubinius::Object"* %stack_load3496 to i64, !dbg !116
  %masked3513 = and i64 %cast3512, 1, !dbg !116
  %is_fixnum3514 = icmp eq i64 %masked3513, 1, !dbg !116
  br i1 %is_fixnum3514, label %guarded_body3515, label %class_fallback3476, !dbg !116

guarded_body3515:                                 ; preds = %continue3497
  %as_int3516 = ptrtoint %"struct.rubinius::Object"* %stack_load3496 to i64, !dbg !116
  %ashr3517 = ashr i64 %as_int3516, 1, !dbg !116
  %194 = sitofp i64 %ashr3517 to double, !dbg !116
  br label %continue3511, !dbg !116

continue3511:                                     ; preds = %guarded_body3515, %correct_class3502
  %rhs3518 = phi double [ %farg3510, %correct_class3502 ], [ %194, %guarded_body3515 ], !dbg !116
  %stack_pos3519 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  %stack_load3520 = load %"struct.rubinius::Object"** %stack_pos3519, !dbg !116, !rbx-classid !93
  %self_float3521 = bitcast %"struct.rubinius::Object"* %stack_load3520 to %"struct.rubinius::Float"*, !dbg !116
  %self.value_pos3522 = getelementptr %"struct.rubinius::Float"* %self_float3521, i32 0, i32 1, !dbg !116
  %fself3523 = load double* %self.value_pos3522, !dbg !116
  %float.mul3524 = fmul double %fself3523, %rhs3518, !dbg !116
  %result3525 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !116, !rbx-classid !87
  %195 = getelementptr %"struct.rubinius::Float"* %result3525, i32 0, i32 1, !dbg !116
  store double %float.mul3524, double* %195, !dbg !116
  %196 = bitcast %"struct.rubinius::Float"* %result3525 to %"struct.rubinius::Object"*, !dbg !116
  br label %continue3478, !dbg !116

class_fallback3476:                               ; preds = %continue3497, %check_class_id3484, %continue3448
  %stack_pos3526 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  %stack_load3527 = load %"struct.rubinius::Object"** %stack_pos3526, !dbg !116, !rbx-classid !93
  store %"struct.rubinius::Object"* %stack_load3527, %"struct.rubinius::Object"** %out_args_recv, !dbg !116
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !116
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !116
  store i32 1, i32* %out_args_total, !dbg !116
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !116
  %stack_pos3528 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !116
  store %"struct.rubinius::Object"** %stack_pos3528, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !116
  %cache_const3529 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549736 to %"struct.rubinius::CallSite"**), !dbg !116
  %execute_pos3530 = getelementptr %"struct.rubinius::CallSite"* %cache_const3529, i32 0, i32 2, !dbg !116
  %execute3531 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3530, !dbg !116
  store i32 166, i32* %ip_pos, !dbg !116
  %call_site_execute3532 = call %"struct.rubinius::Object"* %execute3531(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3529, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !116
  %null_check3534 = icmp eq %"struct.rubinius::Object"* %call_site_execute3532, null, !dbg !116
  br i1 %null_check3534, label %bail_out, label %check_active3533, !dbg !116

check_active3533:                                 ; preds = %class_fallback3476
  br label %continue3478, !dbg !116

continue3539:                                     ; preds = %check_active3594, %continue3572
  %send_result3596 = phi %"struct.rubinius::Object"* [ %201, %continue3572 ], [ %call_site_execute3593, %check_active3594 ], !dbg !116
  %stack_pos3597 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  store %"struct.rubinius::Object"* %send_result3596, %"struct.rubinius::Object"** %stack_pos3597, !dbg !116
  %197 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !116
  %self3598 = load %"struct.rubinius::Object"** %197, !dbg !116
  %stack_pos3599 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  %stack_load3600 = load %"struct.rubinius::Object"** %stack_pos3599, !dbg !116
  %cast3603 = ptrtoint %"struct.rubinius::Object"* %self3598 to i64, !dbg !116
  %masked3604 = and i64 %cast3603, 3, !dbg !116
  %is_reference3605 = icmp eq i64 %masked3604, 0, !dbg !116
  br i1 %is_reference3605, label %check_class_id3606, label %visit_push_ivar_fallback3601, !dbg !116

check_class_id3545:                               ; preds = %continue3478
  %class_pos3548 = getelementptr %"struct.rubinius::Object"* %stack_load3541, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3549 = load %"struct.rubinius::Class"** %class_pos3548, !dbg !116
  %class_id_pos3550 = getelementptr %"struct.rubinius::Class"* %ref_class3549, i32 0, i32 4, !dbg !116
  %class_id3551 = load i32* %class_id_pos3550, !dbg !116
  %check_class_id3552 = icmp eq i32 %class_id3551, 77, !dbg !116
  br i1 %check_class_id3552, label %correct_class3546, label %class_fallback3537, !dbg !116

correct_class3546:                                ; preds = %check_class_id3545
  %serial_id_pos3553 = getelementptr %"struct.rubinius::Class"* %ref_class3549, i32 0, i32 5, !dbg !116
  %serial_id3554 = load i32* %serial_id_pos3553, !dbg !116
  %check_serial_id3555 = icmp eq i32 %serial_id3554, 224, !dbg !116
  br i1 %check_serial_id3555, label %correct_serial3547, label %serial_fallback3538, !dbg !116

correct_serial3547:                               ; preds = %correct_class3546
  %stack_pos3556 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  %stack_load3557 = load %"struct.rubinius::Object"** %stack_pos3556, !dbg !116
  %cast3559 = ptrtoint %"struct.rubinius::Object"* %stack_load3557 to i64, !dbg !116
  %masked3560 = and i64 %cast3559, 3, !dbg !116
  %is_reference3561 = icmp eq i64 %masked3560, 0, !dbg !116
  br i1 %is_reference3561, label %check_class_id3562, label %continue3558, !dbg !116

serial_fallback3538:                              ; preds = %correct_class3546
  store i32 169, i32* %ip_pos, !dbg !116
  %198 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 169, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !116
  br label %return_pad, !dbg !116

check_class_id3562:                               ; preds = %correct_serial3547
  %class_pos3564 = getelementptr %"struct.rubinius::Object"* %stack_load3557, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3565 = load %"struct.rubinius::Class"** %class_pos3564, !dbg !116
  %class_id_pos3566 = getelementptr %"struct.rubinius::Class"* %ref_class3565, i32 0, i32 4, !dbg !116
  %class_id3567 = load i32* %class_id_pos3566, !dbg !116
  %check_class_id3568 = icmp eq i32 %class_id3567, 77, !dbg !116
  br i1 %check_class_id3568, label %correct_class3563, label %continue3558, !dbg !116

correct_class3563:                                ; preds = %check_class_id3562
  %arg_float3569 = bitcast %"struct.rubinius::Object"* %stack_load3557 to %"struct.rubinius::Float"*, !dbg !116
  %arg.value_pos3570 = getelementptr %"struct.rubinius::Float"* %arg_float3569, i32 0, i32 1, !dbg !116
  %farg3571 = load double* %arg.value_pos3570, !dbg !116
  br label %continue3572, !dbg !116

continue3558:                                     ; preds = %check_class_id3562, %correct_serial3547
  %cast3573 = ptrtoint %"struct.rubinius::Object"* %stack_load3557 to i64, !dbg !116
  %masked3574 = and i64 %cast3573, 1, !dbg !116
  %is_fixnum3575 = icmp eq i64 %masked3574, 1, !dbg !116
  br i1 %is_fixnum3575, label %guarded_body3576, label %class_fallback3537, !dbg !116

guarded_body3576:                                 ; preds = %continue3558
  %as_int3577 = ptrtoint %"struct.rubinius::Object"* %stack_load3557 to i64, !dbg !116
  %ashr3578 = ashr i64 %as_int3577, 1, !dbg !116
  %199 = sitofp i64 %ashr3578 to double, !dbg !116
  br label %continue3572, !dbg !116

continue3572:                                     ; preds = %guarded_body3576, %correct_class3563
  %rhs3579 = phi double [ %farg3571, %correct_class3563 ], [ %199, %guarded_body3576 ], !dbg !116
  %stack_pos3580 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  %stack_load3581 = load %"struct.rubinius::Object"** %stack_pos3580, !dbg !116
  %self_float3582 = bitcast %"struct.rubinius::Object"* %stack_load3581 to %"struct.rubinius::Float"*, !dbg !116
  %self.value_pos3583 = getelementptr %"struct.rubinius::Float"* %self_float3582, i32 0, i32 1, !dbg !116
  %fself3584 = load double* %self.value_pos3583, !dbg !116
  %float.sub3585 = fsub double %fself3584, %rhs3579, !dbg !116
  %result3586 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !116, !rbx-classid !87
  %200 = getelementptr %"struct.rubinius::Float"* %result3586, i32 0, i32 1, !dbg !116
  store double %float.sub3585, double* %200, !dbg !116
  %201 = bitcast %"struct.rubinius::Float"* %result3586 to %"struct.rubinius::Object"*, !dbg !116
  br label %continue3539, !dbg !116

class_fallback3537:                               ; preds = %continue3558, %check_class_id3545, %continue3478
  %stack_pos3587 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !116
  %stack_load3588 = load %"struct.rubinius::Object"** %stack_pos3587, !dbg !116
  store %"struct.rubinius::Object"* %stack_load3588, %"struct.rubinius::Object"** %out_args_recv, !dbg !116
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !116
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !116
  store i32 1, i32* %out_args_total, !dbg !116
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !116
  %stack_pos3589 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !116
  store %"struct.rubinius::Object"** %stack_pos3589, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !116
  %cache_const3590 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549760 to %"struct.rubinius::CallSite"**), !dbg !116
  %execute_pos3591 = getelementptr %"struct.rubinius::CallSite"* %cache_const3590, i32 0, i32 2, !dbg !116
  %execute3592 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3591, !dbg !116
  store i32 169, i32* %ip_pos, !dbg !116
  %call_site_execute3593 = call %"struct.rubinius::Object"* %execute3592(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3590, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !116
  %null_check3595 = icmp eq %"struct.rubinius::Object"* %call_site_execute3593, null, !dbg !116
  br i1 %null_check3595, label %bail_out, label %check_active3594, !dbg !116

check_active3594:                                 ; preds = %class_fallback3537
  br label %continue3539, !dbg !116

continue3602:                                     ; preds = %continue3632, %done3621
  %stack_pos3637 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3637, !dbg !117
  %202 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !117
  %self3638 = load %"struct.rubinius::Object"** %202, !dbg !117
  %cast3639 = ptrtoint %"struct.rubinius::Object"* %self3638 to i64, !dbg !117
  %masked3640 = and i64 %cast3639, 3, !dbg !117
  %is_reference3641 = icmp eq i64 %masked3640, 0, !dbg !117
  br i1 %is_reference3641, label %check_class_id3642, label %visit_push_ivar_fallback3635, !dbg !117

check_class_id3606:                               ; preds = %continue3539
  %class_pos3608 = getelementptr %"struct.rubinius::Object"* %self3598, i32 0, i32 0, i32 1, !dbg !116
  %ref_class3609 = load %"struct.rubinius::Class"** %class_pos3608, !dbg !116
  %class_id_pos3610 = getelementptr %"struct.rubinius::Class"* %ref_class3609, i32 0, i32 4, !dbg !116
  %class_id3611 = load i32* %class_id_pos3610, !dbg !116
  %check_class_id3612 = icmp eq i32 %class_id3611, 1285, !dbg !116
  br i1 %check_class_id3612, label %correct_class3607, label %visit_push_ivar_fallback3601, !dbg !116

correct_class3607:                                ; preds = %check_class_id3606
  %obj_array3613 = bitcast %"struct.rubinius::Object"* %self3598 to %"struct.rubinius::Object"**, !dbg !116
  %field_pos3614 = getelementptr %"struct.rubinius::Object"** %obj_array3613, i32 7, !dbg !116
  store %"struct.rubinius::Object"* %stack_load3600, %"struct.rubinius::Object"** %field_pos3614, !dbg !116
  %cast3615 = ptrtoint %"struct.rubinius::Object"* %stack_load3600 to i64, !dbg !116
  %masked3616 = and i64 %cast3615, 3, !dbg !116
  %is_reference3617 = icmp eq i64 %masked3616, 0, !dbg !116
  br i1 %is_reference3617, label %reference_obj3618, label %done3621, !dbg !116

visit_push_ivar_fallback3601:                     ; preds = %check_class_id3606, %continue3539
  %ivar3631 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3598, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3600), !dbg !116
  %null_check3634 = icmp eq %"struct.rubinius::Object"* %ivar3631, null, !dbg !116
  br i1 %null_check3634, label %bail_out, label %check_active3633, !dbg !116

reference_obj3618:                                ; preds = %correct_class3607
  %object_memory_mark3622 = load i32* inttoptr (i64 22565880 to i32*), !dbg !116
  %word_pos3623 = getelementptr %"struct.rubinius::Object"* %self3598, i32 0, i32 0, i32 0, i32 0, !dbg !116
  %flags3624 = load i64* %word_pos3623, !dbg !116
  %mark_mask3625 = and i64 %flags3624, 3670016, !dbg !116
  %scan_mark3626 = add i32 %object_memory_mark3622, 1, !dbg !116
  %203 = zext i32 %scan_mark3626 to i64, !dbg !116
  %lshr3627 = shl i64 %203, 19, !dbg !116
  %is_scanned3628 = icmp eq i64 %mark_mask3625, %lshr3627, !dbg !116
  br i1 %is_scanned3628, label %run_barrier3620, label %object_not_scanned3619, !dbg !116

object_not_scanned3619:                           ; preds = %reference_obj3618
  %zone_mask3629 = and i64 %flags3624, 768, !dbg !116
  %is_young3630 = icmp eq i64 %zone_mask3629, 512, !dbg !116
  br i1 %is_young3630, label %done3621, label %run_barrier3620, !dbg !116

run_barrier3620:                                  ; preds = %object_not_scanned3619, %reference_obj3618
  %204 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3598, %"struct.rubinius::Object"* %stack_load3600), !dbg !116
  br label %done3621, !dbg !116

done3621:                                         ; preds = %run_barrier3620, %object_not_scanned3619, %correct_class3607
  br label %continue3602, !dbg !116

continue3632:                                     ; preds = %check_active3633
  br label %continue3602, !dbg !116

check_active3633:                                 ; preds = %visit_push_ivar_fallback3601
  br label %continue3632, !dbg !116

continue3636:                                     ; preds = %visit_push_ivar_fallback3635, %correct_class3643
  %local_pos3658 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 7, !dbg !117
  %local3659 = load %"struct.rubinius::Object"** %local_pos3658, !dbg !117, !rbx-classid !94
  %stack_pos3660 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  store %"struct.rubinius::Object"* %local3659, %"struct.rubinius::Object"** %stack_pos3660, !dbg !117
  %local_pos3661 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 11, !dbg !117
  %local3662 = load %"struct.rubinius::Object"** %local_pos3661, !dbg !117, !rbx-classid !115
  %stack_pos3663 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !117
  store %"struct.rubinius::Object"* %local3662, %"struct.rubinius::Object"** %stack_pos3663, !dbg !117
  %stack_pos3667 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  %stack_load3668 = load %"struct.rubinius::Object"** %stack_pos3667, !dbg !117, !rbx-classid !94
  %cast3669 = ptrtoint %"struct.rubinius::Object"* %stack_load3668 to i64, !dbg !117
  %masked3670 = and i64 %cast3669, 3, !dbg !117
  %is_reference3671 = icmp eq i64 %masked3670, 0, !dbg !117
  br i1 %is_reference3671, label %check_class_id3672, label %class_fallback3664, !dbg !117

check_class_id3642:                               ; preds = %continue3602
  %class_pos3644 = getelementptr %"struct.rubinius::Object"* %self3638, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3645 = load %"struct.rubinius::Class"** %class_pos3644, !dbg !117
  %class_id_pos3646 = getelementptr %"struct.rubinius::Class"* %ref_class3645, i32 0, i32 4, !dbg !117
  %class_id3647 = load i32* %class_id_pos3646, !dbg !117
  %check_class_id3648 = icmp eq i32 %class_id3647, 1285, !dbg !117
  br i1 %check_class_id3648, label %correct_class3643, label %visit_push_ivar_fallback3635, !dbg !117

correct_class3643:                                ; preds = %check_class_id3642
  %obj_array3649 = bitcast %"struct.rubinius::Object"* %self3638 to %"struct.rubinius::Object"**, !dbg !117
  %field_pos3650 = getelementptr %"struct.rubinius::Object"** %obj_array3649, i32 8, !dbg !117
  %field3651 = load %"struct.rubinius::Object"** %field_pos3650, !dbg !117
  %prune_undef3652 = icmp eq %"struct.rubinius::Object"* %field3651, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !117
  %"select ivar3653" = select i1 %prune_undef3652, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3651, !dbg !117
  %stack_pos3654 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  store %"struct.rubinius::Object"* %"select ivar3653", %"struct.rubinius::Object"** %stack_pos3654, !dbg !117
  br label %continue3636, !dbg !117

visit_push_ivar_fallback3635:                     ; preds = %check_class_id3642, %continue3602
  %205 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !117
  %self3655 = load %"struct.rubinius::Object"** %205, !dbg !117
  %ivar3656 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3655, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !117
  %stack_pos3657 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  store %"struct.rubinius::Object"* %ivar3656, %"struct.rubinius::Object"** %stack_pos3657, !dbg !117
  br label %continue3636, !dbg !117

continue3666:                                     ; preds = %check_active3721, %continue3699
  %send_result3723 = phi %"struct.rubinius::Object"* [ %209, %continue3699 ], [ %call_site_execute3720, %check_active3721 ], !dbg !117
  %stack_pos3724 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  store %"struct.rubinius::Object"* %send_result3723, %"struct.rubinius::Object"** %stack_pos3724, !dbg !117
  %stack_pos3728 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  %stack_load3729 = load %"struct.rubinius::Object"** %stack_pos3728, !dbg !117
  %cast3730 = ptrtoint %"struct.rubinius::Object"* %stack_load3729 to i64, !dbg !117
  %masked3731 = and i64 %cast3730, 3, !dbg !117
  %is_reference3732 = icmp eq i64 %masked3731, 0, !dbg !117
  br i1 %is_reference3732, label %check_class_id3733, label %class_fallback3725, !dbg !117

check_class_id3672:                               ; preds = %continue3636
  %class_pos3675 = getelementptr %"struct.rubinius::Object"* %stack_load3668, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3676 = load %"struct.rubinius::Class"** %class_pos3675, !dbg !117
  %class_id_pos3677 = getelementptr %"struct.rubinius::Class"* %ref_class3676, i32 0, i32 4, !dbg !117
  %class_id3678 = load i32* %class_id_pos3677, !dbg !117
  %check_class_id3679 = icmp eq i32 %class_id3678, 77, !dbg !117
  br i1 %check_class_id3679, label %correct_class3673, label %class_fallback3664, !dbg !117

correct_class3673:                                ; preds = %check_class_id3672
  %serial_id_pos3680 = getelementptr %"struct.rubinius::Class"* %ref_class3676, i32 0, i32 5, !dbg !117
  %serial_id3681 = load i32* %serial_id_pos3680, !dbg !117
  %check_serial_id3682 = icmp eq i32 %serial_id3681, 224, !dbg !117
  br i1 %check_serial_id3682, label %correct_serial3674, label %serial_fallback3665, !dbg !117

correct_serial3674:                               ; preds = %correct_class3673
  %stack_pos3683 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !117
  %stack_load3684 = load %"struct.rubinius::Object"** %stack_pos3683, !dbg !117, !rbx-classid !115
  %cast3686 = ptrtoint %"struct.rubinius::Object"* %stack_load3684 to i64, !dbg !117
  %masked3687 = and i64 %cast3686, 3, !dbg !117
  %is_reference3688 = icmp eq i64 %masked3687, 0, !dbg !117
  br i1 %is_reference3688, label %check_class_id3689, label %continue3685, !dbg !117

serial_fallback3665:                              ; preds = %correct_class3673
  store i32 181, i32* %ip_pos, !dbg !117
  %206 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 181, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !117
  br label %return_pad, !dbg !117

check_class_id3689:                               ; preds = %correct_serial3674
  %class_pos3691 = getelementptr %"struct.rubinius::Object"* %stack_load3684, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3692 = load %"struct.rubinius::Class"** %class_pos3691, !dbg !117
  %class_id_pos3693 = getelementptr %"struct.rubinius::Class"* %ref_class3692, i32 0, i32 4, !dbg !117
  %class_id3694 = load i32* %class_id_pos3693, !dbg !117
  %check_class_id3695 = icmp eq i32 %class_id3694, 77, !dbg !117
  br i1 %check_class_id3695, label %correct_class3690, label %continue3685, !dbg !117

correct_class3690:                                ; preds = %check_class_id3689
  %arg_float3696 = bitcast %"struct.rubinius::Object"* %stack_load3684 to %"struct.rubinius::Float"*, !dbg !117
  %arg.value_pos3697 = getelementptr %"struct.rubinius::Float"* %arg_float3696, i32 0, i32 1, !dbg !117
  %farg3698 = load double* %arg.value_pos3697, !dbg !117
  br label %continue3699, !dbg !117

continue3685:                                     ; preds = %check_class_id3689, %correct_serial3674
  %cast3700 = ptrtoint %"struct.rubinius::Object"* %stack_load3684 to i64, !dbg !117
  %masked3701 = and i64 %cast3700, 1, !dbg !117
  %is_fixnum3702 = icmp eq i64 %masked3701, 1, !dbg !117
  br i1 %is_fixnum3702, label %guarded_body3703, label %class_fallback3664, !dbg !117

guarded_body3703:                                 ; preds = %continue3685
  %as_int3704 = ptrtoint %"struct.rubinius::Object"* %stack_load3684 to i64, !dbg !117
  %ashr3705 = ashr i64 %as_int3704, 1, !dbg !117
  %207 = sitofp i64 %ashr3705 to double, !dbg !117
  br label %continue3699, !dbg !117

continue3699:                                     ; preds = %guarded_body3703, %correct_class3690
  %rhs3706 = phi double [ %farg3698, %correct_class3690 ], [ %207, %guarded_body3703 ], !dbg !117
  %stack_pos3707 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  %stack_load3708 = load %"struct.rubinius::Object"** %stack_pos3707, !dbg !117, !rbx-classid !94
  %self_float3709 = bitcast %"struct.rubinius::Object"* %stack_load3708 to %"struct.rubinius::Float"*, !dbg !117
  %self.value_pos3710 = getelementptr %"struct.rubinius::Float"* %self_float3709, i32 0, i32 1, !dbg !117
  %fself3711 = load double* %self.value_pos3710, !dbg !117
  %float.mul3712 = fmul double %fself3711, %rhs3706, !dbg !117
  %result3713 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !117, !rbx-classid !87
  %208 = getelementptr %"struct.rubinius::Float"* %result3713, i32 0, i32 1, !dbg !117
  store double %float.mul3712, double* %208, !dbg !117
  %209 = bitcast %"struct.rubinius::Float"* %result3713 to %"struct.rubinius::Object"*, !dbg !117
  br label %continue3666, !dbg !117

class_fallback3664:                               ; preds = %continue3685, %check_class_id3672, %continue3636
  %stack_pos3714 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  %stack_load3715 = load %"struct.rubinius::Object"** %stack_pos3714, !dbg !117, !rbx-classid !94
  store %"struct.rubinius::Object"* %stack_load3715, %"struct.rubinius::Object"** %out_args_recv, !dbg !117
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !117
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !117
  store i32 1, i32* %out_args_total, !dbg !117
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !117
  %stack_pos3716 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !117
  store %"struct.rubinius::Object"** %stack_pos3716, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !117
  %cache_const3717 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549856 to %"struct.rubinius::CallSite"**), !dbg !117
  %execute_pos3718 = getelementptr %"struct.rubinius::CallSite"* %cache_const3717, i32 0, i32 2, !dbg !117
  %execute3719 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3718, !dbg !117
  store i32 181, i32* %ip_pos, !dbg !117
  %call_site_execute3720 = call %"struct.rubinius::Object"* %execute3719(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3717, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !117
  %null_check3722 = icmp eq %"struct.rubinius::Object"* %call_site_execute3720, null, !dbg !117
  br i1 %null_check3722, label %bail_out, label %check_active3721, !dbg !117

check_active3721:                                 ; preds = %class_fallback3664
  br label %continue3666, !dbg !117

continue3727:                                     ; preds = %check_active3782, %continue3760
  %send_result3784 = phi %"struct.rubinius::Object"* [ %214, %continue3760 ], [ %call_site_execute3781, %check_active3782 ], !dbg !117
  %stack_pos3785 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  store %"struct.rubinius::Object"* %send_result3784, %"struct.rubinius::Object"** %stack_pos3785, !dbg !117
  %210 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !117
  %self3786 = load %"struct.rubinius::Object"** %210, !dbg !117
  %stack_pos3787 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  %stack_load3788 = load %"struct.rubinius::Object"** %stack_pos3787, !dbg !117
  %cast3791 = ptrtoint %"struct.rubinius::Object"* %self3786 to i64, !dbg !117
  %masked3792 = and i64 %cast3791, 3, !dbg !117
  %is_reference3793 = icmp eq i64 %masked3792, 0, !dbg !117
  br i1 %is_reference3793, label %check_class_id3794, label %visit_push_ivar_fallback3789, !dbg !117

check_class_id3733:                               ; preds = %continue3666
  %class_pos3736 = getelementptr %"struct.rubinius::Object"* %stack_load3729, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3737 = load %"struct.rubinius::Class"** %class_pos3736, !dbg !117
  %class_id_pos3738 = getelementptr %"struct.rubinius::Class"* %ref_class3737, i32 0, i32 4, !dbg !117
  %class_id3739 = load i32* %class_id_pos3738, !dbg !117
  %check_class_id3740 = icmp eq i32 %class_id3739, 77, !dbg !117
  br i1 %check_class_id3740, label %correct_class3734, label %class_fallback3725, !dbg !117

correct_class3734:                                ; preds = %check_class_id3733
  %serial_id_pos3741 = getelementptr %"struct.rubinius::Class"* %ref_class3737, i32 0, i32 5, !dbg !117
  %serial_id3742 = load i32* %serial_id_pos3741, !dbg !117
  %check_serial_id3743 = icmp eq i32 %serial_id3742, 224, !dbg !117
  br i1 %check_serial_id3743, label %correct_serial3735, label %serial_fallback3726, !dbg !117

correct_serial3735:                               ; preds = %correct_class3734
  %stack_pos3744 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  %stack_load3745 = load %"struct.rubinius::Object"** %stack_pos3744, !dbg !117
  %cast3747 = ptrtoint %"struct.rubinius::Object"* %stack_load3745 to i64, !dbg !117
  %masked3748 = and i64 %cast3747, 3, !dbg !117
  %is_reference3749 = icmp eq i64 %masked3748, 0, !dbg !117
  br i1 %is_reference3749, label %check_class_id3750, label %continue3746, !dbg !117

serial_fallback3726:                              ; preds = %correct_class3734
  store i32 184, i32* %ip_pos, !dbg !117
  %211 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 184, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !117
  br label %return_pad, !dbg !117

check_class_id3750:                               ; preds = %correct_serial3735
  %class_pos3752 = getelementptr %"struct.rubinius::Object"* %stack_load3745, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3753 = load %"struct.rubinius::Class"** %class_pos3752, !dbg !117
  %class_id_pos3754 = getelementptr %"struct.rubinius::Class"* %ref_class3753, i32 0, i32 4, !dbg !117
  %class_id3755 = load i32* %class_id_pos3754, !dbg !117
  %check_class_id3756 = icmp eq i32 %class_id3755, 77, !dbg !117
  br i1 %check_class_id3756, label %correct_class3751, label %continue3746, !dbg !117

correct_class3751:                                ; preds = %check_class_id3750
  %arg_float3757 = bitcast %"struct.rubinius::Object"* %stack_load3745 to %"struct.rubinius::Float"*, !dbg !117
  %arg.value_pos3758 = getelementptr %"struct.rubinius::Float"* %arg_float3757, i32 0, i32 1, !dbg !117
  %farg3759 = load double* %arg.value_pos3758, !dbg !117
  br label %continue3760, !dbg !117

continue3746:                                     ; preds = %check_class_id3750, %correct_serial3735
  %cast3761 = ptrtoint %"struct.rubinius::Object"* %stack_load3745 to i64, !dbg !117
  %masked3762 = and i64 %cast3761, 1, !dbg !117
  %is_fixnum3763 = icmp eq i64 %masked3762, 1, !dbg !117
  br i1 %is_fixnum3763, label %guarded_body3764, label %class_fallback3725, !dbg !117

guarded_body3764:                                 ; preds = %continue3746
  %as_int3765 = ptrtoint %"struct.rubinius::Object"* %stack_load3745 to i64, !dbg !117
  %ashr3766 = ashr i64 %as_int3765, 1, !dbg !117
  %212 = sitofp i64 %ashr3766 to double, !dbg !117
  br label %continue3760, !dbg !117

continue3760:                                     ; preds = %guarded_body3764, %correct_class3751
  %rhs3767 = phi double [ %farg3759, %correct_class3751 ], [ %212, %guarded_body3764 ], !dbg !117
  %stack_pos3768 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  %stack_load3769 = load %"struct.rubinius::Object"** %stack_pos3768, !dbg !117
  %self_float3770 = bitcast %"struct.rubinius::Object"* %stack_load3769 to %"struct.rubinius::Float"*, !dbg !117
  %self.value_pos3771 = getelementptr %"struct.rubinius::Float"* %self_float3770, i32 0, i32 1, !dbg !117
  %fself3772 = load double* %self.value_pos3771, !dbg !117
  %float.sub3773 = fsub double %fself3772, %rhs3767, !dbg !117
  %result3774 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !117, !rbx-classid !87
  %213 = getelementptr %"struct.rubinius::Float"* %result3774, i32 0, i32 1, !dbg !117
  store double %float.sub3773, double* %213, !dbg !117
  %214 = bitcast %"struct.rubinius::Float"* %result3774 to %"struct.rubinius::Object"*, !dbg !117
  br label %continue3727, !dbg !117

class_fallback3725:                               ; preds = %continue3746, %check_class_id3733, %continue3666
  %stack_pos3775 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !117
  %stack_load3776 = load %"struct.rubinius::Object"** %stack_pos3775, !dbg !117
  store %"struct.rubinius::Object"* %stack_load3776, %"struct.rubinius::Object"** %out_args_recv, !dbg !117
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !117
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !117
  store i32 1, i32* %out_args_total, !dbg !117
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !117
  %stack_pos3777 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !117
  store %"struct.rubinius::Object"** %stack_pos3777, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !117
  %cache_const3778 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549880 to %"struct.rubinius::CallSite"**), !dbg !117
  %execute_pos3779 = getelementptr %"struct.rubinius::CallSite"* %cache_const3778, i32 0, i32 2, !dbg !117
  %execute3780 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3779, !dbg !117
  store i32 184, i32* %ip_pos, !dbg !117
  %call_site_execute3781 = call %"struct.rubinius::Object"* %execute3780(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3778, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !117
  %null_check3783 = icmp eq %"struct.rubinius::Object"* %call_site_execute3781, null, !dbg !117
  br i1 %null_check3783, label %bail_out, label %check_active3782, !dbg !117

check_active3782:                                 ; preds = %class_fallback3725
  br label %continue3727, !dbg !117

continue3790:                                     ; preds = %continue3820, %done3809
  %local_pos3823 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !118
  %local3824 = load %"struct.rubinius::Object"** %local_pos3823, !dbg !118, !rbx-classid !88
  %stack_pos3825 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !118
  store %"struct.rubinius::Object"* %local3824, %"struct.rubinius::Object"** %stack_pos3825, !dbg !118
  %stack_pos3826 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !118
  %stack_load3827 = load %"struct.rubinius::Object"** %stack_pos3826, !dbg !118, !rbx-classid !88
  %stack_pos3828 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3827, %"struct.rubinius::Object"** %stack_pos3828, !dbg !118
  %stack_pos3832 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3833 = load %"struct.rubinius::Object"** %stack_pos3832, !dbg !118, !rbx-classid !88
  %stack_pos3834 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3835 = load %"struct.rubinius::Object"** %stack_pos3834, !dbg !118, !rbx-classid !88
  %obj_array3836 = bitcast %"struct.rubinius::Object"* %stack_load3835 to %"struct.rubinius::Object"**, !dbg !118
  %field_pos3837 = getelementptr %"struct.rubinius::Object"** %obj_array3836, i32 6, !dbg !118
  %field3838 = load %"struct.rubinius::Object"** %field_pos3837, !dbg !118
  %prune_undef3839 = icmp eq %"struct.rubinius::Object"* %field3838, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !118
  %"select ivar3840" = select i1 %prune_undef3839, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3838, !dbg !118
  %stack_pos3841 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  store %"struct.rubinius::Object"* %"select ivar3840", %"struct.rubinius::Object"** %stack_pos3841, !dbg !118
  br label %continue3831, !dbg !118

check_class_id3794:                               ; preds = %continue3727
  %class_pos3796 = getelementptr %"struct.rubinius::Object"* %self3786, i32 0, i32 0, i32 1, !dbg !117
  %ref_class3797 = load %"struct.rubinius::Class"** %class_pos3796, !dbg !117
  %class_id_pos3798 = getelementptr %"struct.rubinius::Class"* %ref_class3797, i32 0, i32 4, !dbg !117
  %class_id3799 = load i32* %class_id_pos3798, !dbg !117
  %check_class_id3800 = icmp eq i32 %class_id3799, 1285, !dbg !117
  br i1 %check_class_id3800, label %correct_class3795, label %visit_push_ivar_fallback3789, !dbg !117

correct_class3795:                                ; preds = %check_class_id3794
  %obj_array3801 = bitcast %"struct.rubinius::Object"* %self3786 to %"struct.rubinius::Object"**, !dbg !117
  %field_pos3802 = getelementptr %"struct.rubinius::Object"** %obj_array3801, i32 8, !dbg !117
  store %"struct.rubinius::Object"* %stack_load3788, %"struct.rubinius::Object"** %field_pos3802, !dbg !117
  %cast3803 = ptrtoint %"struct.rubinius::Object"* %stack_load3788 to i64, !dbg !117
  %masked3804 = and i64 %cast3803, 3, !dbg !117
  %is_reference3805 = icmp eq i64 %masked3804, 0, !dbg !117
  br i1 %is_reference3805, label %reference_obj3806, label %done3809, !dbg !117

visit_push_ivar_fallback3789:                     ; preds = %check_class_id3794, %continue3727
  %ivar3819 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3786, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3788), !dbg !117
  %null_check3822 = icmp eq %"struct.rubinius::Object"* %ivar3819, null, !dbg !117
  br i1 %null_check3822, label %bail_out, label %check_active3821, !dbg !117

reference_obj3806:                                ; preds = %correct_class3795
  %object_memory_mark3810 = load i32* inttoptr (i64 22565880 to i32*), !dbg !117
  %word_pos3811 = getelementptr %"struct.rubinius::Object"* %self3786, i32 0, i32 0, i32 0, i32 0, !dbg !117
  %flags3812 = load i64* %word_pos3811, !dbg !117
  %mark_mask3813 = and i64 %flags3812, 3670016, !dbg !117
  %scan_mark3814 = add i32 %object_memory_mark3810, 1, !dbg !117
  %215 = zext i32 %scan_mark3814 to i64, !dbg !117
  %lshr3815 = shl i64 %215, 19, !dbg !117
  %is_scanned3816 = icmp eq i64 %mark_mask3813, %lshr3815, !dbg !117
  br i1 %is_scanned3816, label %run_barrier3808, label %object_not_scanned3807, !dbg !117

object_not_scanned3807:                           ; preds = %reference_obj3806
  %zone_mask3817 = and i64 %flags3812, 768, !dbg !117
  %is_young3818 = icmp eq i64 %zone_mask3817, 512, !dbg !117
  br i1 %is_young3818, label %done3809, label %run_barrier3808, !dbg !117

run_barrier3808:                                  ; preds = %object_not_scanned3807, %reference_obj3806
  %216 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3786, %"struct.rubinius::Object"* %stack_load3788), !dbg !117
  br label %done3809, !dbg !117

done3809:                                         ; preds = %run_barrier3808, %object_not_scanned3807, %correct_class3795
  br label %continue3790, !dbg !117

continue3820:                                     ; preds = %check_active3821
  br label %continue3790, !dbg !117

check_active3821:                                 ; preds = %visit_push_ivar_fallback3789
  br label %continue3820, !dbg !117

class_fallback3829:                               ; No predecessors!
  store i32 193, i32* %ip_pos, !dbg !118
  %217 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 193, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !118
  br label %return_pad, !dbg !118

serial_fallback3830:                              ; No predecessors!
  store i32 193, i32* %ip_pos, !dbg !118
  %218 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 193, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

continue3831:                                     ; preds = %continue3790
  %local_pos3842 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 5, !dbg !118
  %local3843 = load %"struct.rubinius::Object"** %local_pos3842, !dbg !118, !rbx-classid !92
  %stack_pos3844 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  store %"struct.rubinius::Object"* %local3843, %"struct.rubinius::Object"** %stack_pos3844, !dbg !118
  %local_pos3845 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 10, !dbg !118
  %local3846 = load %"struct.rubinius::Object"** %local_pos3845, !dbg !118, !rbx-classid !119
  %stack_pos3847 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !118
  store %"struct.rubinius::Object"* %local3846, %"struct.rubinius::Object"** %stack_pos3847, !dbg !118
  %stack_pos3851 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load3852 = load %"struct.rubinius::Object"** %stack_pos3851, !dbg !118, !rbx-classid !92
  %cast3853 = ptrtoint %"struct.rubinius::Object"* %stack_load3852 to i64, !dbg !118
  %masked3854 = and i64 %cast3853, 3, !dbg !118
  %is_reference3855 = icmp eq i64 %masked3854, 0, !dbg !118
  br i1 %is_reference3855, label %check_class_id3856, label %class_fallback3848, !dbg !118

continue3850:                                     ; preds = %check_active3905, %continue3883
  %send_result3907 = phi %"struct.rubinius::Object"* [ %222, %continue3883 ], [ %call_site_execute3904, %check_active3905 ], !dbg !118
  %stack_pos3908 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  store %"struct.rubinius::Object"* %send_result3907, %"struct.rubinius::Object"** %stack_pos3908, !dbg !118
  %stack_pos3912 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3913 = load %"struct.rubinius::Object"** %stack_pos3912, !dbg !118
  %cast3914 = ptrtoint %"struct.rubinius::Object"* %stack_load3913 to i64, !dbg !118
  %masked3915 = and i64 %cast3914, 3, !dbg !118
  %is_reference3916 = icmp eq i64 %masked3915, 0, !dbg !118
  br i1 %is_reference3916, label %check_class_id3917, label %class_fallback3909, !dbg !118

check_class_id3856:                               ; preds = %continue3831
  %class_pos3859 = getelementptr %"struct.rubinius::Object"* %stack_load3852, i32 0, i32 0, i32 1, !dbg !118
  %ref_class3860 = load %"struct.rubinius::Class"** %class_pos3859, !dbg !118
  %class_id_pos3861 = getelementptr %"struct.rubinius::Class"* %ref_class3860, i32 0, i32 4, !dbg !118
  %class_id3862 = load i32* %class_id_pos3861, !dbg !118
  %check_class_id3863 = icmp eq i32 %class_id3862, 77, !dbg !118
  br i1 %check_class_id3863, label %correct_class3857, label %class_fallback3848, !dbg !118

correct_class3857:                                ; preds = %check_class_id3856
  %serial_id_pos3864 = getelementptr %"struct.rubinius::Class"* %ref_class3860, i32 0, i32 5, !dbg !118
  %serial_id3865 = load i32* %serial_id_pos3864, !dbg !118
  %check_serial_id3866 = icmp eq i32 %serial_id3865, 224, !dbg !118
  br i1 %check_serial_id3866, label %correct_serial3858, label %serial_fallback3849, !dbg !118

correct_serial3858:                               ; preds = %correct_class3857
  %stack_pos3867 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !118
  %stack_load3868 = load %"struct.rubinius::Object"** %stack_pos3867, !dbg !118, !rbx-classid !119
  %cast3870 = ptrtoint %"struct.rubinius::Object"* %stack_load3868 to i64, !dbg !118
  %masked3871 = and i64 %cast3870, 3, !dbg !118
  %is_reference3872 = icmp eq i64 %masked3871, 0, !dbg !118
  br i1 %is_reference3872, label %check_class_id3873, label %continue3869, !dbg !118

serial_fallback3849:                              ; preds = %correct_class3857
  store i32 200, i32* %ip_pos, !dbg !118
  %219 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 200, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

check_class_id3873:                               ; preds = %correct_serial3858
  %class_pos3875 = getelementptr %"struct.rubinius::Object"* %stack_load3868, i32 0, i32 0, i32 1, !dbg !118
  %ref_class3876 = load %"struct.rubinius::Class"** %class_pos3875, !dbg !118
  %class_id_pos3877 = getelementptr %"struct.rubinius::Class"* %ref_class3876, i32 0, i32 4, !dbg !118
  %class_id3878 = load i32* %class_id_pos3877, !dbg !118
  %check_class_id3879 = icmp eq i32 %class_id3878, 77, !dbg !118
  br i1 %check_class_id3879, label %correct_class3874, label %continue3869, !dbg !118

correct_class3874:                                ; preds = %check_class_id3873
  %arg_float3880 = bitcast %"struct.rubinius::Object"* %stack_load3868 to %"struct.rubinius::Float"*, !dbg !118
  %arg.value_pos3881 = getelementptr %"struct.rubinius::Float"* %arg_float3880, i32 0, i32 1, !dbg !118
  %farg3882 = load double* %arg.value_pos3881, !dbg !118
  br label %continue3883, !dbg !118

continue3869:                                     ; preds = %check_class_id3873, %correct_serial3858
  %cast3884 = ptrtoint %"struct.rubinius::Object"* %stack_load3868 to i64, !dbg !118
  %masked3885 = and i64 %cast3884, 1, !dbg !118
  %is_fixnum3886 = icmp eq i64 %masked3885, 1, !dbg !118
  br i1 %is_fixnum3886, label %guarded_body3887, label %class_fallback3848, !dbg !118

guarded_body3887:                                 ; preds = %continue3869
  %as_int3888 = ptrtoint %"struct.rubinius::Object"* %stack_load3868 to i64, !dbg !118
  %ashr3889 = ashr i64 %as_int3888, 1, !dbg !118
  %220 = sitofp i64 %ashr3889 to double, !dbg !118
  br label %continue3883, !dbg !118

continue3883:                                     ; preds = %guarded_body3887, %correct_class3874
  %rhs3890 = phi double [ %farg3882, %correct_class3874 ], [ %220, %guarded_body3887 ], !dbg !118
  %stack_pos3891 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load3892 = load %"struct.rubinius::Object"** %stack_pos3891, !dbg !118, !rbx-classid !92
  %self_float3893 = bitcast %"struct.rubinius::Object"* %stack_load3892 to %"struct.rubinius::Float"*, !dbg !118
  %self.value_pos3894 = getelementptr %"struct.rubinius::Float"* %self_float3893, i32 0, i32 1, !dbg !118
  %fself3895 = load double* %self.value_pos3894, !dbg !118
  %float.mul3896 = fmul double %fself3895, %rhs3890, !dbg !118
  %result3897 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !118, !rbx-classid !87
  %221 = getelementptr %"struct.rubinius::Float"* %result3897, i32 0, i32 1, !dbg !118
  store double %float.mul3896, double* %221, !dbg !118
  %222 = bitcast %"struct.rubinius::Float"* %result3897 to %"struct.rubinius::Object"*, !dbg !118
  br label %continue3850, !dbg !118

class_fallback3848:                               ; preds = %continue3869, %check_class_id3856, %continue3831
  %stack_pos3898 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load3899 = load %"struct.rubinius::Object"** %stack_pos3898, !dbg !118, !rbx-classid !92
  store %"struct.rubinius::Object"* %stack_load3899, %"struct.rubinius::Object"** %out_args_recv, !dbg !118
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !118
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !118
  store i32 1, i32* %out_args_total, !dbg !118
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !118
  %stack_pos3900 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !118
  store %"struct.rubinius::Object"** %stack_pos3900, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !118
  %cache_const3901 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550008 to %"struct.rubinius::CallSite"**), !dbg !118
  %execute_pos3902 = getelementptr %"struct.rubinius::CallSite"* %cache_const3901, i32 0, i32 2, !dbg !118
  %execute3903 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3902, !dbg !118
  store i32 200, i32* %ip_pos, !dbg !118
  %call_site_execute3904 = call %"struct.rubinius::Object"* %execute3903(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3901, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !118
  %null_check3906 = icmp eq %"struct.rubinius::Object"* %call_site_execute3904, null, !dbg !118
  br i1 %null_check3906, label %bail_out, label %check_active3905, !dbg !118

check_active3905:                                 ; preds = %class_fallback3848
  br label %continue3850, !dbg !118

continue3911:                                     ; preds = %check_active3966, %continue3944
  %send_result3968 = phi %"struct.rubinius::Object"* [ %226, %continue3944 ], [ %call_site_execute3965, %check_active3966 ], !dbg !118
  %stack_pos3969 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  store %"struct.rubinius::Object"* %send_result3968, %"struct.rubinius::Object"** %stack_pos3969, !dbg !118
  %stack_pos3970 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3971 = load %"struct.rubinius::Object"** %stack_pos3970, !dbg !118
  %stack_pos3972 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3971, %"struct.rubinius::Object"** %stack_pos3972, !dbg !118
  %stack_pos3973 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load3974 = load %"struct.rubinius::Object"** %stack_pos3973, !dbg !118
  %stack_pos3975 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3976 = load %"struct.rubinius::Object"** %stack_pos3975, !dbg !118
  %stack_pos3977 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3976, %"struct.rubinius::Object"** %stack_pos3977, !dbg !118
  %stack_pos3978 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !118
  %stack_load3979 = load %"struct.rubinius::Object"** %stack_pos3978, !dbg !118, !rbx-classid !88
  %stack_pos3980 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3979, %"struct.rubinius::Object"** %stack_pos3980, !dbg !118
  %stack_pos3981 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3974, %"struct.rubinius::Object"** %stack_pos3981, !dbg !118
  %stack_pos3985 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3986 = load %"struct.rubinius::Object"** %stack_pos3985, !dbg !118
  %cast3987 = ptrtoint %"struct.rubinius::Object"* %stack_load3986 to i64, !dbg !118
  %masked3988 = and i64 %cast3987, 3, !dbg !118
  %is_reference3989 = icmp eq i64 %masked3988, 0, !dbg !118
  br i1 %is_reference3989, label %check_class_id3990, label %class_fallback3982, !dbg !118

check_class_id3917:                               ; preds = %continue3850
  %class_pos3920 = getelementptr %"struct.rubinius::Object"* %stack_load3913, i32 0, i32 0, i32 1, !dbg !118
  %ref_class3921 = load %"struct.rubinius::Class"** %class_pos3920, !dbg !118
  %class_id_pos3922 = getelementptr %"struct.rubinius::Class"* %ref_class3921, i32 0, i32 4, !dbg !118
  %class_id3923 = load i32* %class_id_pos3922, !dbg !118
  %check_class_id3924 = icmp eq i32 %class_id3923, 77, !dbg !118
  br i1 %check_class_id3924, label %correct_class3918, label %class_fallback3909, !dbg !118

correct_class3918:                                ; preds = %check_class_id3917
  %serial_id_pos3925 = getelementptr %"struct.rubinius::Class"* %ref_class3921, i32 0, i32 5, !dbg !118
  %serial_id3926 = load i32* %serial_id_pos3925, !dbg !118
  %check_serial_id3927 = icmp eq i32 %serial_id3926, 224, !dbg !118
  br i1 %check_serial_id3927, label %correct_serial3919, label %serial_fallback3910, !dbg !118

correct_serial3919:                               ; preds = %correct_class3918
  %stack_pos3928 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load3929 = load %"struct.rubinius::Object"** %stack_pos3928, !dbg !118
  %cast3931 = ptrtoint %"struct.rubinius::Object"* %stack_load3929 to i64, !dbg !118
  %masked3932 = and i64 %cast3931, 3, !dbg !118
  %is_reference3933 = icmp eq i64 %masked3932, 0, !dbg !118
  br i1 %is_reference3933, label %check_class_id3934, label %continue3930, !dbg !118

serial_fallback3910:                              ; preds = %correct_class3918
  store i32 203, i32* %ip_pos, !dbg !118
  %223 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 203, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

check_class_id3934:                               ; preds = %correct_serial3919
  %class_pos3936 = getelementptr %"struct.rubinius::Object"* %stack_load3929, i32 0, i32 0, i32 1, !dbg !118
  %ref_class3937 = load %"struct.rubinius::Class"** %class_pos3936, !dbg !118
  %class_id_pos3938 = getelementptr %"struct.rubinius::Class"* %ref_class3937, i32 0, i32 4, !dbg !118
  %class_id3939 = load i32* %class_id_pos3938, !dbg !118
  %check_class_id3940 = icmp eq i32 %class_id3939, 77, !dbg !118
  br i1 %check_class_id3940, label %correct_class3935, label %continue3930, !dbg !118

correct_class3935:                                ; preds = %check_class_id3934
  %arg_float3941 = bitcast %"struct.rubinius::Object"* %stack_load3929 to %"struct.rubinius::Float"*, !dbg !118
  %arg.value_pos3942 = getelementptr %"struct.rubinius::Float"* %arg_float3941, i32 0, i32 1, !dbg !118
  %farg3943 = load double* %arg.value_pos3942, !dbg !118
  br label %continue3944, !dbg !118

continue3930:                                     ; preds = %check_class_id3934, %correct_serial3919
  %cast3945 = ptrtoint %"struct.rubinius::Object"* %stack_load3929 to i64, !dbg !118
  %masked3946 = and i64 %cast3945, 1, !dbg !118
  %is_fixnum3947 = icmp eq i64 %masked3946, 1, !dbg !118
  br i1 %is_fixnum3947, label %guarded_body3948, label %class_fallback3909, !dbg !118

guarded_body3948:                                 ; preds = %continue3930
  %as_int3949 = ptrtoint %"struct.rubinius::Object"* %stack_load3929 to i64, !dbg !118
  %ashr3950 = ashr i64 %as_int3949, 1, !dbg !118
  %224 = sitofp i64 %ashr3950 to double, !dbg !118
  br label %continue3944, !dbg !118

continue3944:                                     ; preds = %guarded_body3948, %correct_class3935
  %rhs3951 = phi double [ %farg3943, %correct_class3935 ], [ %224, %guarded_body3948 ], !dbg !118
  %stack_pos3952 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3953 = load %"struct.rubinius::Object"** %stack_pos3952, !dbg !118
  %self_float3954 = bitcast %"struct.rubinius::Object"* %stack_load3953 to %"struct.rubinius::Float"*, !dbg !118
  %self.value_pos3955 = getelementptr %"struct.rubinius::Float"* %self_float3954, i32 0, i32 1, !dbg !118
  %fself3956 = load double* %self.value_pos3955, !dbg !118
  %float.add3957 = fadd double %fself3956, %rhs3951, !dbg !118
  %result3958 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !118, !rbx-classid !87
  %225 = getelementptr %"struct.rubinius::Float"* %result3958, i32 0, i32 1, !dbg !118
  store double %float.add3957, double* %225, !dbg !118
  %226 = bitcast %"struct.rubinius::Float"* %result3958 to %"struct.rubinius::Object"*, !dbg !118
  br label %continue3911, !dbg !118

class_fallback3909:                               ; preds = %continue3930, %check_class_id3917, %continue3850
  %stack_pos3959 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load3960 = load %"struct.rubinius::Object"** %stack_pos3959, !dbg !118
  store %"struct.rubinius::Object"* %stack_load3960, %"struct.rubinius::Object"** %out_args_recv, !dbg !118
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !118
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !118
  store i32 1, i32* %out_args_total, !dbg !118
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !118
  %stack_pos3961 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  store %"struct.rubinius::Object"** %stack_pos3961, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !118
  %cache_const3962 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550032 to %"struct.rubinius::CallSite"**), !dbg !118
  %execute_pos3963 = getelementptr %"struct.rubinius::CallSite"* %cache_const3962, i32 0, i32 2, !dbg !118
  %execute3964 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3963, !dbg !118
  store i32 203, i32* %ip_pos, !dbg !118
  %call_site_execute3965 = call %"struct.rubinius::Object"* %execute3964(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3962, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !118
  %null_check3967 = icmp eq %"struct.rubinius::Object"* %call_site_execute3965, null, !dbg !118
  br i1 %null_check3967, label %bail_out, label %check_active3966, !dbg !118

check_active3966:                                 ; preds = %class_fallback3909
  br label %continue3911, !dbg !118

continue3984:                                     ; preds = %done4013
  %local_pos4024 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !120
  %local4025 = load %"struct.rubinius::Object"** %local_pos4024, !dbg !120, !rbx-classid !88
  %stack_pos4026 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !120
  store %"struct.rubinius::Object"* %local4025, %"struct.rubinius::Object"** %stack_pos4026, !dbg !120
  %stack_pos4027 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !120
  %stack_load4028 = load %"struct.rubinius::Object"** %stack_pos4027, !dbg !120, !rbx-classid !88
  %stack_pos4029 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4028, %"struct.rubinius::Object"** %stack_pos4029, !dbg !120
  %stack_pos4033 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4034 = load %"struct.rubinius::Object"** %stack_pos4033, !dbg !120, !rbx-classid !88
  %stack_pos4035 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4036 = load %"struct.rubinius::Object"** %stack_pos4035, !dbg !120, !rbx-classid !88
  %obj_array4037 = bitcast %"struct.rubinius::Object"* %stack_load4036 to %"struct.rubinius::Object"**, !dbg !120
  %field_pos4038 = getelementptr %"struct.rubinius::Object"** %obj_array4037, i32 7, !dbg !120
  %field4039 = load %"struct.rubinius::Object"** %field_pos4038, !dbg !120
  %prune_undef4040 = icmp eq %"struct.rubinius::Object"* %field4039, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !120
  %"select ivar4041" = select i1 %prune_undef4040, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4039, !dbg !120
  %stack_pos4042 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  store %"struct.rubinius::Object"* %"select ivar4041", %"struct.rubinius::Object"** %stack_pos4042, !dbg !120
  br label %continue4032, !dbg !120

check_class_id3990:                               ; preds = %continue3911
  %class_pos3993 = getelementptr %"struct.rubinius::Object"* %stack_load3986, i32 0, i32 0, i32 1, !dbg !118
  %ref_class3994 = load %"struct.rubinius::Class"** %class_pos3993, !dbg !118
  %class_id_pos3995 = getelementptr %"struct.rubinius::Class"* %ref_class3994, i32 0, i32 4, !dbg !118
  %class_id3996 = load i32* %class_id_pos3995, !dbg !118
  %check_class_id3997 = icmp eq i32 %class_id3996, 1285, !dbg !118
  br i1 %check_class_id3997, label %correct_class3991, label %class_fallback3982, !dbg !118

correct_class3991:                                ; preds = %check_class_id3990
  %serial_id_pos3998 = getelementptr %"struct.rubinius::Class"* %ref_class3994, i32 0, i32 5, !dbg !118
  %serial_id3999 = load i32* %serial_id_pos3998, !dbg !118
  %check_serial_id4000 = icmp eq i32 %serial_id3999, 2, !dbg !118
  br i1 %check_serial_id4000, label %correct_serial3992, label %serial_fallback3983, !dbg !118

class_fallback3982:                               ; preds = %check_class_id3990, %continue3911
  store i32 209, i32* %ip_pos, !dbg !118
  %227 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !118
  br label %return_pad, !dbg !118

correct_serial3992:                               ; preds = %correct_class3991
  %stack_pos4001 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !118
  %stack_load4002 = load %"struct.rubinius::Object"** %stack_pos4001, !dbg !118
  %stack_pos4003 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  %stack_load4004 = load %"struct.rubinius::Object"** %stack_pos4003, !dbg !118
  %obj_array4005 = bitcast %"struct.rubinius::Object"* %stack_load4004 to %"struct.rubinius::Object"**, !dbg !118
  %field_pos4006 = getelementptr %"struct.rubinius::Object"** %obj_array4005, i32 6, !dbg !118
  store %"struct.rubinius::Object"* %stack_load4002, %"struct.rubinius::Object"** %field_pos4006, !dbg !118
  %cast4007 = ptrtoint %"struct.rubinius::Object"* %stack_load4002 to i64, !dbg !118
  %masked4008 = and i64 %cast4007, 3, !dbg !118
  %is_reference4009 = icmp eq i64 %masked4008, 0, !dbg !118
  br i1 %is_reference4009, label %reference_obj4010, label %done4013, !dbg !118

serial_fallback3983:                              ; preds = %correct_class3991
  store i32 209, i32* %ip_pos, !dbg !118
  %228 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

reference_obj4010:                                ; preds = %correct_serial3992
  %object_memory_mark4014 = load i32* inttoptr (i64 22565880 to i32*), !dbg !118
  %word_pos4015 = getelementptr %"struct.rubinius::Object"* %stack_load4004, i32 0, i32 0, i32 0, i32 0, !dbg !118
  %flags4016 = load i64* %word_pos4015, !dbg !118
  %mark_mask4017 = and i64 %flags4016, 3670016, !dbg !118
  %scan_mark4018 = add i32 %object_memory_mark4014, 1, !dbg !118
  %229 = zext i32 %scan_mark4018 to i64, !dbg !118
  %lshr4019 = shl i64 %229, 19, !dbg !118
  %is_scanned4020 = icmp eq i64 %mark_mask4017, %lshr4019, !dbg !118
  br i1 %is_scanned4020, label %run_barrier4012, label %object_not_scanned4011, !dbg !118

object_not_scanned4011:                           ; preds = %reference_obj4010
  %zone_mask4021 = and i64 %flags4016, 768, !dbg !118
  %is_young4022 = icmp eq i64 %zone_mask4021, 512, !dbg !118
  br i1 %is_young4022, label %done4013, label %run_barrier4012, !dbg !118

run_barrier4012:                                  ; preds = %object_not_scanned4011, %reference_obj4010
  %230 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load4004, %"struct.rubinius::Object"* %stack_load4002), !dbg !118
  br label %done4013, !dbg !118

done4013:                                         ; preds = %run_barrier4012, %object_not_scanned4011, %correct_serial3992
  %stack_pos4023 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !118
  store %"struct.rubinius::Object"* %stack_load4002, %"struct.rubinius::Object"** %stack_pos4023, !dbg !118
  br label %continue3984, !dbg !118

class_fallback4030:                               ; No predecessors!
  store i32 217, i32* %ip_pos, !dbg !120
  %231 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 217, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !120
  br label %return_pad, !dbg !120

serial_fallback4031:                              ; No predecessors!
  store i32 217, i32* %ip_pos, !dbg !120
  %232 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 217, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !120
  br label %return_pad, !dbg !120

continue4032:                                     ; preds = %continue3984
  %local_pos4043 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 6, !dbg !120
  %local4044 = load %"struct.rubinius::Object"** %local_pos4043, !dbg !120, !rbx-classid !93
  %stack_pos4045 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  store %"struct.rubinius::Object"* %local4044, %"struct.rubinius::Object"** %stack_pos4045, !dbg !120
  %local_pos4046 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 10, !dbg !120
  %local4047 = load %"struct.rubinius::Object"** %local_pos4046, !dbg !120, !rbx-classid !119
  %stack_pos4048 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !120
  store %"struct.rubinius::Object"* %local4047, %"struct.rubinius::Object"** %stack_pos4048, !dbg !120
  %stack_pos4052 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4053 = load %"struct.rubinius::Object"** %stack_pos4052, !dbg !120, !rbx-classid !93
  %cast4054 = ptrtoint %"struct.rubinius::Object"* %stack_load4053 to i64, !dbg !120
  %masked4055 = and i64 %cast4054, 3, !dbg !120
  %is_reference4056 = icmp eq i64 %masked4055, 0, !dbg !120
  br i1 %is_reference4056, label %check_class_id4057, label %class_fallback4049, !dbg !120

continue4051:                                     ; preds = %check_active4106, %continue4084
  %send_result4108 = phi %"struct.rubinius::Object"* [ %236, %continue4084 ], [ %call_site_execute4105, %check_active4106 ], !dbg !120
  %stack_pos4109 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  store %"struct.rubinius::Object"* %send_result4108, %"struct.rubinius::Object"** %stack_pos4109, !dbg !120
  %stack_pos4113 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4114 = load %"struct.rubinius::Object"** %stack_pos4113, !dbg !120
  %cast4115 = ptrtoint %"struct.rubinius::Object"* %stack_load4114 to i64, !dbg !120
  %masked4116 = and i64 %cast4115, 3, !dbg !120
  %is_reference4117 = icmp eq i64 %masked4116, 0, !dbg !120
  br i1 %is_reference4117, label %check_class_id4118, label %class_fallback4110, !dbg !120

check_class_id4057:                               ; preds = %continue4032
  %class_pos4060 = getelementptr %"struct.rubinius::Object"* %stack_load4053, i32 0, i32 0, i32 1, !dbg !120
  %ref_class4061 = load %"struct.rubinius::Class"** %class_pos4060, !dbg !120
  %class_id_pos4062 = getelementptr %"struct.rubinius::Class"* %ref_class4061, i32 0, i32 4, !dbg !120
  %class_id4063 = load i32* %class_id_pos4062, !dbg !120
  %check_class_id4064 = icmp eq i32 %class_id4063, 77, !dbg !120
  br i1 %check_class_id4064, label %correct_class4058, label %class_fallback4049, !dbg !120

correct_class4058:                                ; preds = %check_class_id4057
  %serial_id_pos4065 = getelementptr %"struct.rubinius::Class"* %ref_class4061, i32 0, i32 5, !dbg !120
  %serial_id4066 = load i32* %serial_id_pos4065, !dbg !120
  %check_serial_id4067 = icmp eq i32 %serial_id4066, 224, !dbg !120
  br i1 %check_serial_id4067, label %correct_serial4059, label %serial_fallback4050, !dbg !120

correct_serial4059:                               ; preds = %correct_class4058
  %stack_pos4068 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !120
  %stack_load4069 = load %"struct.rubinius::Object"** %stack_pos4068, !dbg !120, !rbx-classid !119
  %cast4071 = ptrtoint %"struct.rubinius::Object"* %stack_load4069 to i64, !dbg !120
  %masked4072 = and i64 %cast4071, 3, !dbg !120
  %is_reference4073 = icmp eq i64 %masked4072, 0, !dbg !120
  br i1 %is_reference4073, label %check_class_id4074, label %continue4070, !dbg !120

serial_fallback4050:                              ; preds = %correct_class4058
  store i32 224, i32* %ip_pos, !dbg !120
  %233 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 224, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !120
  br label %return_pad, !dbg !120

check_class_id4074:                               ; preds = %correct_serial4059
  %class_pos4076 = getelementptr %"struct.rubinius::Object"* %stack_load4069, i32 0, i32 0, i32 1, !dbg !120
  %ref_class4077 = load %"struct.rubinius::Class"** %class_pos4076, !dbg !120
  %class_id_pos4078 = getelementptr %"struct.rubinius::Class"* %ref_class4077, i32 0, i32 4, !dbg !120
  %class_id4079 = load i32* %class_id_pos4078, !dbg !120
  %check_class_id4080 = icmp eq i32 %class_id4079, 77, !dbg !120
  br i1 %check_class_id4080, label %correct_class4075, label %continue4070, !dbg !120

correct_class4075:                                ; preds = %check_class_id4074
  %arg_float4081 = bitcast %"struct.rubinius::Object"* %stack_load4069 to %"struct.rubinius::Float"*, !dbg !120
  %arg.value_pos4082 = getelementptr %"struct.rubinius::Float"* %arg_float4081, i32 0, i32 1, !dbg !120
  %farg4083 = load double* %arg.value_pos4082, !dbg !120
  br label %continue4084, !dbg !120

continue4070:                                     ; preds = %check_class_id4074, %correct_serial4059
  %cast4085 = ptrtoint %"struct.rubinius::Object"* %stack_load4069 to i64, !dbg !120
  %masked4086 = and i64 %cast4085, 1, !dbg !120
  %is_fixnum4087 = icmp eq i64 %masked4086, 1, !dbg !120
  br i1 %is_fixnum4087, label %guarded_body4088, label %class_fallback4049, !dbg !120

guarded_body4088:                                 ; preds = %continue4070
  %as_int4089 = ptrtoint %"struct.rubinius::Object"* %stack_load4069 to i64, !dbg !120
  %ashr4090 = ashr i64 %as_int4089, 1, !dbg !120
  %234 = sitofp i64 %ashr4090 to double, !dbg !120
  br label %continue4084, !dbg !120

continue4084:                                     ; preds = %guarded_body4088, %correct_class4075
  %rhs4091 = phi double [ %farg4083, %correct_class4075 ], [ %234, %guarded_body4088 ], !dbg !120
  %stack_pos4092 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4093 = load %"struct.rubinius::Object"** %stack_pos4092, !dbg !120, !rbx-classid !93
  %self_float4094 = bitcast %"struct.rubinius::Object"* %stack_load4093 to %"struct.rubinius::Float"*, !dbg !120
  %self.value_pos4095 = getelementptr %"struct.rubinius::Float"* %self_float4094, i32 0, i32 1, !dbg !120
  %fself4096 = load double* %self.value_pos4095, !dbg !120
  %float.mul4097 = fmul double %fself4096, %rhs4091, !dbg !120
  %result4098 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !120, !rbx-classid !87
  %235 = getelementptr %"struct.rubinius::Float"* %result4098, i32 0, i32 1, !dbg !120
  store double %float.mul4097, double* %235, !dbg !120
  %236 = bitcast %"struct.rubinius::Float"* %result4098 to %"struct.rubinius::Object"*, !dbg !120
  br label %continue4051, !dbg !120

class_fallback4049:                               ; preds = %continue4070, %check_class_id4057, %continue4032
  %stack_pos4099 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4100 = load %"struct.rubinius::Object"** %stack_pos4099, !dbg !120, !rbx-classid !93
  store %"struct.rubinius::Object"* %stack_load4100, %"struct.rubinius::Object"** %out_args_recv, !dbg !120
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !120
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !120
  store i32 1, i32* %out_args_total, !dbg !120
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !120
  %stack_pos4101 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !120
  store %"struct.rubinius::Object"** %stack_pos4101, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !120
  %cache_const4102 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550200 to %"struct.rubinius::CallSite"**), !dbg !120
  %execute_pos4103 = getelementptr %"struct.rubinius::CallSite"* %cache_const4102, i32 0, i32 2, !dbg !120
  %execute4104 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4103, !dbg !120
  store i32 224, i32* %ip_pos, !dbg !120
  %call_site_execute4105 = call %"struct.rubinius::Object"* %execute4104(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4102, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !120
  %null_check4107 = icmp eq %"struct.rubinius::Object"* %call_site_execute4105, null, !dbg !120
  br i1 %null_check4107, label %bail_out, label %check_active4106, !dbg !120

check_active4106:                                 ; preds = %class_fallback4049
  br label %continue4051, !dbg !120

continue4112:                                     ; preds = %check_active4167, %continue4145
  %send_result4169 = phi %"struct.rubinius::Object"* [ %240, %continue4145 ], [ %call_site_execute4166, %check_active4167 ], !dbg !120
  %stack_pos4170 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  store %"struct.rubinius::Object"* %send_result4169, %"struct.rubinius::Object"** %stack_pos4170, !dbg !120
  %stack_pos4171 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4172 = load %"struct.rubinius::Object"** %stack_pos4171, !dbg !120
  %stack_pos4173 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4172, %"struct.rubinius::Object"** %stack_pos4173, !dbg !120
  %stack_pos4174 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4175 = load %"struct.rubinius::Object"** %stack_pos4174, !dbg !120
  %stack_pos4176 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4177 = load %"struct.rubinius::Object"** %stack_pos4176, !dbg !120
  %stack_pos4178 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4177, %"struct.rubinius::Object"** %stack_pos4178, !dbg !120
  %stack_pos4179 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !120
  %stack_load4180 = load %"struct.rubinius::Object"** %stack_pos4179, !dbg !120, !rbx-classid !88
  %stack_pos4181 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4180, %"struct.rubinius::Object"** %stack_pos4181, !dbg !120
  %stack_pos4182 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4175, %"struct.rubinius::Object"** %stack_pos4182, !dbg !120
  %stack_pos4186 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4187 = load %"struct.rubinius::Object"** %stack_pos4186, !dbg !120
  %cast4188 = ptrtoint %"struct.rubinius::Object"* %stack_load4187 to i64, !dbg !120
  %masked4189 = and i64 %cast4188, 3, !dbg !120
  %is_reference4190 = icmp eq i64 %masked4189, 0, !dbg !120
  br i1 %is_reference4190, label %check_class_id4191, label %class_fallback4183, !dbg !120

check_class_id4118:                               ; preds = %continue4051
  %class_pos4121 = getelementptr %"struct.rubinius::Object"* %stack_load4114, i32 0, i32 0, i32 1, !dbg !120
  %ref_class4122 = load %"struct.rubinius::Class"** %class_pos4121, !dbg !120
  %class_id_pos4123 = getelementptr %"struct.rubinius::Class"* %ref_class4122, i32 0, i32 4, !dbg !120
  %class_id4124 = load i32* %class_id_pos4123, !dbg !120
  %check_class_id4125 = icmp eq i32 %class_id4124, 77, !dbg !120
  br i1 %check_class_id4125, label %correct_class4119, label %class_fallback4110, !dbg !120

correct_class4119:                                ; preds = %check_class_id4118
  %serial_id_pos4126 = getelementptr %"struct.rubinius::Class"* %ref_class4122, i32 0, i32 5, !dbg !120
  %serial_id4127 = load i32* %serial_id_pos4126, !dbg !120
  %check_serial_id4128 = icmp eq i32 %serial_id4127, 224, !dbg !120
  br i1 %check_serial_id4128, label %correct_serial4120, label %serial_fallback4111, !dbg !120

correct_serial4120:                               ; preds = %correct_class4119
  %stack_pos4129 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4130 = load %"struct.rubinius::Object"** %stack_pos4129, !dbg !120
  %cast4132 = ptrtoint %"struct.rubinius::Object"* %stack_load4130 to i64, !dbg !120
  %masked4133 = and i64 %cast4132, 3, !dbg !120
  %is_reference4134 = icmp eq i64 %masked4133, 0, !dbg !120
  br i1 %is_reference4134, label %check_class_id4135, label %continue4131, !dbg !120

serial_fallback4111:                              ; preds = %correct_class4119
  store i32 227, i32* %ip_pos, !dbg !120
  %237 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 227, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !120
  br label %return_pad, !dbg !120

check_class_id4135:                               ; preds = %correct_serial4120
  %class_pos4137 = getelementptr %"struct.rubinius::Object"* %stack_load4130, i32 0, i32 0, i32 1, !dbg !120
  %ref_class4138 = load %"struct.rubinius::Class"** %class_pos4137, !dbg !120
  %class_id_pos4139 = getelementptr %"struct.rubinius::Class"* %ref_class4138, i32 0, i32 4, !dbg !120
  %class_id4140 = load i32* %class_id_pos4139, !dbg !120
  %check_class_id4141 = icmp eq i32 %class_id4140, 77, !dbg !120
  br i1 %check_class_id4141, label %correct_class4136, label %continue4131, !dbg !120

correct_class4136:                                ; preds = %check_class_id4135
  %arg_float4142 = bitcast %"struct.rubinius::Object"* %stack_load4130 to %"struct.rubinius::Float"*, !dbg !120
  %arg.value_pos4143 = getelementptr %"struct.rubinius::Float"* %arg_float4142, i32 0, i32 1, !dbg !120
  %farg4144 = load double* %arg.value_pos4143, !dbg !120
  br label %continue4145, !dbg !120

continue4131:                                     ; preds = %check_class_id4135, %correct_serial4120
  %cast4146 = ptrtoint %"struct.rubinius::Object"* %stack_load4130 to i64, !dbg !120
  %masked4147 = and i64 %cast4146, 1, !dbg !120
  %is_fixnum4148 = icmp eq i64 %masked4147, 1, !dbg !120
  br i1 %is_fixnum4148, label %guarded_body4149, label %class_fallback4110, !dbg !120

guarded_body4149:                                 ; preds = %continue4131
  %as_int4150 = ptrtoint %"struct.rubinius::Object"* %stack_load4130 to i64, !dbg !120
  %ashr4151 = ashr i64 %as_int4150, 1, !dbg !120
  %238 = sitofp i64 %ashr4151 to double, !dbg !120
  br label %continue4145, !dbg !120

continue4145:                                     ; preds = %guarded_body4149, %correct_class4136
  %rhs4152 = phi double [ %farg4144, %correct_class4136 ], [ %238, %guarded_body4149 ], !dbg !120
  %stack_pos4153 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4154 = load %"struct.rubinius::Object"** %stack_pos4153, !dbg !120
  %self_float4155 = bitcast %"struct.rubinius::Object"* %stack_load4154 to %"struct.rubinius::Float"*, !dbg !120
  %self.value_pos4156 = getelementptr %"struct.rubinius::Float"* %self_float4155, i32 0, i32 1, !dbg !120
  %fself4157 = load double* %self.value_pos4156, !dbg !120
  %float.add4158 = fadd double %fself4157, %rhs4152, !dbg !120
  %result4159 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !120, !rbx-classid !87
  %239 = getelementptr %"struct.rubinius::Float"* %result4159, i32 0, i32 1, !dbg !120
  store double %float.add4158, double* %239, !dbg !120
  %240 = bitcast %"struct.rubinius::Float"* %result4159 to %"struct.rubinius::Object"*, !dbg !120
  br label %continue4112, !dbg !120

class_fallback4110:                               ; preds = %continue4131, %check_class_id4118, %continue4051
  %stack_pos4160 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4161 = load %"struct.rubinius::Object"** %stack_pos4160, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4161, %"struct.rubinius::Object"** %out_args_recv, !dbg !120
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !120
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !120
  store i32 1, i32* %out_args_total, !dbg !120
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !120
  %stack_pos4162 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  store %"struct.rubinius::Object"** %stack_pos4162, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !120
  %cache_const4163 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550224 to %"struct.rubinius::CallSite"**), !dbg !120
  %execute_pos4164 = getelementptr %"struct.rubinius::CallSite"* %cache_const4163, i32 0, i32 2, !dbg !120
  %execute4165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4164, !dbg !120
  store i32 227, i32* %ip_pos, !dbg !120
  %call_site_execute4166 = call %"struct.rubinius::Object"* %execute4165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !120
  %null_check4168 = icmp eq %"struct.rubinius::Object"* %call_site_execute4166, null, !dbg !120
  br i1 %null_check4168, label %bail_out, label %check_active4167, !dbg !120

check_active4167:                                 ; preds = %class_fallback4110
  br label %continue4112, !dbg !120

continue4185:                                     ; preds = %done4214
  %local_pos4225 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !121
  %local4226 = load %"struct.rubinius::Object"** %local_pos4225, !dbg !121, !rbx-classid !88
  %stack_pos4227 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !121
  store %"struct.rubinius::Object"* %local4226, %"struct.rubinius::Object"** %stack_pos4227, !dbg !121
  %stack_pos4228 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !121
  %stack_load4229 = load %"struct.rubinius::Object"** %stack_pos4228, !dbg !121, !rbx-classid !88
  %stack_pos4230 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4229, %"struct.rubinius::Object"** %stack_pos4230, !dbg !121
  %stack_pos4234 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4235 = load %"struct.rubinius::Object"** %stack_pos4234, !dbg !121, !rbx-classid !88
  %stack_pos4236 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4237 = load %"struct.rubinius::Object"** %stack_pos4236, !dbg !121, !rbx-classid !88
  %obj_array4238 = bitcast %"struct.rubinius::Object"* %stack_load4237 to %"struct.rubinius::Object"**, !dbg !121
  %field_pos4239 = getelementptr %"struct.rubinius::Object"** %obj_array4238, i32 8, !dbg !121
  %field4240 = load %"struct.rubinius::Object"** %field_pos4239, !dbg !121
  %prune_undef4241 = icmp eq %"struct.rubinius::Object"* %field4240, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !121
  %"select ivar4242" = select i1 %prune_undef4241, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4240, !dbg !121
  %stack_pos4243 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  store %"struct.rubinius::Object"* %"select ivar4242", %"struct.rubinius::Object"** %stack_pos4243, !dbg !121
  br label %continue4233, !dbg !121

check_class_id4191:                               ; preds = %continue4112
  %class_pos4194 = getelementptr %"struct.rubinius::Object"* %stack_load4187, i32 0, i32 0, i32 1, !dbg !120
  %ref_class4195 = load %"struct.rubinius::Class"** %class_pos4194, !dbg !120
  %class_id_pos4196 = getelementptr %"struct.rubinius::Class"* %ref_class4195, i32 0, i32 4, !dbg !120
  %class_id4197 = load i32* %class_id_pos4196, !dbg !120
  %check_class_id4198 = icmp eq i32 %class_id4197, 1285, !dbg !120
  br i1 %check_class_id4198, label %correct_class4192, label %class_fallback4183, !dbg !120

correct_class4192:                                ; preds = %check_class_id4191
  %serial_id_pos4199 = getelementptr %"struct.rubinius::Class"* %ref_class4195, i32 0, i32 5, !dbg !120
  %serial_id4200 = load i32* %serial_id_pos4199, !dbg !120
  %check_serial_id4201 = icmp eq i32 %serial_id4200, 2, !dbg !120
  br i1 %check_serial_id4201, label %correct_serial4193, label %serial_fallback4184, !dbg !120

class_fallback4183:                               ; preds = %check_class_id4191, %continue4112
  store i32 233, i32* %ip_pos, !dbg !120
  %241 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !120
  br label %return_pad, !dbg !120

correct_serial4193:                               ; preds = %correct_class4192
  %stack_pos4202 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !120
  %stack_load4203 = load %"struct.rubinius::Object"** %stack_pos4202, !dbg !120
  %stack_pos4204 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  %stack_load4205 = load %"struct.rubinius::Object"** %stack_pos4204, !dbg !120
  %obj_array4206 = bitcast %"struct.rubinius::Object"* %stack_load4205 to %"struct.rubinius::Object"**, !dbg !120
  %field_pos4207 = getelementptr %"struct.rubinius::Object"** %obj_array4206, i32 7, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4203, %"struct.rubinius::Object"** %field_pos4207, !dbg !120
  %cast4208 = ptrtoint %"struct.rubinius::Object"* %stack_load4203 to i64, !dbg !120
  %masked4209 = and i64 %cast4208, 3, !dbg !120
  %is_reference4210 = icmp eq i64 %masked4209, 0, !dbg !120
  br i1 %is_reference4210, label %reference_obj4211, label %done4214, !dbg !120

serial_fallback4184:                              ; preds = %correct_class4192
  store i32 233, i32* %ip_pos, !dbg !120
  %242 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !120
  br label %return_pad, !dbg !120

reference_obj4211:                                ; preds = %correct_serial4193
  %object_memory_mark4215 = load i32* inttoptr (i64 22565880 to i32*), !dbg !120
  %word_pos4216 = getelementptr %"struct.rubinius::Object"* %stack_load4205, i32 0, i32 0, i32 0, i32 0, !dbg !120
  %flags4217 = load i64* %word_pos4216, !dbg !120
  %mark_mask4218 = and i64 %flags4217, 3670016, !dbg !120
  %scan_mark4219 = add i32 %object_memory_mark4215, 1, !dbg !120
  %243 = zext i32 %scan_mark4219 to i64, !dbg !120
  %lshr4220 = shl i64 %243, 19, !dbg !120
  %is_scanned4221 = icmp eq i64 %mark_mask4218, %lshr4220, !dbg !120
  br i1 %is_scanned4221, label %run_barrier4213, label %object_not_scanned4212, !dbg !120

object_not_scanned4212:                           ; preds = %reference_obj4211
  %zone_mask4222 = and i64 %flags4217, 768, !dbg !120
  %is_young4223 = icmp eq i64 %zone_mask4222, 512, !dbg !120
  br i1 %is_young4223, label %done4214, label %run_barrier4213, !dbg !120

run_barrier4213:                                  ; preds = %object_not_scanned4212, %reference_obj4211
  %244 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load4205, %"struct.rubinius::Object"* %stack_load4203), !dbg !120
  br label %done4214, !dbg !120

done4214:                                         ; preds = %run_barrier4213, %object_not_scanned4212, %correct_serial4193
  %stack_pos4224 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !120
  store %"struct.rubinius::Object"* %stack_load4203, %"struct.rubinius::Object"** %stack_pos4224, !dbg !120
  br label %continue4185, !dbg !120

class_fallback4231:                               ; No predecessors!
  store i32 241, i32* %ip_pos, !dbg !121
  %245 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 241, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !121
  br label %return_pad, !dbg !121

serial_fallback4232:                              ; No predecessors!
  store i32 241, i32* %ip_pos, !dbg !121
  %246 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 241, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !121
  br label %return_pad, !dbg !121

continue4233:                                     ; preds = %continue4185
  %local_pos4244 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 7, !dbg !121
  %local4245 = load %"struct.rubinius::Object"** %local_pos4244, !dbg !121, !rbx-classid !94
  %stack_pos4246 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  store %"struct.rubinius::Object"* %local4245, %"struct.rubinius::Object"** %stack_pos4246, !dbg !121
  %local_pos4247 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 10, !dbg !121
  %local4248 = load %"struct.rubinius::Object"** %local_pos4247, !dbg !121, !rbx-classid !119
  %stack_pos4249 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !121
  store %"struct.rubinius::Object"* %local4248, %"struct.rubinius::Object"** %stack_pos4249, !dbg !121
  %stack_pos4253 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4254 = load %"struct.rubinius::Object"** %stack_pos4253, !dbg !121, !rbx-classid !94
  %cast4255 = ptrtoint %"struct.rubinius::Object"* %stack_load4254 to i64, !dbg !121
  %masked4256 = and i64 %cast4255, 3, !dbg !121
  %is_reference4257 = icmp eq i64 %masked4256, 0, !dbg !121
  br i1 %is_reference4257, label %check_class_id4258, label %class_fallback4250, !dbg !121

continue4252:                                     ; preds = %check_active4307, %continue4285
  %send_result4309 = phi %"struct.rubinius::Object"* [ %250, %continue4285 ], [ %call_site_execute4306, %check_active4307 ], !dbg !121
  %stack_pos4310 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  store %"struct.rubinius::Object"* %send_result4309, %"struct.rubinius::Object"** %stack_pos4310, !dbg !121
  %stack_pos4314 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4315 = load %"struct.rubinius::Object"** %stack_pos4314, !dbg !121
  %cast4316 = ptrtoint %"struct.rubinius::Object"* %stack_load4315 to i64, !dbg !121
  %masked4317 = and i64 %cast4316, 3, !dbg !121
  %is_reference4318 = icmp eq i64 %masked4317, 0, !dbg !121
  br i1 %is_reference4318, label %check_class_id4319, label %class_fallback4311, !dbg !121

check_class_id4258:                               ; preds = %continue4233
  %class_pos4261 = getelementptr %"struct.rubinius::Object"* %stack_load4254, i32 0, i32 0, i32 1, !dbg !121
  %ref_class4262 = load %"struct.rubinius::Class"** %class_pos4261, !dbg !121
  %class_id_pos4263 = getelementptr %"struct.rubinius::Class"* %ref_class4262, i32 0, i32 4, !dbg !121
  %class_id4264 = load i32* %class_id_pos4263, !dbg !121
  %check_class_id4265 = icmp eq i32 %class_id4264, 77, !dbg !121
  br i1 %check_class_id4265, label %correct_class4259, label %class_fallback4250, !dbg !121

correct_class4259:                                ; preds = %check_class_id4258
  %serial_id_pos4266 = getelementptr %"struct.rubinius::Class"* %ref_class4262, i32 0, i32 5, !dbg !121
  %serial_id4267 = load i32* %serial_id_pos4266, !dbg !121
  %check_serial_id4268 = icmp eq i32 %serial_id4267, 224, !dbg !121
  br i1 %check_serial_id4268, label %correct_serial4260, label %serial_fallback4251, !dbg !121

correct_serial4260:                               ; preds = %correct_class4259
  %stack_pos4269 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !121
  %stack_load4270 = load %"struct.rubinius::Object"** %stack_pos4269, !dbg !121, !rbx-classid !119
  %cast4272 = ptrtoint %"struct.rubinius::Object"* %stack_load4270 to i64, !dbg !121
  %masked4273 = and i64 %cast4272, 3, !dbg !121
  %is_reference4274 = icmp eq i64 %masked4273, 0, !dbg !121
  br i1 %is_reference4274, label %check_class_id4275, label %continue4271, !dbg !121

serial_fallback4251:                              ; preds = %correct_class4259
  store i32 248, i32* %ip_pos, !dbg !121
  %247 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 248, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !121
  br label %return_pad, !dbg !121

check_class_id4275:                               ; preds = %correct_serial4260
  %class_pos4277 = getelementptr %"struct.rubinius::Object"* %stack_load4270, i32 0, i32 0, i32 1, !dbg !121
  %ref_class4278 = load %"struct.rubinius::Class"** %class_pos4277, !dbg !121
  %class_id_pos4279 = getelementptr %"struct.rubinius::Class"* %ref_class4278, i32 0, i32 4, !dbg !121
  %class_id4280 = load i32* %class_id_pos4279, !dbg !121
  %check_class_id4281 = icmp eq i32 %class_id4280, 77, !dbg !121
  br i1 %check_class_id4281, label %correct_class4276, label %continue4271, !dbg !121

correct_class4276:                                ; preds = %check_class_id4275
  %arg_float4282 = bitcast %"struct.rubinius::Object"* %stack_load4270 to %"struct.rubinius::Float"*, !dbg !121
  %arg.value_pos4283 = getelementptr %"struct.rubinius::Float"* %arg_float4282, i32 0, i32 1, !dbg !121
  %farg4284 = load double* %arg.value_pos4283, !dbg !121
  br label %continue4285, !dbg !121

continue4271:                                     ; preds = %check_class_id4275, %correct_serial4260
  %cast4286 = ptrtoint %"struct.rubinius::Object"* %stack_load4270 to i64, !dbg !121
  %masked4287 = and i64 %cast4286, 1, !dbg !121
  %is_fixnum4288 = icmp eq i64 %masked4287, 1, !dbg !121
  br i1 %is_fixnum4288, label %guarded_body4289, label %class_fallback4250, !dbg !121

guarded_body4289:                                 ; preds = %continue4271
  %as_int4290 = ptrtoint %"struct.rubinius::Object"* %stack_load4270 to i64, !dbg !121
  %ashr4291 = ashr i64 %as_int4290, 1, !dbg !121
  %248 = sitofp i64 %ashr4291 to double, !dbg !121
  br label %continue4285, !dbg !121

continue4285:                                     ; preds = %guarded_body4289, %correct_class4276
  %rhs4292 = phi double [ %farg4284, %correct_class4276 ], [ %248, %guarded_body4289 ], !dbg !121
  %stack_pos4293 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4294 = load %"struct.rubinius::Object"** %stack_pos4293, !dbg !121, !rbx-classid !94
  %self_float4295 = bitcast %"struct.rubinius::Object"* %stack_load4294 to %"struct.rubinius::Float"*, !dbg !121
  %self.value_pos4296 = getelementptr %"struct.rubinius::Float"* %self_float4295, i32 0, i32 1, !dbg !121
  %fself4297 = load double* %self.value_pos4296, !dbg !121
  %float.mul4298 = fmul double %fself4297, %rhs4292, !dbg !121
  %result4299 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !121, !rbx-classid !87
  %249 = getelementptr %"struct.rubinius::Float"* %result4299, i32 0, i32 1, !dbg !121
  store double %float.mul4298, double* %249, !dbg !121
  %250 = bitcast %"struct.rubinius::Float"* %result4299 to %"struct.rubinius::Object"*, !dbg !121
  br label %continue4252, !dbg !121

class_fallback4250:                               ; preds = %continue4271, %check_class_id4258, %continue4233
  %stack_pos4300 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4301 = load %"struct.rubinius::Object"** %stack_pos4300, !dbg !121, !rbx-classid !94
  store %"struct.rubinius::Object"* %stack_load4301, %"struct.rubinius::Object"** %out_args_recv, !dbg !121
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !121
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !121
  store i32 1, i32* %out_args_total, !dbg !121
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !121
  %stack_pos4302 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !121
  store %"struct.rubinius::Object"** %stack_pos4302, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !121
  %cache_const4303 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550392 to %"struct.rubinius::CallSite"**), !dbg !121
  %execute_pos4304 = getelementptr %"struct.rubinius::CallSite"* %cache_const4303, i32 0, i32 2, !dbg !121
  %execute4305 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4304, !dbg !121
  store i32 248, i32* %ip_pos, !dbg !121
  %call_site_execute4306 = call %"struct.rubinius::Object"* %execute4305(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4303, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !121
  %null_check4308 = icmp eq %"struct.rubinius::Object"* %call_site_execute4306, null, !dbg !121
  br i1 %null_check4308, label %bail_out, label %check_active4307, !dbg !121

check_active4307:                                 ; preds = %class_fallback4250
  br label %continue4252, !dbg !121

continue4313:                                     ; preds = %check_active4368, %continue4346
  %send_result4370 = phi %"struct.rubinius::Object"* [ %254, %continue4346 ], [ %call_site_execute4367, %check_active4368 ], !dbg !121
  %stack_pos4371 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  store %"struct.rubinius::Object"* %send_result4370, %"struct.rubinius::Object"** %stack_pos4371, !dbg !121
  %stack_pos4372 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4373 = load %"struct.rubinius::Object"** %stack_pos4372, !dbg !121
  %stack_pos4374 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4373, %"struct.rubinius::Object"** %stack_pos4374, !dbg !121
  %stack_pos4375 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4376 = load %"struct.rubinius::Object"** %stack_pos4375, !dbg !121
  %stack_pos4377 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4378 = load %"struct.rubinius::Object"** %stack_pos4377, !dbg !121
  %stack_pos4379 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4378, %"struct.rubinius::Object"** %stack_pos4379, !dbg !121
  %stack_pos4380 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !121
  %stack_load4381 = load %"struct.rubinius::Object"** %stack_pos4380, !dbg !121, !rbx-classid !88
  %stack_pos4382 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4381, %"struct.rubinius::Object"** %stack_pos4382, !dbg !121
  %stack_pos4383 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4376, %"struct.rubinius::Object"** %stack_pos4383, !dbg !121
  %stack_pos4387 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4388 = load %"struct.rubinius::Object"** %stack_pos4387, !dbg !121
  %cast4389 = ptrtoint %"struct.rubinius::Object"* %stack_load4388 to i64, !dbg !121
  %masked4390 = and i64 %cast4389, 3, !dbg !121
  %is_reference4391 = icmp eq i64 %masked4390, 0, !dbg !121
  br i1 %is_reference4391, label %check_class_id4392, label %class_fallback4384, !dbg !121

check_class_id4319:                               ; preds = %continue4252
  %class_pos4322 = getelementptr %"struct.rubinius::Object"* %stack_load4315, i32 0, i32 0, i32 1, !dbg !121
  %ref_class4323 = load %"struct.rubinius::Class"** %class_pos4322, !dbg !121
  %class_id_pos4324 = getelementptr %"struct.rubinius::Class"* %ref_class4323, i32 0, i32 4, !dbg !121
  %class_id4325 = load i32* %class_id_pos4324, !dbg !121
  %check_class_id4326 = icmp eq i32 %class_id4325, 77, !dbg !121
  br i1 %check_class_id4326, label %correct_class4320, label %class_fallback4311, !dbg !121

correct_class4320:                                ; preds = %check_class_id4319
  %serial_id_pos4327 = getelementptr %"struct.rubinius::Class"* %ref_class4323, i32 0, i32 5, !dbg !121
  %serial_id4328 = load i32* %serial_id_pos4327, !dbg !121
  %check_serial_id4329 = icmp eq i32 %serial_id4328, 224, !dbg !121
  br i1 %check_serial_id4329, label %correct_serial4321, label %serial_fallback4312, !dbg !121

correct_serial4321:                               ; preds = %correct_class4320
  %stack_pos4330 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4331 = load %"struct.rubinius::Object"** %stack_pos4330, !dbg !121
  %cast4333 = ptrtoint %"struct.rubinius::Object"* %stack_load4331 to i64, !dbg !121
  %masked4334 = and i64 %cast4333, 3, !dbg !121
  %is_reference4335 = icmp eq i64 %masked4334, 0, !dbg !121
  br i1 %is_reference4335, label %check_class_id4336, label %continue4332, !dbg !121

serial_fallback4312:                              ; preds = %correct_class4320
  store i32 251, i32* %ip_pos, !dbg !121
  %251 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 251, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !121
  br label %return_pad, !dbg !121

check_class_id4336:                               ; preds = %correct_serial4321
  %class_pos4338 = getelementptr %"struct.rubinius::Object"* %stack_load4331, i32 0, i32 0, i32 1, !dbg !121
  %ref_class4339 = load %"struct.rubinius::Class"** %class_pos4338, !dbg !121
  %class_id_pos4340 = getelementptr %"struct.rubinius::Class"* %ref_class4339, i32 0, i32 4, !dbg !121
  %class_id4341 = load i32* %class_id_pos4340, !dbg !121
  %check_class_id4342 = icmp eq i32 %class_id4341, 77, !dbg !121
  br i1 %check_class_id4342, label %correct_class4337, label %continue4332, !dbg !121

correct_class4337:                                ; preds = %check_class_id4336
  %arg_float4343 = bitcast %"struct.rubinius::Object"* %stack_load4331 to %"struct.rubinius::Float"*, !dbg !121
  %arg.value_pos4344 = getelementptr %"struct.rubinius::Float"* %arg_float4343, i32 0, i32 1, !dbg !121
  %farg4345 = load double* %arg.value_pos4344, !dbg !121
  br label %continue4346, !dbg !121

continue4332:                                     ; preds = %check_class_id4336, %correct_serial4321
  %cast4347 = ptrtoint %"struct.rubinius::Object"* %stack_load4331 to i64, !dbg !121
  %masked4348 = and i64 %cast4347, 1, !dbg !121
  %is_fixnum4349 = icmp eq i64 %masked4348, 1, !dbg !121
  br i1 %is_fixnum4349, label %guarded_body4350, label %class_fallback4311, !dbg !121

guarded_body4350:                                 ; preds = %continue4332
  %as_int4351 = ptrtoint %"struct.rubinius::Object"* %stack_load4331 to i64, !dbg !121
  %ashr4352 = ashr i64 %as_int4351, 1, !dbg !121
  %252 = sitofp i64 %ashr4352 to double, !dbg !121
  br label %continue4346, !dbg !121

continue4346:                                     ; preds = %guarded_body4350, %correct_class4337
  %rhs4353 = phi double [ %farg4345, %correct_class4337 ], [ %252, %guarded_body4350 ], !dbg !121
  %stack_pos4354 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4355 = load %"struct.rubinius::Object"** %stack_pos4354, !dbg !121
  %self_float4356 = bitcast %"struct.rubinius::Object"* %stack_load4355 to %"struct.rubinius::Float"*, !dbg !121
  %self.value_pos4357 = getelementptr %"struct.rubinius::Float"* %self_float4356, i32 0, i32 1, !dbg !121
  %fself4358 = load double* %self.value_pos4357, !dbg !121
  %float.add4359 = fadd double %fself4358, %rhs4353, !dbg !121
  %result4360 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !121, !rbx-classid !87
  %253 = getelementptr %"struct.rubinius::Float"* %result4360, i32 0, i32 1, !dbg !121
  store double %float.add4359, double* %253, !dbg !121
  %254 = bitcast %"struct.rubinius::Float"* %result4360 to %"struct.rubinius::Object"*, !dbg !121
  br label %continue4313, !dbg !121

class_fallback4311:                               ; preds = %continue4332, %check_class_id4319, %continue4252
  %stack_pos4361 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4362 = load %"struct.rubinius::Object"** %stack_pos4361, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4362, %"struct.rubinius::Object"** %out_args_recv, !dbg !121
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !121
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !121
  store i32 1, i32* %out_args_total, !dbg !121
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !121
  %stack_pos4363 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  store %"struct.rubinius::Object"** %stack_pos4363, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !121
  %cache_const4364 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550416 to %"struct.rubinius::CallSite"**), !dbg !121
  %execute_pos4365 = getelementptr %"struct.rubinius::CallSite"* %cache_const4364, i32 0, i32 2, !dbg !121
  %execute4366 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4365, !dbg !121
  store i32 251, i32* %ip_pos, !dbg !121
  %call_site_execute4367 = call %"struct.rubinius::Object"* %execute4366(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4364, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !121
  %null_check4369 = icmp eq %"struct.rubinius::Object"* %call_site_execute4367, null, !dbg !121
  br i1 %null_check4369, label %bail_out, label %check_active4368, !dbg !121

check_active4368:                                 ; preds = %class_fallback4311
  br label %continue4313, !dbg !121

continue4386:                                     ; preds = %done4415
  %local_pos4426 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !122
  %local4427 = load %"struct.rubinius::Object"** %local_pos4426, !dbg !122, !rbx-classid !23
  %stack_pos4428 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !122
  store %"struct.rubinius::Object"* %local4427, %"struct.rubinius::Object"** %stack_pos4428, !dbg !122
  %stack_pos4429 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !122
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4429, !dbg !122
  %stack_pos4433 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !122
  %stack_load4434 = load %"struct.rubinius::Object"** %stack_pos4433, !dbg !122, !rbx-classid !23
  %stack_pos4435 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !122
  %stack_load4436 = load %"struct.rubinius::Object"** %stack_pos4435, !dbg !122, !rbx-classid !123
  %cast4441 = ptrtoint %"struct.rubinius::Object"* %stack_load4434 to i64, !dbg !122
  %cast4442 = ptrtoint %"struct.rubinius::Object"* %stack_load4436 to i64, !dbg !122
  %fixnums_anded4443 = and i64 %cast4441, %cast4442, !dbg !122
  %masked4444 = and i64 %fixnums_anded4443, 1, !dbg !122
  %is_fixnum4445 = icmp eq i64 %masked4444, 1, !dbg !122
  br i1 %is_fixnum4445, label %push_add4437, label %class_fallback4430, !dbg !122

check_class_id4392:                               ; preds = %continue4313
  %class_pos4395 = getelementptr %"struct.rubinius::Object"* %stack_load4388, i32 0, i32 0, i32 1, !dbg !121
  %ref_class4396 = load %"struct.rubinius::Class"** %class_pos4395, !dbg !121
  %class_id_pos4397 = getelementptr %"struct.rubinius::Class"* %ref_class4396, i32 0, i32 4, !dbg !121
  %class_id4398 = load i32* %class_id_pos4397, !dbg !121
  %check_class_id4399 = icmp eq i32 %class_id4398, 1285, !dbg !121
  br i1 %check_class_id4399, label %correct_class4393, label %class_fallback4384, !dbg !121

correct_class4393:                                ; preds = %check_class_id4392
  %serial_id_pos4400 = getelementptr %"struct.rubinius::Class"* %ref_class4396, i32 0, i32 5, !dbg !121
  %serial_id4401 = load i32* %serial_id_pos4400, !dbg !121
  %check_serial_id4402 = icmp eq i32 %serial_id4401, 2, !dbg !121
  br i1 %check_serial_id4402, label %correct_serial4394, label %serial_fallback4385, !dbg !121

class_fallback4384:                               ; preds = %check_class_id4392, %continue4313
  store i32 257, i32* %ip_pos, !dbg !121
  %255 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !121
  br label %return_pad, !dbg !121

correct_serial4394:                               ; preds = %correct_class4393
  %stack_pos4403 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !121
  %stack_load4404 = load %"struct.rubinius::Object"** %stack_pos4403, !dbg !121
  %stack_pos4405 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  %stack_load4406 = load %"struct.rubinius::Object"** %stack_pos4405, !dbg !121
  %obj_array4407 = bitcast %"struct.rubinius::Object"* %stack_load4406 to %"struct.rubinius::Object"**, !dbg !121
  %field_pos4408 = getelementptr %"struct.rubinius::Object"** %obj_array4407, i32 8, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4404, %"struct.rubinius::Object"** %field_pos4408, !dbg !121
  %cast4409 = ptrtoint %"struct.rubinius::Object"* %stack_load4404 to i64, !dbg !121
  %masked4410 = and i64 %cast4409, 3, !dbg !121
  %is_reference4411 = icmp eq i64 %masked4410, 0, !dbg !121
  br i1 %is_reference4411, label %reference_obj4412, label %done4415, !dbg !121

serial_fallback4385:                              ; preds = %correct_class4393
  store i32 257, i32* %ip_pos, !dbg !121
  %256 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !121
  br label %return_pad, !dbg !121

reference_obj4412:                                ; preds = %correct_serial4394
  %object_memory_mark4416 = load i32* inttoptr (i64 22565880 to i32*), !dbg !121
  %word_pos4417 = getelementptr %"struct.rubinius::Object"* %stack_load4406, i32 0, i32 0, i32 0, i32 0, !dbg !121
  %flags4418 = load i64* %word_pos4417, !dbg !121
  %mark_mask4419 = and i64 %flags4418, 3670016, !dbg !121
  %scan_mark4420 = add i32 %object_memory_mark4416, 1, !dbg !121
  %257 = zext i32 %scan_mark4420 to i64, !dbg !121
  %lshr4421 = shl i64 %257, 19, !dbg !121
  %is_scanned4422 = icmp eq i64 %mark_mask4419, %lshr4421, !dbg !121
  br i1 %is_scanned4422, label %run_barrier4414, label %object_not_scanned4413, !dbg !121

object_not_scanned4413:                           ; preds = %reference_obj4412
  %zone_mask4423 = and i64 %flags4418, 768, !dbg !121
  %is_young4424 = icmp eq i64 %zone_mask4423, 512, !dbg !121
  br i1 %is_young4424, label %done4415, label %run_barrier4414, !dbg !121

run_barrier4414:                                  ; preds = %object_not_scanned4413, %reference_obj4412
  %258 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load4406, %"struct.rubinius::Object"* %stack_load4404), !dbg !121
  br label %done4415, !dbg !121

done4415:                                         ; preds = %run_barrier4414, %object_not_scanned4413, %correct_serial4394
  %stack_pos4425 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !121
  store %"struct.rubinius::Object"* %stack_load4404, %"struct.rubinius::Object"** %stack_pos4425, !dbg !121
  br label %continue4386, !dbg !121

class_fallback4430:                               ; preds = %continue4386
  %stack_pos4457 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !122
  %stack_load4458 = load %"struct.rubinius::Object"** %stack_pos4457, !dbg !122, !rbx-classid !23
  store %"struct.rubinius::Object"* %stack_load4458, %"struct.rubinius::Object"** %out_args_recv, !dbg !122
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !122
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !122
  store i32 1, i32* %out_args_total, !dbg !122
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !122
  %stack_pos4459 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !122
  store %"struct.rubinius::Object"** %stack_pos4459, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !122
  %cache_const4460 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550528 to %"struct.rubinius::CallSite"**), !dbg !122
  %execute_pos4461 = getelementptr %"struct.rubinius::CallSite"* %cache_const4460, i32 0, i32 2, !dbg !122
  %execute4462 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4461, !dbg !122
  store i32 265, i32* %ip_pos, !dbg !122
  %call_site_execute4463 = call %"struct.rubinius::Object"* %execute4462(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4460, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !122
  %null_check4465 = icmp eq %"struct.rubinius::Object"* %call_site_execute4463, null, !dbg !122
  br i1 %null_check4465, label %bail_out, label %check_active4464, !dbg !122

serial_fallback4431:                              ; No predecessors!
  store i32 265, i32* %ip_pos, !dbg !122
  %259 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 265, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !122
  br label %return_pad, !dbg !122

continue4432:                                     ; preds = %check_active4464, %cont4440
  %send_result4466 = phi %"struct.rubinius::Object"* [ %result4456, %cont4440 ], [ %call_site_execute4463, %check_active4464 ], !dbg !122
  %stack_pos4467 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !122
  store %"struct.rubinius::Object"* %send_result4466, %"struct.rubinius::Object"** %stack_pos4467, !dbg !122
  %local_pos4468 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !122
  %stack_pos4469 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !122
  %stack_load4470 = load %"struct.rubinius::Object"** %stack_pos4469, !dbg !122
  store %"struct.rubinius::Object"* %stack_load4470, %"struct.rubinius::Object"** %local_pos4468, !dbg !122
  %260 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !122
  %vm_jit = load %"struct.rubinius::VMJIT"** %260, !dbg !122
  %261 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !122
  %check_interrupts = load i8* %261, !dbg !122
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !122
  %or4473 = or i8 %check_interrupts, %check_global_interrupts, !dbg !122
  %needs_interrupts = icmp eq i8 %or4473, 0, !dbg !122
  br i1 %needs_interrupts, label %continue4471, label %interrupts, !dbg !122

push_add4437:                                     ; preds = %continue4386
  %as_int4446 = ptrtoint %"struct.rubinius::Object"* %stack_load4434 to i64, !dbg !122
  %ashr4447 = ashr i64 %as_int4446, 1, !dbg !122
  %as_int4448 = ptrtoint %"struct.rubinius::Object"* %stack_load4436 to i64, !dbg !122
  %ashr4449 = ashr i64 %as_int4448, 1, !dbg !122
  %fixnum.add4450 = add i64 %ashr4447, %ashr4449, !dbg !122
  %262 = icmp sle i64 %fixnum.add4450, 4611686018427387903, !dbg !122
  %263 = icmp sge i64 %fixnum.add4450, -4611686018427387903, !dbg !122
  %fits_fixnum4451 = and i1 %262, %263, !dbg !122
  br i1 %fits_fixnum4451, label %tagnow4438, label %bignum4439, !dbg !122

tagnow4438:                                       ; preds = %push_add4437
  %shl4453 = shl i64 %fixnum.add4450, 1, !dbg !122
  %or4454 = or i64 %shl4453, 1, !dbg !122
  %as_obj4455 = inttoptr i64 %or4454 to %"struct.rubinius::Object"*, !dbg !122
  br label %cont4440, !dbg !122

bignum4439:                                       ; preds = %push_add4437
  %big_value4452 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add4450) #1, !dbg !122
  br label %cont4440, !dbg !122

cont4440:                                         ; preds = %tagnow4438, %bignum4439
  %result4456 = phi %"struct.rubinius::Object"* [ %big_value4452, %bignum4439 ], [ %as_obj4455, %tagnow4438 ], !dbg !122
  br label %continue4432, !dbg !122

check_active4464:                                 ; preds = %class_fallback4430
  br label %continue4432, !dbg !122

continue4471:                                     ; preds = %continue4432
  br label %done4472, !dbg !122

interrupts:                                       ; preds = %continue4432
  store i32 271, i32* %ip_pos, !dbg !122
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !122
  %null_check4476 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !122
  br i1 %null_check4476, label %bail_out, label %check_active4475, !dbg !122

done4472:                                         ; preds = %continue4474, %continue4471
  br label %method_body, !dbg !122

continue4474:                                     ; preds = %check_active4475
  br label %done4472, !dbg !122

check_active4475:                                 ; preds = %interrupts
  br label %continue4474, !dbg !122

continue4477:                                     ; No predecessors!
  br label %ip274, !dbg !122

ip274:                                            ; preds = %continue4477, %continue
  %stack_pos4478 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !124
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4478, !dbg !124
  %stack_pos4481 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4481, !dbg !125
  %264 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !125
  %self4482 = load %"struct.rubinius::Object"** %264, !dbg !125
  %cast4483 = ptrtoint %"struct.rubinius::Object"* %self4482 to i64, !dbg !125
  %masked4484 = and i64 %cast4483, 3, !dbg !125
  %is_reference4485 = icmp eq i64 %masked4484, 0, !dbg !125
  br i1 %is_reference4485, label %check_class_id4486, label %visit_push_ivar_fallback4479, !dbg !125

continue4480:                                     ; preds = %visit_push_ivar_fallback4479, %correct_class4487
  %local_pos4502 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !125
  %local4503 = load %"struct.rubinius::Object"** %local_pos4502, !dbg !125, !rbx-classid !35
  %stack_pos4504 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  store %"struct.rubinius::Object"* %local4503, %"struct.rubinius::Object"** %stack_pos4504, !dbg !125
  %stack_pos4507 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !125
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4507, !dbg !125
  %265 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !125
  %self4508 = load %"struct.rubinius::Object"** %265, !dbg !125
  %cast4509 = ptrtoint %"struct.rubinius::Object"* %self4508 to i64, !dbg !125
  %masked4510 = and i64 %cast4509, 3, !dbg !125
  %is_reference4511 = icmp eq i64 %masked4510, 0, !dbg !125
  br i1 %is_reference4511, label %check_class_id4512, label %visit_push_ivar_fallback4505, !dbg !125

check_class_id4486:                               ; preds = %ip274
  %class_pos4488 = getelementptr %"struct.rubinius::Object"* %self4482, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4489 = load %"struct.rubinius::Class"** %class_pos4488, !dbg !125
  %class_id_pos4490 = getelementptr %"struct.rubinius::Class"* %ref_class4489, i32 0, i32 4, !dbg !125
  %class_id4491 = load i32* %class_id_pos4490, !dbg !125
  %check_class_id4492 = icmp eq i32 %class_id4491, 1285, !dbg !125
  br i1 %check_class_id4492, label %correct_class4487, label %visit_push_ivar_fallback4479, !dbg !125

correct_class4487:                                ; preds = %check_class_id4486
  %obj_array4493 = bitcast %"struct.rubinius::Object"* %self4482 to %"struct.rubinius::Object"**, !dbg !125
  %field_pos4494 = getelementptr %"struct.rubinius::Object"** %obj_array4493, i32 3, !dbg !125
  %field4495 = load %"struct.rubinius::Object"** %field_pos4494, !dbg !125
  %prune_undef4496 = icmp eq %"struct.rubinius::Object"* %field4495, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !125
  %"select ivar4497" = select i1 %prune_undef4496, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4495, !dbg !125
  %stack_pos4498 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  store %"struct.rubinius::Object"* %"select ivar4497", %"struct.rubinius::Object"** %stack_pos4498, !dbg !125
  br label %continue4480, !dbg !125

visit_push_ivar_fallback4479:                     ; preds = %check_class_id4486, %ip274
  %266 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !125
  %self4499 = load %"struct.rubinius::Object"** %266, !dbg !125
  %ivar4500 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4499, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !125
  %stack_pos4501 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  store %"struct.rubinius::Object"* %ivar4500, %"struct.rubinius::Object"** %stack_pos4501, !dbg !125
  br label %continue4480, !dbg !125

continue4506:                                     ; preds = %visit_push_ivar_fallback4505, %correct_class4513
  %stack_pos4531 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  %stack_load4532 = load %"struct.rubinius::Object"** %stack_pos4531, !dbg !125, !rbx-classid !35
  %cast4533 = ptrtoint %"struct.rubinius::Object"* %stack_load4532 to i64, !dbg !125
  %masked4534 = and i64 %cast4533, 3, !dbg !125
  %is_reference4535 = icmp eq i64 %masked4534, 0, !dbg !125
  br i1 %is_reference4535, label %check_class_id4536, label %class_fallback4528, !dbg !125

check_class_id4512:                               ; preds = %continue4480
  %class_pos4514 = getelementptr %"struct.rubinius::Object"* %self4508, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4515 = load %"struct.rubinius::Class"** %class_pos4514, !dbg !125
  %class_id_pos4516 = getelementptr %"struct.rubinius::Class"* %ref_class4515, i32 0, i32 4, !dbg !125
  %class_id4517 = load i32* %class_id_pos4516, !dbg !125
  %check_class_id4518 = icmp eq i32 %class_id4517, 1285, !dbg !125
  br i1 %check_class_id4518, label %correct_class4513, label %visit_push_ivar_fallback4505, !dbg !125

correct_class4513:                                ; preds = %check_class_id4512
  %obj_array4519 = bitcast %"struct.rubinius::Object"* %self4508 to %"struct.rubinius::Object"**, !dbg !125
  %field_pos4520 = getelementptr %"struct.rubinius::Object"** %obj_array4519, i32 6, !dbg !125
  %field4521 = load %"struct.rubinius::Object"** %field_pos4520, !dbg !125
  %prune_undef4522 = icmp eq %"struct.rubinius::Object"* %field4521, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !125
  %"select ivar4523" = select i1 %prune_undef4522, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4521, !dbg !125
  %stack_pos4524 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !125
  store %"struct.rubinius::Object"* %"select ivar4523", %"struct.rubinius::Object"** %stack_pos4524, !dbg !125
  br label %continue4506, !dbg !125

visit_push_ivar_fallback4505:                     ; preds = %check_class_id4512, %continue4480
  %267 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !125
  %self4525 = load %"struct.rubinius::Object"** %267, !dbg !125
  %ivar4526 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4525, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !125
  %stack_pos4527 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !125
  store %"struct.rubinius::Object"* %ivar4526, %"struct.rubinius::Object"** %stack_pos4527, !dbg !125
  br label %continue4506, !dbg !125

continue4530:                                     ; preds = %check_active4585, %continue4563
  %send_result4587 = phi %"struct.rubinius::Object"* [ %271, %continue4563 ], [ %call_site_execute4584, %check_active4585 ], !dbg !125
  %stack_pos4588 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  store %"struct.rubinius::Object"* %send_result4587, %"struct.rubinius::Object"** %stack_pos4588, !dbg !125
  %stack_pos4592 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  %stack_load4593 = load %"struct.rubinius::Object"** %stack_pos4592, !dbg !125
  %cast4594 = ptrtoint %"struct.rubinius::Object"* %stack_load4593 to i64, !dbg !125
  %masked4595 = and i64 %cast4594, 3, !dbg !125
  %is_reference4596 = icmp eq i64 %masked4595, 0, !dbg !125
  br i1 %is_reference4596, label %check_class_id4597, label %class_fallback4589, !dbg !125

check_class_id4536:                               ; preds = %continue4506
  %class_pos4539 = getelementptr %"struct.rubinius::Object"* %stack_load4532, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4540 = load %"struct.rubinius::Class"** %class_pos4539, !dbg !125
  %class_id_pos4541 = getelementptr %"struct.rubinius::Class"* %ref_class4540, i32 0, i32 4, !dbg !125
  %class_id4542 = load i32* %class_id_pos4541, !dbg !125
  %check_class_id4543 = icmp eq i32 %class_id4542, 77, !dbg !125
  br i1 %check_class_id4543, label %correct_class4537, label %class_fallback4528, !dbg !125

correct_class4537:                                ; preds = %check_class_id4536
  %serial_id_pos4544 = getelementptr %"struct.rubinius::Class"* %ref_class4540, i32 0, i32 5, !dbg !125
  %serial_id4545 = load i32* %serial_id_pos4544, !dbg !125
  %check_serial_id4546 = icmp eq i32 %serial_id4545, 224, !dbg !125
  br i1 %check_serial_id4546, label %correct_serial4538, label %serial_fallback4529, !dbg !125

correct_serial4538:                               ; preds = %correct_class4537
  %stack_pos4547 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !125
  %stack_load4548 = load %"struct.rubinius::Object"** %stack_pos4547, !dbg !125
  %cast4550 = ptrtoint %"struct.rubinius::Object"* %stack_load4548 to i64, !dbg !125
  %masked4551 = and i64 %cast4550, 3, !dbg !125
  %is_reference4552 = icmp eq i64 %masked4551, 0, !dbg !125
  br i1 %is_reference4552, label %check_class_id4553, label %continue4549, !dbg !125

serial_fallback4529:                              ; preds = %correct_class4537
  store i32 282, i32* %ip_pos, !dbg !125
  %268 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 282, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !125
  br label %return_pad, !dbg !125

check_class_id4553:                               ; preds = %correct_serial4538
  %class_pos4555 = getelementptr %"struct.rubinius::Object"* %stack_load4548, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4556 = load %"struct.rubinius::Class"** %class_pos4555, !dbg !125
  %class_id_pos4557 = getelementptr %"struct.rubinius::Class"* %ref_class4556, i32 0, i32 4, !dbg !125
  %class_id4558 = load i32* %class_id_pos4557, !dbg !125
  %check_class_id4559 = icmp eq i32 %class_id4558, 77, !dbg !125
  br i1 %check_class_id4559, label %correct_class4554, label %continue4549, !dbg !125

correct_class4554:                                ; preds = %check_class_id4553
  %arg_float4560 = bitcast %"struct.rubinius::Object"* %stack_load4548 to %"struct.rubinius::Float"*, !dbg !125
  %arg.value_pos4561 = getelementptr %"struct.rubinius::Float"* %arg_float4560, i32 0, i32 1, !dbg !125
  %farg4562 = load double* %arg.value_pos4561, !dbg !125
  br label %continue4563, !dbg !125

continue4549:                                     ; preds = %check_class_id4553, %correct_serial4538
  %cast4564 = ptrtoint %"struct.rubinius::Object"* %stack_load4548 to i64, !dbg !125
  %masked4565 = and i64 %cast4564, 1, !dbg !125
  %is_fixnum4566 = icmp eq i64 %masked4565, 1, !dbg !125
  br i1 %is_fixnum4566, label %guarded_body4567, label %class_fallback4528, !dbg !125

guarded_body4567:                                 ; preds = %continue4549
  %as_int4568 = ptrtoint %"struct.rubinius::Object"* %stack_load4548 to i64, !dbg !125
  %ashr4569 = ashr i64 %as_int4568, 1, !dbg !125
  %269 = sitofp i64 %ashr4569 to double, !dbg !125
  br label %continue4563, !dbg !125

continue4563:                                     ; preds = %guarded_body4567, %correct_class4554
  %rhs4570 = phi double [ %farg4562, %correct_class4554 ], [ %269, %guarded_body4567 ], !dbg !125
  %stack_pos4571 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  %stack_load4572 = load %"struct.rubinius::Object"** %stack_pos4571, !dbg !125, !rbx-classid !35
  %self_float4573 = bitcast %"struct.rubinius::Object"* %stack_load4572 to %"struct.rubinius::Float"*, !dbg !125
  %self.value_pos4574 = getelementptr %"struct.rubinius::Float"* %self_float4573, i32 0, i32 1, !dbg !125
  %fself4575 = load double* %self.value_pos4574, !dbg !125
  %float.mul4576 = fmul double %fself4575, %rhs4570, !dbg !125
  %result4577 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !125, !rbx-classid !87
  %270 = getelementptr %"struct.rubinius::Float"* %result4577, i32 0, i32 1, !dbg !125
  store double %float.mul4576, double* %270, !dbg !125
  %271 = bitcast %"struct.rubinius::Float"* %result4577 to %"struct.rubinius::Object"*, !dbg !125
  br label %continue4530, !dbg !125

class_fallback4528:                               ; preds = %continue4549, %check_class_id4536, %continue4506
  %stack_pos4578 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  %stack_load4579 = load %"struct.rubinius::Object"** %stack_pos4578, !dbg !125, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load4579, %"struct.rubinius::Object"** %out_args_recv, !dbg !125
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !125
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !125
  store i32 1, i32* %out_args_total, !dbg !125
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !125
  %stack_pos4580 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !125
  store %"struct.rubinius::Object"** %stack_pos4580, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !125
  %cache_const4581 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550664 to %"struct.rubinius::CallSite"**), !dbg !125
  %execute_pos4582 = getelementptr %"struct.rubinius::CallSite"* %cache_const4581, i32 0, i32 2, !dbg !125
  %execute4583 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4582, !dbg !125
  store i32 282, i32* %ip_pos, !dbg !125
  %call_site_execute4584 = call %"struct.rubinius::Object"* %execute4583(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4581, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !125
  %null_check4586 = icmp eq %"struct.rubinius::Object"* %call_site_execute4584, null, !dbg !125
  br i1 %null_check4586, label %bail_out, label %check_active4585, !dbg !125

check_active4585:                                 ; preds = %class_fallback4528
  br label %continue4530, !dbg !125

continue4591:                                     ; preds = %check_active4646, %continue4624
  %send_result4648 = phi %"struct.rubinius::Object"* [ %276, %continue4624 ], [ %call_site_execute4645, %check_active4646 ], !dbg !125
  %stack_pos4649 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  store %"struct.rubinius::Object"* %send_result4648, %"struct.rubinius::Object"** %stack_pos4649, !dbg !125
  %272 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !125
  %self4650 = load %"struct.rubinius::Object"** %272, !dbg !125
  %stack_pos4651 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  %stack_load4652 = load %"struct.rubinius::Object"** %stack_pos4651, !dbg !125
  %cast4655 = ptrtoint %"struct.rubinius::Object"* %self4650 to i64, !dbg !125
  %masked4656 = and i64 %cast4655, 3, !dbg !125
  %is_reference4657 = icmp eq i64 %masked4656, 0, !dbg !125
  br i1 %is_reference4657, label %check_class_id4658, label %visit_push_ivar_fallback4653, !dbg !125

check_class_id4597:                               ; preds = %continue4530
  %class_pos4600 = getelementptr %"struct.rubinius::Object"* %stack_load4593, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4601 = load %"struct.rubinius::Class"** %class_pos4600, !dbg !125
  %class_id_pos4602 = getelementptr %"struct.rubinius::Class"* %ref_class4601, i32 0, i32 4, !dbg !125
  %class_id4603 = load i32* %class_id_pos4602, !dbg !125
  %check_class_id4604 = icmp eq i32 %class_id4603, 77, !dbg !125
  br i1 %check_class_id4604, label %correct_class4598, label %class_fallback4589, !dbg !125

correct_class4598:                                ; preds = %check_class_id4597
  %serial_id_pos4605 = getelementptr %"struct.rubinius::Class"* %ref_class4601, i32 0, i32 5, !dbg !125
  %serial_id4606 = load i32* %serial_id_pos4605, !dbg !125
  %check_serial_id4607 = icmp eq i32 %serial_id4606, 224, !dbg !125
  br i1 %check_serial_id4607, label %correct_serial4599, label %serial_fallback4590, !dbg !125

correct_serial4599:                               ; preds = %correct_class4598
  %stack_pos4608 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  %stack_load4609 = load %"struct.rubinius::Object"** %stack_pos4608, !dbg !125
  %cast4611 = ptrtoint %"struct.rubinius::Object"* %stack_load4609 to i64, !dbg !125
  %masked4612 = and i64 %cast4611, 3, !dbg !125
  %is_reference4613 = icmp eq i64 %masked4612, 0, !dbg !125
  br i1 %is_reference4613, label %check_class_id4614, label %continue4610, !dbg !125

serial_fallback4590:                              ; preds = %correct_class4598
  store i32 285, i32* %ip_pos, !dbg !125
  %273 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 285, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !125
  br label %return_pad, !dbg !125

check_class_id4614:                               ; preds = %correct_serial4599
  %class_pos4616 = getelementptr %"struct.rubinius::Object"* %stack_load4609, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4617 = load %"struct.rubinius::Class"** %class_pos4616, !dbg !125
  %class_id_pos4618 = getelementptr %"struct.rubinius::Class"* %ref_class4617, i32 0, i32 4, !dbg !125
  %class_id4619 = load i32* %class_id_pos4618, !dbg !125
  %check_class_id4620 = icmp eq i32 %class_id4619, 77, !dbg !125
  br i1 %check_class_id4620, label %correct_class4615, label %continue4610, !dbg !125

correct_class4615:                                ; preds = %check_class_id4614
  %arg_float4621 = bitcast %"struct.rubinius::Object"* %stack_load4609 to %"struct.rubinius::Float"*, !dbg !125
  %arg.value_pos4622 = getelementptr %"struct.rubinius::Float"* %arg_float4621, i32 0, i32 1, !dbg !125
  %farg4623 = load double* %arg.value_pos4622, !dbg !125
  br label %continue4624, !dbg !125

continue4610:                                     ; preds = %check_class_id4614, %correct_serial4599
  %cast4625 = ptrtoint %"struct.rubinius::Object"* %stack_load4609 to i64, !dbg !125
  %masked4626 = and i64 %cast4625, 1, !dbg !125
  %is_fixnum4627 = icmp eq i64 %masked4626, 1, !dbg !125
  br i1 %is_fixnum4627, label %guarded_body4628, label %class_fallback4589, !dbg !125

guarded_body4628:                                 ; preds = %continue4610
  %as_int4629 = ptrtoint %"struct.rubinius::Object"* %stack_load4609 to i64, !dbg !125
  %ashr4630 = ashr i64 %as_int4629, 1, !dbg !125
  %274 = sitofp i64 %ashr4630 to double, !dbg !125
  br label %continue4624, !dbg !125

continue4624:                                     ; preds = %guarded_body4628, %correct_class4615
  %rhs4631 = phi double [ %farg4623, %correct_class4615 ], [ %274, %guarded_body4628 ], !dbg !125
  %stack_pos4632 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  %stack_load4633 = load %"struct.rubinius::Object"** %stack_pos4632, !dbg !125
  %self_float4634 = bitcast %"struct.rubinius::Object"* %stack_load4633 to %"struct.rubinius::Float"*, !dbg !125
  %self.value_pos4635 = getelementptr %"struct.rubinius::Float"* %self_float4634, i32 0, i32 1, !dbg !125
  %fself4636 = load double* %self.value_pos4635, !dbg !125
  %float.add4637 = fadd double %fself4636, %rhs4631, !dbg !125
  %result4638 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !125, !rbx-classid !87
  %275 = getelementptr %"struct.rubinius::Float"* %result4638, i32 0, i32 1, !dbg !125
  store double %float.add4637, double* %275, !dbg !125
  %276 = bitcast %"struct.rubinius::Float"* %result4638 to %"struct.rubinius::Object"*, !dbg !125
  br label %continue4591, !dbg !125

class_fallback4589:                               ; preds = %continue4610, %check_class_id4597, %continue4530
  %stack_pos4639 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !125
  %stack_load4640 = load %"struct.rubinius::Object"** %stack_pos4639, !dbg !125
  store %"struct.rubinius::Object"* %stack_load4640, %"struct.rubinius::Object"** %out_args_recv, !dbg !125
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !125
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !125
  store i32 1, i32* %out_args_total, !dbg !125
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !125
  %stack_pos4641 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !125
  store %"struct.rubinius::Object"** %stack_pos4641, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !125
  %cache_const4642 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550688 to %"struct.rubinius::CallSite"**), !dbg !125
  %execute_pos4643 = getelementptr %"struct.rubinius::CallSite"* %cache_const4642, i32 0, i32 2, !dbg !125
  %execute4644 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4643, !dbg !125
  store i32 285, i32* %ip_pos, !dbg !125
  %call_site_execute4645 = call %"struct.rubinius::Object"* %execute4644(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4642, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !125
  %null_check4647 = icmp eq %"struct.rubinius::Object"* %call_site_execute4645, null, !dbg !125
  br i1 %null_check4647, label %bail_out, label %check_active4646, !dbg !125

check_active4646:                                 ; preds = %class_fallback4589
  br label %continue4591, !dbg !125

continue4654:                                     ; preds = %continue4684, %done4673
  %stack_pos4689 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4689, !dbg !126
  %277 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !126
  %self4690 = load %"struct.rubinius::Object"** %277, !dbg !126
  %cast4691 = ptrtoint %"struct.rubinius::Object"* %self4690 to i64, !dbg !126
  %masked4692 = and i64 %cast4691, 3, !dbg !126
  %is_reference4693 = icmp eq i64 %masked4692, 0, !dbg !126
  br i1 %is_reference4693, label %check_class_id4694, label %visit_push_ivar_fallback4687, !dbg !126

check_class_id4658:                               ; preds = %continue4591
  %class_pos4660 = getelementptr %"struct.rubinius::Object"* %self4650, i32 0, i32 0, i32 1, !dbg !125
  %ref_class4661 = load %"struct.rubinius::Class"** %class_pos4660, !dbg !125
  %class_id_pos4662 = getelementptr %"struct.rubinius::Class"* %ref_class4661, i32 0, i32 4, !dbg !125
  %class_id4663 = load i32* %class_id_pos4662, !dbg !125
  %check_class_id4664 = icmp eq i32 %class_id4663, 1285, !dbg !125
  br i1 %check_class_id4664, label %correct_class4659, label %visit_push_ivar_fallback4653, !dbg !125

correct_class4659:                                ; preds = %check_class_id4658
  %obj_array4665 = bitcast %"struct.rubinius::Object"* %self4650 to %"struct.rubinius::Object"**, !dbg !125
  %field_pos4666 = getelementptr %"struct.rubinius::Object"** %obj_array4665, i32 3, !dbg !125
  store %"struct.rubinius::Object"* %stack_load4652, %"struct.rubinius::Object"** %field_pos4666, !dbg !125
  %cast4667 = ptrtoint %"struct.rubinius::Object"* %stack_load4652 to i64, !dbg !125
  %masked4668 = and i64 %cast4667, 3, !dbg !125
  %is_reference4669 = icmp eq i64 %masked4668, 0, !dbg !125
  br i1 %is_reference4669, label %reference_obj4670, label %done4673, !dbg !125

visit_push_ivar_fallback4653:                     ; preds = %check_class_id4658, %continue4591
  %ivar4683 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self4650, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load4652), !dbg !125
  %null_check4686 = icmp eq %"struct.rubinius::Object"* %ivar4683, null, !dbg !125
  br i1 %null_check4686, label %bail_out, label %check_active4685, !dbg !125

reference_obj4670:                                ; preds = %correct_class4659
  %object_memory_mark4674 = load i32* inttoptr (i64 22565880 to i32*), !dbg !125
  %word_pos4675 = getelementptr %"struct.rubinius::Object"* %self4650, i32 0, i32 0, i32 0, i32 0, !dbg !125
  %flags4676 = load i64* %word_pos4675, !dbg !125
  %mark_mask4677 = and i64 %flags4676, 3670016, !dbg !125
  %scan_mark4678 = add i32 %object_memory_mark4674, 1, !dbg !125
  %278 = zext i32 %scan_mark4678 to i64, !dbg !125
  %lshr4679 = shl i64 %278, 19, !dbg !125
  %is_scanned4680 = icmp eq i64 %mark_mask4677, %lshr4679, !dbg !125
  br i1 %is_scanned4680, label %run_barrier4672, label %object_not_scanned4671, !dbg !125

object_not_scanned4671:                           ; preds = %reference_obj4670
  %zone_mask4681 = and i64 %flags4676, 768, !dbg !125
  %is_young4682 = icmp eq i64 %zone_mask4681, 512, !dbg !125
  br i1 %is_young4682, label %done4673, label %run_barrier4672, !dbg !125

run_barrier4672:                                  ; preds = %object_not_scanned4671, %reference_obj4670
  %279 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4650, %"struct.rubinius::Object"* %stack_load4652), !dbg !125
  br label %done4673, !dbg !125

done4673:                                         ; preds = %run_barrier4672, %object_not_scanned4671, %correct_class4659
  br label %continue4654, !dbg !125

continue4684:                                     ; preds = %check_active4685
  br label %continue4654, !dbg !125

check_active4685:                                 ; preds = %visit_push_ivar_fallback4653
  br label %continue4684, !dbg !125

continue4688:                                     ; preds = %visit_push_ivar_fallback4687, %correct_class4695
  %local_pos4710 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !126
  %local4711 = load %"struct.rubinius::Object"** %local_pos4710, !dbg !126, !rbx-classid !35
  %stack_pos4712 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  store %"struct.rubinius::Object"* %local4711, %"struct.rubinius::Object"** %stack_pos4712, !dbg !126
  %stack_pos4715 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !126
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4715, !dbg !126
  %280 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !126
  %self4716 = load %"struct.rubinius::Object"** %280, !dbg !126
  %cast4717 = ptrtoint %"struct.rubinius::Object"* %self4716 to i64, !dbg !126
  %masked4718 = and i64 %cast4717, 3, !dbg !126
  %is_reference4719 = icmp eq i64 %masked4718, 0, !dbg !126
  br i1 %is_reference4719, label %check_class_id4720, label %visit_push_ivar_fallback4713, !dbg !126

check_class_id4694:                               ; preds = %continue4654
  %class_pos4696 = getelementptr %"struct.rubinius::Object"* %self4690, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4697 = load %"struct.rubinius::Class"** %class_pos4696, !dbg !126
  %class_id_pos4698 = getelementptr %"struct.rubinius::Class"* %ref_class4697, i32 0, i32 4, !dbg !126
  %class_id4699 = load i32* %class_id_pos4698, !dbg !126
  %check_class_id4700 = icmp eq i32 %class_id4699, 1285, !dbg !126
  br i1 %check_class_id4700, label %correct_class4695, label %visit_push_ivar_fallback4687, !dbg !126

correct_class4695:                                ; preds = %check_class_id4694
  %obj_array4701 = bitcast %"struct.rubinius::Object"* %self4690 to %"struct.rubinius::Object"**, !dbg !126
  %field_pos4702 = getelementptr %"struct.rubinius::Object"** %obj_array4701, i32 4, !dbg !126
  %field4703 = load %"struct.rubinius::Object"** %field_pos4702, !dbg !126
  %prune_undef4704 = icmp eq %"struct.rubinius::Object"* %field4703, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !126
  %"select ivar4705" = select i1 %prune_undef4704, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4703, !dbg !126
  %stack_pos4706 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  store %"struct.rubinius::Object"* %"select ivar4705", %"struct.rubinius::Object"** %stack_pos4706, !dbg !126
  br label %continue4688, !dbg !126

visit_push_ivar_fallback4687:                     ; preds = %check_class_id4694, %continue4654
  %281 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !126
  %self4707 = load %"struct.rubinius::Object"** %281, !dbg !126
  %ivar4708 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4707, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !126
  %stack_pos4709 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  store %"struct.rubinius::Object"* %ivar4708, %"struct.rubinius::Object"** %stack_pos4709, !dbg !126
  br label %continue4688, !dbg !126

continue4714:                                     ; preds = %visit_push_ivar_fallback4713, %correct_class4721
  %stack_pos4739 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  %stack_load4740 = load %"struct.rubinius::Object"** %stack_pos4739, !dbg !126, !rbx-classid !35
  %cast4741 = ptrtoint %"struct.rubinius::Object"* %stack_load4740 to i64, !dbg !126
  %masked4742 = and i64 %cast4741, 3, !dbg !126
  %is_reference4743 = icmp eq i64 %masked4742, 0, !dbg !126
  br i1 %is_reference4743, label %check_class_id4744, label %class_fallback4736, !dbg !126

check_class_id4720:                               ; preds = %continue4688
  %class_pos4722 = getelementptr %"struct.rubinius::Object"* %self4716, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4723 = load %"struct.rubinius::Class"** %class_pos4722, !dbg !126
  %class_id_pos4724 = getelementptr %"struct.rubinius::Class"* %ref_class4723, i32 0, i32 4, !dbg !126
  %class_id4725 = load i32* %class_id_pos4724, !dbg !126
  %check_class_id4726 = icmp eq i32 %class_id4725, 1285, !dbg !126
  br i1 %check_class_id4726, label %correct_class4721, label %visit_push_ivar_fallback4713, !dbg !126

correct_class4721:                                ; preds = %check_class_id4720
  %obj_array4727 = bitcast %"struct.rubinius::Object"* %self4716 to %"struct.rubinius::Object"**, !dbg !126
  %field_pos4728 = getelementptr %"struct.rubinius::Object"** %obj_array4727, i32 7, !dbg !126
  %field4729 = load %"struct.rubinius::Object"** %field_pos4728, !dbg !126
  %prune_undef4730 = icmp eq %"struct.rubinius::Object"* %field4729, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !126
  %"select ivar4731" = select i1 %prune_undef4730, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4729, !dbg !126
  %stack_pos4732 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !126
  store %"struct.rubinius::Object"* %"select ivar4731", %"struct.rubinius::Object"** %stack_pos4732, !dbg !126
  br label %continue4714, !dbg !126

visit_push_ivar_fallback4713:                     ; preds = %check_class_id4720, %continue4688
  %282 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !126
  %self4733 = load %"struct.rubinius::Object"** %282, !dbg !126
  %ivar4734 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4733, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !126
  %stack_pos4735 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !126
  store %"struct.rubinius::Object"* %ivar4734, %"struct.rubinius::Object"** %stack_pos4735, !dbg !126
  br label %continue4714, !dbg !126

continue4738:                                     ; preds = %check_active4793, %continue4771
  %send_result4795 = phi %"struct.rubinius::Object"* [ %286, %continue4771 ], [ %call_site_execute4792, %check_active4793 ], !dbg !126
  %stack_pos4796 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  store %"struct.rubinius::Object"* %send_result4795, %"struct.rubinius::Object"** %stack_pos4796, !dbg !126
  %stack_pos4800 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  %stack_load4801 = load %"struct.rubinius::Object"** %stack_pos4800, !dbg !126
  %cast4802 = ptrtoint %"struct.rubinius::Object"* %stack_load4801 to i64, !dbg !126
  %masked4803 = and i64 %cast4802, 3, !dbg !126
  %is_reference4804 = icmp eq i64 %masked4803, 0, !dbg !126
  br i1 %is_reference4804, label %check_class_id4805, label %class_fallback4797, !dbg !126

check_class_id4744:                               ; preds = %continue4714
  %class_pos4747 = getelementptr %"struct.rubinius::Object"* %stack_load4740, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4748 = load %"struct.rubinius::Class"** %class_pos4747, !dbg !126
  %class_id_pos4749 = getelementptr %"struct.rubinius::Class"* %ref_class4748, i32 0, i32 4, !dbg !126
  %class_id4750 = load i32* %class_id_pos4749, !dbg !126
  %check_class_id4751 = icmp eq i32 %class_id4750, 77, !dbg !126
  br i1 %check_class_id4751, label %correct_class4745, label %class_fallback4736, !dbg !126

correct_class4745:                                ; preds = %check_class_id4744
  %serial_id_pos4752 = getelementptr %"struct.rubinius::Class"* %ref_class4748, i32 0, i32 5, !dbg !126
  %serial_id4753 = load i32* %serial_id_pos4752, !dbg !126
  %check_serial_id4754 = icmp eq i32 %serial_id4753, 224, !dbg !126
  br i1 %check_serial_id4754, label %correct_serial4746, label %serial_fallback4737, !dbg !126

correct_serial4746:                               ; preds = %correct_class4745
  %stack_pos4755 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !126
  %stack_load4756 = load %"struct.rubinius::Object"** %stack_pos4755, !dbg !126
  %cast4758 = ptrtoint %"struct.rubinius::Object"* %stack_load4756 to i64, !dbg !126
  %masked4759 = and i64 %cast4758, 3, !dbg !126
  %is_reference4760 = icmp eq i64 %masked4759, 0, !dbg !126
  br i1 %is_reference4760, label %check_class_id4761, label %continue4757, !dbg !126

serial_fallback4737:                              ; preds = %correct_class4745
  store i32 297, i32* %ip_pos, !dbg !126
  %283 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 297, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !126
  br label %return_pad, !dbg !126

check_class_id4761:                               ; preds = %correct_serial4746
  %class_pos4763 = getelementptr %"struct.rubinius::Object"* %stack_load4756, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4764 = load %"struct.rubinius::Class"** %class_pos4763, !dbg !126
  %class_id_pos4765 = getelementptr %"struct.rubinius::Class"* %ref_class4764, i32 0, i32 4, !dbg !126
  %class_id4766 = load i32* %class_id_pos4765, !dbg !126
  %check_class_id4767 = icmp eq i32 %class_id4766, 77, !dbg !126
  br i1 %check_class_id4767, label %correct_class4762, label %continue4757, !dbg !126

correct_class4762:                                ; preds = %check_class_id4761
  %arg_float4768 = bitcast %"struct.rubinius::Object"* %stack_load4756 to %"struct.rubinius::Float"*, !dbg !126
  %arg.value_pos4769 = getelementptr %"struct.rubinius::Float"* %arg_float4768, i32 0, i32 1, !dbg !126
  %farg4770 = load double* %arg.value_pos4769, !dbg !126
  br label %continue4771, !dbg !126

continue4757:                                     ; preds = %check_class_id4761, %correct_serial4746
  %cast4772 = ptrtoint %"struct.rubinius::Object"* %stack_load4756 to i64, !dbg !126
  %masked4773 = and i64 %cast4772, 1, !dbg !126
  %is_fixnum4774 = icmp eq i64 %masked4773, 1, !dbg !126
  br i1 %is_fixnum4774, label %guarded_body4775, label %class_fallback4736, !dbg !126

guarded_body4775:                                 ; preds = %continue4757
  %as_int4776 = ptrtoint %"struct.rubinius::Object"* %stack_load4756 to i64, !dbg !126
  %ashr4777 = ashr i64 %as_int4776, 1, !dbg !126
  %284 = sitofp i64 %ashr4777 to double, !dbg !126
  br label %continue4771, !dbg !126

continue4771:                                     ; preds = %guarded_body4775, %correct_class4762
  %rhs4778 = phi double [ %farg4770, %correct_class4762 ], [ %284, %guarded_body4775 ], !dbg !126
  %stack_pos4779 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  %stack_load4780 = load %"struct.rubinius::Object"** %stack_pos4779, !dbg !126, !rbx-classid !35
  %self_float4781 = bitcast %"struct.rubinius::Object"* %stack_load4780 to %"struct.rubinius::Float"*, !dbg !126
  %self.value_pos4782 = getelementptr %"struct.rubinius::Float"* %self_float4781, i32 0, i32 1, !dbg !126
  %fself4783 = load double* %self.value_pos4782, !dbg !126
  %float.mul4784 = fmul double %fself4783, %rhs4778, !dbg !126
  %result4785 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !126, !rbx-classid !87
  %285 = getelementptr %"struct.rubinius::Float"* %result4785, i32 0, i32 1, !dbg !126
  store double %float.mul4784, double* %285, !dbg !126
  %286 = bitcast %"struct.rubinius::Float"* %result4785 to %"struct.rubinius::Object"*, !dbg !126
  br label %continue4738, !dbg !126

class_fallback4736:                               ; preds = %continue4757, %check_class_id4744, %continue4714
  %stack_pos4786 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  %stack_load4787 = load %"struct.rubinius::Object"** %stack_pos4786, !dbg !126, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load4787, %"struct.rubinius::Object"** %out_args_recv, !dbg !126
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !126
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !126
  store i32 1, i32* %out_args_total, !dbg !126
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !126
  %stack_pos4788 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !126
  store %"struct.rubinius::Object"** %stack_pos4788, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !126
  %cache_const4789 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550784 to %"struct.rubinius::CallSite"**), !dbg !126
  %execute_pos4790 = getelementptr %"struct.rubinius::CallSite"* %cache_const4789, i32 0, i32 2, !dbg !126
  %execute4791 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4790, !dbg !126
  store i32 297, i32* %ip_pos, !dbg !126
  %call_site_execute4792 = call %"struct.rubinius::Object"* %execute4791(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4789, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !126
  %null_check4794 = icmp eq %"struct.rubinius::Object"* %call_site_execute4792, null, !dbg !126
  br i1 %null_check4794, label %bail_out, label %check_active4793, !dbg !126

check_active4793:                                 ; preds = %class_fallback4736
  br label %continue4738, !dbg !126

continue4799:                                     ; preds = %check_active4854, %continue4832
  %send_result4856 = phi %"struct.rubinius::Object"* [ %291, %continue4832 ], [ %call_site_execute4853, %check_active4854 ], !dbg !126
  %stack_pos4857 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  store %"struct.rubinius::Object"* %send_result4856, %"struct.rubinius::Object"** %stack_pos4857, !dbg !126
  %287 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !126
  %self4858 = load %"struct.rubinius::Object"** %287, !dbg !126
  %stack_pos4859 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  %stack_load4860 = load %"struct.rubinius::Object"** %stack_pos4859, !dbg !126
  %cast4863 = ptrtoint %"struct.rubinius::Object"* %self4858 to i64, !dbg !126
  %masked4864 = and i64 %cast4863, 3, !dbg !126
  %is_reference4865 = icmp eq i64 %masked4864, 0, !dbg !126
  br i1 %is_reference4865, label %check_class_id4866, label %visit_push_ivar_fallback4861, !dbg !126

check_class_id4805:                               ; preds = %continue4738
  %class_pos4808 = getelementptr %"struct.rubinius::Object"* %stack_load4801, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4809 = load %"struct.rubinius::Class"** %class_pos4808, !dbg !126
  %class_id_pos4810 = getelementptr %"struct.rubinius::Class"* %ref_class4809, i32 0, i32 4, !dbg !126
  %class_id4811 = load i32* %class_id_pos4810, !dbg !126
  %check_class_id4812 = icmp eq i32 %class_id4811, 77, !dbg !126
  br i1 %check_class_id4812, label %correct_class4806, label %class_fallback4797, !dbg !126

correct_class4806:                                ; preds = %check_class_id4805
  %serial_id_pos4813 = getelementptr %"struct.rubinius::Class"* %ref_class4809, i32 0, i32 5, !dbg !126
  %serial_id4814 = load i32* %serial_id_pos4813, !dbg !126
  %check_serial_id4815 = icmp eq i32 %serial_id4814, 224, !dbg !126
  br i1 %check_serial_id4815, label %correct_serial4807, label %serial_fallback4798, !dbg !126

correct_serial4807:                               ; preds = %correct_class4806
  %stack_pos4816 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  %stack_load4817 = load %"struct.rubinius::Object"** %stack_pos4816, !dbg !126
  %cast4819 = ptrtoint %"struct.rubinius::Object"* %stack_load4817 to i64, !dbg !126
  %masked4820 = and i64 %cast4819, 3, !dbg !126
  %is_reference4821 = icmp eq i64 %masked4820, 0, !dbg !126
  br i1 %is_reference4821, label %check_class_id4822, label %continue4818, !dbg !126

serial_fallback4798:                              ; preds = %correct_class4806
  store i32 300, i32* %ip_pos, !dbg !126
  %288 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 300, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !126
  br label %return_pad, !dbg !126

check_class_id4822:                               ; preds = %correct_serial4807
  %class_pos4824 = getelementptr %"struct.rubinius::Object"* %stack_load4817, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4825 = load %"struct.rubinius::Class"** %class_pos4824, !dbg !126
  %class_id_pos4826 = getelementptr %"struct.rubinius::Class"* %ref_class4825, i32 0, i32 4, !dbg !126
  %class_id4827 = load i32* %class_id_pos4826, !dbg !126
  %check_class_id4828 = icmp eq i32 %class_id4827, 77, !dbg !126
  br i1 %check_class_id4828, label %correct_class4823, label %continue4818, !dbg !126

correct_class4823:                                ; preds = %check_class_id4822
  %arg_float4829 = bitcast %"struct.rubinius::Object"* %stack_load4817 to %"struct.rubinius::Float"*, !dbg !126
  %arg.value_pos4830 = getelementptr %"struct.rubinius::Float"* %arg_float4829, i32 0, i32 1, !dbg !126
  %farg4831 = load double* %arg.value_pos4830, !dbg !126
  br label %continue4832, !dbg !126

continue4818:                                     ; preds = %check_class_id4822, %correct_serial4807
  %cast4833 = ptrtoint %"struct.rubinius::Object"* %stack_load4817 to i64, !dbg !126
  %masked4834 = and i64 %cast4833, 1, !dbg !126
  %is_fixnum4835 = icmp eq i64 %masked4834, 1, !dbg !126
  br i1 %is_fixnum4835, label %guarded_body4836, label %class_fallback4797, !dbg !126

guarded_body4836:                                 ; preds = %continue4818
  %as_int4837 = ptrtoint %"struct.rubinius::Object"* %stack_load4817 to i64, !dbg !126
  %ashr4838 = ashr i64 %as_int4837, 1, !dbg !126
  %289 = sitofp i64 %ashr4838 to double, !dbg !126
  br label %continue4832, !dbg !126

continue4832:                                     ; preds = %guarded_body4836, %correct_class4823
  %rhs4839 = phi double [ %farg4831, %correct_class4823 ], [ %289, %guarded_body4836 ], !dbg !126
  %stack_pos4840 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  %stack_load4841 = load %"struct.rubinius::Object"** %stack_pos4840, !dbg !126
  %self_float4842 = bitcast %"struct.rubinius::Object"* %stack_load4841 to %"struct.rubinius::Float"*, !dbg !126
  %self.value_pos4843 = getelementptr %"struct.rubinius::Float"* %self_float4842, i32 0, i32 1, !dbg !126
  %fself4844 = load double* %self.value_pos4843, !dbg !126
  %float.add4845 = fadd double %fself4844, %rhs4839, !dbg !126
  %result4846 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !126, !rbx-classid !87
  %290 = getelementptr %"struct.rubinius::Float"* %result4846, i32 0, i32 1, !dbg !126
  store double %float.add4845, double* %290, !dbg !126
  %291 = bitcast %"struct.rubinius::Float"* %result4846 to %"struct.rubinius::Object"*, !dbg !126
  br label %continue4799, !dbg !126

class_fallback4797:                               ; preds = %continue4818, %check_class_id4805, %continue4738
  %stack_pos4847 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !126
  %stack_load4848 = load %"struct.rubinius::Object"** %stack_pos4847, !dbg !126
  store %"struct.rubinius::Object"* %stack_load4848, %"struct.rubinius::Object"** %out_args_recv, !dbg !126
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !126
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !126
  store i32 1, i32* %out_args_total, !dbg !126
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !126
  %stack_pos4849 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !126
  store %"struct.rubinius::Object"** %stack_pos4849, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !126
  %cache_const4850 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550808 to %"struct.rubinius::CallSite"**), !dbg !126
  %execute_pos4851 = getelementptr %"struct.rubinius::CallSite"* %cache_const4850, i32 0, i32 2, !dbg !126
  %execute4852 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4851, !dbg !126
  store i32 300, i32* %ip_pos, !dbg !126
  %call_site_execute4853 = call %"struct.rubinius::Object"* %execute4852(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4850, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !126
  %null_check4855 = icmp eq %"struct.rubinius::Object"* %call_site_execute4853, null, !dbg !126
  br i1 %null_check4855, label %bail_out, label %check_active4854, !dbg !126

check_active4854:                                 ; preds = %class_fallback4797
  br label %continue4799, !dbg !126

continue4862:                                     ; preds = %continue4892, %done4881
  %stack_pos4897 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4897, !dbg !21
  %292 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self4898 = load %"struct.rubinius::Object"** %292, !dbg !21
  %cast4899 = ptrtoint %"struct.rubinius::Object"* %self4898 to i64, !dbg !21
  %masked4900 = and i64 %cast4899, 3, !dbg !21
  %is_reference4901 = icmp eq i64 %masked4900, 0, !dbg !21
  br i1 %is_reference4901, label %check_class_id4902, label %visit_push_ivar_fallback4895, !dbg !21

check_class_id4866:                               ; preds = %continue4799
  %class_pos4868 = getelementptr %"struct.rubinius::Object"* %self4858, i32 0, i32 0, i32 1, !dbg !126
  %ref_class4869 = load %"struct.rubinius::Class"** %class_pos4868, !dbg !126
  %class_id_pos4870 = getelementptr %"struct.rubinius::Class"* %ref_class4869, i32 0, i32 4, !dbg !126
  %class_id4871 = load i32* %class_id_pos4870, !dbg !126
  %check_class_id4872 = icmp eq i32 %class_id4871, 1285, !dbg !126
  br i1 %check_class_id4872, label %correct_class4867, label %visit_push_ivar_fallback4861, !dbg !126

correct_class4867:                                ; preds = %check_class_id4866
  %obj_array4873 = bitcast %"struct.rubinius::Object"* %self4858 to %"struct.rubinius::Object"**, !dbg !126
  %field_pos4874 = getelementptr %"struct.rubinius::Object"** %obj_array4873, i32 4, !dbg !126
  store %"struct.rubinius::Object"* %stack_load4860, %"struct.rubinius::Object"** %field_pos4874, !dbg !126
  %cast4875 = ptrtoint %"struct.rubinius::Object"* %stack_load4860 to i64, !dbg !126
  %masked4876 = and i64 %cast4875, 3, !dbg !126
  %is_reference4877 = icmp eq i64 %masked4876, 0, !dbg !126
  br i1 %is_reference4877, label %reference_obj4878, label %done4881, !dbg !126

visit_push_ivar_fallback4861:                     ; preds = %check_class_id4866, %continue4799
  %ivar4891 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self4858, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load4860), !dbg !126
  %null_check4894 = icmp eq %"struct.rubinius::Object"* %ivar4891, null, !dbg !126
  br i1 %null_check4894, label %bail_out, label %check_active4893, !dbg !126

reference_obj4878:                                ; preds = %correct_class4867
  %object_memory_mark4882 = load i32* inttoptr (i64 22565880 to i32*), !dbg !126
  %word_pos4883 = getelementptr %"struct.rubinius::Object"* %self4858, i32 0, i32 0, i32 0, i32 0, !dbg !126
  %flags4884 = load i64* %word_pos4883, !dbg !126
  %mark_mask4885 = and i64 %flags4884, 3670016, !dbg !126
  %scan_mark4886 = add i32 %object_memory_mark4882, 1, !dbg !126
  %293 = zext i32 %scan_mark4886 to i64, !dbg !126
  %lshr4887 = shl i64 %293, 19, !dbg !126
  %is_scanned4888 = icmp eq i64 %mark_mask4885, %lshr4887, !dbg !126
  br i1 %is_scanned4888, label %run_barrier4880, label %object_not_scanned4879, !dbg !126

object_not_scanned4879:                           ; preds = %reference_obj4878
  %zone_mask4889 = and i64 %flags4884, 768, !dbg !126
  %is_young4890 = icmp eq i64 %zone_mask4889, 512, !dbg !126
  br i1 %is_young4890, label %done4881, label %run_barrier4880, !dbg !126

run_barrier4880:                                  ; preds = %object_not_scanned4879, %reference_obj4878
  %294 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4858, %"struct.rubinius::Object"* %stack_load4860), !dbg !126
  br label %done4881, !dbg !126

done4881:                                         ; preds = %run_barrier4880, %object_not_scanned4879, %correct_class4867
  br label %continue4862, !dbg !126

continue4892:                                     ; preds = %check_active4893
  br label %continue4862, !dbg !126

check_active4893:                                 ; preds = %visit_push_ivar_fallback4861
  br label %continue4892, !dbg !126

continue4896:                                     ; preds = %visit_push_ivar_fallback4895, %correct_class4903
  %local_pos4918 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !21
  %local4919 = load %"struct.rubinius::Object"** %local_pos4918, !dbg !21, !rbx-classid !35
  %stack_pos4920 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  store %"struct.rubinius::Object"* %local4919, %"struct.rubinius::Object"** %stack_pos4920, !dbg !21
  %stack_pos4923 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4923, !dbg !21
  %295 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self4924 = load %"struct.rubinius::Object"** %295, !dbg !21
  %cast4925 = ptrtoint %"struct.rubinius::Object"* %self4924 to i64, !dbg !21
  %masked4926 = and i64 %cast4925, 3, !dbg !21
  %is_reference4927 = icmp eq i64 %masked4926, 0, !dbg !21
  br i1 %is_reference4927, label %check_class_id4928, label %visit_push_ivar_fallback4921, !dbg !21

check_class_id4902:                               ; preds = %continue4862
  %class_pos4904 = getelementptr %"struct.rubinius::Object"* %self4898, i32 0, i32 0, i32 1, !dbg !21
  %ref_class4905 = load %"struct.rubinius::Class"** %class_pos4904, !dbg !21
  %class_id_pos4906 = getelementptr %"struct.rubinius::Class"* %ref_class4905, i32 0, i32 4, !dbg !21
  %class_id4907 = load i32* %class_id_pos4906, !dbg !21
  %check_class_id4908 = icmp eq i32 %class_id4907, 1285, !dbg !21
  br i1 %check_class_id4908, label %correct_class4903, label %visit_push_ivar_fallback4895, !dbg !21

correct_class4903:                                ; preds = %check_class_id4902
  %obj_array4909 = bitcast %"struct.rubinius::Object"* %self4898 to %"struct.rubinius::Object"**, !dbg !21
  %field_pos4910 = getelementptr %"struct.rubinius::Object"** %obj_array4909, i32 5, !dbg !21
  %field4911 = load %"struct.rubinius::Object"** %field_pos4910, !dbg !21
  %prune_undef4912 = icmp eq %"struct.rubinius::Object"* %field4911, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !21
  %"select ivar4913" = select i1 %prune_undef4912, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4911, !dbg !21
  %stack_pos4914 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %"select ivar4913", %"struct.rubinius::Object"** %stack_pos4914, !dbg !21
  br label %continue4896, !dbg !21

visit_push_ivar_fallback4895:                     ; preds = %check_class_id4902, %continue4862
  %296 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self4915 = load %"struct.rubinius::Object"** %296, !dbg !21
  %ivar4916 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4915, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !21
  %stack_pos4917 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %ivar4916, %"struct.rubinius::Object"** %stack_pos4917, !dbg !21
  br label %continue4896, !dbg !21

continue4922:                                     ; preds = %visit_push_ivar_fallback4921, %correct_class4929
  %stack_pos4947 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  %stack_load4948 = load %"struct.rubinius::Object"** %stack_pos4947, !dbg !21, !rbx-classid !35
  %cast4949 = ptrtoint %"struct.rubinius::Object"* %stack_load4948 to i64, !dbg !21
  %masked4950 = and i64 %cast4949, 3, !dbg !21
  %is_reference4951 = icmp eq i64 %masked4950, 0, !dbg !21
  br i1 %is_reference4951, label %check_class_id4952, label %class_fallback4944, !dbg !21

check_class_id4928:                               ; preds = %continue4896
  %class_pos4930 = getelementptr %"struct.rubinius::Object"* %self4924, i32 0, i32 0, i32 1, !dbg !21
  %ref_class4931 = load %"struct.rubinius::Class"** %class_pos4930, !dbg !21
  %class_id_pos4932 = getelementptr %"struct.rubinius::Class"* %ref_class4931, i32 0, i32 4, !dbg !21
  %class_id4933 = load i32* %class_id_pos4932, !dbg !21
  %check_class_id4934 = icmp eq i32 %class_id4933, 1285, !dbg !21
  br i1 %check_class_id4934, label %correct_class4929, label %visit_push_ivar_fallback4921, !dbg !21

correct_class4929:                                ; preds = %check_class_id4928
  %obj_array4935 = bitcast %"struct.rubinius::Object"* %self4924 to %"struct.rubinius::Object"**, !dbg !21
  %field_pos4936 = getelementptr %"struct.rubinius::Object"** %obj_array4935, i32 8, !dbg !21
  %field4937 = load %"struct.rubinius::Object"** %field_pos4936, !dbg !21
  %prune_undef4938 = icmp eq %"struct.rubinius::Object"* %field4937, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !21
  %"select ivar4939" = select i1 %prune_undef4938, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4937, !dbg !21
  %stack_pos4940 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"* %"select ivar4939", %"struct.rubinius::Object"** %stack_pos4940, !dbg !21
  br label %continue4922, !dbg !21

visit_push_ivar_fallback4921:                     ; preds = %check_class_id4928, %continue4896
  %297 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self4941 = load %"struct.rubinius::Object"** %297, !dbg !21
  %ivar4942 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4941, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !21
  %stack_pos4943 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"* %ivar4942, %"struct.rubinius::Object"** %stack_pos4943, !dbg !21
  br label %continue4922, !dbg !21

continue4946:                                     ; preds = %check_active5001, %continue4979
  %send_result5003 = phi %"struct.rubinius::Object"* [ %301, %continue4979 ], [ %call_site_execute5000, %check_active5001 ], !dbg !21
  %stack_pos5004 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  store %"struct.rubinius::Object"* %send_result5003, %"struct.rubinius::Object"** %stack_pos5004, !dbg !21
  %stack_pos5008 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load5009 = load %"struct.rubinius::Object"** %stack_pos5008, !dbg !21
  %cast5010 = ptrtoint %"struct.rubinius::Object"* %stack_load5009 to i64, !dbg !21
  %masked5011 = and i64 %cast5010, 3, !dbg !21
  %is_reference5012 = icmp eq i64 %masked5011, 0, !dbg !21
  br i1 %is_reference5012, label %check_class_id5013, label %class_fallback5005, !dbg !21

check_class_id4952:                               ; preds = %continue4922
  %class_pos4955 = getelementptr %"struct.rubinius::Object"* %stack_load4948, i32 0, i32 0, i32 1, !dbg !21
  %ref_class4956 = load %"struct.rubinius::Class"** %class_pos4955, !dbg !21
  %class_id_pos4957 = getelementptr %"struct.rubinius::Class"* %ref_class4956, i32 0, i32 4, !dbg !21
  %class_id4958 = load i32* %class_id_pos4957, !dbg !21
  %check_class_id4959 = icmp eq i32 %class_id4958, 77, !dbg !21
  br i1 %check_class_id4959, label %correct_class4953, label %class_fallback4944, !dbg !21

correct_class4953:                                ; preds = %check_class_id4952
  %serial_id_pos4960 = getelementptr %"struct.rubinius::Class"* %ref_class4956, i32 0, i32 5, !dbg !21
  %serial_id4961 = load i32* %serial_id_pos4960, !dbg !21
  %check_serial_id4962 = icmp eq i32 %serial_id4961, 224, !dbg !21
  br i1 %check_serial_id4962, label %correct_serial4954, label %serial_fallback4945, !dbg !21

correct_serial4954:                               ; preds = %correct_class4953
  %stack_pos4963 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  %stack_load4964 = load %"struct.rubinius::Object"** %stack_pos4963, !dbg !21
  %cast4966 = ptrtoint %"struct.rubinius::Object"* %stack_load4964 to i64, !dbg !21
  %masked4967 = and i64 %cast4966, 3, !dbg !21
  %is_reference4968 = icmp eq i64 %masked4967, 0, !dbg !21
  br i1 %is_reference4968, label %check_class_id4969, label %continue4965, !dbg !21

serial_fallback4945:                              ; preds = %correct_class4953
  store i32 312, i32* %ip_pos, !dbg !21
  %298 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 312, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !21
  br label %return_pad, !dbg !21

check_class_id4969:                               ; preds = %correct_serial4954
  %class_pos4971 = getelementptr %"struct.rubinius::Object"* %stack_load4964, i32 0, i32 0, i32 1, !dbg !21
  %ref_class4972 = load %"struct.rubinius::Class"** %class_pos4971, !dbg !21
  %class_id_pos4973 = getelementptr %"struct.rubinius::Class"* %ref_class4972, i32 0, i32 4, !dbg !21
  %class_id4974 = load i32* %class_id_pos4973, !dbg !21
  %check_class_id4975 = icmp eq i32 %class_id4974, 77, !dbg !21
  br i1 %check_class_id4975, label %correct_class4970, label %continue4965, !dbg !21

correct_class4970:                                ; preds = %check_class_id4969
  %arg_float4976 = bitcast %"struct.rubinius::Object"* %stack_load4964 to %"struct.rubinius::Float"*, !dbg !21
  %arg.value_pos4977 = getelementptr %"struct.rubinius::Float"* %arg_float4976, i32 0, i32 1, !dbg !21
  %farg4978 = load double* %arg.value_pos4977, !dbg !21
  br label %continue4979, !dbg !21

continue4965:                                     ; preds = %check_class_id4969, %correct_serial4954
  %cast4980 = ptrtoint %"struct.rubinius::Object"* %stack_load4964 to i64, !dbg !21
  %masked4981 = and i64 %cast4980, 1, !dbg !21
  %is_fixnum4982 = icmp eq i64 %masked4981, 1, !dbg !21
  br i1 %is_fixnum4982, label %guarded_body4983, label %class_fallback4944, !dbg !21

guarded_body4983:                                 ; preds = %continue4965
  %as_int4984 = ptrtoint %"struct.rubinius::Object"* %stack_load4964 to i64, !dbg !21
  %ashr4985 = ashr i64 %as_int4984, 1, !dbg !21
  %299 = sitofp i64 %ashr4985 to double, !dbg !21
  br label %continue4979, !dbg !21

continue4979:                                     ; preds = %guarded_body4983, %correct_class4970
  %rhs4986 = phi double [ %farg4978, %correct_class4970 ], [ %299, %guarded_body4983 ], !dbg !21
  %stack_pos4987 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  %stack_load4988 = load %"struct.rubinius::Object"** %stack_pos4987, !dbg !21, !rbx-classid !35
  %self_float4989 = bitcast %"struct.rubinius::Object"* %stack_load4988 to %"struct.rubinius::Float"*, !dbg !21
  %self.value_pos4990 = getelementptr %"struct.rubinius::Float"* %self_float4989, i32 0, i32 1, !dbg !21
  %fself4991 = load double* %self.value_pos4990, !dbg !21
  %float.mul4992 = fmul double %fself4991, %rhs4986, !dbg !21
  %result4993 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !21, !rbx-classid !87
  %300 = getelementptr %"struct.rubinius::Float"* %result4993, i32 0, i32 1, !dbg !21
  store double %float.mul4992, double* %300, !dbg !21
  %301 = bitcast %"struct.rubinius::Float"* %result4993 to %"struct.rubinius::Object"*, !dbg !21
  br label %continue4946, !dbg !21

class_fallback4944:                               ; preds = %continue4965, %check_class_id4952, %continue4922
  %stack_pos4994 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  %stack_load4995 = load %"struct.rubinius::Object"** %stack_pos4994, !dbg !21, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load4995, %"struct.rubinius::Object"** %out_args_recv, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !21
  store i32 1, i32* %out_args_total, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !21
  %stack_pos4996 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos4996, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !21
  %cache_const4997 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550904 to %"struct.rubinius::CallSite"**), !dbg !21
  %execute_pos4998 = getelementptr %"struct.rubinius::CallSite"* %cache_const4997, i32 0, i32 2, !dbg !21
  %execute4999 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4998, !dbg !21
  store i32 312, i32* %ip_pos, !dbg !21
  %call_site_execute5000 = call %"struct.rubinius::Object"* %execute4999(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4997, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check5002 = icmp eq %"struct.rubinius::Object"* %call_site_execute5000, null, !dbg !21
  br i1 %null_check5002, label %bail_out, label %check_active5001, !dbg !21

check_active5001:                                 ; preds = %class_fallback4944
  br label %continue4946, !dbg !21

continue5007:                                     ; preds = %check_active5062, %continue5040
  %send_result5064 = phi %"struct.rubinius::Object"* [ %306, %continue5040 ], [ %call_site_execute5061, %check_active5062 ], !dbg !21
  %stack_pos5065 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %send_result5064, %"struct.rubinius::Object"** %stack_pos5065, !dbg !21
  %302 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self5066 = load %"struct.rubinius::Object"** %302, !dbg !21
  %stack_pos5067 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load5068 = load %"struct.rubinius::Object"** %stack_pos5067, !dbg !21
  %cast5071 = ptrtoint %"struct.rubinius::Object"* %self5066 to i64, !dbg !21
  %masked5072 = and i64 %cast5071, 3, !dbg !21
  %is_reference5073 = icmp eq i64 %masked5072, 0, !dbg !21
  br i1 %is_reference5073, label %check_class_id5074, label %visit_push_ivar_fallback5069, !dbg !21

check_class_id5013:                               ; preds = %continue4946
  %class_pos5016 = getelementptr %"struct.rubinius::Object"* %stack_load5009, i32 0, i32 0, i32 1, !dbg !21
  %ref_class5017 = load %"struct.rubinius::Class"** %class_pos5016, !dbg !21
  %class_id_pos5018 = getelementptr %"struct.rubinius::Class"* %ref_class5017, i32 0, i32 4, !dbg !21
  %class_id5019 = load i32* %class_id_pos5018, !dbg !21
  %check_class_id5020 = icmp eq i32 %class_id5019, 77, !dbg !21
  br i1 %check_class_id5020, label %correct_class5014, label %class_fallback5005, !dbg !21

correct_class5014:                                ; preds = %check_class_id5013
  %serial_id_pos5021 = getelementptr %"struct.rubinius::Class"* %ref_class5017, i32 0, i32 5, !dbg !21
  %serial_id5022 = load i32* %serial_id_pos5021, !dbg !21
  %check_serial_id5023 = icmp eq i32 %serial_id5022, 224, !dbg !21
  br i1 %check_serial_id5023, label %correct_serial5015, label %serial_fallback5006, !dbg !21

correct_serial5015:                               ; preds = %correct_class5014
  %stack_pos5024 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  %stack_load5025 = load %"struct.rubinius::Object"** %stack_pos5024, !dbg !21
  %cast5027 = ptrtoint %"struct.rubinius::Object"* %stack_load5025 to i64, !dbg !21
  %masked5028 = and i64 %cast5027, 3, !dbg !21
  %is_reference5029 = icmp eq i64 %masked5028, 0, !dbg !21
  br i1 %is_reference5029, label %check_class_id5030, label %continue5026, !dbg !21

serial_fallback5006:                              ; preds = %correct_class5014
  store i32 315, i32* %ip_pos, !dbg !21
  %303 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 315, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !21
  br label %return_pad, !dbg !21

check_class_id5030:                               ; preds = %correct_serial5015
  %class_pos5032 = getelementptr %"struct.rubinius::Object"* %stack_load5025, i32 0, i32 0, i32 1, !dbg !21
  %ref_class5033 = load %"struct.rubinius::Class"** %class_pos5032, !dbg !21
  %class_id_pos5034 = getelementptr %"struct.rubinius::Class"* %ref_class5033, i32 0, i32 4, !dbg !21
  %class_id5035 = load i32* %class_id_pos5034, !dbg !21
  %check_class_id5036 = icmp eq i32 %class_id5035, 77, !dbg !21
  br i1 %check_class_id5036, label %correct_class5031, label %continue5026, !dbg !21

correct_class5031:                                ; preds = %check_class_id5030
  %arg_float5037 = bitcast %"struct.rubinius::Object"* %stack_load5025 to %"struct.rubinius::Float"*, !dbg !21
  %arg.value_pos5038 = getelementptr %"struct.rubinius::Float"* %arg_float5037, i32 0, i32 1, !dbg !21
  %farg5039 = load double* %arg.value_pos5038, !dbg !21
  br label %continue5040, !dbg !21

continue5026:                                     ; preds = %check_class_id5030, %correct_serial5015
  %cast5041 = ptrtoint %"struct.rubinius::Object"* %stack_load5025 to i64, !dbg !21
  %masked5042 = and i64 %cast5041, 1, !dbg !21
  %is_fixnum5043 = icmp eq i64 %masked5042, 1, !dbg !21
  br i1 %is_fixnum5043, label %guarded_body5044, label %class_fallback5005, !dbg !21

guarded_body5044:                                 ; preds = %continue5026
  %as_int5045 = ptrtoint %"struct.rubinius::Object"* %stack_load5025 to i64, !dbg !21
  %ashr5046 = ashr i64 %as_int5045, 1, !dbg !21
  %304 = sitofp i64 %ashr5046 to double, !dbg !21
  br label %continue5040, !dbg !21

continue5040:                                     ; preds = %guarded_body5044, %correct_class5031
  %rhs5047 = phi double [ %farg5039, %correct_class5031 ], [ %304, %guarded_body5044 ], !dbg !21
  %stack_pos5048 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load5049 = load %"struct.rubinius::Object"** %stack_pos5048, !dbg !21
  %self_float5050 = bitcast %"struct.rubinius::Object"* %stack_load5049 to %"struct.rubinius::Float"*, !dbg !21
  %self.value_pos5051 = getelementptr %"struct.rubinius::Float"* %self_float5050, i32 0, i32 1, !dbg !21
  %fself5052 = load double* %self.value_pos5051, !dbg !21
  %float.add5053 = fadd double %fself5052, %rhs5047, !dbg !21
  %result5054 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !21, !rbx-classid !87
  %305 = getelementptr %"struct.rubinius::Float"* %result5054, i32 0, i32 1, !dbg !21
  store double %float.add5053, double* %305, !dbg !21
  %306 = bitcast %"struct.rubinius::Float"* %result5054 to %"struct.rubinius::Object"*, !dbg !21
  br label %continue5007, !dbg !21

class_fallback5005:                               ; preds = %continue5026, %check_class_id5013, %continue4946
  %stack_pos5055 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load5056 = load %"struct.rubinius::Object"** %stack_pos5055, !dbg !21
  store %"struct.rubinius::Object"* %stack_load5056, %"struct.rubinius::Object"** %out_args_recv, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !21
  store i32 1, i32* %out_args_total, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !21
  %stack_pos5057 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos5057, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !21
  %cache_const5058 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550928 to %"struct.rubinius::CallSite"**), !dbg !21
  %execute_pos5059 = getelementptr %"struct.rubinius::CallSite"* %cache_const5058, i32 0, i32 2, !dbg !21
  %execute5060 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos5059, !dbg !21
  store i32 315, i32* %ip_pos, !dbg !21
  %call_site_execute5061 = call %"struct.rubinius::Object"* %execute5060(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const5058, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check5063 = icmp eq %"struct.rubinius::Object"* %call_site_execute5061, null, !dbg !21
  br i1 %null_check5063, label %bail_out, label %check_active5062, !dbg !21

check_active5062:                                 ; preds = %class_fallback5005
  br label %continue5007, !dbg !21

continue5070:                                     ; preds = %continue5100, %done5089
  %stack_pos5103 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load5104 = load %"struct.rubinius::Object"** %stack_pos5103, !dbg !21
  br label %return_pad, !dbg !21

return_pad:                                       ; preds = %continue5070, %serial_fallback5006, %serial_fallback4945, %serial_fallback4798, %serial_fallback4737, %serial_fallback4590, %serial_fallback4529, %serial_fallback4431, %serial_fallback4385, %class_fallback4384, %serial_fallback4312, %serial_fallback4251, %serial_fallback4232, %class_fallback4231, %serial_fallback4184, %class_fallback4183, %serial_fallback4111, %serial_fallback4050, %serial_fallback4031, %class_fallback4030, %serial_fallback3983, %class_fallback3982, %serial_fallback3910, %serial_fallback3849, %serial_fallback3830, %class_fallback3829, %serial_fallback3726, %serial_fallback3665, %serial_fallback3538, %serial_fallback3477, %serial_fallback3361, %serial_fallback3300, %serial_fallback3184, %serial_fallback3168, %class_fallback3167, %serial_fallback3104, %serial_fallback3015, %serial_fallback2954, %serial_fallback2890, %serial_fallback2427, %class_fallback2426, %serial_fallback2366, %serial_fallback2305, %serial_fallback2239, %serial_fallback2178, %serial_fallback2112, %serial_fallback2020, %serial_fallback2007, %class_fallback2006, %serial_fallback1917, %serial_fallback1904, %class_fallback1903, %serial_fallback1823, %serial_fallback1796, %class_fallback1795, %serial_fallback38, %class_fallback37, %serial_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %21, %serial_fallback ], [ %24, %class_fallback37 ], [ %25, %serial_fallback38 ], [ %83, %class_fallback1795 ], [ %84, %serial_fallback1796 ], [ %86, %serial_fallback1823 ], [ %91, %class_fallback1903 ], [ %92, %serial_fallback1904 ], [ %94, %serial_fallback1917 ], [ %99, %class_fallback2006 ], [ %100, %serial_fallback2007 ], [ %101, %serial_fallback2020 ], [ %105, %serial_fallback2112 ], [ %109, %serial_fallback2178 ], [ %113, %serial_fallback2239 ], [ %117, %serial_fallback2305 ], [ %121, %serial_fallback2366 ], [ %125, %class_fallback2426 ], [ %126, %serial_fallback2427 ], [ %150, %serial_fallback2890 ], [ %154, %serial_fallback2954 ], [ %159, %serial_fallback3015 ], [ %164, %serial_fallback3104 ], [ %168, %class_fallback3167 ], [ %169, %serial_fallback3168 ], [ %175, %serial_fallback3184 ], [ %180, %serial_fallback3300 ], [ %185, %serial_fallback3361 ], [ %193, %serial_fallback3477 ], [ %198, %serial_fallback3538 ], [ %206, %serial_fallback3665 ], [ %211, %serial_fallback3726 ], [ %217, %class_fallback3829 ], [ %218, %serial_fallback3830 ], [ %219, %serial_fallback3849 ], [ %223, %serial_fallback3910 ], [ %227, %class_fallback3982 ], [ %228, %serial_fallback3983 ], [ %231, %class_fallback4030 ], [ %232, %serial_fallback4031 ], [ %233, %serial_fallback4050 ], [ %237, %serial_fallback4111 ], [ %241, %class_fallback4183 ], [ %242, %serial_fallback4184 ], [ %245, %class_fallback4231 ], [ %246, %serial_fallback4232 ], [ %247, %serial_fallback4251 ], [ %251, %serial_fallback4312 ], [ %255, %class_fallback4384 ], [ %256, %serial_fallback4385 ], [ %259, %serial_fallback4431 ], [ %268, %serial_fallback4529 ], [ %273, %serial_fallback4590 ], [ %283, %serial_fallback4737 ], [ %288, %serial_fallback4798 ], [ %298, %serial_fallback4945 ], [ %303, %serial_fallback5006 ], [ %stack_load5104, %continue5070 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !21

check_class_id5074:                               ; preds = %continue5007
  %class_pos5076 = getelementptr %"struct.rubinius::Object"* %self5066, i32 0, i32 0, i32 1, !dbg !21
  %ref_class5077 = load %"struct.rubinius::Class"** %class_pos5076, !dbg !21
  %class_id_pos5078 = getelementptr %"struct.rubinius::Class"* %ref_class5077, i32 0, i32 4, !dbg !21
  %class_id5079 = load i32* %class_id_pos5078, !dbg !21
  %check_class_id5080 = icmp eq i32 %class_id5079, 1285, !dbg !21
  br i1 %check_class_id5080, label %correct_class5075, label %visit_push_ivar_fallback5069, !dbg !21

correct_class5075:                                ; preds = %check_class_id5074
  %obj_array5081 = bitcast %"struct.rubinius::Object"* %self5066 to %"struct.rubinius::Object"**, !dbg !21
  %field_pos5082 = getelementptr %"struct.rubinius::Object"** %obj_array5081, i32 5, !dbg !21
  store %"struct.rubinius::Object"* %stack_load5068, %"struct.rubinius::Object"** %field_pos5082, !dbg !21
  %cast5083 = ptrtoint %"struct.rubinius::Object"* %stack_load5068 to i64, !dbg !21
  %masked5084 = and i64 %cast5083, 3, !dbg !21
  %is_reference5085 = icmp eq i64 %masked5084, 0, !dbg !21
  br i1 %is_reference5085, label %reference_obj5086, label %done5089, !dbg !21

visit_push_ivar_fallback5069:                     ; preds = %check_class_id5074, %continue5007
  %ivar5099 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self5066, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load5068), !dbg !21
  %null_check5102 = icmp eq %"struct.rubinius::Object"* %ivar5099, null, !dbg !21
  br i1 %null_check5102, label %bail_out, label %check_active5101, !dbg !21

reference_obj5086:                                ; preds = %correct_class5075
  %object_memory_mark5090 = load i32* inttoptr (i64 22565880 to i32*), !dbg !21
  %word_pos5091 = getelementptr %"struct.rubinius::Object"* %self5066, i32 0, i32 0, i32 0, i32 0, !dbg !21
  %flags5092 = load i64* %word_pos5091, !dbg !21
  %mark_mask5093 = and i64 %flags5092, 3670016, !dbg !21
  %scan_mark5094 = add i32 %object_memory_mark5090, 1, !dbg !21
  %307 = zext i32 %scan_mark5094 to i64, !dbg !21
  %lshr5095 = shl i64 %307, 19, !dbg !21
  %is_scanned5096 = icmp eq i64 %mark_mask5093, %lshr5095, !dbg !21
  br i1 %is_scanned5096, label %run_barrier5088, label %object_not_scanned5087, !dbg !21

object_not_scanned5087:                           ; preds = %reference_obj5086
  %zone_mask5097 = and i64 %flags5092, 768, !dbg !21
  %is_young5098 = icmp eq i64 %zone_mask5097, 512, !dbg !21
  br i1 %is_young5098, label %done5089, label %run_barrier5088, !dbg !21

run_barrier5088:                                  ; preds = %object_not_scanned5087, %reference_obj5086
  %308 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self5066, %"struct.rubinius::Object"* %stack_load5068), !dbg !21
  br label %done5089, !dbg !21

done5089:                                         ; preds = %run_barrier5088, %object_not_scanned5087, %correct_class5075
  br label %continue5070, !dbg !21

continue5100:                                     ; preds = %check_active5101
  br label %continue5070, !dbg !21

check_active5101:                                 ; preds = %visit_push_ivar_fallback5069
  br label %continue5100, !dbg !21

ret_null5105:                                     ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !21

prologue_check:                                   ; preds = %bottom1
  %ci5110 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !21
  %309 = icmp eq %"struct.rubinius::Object"* %ci5110, null, !dbg !21
  br i1 %309, label %ret_null5105, label %method_body, !dbg !21
}

[[[ LLVM Optimized IR: _X_Planet#move_from_i@2 ]]]

define %"struct.rubinius::Object"* @"_X_Planet#move_from_i@2"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !19
  %valid_flag = alloca i1, align 1, !dbg !19
  %cfstk5124 = alloca [25 x %"struct.rubinius::Object"*], align 8, !dbg !19
  %var_mem5125 = alloca [18 x %"struct.rubinius::Object"*], align 8, !dbg !19
  %call_frame = bitcast [25 x %"struct.rubinius::Object"*]* %cfstk5124 to %"struct.rubinius::CallFrame"*, !dbg !19
  %stack = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 9, !dbg !19
  %vars = bitcast [18 x %"struct.rubinius::Object"*]* %var_mem5125 to %"struct.rubinius::StackVariables"*, !dbg !19
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !19
  %arg.total = load i32* %total_pos, align 4, !dbg !19
  %arg_cmp = icmp eq i32 %arg.total, 4, !dbg !19
  %cfstk525126 = alloca [22 x %"struct.rubinius::Object"*], align 8
  %var_mem555127 = alloca [11 x %"struct.rubinius::Object"*], align 8
  %cfstk24545128 = alloca [13 x %"struct.rubinius::Object"*], align 8
  %var_mem24575129 = alloca [7 x %"struct.rubinius::Object"*], align 8
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !19

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 4), !dbg !19
  br label %return_pad, !dbg !19

import_args:                                      ; preds = %entry
  %0 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 3, !dbg !19
  %1 = getelementptr inbounds [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 0, !dbg !19
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !19
  %2 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 8, !dbg !19
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !19
  %3 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 2, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !19
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !19
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !19
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !19
  %5 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 1, !dbg !19
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !19
  %6 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 4, !dbg !19
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !19
  store i32 40, i32* %7, align 8, !dbg !19
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !19
  store i32 0, i32* %8, align 4, !dbg !19
  %9 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 7, !dbg !19
  %vars.c = bitcast [18 x %"struct.rubinius::Object"*]* %var_mem5125 to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !19
  %10 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 140495695135376 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !19
  br label %stack_nil, !dbg !19

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %11 = sext i32 %counter_alloca.0 to i64, !dbg !19
  %stack.sum = add i64 %11, 9, !dbg !19
  %stack_pos = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 %stack.sum, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !19
  %added = add i32 %counter_alloca.0, 1, !dbg !19
  %loop_check = icmp eq i32 %added, 16, !dbg !19
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !19

bottom:                                           ; preds = %stack_nil
  %12 = getelementptr inbounds [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 0, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %12, align 8, !dbg !19
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !19
  %args.recv = load %"struct.rubinius::Object"** %13, align 8, !dbg !19, !rbx-classid !20
  %14 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 2, !dbg !19
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %14, align 8, !dbg !19
  %15 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 4, !dbg !19
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %15, align 8, !dbg !19
  %16 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !19
  %args.block = load %"struct.rubinius::Object"** %16, align 8, !dbg !19
  %17 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 3, !dbg !19
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %17, align 8, !dbg !19
  %18 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 1, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %18, align 8, !dbg !19
  %19 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %19, align 8, !dbg !19
  br label %locactx_nil, !dbg !19

locactx_nil:                                      ; preds = %locactx_nil, %bottom
  %counter_alloca.1 = phi i32 [ 0, %bottom ], [ %added4, %locactx_nil ]
  %20 = sext i32 %counter_alloca.1 to i64, !dbg !19
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %20, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, align 8, !dbg !19
  %added4 = add i32 %counter_alloca.1, 1, !dbg !19
  %loop_check5 = icmp eq i32 %added4, 12, !dbg !19
  br i1 %loop_check5, label %bottom1, label %locactx_nil, !dbg !19

bottom1:                                          ; preds = %locactx_nil
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !19
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !19
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !19
  %21 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 6, !dbg !19
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %21, align 8, !dbg !19
  %arg_val_offset6 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 1, !dbg !19
  %arg_val7 = load %"struct.rubinius::Object"** %arg_val_offset6, align 8, !dbg !19
  %22 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 7, !dbg !19
  store %"struct.rubinius::Object"* %arg_val7, %"struct.rubinius::Object"** %22, align 8, !dbg !19
  %arg_val_offset9 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 2, !dbg !19
  %arg_val10 = load %"struct.rubinius::Object"** %arg_val_offset9, align 8, !dbg !19
  %23 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 8, !dbg !19
  store %"struct.rubinius::Object"* %arg_val10, %"struct.rubinius::Object"** %23, align 8, !dbg !19
  %arg_val_offset12 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 3, !dbg !19
  %arg_val13 = load %"struct.rubinius::Object"** %arg_val_offset12, align 8, !dbg !19
  %24 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 9, !dbg !19
  store %"struct.rubinius::Object"* %arg_val13, %"struct.rubinius::Object"** %24, align 8, !dbg !19
  %25 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !21
  %vm_jit5106 = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !21
  %26 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit5106, i64 0, i32 1, !dbg !21
  %stack_limit = load i64* %26, align 8, !dbg !21
  %stack_end = ptrtoint [25 x %"struct.rubinius::Object"*]* %cfstk5124 to i64, !dbg !21
  %27 = icmp ult i64 %stack_end, %stack_limit, !dbg !21
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit5106, i64 0, i32 5, !dbg !21
  %check_interrupts5107 = load i8* %28, align 1, !dbg !21
  %check_global_interrupts5108 = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !21
  %has_interrupts = or i8 %check_global_interrupts5108, %check_interrupts5107, !dbg !21
  %needs_interrupts5109 = icmp ne i8 %has_interrupts, 0, !dbg !21
  %needs_check = or i1 %needs_interrupts5109, %27, !dbg !21
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !21

bail_out:                                         ; preds = %visit_push_ivar_fallback5069, %class_fallback5005, %class_fallback4944, %visit_push_ivar_fallback4861, %class_fallback4797, %class_fallback4736, %visit_push_ivar_fallback4653, %class_fallback4589, %class_fallback4528, %interrupts, %class_fallback4430, %class_fallback4311, %class_fallback4250, %class_fallback4110, %class_fallback4049, %class_fallback3909, %class_fallback3848, %visit_push_ivar_fallback3789, %class_fallback3725, %class_fallback3664, %visit_push_ivar_fallback3601, %class_fallback3537, %class_fallback3476, %visit_push_ivar_fallback3424, %class_fallback3360, %class_fallback3299, %class_fallback3183, %class_fallback3103, %class_fallback3014, %class_fallback2953, %class_fallback2889, %return_pad2445, %class_fallback2365, %class_fallback2304, %class_fallback2238, %class_fallback2177, %class_fallback2111, %use_call2092, %class_fallback2019, %class_fallback1916, %class_fallback1822, %return_pad45, %class_fallback
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !19

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !19
  br label %return_pad, !dbg !19

method_body:                                      ; preds = %interrupts, %continue4432, %prologue_check, %bottom1
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !19
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !19
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !19
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !19
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !19
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !19
  %local = load %"struct.rubinius::Object"** %24, align 8, !dbg !22, !rbx-classid !23
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %local18 = load %"struct.rubinius::Object"** %22, align 8, !dbg !22, !rbx-classid !24
  %stack_pos19 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 10, !dbg !22
  store %"struct.rubinius::Object"* %local18, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !22
  %cast = ptrtoint %"struct.rubinius::Object"* %local to i64, !dbg !22
  %cast23 = ptrtoint %"struct.rubinius::Object"* %local18 to i64, !dbg !22
  %fixnums_anded = and i64 %cast23, 1
  %masked = and i64 %fixnums_anded, %cast
  %is_fixnum = icmp eq i64 %masked, 0, !dbg !22
  br i1 %is_fixnum, label %class_fallback, label %push_le, !dbg !22

class_fallback:                                   ; preds = %method_body
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !22
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !22
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !22
  store i32 1, i32* %out_args_total, align 8, !dbg !22
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !22
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !22
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 26548440 to %"struct.rubinius::CallSite"**), align 8, !dbg !22
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !22
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !22
  store i32 4, i32* %8, align 4, !dbg !22
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !22
  %null_check = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !22
  br i1 %null_check, label %bail_out, label %continue, !dbg !22

continue:                                         ; preds = %class_fallback, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %29, %push_le ], [ %call_site_execute, %class_fallback ], !dbg !22
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %as_int = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !22
  %and = and i64 %as_int, 15, !dbg !22
  %is_true = icmp eq i64 %and, 10, !dbg !22
  br i1 %is_true, label %ip274, label %ip9, !dbg !22

push_le:                                          ; preds = %method_body
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %local, %local18, !dbg !22
  %29 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !22
  br label %continue, !dbg !22

ip9:                                              ; preds = %continue
  %local32 = load %"struct.rubinius::Object"** %21, align 8, !dbg !25, !rbx-classid !26
  store %"struct.rubinius::Object"* %local32, %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  %local35 = load %"struct.rubinius::Object"** %24, align 8, !dbg !25, !rbx-classid !23
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !25
  %cast42 = ptrtoint %"struct.rubinius::Object"* %local32 to i64, !dbg !25
  %masked43 = and i64 %cast42, 3, !dbg !25
  %is_reference = icmp eq i64 %masked43, 0, !dbg !25
  br i1 %is_reference, label %check_class_id, label %class_fallback37, !dbg !25

check_class_id:                                   ; preds = %ip9
  %class_pos = getelementptr %"struct.rubinius::Object"* %local32, i64 0, i32 0, i32 1, !dbg !25
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !25
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !25
  %class_id = load i32* %class_id_pos, align 4, !dbg !25
  %check_class_id44 = icmp eq i32 %class_id, 6, !dbg !25
  br i1 %check_class_id44, label %correct_class, label %class_fallback37, !dbg !25

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !25
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !25
  %check_serial_id = icmp eq i32 %serial_id, 249, !dbg !25
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback38, !dbg !25

class_fallback37:                                 ; preds = %check_class_id, %ip9
  store i32 13, i32* %8, align 4, !dbg !25
  %30 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !25
  br label %return_pad, !dbg !25

correct_serial:                                   ; preds = %correct_class
  %call_frame53 = bitcast [22 x %"struct.rubinius::Object"*]* %cfstk525126 to %"struct.rubinius::CallFrame"*, !dbg !27
  %stack54 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 9, !dbg !27
  %31 = getelementptr inbounds [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 0, !dbg !27
  %call_frame.c = bitcast [25 x %"struct.rubinius::Object"*]* %cfstk5124 to %"struct.rubinius::Object"*, !dbg !27
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %31, align 8, !dbg !27
  %32 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 2, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 140495695189184 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %32, align 8, !dbg !27
  %compiled_code57 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140495695189184 to %"struct.rubinius::CompiledCode"**), align 64, !dbg !27
  %33 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 3, !dbg !27
  %compiled_code57.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code57, i64 0, i32 0, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %compiled_code57.c, %"struct.rubinius::Object"** %33, align 8, !dbg !27
  %constant_scope_pos58 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code57, i64 0, i32 13, !dbg !27
  %constant_scope59 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos58, align 8, !dbg !27
  %34 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 1, !dbg !27
  %constant_scope59.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope59 to %"struct.rubinius::Object"*, !dbg !27
  store %"struct.rubinius::Object"* %constant_scope59.c, %"struct.rubinius::Object"** %34, align 8, !dbg !27
  %35 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 4, !dbg !27
  %36 = bitcast %"struct.rubinius::Object"** %35 to i32*, !dbg !27
  store i32 12, i32* %36, align 8, !dbg !27
  %37 = getelementptr %"struct.rubinius::CallFrame"* %call_frame53, i64 0, i32 5, !dbg !27
  store i32 0, i32* %37, align 4, !dbg !27
  %38 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 7, !dbg !27
  %vars56.c = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem555127 to %"struct.rubinius::Object"*, !dbg !27
  store %"struct.rubinius::Object"* %vars56.c, %"struct.rubinius::Object"** %38, align 8, !dbg !27
  br label %stack_nil60, !dbg !27

serial_fallback38:                                ; preds = %correct_class
  store i32 13, i32* %8, align 4, !dbg !25
  %39 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !25
  br label %return_pad, !dbg !25

stack_nil60:                                      ; preds = %stack_nil60, %correct_serial
  %counter_alloca.2 = phi i32 [ 0, %correct_serial ], [ %added64, %stack_nil60 ]
  %40 = sext i32 %counter_alloca.2 to i64, !dbg !27
  %stack54.sum = add i64 %40, 9, !dbg !27
  %stack_pos63 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 %stack54.sum, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos63, align 8, !dbg !27
  %added64 = add i32 %counter_alloca.2, 1, !dbg !27
  %loop_check65 = icmp eq i32 %added64, 13, !dbg !27
  br i1 %loop_check65, label %bottom61, label %stack_nil60, !dbg !27

bottom61:                                         ; preds = %stack_nil60
  %module = load %"struct.rubinius::Module"** inttoptr (i64 140495695189200 to %"struct.rubinius::Module"**), align 16, !dbg !27
  %41 = getelementptr inbounds [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 0, !dbg !27
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %41, align 8, !dbg !27
  %42 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 2, !dbg !27
  store %"struct.rubinius::Object"* %local32, %"struct.rubinius::Object"** %42, align 8, !dbg !27
  %43 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 4, !dbg !27
  %module.c = getelementptr inbounds %"struct.rubinius::Module"* %module, i64 0, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %module.c, %"struct.rubinius::Object"** %43, align 8, !dbg !27
  %44 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 3, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %44, align 8, !dbg !27
  %45 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 1, !dbg !27
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %45, align 8, !dbg !27
  %46 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 5, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %46, align 8, !dbg !27
  %47 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 6, !dbg !27
  %48 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 7, !dbg !27
  %49 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 8, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %49, align 8, !dbg !27
  %50 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 9, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %50, align 8, !dbg !27
  %51 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem555127, i64 0, i64 10, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %51, align 8, !dbg !27
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %47, align 8, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %48, align 8, !dbg !27
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack54, align 8, !dbg !28
  %stack_pos100 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 10, !dbg !29
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !29
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !29
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !29
  %constant_scope101 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !29
  %52 = load %"struct.rubinius::Object"** %34, align 8, !dbg !29
  %frame_scope = bitcast %"struct.rubinius::Object"* %52 to %"struct.rubinius::ConstantScope"*, !dbg !29
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope101, %frame_scope, !dbg !29
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !29

bail_out72:                                       ; preds = %continue593, %ip451, %continue1711, %use_call1710, %use_call1685, %is_exception1626, %ip386, %continue1564, %use_call1563, %use_call1471, %ip345, %ip334, %continue1375, %use_call1374, %use_call1298, %check_active1261, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %check_active1117, %continue1096, %use_call1095, %ip219, %ip205, %ip195, %ip183, %check_active966, %continue945, %use_call944, %ip158, %continue885, %use_call884, %ip139, %continue821, %use_call820, %use_call796, %is_exception, %class_fallback670, %class_fallback632, %class_fallback591, %ip538, %class_fallback526, %class_fallback482, %class_fallback441, %ip492, %ip483, %class_fallback359, %class_fallback315, %continue282, %use_call281, %use_call231, %class_fallback177, %class_fallback142, %use_call
  %rth73 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53), !dbg !27
  br i1 %rth73, label %ret_raise_val74, label %return_pad45, !dbg !27

ret_raise_val74:                                  ; preds = %bail_out72
  %crv76 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !27
  br label %return_pad45, !dbg !27

check_serial:                                     ; preds = %bottom61
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !29
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !29
  %serial = load i32* %serial_pos, align 4, !dbg !29
  %use_cache103 = icmp eq i32 %global_serial, %serial, !dbg !29
  br i1 %use_cache103, label %continue102, label %use_call, !dbg !29

use_call:                                         ; preds = %check_serial, %bottom61
  store i32 11, i32* %37, align 4, !dbg !29
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564144 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !29
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !29
  br i1 %null_check106, label %bail_out72, label %continue102, !dbg !29

continue102:                                      ; preds = %check_serial, %use_call
  %stack_pos107 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 11, !dbg !29
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !29
  %cast121 = ptrtoint %"struct.rubinius::Object"* %local35 to i64, !dbg !29
  %masked122 = and i64 %cast121, 1, !dbg !29
  %is_fixnum123 = icmp ne i64 %masked122, 0, !dbg !29
  %is_fixnum124 = select i1 %is_fixnum123, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !29
  store %"struct.rubinius::Object"* %is_fixnum124, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !29
  %as_int128 = ptrtoint %"struct.rubinius::Object"* %is_fixnum124 to i64, !dbg !29
  %and129 = and i64 %as_int128, 10, !dbg !29
  %is_true130 = icmp eq i64 %and129, 10, !dbg !29
  br i1 %is_true130, label %ip149, label %ip19, !dbg !29

ip19:                                             ; preds = %continue102
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %49, align 8, !dbg !30
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack54, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !31
  %is_fixnum153 = icmp eq i64 %masked122, 0, !dbg !31
  br i1 %is_fixnum153, label %class_fallback142, label %push_le154, !dbg !31

class_fallback142:                                ; preds = %ip19
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 1, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const159 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564280 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos160 = getelementptr %"struct.rubinius::CallSite"* %cache_const159, i64 0, i32 2, !dbg !31
  %execute161 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos160, align 8, !dbg !31
  store i32 28, i32* %37, align 4, !dbg !31
  %call_site_execute162 = call %"struct.rubinius::Object"* %execute161(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const159, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check164 = icmp eq %"struct.rubinius::Object"* %call_site_execute162, null, !dbg !31
  br i1 %null_check164, label %bail_out72, label %continue144, !dbg !31

continue144:                                      ; preds = %class_fallback142, %push_le154
  %send_result165 = phi %"struct.rubinius::Object"* [ %53, %push_le154 ], [ %call_site_execute162, %class_fallback142 ], !dbg !31
  store %"struct.rubinius::Object"* %send_result165, %"struct.rubinius::Object"** %stack54, align 8, !dbg !31
  %as_int169 = ptrtoint %"struct.rubinius::Object"* %send_result165 to i64, !dbg !31
  %and170 = and i64 %as_int169, 15, !dbg !31
  %is_true171 = icmp eq i64 %and170, 10, !dbg !31
  br i1 %is_true171, label %ip44, label %ip33, !dbg !31

push_le154:                                       ; preds = %ip19
  %fixnum.lt155 = icmp slt %"struct.rubinius::Object"* %local35, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !31
  %53 = select i1 %fixnum.lt155, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !31
  br label %continue144, !dbg !31

ip33:                                             ; preds = %continue144
  %local174 = load %"struct.rubinius::Object"** %49, align 8, !dbg !31, !rbx-classid !32
  store %"struct.rubinius::Object"* %local174, %"struct.rubinius::Object"** %stack54, align 8, !dbg !31
  %self = load %"struct.rubinius::Object"** %42, align 8, !dbg !31
  %field_pos5130 = getelementptr %"struct.rubinius::Object"* %self, i64 1, !dbg !31
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos5130 to %"struct.rubinius::Object"**, !dbg !31
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !31
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !31
  %cast184 = ptrtoint %"struct.rubinius::Object"* %local174 to i64, !dbg !31
  %cast185 = ptrtoint %"struct.rubinius::Object"* %field to i64, !dbg !31
  %fixnums_anded186 = and i64 %cast185, 1, !dbg !31
  %masked187 = and i64 %fixnums_anded186, %cast184, !dbg !31
  %is_fixnum188 = icmp eq i64 %masked187, 0, !dbg !31
  br i1 %is_fixnum188, label %class_fallback177, label %push_add, !dbg !31

class_fallback177:                                ; preds = %ip33
  store %"struct.rubinius::Object"* %local174, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 1, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const195 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564352 to %"struct.rubinius::CallSite"**), align 128, !dbg !31
  %execute_pos196 = getelementptr %"struct.rubinius::CallSite"* %cache_const195, i64 0, i32 2, !dbg !31
  %execute197 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos196, align 8, !dbg !31
  store i32 37, i32* %37, align 4, !dbg !31
  %call_site_execute198 = call %"struct.rubinius::Object"* %execute197(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const195, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check200 = icmp eq %"struct.rubinius::Object"* %call_site_execute198, null, !dbg !31
  br i1 %null_check200, label %bail_out72, label %continue179, !dbg !31

continue179:                                      ; preds = %class_fallback177, %bignum, %tagnow
  %send_result201 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute198, %class_fallback177 ], !dbg !31
  store %"struct.rubinius::Object"* %send_result201, %"struct.rubinius::Object"** %stack54, align 8, !dbg !31
  store %"struct.rubinius::Object"* %send_result201, %"struct.rubinius::Object"** %49, align 8, !dbg !31
  br label %ip45, !dbg !31

push_add:                                         ; preds = %ip33
  %ashr = ashr i64 %cast184, 1, !dbg !31
  %ashr191 = ashr i64 %cast185, 1, !dbg !31
  %fixnum.add = add i64 %ashr, %ashr191, !dbg !31
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !31
  %54 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !31
  br i1 %54, label %tagnow, label %bignum, !dbg !31

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !31
  %or = or i64 %shl, 1, !dbg !31
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !31
  br label %continue179, !dbg !31

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !31
  br label %continue179, !dbg !31

ip45:                                             ; preds = %ip44, %continue179
  %local208 = load %"struct.rubinius::Object"** %48, align 8, !dbg !33, !rbx-classid !24
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack54, align 8, !dbg !33
  %as_int212 = ptrtoint %"struct.rubinius::Object"* %local208 to i64, !dbg !33
  %and213 = and i64 %as_int212, 15, !dbg !33
  %is_true214 = icmp eq i64 %and213, 10, !dbg !33
  br i1 %is_true214, label %ip74, label %ip50, !dbg !33

ip50:                                             ; preds = %ip45
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack54, align 8, !dbg !34
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !34
  %constant_cache223 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**), align 256, !dbg !34
  %constant_cache_pos224 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache223, i64 0, i32 4, !dbg !34
  %constant_scope225 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos224, align 8, !dbg !34
  %55 = load %"struct.rubinius::Object"** %34, align 8, !dbg !34
  %frame_scope227 = bitcast %"struct.rubinius::Object"* %55 to %"struct.rubinius::ConstantScope"*, !dbg !34
  %same_scope228 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope225, %frame_scope227, !dbg !34
  br i1 %same_scope228, label %check_serial229, label %use_call231, !dbg !34

check_serial229:                                  ; preds = %ip50
  %global_serial222 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !34
  %serial_pos233 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache223, i64 0, i32 7, !dbg !34
  %serial234 = load i32* %serial_pos233, align 4, !dbg !34
  %use_cache235 = icmp eq i32 %global_serial222, %serial234, !dbg !34
  br i1 %use_cache235, label %continue232, label %use_call231, !dbg !34

use_call231:                                      ; preds = %check_serial229, %ip50
  store i32 53, i32* %37, align 4, !dbg !34
  %push_const_fast238 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564480 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !34
  %null_check241 = icmp eq %"struct.rubinius::Object"* %push_const_fast238, null, !dbg !34
  br i1 %null_check241, label %bail_out72, label %continue232, !dbg !34

continue232:                                      ; preds = %check_serial229, %use_call231
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !34
  %masked258 = and i64 %as_int212, 1, !dbg !34
  %is_fixnum259 = icmp ne i64 %masked258, 0, !dbg !34
  %. = select i1 %is_fixnum259, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !34
  store %"struct.rubinius::Object"* %., %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !34
  %as_int264 = ptrtoint %"struct.rubinius::Object"* %. to i64, !dbg !34
  %and265 = and i64 %as_int264, 10, !dbg !34
  %is_true266 = icmp eq i64 %and265, 10, !dbg !34
  br i1 %is_true266, label %ip59, label %ip70, !dbg !34

ip59:                                             ; preds = %continue232
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !34
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack54, align 8, !dbg !34
  store %"struct.rubinius::Object"* %local208, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !34
  %constant_cache273 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !34
  %constant_cache_pos274 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i64 0, i32 4, !dbg !34
  %constant_scope275 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos274, align 8, !dbg !34
  %same_scope278 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope275, %frame_scope227, !dbg !34
  br i1 %same_scope278, label %check_serial279, label %use_call281, !dbg !34

check_serial279:                                  ; preds = %ip59
  %global_serial272 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !34
  %serial_pos283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i64 0, i32 7, !dbg !34
  %serial284 = load i32* %serial_pos283, align 4, !dbg !34
  %use_cache285 = icmp eq i32 %global_serial272, %serial284, !dbg !34
  br i1 %use_cache285, label %use_cache280, label %use_call281, !dbg !34

use_cache280:                                     ; preds = %check_serial279
  %value_pos286 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache273, i64 0, i32 2, !dbg !34
  %cached_value287 = load %"struct.rubinius::Object"** %value_pos286, align 8, !dbg !34
  br label %continue282, !dbg !34

use_call281:                                      ; preds = %check_serial279, %ip59
  store i32 63, i32* %37, align 4, !dbg !34
  %push_const_fast288 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !34
  %null_check291 = icmp eq %"struct.rubinius::Object"* %push_const_fast288, null, !dbg !34
  br i1 %null_check291, label %bail_out72, label %continue282, !dbg !34

continue282:                                      ; preds = %use_call281, %use_cache280
  %constant292 = phi %"struct.rubinius::Object"* [ %cached_value287, %use_cache280 ], [ %push_const_fast288, %use_call281 ], !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %constant292, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !34
  %stack_pos294 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 12, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos294, align 8, !dbg !34
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !34
  store i32 3, i32* %out_args_total, align 8, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !34
  %cache_const298 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564592 to %"struct.rubinius::CallSite"**), align 16, !dbg !34
  %execute_pos299 = getelementptr %"struct.rubinius::CallSite"* %cache_const298, i64 0, i32 2, !dbg !34
  %execute300 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos299, align 8, !dbg !34
  store i32 67, i32* %37, align 4, !dbg !34
  %call_site_execute301 = call %"struct.rubinius::Object"* %execute300(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const298, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check304 = icmp eq %"struct.rubinius::Object"* %call_site_execute301, null, !dbg !34
  br i1 %null_check304, label %bail_out72, label %check_active303, !dbg !34

ip70:                                             ; preds = %continue232, %check_active303
  %stack_load308 = phi %"struct.rubinius::Object"* [ %local208, %continue232 ], [ %call_site_execute301, %check_active303 ]
  store %"struct.rubinius::Object"* %stack_load308, %"struct.rubinius::Object"** %50, align 8, !dbg !34
  br label %ip459, !dbg !36

check_active303:                                  ; preds = %continue282
  store %"struct.rubinius::Object"* %call_site_execute301, %"struct.rubinius::Object"** %stack54, align 8, !dbg !34
  br label %ip70, !dbg !34

ip459:                                            ; preds = %ip382, %check_active1273, %ip70
  %local312 = phi %"struct.rubinius::Object"* [ %stack_load1590, %ip382 ], [ %call_site_execute1271, %check_active1273 ], [ %stack_load308, %ip70 ]
  store %"struct.rubinius::Object"* %local312, %"struct.rubinius::Object"** %stack54, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !37
  %cast320 = ptrtoint %"struct.rubinius::Object"* %local312 to i64, !dbg !37
  %fixnums_anded324 = and i64 %cast320, 1
  %is_fixnum326 = icmp eq i64 %fixnums_anded324, 0, !dbg !37
  br i1 %is_fixnum326, label %class_fallback315, label %push_le327, !dbg !37

class_fallback315:                                ; preds = %ip459
  store %"struct.rubinius::Object"* %local312, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !37
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !37
  store i32 1, i32* %out_args_total, align 8, !dbg !37
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !37
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !37
  %cache_const332 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567760 to %"struct.rubinius::CallSite"**), align 16, !dbg !37
  %execute_pos333 = getelementptr %"struct.rubinius::CallSite"* %cache_const332, i64 0, i32 2, !dbg !37
  %execute334 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos333, align 8, !dbg !37
  store i32 463, i32* %37, align 4, !dbg !37
  %call_site_execute335 = call %"struct.rubinius::Object"* %execute334(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const332, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !37
  %null_check337 = icmp eq %"struct.rubinius::Object"* %call_site_execute335, null, !dbg !37
  br i1 %null_check337, label %bail_out72, label %continue317, !dbg !37

continue317:                                      ; preds = %class_fallback315, %push_le327
  %send_result338 = phi %"struct.rubinius::Object"* [ %56, %push_le327 ], [ %call_site_execute335, %class_fallback315 ], !dbg !37
  %as_int342 = ptrtoint %"struct.rubinius::Object"* %send_result338 to i64, !dbg !37
  %and343 = and i64 %as_int342, 15, !dbg !37
  %is_true344 = icmp eq i64 %and343, 10, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !37
  br i1 %is_true344, label %ip472, label %return_pad45, !dbg !37

push_le327:                                       ; preds = %ip459
  %fixnum.lt328 = icmp slt %"struct.rubinius::Object"* %local312, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !37
  %56 = select i1 %fixnum.lt328, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !37
  br label %continue317, !dbg !37

ip472:                                            ; preds = %continue317
  %local351 = load %"struct.rubinius::Object"** %49, align 8, !dbg !38, !rbx-classid !32
  store %"struct.rubinius::Object"* %local351, %"struct.rubinius::Object"** %stack54, align 8, !dbg !38
  %self354 = load %"struct.rubinius::Object"** %42, align 8, !dbg !38
  %field_pos3565147 = getelementptr %"struct.rubinius::Object"* %self354, i64 1, !dbg !38
  %field_pos356 = bitcast %"struct.rubinius::Object"* %field_pos3565147 to %"struct.rubinius::Object"**, !dbg !38
  %field357 = load %"struct.rubinius::Object"** %field_pos356, align 8, !dbg !38
  store %"struct.rubinius::Object"* %field357, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !38
  %cast364 = ptrtoint %"struct.rubinius::Object"* %local351 to i64, !dbg !38
  %cast367 = ptrtoint %"struct.rubinius::Object"* %field357 to i64, !dbg !38
  %fixnums_anded368 = and i64 %cast367, 1
  %masked369 = and i64 %fixnums_anded368, %cast364
  %is_fixnum370 = icmp eq i64 %masked369, 0, !dbg !38
  br i1 %is_fixnum370, label %class_fallback359, label %push_le371, !dbg !38

class_fallback359:                                ; preds = %ip472
  store %"struct.rubinius::Object"* %local351, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !38
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !38
  store i32 1, i32* %out_args_total, align 8, !dbg !38
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !38
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !38
  %cache_const375 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567880 to %"struct.rubinius::CallSite"**), align 8, !dbg !38
  %execute_pos376 = getelementptr %"struct.rubinius::CallSite"* %cache_const375, i64 0, i32 2, !dbg !38
  %execute377 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos376, align 8, !dbg !38
  store i32 478, i32* %37, align 4, !dbg !38
  %call_site_execute378 = call %"struct.rubinius::Object"* %execute377(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const375, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !38
  %null_check380 = icmp eq %"struct.rubinius::Object"* %call_site_execute378, null, !dbg !38
  br i1 %null_check380, label %bail_out72, label %class_fallback359.continue361_crit_edge, !dbg !38

class_fallback359.continue361_crit_edge:          ; preds = %class_fallback359
  %local438.pre = load %"struct.rubinius::Object"** %49, align 8, !dbg !39
  br label %continue361, !dbg !38

continue361:                                      ; preds = %class_fallback359.continue361_crit_edge, %push_le371
  %local438 = phi %"struct.rubinius::Object"* [ %local351, %push_le371 ], [ %local438.pre, %class_fallback359.continue361_crit_edge ]
  %send_result381 = phi %"struct.rubinius::Object"* [ %57, %push_le371 ], [ %call_site_execute378, %class_fallback359.continue361_crit_edge ], !dbg !38
  %as_int385 = ptrtoint %"struct.rubinius::Object"* %send_result381 to i64, !dbg !38
  %and386 = and i64 %as_int385, 15, !dbg !38
  %is_true387 = icmp eq i64 %and386, 10, !dbg !38
  store %"struct.rubinius::Object"* %local438, %"struct.rubinius::Object"** %stack54, align 8, !dbg !39
  br i1 %is_true387, label %ip508, label %ip483, !dbg !38

push_le371:                                       ; preds = %ip472
  %fixnum.ge = icmp sge %"struct.rubinius::Object"* %local351, %field357, !dbg !38
  %57 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !38
  br label %continue361, !dbg !38

ip483:                                            ; preds = %continue361
  %self393 = load %"struct.rubinius::Object"** %42, align 8, !dbg !40
  %field_pos3955148 = getelementptr %"struct.rubinius::Object"* %self393, i64 1, !dbg !40
  %field_pos395 = bitcast %"struct.rubinius::Object"* %field_pos3955148 to %"struct.rubinius::Object"**, !dbg !40
  %field396 = load %"struct.rubinius::Object"** %field_pos395, align 8, !dbg !40
  store %"struct.rubinius::Object"* %field396, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local438, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 1, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const401 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567952 to %"struct.rubinius::CallSite"**), align 16, !dbg !40
  %execute_pos402 = getelementptr %"struct.rubinius::CallSite"* %cache_const401, i64 0, i32 2, !dbg !40
  %execute403 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos402, align 8, !dbg !40
  store i32 487, i32* %37, align 4, !dbg !40
  %call_site_execute404 = call %"struct.rubinius::Object"* %execute403(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const401, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check407 = icmp eq %"struct.rubinius::Object"* %call_site_execute404, null, !dbg !40
  br i1 %null_check407, label %bail_out72, label %check_active406, !dbg !40

check_active406:                                  ; preds = %ip483
  store %"struct.rubinius::Object"* %call_site_execute404, %"struct.rubinius::Object"** %stack54, align 8, !dbg !40
  %as_int411 = ptrtoint %"struct.rubinius::Object"* %call_site_execute404 to i64, !dbg !40
  %and412 = and i64 %as_int411, 15, !dbg !40
  %is_true413 = icmp eq i64 %and412, 10, !dbg !40
  br i1 %is_true413, label %ip502, label %ip492, !dbg !40

ip492:                                            ; preds = %check_active406
  %self415 = load %"struct.rubinius::Object"** %42, align 8, !dbg !40, !rbx-classid !41
  store %"struct.rubinius::Object"* %self415, %"struct.rubinius::Object"** %stack54, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !40
  store %"struct.rubinius::Object"* %self415, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 2, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const422 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568024 to %"struct.rubinius::CallSite"**), align 8, !dbg !40
  %execute_pos423 = getelementptr %"struct.rubinius::CallSite"* %cache_const422, i64 0, i32 2, !dbg !40
  %execute424 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos423, align 8, !dbg !40
  store i32 496, i32* %37, align 4, !dbg !40
  %call_site_execute425 = call %"struct.rubinius::Object"* %execute424(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const422, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check428 = icmp eq %"struct.rubinius::Object"* %call_site_execute425, null, !dbg !40
  br i1 %null_check428, label %bail_out72, label %check_active427, !dbg !40

ip502:                                            ; preds = %check_active406
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !42
  br label %return_pad45, !dbg !42

ip508:                                            ; preds = %continue361
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !39
  %cast446 = ptrtoint %"struct.rubinius::Object"* %local438 to i64, !dbg !39
  %fixnums_anded450 = and i64 %cast446, 1
  %is_fixnum452 = icmp eq i64 %fixnums_anded450, 0, !dbg !39
  br i1 %is_fixnum452, label %class_fallback441, label %push_le453, !dbg !39

check_active427:                                  ; preds = %ip492
  store %"struct.rubinius::Object"* %call_site_execute425, %"struct.rubinius::Object"** %stack54, align 8, !dbg !40
  br label %return_pad45, !dbg !40

class_fallback441:                                ; preds = %ip508
  store %"struct.rubinius::Object"* %local438, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !39
  store i32 1, i32* %out_args_total, align 8, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !39
  %cache_const458 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568160 to %"struct.rubinius::CallSite"**), align 32, !dbg !39
  %execute_pos459 = getelementptr %"struct.rubinius::CallSite"* %cache_const458, i64 0, i32 2, !dbg !39
  %execute460 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos459, align 8, !dbg !39
  store i32 513, i32* %37, align 4, !dbg !39
  %call_site_execute461 = call %"struct.rubinius::Object"* %execute460(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const458, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check463 = icmp eq %"struct.rubinius::Object"* %call_site_execute461, null, !dbg !39
  br i1 %null_check463, label %bail_out72, label %continue443, !dbg !39

continue443:                                      ; preds = %class_fallback441, %push_le453
  %send_result464 = phi %"struct.rubinius::Object"* [ %58, %push_le453 ], [ %call_site_execute461, %class_fallback441 ], !dbg !39
  %as_int468 = ptrtoint %"struct.rubinius::Object"* %send_result464 to i64, !dbg !39
  %and469 = and i64 %as_int468, 15, !dbg !39
  %is_true470 = icmp eq i64 %and469, 10, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !39
  br i1 %is_true470, label %ip522, label %return_pad45, !dbg !39

push_le453:                                       ; preds = %ip508
  %fixnum.lt454 = icmp slt %"struct.rubinius::Object"* %local438, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !39
  %58 = select i1 %fixnum.lt454, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !39
  br label %continue443, !dbg !39

ip522:                                            ; preds = %continue443
  %local477 = load %"struct.rubinius::Object"** %49, align 8, !dbg !43, !rbx-classid !32
  store %"struct.rubinius::Object"* %local477, %"struct.rubinius::Object"** %stack54, align 8, !dbg !43
  %local480 = load %"struct.rubinius::Object"** %50, align 8, !dbg !43, !rbx-classid !23
  store %"struct.rubinius::Object"* %local480, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !43
  %cast493 = ptrtoint %"struct.rubinius::Object"* %local477 to i64, !dbg !43
  %cast494 = ptrtoint %"struct.rubinius::Object"* %local480 to i64, !dbg !43
  %fixnums_anded495 = and i64 %cast494, 1, !dbg !43
  %masked496 = and i64 %fixnums_anded495, %cast493, !dbg !43
  %is_fixnum497 = icmp eq i64 %masked496, 0, !dbg !43
  br i1 %is_fixnum497, label %class_fallback482, label %push_add489, !dbg !43

class_fallback482:                                ; preds = %ip522
  store %"struct.rubinius::Object"* %local477, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !43
  store i32 1, i32* %out_args_total, align 8, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !43
  %cache_const512 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568280 to %"struct.rubinius::CallSite"**), align 8, !dbg !43
  %execute_pos513 = getelementptr %"struct.rubinius::CallSite"* %cache_const512, i64 0, i32 2, !dbg !43
  %execute514 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos513, align 8, !dbg !43
  store i32 528, i32* %37, align 4, !dbg !43
  %call_site_execute515 = call %"struct.rubinius::Object"* %execute514(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const512, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check517 = icmp eq %"struct.rubinius::Object"* %call_site_execute515, null, !dbg !43
  br i1 %null_check517, label %bail_out72, label %continue484, !dbg !43

continue484:                                      ; preds = %class_fallback482, %bignum491, %tagnow490
  %send_result518 = phi %"struct.rubinius::Object"* [ %big_value504, %bignum491 ], [ %as_obj507, %tagnow490 ], [ %call_site_execute515, %class_fallback482 ], !dbg !43
  store %"struct.rubinius::Object"* %send_result518, %"struct.rubinius::Object"** %stack54, align 8, !dbg !43
  %self521 = load %"struct.rubinius::Object"** %42, align 8, !dbg !43
  %field_pos5235149 = getelementptr %"struct.rubinius::Object"* %self521, i64 1, !dbg !43
  %field_pos523 = bitcast %"struct.rubinius::Object"* %field_pos5235149 to %"struct.rubinius::Object"**, !dbg !43
  %field524 = load %"struct.rubinius::Object"** %field_pos523, align 8, !dbg !43
  store %"struct.rubinius::Object"* %field524, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !43
  %cast531 = ptrtoint %"struct.rubinius::Object"* %send_result518 to i64, !dbg !43
  %cast534 = ptrtoint %"struct.rubinius::Object"* %field524 to i64, !dbg !43
  %fixnums_anded535 = and i64 %cast534, 1
  %masked536 = and i64 %fixnums_anded535, %cast531
  %is_fixnum537 = icmp eq i64 %masked536, 0, !dbg !43
  br i1 %is_fixnum537, label %class_fallback526, label %push_le538, !dbg !43

push_add489:                                      ; preds = %ip522
  %ashr499 = ashr i64 %cast493, 1, !dbg !43
  %ashr501 = ashr i64 %cast494, 1, !dbg !43
  %fixnum.add502 = add i64 %ashr499, %ashr501, !dbg !43
  %fixnum.add502.off = add i64 %fixnum.add502, 4611686018427387903, !dbg !43
  %59 = icmp ult i64 %fixnum.add502.off, 9223372036854775807, !dbg !43
  br i1 %59, label %tagnow490, label %bignum491, !dbg !43

tagnow490:                                        ; preds = %push_add489
  %shl505 = shl i64 %fixnum.add502, 1, !dbg !43
  %or506 = or i64 %shl505, 1, !dbg !43
  %as_obj507 = inttoptr i64 %or506 to %"struct.rubinius::Object"*, !dbg !43
  br label %continue484, !dbg !43

bignum491:                                        ; preds = %push_add489
  %big_value504 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add502) #1, !dbg !43
  br label %continue484, !dbg !43

class_fallback526:                                ; preds = %continue484
  store %"struct.rubinius::Object"* %send_result518, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !43
  store i32 1, i32* %out_args_total, align 8, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !43
  %cache_const542 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568320 to %"struct.rubinius::CallSite"**), align 512, !dbg !43
  %execute_pos543 = getelementptr %"struct.rubinius::CallSite"* %cache_const542, i64 0, i32 2, !dbg !43
  %execute544 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos543, align 8, !dbg !43
  store i32 533, i32* %37, align 4, !dbg !43
  %call_site_execute545 = call %"struct.rubinius::Object"* %execute544(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const542, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check547 = icmp eq %"struct.rubinius::Object"* %call_site_execute545, null, !dbg !43
  br i1 %null_check547, label %bail_out72, label %continue528, !dbg !43

continue528:                                      ; preds = %class_fallback526, %push_le538
  %send_result548 = phi %"struct.rubinius::Object"* [ %60, %push_le538 ], [ %call_site_execute545, %class_fallback526 ], !dbg !43
  store %"struct.rubinius::Object"* %send_result548, %"struct.rubinius::Object"** %stack54, align 8, !dbg !43
  %as_int552 = ptrtoint %"struct.rubinius::Object"* %send_result548 to i64, !dbg !43
  %and553 = and i64 %as_int552, 15, !dbg !43
  %is_true554 = icmp eq i64 %and553, 10, !dbg !43
  br i1 %is_true554, label %ip549, label %ip538, !dbg !43

push_le538:                                       ; preds = %continue484
  %fixnum.gt = icmp sgt %"struct.rubinius::Object"* %send_result518, %field524, !dbg !43
  %60 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !43
  br label %continue528, !dbg !43

ip538:                                            ; preds = %continue528
  %self557 = load %"struct.rubinius::Object"** %42, align 8, !dbg !44
  %field_pos5595150 = getelementptr %"struct.rubinius::Object"* %self557, i64 1, !dbg !44
  %field_pos559 = bitcast %"struct.rubinius::Object"* %field_pos5595150 to %"struct.rubinius::Object"**, !dbg !44
  %field560 = load %"struct.rubinius::Object"** %field_pos559, align 8, !dbg !44
  store %"struct.rubinius::Object"* %field560, %"struct.rubinius::Object"** %stack54, align 8, !dbg !44
  %local563 = load %"struct.rubinius::Object"** %49, align 8, !dbg !44, !rbx-classid !32
  store %"struct.rubinius::Object"* %local563, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !44
  store %"struct.rubinius::Object"* %field560, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const568 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568392 to %"struct.rubinius::CallSite"**), align 8, !dbg !44
  %execute_pos569 = getelementptr %"struct.rubinius::CallSite"* %cache_const568, i64 0, i32 2, !dbg !44
  %execute570 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos569, align 8, !dbg !44
  store i32 542, i32* %37, align 4, !dbg !44
  %call_site_execute571 = call %"struct.rubinius::Object"* %execute570(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const568, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check574 = icmp eq %"struct.rubinius::Object"* %call_site_execute571, null, !dbg !44
  br i1 %null_check574, label %bail_out72, label %check_active573, !dbg !44

check_active573:                                  ; preds = %ip538
  store %"struct.rubinius::Object"* %call_site_execute571, %"struct.rubinius::Object"** %stack54, align 8, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute571, %"struct.rubinius::Object"** %50, align 8, !dbg !44
  br label %ip550, !dbg !44

ip550:                                            ; preds = %ip549, %check_active573
  %self580 = load %"struct.rubinius::Object"** %42, align 8, !dbg !45
  store %"struct.rubinius::Object"* %self580, %"struct.rubinius::Object"** %stack54, align 8, !dbg !45
  %61 = getelementptr %"struct.rubinius::Object"* %self580, i64 1, i32 0, i32 2, !dbg !45
  %field586 = load %"struct.rubinius::Object"** %61, align 8, !dbg !45
  store %"struct.rubinius::Object"* %field586, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !45
  %local589 = load %"struct.rubinius::Object"** %49, align 8, !dbg !45, !rbx-classid !32
  store %"struct.rubinius::Object"* %local589, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !45
  %cast602 = ptrtoint %"struct.rubinius::Object"* %field586 to i64, !dbg !45
  %cast603 = ptrtoint %"struct.rubinius::Object"* %local589 to i64, !dbg !45
  %fixnums_anded604 = and i64 %cast603, 1, !dbg !45
  %masked605 = and i64 %fixnums_anded604, %cast602, !dbg !45
  %is_fixnum606 = icmp eq i64 %masked605, 0, !dbg !45
  br i1 %is_fixnum606, label %class_fallback591, label %push_add598, !dbg !45

class_fallback591:                                ; preds = %ip550
  store %"struct.rubinius::Object"* %field586, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const621 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568504 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos622 = getelementptr %"struct.rubinius::CallSite"* %cache_const621, i64 0, i32 2, !dbg !45
  %execute623 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos622, align 8, !dbg !45
  store i32 556, i32* %37, align 4, !dbg !45
  %call_site_execute624 = call %"struct.rubinius::Object"* %execute623(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const621, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check626 = icmp eq %"struct.rubinius::Object"* %call_site_execute624, null, !dbg !45
  br i1 %null_check626, label %bail_out72, label %continue593, !dbg !45

continue593:                                      ; preds = %class_fallback591, %bignum600, %tagnow599
  %send_result627 = phi %"struct.rubinius::Object"* [ %big_value613, %bignum600 ], [ %as_obj616, %tagnow599 ], [ %call_site_execute624, %class_fallback591 ], !dbg !45
  store %"struct.rubinius::Object"* %send_result627, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !45
  %local630 = load %"struct.rubinius::Object"** %50, align 8, !dbg !45, !rbx-classid !23
  store %"struct.rubinius::Object"* %local630, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !45
  %stack_load638 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !45, !rbx-classid !41
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_load638, %"struct.rubinius::Object"* %send_result627, %"struct.rubinius::Object"* %local630) #1, !dbg !45
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !45
  switch i64 %magicptr, label %continue634 [
    i64 34, label %class_fallback632
    i64 0, label %bail_out72
  ], !dbg !45

push_add598:                                      ; preds = %ip550
  %ashr608 = ashr i64 %cast602, 1, !dbg !45
  %ashr610 = ashr i64 %cast603, 1, !dbg !45
  %fixnum.add611 = add i64 %ashr608, %ashr610, !dbg !45
  %fixnum.add611.off = add i64 %fixnum.add611, 4611686018427387903, !dbg !45
  %62 = icmp ult i64 %fixnum.add611.off, 9223372036854775807, !dbg !45
  br i1 %62, label %tagnow599, label %bignum600, !dbg !45

tagnow599:                                        ; preds = %push_add598
  %shl614 = shl i64 %fixnum.add611, 1, !dbg !45
  %or615 = or i64 %shl614, 1, !dbg !45
  %as_obj616 = inttoptr i64 %or615 to %"struct.rubinius::Object"*, !dbg !45
  br label %continue593, !dbg !45

bignum600:                                        ; preds = %push_add598
  %big_value613 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add611) #1, !dbg !45
  br label %continue593, !dbg !45

class_fallback632:                                ; preds = %continue593
  %stack_load648 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !45, !rbx-classid !41
  store %"struct.rubinius::Object"* %stack_load648, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 2, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const650 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568552 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos651 = getelementptr %"struct.rubinius::CallSite"* %cache_const650, i64 0, i32 2, !dbg !45
  %execute652 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos651, align 8, !dbg !45
  store i32 562, i32* %37, align 4, !dbg !45
  %call_site_execute653 = call %"struct.rubinius::Object"* %execute652(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const650, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check655 = icmp eq %"struct.rubinius::Object"* %call_site_execute653, null, !dbg !45
  br i1 %null_check655, label %bail_out72, label %continue634, !dbg !45

continue634:                                      ; preds = %class_fallback632, %continue593
  %send_result656 = phi %"struct.rubinius::Object"* [ %prim_value, %continue593 ], [ %call_site_execute653, %class_fallback632 ], !dbg !45
  store %"struct.rubinius::Object"* %send_result656, %"struct.rubinius::Object"** %stack54, align 8, !dbg !45
  br label %return_pad45, !dbg !45

ip549:                                            ; preds = %continue528
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !43
  br label %ip550, !dbg !43

ip74:                                             ; preds = %ip45
  %local662 = load %"struct.rubinius::Object"** %49, align 8, !dbg !46, !rbx-classid !32
  store %"struct.rubinius::Object"* %local662, %"struct.rubinius::Object"** %stack54, align 8, !dbg !46
  %self665 = load %"struct.rubinius::Object"** %42, align 8, !dbg !46
  %field_pos6675151 = getelementptr %"struct.rubinius::Object"* %self665, i64 1, !dbg !46
  %field_pos667 = bitcast %"struct.rubinius::Object"* %field_pos6675151 to %"struct.rubinius::Object"**, !dbg !46
  %field668 = load %"struct.rubinius::Object"** %field_pos667, align 8, !dbg !46
  store %"struct.rubinius::Object"* %field668, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !46
  %cast675 = ptrtoint %"struct.rubinius::Object"* %local662 to i64, !dbg !46
  %cast678 = ptrtoint %"struct.rubinius::Object"* %field668 to i64, !dbg !46
  %fixnums_anded679 = and i64 %cast678, 1
  %masked680 = and i64 %fixnums_anded679, %cast675
  %is_fixnum681 = icmp eq i64 %masked680, 0, !dbg !46
  br i1 %is_fixnum681, label %class_fallback670, label %push_le682, !dbg !46

class_fallback670:                                ; preds = %ip74
  store %"struct.rubinius::Object"* %local662, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 1, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !46
  %cache_const687 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564680 to %"struct.rubinius::CallSite"**), align 8, !dbg !46
  %execute_pos688 = getelementptr %"struct.rubinius::CallSite"* %cache_const687, i64 0, i32 2, !dbg !46
  %execute689 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos688, align 8, !dbg !46
  store i32 78, i32* %37, align 4, !dbg !46
  %call_site_execute690 = call %"struct.rubinius::Object"* %execute689(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const687, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check692 = icmp eq %"struct.rubinius::Object"* %call_site_execute690, null, !dbg !46
  br i1 %null_check692, label %bail_out72, label %continue672, !dbg !46

continue672:                                      ; preds = %class_fallback670, %push_le682
  %send_result693 = phi %"struct.rubinius::Object"* [ %63, %push_le682 ], [ %call_site_execute690, %class_fallback670 ], !dbg !46
  %as_int697 = ptrtoint %"struct.rubinius::Object"* %send_result693 to i64, !dbg !46
  %and698 = and i64 %as_int697, 15, !dbg !46
  %is_true699 = icmp eq i64 %and698, 10, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !46
  br i1 %is_true699, label %ip87, label %return_pad45, !dbg !46

push_le682:                                       ; preds = %ip74
  %fixnum.ge683 = icmp sge %"struct.rubinius::Object"* %local662, %field668, !dbg !46
  %63 = select i1 %fixnum.ge683, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !46
  br label %continue672, !dbg !46

ip87:                                             ; preds = %continue672
  %64 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !47
  %stack_pos706 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 21, !dbg !47
  store %"struct.rubinius::Object"* %64, %"struct.rubinius::Object"** %stack_pos706, align 8, !dbg !47
  %self710 = load %"struct.rubinius::Object"** %42, align 8, !dbg !48
  %field_pos712 = getelementptr %"struct.rubinius::Object"* %self710, i64 1, i32 0, i32 1, !dbg !48
  %65 = load %"struct.rubinius::Class"** %field_pos712, align 8, !dbg !48
  %field713 = getelementptr inbounds %"struct.rubinius::Class"* %65, i64 0, i32 0, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %field713, %"struct.rubinius::Object"** %stack54, align 8, !dbg !48
  %66 = getelementptr %"struct.rubinius::Object"* %self710, i64 1, i32 0, i32 2, !dbg !48
  %field719 = load %"struct.rubinius::Object"** %66, align 8, !dbg !48
  store %"struct.rubinius::Object"* %field719, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !48
  %local722 = load %"struct.rubinius::Object"** %49, align 8, !dbg !48, !rbx-classid !32
  store %"struct.rubinius::Object"* %local722, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !48
  %cast735 = ptrtoint %"struct.rubinius::Object"* %field719 to i64, !dbg !48
  %cast736 = ptrtoint %"struct.rubinius::Object"* %local722 to i64, !dbg !48
  %fixnums_anded737 = and i64 %cast736, 1, !dbg !48
  %masked738 = and i64 %fixnums_anded737, %cast735, !dbg !48
  %is_fixnum739 = icmp eq i64 %masked738, 0, !dbg !48
  br i1 %is_fixnum739, label %class_fallback724, label %push_add731, !dbg !48

is_exception:                                     ; preds = %class_fallback724
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !47
  br i1 %rae, label %ip112, label %bail_out72, !dbg !47

class_fallback724:                                ; preds = %ip87
  store %"struct.rubinius::Object"* %field719, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !48
  store i32 1, i32* %out_args_total, align 8, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !48
  %cache_const754 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564872 to %"struct.rubinius::CallSite"**), align 8, !dbg !48
  %execute_pos755 = getelementptr %"struct.rubinius::CallSite"* %cache_const754, i64 0, i32 2, !dbg !48
  %execute756 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos755, align 8, !dbg !48
  store i32 102, i32* %37, align 4, !dbg !48
  %call_site_execute757 = call %"struct.rubinius::Object"* %execute756(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const754, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check759 = icmp eq %"struct.rubinius::Object"* %call_site_execute757, null, !dbg !48
  br i1 %null_check759, label %is_exception, label %continue726, !dbg !48

continue726:                                      ; preds = %class_fallback724, %bignum733, %tagnow732
  %send_result760 = phi %"struct.rubinius::Object"* [ %big_value746, %bignum733 ], [ %as_obj749, %tagnow732 ], [ %call_site_execute757, %class_fallback724 ], !dbg !48
  store %"struct.rubinius::Object"* %send_result760, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !48
  %stack_load766 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !48
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load766, i64 0, i32 0, i32 0, i32 0, !dbg !48
  %flags = load i64* %word_pos, align 8, !dbg !48
  %mask = and i64 %flags, 255, !dbg !48
  %is_type = icmp eq i64 %mask, 73, !dbg !48
  br i1 %is_type, label %is_tuple, label %class_fallback762, !dbg !48

push_add731:                                      ; preds = %ip87
  %ashr741 = ashr i64 %cast735, 1, !dbg !48
  %ashr743 = ashr i64 %cast736, 1, !dbg !48
  %fixnum.add744 = add i64 %ashr741, %ashr743, !dbg !48
  %fixnum.add744.off = add i64 %fixnum.add744, 4611686018427387903, !dbg !48
  %67 = icmp ult i64 %fixnum.add744.off, 9223372036854775807, !dbg !48
  br i1 %67, label %tagnow732, label %bignum733, !dbg !48

tagnow732:                                        ; preds = %push_add731
  %shl747 = shl i64 %fixnum.add744, 1, !dbg !48
  %or748 = or i64 %shl747, 1, !dbg !48
  %as_obj749 = inttoptr i64 %or748 to %"struct.rubinius::Object"*, !dbg !48
  br label %continue726, !dbg !48

bignum733:                                        ; preds = %push_add731
  %big_value746 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add744) #1, !dbg !48
  br label %continue726, !dbg !48

class_fallback762:                                ; preds = %is_tuple, %continue726
  store i32 105, i32* %37, align 4, !dbg !48
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !48
  %68 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 1, i8 0), !dbg !48
  br label %return_pad45, !dbg !48

ip112:                                            ; preds = %is_exception
  %69 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !36
  store %"struct.rubinius::Object"* %69, %"struct.rubinius::Object"** %stack54, align 8, !dbg !36
  %stack_pos780 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 20, !dbg !36
  store %"struct.rubinius::Object"* %69, %"struct.rubinius::Object"** %stack_pos780, align 8, !dbg !36
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !36
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack54, align 8, !dbg !36
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !49
  %constant_cache788 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !49
  %constant_cache_pos789 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i64 0, i32 4, !dbg !49
  %constant_scope790 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos789, align 8, !dbg !49
  %70 = load %"struct.rubinius::Object"** %34, align 8, !dbg !49
  %frame_scope792 = bitcast %"struct.rubinius::Object"* %70 to %"struct.rubinius::ConstantScope"*, !dbg !49
  %same_scope793 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope790, %frame_scope792, !dbg !49
  br i1 %same_scope793, label %check_serial794, label %use_call796, !dbg !49

is_tuple:                                         ; preds = %continue726
  %cast769 = ptrtoint %"struct.rubinius::Object"* %send_result760 to i64, !dbg !48
  %masked770 = and i64 %cast769, -9223372036854775807, !dbg !48
  %is_fixnum771 = icmp eq i64 %masked770, 1, !dbg !48
  %ashr773 = ashr i64 %cast769, 1, !dbg !48
  %71 = getelementptr inbounds %"struct.rubinius::Object"* %stack_load766, i64 1, i32 0, i32 0, i32 0, !dbg !48
  %table_size = load i64* %71, align 8, !dbg !48
  %72 = add i64 %table_size, -32, !dbg !48
  %73 = sdiv i64 %72, 8, !dbg !48
  %is_in_bounds = icmp slt i64 %ashr773, %73, !dbg !48
  %access_cmp = and i1 %is_fixnum771, %is_in_bounds, !dbg !48
  br i1 %access_cmp, label %tuple_at, label %class_fallback762, !dbg !48

tuple_at:                                         ; preds = %is_tuple
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load766 to %"struct.rubinius::Tuple"*, !dbg !48
  %field_pos774 = getelementptr %"struct.rubinius::Tuple"* %upcast, i64 0, i32 2, i64 %ashr773, !dbg !48
  %tuple_at775 = load %"struct.rubinius::Object"** %field_pos774, align 8, !dbg !48
  store %"struct.rubinius::Object"* %tuple_at775, %"struct.rubinius::Object"** %stack54, align 8, !dbg !48
  br label %return_pad45, !dbg !48

check_serial794:                                  ; preds = %ip112
  %global_serial787 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !49
  %serial_pos798 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i64 0, i32 7, !dbg !49
  %serial799 = load i32* %serial_pos798, align 4, !dbg !49
  %use_cache800 = icmp eq i32 %global_serial787, %serial799, !dbg !49
  br i1 %use_cache800, label %use_cache795, label %use_call796, !dbg !49

use_cache795:                                     ; preds = %check_serial794
  %value_pos801 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache788, i64 0, i32 2, !dbg !49
  %cached_value802 = load %"struct.rubinius::Object"** %value_pos801, align 8, !dbg !49
  br label %continue797, !dbg !49

use_call796:                                      ; preds = %check_serial794, %ip112
  store i32 118, i32* %37, align 4, !dbg !49
  %push_const_fast803 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check806 = icmp eq %"struct.rubinius::Object"* %push_const_fast803, null, !dbg !49
  br i1 %null_check806, label %bail_out72, label %continue797, !dbg !49

continue797:                                      ; preds = %use_call796, %use_cache795
  %constant807 = phi %"struct.rubinius::Object"* [ %cached_value802, %use_cache795 ], [ %push_const_fast803, %use_call796 ], !dbg !49, !rbx-classid !50
  store %"struct.rubinius::Object"* %constant807, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !49
  %constant_cache812 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !49
  %constant_cache_pos813 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i64 0, i32 4, !dbg !49
  %constant_scope814 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos813, align 8, !dbg !49
  %same_scope817 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope814, %frame_scope792, !dbg !49
  br i1 %same_scope817, label %check_serial818, label %use_call820, !dbg !49

check_serial818:                                  ; preds = %continue797
  %global_serial811 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !49
  %serial_pos822 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i64 0, i32 7, !dbg !49
  %serial823 = load i32* %serial_pos822, align 4, !dbg !49
  %use_under = icmp eq i32 %global_serial811, %serial823, !dbg !49
  br i1 %use_under, label %check_under, label %use_call820, !dbg !49

check_under:                                      ; preds = %check_serial818
  %value_pos824 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i64 0, i32 3, !dbg !49
  %cached_under = load %"struct.rubinius::Module"** %value_pos824, align 8, !dbg !49
  %downcast = getelementptr inbounds %"struct.rubinius::Module"* %cached_under, i64 0, i32 0, !dbg !49
  %use_cache825 = icmp eq %"struct.rubinius::Object"* %downcast, %constant807, !dbg !49
  br i1 %use_cache825, label %use_cache819, label %use_call820, !dbg !49

use_cache819:                                     ; preds = %check_under
  %value_pos826 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache812, i64 0, i32 2, !dbg !49
  %cached_value827 = load %"struct.rubinius::Object"** %value_pos826, align 8, !dbg !49
  br label %continue821, !dbg !49

use_call820:                                      ; preds = %check_under, %check_serial818, %continue797
  store i32 120, i32* %37, align 4, !dbg !49
  %constant828 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565016 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant807) #0, !dbg !49
  %null_check831 = icmp eq %"struct.rubinius::Object"* %constant828, null, !dbg !49
  br i1 %null_check831, label %bail_out72, label %continue821, !dbg !49

continue821:                                      ; preds = %use_call820, %use_cache819
  %constant832 = phi %"struct.rubinius::Object"* [ %cached_value827, %use_cache819 ], [ %constant828, %use_call820 ], !dbg !49, !rbx-classid !51
  store %"struct.rubinius::Object"* %constant832, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !49
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !49
  store %"struct.rubinius::Object"* %constant832, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !49
  store i32 1, i32* %out_args_total, align 8, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !49
  %cache_const843 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565040 to %"struct.rubinius::CallSite"**), align 16, !dbg !49
  %execute_pos844 = getelementptr %"struct.rubinius::CallSite"* %cache_const843, i64 0, i32 2, !dbg !49
  %execute845 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos844, align 8, !dbg !49
  store i32 123, i32* %37, align 4, !dbg !49
  %call_site_execute846 = call %"struct.rubinius::Object"* %execute845(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const843, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check849 = icmp eq %"struct.rubinius::Object"* %call_site_execute846, null, !dbg !49
  br i1 %null_check849, label %bail_out72, label %check_active848, !dbg !49

check_active848:                                  ; preds = %continue821
  store %"struct.rubinius::Object"* %call_site_execute846, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !49
  %as_int853 = ptrtoint %"struct.rubinius::Object"* %call_site_execute846 to i64, !dbg !49
  %and854 = and i64 %as_int853, 15, !dbg !49
  %is_true855 = icmp eq i64 %and854, 10, !dbg !49
  br i1 %is_true855, label %ip139, label %ip130, !dbg !49

ip139:                                            ; preds = %check_active848
  %stack_local = load %"struct.rubinius::Object"** %stack_pos780, align 8, !dbg !52
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack54, align 8, !dbg !52
  %74 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_local), !dbg !52
  br label %bail_out72, !dbg !52

ip130:                                            ; preds = %check_active848
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !52
  %stack_local865 = load %"struct.rubinius::Object"** %stack_pos706, align 8, !dbg !52
  store %"struct.rubinius::Object"* %stack_local865, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !52
  %75 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_local865), !dbg !52
  %stack_load870 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !52, !rbx-classid !53
  br label %return_pad45, !dbg !52

ip44:                                             ; preds = %continue144
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !31
  br label %ip45, !dbg !31

ip149:                                            ; preds = %continue102
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !54
  %constant_cache876 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !54
  %constant_cache_pos877 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i64 0, i32 4, !dbg !54
  %constant_scope878 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos877, align 8, !dbg !54
  %same_scope881 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope878, %frame_scope, !dbg !54
  br i1 %same_scope881, label %check_serial882, label %use_call884, !dbg !54

check_serial882:                                  ; preds = %ip149
  %global_serial875 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !54
  %serial_pos886 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i64 0, i32 7, !dbg !54
  %serial887 = load i32* %serial_pos886, align 4, !dbg !54
  %use_cache888 = icmp eq i32 %global_serial875, %serial887, !dbg !54
  br i1 %use_cache888, label %use_cache883, label %use_call884, !dbg !54

use_cache883:                                     ; preds = %check_serial882
  %value_pos889 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache876, i64 0, i32 2, !dbg !54
  %cached_value890 = load %"struct.rubinius::Object"** %value_pos889, align 8, !dbg !54
  br label %continue885, !dbg !54

use_call884:                                      ; preds = %check_serial882, %ip149
  store i32 150, i32* %37, align 4, !dbg !54
  %push_const_fast891 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565256 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !54
  %null_check894 = icmp eq %"struct.rubinius::Object"* %push_const_fast891, null, !dbg !54
  br i1 %null_check894, label %bail_out72, label %continue885, !dbg !54

continue885:                                      ; preds = %use_call884, %use_cache883
  %constant895 = phi %"struct.rubinius::Object"* [ %cached_value890, %use_cache883 ], [ %push_const_fast891, %use_call884 ], !dbg !54, !rbx-classid !55
  store %"struct.rubinius::Object"* %constant895, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !54
  store %"struct.rubinius::Object"* %local35, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !54
  store %"struct.rubinius::Object"* %constant895, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !54
  store i32 1, i32* %out_args_total, align 8, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !54
  %cache_const906 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565280 to %"struct.rubinius::CallSite"**), align 32, !dbg !54
  %execute_pos907 = getelementptr %"struct.rubinius::CallSite"* %cache_const906, i64 0, i32 2, !dbg !54
  %execute908 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos907, align 8, !dbg !54
  store i32 153, i32* %37, align 4, !dbg !54
  %call_site_execute909 = call %"struct.rubinius::Object"* %execute908(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const906, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check912 = icmp eq %"struct.rubinius::Object"* %call_site_execute909, null, !dbg !54
  br i1 %null_check912, label %bail_out72, label %check_active911, !dbg !54

check_active911:                                  ; preds = %continue885
  store %"struct.rubinius::Object"* %call_site_execute909, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !54
  %as_int916 = ptrtoint %"struct.rubinius::Object"* %call_site_execute909 to i64, !dbg !54
  %and917 = and i64 %as_int916, 15, !dbg !54
  %is_true918 = icmp eq i64 %and917, 10, !dbg !54
  br i1 %is_true918, label %ip313, label %ip158, !dbg !54

ip158:                                            ; preds = %check_active911
  %system_object920 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !56
  store %"struct.rubinius::Object"* %system_object920, %"struct.rubinius::Object"** %stack54, align 8, !dbg !56
  %local923 = load %"struct.rubinius::Object"** %47, align 8, !dbg !56, !rbx-classid !26
  store %"struct.rubinius::Object"* %local923, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !56
  store %"struct.rubinius::Object"* %local923, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !56
  store i32 0, i32* %out_args_total, align 8, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !56
  %cache_const927 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565352 to %"struct.rubinius::CallSite"**), align 8, !dbg !56
  %execute_pos928 = getelementptr %"struct.rubinius::CallSite"* %cache_const927, i64 0, i32 2, !dbg !56
  %execute929 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos928, align 8, !dbg !56
  store i32 162, i32* %37, align 4, !dbg !56
  %call_site_execute930 = call %"struct.rubinius::Object"* %execute929(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const927, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check933 = icmp eq %"struct.rubinius::Object"* %call_site_execute930, null, !dbg !56
  br i1 %null_check933, label %bail_out72, label %check_active932, !dbg !56

check_active932:                                  ; preds = %ip158
  store %"struct.rubinius::Object"* %call_site_execute930, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !56
  %constant_cache936 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**), align 128, !dbg !56
  %constant_cache_pos937 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i64 0, i32 4, !dbg !56
  %constant_scope938 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos937, align 8, !dbg !56
  %76 = load %"struct.rubinius::Object"** %34, align 8, !dbg !56
  %frame_scope940 = bitcast %"struct.rubinius::Object"* %76 to %"struct.rubinius::ConstantScope"*, !dbg !56
  %same_scope941 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope938, %frame_scope940, !dbg !56
  br i1 %same_scope941, label %check_serial942, label %use_call944, !dbg !56

check_serial942:                                  ; preds = %check_active932
  %global_serial935 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !56
  %serial_pos946 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i64 0, i32 7, !dbg !56
  %serial947 = load i32* %serial_pos946, align 4, !dbg !56
  %use_cache948 = icmp eq i32 %global_serial935, %serial947, !dbg !56
  br i1 %use_cache948, label %use_cache943, label %use_call944, !dbg !56

use_cache943:                                     ; preds = %check_serial942
  %value_pos949 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache936, i64 0, i32 2, !dbg !56
  %cached_value950 = load %"struct.rubinius::Object"** %value_pos949, align 8, !dbg !56
  br label %continue945, !dbg !56

use_call944:                                      ; preds = %check_serial942, %check_active932
  store i32 165, i32* %37, align 4, !dbg !56
  %push_const_fast951 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565376 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !56
  %null_check954 = icmp eq %"struct.rubinius::Object"* %push_const_fast951, null, !dbg !56
  br i1 %null_check954, label %bail_out72, label %continue945, !dbg !56

continue945:                                      ; preds = %use_call944, %use_cache943
  %constant955 = phi %"struct.rubinius::Object"* [ %cached_value950, %use_cache943 ], [ %push_const_fast951, %use_call944 ], !dbg !56, !rbx-classid !57
  store %"struct.rubinius::Object"* %constant955, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !56
  %stack_pos957 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 12, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos957, align 8, !dbg !56
  %stack_load959 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !56
  store %"struct.rubinius::Object"* %stack_load959, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !56
  store i32 3, i32* %out_args_total, align 8, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !56
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !56
  %cache_const961 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565408 to %"struct.rubinius::CallSite"**), align 32, !dbg !56
  %execute_pos962 = getelementptr %"struct.rubinius::CallSite"* %cache_const961, i64 0, i32 2, !dbg !56
  %execute963 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos962, align 8, !dbg !56
  store i32 169, i32* %37, align 4, !dbg !56
  %call_site_execute964 = call %"struct.rubinius::Object"* %execute963(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const961, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check967 = icmp eq %"struct.rubinius::Object"* %call_site_execute964, null, !dbg !56
  br i1 %null_check967, label %bail_out72, label %check_active966, !dbg !56

check_active966:                                  ; preds = %continue945
  store %"struct.rubinius::Object"* %call_site_execute964, %"struct.rubinius::Object"** %49, align 8, !dbg !56
  store %"struct.rubinius::Object"* %call_site_execute964, %"struct.rubinius::Object"** %stack54, align 8, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !58
  store %"struct.rubinius::Object"* %call_site_execute964, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !58
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !58
  store i32 1, i32* %out_args_total, align 8, !dbg !58
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !58
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !58
  %cache_const979 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565480 to %"struct.rubinius::CallSite"**), align 8, !dbg !58
  %execute_pos980 = getelementptr %"struct.rubinius::CallSite"* %cache_const979, i64 0, i32 2, !dbg !58
  %execute981 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos980, align 8, !dbg !58
  store i32 178, i32* %37, align 4, !dbg !58
  %call_site_execute982 = call %"struct.rubinius::Object"* %execute981(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const979, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !58
  %null_check985 = icmp eq %"struct.rubinius::Object"* %call_site_execute982, null, !dbg !58
  br i1 %null_check985, label %bail_out72, label %check_active984, !dbg !58

check_active984:                                  ; preds = %check_active966
  store %"struct.rubinius::Object"* %call_site_execute982, %"struct.rubinius::Object"** %stack54, align 8, !dbg !58
  %as_int989 = ptrtoint %"struct.rubinius::Object"* %call_site_execute982 to i64, !dbg !58
  %and990 = and i64 %as_int989, 15, !dbg !58
  %is_true991 = icmp eq i64 %and990, 10, !dbg !58
  br i1 %is_true991, label %ip194, label %ip183, !dbg !58

ip183:                                            ; preds = %check_active984
  %local994 = load %"struct.rubinius::Object"** %49, align 8, !dbg !58, !rbx-classid !32
  store %"struct.rubinius::Object"* %local994, %"struct.rubinius::Object"** %stack54, align 8, !dbg !58
  %self997 = load %"struct.rubinius::Object"** %42, align 8, !dbg !58
  %field_pos9995152 = getelementptr %"struct.rubinius::Object"* %self997, i64 1, !dbg !58
  %field_pos999 = bitcast %"struct.rubinius::Object"* %field_pos9995152 to %"struct.rubinius::Object"**, !dbg !58
  %field1000 = load %"struct.rubinius::Object"** %field_pos999, align 8, !dbg !58
  store %"struct.rubinius::Object"* %field1000, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !58
  store %"struct.rubinius::Object"* %local994, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !58
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !58
  store i32 1, i32* %out_args_total, align 8, !dbg !58
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !58
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !58
  %cache_const1005 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565552 to %"struct.rubinius::CallSite"**), align 16, !dbg !58
  %execute_pos1006 = getelementptr %"struct.rubinius::CallSite"* %cache_const1005, i64 0, i32 2, !dbg !58
  %execute1007 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1006, align 8, !dbg !58
  store i32 187, i32* %37, align 4, !dbg !58
  %call_site_execute1008 = call %"struct.rubinius::Object"* %execute1007(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1005, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !58
  %null_check1011 = icmp eq %"struct.rubinius::Object"* %call_site_execute1008, null, !dbg !58
  br i1 %null_check1011, label %bail_out72, label %check_active1010, !dbg !58

check_active1010:                                 ; preds = %ip183
  store %"struct.rubinius::Object"* %call_site_execute1008, %"struct.rubinius::Object"** %stack54, align 8, !dbg !58
  store %"struct.rubinius::Object"* %call_site_execute1008, %"struct.rubinius::Object"** %49, align 8, !dbg !58
  br label %ip195, !dbg !58

ip195:                                            ; preds = %ip194, %check_active1010
  %local1018 = phi %"struct.rubinius::Object"* [ %local1018.pre, %ip194 ], [ %call_site_execute1008, %check_active1010 ]
  store %"struct.rubinius::Object"* %local1018, %"struct.rubinius::Object"** %stack54, align 8, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !59
  store %"struct.rubinius::Object"* %local1018, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !59
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !59
  store i32 1, i32* %out_args_total, align 8, !dbg !59
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !59
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !59
  %cache_const1024 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565648 to %"struct.rubinius::CallSite"**), align 16, !dbg !59
  %execute_pos1025 = getelementptr %"struct.rubinius::CallSite"* %cache_const1024, i64 0, i32 2, !dbg !59
  %execute1026 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1025, align 8, !dbg !59
  store i32 199, i32* %37, align 4, !dbg !59
  %call_site_execute1027 = call %"struct.rubinius::Object"* %execute1026(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1024, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !59
  %null_check1030 = icmp eq %"struct.rubinius::Object"* %call_site_execute1027, null, !dbg !59
  br i1 %null_check1030, label %bail_out72, label %check_active1029, !dbg !59

check_active1029:                                 ; preds = %ip195
  store %"struct.rubinius::Object"* %call_site_execute1027, %"struct.rubinius::Object"** %stack54, align 8, !dbg !59
  store %"struct.rubinius::Object"* %call_site_execute1027, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !59
  %as_int1037 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1027 to i64, !dbg !59
  %and1038 = and i64 %as_int1037, 15, !dbg !59
  %is_true1039 = icmp eq i64 %and1038, 10, !dbg !59
  br i1 %is_true1039, label %ip205, label %ip213, !dbg !59

ip205:                                            ; preds = %check_active1029
  %local1042 = load %"struct.rubinius::Object"** %49, align 8, !dbg !59, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1042, %"struct.rubinius::Object"** %stack54, align 8, !dbg !59
  %self1045 = load %"struct.rubinius::Object"** %42, align 8, !dbg !59
  %field_pos10475153 = getelementptr %"struct.rubinius::Object"* %self1045, i64 1, !dbg !59
  %field_pos1047 = bitcast %"struct.rubinius::Object"* %field_pos10475153 to %"struct.rubinius::Object"**, !dbg !59
  %field1048 = load %"struct.rubinius::Object"** %field_pos1047, align 8, !dbg !59
  store %"struct.rubinius::Object"* %field1048, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !59
  store %"struct.rubinius::Object"* %local1042, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !59
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !59
  store i32 1, i32* %out_args_total, align 8, !dbg !59
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !59
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !59
  %cache_const1053 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565736 to %"struct.rubinius::CallSite"**), align 8, !dbg !59
  %execute_pos1054 = getelementptr %"struct.rubinius::CallSite"* %cache_const1053, i64 0, i32 2, !dbg !59
  %execute1055 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1054, align 8, !dbg !59
  store i32 210, i32* %37, align 4, !dbg !59
  %call_site_execute1056 = call %"struct.rubinius::Object"* %execute1055(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1053, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !59
  %null_check1059 = icmp eq %"struct.rubinius::Object"* %call_site_execute1056, null, !dbg !59
  br i1 %null_check1059, label %bail_out72, label %check_active1058, !dbg !59

ip213:                                            ; preds = %check_active1029, %check_active1058
  %stack_load1062 = phi %"struct.rubinius::Object"* [ %call_site_execute1027, %check_active1029 ], [ %call_site_execute1056, %check_active1058 ]
  %as_int1063 = ptrtoint %"struct.rubinius::Object"* %stack_load1062 to i64, !dbg !59
  %and1064 = and i64 %as_int1063, 15, !dbg !59
  %is_true1065 = icmp eq i64 %and1064, 10, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !59
  br i1 %is_true1065, label %ip219, label %return_pad45, !dbg !59

check_active1058:                                 ; preds = %ip205
  store %"struct.rubinius::Object"* %call_site_execute1056, %"struct.rubinius::Object"** %stack54, align 8, !dbg !59
  br label %ip213, !dbg !59

ip219:                                            ; preds = %ip213
  %system_object1071 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !60
  store %"struct.rubinius::Object"* %system_object1071, %"struct.rubinius::Object"** %stack54, align 8, !dbg !60
  %local1074 = load %"struct.rubinius::Object"** %47, align 8, !dbg !60, !rbx-classid !26
  store %"struct.rubinius::Object"* %local1074, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !60
  store %"struct.rubinius::Object"* %local1074, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !60
  store i32 0, i32* %out_args_total, align 8, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !60
  %cache_const1078 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565848 to %"struct.rubinius::CallSite"**), align 8, !dbg !60
  %execute_pos1079 = getelementptr %"struct.rubinius::CallSite"* %cache_const1078, i64 0, i32 2, !dbg !60
  %execute1080 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1079, align 8, !dbg !60
  store i32 224, i32* %37, align 4, !dbg !60
  %call_site_execute1081 = call %"struct.rubinius::Object"* %execute1080(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1078, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1084 = icmp eq %"struct.rubinius::Object"* %call_site_execute1081, null, !dbg !60
  br i1 %null_check1084, label %bail_out72, label %check_active1083, !dbg !60

check_active1083:                                 ; preds = %ip219
  store %"struct.rubinius::Object"* %call_site_execute1081, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !60
  %constant_cache1087 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !60
  %constant_cache_pos1088 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i64 0, i32 4, !dbg !60
  %constant_scope1089 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1088, align 8, !dbg !60
  %77 = load %"struct.rubinius::Object"** %34, align 8, !dbg !60
  %frame_scope1091 = bitcast %"struct.rubinius::Object"* %77 to %"struct.rubinius::ConstantScope"*, !dbg !60
  %same_scope1092 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1089, %frame_scope1091, !dbg !60
  br i1 %same_scope1092, label %check_serial1093, label %use_call1095, !dbg !60

check_serial1093:                                 ; preds = %check_active1083
  %global_serial1086 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !60
  %serial_pos1097 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i64 0, i32 7, !dbg !60
  %serial1098 = load i32* %serial_pos1097, align 4, !dbg !60
  %use_cache1099 = icmp eq i32 %global_serial1086, %serial1098, !dbg !60
  br i1 %use_cache1099, label %use_cache1094, label %use_call1095, !dbg !60

use_cache1094:                                    ; preds = %check_serial1093
  %value_pos1100 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1087, i64 0, i32 2, !dbg !60
  %cached_value1101 = load %"struct.rubinius::Object"** %value_pos1100, align 8, !dbg !60
  br label %continue1096, !dbg !60

use_call1095:                                     ; preds = %check_serial1093, %check_active1083
  store i32 227, i32* %37, align 4, !dbg !60
  %push_const_fast1102 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check1105 = icmp eq %"struct.rubinius::Object"* %push_const_fast1102, null, !dbg !60
  br i1 %null_check1105, label %bail_out72, label %continue1096, !dbg !60

continue1096:                                     ; preds = %use_call1095, %use_cache1094
  %constant1106 = phi %"struct.rubinius::Object"* [ %cached_value1101, %use_cache1094 ], [ %push_const_fast1102, %use_call1095 ], !dbg !60, !rbx-classid !61
  store %"struct.rubinius::Object"* %constant1106, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos957, align 8, !dbg !60
  %stack_load1110 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1110, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !60
  store i32 3, i32* %out_args_total, align 8, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !60
  %cache_const1112 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565904 to %"struct.rubinius::CallSite"**), align 16, !dbg !60
  %execute_pos1113 = getelementptr %"struct.rubinius::CallSite"* %cache_const1112, i64 0, i32 2, !dbg !60
  %execute1114 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1113, align 8, !dbg !60
  store i32 231, i32* %37, align 4, !dbg !60
  %call_site_execute1115 = call %"struct.rubinius::Object"* %execute1114(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1112, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1118 = icmp eq %"struct.rubinius::Object"* %call_site_execute1115, null, !dbg !60
  br i1 %null_check1118, label %bail_out72, label %check_active1117, !dbg !60

check_active1117:                                 ; preds = %continue1096
  store %"struct.rubinius::Object"* %call_site_execute1115, %"struct.rubinius::Object"** %51, align 8, !dbg !60
  store %"struct.rubinius::Object"* %call_site_execute1115, %"struct.rubinius::Object"** %stack54, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute1115, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1130 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565976 to %"struct.rubinius::CallSite"**), align 8, !dbg !62
  %execute_pos1131 = getelementptr %"struct.rubinius::CallSite"* %cache_const1130, i64 0, i32 2, !dbg !62
  %execute1132 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1131, align 8, !dbg !62
  store i32 240, i32* %37, align 4, !dbg !62
  %call_site_execute1133 = call %"struct.rubinius::Object"* %execute1132(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1130, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1136 = icmp eq %"struct.rubinius::Object"* %call_site_execute1133, null, !dbg !62
  br i1 %null_check1136, label %bail_out72, label %check_active1135, !dbg !62

check_active1135:                                 ; preds = %check_active1117
  store %"struct.rubinius::Object"* %call_site_execute1133, %"struct.rubinius::Object"** %stack54, align 8, !dbg !62
  %as_int1140 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1133 to i64, !dbg !62
  %and1141 = and i64 %as_int1140, 15, !dbg !62
  %is_true1142 = icmp eq i64 %and1141, 10, !dbg !62
  br i1 %is_true1142, label %ip256, label %ip245, !dbg !62

ip245:                                            ; preds = %check_active1135
  %local1145 = load %"struct.rubinius::Object"** %51, align 8, !dbg !62, !rbx-classid !63
  store %"struct.rubinius::Object"* %local1145, %"struct.rubinius::Object"** %stack54, align 8, !dbg !62
  %self1148 = load %"struct.rubinius::Object"** %42, align 8, !dbg !62
  %field_pos11505154 = getelementptr %"struct.rubinius::Object"* %self1148, i64 1, !dbg !62
  %field_pos1150 = bitcast %"struct.rubinius::Object"* %field_pos11505154 to %"struct.rubinius::Object"**, !dbg !62
  %field1151 = load %"struct.rubinius::Object"** %field_pos1150, align 8, !dbg !62
  store %"struct.rubinius::Object"* %field1151, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !62
  store %"struct.rubinius::Object"* %local1145, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1156 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566048 to %"struct.rubinius::CallSite"**), align 32, !dbg !62
  %execute_pos1157 = getelementptr %"struct.rubinius::CallSite"* %cache_const1156, i64 0, i32 2, !dbg !62
  %execute1158 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1157, align 8, !dbg !62
  store i32 249, i32* %37, align 4, !dbg !62
  %call_site_execute1159 = call %"struct.rubinius::Object"* %execute1158(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1156, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1162 = icmp eq %"struct.rubinius::Object"* %call_site_execute1159, null, !dbg !62
  br i1 %null_check1162, label %bail_out72, label %check_active1161, !dbg !62

check_active1161:                                 ; preds = %ip245
  store %"struct.rubinius::Object"* %call_site_execute1159, %"struct.rubinius::Object"** %stack54, align 8, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute1159, %"struct.rubinius::Object"** %51, align 8, !dbg !62
  br label %ip257, !dbg !62

ip257:                                            ; preds = %ip256, %check_active1161
  %local1169 = load %"struct.rubinius::Object"** %47, align 8, !dbg !64, !rbx-classid !26
  store %"struct.rubinius::Object"* %local1169, %"struct.rubinius::Object"** %stack54, align 8, !dbg !64
  store %"struct.rubinius::Object"* %local1169, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !64
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !64
  store i32 0, i32* %out_args_total, align 8, !dbg !64
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !64
  %cache_const1173 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566136 to %"struct.rubinius::CallSite"**), align 8, !dbg !64
  %execute_pos1174 = getelementptr %"struct.rubinius::CallSite"* %cache_const1173, i64 0, i32 2, !dbg !64
  %execute1175 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1174, align 8, !dbg !64
  store i32 260, i32* %37, align 4, !dbg !64
  %call_site_execute1176 = call %"struct.rubinius::Object"* %execute1175(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1173, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !64
  %null_check1179 = icmp eq %"struct.rubinius::Object"* %call_site_execute1176, null, !dbg !64
  br i1 %null_check1179, label %bail_out72, label %check_active1178, !dbg !64

check_active1178:                                 ; preds = %ip257
  store %"struct.rubinius::Object"* %call_site_execute1176, %"struct.rubinius::Object"** %stack54, align 8, !dbg !64
  %as_int1183 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1176 to i64, !dbg !64
  %and1184 = and i64 %as_int1183, 15, !dbg !64
  %is_true1185 = icmp eq i64 %and1184, 10, !dbg !64
  br i1 %is_true1185, label %ip275, label %ip265, !dbg !64

ip265:                                            ; preds = %check_active1178
  %local1188 = load %"struct.rubinius::Object"** %51, align 8, !dbg !64, !rbx-classid !63
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack54, align 8, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !64
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !64
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !64
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !64
  store i32 1, i32* %out_args_total, align 8, !dbg !64
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !64
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !64
  %cache_const1194 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566200 to %"struct.rubinius::CallSite"**), align 8, !dbg !64
  %execute_pos1195 = getelementptr %"struct.rubinius::CallSite"* %cache_const1194, i64 0, i32 2, !dbg !64
  %execute1196 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1195, align 8, !dbg !64
  store i32 268, i32* %37, align 4, !dbg !64
  %call_site_execute1197 = call %"struct.rubinius::Object"* %execute1196(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1194, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !64
  %null_check1200 = icmp eq %"struct.rubinius::Object"* %call_site_execute1197, null, !dbg !64
  br i1 %null_check1200, label %bail_out72, label %check_active1199, !dbg !64

check_active1199:                                 ; preds = %ip265
  store %"struct.rubinius::Object"* %call_site_execute1197, %"struct.rubinius::Object"** %stack54, align 8, !dbg !64
  store %"struct.rubinius::Object"* %call_site_execute1197, %"struct.rubinius::Object"** %51, align 8, !dbg !64
  br label %ip276, !dbg !64

ip276:                                            ; preds = %ip275, %check_active1199
  %local1207 = phi %"struct.rubinius::Object"* [ %local1207.pre, %ip275 ], [ %call_site_execute1197, %check_active1199 ]
  store %"struct.rubinius::Object"* %local1207, %"struct.rubinius::Object"** %stack54, align 8, !dbg !65
  %local1210 = load %"struct.rubinius::Object"** %49, align 8, !dbg !65, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1210, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !65
  store %"struct.rubinius::Object"* %local1207, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !65
  store i32 1, i32* %out_args_total, align 8, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !65
  %cache_const1215 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566304 to %"struct.rubinius::CallSite"**), align 32, !dbg !65
  %execute_pos1216 = getelementptr %"struct.rubinius::CallSite"* %cache_const1215, i64 0, i32 2, !dbg !65
  %execute1217 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1216, align 8, !dbg !65
  store i32 281, i32* %37, align 4, !dbg !65
  %call_site_execute1218 = call %"struct.rubinius::Object"* %execute1217(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1215, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1221 = icmp eq %"struct.rubinius::Object"* %call_site_execute1218, null, !dbg !65
  br i1 %null_check1221, label %bail_out72, label %check_active1220, !dbg !65

check_active1220:                                 ; preds = %ip276
  store %"struct.rubinius::Object"* %call_site_execute1218, %"struct.rubinius::Object"** %stack54, align 8, !dbg !65
  %as_int1225 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1218 to i64, !dbg !65
  %and1226 = and i64 %as_int1225, 15, !dbg !65
  %is_true1227 = icmp eq i64 %and1226, 10, !dbg !65
  br i1 %is_true1227, label %ip296, label %ip286, !dbg !65

ip286:                                            ; preds = %check_active1220
  %self1229 = load %"struct.rubinius::Object"** %42, align 8, !dbg !65, !rbx-classid !41
  store %"struct.rubinius::Object"* %self1229, %"struct.rubinius::Object"** %stack54, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !65
  store %"struct.rubinius::Object"* %self1229, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !65
  store i32 2, i32* %out_args_total, align 8, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !65
  %cache_const1236 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566376 to %"struct.rubinius::CallSite"**), align 8, !dbg !65
  %execute_pos1237 = getelementptr %"struct.rubinius::CallSite"* %cache_const1236, i64 0, i32 2, !dbg !65
  %execute1238 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1237, align 8, !dbg !65
  store i32 290, i32* %37, align 4, !dbg !65
  %call_site_execute1239 = call %"struct.rubinius::Object"* %execute1238(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1236, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1242 = icmp eq %"struct.rubinius::Object"* %call_site_execute1239, null, !dbg !65
  br i1 %null_check1242, label %bail_out72, label %check_active1241, !dbg !65

ip296:                                            ; preds = %check_active1220
  %local1248 = load %"struct.rubinius::Object"** %51, align 8, !dbg !66, !rbx-classid !63
  store %"struct.rubinius::Object"* %local1248, %"struct.rubinius::Object"** %stack54, align 8, !dbg !66
  %local1251 = load %"struct.rubinius::Object"** %49, align 8, !dbg !66, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1251, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !66
  store %"struct.rubinius::Object"* %local1248, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !66
  store i32 1, i32* %out_args_total, align 8, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !66
  %cache_const1256 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), align 8, !dbg !66
  %execute_pos1257 = getelementptr %"struct.rubinius::CallSite"* %cache_const1256, i64 0, i32 2, !dbg !66
  %execute1258 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1257, align 8, !dbg !66
  store i32 302, i32* %37, align 4, !dbg !66
  %call_site_execute1259 = call %"struct.rubinius::Object"* %execute1258(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1256, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1262 = icmp eq %"struct.rubinius::Object"* %call_site_execute1259, null, !dbg !66
  br i1 %null_check1262, label %bail_out72, label %check_active1261, !dbg !66

check_active1241:                                 ; preds = %ip286
  store %"struct.rubinius::Object"* %call_site_execute1239, %"struct.rubinius::Object"** %stack54, align 8, !dbg !65
  br label %return_pad45, !dbg !65

check_active1261:                                 ; preds = %ip296
  store %"struct.rubinius::Object"* %call_site_execute1259, %"struct.rubinius::Object"** %stack54, align 8, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1259, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !66
  store i32 1, i32* %out_args_total, align 8, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !66
  %cache_const1268 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566504 to %"struct.rubinius::CallSite"**), align 8, !dbg !66
  %execute_pos1269 = getelementptr %"struct.rubinius::CallSite"* %cache_const1268, i64 0, i32 2, !dbg !66
  %execute1270 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1269, align 8, !dbg !66
  store i32 306, i32* %37, align 4, !dbg !66
  %call_site_execute1271 = call %"struct.rubinius::Object"* %execute1270(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1268, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1274 = icmp eq %"struct.rubinius::Object"* %call_site_execute1271, null, !dbg !66
  br i1 %null_check1274, label %bail_out72, label %check_active1273, !dbg !66

check_active1273:                                 ; preds = %check_active1261
  store %"struct.rubinius::Object"* %call_site_execute1271, %"struct.rubinius::Object"** %stack54, align 8, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1271, %"struct.rubinius::Object"** %50, align 8, !dbg !66
  br label %ip459, !dbg !66

ip275:                                            ; preds = %check_active1178
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !64
  %local1207.pre = load %"struct.rubinius::Object"** %51, align 8, !dbg !65
  br label %ip276, !dbg !64

ip256:                                            ; preds = %check_active1135
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !62
  br label %ip257, !dbg !62

ip194:                                            ; preds = %check_active984
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !58
  %local1018.pre = load %"struct.rubinius::Object"** %49, align 8, !dbg !59
  br label %ip195, !dbg !58

ip313:                                            ; preds = %check_active911
  %local1284 = load %"struct.rubinius::Object"** %47, align 8, !dbg !67, !rbx-classid !26
  store %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"** %stack54, align 8, !dbg !67
  store %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !67
  %constant_cache1290 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !67
  %constant_cache_pos1291 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i64 0, i32 4, !dbg !67
  %constant_scope1292 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1291, align 8, !dbg !67
  %78 = load %"struct.rubinius::Object"** %34, align 8, !dbg !67
  %frame_scope1294 = bitcast %"struct.rubinius::Object"* %78 to %"struct.rubinius::ConstantScope"*, !dbg !67
  %same_scope1295 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1292, %frame_scope1294, !dbg !67
  br i1 %same_scope1295, label %check_serial1296, label %use_call1298, !dbg !67

check_serial1296:                                 ; preds = %ip313
  %global_serial1289 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !67
  %serial_pos1300 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i64 0, i32 7, !dbg !67
  %serial1301 = load i32* %serial_pos1300, align 4, !dbg !67
  %use_cache1302 = icmp eq i32 %global_serial1289, %serial1301, !dbg !67
  br i1 %use_cache1302, label %use_cache1297, label %use_call1298, !dbg !67

use_cache1297:                                    ; preds = %check_serial1296
  %value_pos1303 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1290, i64 0, i32 2, !dbg !67
  %cached_value1304 = load %"struct.rubinius::Object"** %value_pos1303, align 8, !dbg !67
  br label %continue1299, !dbg !67

use_call1298:                                     ; preds = %check_serial1296, %ip313
  store i32 317, i32* %37, align 4, !dbg !67
  %push_const_fast1305 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !67
  %null_check1308 = icmp eq %"struct.rubinius::Object"* %push_const_fast1305, null, !dbg !67
  br i1 %null_check1308, label %bail_out72, label %continue1299, !dbg !67

continue1299:                                     ; preds = %use_call1298, %use_cache1297
  %constant1309 = phi %"struct.rubinius::Object"* [ %cached_value1304, %use_cache1297 ], [ %push_const_fast1305, %use_call1298 ], !dbg !67, !rbx-classid !68
  store %"struct.rubinius::Object"* %constant1309, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !67
  store %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !67
  %cast1325 = ptrtoint %"struct.rubinius::Object"* %local1284 to i64, !dbg !67
  %masked1326 = and i64 %cast1325, 3, !dbg !67
  %is_reference1327 = icmp eq i64 %masked1326, 0, !dbg !67
  br i1 %is_reference1327, label %reference_block, label %class_verified_block, !dbg !67

continue1321:                                     ; preds = %is_fixnum_block, %is_fixnum_block, %reference_block, %is_symbol_block, %is_nil_block, %is_true_block, %is_false_block, %use_call1322
  %constant1352 = phi %"struct.rubinius::Object"* [ %kind_of1351, %use_call1322 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], !dbg !67
  store %"struct.rubinius::Object"* %constant1352, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !67
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %constant1352 to i64, !dbg !67
  %and1357 = and i64 %as_int1356, 15, !dbg !67
  %is_true1358 = icmp eq i64 %and1357, 10, !dbg !67
  br i1 %is_true1358, label %ip323, label %ip334, !dbg !67

use_call1322:                                     ; preds = %check_nil_block, %is_fixnum_block, %is_false_block, %is_true_block, %is_nil_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1351 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"* %constant1309) #0, !dbg !67
  br label %continue1321, !dbg !67

class_verified_block:                             ; preds = %continue1299
  %word_pos1331 = getelementptr %"struct.rubinius::Object"* %constant1309, i64 0, i32 0, i32 0, i32 0, !dbg !67
  %flags1332 = load i64* %word_pos1331, align 8, !dbg !67
  %mask1333 = and i64 %flags1332, 255, !dbg !67
  %is_type1334 = icmp eq i64 %mask1333, 20, !dbg !67
  br i1 %is_type1334, label %check_symbol_block, label %use_call1322, !dbg !67

reference_block:                                  ; preds = %continue1299
  %class_pos1328 = getelementptr %"struct.rubinius::Object"* %local1284, i64 0, i32 0, i32 1, !dbg !67
  %ref_class1329 = load %"struct.rubinius::Class"** %class_pos1328, align 8, !dbg !67
  %downcast1330 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1329, i64 0, i32 0, i32 0, !dbg !67
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1330, %constant1309, !dbg !67
  br i1 %check_class, label %continue1321, label %use_call1322, !dbg !67

check_symbol_block:                               ; preds = %class_verified_block
  %class_id_pos1336 = getelementptr %"struct.rubinius::Object"* %constant1309, i64 4, i32 0, i32 2, !dbg !67
  %79 = bitcast %"struct.rubinius::Object"** %class_id_pos1336 to i32*, !dbg !67
  %class_id1337 = load i32* %79, align 4, !dbg !67
  %masked1339 = and i64 %cast1325, 7, !dbg !67
  %is_symbol = icmp eq i64 %masked1339, 6, !dbg !67
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !67

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1340 = icmp eq i32 %class_id1337, 39, !dbg !67
  br i1 %check_class_id1340, label %continue1321, label %use_call1322, !dbg !67

check_fixnum_block:                               ; preds = %check_symbol_block
  %masked1342 = and i64 %cast1325, 1, !dbg !67
  %is_fixnum1343 = icmp eq i64 %masked1342, 0, !dbg !67
  br i1 %is_fixnum1343, label %check_nil_block, label %is_fixnum_block, !dbg !67

is_fixnum_block:                                  ; preds = %check_fixnum_block
  switch i32 %class_id1337, label %use_call1322 [
    i32 37, label %continue1321
    i32 35, label %continue1321
  ], !dbg !67

check_nil_block:                                  ; preds = %check_fixnum_block
  switch i64 %cast1325, label %use_call1322 [
    i64 26, label %is_nil_block
    i64 18, label %is_true_block
    i64 10, label %is_false_block
  ], !dbg !67

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1346 = icmp eq i32 %class_id1337, 27, !dbg !67
  br i1 %check_class_id1346, label %continue1321, label %use_call1322, !dbg !67

is_true_block:                                    ; preds = %check_nil_block
  %check_class_id1348 = icmp eq i32 %class_id1337, 29, !dbg !67
  br i1 %check_class_id1348, label %continue1321, label %use_call1322, !dbg !67

is_false_block:                                   ; preds = %check_nil_block
  %check_class_id1350 = icmp eq i32 %class_id1337, 31, !dbg !67
  br i1 %check_class_id1350, label %continue1321, label %use_call1322, !dbg !67

ip323:                                            ; preds = %continue1321
  %system_object1360 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !67
  store %"struct.rubinius::Object"* %system_object1360, %"struct.rubinius::Object"** %stack54, align 8, !dbg !67
  store %"struct.rubinius::Object"* %local1284, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !67
  %constant_cache1366 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !67
  %constant_cache_pos1367 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i64 0, i32 4, !dbg !67
  %constant_scope1368 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1367, align 8, !dbg !67
  %same_scope1371 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1368, %frame_scope1294, !dbg !67
  br i1 %same_scope1371, label %check_serial1372, label %use_call1374, !dbg !67

check_serial1372:                                 ; preds = %ip323
  %global_serial1365 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !67
  %serial_pos1376 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i64 0, i32 7, !dbg !67
  %serial1377 = load i32* %serial_pos1376, align 4, !dbg !67
  %use_cache1378 = icmp eq i32 %global_serial1365, %serial1377, !dbg !67
  br i1 %use_cache1378, label %use_cache1373, label %use_call1374, !dbg !67

use_cache1373:                                    ; preds = %check_serial1372
  %value_pos1379 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1366, i64 0, i32 2, !dbg !67
  %cached_value1380 = load %"struct.rubinius::Object"** %value_pos1379, align 8, !dbg !67
  br label %continue1375, !dbg !67

use_call1374:                                     ; preds = %check_serial1372, %ip323
  store i32 327, i32* %37, align 4, !dbg !67
  %push_const_fast1381 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566672 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !67
  %null_check1384 = icmp eq %"struct.rubinius::Object"* %push_const_fast1381, null, !dbg !67
  br i1 %null_check1384, label %bail_out72, label %continue1375, !dbg !67

continue1375:                                     ; preds = %use_call1374, %use_cache1373
  %constant1385 = phi %"struct.rubinius::Object"* [ %cached_value1380, %use_cache1373 ], [ %push_const_fast1381, %use_call1374 ], !dbg !67, !rbx-classid !69
  store %"struct.rubinius::Object"* %constant1385, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !67
  %stack_pos1387 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 12, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1387, align 8, !dbg !67
  store %"struct.rubinius::Object"* %system_object1360, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !67
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !67
  store i32 3, i32* %out_args_total, align 8, !dbg !67
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !67
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !67
  %cache_const1391 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566704 to %"struct.rubinius::CallSite"**), align 16, !dbg !67
  %execute_pos1392 = getelementptr %"struct.rubinius::CallSite"* %cache_const1391, i64 0, i32 2, !dbg !67
  %execute1393 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1392, align 8, !dbg !67
  store i32 331, i32* %37, align 4, !dbg !67
  %call_site_execute1394 = call %"struct.rubinius::Object"* %execute1393(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1391, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !67
  %null_check1397 = icmp eq %"struct.rubinius::Object"* %call_site_execute1394, null, !dbg !67
  br i1 %null_check1397, label %bail_out72, label %check_active1396, !dbg !67

ip334:                                            ; preds = %continue1321, %check_active1396
  %stack_load1401 = phi %"struct.rubinius::Object"* [ %local1284, %continue1321 ], [ %call_site_execute1394, %check_active1396 ]
  store %"struct.rubinius::Object"* %stack_load1401, %"struct.rubinius::Object"** %49, align 8, !dbg !67
  store %"struct.rubinius::Object"* %stack_load1401, %"struct.rubinius::Object"** %stack54, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !70
  store %"struct.rubinius::Object"* %stack_load1401, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !70
  store i32 1, i32* %out_args_total, align 8, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !70
  %cache_const1409 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566776 to %"struct.rubinius::CallSite"**), align 8, !dbg !70
  %execute_pos1410 = getelementptr %"struct.rubinius::CallSite"* %cache_const1409, i64 0, i32 2, !dbg !70
  %execute1411 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1410, align 8, !dbg !70
  store i32 340, i32* %37, align 4, !dbg !70
  %call_site_execute1412 = call %"struct.rubinius::Object"* %execute1411(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1409, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check1415 = icmp eq %"struct.rubinius::Object"* %call_site_execute1412, null, !dbg !70
  br i1 %null_check1415, label %bail_out72, label %check_active1414, !dbg !70

check_active1396:                                 ; preds = %continue1375
  store %"struct.rubinius::Object"* %call_site_execute1394, %"struct.rubinius::Object"** %stack54, align 8, !dbg !67
  br label %ip334, !dbg !67

check_active1414:                                 ; preds = %ip334
  store %"struct.rubinius::Object"* %call_site_execute1412, %"struct.rubinius::Object"** %stack54, align 8, !dbg !70
  %as_int1419 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1412 to i64, !dbg !70
  %and1420 = and i64 %as_int1419, 15, !dbg !70
  %is_true1421 = icmp eq i64 %and1420, 10, !dbg !70
  br i1 %is_true1421, label %ip356, label %ip345, !dbg !70

ip345:                                            ; preds = %check_active1414
  %local1424 = load %"struct.rubinius::Object"** %49, align 8, !dbg !70, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1424, %"struct.rubinius::Object"** %stack54, align 8, !dbg !70
  %self1427 = load %"struct.rubinius::Object"** %42, align 8, !dbg !70
  %field_pos14295155 = getelementptr %"struct.rubinius::Object"* %self1427, i64 1, !dbg !70
  %field_pos1429 = bitcast %"struct.rubinius::Object"* %field_pos14295155 to %"struct.rubinius::Object"**, !dbg !70
  %field1430 = load %"struct.rubinius::Object"** %field_pos1429, align 8, !dbg !70
  store %"struct.rubinius::Object"* %field1430, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !70
  store %"struct.rubinius::Object"* %local1424, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !70
  store i32 1, i32* %out_args_total, align 8, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !70
  %cache_const1435 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566848 to %"struct.rubinius::CallSite"**), align 64, !dbg !70
  %execute_pos1436 = getelementptr %"struct.rubinius::CallSite"* %cache_const1435, i64 0, i32 2, !dbg !70
  %execute1437 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1436, align 8, !dbg !70
  store i32 349, i32* %37, align 4, !dbg !70
  %call_site_execute1438 = call %"struct.rubinius::Object"* %execute1437(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1435, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check1441 = icmp eq %"struct.rubinius::Object"* %call_site_execute1438, null, !dbg !70
  br i1 %null_check1441, label %bail_out72, label %check_active1440, !dbg !70

check_active1440:                                 ; preds = %ip345
  store %"struct.rubinius::Object"* %call_site_execute1438, %"struct.rubinius::Object"** %stack54, align 8, !dbg !70
  store %"struct.rubinius::Object"* %call_site_execute1438, %"struct.rubinius::Object"** %49, align 8, !dbg !70
  br label %ip357, !dbg !70

ip357:                                            ; preds = %ip356, %check_active1440
  %local1448 = load %"struct.rubinius::Object"** %48, align 8, !dbg !71, !rbx-classid !24
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack54, align 8, !dbg !71
  %as_int1452 = ptrtoint %"struct.rubinius::Object"* %local1448 to i64, !dbg !71
  %and1453 = and i64 %as_int1452, 15, !dbg !71
  %is_true1454 = icmp eq i64 %and1453, 10, !dbg !71
  br i1 %is_true1454, label %ip386, label %ip362, !dbg !71

ip362:                                            ; preds = %ip357
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack54, align 8, !dbg !72
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !72
  %constant_cache1463 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !72
  %constant_cache_pos1464 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i64 0, i32 4, !dbg !72
  %constant_scope1465 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1464, align 8, !dbg !72
  %80 = load %"struct.rubinius::Object"** %34, align 8, !dbg !72
  %frame_scope1467 = bitcast %"struct.rubinius::Object"* %80 to %"struct.rubinius::ConstantScope"*, !dbg !72
  %same_scope1468 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1465, %frame_scope1467, !dbg !72
  br i1 %same_scope1468, label %check_serial1469, label %use_call1471, !dbg !72

check_serial1469:                                 ; preds = %ip362
  %global_serial1462 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !72
  %serial_pos1473 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i64 0, i32 7, !dbg !72
  %serial1474 = load i32* %serial_pos1473, align 4, !dbg !72
  %use_cache1475 = icmp eq i32 %global_serial1462, %serial1474, !dbg !72
  br i1 %use_cache1475, label %use_cache1470, label %use_call1471, !dbg !72

use_cache1470:                                    ; preds = %check_serial1469
  %value_pos1476 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1463, i64 0, i32 2, !dbg !72
  %cached_value1477 = load %"struct.rubinius::Object"** %value_pos1476, align 8, !dbg !72
  br label %continue1472, !dbg !72

use_call1471:                                     ; preds = %check_serial1469, %ip362
  store i32 365, i32* %37, align 4, !dbg !72
  %push_const_fast1478 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566976 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !72
  %null_check1481 = icmp eq %"struct.rubinius::Object"* %push_const_fast1478, null, !dbg !72
  br i1 %null_check1481, label %bail_out72, label %continue1472, !dbg !72

continue1472:                                     ; preds = %use_call1471, %use_cache1470
  %constant1482 = phi %"struct.rubinius::Object"* [ %cached_value1477, %use_cache1470 ], [ %push_const_fast1478, %use_call1471 ], !dbg !72, !rbx-classid !73
  store %"struct.rubinius::Object"* %constant1482, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !72
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !72
  %masked1512 = and i64 %as_int1452, 3, !dbg !72
  %is_reference1513 = icmp eq i64 %masked1512, 0, !dbg !72
  br i1 %is_reference1513, label %reference_block1499, label %class_verified_block1498, !dbg !72

continue1494:                                     ; preds = %is_fixnum_block1503, %is_fixnum_block1503, %reference_block1499, %is_symbol_block1501, %is_nil_block1506, %is_true_block1508, %is_false_block1510, %use_call1495
  %constant1541 = phi %"struct.rubinius::Object"* [ %kind_of1540, %use_call1495 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block1510 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block1508 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block1506 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1503 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block1501 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block1499 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1503 ], !dbg !72
  store %"struct.rubinius::Object"* %constant1541, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !72
  %as_int1545 = ptrtoint %"struct.rubinius::Object"* %constant1541 to i64, !dbg !72
  %and1546 = and i64 %as_int1545, 15, !dbg !72
  %is_true1547 = icmp eq i64 %and1546, 10, !dbg !72
  br i1 %is_true1547, label %ip371, label %ip382, !dbg !72

use_call1495:                                     ; preds = %check_nil_block1505, %is_fixnum_block1503, %is_false_block1510, %is_true_block1508, %is_nil_block1506, %is_symbol_block1501, %class_verified_block1498, %reference_block1499
  %kind_of1540 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"* %constant1482) #0, !dbg !72
  br label %continue1494, !dbg !72

class_verified_block1498:                         ; preds = %continue1472
  %word_pos1518 = getelementptr %"struct.rubinius::Object"* %constant1482, i64 0, i32 0, i32 0, i32 0, !dbg !72
  %flags1519 = load i64* %word_pos1518, align 8, !dbg !72
  %mask1520 = and i64 %flags1519, 255, !dbg !72
  %is_type1521 = icmp eq i64 %mask1520, 20, !dbg !72
  br i1 %is_type1521, label %check_symbol_block1500, label %use_call1495, !dbg !72

reference_block1499:                              ; preds = %continue1472
  %class_pos1514 = getelementptr %"struct.rubinius::Object"* %local1448, i64 0, i32 0, i32 1, !dbg !72
  %ref_class1515 = load %"struct.rubinius::Class"** %class_pos1514, align 8, !dbg !72
  %downcast1516 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1515, i64 0, i32 0, i32 0, !dbg !72
  %check_class1517 = icmp eq %"struct.rubinius::Object"* %downcast1516, %constant1482, !dbg !72
  br i1 %check_class1517, label %continue1494, label %use_call1495, !dbg !72

check_symbol_block1500:                           ; preds = %class_verified_block1498
  %class_id_pos1523 = getelementptr %"struct.rubinius::Object"* %constant1482, i64 4, i32 0, i32 2, !dbg !72
  %81 = bitcast %"struct.rubinius::Object"** %class_id_pos1523 to i32*, !dbg !72
  %class_id1524 = load i32* %81, align 4, !dbg !72
  %masked1526 = and i64 %as_int1452, 7, !dbg !72
  %is_symbol1527 = icmp eq i64 %masked1526, 6, !dbg !72
  br i1 %is_symbol1527, label %is_symbol_block1501, label %check_fixnum_block1502, !dbg !72

is_symbol_block1501:                              ; preds = %check_symbol_block1500
  %check_class_id1528 = icmp eq i32 %class_id1524, 39, !dbg !72
  br i1 %check_class_id1528, label %continue1494, label %use_call1495, !dbg !72

check_fixnum_block1502:                           ; preds = %check_symbol_block1500
  %masked1530 = and i64 %as_int1452, 1, !dbg !72
  %is_fixnum1531 = icmp eq i64 %masked1530, 0, !dbg !72
  br i1 %is_fixnum1531, label %check_nil_block1505, label %is_fixnum_block1503, !dbg !72

is_fixnum_block1503:                              ; preds = %check_fixnum_block1502
  switch i32 %class_id1524, label %use_call1495 [
    i32 37, label %continue1494
    i32 35, label %continue1494
  ], !dbg !72

check_nil_block1505:                              ; preds = %check_fixnum_block1502
  switch i64 %as_int1452, label %use_call1495 [
    i64 26, label %is_nil_block1506
    i64 18, label %is_true_block1508
    i64 10, label %is_false_block1510
  ], !dbg !72

is_nil_block1506:                                 ; preds = %check_nil_block1505
  %check_class_id1535 = icmp eq i32 %class_id1524, 27, !dbg !72
  br i1 %check_class_id1535, label %continue1494, label %use_call1495, !dbg !72

is_true_block1508:                                ; preds = %check_nil_block1505
  %check_class_id1537 = icmp eq i32 %class_id1524, 29, !dbg !72
  br i1 %check_class_id1537, label %continue1494, label %use_call1495, !dbg !72

is_false_block1510:                               ; preds = %check_nil_block1505
  %check_class_id1539 = icmp eq i32 %class_id1524, 31, !dbg !72
  br i1 %check_class_id1539, label %continue1494, label %use_call1495, !dbg !72

ip371:                                            ; preds = %continue1494
  %system_object1549 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !72
  store %"struct.rubinius::Object"* %system_object1549, %"struct.rubinius::Object"** %stack54, align 8, !dbg !72
  store %"struct.rubinius::Object"* %local1448, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !72
  %constant_cache1555 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !72
  %constant_cache_pos1556 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i64 0, i32 4, !dbg !72
  %constant_scope1557 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1556, align 8, !dbg !72
  %same_scope1560 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1557, %frame_scope1467, !dbg !72
  br i1 %same_scope1560, label %check_serial1561, label %use_call1563, !dbg !72

check_serial1561:                                 ; preds = %ip371
  %global_serial1554 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !72
  %serial_pos1565 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i64 0, i32 7, !dbg !72
  %serial1566 = load i32* %serial_pos1565, align 4, !dbg !72
  %use_cache1567 = icmp eq i32 %global_serial1554, %serial1566, !dbg !72
  br i1 %use_cache1567, label %use_cache1562, label %use_call1563, !dbg !72

use_cache1562:                                    ; preds = %check_serial1561
  %value_pos1568 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1555, i64 0, i32 2, !dbg !72
  %cached_value1569 = load %"struct.rubinius::Object"** %value_pos1568, align 8, !dbg !72
  br label %continue1564, !dbg !72

use_call1563:                                     ; preds = %check_serial1561, %ip371
  store i32 375, i32* %37, align 4, !dbg !72
  %push_const_fast1570 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567056 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !72
  %null_check1573 = icmp eq %"struct.rubinius::Object"* %push_const_fast1570, null, !dbg !72
  br i1 %null_check1573, label %bail_out72, label %continue1564, !dbg !72

continue1564:                                     ; preds = %use_call1563, %use_cache1562
  %constant1574 = phi %"struct.rubinius::Object"* [ %cached_value1569, %use_cache1562 ], [ %push_const_fast1570, %use_call1563 ], !dbg !72, !rbx-classid !74
  store %"struct.rubinius::Object"* %constant1574, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !72
  %stack_pos1576 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 12, !dbg !72
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1576, align 8, !dbg !72
  store %"struct.rubinius::Object"* %system_object1549, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !72
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !72
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !72
  store i32 3, i32* %out_args_total, align 8, !dbg !72
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !72
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !72
  %cache_const1580 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567088 to %"struct.rubinius::CallSite"**), align 16, !dbg !72
  %execute_pos1581 = getelementptr %"struct.rubinius::CallSite"* %cache_const1580, i64 0, i32 2, !dbg !72
  %execute1582 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1581, align 8, !dbg !72
  store i32 379, i32* %37, align 4, !dbg !72
  %call_site_execute1583 = call %"struct.rubinius::Object"* %execute1582(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1580, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !72
  %null_check1586 = icmp eq %"struct.rubinius::Object"* %call_site_execute1583, null, !dbg !72
  br i1 %null_check1586, label %bail_out72, label %check_active1585, !dbg !72

ip382:                                            ; preds = %continue1494, %check_active1585
  %stack_load1590 = phi %"struct.rubinius::Object"* [ %local1448, %continue1494 ], [ %call_site_execute1583, %check_active1585 ]
  store %"struct.rubinius::Object"* %stack_load1590, %"struct.rubinius::Object"** %50, align 8, !dbg !72
  br label %ip459, !dbg !72

check_active1585:                                 ; preds = %continue1564
  store %"struct.rubinius::Object"* %call_site_execute1583, %"struct.rubinius::Object"** %stack54, align 8, !dbg !72
  br label %ip382, !dbg !72

ip386:                                            ; preds = %ip357
  %local1593 = load %"struct.rubinius::Object"** %49, align 8, !dbg !75, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1593, %"struct.rubinius::Object"** %stack54, align 8, !dbg !75
  %self1596 = load %"struct.rubinius::Object"** %42, align 8, !dbg !75
  %field_pos15985156 = getelementptr %"struct.rubinius::Object"* %self1596, i64 1, !dbg !75
  %field_pos1598 = bitcast %"struct.rubinius::Object"* %field_pos15985156 to %"struct.rubinius::Object"**, !dbg !75
  %field1599 = load %"struct.rubinius::Object"** %field_pos1598, align 8, !dbg !75
  store %"struct.rubinius::Object"* %field1599, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !75
  store %"struct.rubinius::Object"* %local1593, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !75
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !75
  store i32 1, i32* %out_args_total, align 8, !dbg !75
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !75
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !75
  %cache_const1604 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567176 to %"struct.rubinius::CallSite"**), align 8, !dbg !75
  %execute_pos1605 = getelementptr %"struct.rubinius::CallSite"* %cache_const1604, i64 0, i32 2, !dbg !75
  %execute1606 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1605, align 8, !dbg !75
  store i32 390, i32* %37, align 4, !dbg !75
  %call_site_execute1607 = call %"struct.rubinius::Object"* %execute1606(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1604, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !75
  %null_check1610 = icmp eq %"struct.rubinius::Object"* %call_site_execute1607, null, !dbg !75
  br i1 %null_check1610, label %bail_out72, label %check_active1609, !dbg !75

check_active1609:                                 ; preds = %ip386
  %as_int1614 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1607 to i64, !dbg !75
  %and1615 = and i64 %as_int1614, 15, !dbg !75
  %is_true1616 = icmp eq i64 %and1615, 10, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !75
  br i1 %is_true1616, label %ip399, label %return_pad45, !dbg !75

ip399:                                            ; preds = %check_active1609
  %82 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !76
  %stack_pos1623 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 19, !dbg !76
  store %"struct.rubinius::Object"* %82, %"struct.rubinius::Object"** %stack_pos1623, align 8, !dbg !76
  %self1629 = load %"struct.rubinius::Object"** %42, align 8, !dbg !77
  %field_pos1631 = getelementptr %"struct.rubinius::Object"* %self1629, i64 1, i32 0, i32 1, !dbg !77
  %83 = load %"struct.rubinius::Class"** %field_pos1631, align 8, !dbg !77
  %field1632 = getelementptr inbounds %"struct.rubinius::Class"* %83, i64 0, i32 0, i32 0, !dbg !77
  store %"struct.rubinius::Object"* %field1632, %"struct.rubinius::Object"** %stack54, align 8, !dbg !77
  %84 = getelementptr %"struct.rubinius::Object"* %self1629, i64 1, i32 0, i32 2, !dbg !77
  %field1638 = load %"struct.rubinius::Object"** %84, align 8, !dbg !77
  store %"struct.rubinius::Object"* %field1638, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !77
  %local1641 = load %"struct.rubinius::Object"** %49, align 8, !dbg !77, !rbx-classid !32
  store %"struct.rubinius::Object"* %local1641, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !77
  store %"struct.rubinius::Object"* %field1638, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !77
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !77
  store i32 1, i32* %out_args_total, align 8, !dbg !77
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !77
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !77
  %cache_const1646 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567368 to %"struct.rubinius::CallSite"**), align 8, !dbg !77
  %execute_pos1647 = getelementptr %"struct.rubinius::CallSite"* %cache_const1646, i64 0, i32 2, !dbg !77
  %execute1648 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1647, align 8, !dbg !77
  store i32 414, i32* %37, align 4, !dbg !77
  %call_site_execute1649 = call %"struct.rubinius::Object"* %execute1648(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1646, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !77
  %null_check1652 = icmp eq %"struct.rubinius::Object"* %call_site_execute1649, null, !dbg !77
  br i1 %null_check1652, label %is_exception1626, label %check_active1651, !dbg !77

is_exception1626:                                 ; preds = %check_active1651, %ip399
  %rae1627 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !76
  br i1 %rae1627, label %ip424, label %bail_out72, !dbg !76

check_active1651:                                 ; preds = %ip399
  store %"struct.rubinius::Object"* %call_site_execute1649, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !77
  %stack_load1655 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !77
  store %"struct.rubinius::Object"* %stack_load1655, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !77
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !77
  store i32 1, i32* %out_args_total, align 8, !dbg !77
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !77
  store %"struct.rubinius::Object"** %stack_pos100, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !77
  %cache_const1657 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567392 to %"struct.rubinius::CallSite"**), align 32, !dbg !77
  %execute_pos1658 = getelementptr %"struct.rubinius::CallSite"* %cache_const1657, i64 0, i32 2, !dbg !77
  %execute1659 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1658, align 8, !dbg !77
  store i32 417, i32* %37, align 4, !dbg !77
  %call_site_execute1660 = call %"struct.rubinius::Object"* %execute1659(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1657, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !77
  %null_check1663 = icmp eq %"struct.rubinius::Object"* %call_site_execute1660, null, !dbg !77
  br i1 %null_check1663, label %is_exception1626, label %check_active1662, !dbg !77

ip424:                                            ; preds = %is_exception1626
  %85 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !36
  store %"struct.rubinius::Object"* %85, %"struct.rubinius::Object"** %stack54, align 8, !dbg !36
  %stack_pos1668 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk525126, i64 0, i64 18, !dbg !36
  store %"struct.rubinius::Object"* %85, %"struct.rubinius::Object"** %stack_pos1668, align 8, !dbg !36
  %ce1671 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !36
  store %"struct.rubinius::Object"* %ce1671, %"struct.rubinius::Object"** %stack54, align 8, !dbg !36
  store %"struct.rubinius::Object"* %ce1671, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !78
  %constant_cache1677 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !78
  %constant_cache_pos1678 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i64 0, i32 4, !dbg !78
  %constant_scope1679 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1678, align 8, !dbg !78
  %86 = load %"struct.rubinius::Object"** %34, align 8, !dbg !78
  %frame_scope1681 = bitcast %"struct.rubinius::Object"* %86 to %"struct.rubinius::ConstantScope"*, !dbg !78
  %same_scope1682 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1679, %frame_scope1681, !dbg !78
  br i1 %same_scope1682, label %check_serial1683, label %use_call1685, !dbg !78

check_active1662:                                 ; preds = %check_active1651
  store %"struct.rubinius::Object"* %call_site_execute1660, %"struct.rubinius::Object"** %stack54, align 8, !dbg !77
  br label %return_pad45, !dbg !77

check_serial1683:                                 ; preds = %ip424
  %global_serial1676 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !78
  %serial_pos1687 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i64 0, i32 7, !dbg !78
  %serial1688 = load i32* %serial_pos1687, align 4, !dbg !78
  %use_cache1689 = icmp eq i32 %global_serial1676, %serial1688, !dbg !78
  br i1 %use_cache1689, label %use_cache1684, label %use_call1685, !dbg !78

use_cache1684:                                    ; preds = %check_serial1683
  %value_pos1690 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1677, i64 0, i32 2, !dbg !78
  %cached_value1691 = load %"struct.rubinius::Object"** %value_pos1690, align 8, !dbg !78
  br label %continue1686, !dbg !78

use_call1685:                                     ; preds = %check_serial1683, %ip424
  store i32 430, i32* %37, align 4, !dbg !78
  %push_const_fast1692 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !78
  %null_check1695 = icmp eq %"struct.rubinius::Object"* %push_const_fast1692, null, !dbg !78
  br i1 %null_check1695, label %bail_out72, label %continue1686, !dbg !78

continue1686:                                     ; preds = %use_call1685, %use_cache1684
  %constant1696 = phi %"struct.rubinius::Object"* [ %cached_value1691, %use_cache1684 ], [ %push_const_fast1692, %use_call1685 ], !dbg !78, !rbx-classid !79
  store %"struct.rubinius::Object"* %constant1696, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !78
  %constant_cache1701 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !78
  %constant_cache_pos1702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i64 0, i32 4, !dbg !78
  %constant_scope1703 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1702, align 8, !dbg !78
  %same_scope1706 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1703, %frame_scope1681, !dbg !78
  br i1 %same_scope1706, label %check_serial1707, label %use_call1710, !dbg !78

check_serial1707:                                 ; preds = %continue1686
  %global_serial1700 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !78
  %serial_pos1712 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i64 0, i32 7, !dbg !78
  %serial1713 = load i32* %serial_pos1712, align 4, !dbg !78
  %use_under1714 = icmp eq i32 %global_serial1700, %serial1713, !dbg !78
  br i1 %use_under1714, label %check_under1708, label %use_call1710, !dbg !78

check_under1708:                                  ; preds = %check_serial1707
  %value_pos1715 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i64 0, i32 3, !dbg !78
  %cached_under1716 = load %"struct.rubinius::Module"** %value_pos1715, align 8, !dbg !78
  %downcast1717 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under1716, i64 0, i32 0, !dbg !78
  %use_cache1718 = icmp eq %"struct.rubinius::Object"* %downcast1717, %constant1696, !dbg !78
  br i1 %use_cache1718, label %use_cache1709, label %use_call1710, !dbg !78

use_cache1709:                                    ; preds = %check_under1708
  %value_pos1719 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1701, i64 0, i32 2, !dbg !78
  %cached_value1720 = load %"struct.rubinius::Object"** %value_pos1719, align 8, !dbg !78
  br label %continue1711, !dbg !78

use_call1710:                                     ; preds = %check_under1708, %check_serial1707, %continue1686
  store i32 432, i32* %37, align 4, !dbg !78
  %constant1721 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567512 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1696) #0, !dbg !78
  %null_check1724 = icmp eq %"struct.rubinius::Object"* %constant1721, null, !dbg !78
  br i1 %null_check1724, label %bail_out72, label %continue1711, !dbg !78

continue1711:                                     ; preds = %use_call1710, %use_cache1709
  %constant1725 = phi %"struct.rubinius::Object"* [ %cached_value1720, %use_cache1709 ], [ %constant1721, %use_call1710 ], !dbg !78, !rbx-classid !80
  store %"struct.rubinius::Object"* %constant1725, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !78
  store %"struct.rubinius::Object"* %ce1671, %"struct.rubinius::Object"** %stack_pos107, align 8, !dbg !78
  store %"struct.rubinius::Object"* %constant1725, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !78
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !78
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !78
  store i32 1, i32* %out_args_total, align 8, !dbg !78
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !78
  store %"struct.rubinius::Object"** %stack_pos107, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !78
  %cache_const1736 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567536 to %"struct.rubinius::CallSite"**), align 16, !dbg !78
  %execute_pos1737 = getelementptr %"struct.rubinius::CallSite"* %cache_const1736, i64 0, i32 2, !dbg !78
  %execute1738 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1737, align 8, !dbg !78
  store i32 435, i32* %37, align 4, !dbg !78
  %call_site_execute1739 = call %"struct.rubinius::Object"* %execute1738(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1736, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Arguments"* %out_args), !dbg !78
  %null_check1742 = icmp eq %"struct.rubinius::Object"* %call_site_execute1739, null, !dbg !78
  br i1 %null_check1742, label %bail_out72, label %check_active1741, !dbg !78

check_active1741:                                 ; preds = %continue1711
  store %"struct.rubinius::Object"* %call_site_execute1739, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !78
  %as_int1746 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1739 to i64, !dbg !78
  %and1747 = and i64 %as_int1746, 15, !dbg !78
  %is_true1748 = icmp eq i64 %and1747, 10, !dbg !78
  br i1 %is_true1748, label %ip451, label %ip442, !dbg !78

ip451:                                            ; preds = %check_active1741
  %stack_local1752 = load %"struct.rubinius::Object"** %stack_pos1668, align 8, !dbg !81
  store %"struct.rubinius::Object"* %stack_local1752, %"struct.rubinius::Object"** %stack54, align 8, !dbg !81
  %87 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_local1752), !dbg !81
  br label %bail_out72, !dbg !81

ip442:                                            ; preds = %check_active1741
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !81
  %stack_local1759 = load %"struct.rubinius::Object"** %stack_pos1623, align 8, !dbg !81
  store %"struct.rubinius::Object"* %stack_local1759, %"struct.rubinius::Object"** %stack_pos100, align 8, !dbg !81
  %88 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame53, %"struct.rubinius::Object"* %stack_local1759), !dbg !81
  %stack_load1764 = load %"struct.rubinius::Object"** %stack54, align 8, !dbg !81, !rbx-classid !53
  br label %return_pad45, !dbg !81

ip356:                                            ; preds = %check_active1414
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack54, align 8, !dbg !70
  br label %ip357, !dbg !70

return_pad45:                                     ; preds = %check_active1609, %ip213, %continue672, %continue443, %continue317, %bail_out72, %ip442, %check_active1662, %check_active1241, %ip130, %tuple_at, %class_fallback762, %continue634, %ip502, %check_active427, %ret_raise_val74
  %local1793 = phi %"struct.rubinius::Object"* [ %crv76, %ret_raise_val74 ], [ %call_site_execute425, %check_active427 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip502 ], [ %send_result656, %continue634 ], [ %68, %class_fallback762 ], [ %tuple_at775, %tuple_at ], [ %stack_load870, %ip130 ], [ %call_site_execute1239, %check_active1241 ], [ %call_site_execute1660, %check_active1662 ], [ %stack_load1764, %ip442 ], [ null, %bail_out72 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue317 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue443 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue672 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip213 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %check_active1609 ]
  %null_check1768 = icmp eq %"struct.rubinius::Object"* %local1793, null, !dbg !25
  br i1 %null_check1768, label %bail_out, label %check_active1767, !dbg !25

check_active1767:                                 ; preds = %return_pad45
  %89 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 10, !dbg !25
  store %"struct.rubinius::Object"* %local1793, %"struct.rubinius::Object"** %89, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !82
  %self1775 = load %"struct.rubinius::Object"** %14, align 8, !dbg !82
  %cast1776 = ptrtoint %"struct.rubinius::Object"* %self1775 to i64, !dbg !82
  %masked1777 = and i64 %cast1776, 3, !dbg !82
  %is_reference1778 = icmp eq i64 %masked1777, 0, !dbg !82
  br i1 %is_reference1778, label %check_class_id1779, label %visit_push_ivar_fallback, !dbg !82

continue1773:                                     ; preds = %visit_push_ivar_fallback, %correct_class1780
  %stack_load1864 = phi %"struct.rubinius::Object"* [ %"select ivar", %correct_class1780 ], [ %ivar, %visit_push_ivar_fallback ]
  store %"struct.rubinius::Object"* %stack_load1864, %"struct.rubinius::Object"** %stack, align 8, !dbg !82
  store %"struct.rubinius::Object"* %local1793, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !82
  %cast1800 = ptrtoint %"struct.rubinius::Object"* %local1793 to i64, !dbg !82
  %masked1801 = and i64 %cast1800, 3, !dbg !82
  %is_reference1802 = icmp eq i64 %masked1801, 0, !dbg !82
  br i1 %is_reference1802, label %check_class_id1803, label %class_fallback1795, !dbg !82

check_class_id1779:                               ; preds = %check_active1767
  %class_pos1781 = getelementptr %"struct.rubinius::Object"* %self1775, i64 0, i32 0, i32 1, !dbg !82
  %ref_class1782 = load %"struct.rubinius::Class"** %class_pos1781, align 8, !dbg !82
  %class_id_pos1783 = getelementptr %"struct.rubinius::Class"* %ref_class1782, i64 0, i32 4, !dbg !82
  %class_id1784 = load i32* %class_id_pos1783, align 4, !dbg !82
  %check_class_id1785 = icmp eq i32 %class_id1784, 1285, !dbg !82
  br i1 %check_class_id1785, label %correct_class1780, label %visit_push_ivar_fallback, !dbg !82

correct_class1780:                                ; preds = %check_class_id1779
  %field_pos17875145 = getelementptr %"struct.rubinius::Object"* %self1775, i64 1, !dbg !82
  %field_pos1787 = bitcast %"struct.rubinius::Object"* %field_pos17875145 to %"struct.rubinius::Object"**, !dbg !82
  %field1788 = load %"struct.rubinius::Object"** %field_pos1787, align 8, !dbg !82
  %prune_undef = icmp eq %"struct.rubinius::Object"* %field1788, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !82
  %"select ivar" = select i1 %prune_undef, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1788, !dbg !82
  br label %continue1773, !dbg !82

visit_push_ivar_fallback:                         ; preds = %check_class_id1779, %check_active1767
  %ivar = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1775, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !82
  br label %continue1773, !dbg !82

check_class_id1803:                               ; preds = %continue1773
  %class_pos1806 = getelementptr %"struct.rubinius::Object"* %local1793, i64 0, i32 0, i32 1, !dbg !82
  %ref_class1807 = load %"struct.rubinius::Class"** %class_pos1806, align 8, !dbg !82
  %class_id_pos1808 = getelementptr %"struct.rubinius::Class"* %ref_class1807, i64 0, i32 4, !dbg !82
  %class_id1809 = load i32* %class_id_pos1808, align 4, !dbg !82
  %check_class_id1810 = icmp eq i32 %class_id1809, 1285, !dbg !82
  br i1 %check_class_id1810, label %correct_class1804, label %class_fallback1795, !dbg !82

correct_class1804:                                ; preds = %check_class_id1803
  %serial_id_pos1811 = getelementptr %"struct.rubinius::Class"* %ref_class1807, i64 0, i32 5, !dbg !82
  %serial_id1812 = load i32* %serial_id_pos1811, align 4, !dbg !82
  %check_serial_id1813 = icmp eq i32 %serial_id1812, 2, !dbg !82
  br i1 %check_serial_id1813, label %correct_serial1805, label %serial_fallback1796, !dbg !82

class_fallback1795:                               ; preds = %check_class_id1803, %continue1773
  store i32 23, i32* %8, align 4, !dbg !82
  %90 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !82
  br label %return_pad, !dbg !82

correct_serial1805:                               ; preds = %correct_class1804
  %field_pos18175131 = getelementptr %"struct.rubinius::Object"* %local1793, i64 1, !dbg !82
  %field_pos1817 = bitcast %"struct.rubinius::Object"* %field_pos18175131 to %"struct.rubinius::Object"**, !dbg !82
  %field1818 = load %"struct.rubinius::Object"** %field_pos1817, align 8, !dbg !82
  %prune_undef1819 = icmp eq %"struct.rubinius::Object"* %field1818, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !82
  %"select ivar1820" = select i1 %prune_undef1819, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1818, !dbg !82
  store %"struct.rubinius::Object"* %"select ivar1820", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !82
  %cast1827 = ptrtoint %"struct.rubinius::Object"* %stack_load1864 to i64, !dbg !82
  %masked1828 = and i64 %cast1827, 3, !dbg !82
  %is_reference1829 = icmp eq i64 %masked1828, 0, !dbg !82
  br i1 %is_reference1829, label %check_class_id1830, label %class_fallback1822, !dbg !82

serial_fallback1796:                              ; preds = %correct_class1804
  store i32 23, i32* %8, align 4, !dbg !82
  %91 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !82
  br label %return_pad, !dbg !82

continue1824:                                     ; preds = %class_fallback1822.continue1824_crit_edge, %continue1854
  %self1880 = phi %"struct.rubinius::Object"* [ %self1775, %continue1854 ], [ %self1880.pre, %class_fallback1822.continue1824_crit_edge ]
  %send_result1872 = phi %"struct.rubinius::Object"* [ %98, %continue1854 ], [ %call_site_execute1869, %class_fallback1822.continue1824_crit_edge ], !dbg !82
  %92 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 11, !dbg !82
  store %"struct.rubinius::Object"* %send_result1872, %"struct.rubinius::Object"** %92, align 8, !dbg !82
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !83
  %cast1881 = ptrtoint %"struct.rubinius::Object"* %self1880 to i64, !dbg !83
  %masked1882 = and i64 %cast1881, 3, !dbg !83
  %is_reference1883 = icmp eq i64 %masked1882, 0, !dbg !83
  br i1 %is_reference1883, label %check_class_id1884, label %visit_push_ivar_fallback1877, !dbg !83

check_class_id1830:                               ; preds = %correct_serial1805
  %class_pos1833 = getelementptr %"struct.rubinius::Object"* %stack_load1864, i64 0, i32 0, i32 1, !dbg !82
  %ref_class1834 = load %"struct.rubinius::Class"** %class_pos1833, align 8, !dbg !82
  %class_id_pos1835 = getelementptr %"struct.rubinius::Class"* %ref_class1834, i64 0, i32 4, !dbg !82
  %class_id1836 = load i32* %class_id_pos1835, align 4, !dbg !82
  %check_class_id1837 = icmp eq i32 %class_id1836, 77, !dbg !82
  br i1 %check_class_id1837, label %correct_class1831, label %class_fallback1822, !dbg !82

correct_class1831:                                ; preds = %check_class_id1830
  %serial_id_pos1838 = getelementptr %"struct.rubinius::Class"* %ref_class1834, i64 0, i32 5, !dbg !82
  %serial_id1839 = load i32* %serial_id_pos1838, align 4, !dbg !82
  %check_serial_id1840 = icmp eq i32 %serial_id1839, 224, !dbg !82
  br i1 %check_serial_id1840, label %correct_serial1832, label %serial_fallback1823, !dbg !82

correct_serial1832:                               ; preds = %correct_class1831
  %cast1844 = ptrtoint %"struct.rubinius::Object"* %"select ivar1820" to i64, !dbg !82
  %masked1845 = and i64 %cast1844, 3, !dbg !82
  %is_reference1846 = icmp eq i64 %masked1845, 0, !dbg !82
  br i1 %is_reference1846, label %check_class_id1847, label %continue1843, !dbg !82

serial_fallback1823:                              ; preds = %correct_class1831
  store i32 26, i32* %8, align 4, !dbg !82
  %93 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 26, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !82
  br label %return_pad, !dbg !82

check_class_id1847:                               ; preds = %correct_serial1832
  %class_pos1849 = getelementptr %"struct.rubinius::Object"* %"select ivar1820", i64 0, i32 0, i32 1, !dbg !82
  %ref_class1850 = load %"struct.rubinius::Class"** %class_pos1849, align 8, !dbg !82
  %class_id_pos1851 = getelementptr %"struct.rubinius::Class"* %ref_class1850, i64 0, i32 4, !dbg !82
  %class_id1852 = load i32* %class_id_pos1851, align 4, !dbg !82
  %check_class_id1853 = icmp eq i32 %class_id1852, 77, !dbg !82
  br i1 %check_class_id1853, label %correct_class1848, label %continue1843, !dbg !82

correct_class1848:                                ; preds = %check_class_id1847
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %"select ivar1820", i64 1, !dbg !82
  %94 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !82
  %farg = load double* %94, align 8, !dbg !82
  br label %continue1854, !dbg !82

continue1843:                                     ; preds = %check_class_id1847, %correct_serial1832
  %masked1856 = and i64 %cast1844, 1, !dbg !82
  %is_fixnum1857 = icmp eq i64 %masked1856, 0, !dbg !82
  br i1 %is_fixnum1857, label %class_fallback1822, label %guarded_body, !dbg !82

guarded_body:                                     ; preds = %continue1843
  %ashr1859 = ashr i64 %cast1844, 1, !dbg !82
  %95 = sitofp i64 %ashr1859 to double, !dbg !82
  br label %continue1854, !dbg !82

continue1854:                                     ; preds = %guarded_body, %correct_class1848
  %rhs = phi double [ %farg, %correct_class1848 ], [ %95, %guarded_body ], !dbg !82
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load1864, i64 1, !dbg !82
  %96 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !82
  %fself = load double* %96, align 8, !dbg !82
  %float.sub = fsub double %fself, %rhs, !dbg !82
  %result1862 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !82, !rbx-classid !84
  %97 = getelementptr %"struct.rubinius::Float"* %result1862, i64 0, i32 1, !dbg !82
  store double %float.sub, double* %97, align 8, !dbg !82
  %98 = getelementptr inbounds %"struct.rubinius::Float"* %result1862, i64 0, i32 0, i32 0, !dbg !82
  br label %continue1824, !dbg !82

class_fallback1822:                               ; preds = %continue1843, %check_class_id1830, %correct_serial1805
  store %"struct.rubinius::Object"* %stack_load1864, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !82
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !82
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !82
  store i32 1, i32* %out_args_total, align 8, !dbg !82
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !82
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !82
  %cache_const1866 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548616 to %"struct.rubinius::CallSite"**), align 8, !dbg !82
  %execute_pos1867 = getelementptr %"struct.rubinius::CallSite"* %cache_const1866, i64 0, i32 2, !dbg !82
  %execute1868 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1867, align 8, !dbg !82
  store i32 26, i32* %8, align 4, !dbg !82
  %call_site_execute1869 = call %"struct.rubinius::Object"* %execute1868(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1866, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !82
  %null_check1871 = icmp eq %"struct.rubinius::Object"* %call_site_execute1869, null, !dbg !82
  br i1 %null_check1871, label %bail_out, label %class_fallback1822.continue1824_crit_edge, !dbg !82

class_fallback1822.continue1824_crit_edge:        ; preds = %class_fallback1822
  %self1880.pre = load %"struct.rubinius::Object"** %14, align 8, !dbg !83
  br label %continue1824, !dbg !82

continue1878:                                     ; preds = %visit_push_ivar_fallback1877, %correct_class1885
  %stack_load1967 = phi %"struct.rubinius::Object"* [ %"select ivar1895", %correct_class1885 ], [ %ivar1898, %visit_push_ivar_fallback1877 ]
  store %"struct.rubinius::Object"* %stack_load1967, %"struct.rubinius::Object"** %stack, align 8, !dbg !83
  %local1901 = load %"struct.rubinius::Object"** %89, align 8, !dbg !83, !rbx-classid !85
  %field_pos1911 = getelementptr %"struct.rubinius::Object"* %local1901, i64 1, i32 0, i32 1, !dbg !83
  %99 = load %"struct.rubinius::Class"** %field_pos1911, align 8, !dbg !83
  %field1912 = getelementptr inbounds %"struct.rubinius::Class"* %99, i64 0, i32 0, i32 0, !dbg !83
  %prune_undef1913 = icmp eq %"struct.rubinius::Object"* %field1912, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !83
  %"select ivar1914" = select i1 %prune_undef1913, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1912, !dbg !83
  store %"struct.rubinius::Object"* %"select ivar1914", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !83
  %cast1921 = ptrtoint %"struct.rubinius::Object"* %stack_load1967 to i64, !dbg !83
  %masked1922 = and i64 %cast1921, 3, !dbg !83
  %is_reference1923 = icmp eq i64 %masked1922, 0, !dbg !83
  br i1 %is_reference1923, label %check_class_id1924, label %class_fallback1916, !dbg !83

check_class_id1884:                               ; preds = %continue1824
  %class_pos1886 = getelementptr %"struct.rubinius::Object"* %self1880, i64 0, i32 0, i32 1, !dbg !83
  %ref_class1887 = load %"struct.rubinius::Class"** %class_pos1886, align 8, !dbg !83
  %class_id_pos1888 = getelementptr %"struct.rubinius::Class"* %ref_class1887, i64 0, i32 4, !dbg !83
  %class_id1889 = load i32* %class_id_pos1888, align 4, !dbg !83
  %check_class_id1890 = icmp eq i32 %class_id1889, 1285, !dbg !83
  br i1 %check_class_id1890, label %correct_class1885, label %visit_push_ivar_fallback1877, !dbg !83

correct_class1885:                                ; preds = %check_class_id1884
  %field_pos1892 = getelementptr %"struct.rubinius::Object"* %self1880, i64 1, i32 0, i32 1, !dbg !83
  %100 = load %"struct.rubinius::Class"** %field_pos1892, align 8, !dbg !83
  %field1893 = getelementptr inbounds %"struct.rubinius::Class"* %100, i64 0, i32 0, i32 0, !dbg !83
  %prune_undef1894 = icmp eq %"struct.rubinius::Object"* %field1893, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !83
  %"select ivar1895" = select i1 %prune_undef1894, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1893, !dbg !83
  br label %continue1878, !dbg !83

visit_push_ivar_fallback1877:                     ; preds = %check_class_id1884, %continue1824
  %ivar1898 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1880, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !83
  br label %continue1878, !dbg !83

continue1918:                                     ; preds = %class_fallback1916.continue1918_crit_edge, %continue1951
  %self1983 = phi %"struct.rubinius::Object"* [ %self1880, %continue1951 ], [ %self1983.pre, %class_fallback1916.continue1918_crit_edge ]
  %send_result1975 = phi %"struct.rubinius::Object"* [ %107, %continue1951 ], [ %call_site_execute1972, %class_fallback1916.continue1918_crit_edge ], !dbg !83
  %101 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 12, !dbg !83
  store %"struct.rubinius::Object"* %send_result1975, %"struct.rubinius::Object"** %101, align 8, !dbg !83
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !86
  %cast1984 = ptrtoint %"struct.rubinius::Object"* %self1983 to i64, !dbg !86
  %masked1985 = and i64 %cast1984, 3, !dbg !86
  %is_reference1986 = icmp eq i64 %masked1985, 0, !dbg !86
  br i1 %is_reference1986, label %check_class_id1987, label %visit_push_ivar_fallback1980, !dbg !86

check_class_id1924:                               ; preds = %continue1878
  %class_pos1927 = getelementptr %"struct.rubinius::Object"* %stack_load1967, i64 0, i32 0, i32 1, !dbg !83
  %ref_class1928 = load %"struct.rubinius::Class"** %class_pos1927, align 8, !dbg !83
  %class_id_pos1929 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i64 0, i32 4, !dbg !83
  %class_id1930 = load i32* %class_id_pos1929, align 4, !dbg !83
  %check_class_id1931 = icmp eq i32 %class_id1930, 77, !dbg !83
  br i1 %check_class_id1931, label %correct_class1925, label %class_fallback1916, !dbg !83

correct_class1925:                                ; preds = %check_class_id1924
  %serial_id_pos1932 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i64 0, i32 5, !dbg !83
  %serial_id1933 = load i32* %serial_id_pos1932, align 4, !dbg !83
  %check_serial_id1934 = icmp eq i32 %serial_id1933, 224, !dbg !83
  br i1 %check_serial_id1934, label %correct_serial1926, label %serial_fallback1917, !dbg !83

correct_serial1926:                               ; preds = %correct_class1925
  %cast1938 = ptrtoint %"struct.rubinius::Object"* %"select ivar1914" to i64, !dbg !83
  %masked1939 = and i64 %cast1938, 3, !dbg !83
  %is_reference1940 = icmp eq i64 %masked1939, 0, !dbg !83
  br i1 %is_reference1940, label %check_class_id1941, label %continue1937, !dbg !83

serial_fallback1917:                              ; preds = %correct_class1925
  store i32 39, i32* %8, align 4, !dbg !83
  %102 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 39, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !83
  br label %return_pad, !dbg !83

check_class_id1941:                               ; preds = %correct_serial1926
  %class_pos1943 = getelementptr %"struct.rubinius::Object"* %"select ivar1914", i64 0, i32 0, i32 1, !dbg !83
  %ref_class1944 = load %"struct.rubinius::Class"** %class_pos1943, align 8, !dbg !83
  %class_id_pos1945 = getelementptr %"struct.rubinius::Class"* %ref_class1944, i64 0, i32 4, !dbg !83
  %class_id1946 = load i32* %class_id_pos1945, align 4, !dbg !83
  %check_class_id1947 = icmp eq i32 %class_id1946, 77, !dbg !83
  br i1 %check_class_id1947, label %correct_class1942, label %continue1937, !dbg !83

correct_class1942:                                ; preds = %check_class_id1941
  %arg.value_pos1949 = getelementptr %"struct.rubinius::Object"* %"select ivar1914", i64 1, !dbg !83
  %103 = bitcast %"struct.rubinius::Object"* %arg.value_pos1949 to double*, !dbg !83
  %farg1950 = load double* %103, align 8, !dbg !83
  br label %continue1951, !dbg !83

continue1937:                                     ; preds = %check_class_id1941, %correct_serial1926
  %masked1953 = and i64 %cast1938, 1, !dbg !83
  %is_fixnum1954 = icmp eq i64 %masked1953, 0, !dbg !83
  br i1 %is_fixnum1954, label %class_fallback1916, label %guarded_body1955, !dbg !83

guarded_body1955:                                 ; preds = %continue1937
  %ashr1957 = ashr i64 %cast1938, 1, !dbg !83
  %104 = sitofp i64 %ashr1957 to double, !dbg !83
  br label %continue1951, !dbg !83

continue1951:                                     ; preds = %guarded_body1955, %correct_class1942
  %rhs1958 = phi double [ %farg1950, %correct_class1942 ], [ %104, %guarded_body1955 ], !dbg !83
  %self.value_pos1962 = getelementptr %"struct.rubinius::Object"* %stack_load1967, i64 1, !dbg !83
  %105 = bitcast %"struct.rubinius::Object"* %self.value_pos1962 to double*, !dbg !83
  %fself1963 = load double* %105, align 8, !dbg !83
  %float.sub1964 = fsub double %fself1963, %rhs1958, !dbg !83
  %result1965 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !83, !rbx-classid !84
  %106 = getelementptr %"struct.rubinius::Float"* %result1965, i64 0, i32 1, !dbg !83
  store double %float.sub1964, double* %106, align 8, !dbg !83
  %107 = getelementptr inbounds %"struct.rubinius::Float"* %result1965, i64 0, i32 0, i32 0, !dbg !83
  br label %continue1918, !dbg !83

class_fallback1916:                               ; preds = %continue1937, %check_class_id1924, %continue1878
  store %"struct.rubinius::Object"* %stack_load1967, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !83
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !83
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !83
  store i32 1, i32* %out_args_total, align 8, !dbg !83
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !83
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !83
  %cache_const1969 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548720 to %"struct.rubinius::CallSite"**), align 16, !dbg !83
  %execute_pos1970 = getelementptr %"struct.rubinius::CallSite"* %cache_const1969, i64 0, i32 2, !dbg !83
  %execute1971 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1970, align 8, !dbg !83
  store i32 39, i32* %8, align 4, !dbg !83
  %call_site_execute1972 = call %"struct.rubinius::Object"* %execute1971(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1969, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !83
  %null_check1974 = icmp eq %"struct.rubinius::Object"* %call_site_execute1972, null, !dbg !83
  br i1 %null_check1974, label %bail_out, label %class_fallback1916.continue1918_crit_edge, !dbg !83

class_fallback1916.continue1918_crit_edge:        ; preds = %class_fallback1916
  %self1983.pre = load %"struct.rubinius::Object"** %14, align 8, !dbg !86
  br label %continue1918, !dbg !83

continue1981:                                     ; preds = %visit_push_ivar_fallback1980, %correct_class1988
  %stack_load2070 = phi %"struct.rubinius::Object"* [ %"select ivar1998", %correct_class1988 ], [ %ivar2001, %visit_push_ivar_fallback1980 ]
  store %"struct.rubinius::Object"* %stack_load2070, %"struct.rubinius::Object"** %stack, align 8, !dbg !86
  %local2004 = load %"struct.rubinius::Object"** %89, align 8, !dbg !86, !rbx-classid !85
  store %"struct.rubinius::Object"* %local2004, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !86
  %108 = getelementptr %"struct.rubinius::Object"* %local2004, i64 1, i32 0, i32 2, !dbg !86
  %field2015 = load %"struct.rubinius::Object"** %108, align 8, !dbg !86
  %prune_undef2016 = icmp eq %"struct.rubinius::Object"* %field2015, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !86
  %"select ivar2017" = select i1 %prune_undef2016, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2015, !dbg !86
  store %"struct.rubinius::Object"* %"select ivar2017", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !86
  %cast2024 = ptrtoint %"struct.rubinius::Object"* %stack_load2070 to i64, !dbg !86
  %masked2025 = and i64 %cast2024, 3, !dbg !86
  %is_reference2026 = icmp eq i64 %masked2025, 0, !dbg !86
  br i1 %is_reference2026, label %check_class_id2027, label %class_fallback2019, !dbg !86

check_class_id1987:                               ; preds = %continue1918
  %class_pos1989 = getelementptr %"struct.rubinius::Object"* %self1983, i64 0, i32 0, i32 1, !dbg !86
  %ref_class1990 = load %"struct.rubinius::Class"** %class_pos1989, align 8, !dbg !86
  %class_id_pos1991 = getelementptr %"struct.rubinius::Class"* %ref_class1990, i64 0, i32 4, !dbg !86
  %class_id1992 = load i32* %class_id_pos1991, align 4, !dbg !86
  %check_class_id1993 = icmp eq i32 %class_id1992, 1285, !dbg !86
  br i1 %check_class_id1993, label %correct_class1988, label %visit_push_ivar_fallback1980, !dbg !86

correct_class1988:                                ; preds = %check_class_id1987
  %109 = getelementptr %"struct.rubinius::Object"* %self1983, i64 1, i32 0, i32 2, !dbg !86
  %field1996 = load %"struct.rubinius::Object"** %109, align 8, !dbg !86
  %prune_undef1997 = icmp eq %"struct.rubinius::Object"* %field1996, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !86
  %"select ivar1998" = select i1 %prune_undef1997, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1996, !dbg !86
  br label %continue1981, !dbg !86

visit_push_ivar_fallback1980:                     ; preds = %check_class_id1987, %continue1918
  %ivar2001 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1983, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !86
  br label %continue1981, !dbg !86

continue2021:                                     ; preds = %class_fallback2019, %continue2054
  %send_result2078 = phi %"struct.rubinius::Object"* [ %117, %continue2054 ], [ %call_site_execute2075, %class_fallback2019 ], !dbg !86
  store %"struct.rubinius::Object"* %send_result2078, %"struct.rubinius::Object"** %stack, align 8, !dbg !86
  %110 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 13, !dbg !86
  store %"struct.rubinius::Object"* %send_result2078, %"struct.rubinius::Object"** %110, align 8, !dbg !86
  %constant_cache2084 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !87
  %constant_cache_pos2085 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i64 0, i32 4, !dbg !87
  %constant_scope2086 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2085, align 8, !dbg !87
  %111 = load %"struct.rubinius::Object"** %5, align 8, !dbg !87
  %frame_scope2088 = bitcast %"struct.rubinius::Object"* %111 to %"struct.rubinius::ConstantScope"*, !dbg !87
  %same_scope2089 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2086, %frame_scope2088, !dbg !87
  br i1 %same_scope2089, label %check_serial2090, label %use_call2092, !dbg !87

check_class_id2027:                               ; preds = %continue1981
  %class_pos2030 = getelementptr %"struct.rubinius::Object"* %stack_load2070, i64 0, i32 0, i32 1, !dbg !86
  %ref_class2031 = load %"struct.rubinius::Class"** %class_pos2030, align 8, !dbg !86
  %class_id_pos2032 = getelementptr %"struct.rubinius::Class"* %ref_class2031, i64 0, i32 4, !dbg !86
  %class_id2033 = load i32* %class_id_pos2032, align 4, !dbg !86
  %check_class_id2034 = icmp eq i32 %class_id2033, 77, !dbg !86
  br i1 %check_class_id2034, label %correct_class2028, label %class_fallback2019, !dbg !86

correct_class2028:                                ; preds = %check_class_id2027
  %serial_id_pos2035 = getelementptr %"struct.rubinius::Class"* %ref_class2031, i64 0, i32 5, !dbg !86
  %serial_id2036 = load i32* %serial_id_pos2035, align 4, !dbg !86
  %check_serial_id2037 = icmp eq i32 %serial_id2036, 224, !dbg !86
  br i1 %check_serial_id2037, label %correct_serial2029, label %serial_fallback2020, !dbg !86

correct_serial2029:                               ; preds = %correct_class2028
  %cast2041 = ptrtoint %"struct.rubinius::Object"* %"select ivar2017" to i64, !dbg !86
  %masked2042 = and i64 %cast2041, 3, !dbg !86
  %is_reference2043 = icmp eq i64 %masked2042, 0, !dbg !86
  br i1 %is_reference2043, label %check_class_id2044, label %continue2040, !dbg !86

serial_fallback2020:                              ; preds = %correct_class2028
  store i32 52, i32* %8, align 4, !dbg !86
  %112 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 52, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !86
  br label %return_pad, !dbg !86

check_class_id2044:                               ; preds = %correct_serial2029
  %class_pos2046 = getelementptr %"struct.rubinius::Object"* %"select ivar2017", i64 0, i32 0, i32 1, !dbg !86
  %ref_class2047 = load %"struct.rubinius::Class"** %class_pos2046, align 8, !dbg !86
  %class_id_pos2048 = getelementptr %"struct.rubinius::Class"* %ref_class2047, i64 0, i32 4, !dbg !86
  %class_id2049 = load i32* %class_id_pos2048, align 4, !dbg !86
  %check_class_id2050 = icmp eq i32 %class_id2049, 77, !dbg !86
  br i1 %check_class_id2050, label %correct_class2045, label %continue2040, !dbg !86

correct_class2045:                                ; preds = %check_class_id2044
  %arg.value_pos2052 = getelementptr %"struct.rubinius::Object"* %"select ivar2017", i64 1, !dbg !86
  %113 = bitcast %"struct.rubinius::Object"* %arg.value_pos2052 to double*, !dbg !86
  %farg2053 = load double* %113, align 8, !dbg !86
  br label %continue2054, !dbg !86

continue2040:                                     ; preds = %check_class_id2044, %correct_serial2029
  %masked2056 = and i64 %cast2041, 1, !dbg !86
  %is_fixnum2057 = icmp eq i64 %masked2056, 0, !dbg !86
  br i1 %is_fixnum2057, label %class_fallback2019, label %guarded_body2058, !dbg !86

guarded_body2058:                                 ; preds = %continue2040
  %ashr2060 = ashr i64 %cast2041, 1, !dbg !86
  %114 = sitofp i64 %ashr2060 to double, !dbg !86
  br label %continue2054, !dbg !86

continue2054:                                     ; preds = %guarded_body2058, %correct_class2045
  %rhs2061 = phi double [ %farg2053, %correct_class2045 ], [ %114, %guarded_body2058 ], !dbg !86
  %self.value_pos2065 = getelementptr %"struct.rubinius::Object"* %stack_load2070, i64 1, !dbg !86
  %115 = bitcast %"struct.rubinius::Object"* %self.value_pos2065 to double*, !dbg !86
  %fself2066 = load double* %115, align 8, !dbg !86
  %float.sub2067 = fsub double %fself2066, %rhs2061, !dbg !86
  %result2068 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !86, !rbx-classid !84
  %116 = getelementptr %"struct.rubinius::Float"* %result2068, i64 0, i32 1, !dbg !86
  store double %float.sub2067, double* %116, align 8, !dbg !86
  %117 = getelementptr inbounds %"struct.rubinius::Float"* %result2068, i64 0, i32 0, i32 0, !dbg !86
  br label %continue2021, !dbg !86

class_fallback2019:                               ; preds = %continue2040, %check_class_id2027, %continue1981
  store %"struct.rubinius::Object"* %stack_load2070, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !86
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !86
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !86
  store i32 1, i32* %out_args_total, align 8, !dbg !86
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !86
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !86
  %cache_const2072 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548824 to %"struct.rubinius::CallSite"**), align 8, !dbg !86
  %execute_pos2073 = getelementptr %"struct.rubinius::CallSite"* %cache_const2072, i64 0, i32 2, !dbg !86
  %execute2074 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2073, align 8, !dbg !86
  store i32 52, i32* %8, align 4, !dbg !86
  %call_site_execute2075 = call %"struct.rubinius::Object"* %execute2074(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2072, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !86
  %null_check2077 = icmp eq %"struct.rubinius::Object"* %call_site_execute2075, null, !dbg !86
  br i1 %null_check2077, label %bail_out, label %continue2021, !dbg !86

check_serial2090:                                 ; preds = %continue2021
  %global_serial2083 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !87
  %serial_pos2094 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i64 0, i32 7, !dbg !87
  %serial2095 = load i32* %serial_pos2094, align 4, !dbg !87
  %use_cache2096 = icmp eq i32 %global_serial2083, %serial2095, !dbg !87
  br i1 %use_cache2096, label %use_cache2091, label %use_call2092, !dbg !87

use_cache2091:                                    ; preds = %check_serial2090
  %value_pos2097 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2084, i64 0, i32 2, !dbg !87
  %cached_value2098 = load %"struct.rubinius::Object"** %value_pos2097, align 8, !dbg !87
  br label %continue2093, !dbg !87

use_call2092:                                     ; preds = %check_serial2090, %continue2021
  store i32 58, i32* %8, align 4, !dbg !87
  %push_const_fast2099 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !87
  %null_check2102 = icmp eq %"struct.rubinius::Object"* %push_const_fast2099, null, !dbg !87
  br i1 %null_check2102, label %bail_out, label %continue2093, !dbg !87

continue2093:                                     ; preds = %use_call2092, %use_cache2091
  %constant2103 = phi %"struct.rubinius::Object"* [ %cached_value2098, %use_cache2091 ], [ %push_const_fast2099, %use_call2092 ], !dbg !87, !rbx-classid !88
  store %"struct.rubinius::Object"* %constant2103, %"struct.rubinius::Object"** %stack, align 8, !dbg !87
  %local2106 = load %"struct.rubinius::Object"** %92, align 8, !dbg !87
  store %"struct.rubinius::Object"* %local2106, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  %stack_pos2110 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 11, !dbg !87
  store %"struct.rubinius::Object"* %local2106, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !87
  %cast2116 = ptrtoint %"struct.rubinius::Object"* %local2106 to i64, !dbg !87
  %masked2117 = and i64 %cast2116, 3, !dbg !87
  %is_reference2118 = icmp eq i64 %masked2117, 0, !dbg !87
  br i1 %is_reference2118, label %check_class_id2119, label %class_fallback2111, !dbg !87

continue2113:                                     ; preds = %class_fallback2111, %correct_class2137
  %send_result2169 = phi %"struct.rubinius::Object"* [ %121, %correct_class2137 ], [ %call_site_execute2166, %class_fallback2111 ], !dbg !87
  store %"struct.rubinius::Object"* %send_result2169, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  %local2172 = load %"struct.rubinius::Object"** %101, align 8, !dbg !87
  store %"struct.rubinius::Object"* %local2172, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !87
  %stack_pos2176 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 12, !dbg !87
  store %"struct.rubinius::Object"* %local2172, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !87
  %cast2182 = ptrtoint %"struct.rubinius::Object"* %local2172 to i64, !dbg !87
  %masked2183 = and i64 %cast2182, 3, !dbg !87
  %is_reference2184 = icmp eq i64 %masked2183, 0, !dbg !87
  br i1 %is_reference2184, label %check_class_id2185, label %class_fallback2177, !dbg !87

check_class_id2119:                               ; preds = %continue2093
  %class_pos2122 = getelementptr %"struct.rubinius::Object"* %local2106, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2123 = load %"struct.rubinius::Class"** %class_pos2122, align 8, !dbg !87
  %class_id_pos2124 = getelementptr %"struct.rubinius::Class"* %ref_class2123, i64 0, i32 4, !dbg !87
  %class_id2125 = load i32* %class_id_pos2124, align 4, !dbg !87
  %check_class_id2126 = icmp eq i32 %class_id2125, 77, !dbg !87
  br i1 %check_class_id2126, label %correct_class2120, label %class_fallback2111, !dbg !87

correct_class2120:                                ; preds = %check_class_id2119
  %serial_id_pos2127 = getelementptr %"struct.rubinius::Class"* %ref_class2123, i64 0, i32 5, !dbg !87
  %serial_id2128 = load i32* %serial_id_pos2127, align 4, !dbg !87
  %check_serial_id2129 = icmp eq i32 %serial_id2128, 224, !dbg !87
  br i1 %check_serial_id2129, label %correct_class2137, label %serial_fallback2112, !dbg !87

serial_fallback2112:                              ; preds = %correct_class2120
  store i32 64, i32* %8, align 4, !dbg !87
  %118 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 64, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

correct_class2137:                                ; preds = %correct_class2120
  %arg.value_pos2144 = getelementptr %"struct.rubinius::Object"* %local2106, i64 1, !dbg !87
  %119 = bitcast %"struct.rubinius::Object"* %arg.value_pos2144 to double*, !dbg !87
  %farg2145 = load double* %119, align 8, !dbg !87
  %float.mul = fmul double %farg2145, %farg2145, !dbg !87
  %result2159 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !87, !rbx-classid !84
  %120 = getelementptr %"struct.rubinius::Float"* %result2159, i64 0, i32 1, !dbg !87
  store double %float.mul, double* %120, align 8, !dbg !87
  %121 = getelementptr inbounds %"struct.rubinius::Float"* %result2159, i64 0, i32 0, i32 0, !dbg !87
  br label %continue2113, !dbg !87

class_fallback2111:                               ; preds = %check_class_id2119, %continue2093
  store %"struct.rubinius::Object"* %local2106, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !87
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !87
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !87
  store i32 1, i32* %out_args_total, align 8, !dbg !87
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !87
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !87
  %cache_const2163 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548920 to %"struct.rubinius::CallSite"**), align 8, !dbg !87
  %execute_pos2164 = getelementptr %"struct.rubinius::CallSite"* %cache_const2163, i64 0, i32 2, !dbg !87
  %execute2165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2164, align 8, !dbg !87
  store i32 64, i32* %8, align 4, !dbg !87
  %call_site_execute2166 = call %"struct.rubinius::Object"* %execute2165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !87
  %null_check2168 = icmp eq %"struct.rubinius::Object"* %call_site_execute2166, null, !dbg !87
  br i1 %null_check2168, label %bail_out, label %continue2113, !dbg !87

continue2179:                                     ; preds = %class_fallback2177.continue2179_crit_edge, %correct_class2203
  %stack_load2242 = phi %"struct.rubinius::Object"* [ %send_result2169, %correct_class2203 ], [ %stack_load2242.pre, %class_fallback2177.continue2179_crit_edge ]
  %send_result2236 = phi %"struct.rubinius::Object"* [ %125, %correct_class2203 ], [ %call_site_execute2233, %class_fallback2177.continue2179_crit_edge ], !dbg !87
  store %"struct.rubinius::Object"* %send_result2236, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !87
  %cast2243 = ptrtoint %"struct.rubinius::Object"* %stack_load2242 to i64, !dbg !87
  %masked2244 = and i64 %cast2243, 3, !dbg !87
  %is_reference2245 = icmp eq i64 %masked2244, 0, !dbg !87
  br i1 %is_reference2245, label %check_class_id2246, label %class_fallback2238, !dbg !87

check_class_id2185:                               ; preds = %continue2113
  %class_pos2188 = getelementptr %"struct.rubinius::Object"* %local2172, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2189 = load %"struct.rubinius::Class"** %class_pos2188, align 8, !dbg !87
  %class_id_pos2190 = getelementptr %"struct.rubinius::Class"* %ref_class2189, i64 0, i32 4, !dbg !87
  %class_id2191 = load i32* %class_id_pos2190, align 4, !dbg !87
  %check_class_id2192 = icmp eq i32 %class_id2191, 77, !dbg !87
  br i1 %check_class_id2192, label %correct_class2186, label %class_fallback2177, !dbg !87

correct_class2186:                                ; preds = %check_class_id2185
  %serial_id_pos2193 = getelementptr %"struct.rubinius::Class"* %ref_class2189, i64 0, i32 5, !dbg !87
  %serial_id2194 = load i32* %serial_id_pos2193, align 4, !dbg !87
  %check_serial_id2195 = icmp eq i32 %serial_id2194, 224, !dbg !87
  br i1 %check_serial_id2195, label %correct_class2203, label %serial_fallback2178, !dbg !87

serial_fallback2178:                              ; preds = %correct_class2186
  store i32 71, i32* %8, align 4, !dbg !87
  %122 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

correct_class2203:                                ; preds = %correct_class2186
  %arg.value_pos2210 = getelementptr %"struct.rubinius::Object"* %local2172, i64 1, !dbg !87
  %123 = bitcast %"struct.rubinius::Object"* %arg.value_pos2210 to double*, !dbg !87
  %farg2211 = load double* %123, align 8, !dbg !87
  %float.mul2225 = fmul double %farg2211, %farg2211, !dbg !87
  %result2226 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !87, !rbx-classid !84
  %124 = getelementptr %"struct.rubinius::Float"* %result2226, i64 0, i32 1, !dbg !87
  store double %float.mul2225, double* %124, align 8, !dbg !87
  %125 = getelementptr inbounds %"struct.rubinius::Float"* %result2226, i64 0, i32 0, i32 0, !dbg !87
  br label %continue2179, !dbg !87

class_fallback2177:                               ; preds = %check_class_id2185, %continue2113
  store %"struct.rubinius::Object"* %local2172, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !87
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !87
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !87
  store i32 1, i32* %out_args_total, align 8, !dbg !87
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !87
  store %"struct.rubinius::Object"** %stack_pos2176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !87
  %cache_const2230 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548976 to %"struct.rubinius::CallSite"**), align 16, !dbg !87
  %execute_pos2231 = getelementptr %"struct.rubinius::CallSite"* %cache_const2230, i64 0, i32 2, !dbg !87
  %execute2232 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2231, align 8, !dbg !87
  store i32 71, i32* %8, align 4, !dbg !87
  %call_site_execute2233 = call %"struct.rubinius::Object"* %execute2232(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2230, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !87
  %null_check2235 = icmp eq %"struct.rubinius::Object"* %call_site_execute2233, null, !dbg !87
  br i1 %null_check2235, label %bail_out, label %class_fallback2177.continue2179_crit_edge, !dbg !87

class_fallback2177.continue2179_crit_edge:        ; preds = %class_fallback2177
  %stack_load2242.pre = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  br label %continue2179, !dbg !87

continue2240:                                     ; preds = %class_fallback2238, %continue2273
  %send_result2296 = phi %"struct.rubinius::Object"* [ %131, %continue2273 ], [ %call_site_execute2293, %class_fallback2238 ], !dbg !87
  store %"struct.rubinius::Object"* %send_result2296, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  %local2299 = load %"struct.rubinius::Object"** %110, align 8, !dbg !87
  store %"struct.rubinius::Object"* %local2299, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !87
  store %"struct.rubinius::Object"* %local2299, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !87
  %cast2309 = ptrtoint %"struct.rubinius::Object"* %local2299 to i64, !dbg !87
  %masked2310 = and i64 %cast2309, 3, !dbg !87
  %is_reference2311 = icmp eq i64 %masked2310, 0, !dbg !87
  br i1 %is_reference2311, label %check_class_id2312, label %class_fallback2304, !dbg !87

check_class_id2246:                               ; preds = %continue2179
  %class_pos2249 = getelementptr %"struct.rubinius::Object"* %stack_load2242, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2250 = load %"struct.rubinius::Class"** %class_pos2249, align 8, !dbg !87
  %class_id_pos2251 = getelementptr %"struct.rubinius::Class"* %ref_class2250, i64 0, i32 4, !dbg !87
  %class_id2252 = load i32* %class_id_pos2251, align 4, !dbg !87
  %check_class_id2253 = icmp eq i32 %class_id2252, 77, !dbg !87
  br i1 %check_class_id2253, label %correct_class2247, label %class_fallback2238, !dbg !87

correct_class2247:                                ; preds = %check_class_id2246
  %serial_id_pos2254 = getelementptr %"struct.rubinius::Class"* %ref_class2250, i64 0, i32 5, !dbg !87
  %serial_id2255 = load i32* %serial_id_pos2254, align 4, !dbg !87
  %check_serial_id2256 = icmp eq i32 %serial_id2255, 224, !dbg !87
  br i1 %check_serial_id2256, label %correct_serial2248, label %serial_fallback2239, !dbg !87

correct_serial2248:                               ; preds = %correct_class2247
  %cast2260 = ptrtoint %"struct.rubinius::Object"* %send_result2236 to i64, !dbg !87
  %masked2261 = and i64 %cast2260, 3, !dbg !87
  %is_reference2262 = icmp eq i64 %masked2261, 0, !dbg !87
  br i1 %is_reference2262, label %check_class_id2263, label %continue2259, !dbg !87

serial_fallback2239:                              ; preds = %correct_class2247
  store i32 74, i32* %8, align 4, !dbg !87
  %126 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

check_class_id2263:                               ; preds = %correct_serial2248
  %class_pos2265 = getelementptr %"struct.rubinius::Object"* %send_result2236, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2266 = load %"struct.rubinius::Class"** %class_pos2265, align 8, !dbg !87
  %class_id_pos2267 = getelementptr %"struct.rubinius::Class"* %ref_class2266, i64 0, i32 4, !dbg !87
  %class_id2268 = load i32* %class_id_pos2267, align 4, !dbg !87
  %check_class_id2269 = icmp eq i32 %class_id2268, 77, !dbg !87
  br i1 %check_class_id2269, label %correct_class2264, label %continue2259, !dbg !87

correct_class2264:                                ; preds = %check_class_id2263
  %arg.value_pos2271 = getelementptr %"struct.rubinius::Object"* %send_result2236, i64 1, !dbg !87
  %127 = bitcast %"struct.rubinius::Object"* %arg.value_pos2271 to double*, !dbg !87
  %farg2272 = load double* %127, align 8, !dbg !87
  br label %continue2273, !dbg !87

continue2259:                                     ; preds = %check_class_id2263, %correct_serial2248
  %masked2275 = and i64 %cast2260, 1, !dbg !87
  %is_fixnum2276 = icmp eq i64 %masked2275, 0, !dbg !87
  br i1 %is_fixnum2276, label %class_fallback2238, label %guarded_body2277, !dbg !87

guarded_body2277:                                 ; preds = %continue2259
  %ashr2279 = ashr i64 %cast2260, 1, !dbg !87
  %128 = sitofp i64 %ashr2279 to double, !dbg !87
  br label %continue2273, !dbg !87

continue2273:                                     ; preds = %guarded_body2277, %correct_class2264
  %rhs2280 = phi double [ %farg2272, %correct_class2264 ], [ %128, %guarded_body2277 ], !dbg !87
  %self.value_pos2284 = getelementptr %"struct.rubinius::Object"* %stack_load2242, i64 1, !dbg !87
  %129 = bitcast %"struct.rubinius::Object"* %self.value_pos2284 to double*, !dbg !87
  %fself2285 = load double* %129, align 8, !dbg !87
  %float.add = fadd double %rhs2280, %fself2285, !dbg !87
  %result2286 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !87, !rbx-classid !84
  %130 = getelementptr %"struct.rubinius::Float"* %result2286, i64 0, i32 1, !dbg !87
  store double %float.add, double* %130, align 8, !dbg !87
  %131 = getelementptr inbounds %"struct.rubinius::Float"* %result2286, i64 0, i32 0, i32 0, !dbg !87
  br label %continue2240, !dbg !87

class_fallback2238:                               ; preds = %continue2259, %check_class_id2246, %continue2179
  store %"struct.rubinius::Object"* %stack_load2242, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !87
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !87
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !87
  store i32 1, i32* %out_args_total, align 8, !dbg !87
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !87
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !87
  %cache_const2290 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549000 to %"struct.rubinius::CallSite"**), align 8, !dbg !87
  %execute_pos2291 = getelementptr %"struct.rubinius::CallSite"* %cache_const2290, i64 0, i32 2, !dbg !87
  %execute2292 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2291, align 8, !dbg !87
  store i32 74, i32* %8, align 4, !dbg !87
  %call_site_execute2293 = call %"struct.rubinius::Object"* %execute2292(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2290, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !87
  %null_check2295 = icmp eq %"struct.rubinius::Object"* %call_site_execute2293, null, !dbg !87
  br i1 %null_check2295, label %bail_out, label %continue2240, !dbg !87

continue2306:                                     ; preds = %class_fallback2304.continue2306_crit_edge, %correct_class2330
  %stack_load2369 = phi %"struct.rubinius::Object"* [ %send_result2296, %correct_class2330 ], [ %stack_load2369.pre, %class_fallback2304.continue2306_crit_edge ]
  %send_result2363 = phi %"struct.rubinius::Object"* [ %135, %correct_class2330 ], [ %call_site_execute2360, %class_fallback2304.continue2306_crit_edge ], !dbg !87
  store %"struct.rubinius::Object"* %send_result2363, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !87
  %cast2370 = ptrtoint %"struct.rubinius::Object"* %stack_load2369 to i64, !dbg !87
  %masked2371 = and i64 %cast2370, 3, !dbg !87
  %is_reference2372 = icmp eq i64 %masked2371, 0, !dbg !87
  br i1 %is_reference2372, label %check_class_id2373, label %class_fallback2365, !dbg !87

check_class_id2312:                               ; preds = %continue2240
  %class_pos2315 = getelementptr %"struct.rubinius::Object"* %local2299, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2316 = load %"struct.rubinius::Class"** %class_pos2315, align 8, !dbg !87
  %class_id_pos2317 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i64 0, i32 4, !dbg !87
  %class_id2318 = load i32* %class_id_pos2317, align 4, !dbg !87
  %check_class_id2319 = icmp eq i32 %class_id2318, 77, !dbg !87
  br i1 %check_class_id2319, label %correct_class2313, label %class_fallback2304, !dbg !87

correct_class2313:                                ; preds = %check_class_id2312
  %serial_id_pos2320 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i64 0, i32 5, !dbg !87
  %serial_id2321 = load i32* %serial_id_pos2320, align 4, !dbg !87
  %check_serial_id2322 = icmp eq i32 %serial_id2321, 224, !dbg !87
  br i1 %check_serial_id2322, label %correct_class2330, label %serial_fallback2305, !dbg !87

serial_fallback2305:                              ; preds = %correct_class2313
  store i32 81, i32* %8, align 4, !dbg !87
  %132 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 81, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

correct_class2330:                                ; preds = %correct_class2313
  %arg.value_pos2337 = getelementptr %"struct.rubinius::Object"* %local2299, i64 1, !dbg !87
  %133 = bitcast %"struct.rubinius::Object"* %arg.value_pos2337 to double*, !dbg !87
  %farg2338 = load double* %133, align 8, !dbg !87
  %float.mul2352 = fmul double %farg2338, %farg2338, !dbg !87
  %result2353 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !87, !rbx-classid !84
  %134 = getelementptr %"struct.rubinius::Float"* %result2353, i64 0, i32 1, !dbg !87
  store double %float.mul2352, double* %134, align 8, !dbg !87
  %135 = getelementptr inbounds %"struct.rubinius::Float"* %result2353, i64 0, i32 0, i32 0, !dbg !87
  br label %continue2306, !dbg !87

class_fallback2304:                               ; preds = %check_class_id2312, %continue2240
  store %"struct.rubinius::Object"* %local2299, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !87
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !87
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !87
  store i32 1, i32* %out_args_total, align 8, !dbg !87
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !87
  store %"struct.rubinius::Object"** %stack_pos2176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !87
  %cache_const2357 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549056 to %"struct.rubinius::CallSite"**), align 64, !dbg !87
  %execute_pos2358 = getelementptr %"struct.rubinius::CallSite"* %cache_const2357, i64 0, i32 2, !dbg !87
  %execute2359 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2358, align 8, !dbg !87
  store i32 81, i32* %8, align 4, !dbg !87
  %call_site_execute2360 = call %"struct.rubinius::Object"* %execute2359(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2357, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !87
  %null_check2362 = icmp eq %"struct.rubinius::Object"* %call_site_execute2360, null, !dbg !87
  br i1 %null_check2362, label %bail_out, label %class_fallback2304.continue2306_crit_edge, !dbg !87

class_fallback2304.continue2306_crit_edge:        ; preds = %class_fallback2304
  %stack_load2369.pre = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  br label %continue2306, !dbg !87

continue2367:                                     ; preds = %class_fallback2365, %continue2400
  %local2538 = phi %"struct.rubinius::Object"* [ %141, %continue2400 ], [ %call_site_execute2421, %class_fallback2365 ], !dbg !87
  store %"struct.rubinius::Object"* %local2538, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !87
  %stack_load2430 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !87, !rbx-classid !88
  %cast2431 = ptrtoint %"struct.rubinius::Object"* %stack_load2430 to i64, !dbg !87
  %masked2432 = and i64 %cast2431, 3, !dbg !87
  %is_reference2433 = icmp eq i64 %masked2432, 0, !dbg !87
  br i1 %is_reference2433, label %check_class_id2434, label %class_fallback2426, !dbg !87

check_class_id2373:                               ; preds = %continue2306
  %class_pos2376 = getelementptr %"struct.rubinius::Object"* %stack_load2369, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2377 = load %"struct.rubinius::Class"** %class_pos2376, align 8, !dbg !87
  %class_id_pos2378 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i64 0, i32 4, !dbg !87
  %class_id2379 = load i32* %class_id_pos2378, align 4, !dbg !87
  %check_class_id2380 = icmp eq i32 %class_id2379, 77, !dbg !87
  br i1 %check_class_id2380, label %correct_class2374, label %class_fallback2365, !dbg !87

correct_class2374:                                ; preds = %check_class_id2373
  %serial_id_pos2381 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i64 0, i32 5, !dbg !87
  %serial_id2382 = load i32* %serial_id_pos2381, align 4, !dbg !87
  %check_serial_id2383 = icmp eq i32 %serial_id2382, 224, !dbg !87
  br i1 %check_serial_id2383, label %correct_serial2375, label %serial_fallback2366, !dbg !87

correct_serial2375:                               ; preds = %correct_class2374
  %cast2387 = ptrtoint %"struct.rubinius::Object"* %send_result2363 to i64, !dbg !87
  %masked2388 = and i64 %cast2387, 3, !dbg !87
  %is_reference2389 = icmp eq i64 %masked2388, 0, !dbg !87
  br i1 %is_reference2389, label %check_class_id2390, label %continue2386, !dbg !87

serial_fallback2366:                              ; preds = %correct_class2374
  store i32 84, i32* %8, align 4, !dbg !87
  %136 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 84, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

check_class_id2390:                               ; preds = %correct_serial2375
  %class_pos2392 = getelementptr %"struct.rubinius::Object"* %send_result2363, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2393 = load %"struct.rubinius::Class"** %class_pos2392, align 8, !dbg !87
  %class_id_pos2394 = getelementptr %"struct.rubinius::Class"* %ref_class2393, i64 0, i32 4, !dbg !87
  %class_id2395 = load i32* %class_id_pos2394, align 4, !dbg !87
  %check_class_id2396 = icmp eq i32 %class_id2395, 77, !dbg !87
  br i1 %check_class_id2396, label %correct_class2391, label %continue2386, !dbg !87

correct_class2391:                                ; preds = %check_class_id2390
  %arg.value_pos2398 = getelementptr %"struct.rubinius::Object"* %send_result2363, i64 1, !dbg !87
  %137 = bitcast %"struct.rubinius::Object"* %arg.value_pos2398 to double*, !dbg !87
  %farg2399 = load double* %137, align 8, !dbg !87
  br label %continue2400, !dbg !87

continue2386:                                     ; preds = %check_class_id2390, %correct_serial2375
  %masked2402 = and i64 %cast2387, 1, !dbg !87
  %is_fixnum2403 = icmp eq i64 %masked2402, 0, !dbg !87
  br i1 %is_fixnum2403, label %class_fallback2365, label %guarded_body2404, !dbg !87

guarded_body2404:                                 ; preds = %continue2386
  %ashr2406 = ashr i64 %cast2387, 1, !dbg !87
  %138 = sitofp i64 %ashr2406 to double, !dbg !87
  br label %continue2400, !dbg !87

continue2400:                                     ; preds = %guarded_body2404, %correct_class2391
  %rhs2407 = phi double [ %farg2399, %correct_class2391 ], [ %138, %guarded_body2404 ], !dbg !87
  %self.value_pos2411 = getelementptr %"struct.rubinius::Object"* %stack_load2369, i64 1, !dbg !87
  %139 = bitcast %"struct.rubinius::Object"* %self.value_pos2411 to double*, !dbg !87
  %fself2412 = load double* %139, align 8, !dbg !87
  %float.add2413 = fadd double %rhs2407, %fself2412, !dbg !87
  %result2414 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !87, !rbx-classid !84
  %140 = getelementptr %"struct.rubinius::Float"* %result2414, i64 0, i32 1, !dbg !87
  store double %float.add2413, double* %140, align 8, !dbg !87
  %141 = getelementptr inbounds %"struct.rubinius::Float"* %result2414, i64 0, i32 0, i32 0, !dbg !87
  br label %continue2367, !dbg !87

class_fallback2365:                               ; preds = %continue2386, %check_class_id2373, %continue2306
  store %"struct.rubinius::Object"* %stack_load2369, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !87
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !87
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !87
  store i32 1, i32* %out_args_total, align 8, !dbg !87
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !87
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !87
  %cache_const2418 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549080 to %"struct.rubinius::CallSite"**), align 8, !dbg !87
  %execute_pos2419 = getelementptr %"struct.rubinius::CallSite"* %cache_const2418, i64 0, i32 2, !dbg !87
  %execute2420 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2419, align 8, !dbg !87
  store i32 84, i32* %8, align 4, !dbg !87
  %call_site_execute2421 = call %"struct.rubinius::Object"* %execute2420(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2418, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !87
  %null_check2423 = icmp eq %"struct.rubinius::Object"* %call_site_execute2421, null, !dbg !87
  br i1 %null_check2423, label %bail_out, label %continue2367, !dbg !87

check_class_id2434:                               ; preds = %continue2367
  %class_pos2437 = getelementptr %"struct.rubinius::Object"* %stack_load2430, i64 0, i32 0, i32 1, !dbg !87
  %ref_class2438 = load %"struct.rubinius::Class"** %class_pos2437, align 8, !dbg !87
  %class_id_pos2439 = getelementptr %"struct.rubinius::Class"* %ref_class2438, i64 0, i32 4, !dbg !87
  %class_id2440 = load i32* %class_id_pos2439, align 4, !dbg !87
  %check_class_id2441 = icmp eq i32 %class_id2440, 779, !dbg !87
  br i1 %check_class_id2441, label %correct_class2435, label %class_fallback2426, !dbg !87

correct_class2435:                                ; preds = %check_class_id2434
  %serial_id_pos2442 = getelementptr %"struct.rubinius::Class"* %ref_class2438, i64 0, i32 5, !dbg !87
  %serial_id2443 = load i32* %serial_id_pos2442, align 4, !dbg !87
  %check_serial_id2444 = icmp eq i32 %serial_id2443, 7, !dbg !87
  br i1 %check_serial_id2444, label %correct_serial2436, label %serial_fallback2427, !dbg !87

class_fallback2426:                               ; preds = %check_class_id2434, %continue2367
  store i32 87, i32* %8, align 4, !dbg !87
  %142 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !87
  br label %return_pad, !dbg !87

correct_serial2436:                               ; preds = %correct_class2435
  %call_frame2455 = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk24545128 to %"struct.rubinius::CallFrame"*, !dbg !89
  %stack2456 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 9, !dbg !89
  %143 = getelementptr inbounds [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 0, !dbg !89
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %143, align 8, !dbg !89
  %144 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 2, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 140495695957536 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %144, align 8, !dbg !89
  %compiled_code2459 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140495695957536 to %"struct.rubinius::CompiledCode"**), align 32, !dbg !89
  %145 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 3, !dbg !89
  %compiled_code2459.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code2459, i64 0, i32 0, i32 0, !dbg !89
  store %"struct.rubinius::Object"* %compiled_code2459.c, %"struct.rubinius::Object"** %145, align 8, !dbg !89
  %constant_scope_pos2460 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code2459, i64 0, i32 13, !dbg !89
  %constant_scope2461 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos2460, align 8, !dbg !89
  %146 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 1, !dbg !89
  %constant_scope2461.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope2461 to %"struct.rubinius::Object"*, !dbg !89
  store %"struct.rubinius::Object"* %constant_scope2461.c, %"struct.rubinius::Object"** %146, align 8, !dbg !89
  %147 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 4, !dbg !89
  %148 = bitcast %"struct.rubinius::Object"** %147 to i32*, !dbg !89
  store i32 12, i32* %148, align 8, !dbg !89
  %149 = getelementptr %"struct.rubinius::CallFrame"* %call_frame2455, i64 0, i32 5, !dbg !89
  store i32 0, i32* %149, align 4, !dbg !89
  %150 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 7, !dbg !89
  %vars2458.c = bitcast [7 x %"struct.rubinius::Object"*]* %var_mem24575129 to %"struct.rubinius::Object"*, !dbg !89
  store %"struct.rubinius::Object"* %vars2458.c, %"struct.rubinius::Object"** %150, align 8, !dbg !89
  %stack_pos2463 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 10, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !89
  %stack_pos2464 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 11, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2464, align 8, !dbg !89
  %stack_pos2465 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk24545128, i64 0, i64 12, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2465, align 8, !dbg !89
  %module2466 = load %"struct.rubinius::Module"** inttoptr (i64 140495695957552 to %"struct.rubinius::Module"**), align 16, !dbg !89
  %151 = getelementptr inbounds [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 0, !dbg !89
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %151, align 8, !dbg !89
  %152 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 2, !dbg !89
  store %"struct.rubinius::Object"* %stack_load2430, %"struct.rubinius::Object"** %152, align 8, !dbg !89
  %153 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 4, !dbg !89
  %module2466.c = getelementptr inbounds %"struct.rubinius::Module"* %module2466, i64 0, i32 0, !dbg !89
  store %"struct.rubinius::Object"* %module2466.c, %"struct.rubinius::Object"** %153, align 8, !dbg !89
  %154 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 3, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %154, align 8, !dbg !89
  %155 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 1, !dbg !89
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %155, align 8, !dbg !89
  %156 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 5, !dbg !89
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %156, align 8, !dbg !89
  %157 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem24575129, i64 0, i64 6, !dbg !89
  store %"struct.rubinius::Object"* %local2538, %"struct.rubinius::Object"** %157, align 8, !dbg !89
  store %"struct.rubinius::Object"* %local2538, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  %constant_cache2485 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !90
  %constant_cache_pos2486 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i64 0, i32 4, !dbg !90
  %constant_scope2487 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2486, align 8, !dbg !90
  %same_scope2490 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2487, %constant_scope2461, !dbg !90
  br i1 %same_scope2490, label %check_serial2491, label %use_call2493, !dbg !90

serial_fallback2427:                              ; preds = %correct_class2435
  store i32 87, i32* %8, align 4, !dbg !87
  %158 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !87
  br label %return_pad, !dbg !87

bail_out2469:                                     ; preds = %correct_serial2550, %check_active2859, %continue2837, %use_call2836, %use_call2780, %use_call2751, %use_call2726, %class_fallback2663, %ip25, %use_call2617, %use_call2592, %class_fallback2540, %use_call2493
  %rth2470 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !89
  br i1 %rth2470, label %ret_raise_val2471, label %return_pad2445, !dbg !89

ret_raise_val2471:                                ; preds = %bail_out2469
  %crv2473 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !89
  br label %return_pad2445, !dbg !89

check_serial2491:                                 ; preds = %correct_serial2436
  %global_serial2484 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !90
  %serial_pos2495 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i64 0, i32 7, !dbg !90
  %serial2496 = load i32* %serial_pos2495, align 4, !dbg !90
  %use_cache2497 = icmp eq i32 %global_serial2484, %serial2496, !dbg !90
  br i1 %use_cache2497, label %use_cache2492, label %use_call2493, !dbg !90

use_cache2492:                                    ; preds = %check_serial2491
  %value_pos2498 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2485, i64 0, i32 2, !dbg !90
  %cached_value2499 = load %"struct.rubinius::Object"** %value_pos2498, align 8, !dbg !90
  br label %continue2494, !dbg !90

use_call2493:                                     ; preds = %check_serial2491, %correct_serial2436
  store i32 2, i32* %149, align 4, !dbg !90
  %push_const_fast2500 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !90
  %null_check2503 = icmp eq %"struct.rubinius::Object"* %push_const_fast2500, null, !dbg !90
  br i1 %null_check2503, label %bail_out2469, label %continue2494, !dbg !90

continue2494:                                     ; preds = %use_call2493, %use_cache2492
  %constant2504 = phi %"struct.rubinius::Object"* [ %cached_value2499, %use_cache2492 ], [ %push_const_fast2500, %use_call2493 ], !dbg !90, !rbx-classid !91
  store %"struct.rubinius::Object"* %constant2504, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !90
  %cast2518 = ptrtoint %"struct.rubinius::Object"* %local2538 to i64, !dbg !90
  %masked2519 = and i64 %cast2518, 3, !dbg !90
  %is_reference2520 = icmp eq i64 %masked2519, 0, !dbg !90
  br i1 %is_reference2520, label %use_cache2517, label %negative2516, !dbg !90

continue2513:                                     ; preds = %use_cache2517, %negative2516
  %constant2526 = phi %"struct.rubinius::Object"* [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative2516 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %use_cache2517 ], !dbg !90
  store %"struct.rubinius::Object"* %constant2526, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  store %"struct.rubinius::Object"* %constant2526, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !90
  %as_int2533 = ptrtoint %"struct.rubinius::Object"* %constant2526 to i64, !dbg !90
  %and2534 = and i64 %as_int2533, 10, !dbg !90
  %is_true2535 = icmp eq i64 %and2534, 10, !dbg !90
  br i1 %is_true2535, label %ip16, label %ip10, !dbg !90

negative2516:                                     ; preds = %use_cache2517, %continue2494
  br label %continue2513, !dbg !90

use_cache2517:                                    ; preds = %continue2494
  %word_pos2521 = getelementptr %"struct.rubinius::Object"* %local2538, i64 0, i32 0, i32 0, i32 0, !dbg !90
  %flags2522 = load i64* %word_pos2521, align 8, !dbg !90
  %mask2523 = and i64 %flags2522, 255, !dbg !90
  %is_type2524 = icmp eq i64 %mask2523, 35, !dbg !90
  br i1 %is_type2524, label %continue2513, label %negative2516, !dbg !90

ip10:                                             ; preds = %continue2513
  store %"struct.rubinius::Object"* %local2538, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  br i1 %is_reference2520, label %check_class_id2548, label %class_fallback2540, !dbg !90

continue2542:                                     ; preds = %class_fallback2540, %correct_serial2550
  %send_result2575 = phi %"struct.rubinius::Object"* [ %prim_value2561, %correct_serial2550 ], [ %call_site_execute2572, %class_fallback2540 ], !dbg !90
  store %"struct.rubinius::Object"* %send_result2575, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  br label %ip16, !dbg !90

ip16:                                             ; preds = %continue2542, %continue2513
  %stack_load2578 = phi %"struct.rubinius::Object"* [ %send_result2575, %continue2542 ], [ %constant2526, %continue2513 ]
  %as_int2579 = ptrtoint %"struct.rubinius::Object"* %stack_load2578 to i64, !dbg !90
  %and2580 = and i64 %as_int2579, 15, !dbg !90
  %is_true2581 = icmp eq i64 %and2580, 10, !dbg !90
  br i1 %is_true2581, label %ip25, label %ip18, !dbg !90

check_class_id2548:                               ; preds = %ip10
  %class_pos2551 = getelementptr %"struct.rubinius::Object"* %local2538, i64 0, i32 0, i32 1, !dbg !90
  %ref_class2552 = load %"struct.rubinius::Class"** %class_pos2551, align 8, !dbg !90
  %class_id_pos2553 = getelementptr %"struct.rubinius::Class"* %ref_class2552, i64 0, i32 4, !dbg !90
  %class_id2554 = load i32* %class_id_pos2553, align 4, !dbg !90
  %check_class_id2555 = icmp eq i32 %class_id2554, 77, !dbg !90
  br i1 %check_class_id2555, label %correct_class2549, label %class_fallback2540, !dbg !90

correct_class2549:                                ; preds = %check_class_id2548
  %serial_id_pos2556 = getelementptr %"struct.rubinius::Class"* %ref_class2552, i64 0, i32 5, !dbg !90
  %serial_id2557 = load i32* %serial_id_pos2556, align 4, !dbg !90
  %check_serial_id2558 = icmp eq i32 %serial_id2557, 224, !dbg !90
  br i1 %check_serial_id2558, label %correct_serial2550, label %serial_fallback2541, !dbg !90

class_fallback2540:                               ; preds = %correct_serial2550.class_fallback2540_crit_edge, %check_class_id2548, %ip10
  %stack_load2568 = phi %"struct.rubinius::Object"* [ %stack_load2568.pre, %correct_serial2550.class_fallback2540_crit_edge ], [ %local2538, %check_class_id2548 ], [ %local2538, %ip10 ]
  store %"struct.rubinius::Object"* %stack_load2568, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !90
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !90
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !90
  store i32 0, i32* %out_args_total, align 8, !dbg !90
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !90
  %cache_const2569 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), align 64, !dbg !90
  %execute_pos2570 = getelementptr %"struct.rubinius::CallSite"* %cache_const2569, i64 0, i32 2, !dbg !90
  %execute2571 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2570, align 8, !dbg !90
  store i32 13, i32* %149, align 4, !dbg !90
  %call_site_execute2572 = call %"struct.rubinius::Object"* %execute2571(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2569, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !90
  %null_check2574 = icmp eq %"struct.rubinius::Object"* %call_site_execute2572, null, !dbg !90
  br i1 %null_check2574, label %bail_out2469, label %continue2542, !dbg !90

correct_serial2550:                               ; preds = %correct_class2549
  %prim_value2561 = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local2538) #1, !dbg !90
  %magicptr5115 = ptrtoint %"struct.rubinius::Object"* %prim_value2561 to i64, !dbg !90
  switch i64 %magicptr5115, label %continue2542 [
    i64 34, label %correct_serial2550.class_fallback2540_crit_edge
    i64 0, label %bail_out2469
  ], !dbg !90

correct_serial2550.class_fallback2540_crit_edge:  ; preds = %correct_serial2550
  %stack_load2568.pre = load %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  br label %class_fallback2540, !dbg !90

serial_fallback2541:                              ; preds = %correct_class2549
  store i32 13, i32* %149, align 4, !dbg !90
  %159 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !90
  br label %return_pad2445, !dbg !90

ip18:                                             ; preds = %ip16
  %constant_cache2584 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !90
  %constant_cache_pos2585 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i64 0, i32 4, !dbg !90
  %constant_scope2586 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2585, align 8, !dbg !90
  %160 = load %"struct.rubinius::Object"** %146, align 8, !dbg !90
  %frame_scope2588 = bitcast %"struct.rubinius::Object"* %160 to %"struct.rubinius::ConstantScope"*, !dbg !90
  %same_scope2589 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2586, %frame_scope2588, !dbg !90
  br i1 %same_scope2589, label %check_serial2590, label %use_call2592, !dbg !90

check_serial2590:                                 ; preds = %ip18
  %global_serial2583 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !90
  %serial_pos2594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i64 0, i32 7, !dbg !90
  %serial2595 = load i32* %serial_pos2594, align 4, !dbg !90
  %use_cache2596 = icmp eq i32 %global_serial2583, %serial2595, !dbg !90
  br i1 %use_cache2596, label %use_cache2591, label %use_call2592, !dbg !90

use_cache2591:                                    ; preds = %check_serial2590
  %value_pos2597 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2584, i64 0, i32 2, !dbg !90
  %cached_value2598 = load %"struct.rubinius::Object"** %value_pos2597, align 8, !dbg !90
  br label %continue2593, !dbg !90

use_call2592:                                     ; preds = %check_serial2590, %ip18
  store i32 18, i32* %149, align 4, !dbg !90
  %push_const_fast2599 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !90
  %null_check2602 = icmp eq %"struct.rubinius::Object"* %push_const_fast2599, null, !dbg !90
  br i1 %null_check2602, label %bail_out2469, label %continue2593, !dbg !90

continue2593:                                     ; preds = %use_call2592, %use_cache2591
  %constant2603 = phi %"struct.rubinius::Object"* [ %cached_value2598, %use_cache2591 ], [ %push_const_fast2599, %use_call2592 ], !dbg !90, !rbx-classid !92
  store %"struct.rubinius::Object"* %constant2603, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  %constant_cache2608 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !90
  %constant_cache_pos2609 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i64 0, i32 4, !dbg !90
  %constant_scope2610 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2609, align 8, !dbg !90
  %same_scope2613 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2610, %frame_scope2588, !dbg !90
  br i1 %same_scope2613, label %check_serial2614, label %use_call2617, !dbg !90

check_serial2614:                                 ; preds = %continue2593
  %global_serial2607 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !90
  %serial_pos2619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i64 0, i32 7, !dbg !90
  %serial2620 = load i32* %serial_pos2619, align 4, !dbg !90
  %use_under2621 = icmp eq i32 %global_serial2607, %serial2620, !dbg !90
  br i1 %use_under2621, label %check_under2615, label %use_call2617, !dbg !90

check_under2615:                                  ; preds = %check_serial2614
  %value_pos2622 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i64 0, i32 3, !dbg !90
  %cached_under2623 = load %"struct.rubinius::Module"** %value_pos2622, align 8, !dbg !90
  %downcast2624 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under2623, i64 0, i32 0, !dbg !90
  %use_cache2625 = icmp eq %"struct.rubinius::Object"* %downcast2624, %constant2603, !dbg !90
  br i1 %use_cache2625, label %use_cache2616, label %use_call2617, !dbg !90

use_cache2616:                                    ; preds = %check_under2615
  %value_pos2626 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2608, i64 0, i32 2, !dbg !90
  %cached_value2627 = load %"struct.rubinius::Object"** %value_pos2626, align 8, !dbg !90
  br label %continue2618, !dbg !90

use_call2617:                                     ; preds = %check_under2615, %check_serial2614, %continue2593
  store i32 20, i32* %149, align 4, !dbg !90
  %constant2628 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant2603) #0, !dbg !90
  %null_check2631 = icmp eq %"struct.rubinius::Object"* %constant2628, null, !dbg !90
  br i1 %null_check2631, label %bail_out2469, label %continue2618, !dbg !90

continue2618:                                     ; preds = %use_call2617, %use_cache2616
  %constant2632 = phi %"struct.rubinius::Object"* [ %cached_value2627, %use_cache2616 ], [ %constant2628, %use_call2617 ], !dbg !90, !rbx-classid !93
  store %"struct.rubinius::Object"* %constant2632, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !90
  br label %return_pad2445, !dbg !90

ip25:                                             ; preds = %ip16
  %system_object2637 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !94
  store %"struct.rubinius::Object"* %system_object2637, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !94
  %local2640 = load %"struct.rubinius::Object"** %157, align 8, !dbg !94, !rbx-classid !26
  store %"struct.rubinius::Object"* %local2640, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !94
  store %"struct.rubinius::Object"* %system_object2637, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !94
  store %"struct.rubinius::Symbol"* inttoptr (i64 18734 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !94
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !94
  store i32 1, i32* %out_args_total, align 8, !dbg !94
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !94
  store %"struct.rubinius::Object"** %stack_pos2463, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !94
  %cache_const2648 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411784 to %"struct.rubinius::CallSite"**), align 8, !dbg !94
  %execute_pos2649 = getelementptr %"struct.rubinius::CallSite"* %cache_const2648, i64 0, i32 2, !dbg !94
  %execute2650 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2649, align 8, !dbg !94
  store i32 30, i32* %149, align 4, !dbg !94
  %call_site_execute2651 = call %"struct.rubinius::Object"* %execute2650(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2648, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !94
  %null_check2654 = icmp eq %"struct.rubinius::Object"* %call_site_execute2651, null, !dbg !94
  br i1 %null_check2654, label %bail_out2469, label %check_active2653, !dbg !94

check_active2653:                                 ; preds = %ip25
  store %"struct.rubinius::Object"* %call_site_execute2651, %"struct.rubinius::Object"** %157, align 8, !dbg !94
  store %"struct.rubinius::Object"* %call_site_execute2651, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !95
  %161 = load %"struct.rubinius::Object"** %145, align 8, !dbg !95
  %literals_pos = getelementptr %"struct.rubinius::Object"* %161, i64 8, !dbg !95
  %162 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !95
  %literals = load %"struct.rubinius::Tuple"** %162, align 8, !dbg !95
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 5, !dbg !95
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !95, !rbx-classid !84
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !95
  %cast2668 = ptrtoint %"struct.rubinius::Object"* %call_site_execute2651 to i64, !dbg !95
  %masked2669 = and i64 %cast2668, 3, !dbg !95
  %is_reference2670 = icmp eq i64 %masked2669, 0, !dbg !95
  br i1 %is_reference2670, label %check_class_id2671, label %class_fallback2663, !dbg !95

continue2665:                                     ; preds = %class_fallback2663, %correct_serial2673
  %send_result2707 = phi %"struct.rubinius::Object"* [ %select_bool, %correct_serial2673 ], [ %call_site_execute2704, %class_fallback2663 ], !dbg !95
  store %"struct.rubinius::Object"* %send_result2707, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !95
  %as_int2711 = ptrtoint %"struct.rubinius::Object"* %send_result2707 to i64, !dbg !95
  %and2712 = and i64 %as_int2711, 15, !dbg !95
  %is_true2713 = icmp eq i64 %and2712, 10, !dbg !95
  br i1 %is_true2713, label %ip48, label %ip58, !dbg !95

check_class_id2671:                               ; preds = %check_active2653
  %class_pos2674 = getelementptr %"struct.rubinius::Object"* %call_site_execute2651, i64 0, i32 0, i32 1, !dbg !95
  %ref_class2675 = load %"struct.rubinius::Class"** %class_pos2674, align 8, !dbg !95
  %class_id_pos2676 = getelementptr %"struct.rubinius::Class"* %ref_class2675, i64 0, i32 4, !dbg !95
  %class_id2677 = load i32* %class_id_pos2676, align 4, !dbg !95
  %check_class_id2678 = icmp eq i32 %class_id2677, 77, !dbg !95
  br i1 %check_class_id2678, label %correct_class2672, label %class_fallback2663, !dbg !95

correct_class2672:                                ; preds = %check_class_id2671
  %serial_id_pos2679 = getelementptr %"struct.rubinius::Class"* %ref_class2675, i64 0, i32 5, !dbg !95
  %serial_id2680 = load i32* %serial_id_pos2679, align 4, !dbg !95
  %check_serial_id2681 = icmp eq i32 %serial_id2680, 224, !dbg !95
  br i1 %check_serial_id2681, label %correct_serial2673, label %serial_fallback2664, !dbg !95

correct_serial2673:                               ; preds = %correct_class2672
  %arg.value_pos2685 = getelementptr %"struct.rubinius::Object"* %literal, i64 1, !dbg !95
  %163 = bitcast %"struct.rubinius::Object"* %arg.value_pos2685 to double*, !dbg !95
  %farg2686 = load double* %163, align 8, !dbg !95
  %self.value_pos2696 = getelementptr %"struct.rubinius::Object"* %call_site_execute2651, i64 1, !dbg !95
  %164 = bitcast %"struct.rubinius::Object"* %self.value_pos2696 to double*, !dbg !95
  %fself2697 = load double* %164, align 8, !dbg !95
  %float.ge = fcmp uge double %fself2697, %farg2686, !dbg !95
  %select_bool = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !95
  br label %continue2665, !dbg !95

serial_fallback2664:                              ; preds = %correct_class2672
  store i32 40, i32* %149, align 4, !dbg !95
  %165 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !95
  br label %return_pad2445, !dbg !95

class_fallback2663:                               ; preds = %check_class_id2671, %check_active2653
  store %"struct.rubinius::Object"* %call_site_execute2651, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !95
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !95
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !95
  store i32 1, i32* %out_args_total, align 8, !dbg !95
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !95
  store %"struct.rubinius::Object"** %stack_pos2463, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !95
  %cache_const2701 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), align 8, !dbg !95
  %execute_pos2702 = getelementptr %"struct.rubinius::CallSite"* %cache_const2701, i64 0, i32 2, !dbg !95
  %execute2703 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2702, align 8, !dbg !95
  store i32 40, i32* %149, align 4, !dbg !95
  %call_site_execute2704 = call %"struct.rubinius::Object"* %execute2703(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2701, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !95
  %null_check2706 = icmp eq %"struct.rubinius::Object"* %call_site_execute2704, null, !dbg !95
  br i1 %null_check2706, label %bail_out2469, label %continue2665, !dbg !95

ip58:                                             ; preds = %check_active2859, %continue2665
  %storemerge5142 = phi %"struct.rubinius::Object"* [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue2665 ], [ %call_site_execute2868, %check_active2859 ]
  store %"struct.rubinius::Object"* %storemerge5142, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !95
  %constant_cache2718 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !96
  %constant_cache_pos2719 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i64 0, i32 4, !dbg !96
  %constant_scope2720 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2719, align 8, !dbg !96
  %166 = load %"struct.rubinius::Object"** %146, align 8, !dbg !96
  %frame_scope2722 = bitcast %"struct.rubinius::Object"* %166 to %"struct.rubinius::ConstantScope"*, !dbg !96
  %same_scope2723 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2720, %frame_scope2722, !dbg !96
  br i1 %same_scope2723, label %check_serial2724, label %use_call2726, !dbg !96

check_serial2724:                                 ; preds = %ip58
  %global_serial2717 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !96
  %serial_pos2728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i64 0, i32 7, !dbg !96
  %serial2729 = load i32* %serial_pos2728, align 4, !dbg !96
  %use_cache2730 = icmp eq i32 %global_serial2717, %serial2729, !dbg !96
  br i1 %use_cache2730, label %use_cache2725, label %use_call2726, !dbg !96

use_cache2725:                                    ; preds = %check_serial2724
  %value_pos2731 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2718, i64 0, i32 2, !dbg !96
  %cached_value2732 = load %"struct.rubinius::Object"** %value_pos2731, align 8, !dbg !96
  br label %continue2727, !dbg !96

use_call2726:                                     ; preds = %check_serial2724, %ip58
  store i32 59, i32* %149, align 4, !dbg !96
  %push_const_fast2733 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !96
  %null_check2736 = icmp eq %"struct.rubinius::Object"* %push_const_fast2733, null, !dbg !96
  br i1 %null_check2736, label %bail_out2469, label %continue2727, !dbg !96

continue2727:                                     ; preds = %use_call2726, %use_cache2725
  %constant2737 = phi %"struct.rubinius::Object"* [ %cached_value2732, %use_cache2725 ], [ %push_const_fast2733, %use_call2726 ], !dbg !96, !rbx-classid !97
  store %"struct.rubinius::Object"* %constant2737, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !96
  %constant_cache2742 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !96
  %constant_cache_pos2743 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i64 0, i32 4, !dbg !96
  %constant_scope2744 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2743, align 8, !dbg !96
  %same_scope2747 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2744, %frame_scope2722, !dbg !96
  br i1 %same_scope2747, label %check_serial2748, label %use_call2751, !dbg !96

check_serial2748:                                 ; preds = %continue2727
  %global_serial2741 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !96
  %serial_pos2753 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i64 0, i32 7, !dbg !96
  %serial2754 = load i32* %serial_pos2753, align 4, !dbg !96
  %use_under2755 = icmp eq i32 %global_serial2741, %serial2754, !dbg !96
  br i1 %use_under2755, label %check_under2749, label %use_call2751, !dbg !96

check_under2749:                                  ; preds = %check_serial2748
  %value_pos2756 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i64 0, i32 3, !dbg !96
  %cached_under2757 = load %"struct.rubinius::Module"** %value_pos2756, align 8, !dbg !96
  %downcast2758 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under2757, i64 0, i32 0, !dbg !96
  %use_cache2759 = icmp eq %"struct.rubinius::Object"* %downcast2758, %constant2737, !dbg !96
  br i1 %use_cache2759, label %use_cache2750, label %use_call2751, !dbg !96

use_cache2750:                                    ; preds = %check_under2749
  %value_pos2760 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2742, i64 0, i32 2, !dbg !96
  %cached_value2761 = load %"struct.rubinius::Object"** %value_pos2760, align 8, !dbg !96
  br label %continue2752, !dbg !96

use_call2751:                                     ; preds = %check_under2749, %check_serial2748, %continue2727
  store i32 61, i32* %149, align 4, !dbg !96
  %constant2762 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant2737) #0, !dbg !96
  %null_check2765 = icmp eq %"struct.rubinius::Object"* %constant2762, null, !dbg !96
  br i1 %null_check2765, label %bail_out2469, label %continue2752, !dbg !96

continue2752:                                     ; preds = %use_call2751, %use_cache2750
  %constant2766 = phi %"struct.rubinius::Object"* [ %cached_value2761, %use_cache2750 ], [ %constant2762, %use_call2751 ], !dbg !96, !rbx-classid !98
  store %"struct.rubinius::Object"* %constant2766, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !96
  %constant_cache2771 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !96
  %constant_cache_pos2772 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i64 0, i32 4, !dbg !96
  %constant_scope2773 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2772, align 8, !dbg !96
  %same_scope2776 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2773, %frame_scope2722, !dbg !96
  br i1 %same_scope2776, label %check_serial2777, label %use_call2780, !dbg !96

check_serial2777:                                 ; preds = %continue2752
  %global_serial2770 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !96
  %serial_pos2782 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i64 0, i32 7, !dbg !96
  %serial2783 = load i32* %serial_pos2782, align 4, !dbg !96
  %use_under2784 = icmp eq i32 %global_serial2770, %serial2783, !dbg !96
  br i1 %use_under2784, label %check_under2778, label %use_call2780, !dbg !96

check_under2778:                                  ; preds = %check_serial2777
  %value_pos2785 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i64 0, i32 3, !dbg !96
  %cached_under2786 = load %"struct.rubinius::Module"** %value_pos2785, align 8, !dbg !96
  %downcast2787 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under2786, i64 0, i32 0, !dbg !96
  %use_cache2788 = icmp eq %"struct.rubinius::Object"* %downcast2787, %constant2766, !dbg !96
  br i1 %use_cache2788, label %use_cache2779, label %use_call2780, !dbg !96

use_cache2779:                                    ; preds = %check_under2778
  %value_pos2789 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2771, i64 0, i32 2, !dbg !96
  %cached_value2790 = load %"struct.rubinius::Object"** %value_pos2789, align 8, !dbg !96
  br label %continue2781, !dbg !96

use_call2780:                                     ; preds = %check_under2778, %check_serial2777, %continue2752
  store i32 63, i32* %149, align 4, !dbg !96
  %constant2791 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant2766) #0, !dbg !96
  %null_check2794 = icmp eq %"struct.rubinius::Object"* %constant2791, null, !dbg !96
  br i1 %null_check2794, label %bail_out2469, label %continue2781, !dbg !96

continue2781:                                     ; preds = %use_call2780, %use_cache2779
  %constant2795 = phi %"struct.rubinius::Object"* [ %cached_value2790, %use_cache2779 ], [ %constant2791, %use_call2780 ], !dbg !96, !rbx-classid !99
  store %"struct.rubinius::Object"* %constant2795, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !96
  %local2798 = load %"struct.rubinius::Object"** %157, align 8, !dbg !96, !rbx-classid !26
  store %"struct.rubinius::Object"* %local2798, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !96
  %cast2805 = ptrtoint %"struct.rubinius::Object"* %constant2795 to i64, !dbg !96
  %masked2806 = and i64 %cast2805, 3, !dbg !96
  %is_reference2807 = icmp eq i64 %masked2806, 0, !dbg !96
  br i1 %is_reference2807, label %check_class_id2808, label %class_fallback2800, !dbg !96

ip48:                                             ; preds = %continue2665
  %self2825 = load %"struct.rubinius::Object"** %152, align 8, !dbg !95, !rbx-classid !100
  store %"struct.rubinius::Object"* %self2825, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !95
  %constant_cache2828 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !95
  %constant_cache_pos2829 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i64 0, i32 4, !dbg !95
  %constant_scope2830 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos2829, align 8, !dbg !95
  %167 = load %"struct.rubinius::Object"** %146, align 8, !dbg !95
  %frame_scope2832 = bitcast %"struct.rubinius::Object"* %167 to %"struct.rubinius::ConstantScope"*, !dbg !95
  %same_scope2833 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope2830, %frame_scope2832, !dbg !95
  br i1 %same_scope2833, label %check_serial2834, label %use_call2836, !dbg !95

check_class_id2808:                               ; preds = %continue2781
  %class_pos2811 = getelementptr %"struct.rubinius::Object"* %constant2795, i64 0, i32 0, i32 1, !dbg !96
  %ref_class2812 = load %"struct.rubinius::Class"** %class_pos2811, align 8, !dbg !96
  %class_id_pos2813 = getelementptr %"struct.rubinius::Class"* %ref_class2812, i64 0, i32 4, !dbg !96
  %class_id2814 = load i32* %class_id_pos2813, align 4, !dbg !96
  %check_class_id2815 = icmp eq i32 %class_id2814, 507, !dbg !96
  br i1 %check_class_id2815, label %correct_class2809, label %class_fallback2800, !dbg !96

correct_class2809:                                ; preds = %check_class_id2808
  %serial_id_pos2816 = getelementptr %"struct.rubinius::Class"* %ref_class2812, i64 0, i32 5, !dbg !96
  %serial_id2817 = load i32* %serial_id_pos2816, align 4, !dbg !96
  %check_serial_id2818 = icmp eq i32 %serial_id2817, 210, !dbg !96
  br i1 %check_serial_id2818, label %correct_serial2810, label %serial_fallback2801, !dbg !96

class_fallback2800:                               ; preds = %correct_serial2810, %check_class_id2808, %continue2781
  store i32 67, i32* %149, align 4, !dbg !96
  %168 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !96
  br label %return_pad2445, !dbg !96

correct_serial2810:                               ; preds = %correct_class2809
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local2798, i1* %valid_flag), !dbg !96
  %169 = load i1* %valid_flag, align 1, !dbg !96
  br i1 %169, label %ffi_continue, label %class_fallback2800, !dbg !96

serial_fallback2801:                              ; preds = %correct_class2809
  store i32 67, i32* %149, align 4, !dbg !96
  %170 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !96
  br label %return_pad2445, !dbg !96

ffi_continue:                                     ; preds = %correct_serial2810
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !96
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !96
  %unused2821 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455), !dbg !96
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !96
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack2456, align 8, !dbg !96
  br label %return_pad2445, !dbg !96

check_serial2834:                                 ; preds = %ip48
  %global_serial2827 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !95
  %serial_pos2838 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i64 0, i32 7, !dbg !95
  %serial2839 = load i32* %serial_pos2838, align 4, !dbg !95
  %use_cache2840 = icmp eq i32 %global_serial2827, %serial2839, !dbg !95
  br i1 %use_cache2840, label %use_cache2835, label %use_call2836, !dbg !95

use_cache2835:                                    ; preds = %check_serial2834
  %value_pos2841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache2828, i64 0, i32 2, !dbg !95
  %cached_value2842 = load %"struct.rubinius::Object"** %value_pos2841, align 8, !dbg !95
  br label %continue2837, !dbg !95

use_call2836:                                     ; preds = %check_serial2834, %ip48
  store i32 49, i32* %149, align 4, !dbg !95
  %push_const_fast2843 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !95
  %null_check2846 = icmp eq %"struct.rubinius::Object"* %push_const_fast2843, null, !dbg !95
  br i1 %null_check2846, label %bail_out2469, label %continue2837, !dbg !95

continue2837:                                     ; preds = %use_call2836, %use_cache2835
  %constant2847 = phi %"struct.rubinius::Object"* [ %cached_value2842, %use_cache2835 ], [ %push_const_fast2843, %use_call2836 ], !dbg !95, !rbx-classid !101
  store %"struct.rubinius::Object"* %constant2847, %"struct.rubinius::Object"** %stack_pos2463, align 8, !dbg !95
  %171 = load %"struct.rubinius::Object"** %145, align 8, !dbg !95
  %literals_pos2851 = getelementptr %"struct.rubinius::Object"* %171, i64 8, !dbg !95
  %172 = bitcast %"struct.rubinius::Object"* %literals_pos2851 to %"struct.rubinius::Tuple"**, !dbg !95
  %literals2852 = load %"struct.rubinius::Tuple"** %172, align 8, !dbg !95
  %literal_pos2853 = getelementptr %"struct.rubinius::Tuple"* %literals2852, i64 0, i32 2, i64 8, !dbg !95
  %literal2854 = load %"struct.rubinius::Object"** %literal_pos2853, align 8, !dbg !95, !rbx-classid !102
  store %"struct.rubinius::Object"* %literal2854, %"struct.rubinius::Object"** %stack_pos2464, align 8, !dbg !95
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Object"* %literal2854), !dbg !95, !rbx-classid !102
  %null_check2860 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !95
  br i1 %null_check2860, label %bail_out2469, label %check_active2859, !dbg !95

check_active2859:                                 ; preds = %continue2837
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos2464, align 8, !dbg !95
  %stack_load2863 = load %"struct.rubinius::Object"** %stack2456, align 8, !dbg !95, !rbx-classid !100
  store %"struct.rubinius::Object"* %stack_load2863, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !95
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !95
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !95
  store i32 2, i32* %out_args_total, align 8, !dbg !95
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !95
  store %"struct.rubinius::Object"** %stack_pos2463, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !95
  %cache_const2865 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), align 16, !dbg !95
  %execute_pos2866 = getelementptr %"struct.rubinius::CallSite"* %cache_const2865, i64 0, i32 2, !dbg !95
  %execute2867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2866, align 8, !dbg !95
  store i32 55, i32* %149, align 4, !dbg !95
  %call_site_execute2868 = call %"struct.rubinius::Object"* %execute2867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2865, %"struct.rubinius::CallFrame"* %call_frame2455, %"struct.rubinius::Arguments"* %out_args), !dbg !95
  %null_check2871 = icmp eq %"struct.rubinius::Object"* %call_site_execute2868, null, !dbg !95
  br i1 %null_check2871, label %bail_out2469, label %ip58, !dbg !95

return_pad2445:                                   ; preds = %bail_out2469, %ffi_continue, %serial_fallback2801, %class_fallback2800, %serial_fallback2664, %continue2618, %serial_fallback2541, %ret_raise_val2471
  %stack_load2940 = phi %"struct.rubinius::Object"* [ %crv2473, %ret_raise_val2471 ], [ %159, %serial_fallback2541 ], [ %constant2632, %continue2618 ], [ %165, %serial_fallback2664 ], [ %168, %class_fallback2800 ], [ %170, %serial_fallback2801 ], [ %to_obj, %ffi_continue ], [ null, %bail_out2469 ]
  %null_check2875 = icmp eq %"struct.rubinius::Object"* %stack_load2940, null, !dbg !87
  br i1 %null_check2875, label %bail_out, label %check_active2874, !dbg !87

check_active2874:                                 ; preds = %return_pad2445
  %173 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 14, !dbg !87
  store %"struct.rubinius::Object"* %stack_load2940, %"struct.rubinius::Object"** %173, align 8, !dbg !87
  %local2881 = load %"struct.rubinius::Object"** %23, align 8, !dbg !103, !rbx-classid !32
  store %"struct.rubinius::Object"* %local2881, %"struct.rubinius::Object"** %stack, align 8, !dbg !103
  store %"struct.rubinius::Object"* %stack_load2940, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !103
  store %"struct.rubinius::Object"* %stack_load2940, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !103
  %cast2894 = ptrtoint %"struct.rubinius::Object"* %stack_load2940 to i64, !dbg !103
  %masked2895 = and i64 %cast2894, 3, !dbg !103
  %is_reference2896 = icmp eq i64 %masked2895, 0, !dbg !103
  br i1 %is_reference2896, label %check_class_id2897, label %class_fallback2889, !dbg !103

continue2891:                                     ; preds = %class_fallback2889.continue2891_crit_edge, %correct_class2915
  %local2951 = phi %"struct.rubinius::Object"* [ %stack_load2940, %correct_class2915 ], [ %local2951.pre, %class_fallback2889.continue2891_crit_edge ]
  %stack_load3004 = phi %"struct.rubinius::Object"* [ %177, %correct_class2915 ], [ %call_site_execute2945, %class_fallback2889.continue2891_crit_edge ], !dbg !103
  store %"struct.rubinius::Object"* %stack_load3004, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !103
  store %"struct.rubinius::Object"* %local2951, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !103
  %cast2958 = ptrtoint %"struct.rubinius::Object"* %stack_load3004 to i64, !dbg !103
  %masked2959 = and i64 %cast2958, 3, !dbg !103
  %is_reference2960 = icmp eq i64 %masked2959, 0, !dbg !103
  br i1 %is_reference2960, label %check_class_id2961, label %class_fallback2953, !dbg !103

check_class_id2897:                               ; preds = %check_active2874
  %class_pos2900 = getelementptr %"struct.rubinius::Object"* %stack_load2940, i64 0, i32 0, i32 1, !dbg !103
  %ref_class2901 = load %"struct.rubinius::Class"** %class_pos2900, align 8, !dbg !103
  %class_id_pos2902 = getelementptr %"struct.rubinius::Class"* %ref_class2901, i64 0, i32 4, !dbg !103
  %class_id2903 = load i32* %class_id_pos2902, align 4, !dbg !103
  %check_class_id2904 = icmp eq i32 %class_id2903, 77, !dbg !103
  br i1 %check_class_id2904, label %correct_class2898, label %class_fallback2889, !dbg !103

correct_class2898:                                ; preds = %check_class_id2897
  %serial_id_pos2905 = getelementptr %"struct.rubinius::Class"* %ref_class2901, i64 0, i32 5, !dbg !103
  %serial_id2906 = load i32* %serial_id_pos2905, align 4, !dbg !103
  %check_serial_id2907 = icmp eq i32 %serial_id2906, 224, !dbg !103
  br i1 %check_serial_id2907, label %correct_class2915, label %serial_fallback2890, !dbg !103

serial_fallback2890:                              ; preds = %correct_class2898
  store i32 99, i32* %8, align 4, !dbg !103
  %174 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 99, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !103
  br label %return_pad, !dbg !103

correct_class2915:                                ; preds = %correct_class2898
  %arg.value_pos2922 = getelementptr %"struct.rubinius::Object"* %stack_load2940, i64 1, !dbg !103
  %175 = bitcast %"struct.rubinius::Object"* %arg.value_pos2922 to double*, !dbg !103
  %farg2923 = load double* %175, align 8, !dbg !103
  %float.mul2937 = fmul double %farg2923, %farg2923, !dbg !103
  %result2938 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !103, !rbx-classid !84
  %176 = getelementptr %"struct.rubinius::Float"* %result2938, i64 0, i32 1, !dbg !103
  store double %float.mul2937, double* %176, align 8, !dbg !103
  %177 = getelementptr inbounds %"struct.rubinius::Float"* %result2938, i64 0, i32 0, i32 0, !dbg !103
  br label %continue2891, !dbg !103

class_fallback2889:                               ; preds = %check_class_id2897, %check_active2874
  store %"struct.rubinius::Object"* %stack_load2940, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !103
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !103
  store i32 1, i32* %out_args_total, align 8, !dbg !103
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !103
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !103
  %cache_const2942 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549200 to %"struct.rubinius::CallSite"**), align 16, !dbg !103
  %execute_pos2943 = getelementptr %"struct.rubinius::CallSite"* %cache_const2942, i64 0, i32 2, !dbg !103
  %execute2944 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2943, align 8, !dbg !103
  store i32 99, i32* %8, align 4, !dbg !103
  %call_site_execute2945 = call %"struct.rubinius::Object"* %execute2944(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2942, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !103
  %null_check2947 = icmp eq %"struct.rubinius::Object"* %call_site_execute2945, null, !dbg !103
  br i1 %null_check2947, label %bail_out, label %class_fallback2889.continue2891_crit_edge, !dbg !103

class_fallback2889.continue2891_crit_edge:        ; preds = %class_fallback2889
  %local2951.pre = load %"struct.rubinius::Object"** %173, align 8, !dbg !103
  br label %continue2891, !dbg !103

continue2955:                                     ; preds = %class_fallback2953, %continue2988
  %send_result3012 = phi %"struct.rubinius::Object"* [ %183, %continue2988 ], [ %call_site_execute3009, %class_fallback2953 ], !dbg !103
  store %"struct.rubinius::Object"* %send_result3012, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !103
  %stack_load3018 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !103, !rbx-classid !32
  %cast3019 = ptrtoint %"struct.rubinius::Object"* %stack_load3018 to i64, !dbg !103
  %masked3020 = and i64 %cast3019, 3, !dbg !103
  %is_reference3021 = icmp eq i64 %masked3020, 0, !dbg !103
  br i1 %is_reference3021, label %check_class_id3022, label %class_fallback3014, !dbg !103

check_class_id2961:                               ; preds = %continue2891
  %class_pos2964 = getelementptr %"struct.rubinius::Object"* %stack_load3004, i64 0, i32 0, i32 1, !dbg !103
  %ref_class2965 = load %"struct.rubinius::Class"** %class_pos2964, align 8, !dbg !103
  %class_id_pos2966 = getelementptr %"struct.rubinius::Class"* %ref_class2965, i64 0, i32 4, !dbg !103
  %class_id2967 = load i32* %class_id_pos2966, align 4, !dbg !103
  %check_class_id2968 = icmp eq i32 %class_id2967, 77, !dbg !103
  br i1 %check_class_id2968, label %correct_class2962, label %class_fallback2953, !dbg !103

correct_class2962:                                ; preds = %check_class_id2961
  %serial_id_pos2969 = getelementptr %"struct.rubinius::Class"* %ref_class2965, i64 0, i32 5, !dbg !103
  %serial_id2970 = load i32* %serial_id_pos2969, align 4, !dbg !103
  %check_serial_id2971 = icmp eq i32 %serial_id2970, 224, !dbg !103
  br i1 %check_serial_id2971, label %correct_serial2963, label %serial_fallback2954, !dbg !103

correct_serial2963:                               ; preds = %correct_class2962
  %cast2975 = ptrtoint %"struct.rubinius::Object"* %local2951 to i64, !dbg !103
  %masked2976 = and i64 %cast2975, 3, !dbg !103
  %is_reference2977 = icmp eq i64 %masked2976, 0, !dbg !103
  br i1 %is_reference2977, label %check_class_id2978, label %continue2974, !dbg !103

serial_fallback2954:                              ; preds = %correct_class2962
  store i32 104, i32* %8, align 4, !dbg !103
  %178 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 104, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !103
  br label %return_pad, !dbg !103

check_class_id2978:                               ; preds = %correct_serial2963
  %class_pos2980 = getelementptr %"struct.rubinius::Object"* %local2951, i64 0, i32 0, i32 1, !dbg !103
  %ref_class2981 = load %"struct.rubinius::Class"** %class_pos2980, align 8, !dbg !103
  %class_id_pos2982 = getelementptr %"struct.rubinius::Class"* %ref_class2981, i64 0, i32 4, !dbg !103
  %class_id2983 = load i32* %class_id_pos2982, align 4, !dbg !103
  %check_class_id2984 = icmp eq i32 %class_id2983, 77, !dbg !103
  br i1 %check_class_id2984, label %correct_class2979, label %continue2974, !dbg !103

correct_class2979:                                ; preds = %check_class_id2978
  %arg.value_pos2986 = getelementptr %"struct.rubinius::Object"* %local2951, i64 1, !dbg !103
  %179 = bitcast %"struct.rubinius::Object"* %arg.value_pos2986 to double*, !dbg !103
  %farg2987 = load double* %179, align 8, !dbg !103
  br label %continue2988, !dbg !103

continue2974:                                     ; preds = %check_class_id2978, %correct_serial2963
  %masked2990 = and i64 %cast2975, 1, !dbg !103
  %is_fixnum2991 = icmp eq i64 %masked2990, 0, !dbg !103
  br i1 %is_fixnum2991, label %class_fallback2953, label %guarded_body2992, !dbg !103

guarded_body2992:                                 ; preds = %continue2974
  %ashr2994 = ashr i64 %cast2975, 1, !dbg !103
  %180 = sitofp i64 %ashr2994 to double, !dbg !103
  br label %continue2988, !dbg !103

continue2988:                                     ; preds = %guarded_body2992, %correct_class2979
  %rhs2995 = phi double [ %farg2987, %correct_class2979 ], [ %180, %guarded_body2992 ], !dbg !103
  %self.value_pos2999 = getelementptr %"struct.rubinius::Object"* %stack_load3004, i64 1, !dbg !103
  %181 = bitcast %"struct.rubinius::Object"* %self.value_pos2999 to double*, !dbg !103
  %fself3000 = load double* %181, align 8, !dbg !103
  %float.mul3001 = fmul double %rhs2995, %fself3000, !dbg !103
  %result3002 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !103, !rbx-classid !84
  %182 = getelementptr %"struct.rubinius::Float"* %result3002, i64 0, i32 1, !dbg !103
  store double %float.mul3001, double* %182, align 8, !dbg !103
  %183 = getelementptr inbounds %"struct.rubinius::Float"* %result3002, i64 0, i32 0, i32 0, !dbg !103
  br label %continue2955, !dbg !103

class_fallback2953:                               ; preds = %continue2974, %check_class_id2961, %continue2891
  store %"struct.rubinius::Object"* %stack_load3004, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !103
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !103
  store i32 1, i32* %out_args_total, align 8, !dbg !103
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !103
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !103
  %cache_const3006 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549240 to %"struct.rubinius::CallSite"**), align 8, !dbg !103
  %execute_pos3007 = getelementptr %"struct.rubinius::CallSite"* %cache_const3006, i64 0, i32 2, !dbg !103
  %execute3008 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3007, align 8, !dbg !103
  store i32 104, i32* %8, align 4, !dbg !103
  %call_site_execute3009 = call %"struct.rubinius::Object"* %execute3008(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3006, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !103
  %null_check3011 = icmp eq %"struct.rubinius::Object"* %call_site_execute3009, null, !dbg !103
  br i1 %null_check3011, label %bail_out, label %continue2955, !dbg !103

continue3016:                                     ; preds = %class_fallback3014, %continue3049
  %local3101 = phi %"struct.rubinius::Object"* [ %190, %continue3049 ], [ %call_site_execute3069, %class_fallback3014 ], !dbg !103
  %184 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 15, !dbg !103
  store %"struct.rubinius::Object"* %local3101, %"struct.rubinius::Object"** %184, align 8, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !104
  %self3080 = load %"struct.rubinius::Object"** %14, align 8, !dbg !104
  %cast3081 = ptrtoint %"struct.rubinius::Object"* %self3080 to i64, !dbg !104
  %masked3082 = and i64 %cast3081, 3, !dbg !104
  %is_reference3083 = icmp eq i64 %masked3082, 0, !dbg !104
  br i1 %is_reference3083, label %check_class_id3084, label %visit_push_ivar_fallback3077, !dbg !104

check_class_id3022:                               ; preds = %continue2955
  %class_pos3025 = getelementptr %"struct.rubinius::Object"* %stack_load3018, i64 0, i32 0, i32 1, !dbg !103
  %ref_class3026 = load %"struct.rubinius::Class"** %class_pos3025, align 8, !dbg !103
  %class_id_pos3027 = getelementptr %"struct.rubinius::Class"* %ref_class3026, i64 0, i32 4, !dbg !103
  %class_id3028 = load i32* %class_id_pos3027, align 4, !dbg !103
  %check_class_id3029 = icmp eq i32 %class_id3028, 77, !dbg !103
  br i1 %check_class_id3029, label %correct_class3023, label %class_fallback3014, !dbg !103

correct_class3023:                                ; preds = %check_class_id3022
  %serial_id_pos3030 = getelementptr %"struct.rubinius::Class"* %ref_class3026, i64 0, i32 5, !dbg !103
  %serial_id3031 = load i32* %serial_id_pos3030, align 4, !dbg !103
  %check_serial_id3032 = icmp eq i32 %serial_id3031, 224, !dbg !103
  br i1 %check_serial_id3032, label %correct_serial3024, label %serial_fallback3015, !dbg !103

correct_serial3024:                               ; preds = %correct_class3023
  %cast3036 = ptrtoint %"struct.rubinius::Object"* %send_result3012 to i64, !dbg !103
  %masked3037 = and i64 %cast3036, 3, !dbg !103
  %is_reference3038 = icmp eq i64 %masked3037, 0, !dbg !103
  br i1 %is_reference3038, label %check_class_id3039, label %continue3035, !dbg !103

serial_fallback3015:                              ; preds = %correct_class3023
  store i32 107, i32* %8, align 4, !dbg !103
  %185 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 107, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !103
  br label %return_pad, !dbg !103

check_class_id3039:                               ; preds = %correct_serial3024
  %class_pos3041 = getelementptr %"struct.rubinius::Object"* %send_result3012, i64 0, i32 0, i32 1, !dbg !103
  %ref_class3042 = load %"struct.rubinius::Class"** %class_pos3041, align 8, !dbg !103
  %class_id_pos3043 = getelementptr %"struct.rubinius::Class"* %ref_class3042, i64 0, i32 4, !dbg !103
  %class_id3044 = load i32* %class_id_pos3043, align 4, !dbg !103
  %check_class_id3045 = icmp eq i32 %class_id3044, 77, !dbg !103
  br i1 %check_class_id3045, label %correct_class3040, label %continue3035, !dbg !103

correct_class3040:                                ; preds = %check_class_id3039
  %arg.value_pos3047 = getelementptr %"struct.rubinius::Object"* %send_result3012, i64 1, !dbg !103
  %186 = bitcast %"struct.rubinius::Object"* %arg.value_pos3047 to double*, !dbg !103
  %farg3048 = load double* %186, align 8, !dbg !103
  br label %continue3049, !dbg !103

continue3035:                                     ; preds = %check_class_id3039, %correct_serial3024
  %masked3051 = and i64 %cast3036, 1, !dbg !103
  %is_fixnum3052 = icmp eq i64 %masked3051, 0, !dbg !103
  br i1 %is_fixnum3052, label %class_fallback3014, label %guarded_body3053, !dbg !103

guarded_body3053:                                 ; preds = %continue3035
  %ashr3055 = ashr i64 %cast3036, 1, !dbg !103
  %187 = sitofp i64 %ashr3055 to double, !dbg !103
  br label %continue3049, !dbg !103

continue3049:                                     ; preds = %guarded_body3053, %correct_class3040
  %rhs3056 = phi double [ %farg3048, %correct_class3040 ], [ %187, %guarded_body3053 ], !dbg !103
  %self.value_pos3060 = getelementptr %"struct.rubinius::Object"* %stack_load3018, i64 1, !dbg !103
  %188 = bitcast %"struct.rubinius::Object"* %self.value_pos3060 to double*, !dbg !103
  %fself3061 = load double* %188, align 8, !dbg !103
  %float.div = fdiv double %fself3061, %rhs3056, !dbg !103
  %result3062 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !103, !rbx-classid !84
  %189 = getelementptr %"struct.rubinius::Float"* %result3062, i64 0, i32 1, !dbg !103
  store double %float.div, double* %189, align 8, !dbg !103
  %190 = getelementptr inbounds %"struct.rubinius::Float"* %result3062, i64 0, i32 0, i32 0, !dbg !103
  br label %continue3016, !dbg !103

class_fallback3014:                               ; preds = %continue3035, %check_class_id3022, %continue2955
  store %"struct.rubinius::Object"* %stack_load3018, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !103
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !103
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !103
  store i32 1, i32* %out_args_total, align 8, !dbg !103
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !103
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !103
  %cache_const3066 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549264 to %"struct.rubinius::CallSite"**), align 16, !dbg !103
  %execute_pos3067 = getelementptr %"struct.rubinius::CallSite"* %cache_const3066, i64 0, i32 2, !dbg !103
  %execute3068 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3067, align 8, !dbg !103
  store i32 107, i32* %8, align 4, !dbg !103
  %call_site_execute3069 = call %"struct.rubinius::Object"* %execute3068(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3066, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !103
  %null_check3071 = icmp eq %"struct.rubinius::Object"* %call_site_execute3069, null, !dbg !103
  br i1 %null_check3071, label %bail_out, label %continue3016, !dbg !103

continue3078:                                     ; preds = %visit_push_ivar_fallback3077, %correct_class3085
  %stack_load3154 = phi %"struct.rubinius::Object"* [ %"select ivar3095", %correct_class3085 ], [ %ivar3098, %visit_push_ivar_fallback3077 ]
  store %"struct.rubinius::Object"* %stack_load3154, %"struct.rubinius::Object"** %stack, align 8, !dbg !104
  store %"struct.rubinius::Object"* %local3101, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !104
  %cast3108 = ptrtoint %"struct.rubinius::Object"* %stack_load3154 to i64, !dbg !104
  %masked3109 = and i64 %cast3108, 3, !dbg !104
  %is_reference3110 = icmp eq i64 %masked3109, 0, !dbg !104
  br i1 %is_reference3110, label %check_class_id3111, label %class_fallback3103, !dbg !104

check_class_id3084:                               ; preds = %continue3016
  %class_pos3086 = getelementptr %"struct.rubinius::Object"* %self3080, i64 0, i32 0, i32 1, !dbg !104
  %ref_class3087 = load %"struct.rubinius::Class"** %class_pos3086, align 8, !dbg !104
  %class_id_pos3088 = getelementptr %"struct.rubinius::Class"* %ref_class3087, i64 0, i32 4, !dbg !104
  %class_id3089 = load i32* %class_id_pos3088, align 4, !dbg !104
  %check_class_id3090 = icmp eq i32 %class_id3089, 1285, !dbg !104
  br i1 %check_class_id3090, label %correct_class3085, label %visit_push_ivar_fallback3077, !dbg !104

correct_class3085:                                ; preds = %check_class_id3084
  %field_pos30925140 = getelementptr %"struct.rubinius::Object"* %self3080, i64 3, !dbg !104
  %field_pos3092 = bitcast %"struct.rubinius::Object"* %field_pos30925140 to %"struct.rubinius::Object"**, !dbg !104
  %field3093 = load %"struct.rubinius::Object"** %field_pos3092, align 8, !dbg !104
  %prune_undef3094 = icmp eq %"struct.rubinius::Object"* %field3093, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !104
  %"select ivar3095" = select i1 %prune_undef3094, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3093, !dbg !104
  br label %continue3078, !dbg !104

visit_push_ivar_fallback3077:                     ; preds = %check_class_id3084, %continue3016
  %ivar3098 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3080, %"struct.rubinius::Object"* inttoptr (i64 65670 to %"struct.rubinius::Object"*)) #0, !dbg !104
  br label %continue3078, !dbg !104

continue3105:                                     ; preds = %class_fallback3103.continue3105_crit_edge, %continue3138
  %local3181 = phi %"struct.rubinius::Object"* [ %local3101, %continue3138 ], [ %local3181.pre, %class_fallback3103.continue3105_crit_edge ]
  %send_result3162 = phi %"struct.rubinius::Object"* [ %196, %continue3138 ], [ %call_site_execute3159, %class_fallback3103.continue3105_crit_edge ], !dbg !104
  store %"struct.rubinius::Object"* %send_result3162, %"struct.rubinius::Object"** %stack, align 8, !dbg !104
  %local3165 = load %"struct.rubinius::Object"** %89, align 8, !dbg !104, !rbx-classid !85
  store %"struct.rubinius::Object"* %local3165, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !104
  %field_pos31755133 = getelementptr %"struct.rubinius::Object"* %local3165, i64 3, !dbg !104
  %field_pos3175 = bitcast %"struct.rubinius::Object"* %field_pos31755133 to %"struct.rubinius::Object"**, !dbg !104
  %field3176 = load %"struct.rubinius::Object"** %field_pos3175, align 8, !dbg !104
  %prune_undef3177 = icmp eq %"struct.rubinius::Object"* %field3176, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !104
  %"select ivar3178" = select i1 %prune_undef3177, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3176, !dbg !104
  store %"struct.rubinius::Object"* %"select ivar3178", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !104
  store %"struct.rubinius::Object"* %local3181, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !104
  %cast3188 = ptrtoint %"struct.rubinius::Object"* %"select ivar3178" to i64, !dbg !104
  %masked3189 = and i64 %cast3188, 3, !dbg !104
  %is_reference3190 = icmp eq i64 %masked3189, 0, !dbg !104
  br i1 %is_reference3190, label %check_class_id3191, label %class_fallback3183, !dbg !104

check_class_id3111:                               ; preds = %continue3078
  %class_pos3114 = getelementptr %"struct.rubinius::Object"* %stack_load3154, i64 0, i32 0, i32 1, !dbg !104
  %ref_class3115 = load %"struct.rubinius::Class"** %class_pos3114, align 8, !dbg !104
  %class_id_pos3116 = getelementptr %"struct.rubinius::Class"* %ref_class3115, i64 0, i32 4, !dbg !104
  %class_id3117 = load i32* %class_id_pos3116, align 4, !dbg !104
  %check_class_id3118 = icmp eq i32 %class_id3117, 77, !dbg !104
  br i1 %check_class_id3118, label %correct_class3112, label %class_fallback3103, !dbg !104

correct_class3112:                                ; preds = %check_class_id3111
  %serial_id_pos3119 = getelementptr %"struct.rubinius::Class"* %ref_class3115, i64 0, i32 5, !dbg !104
  %serial_id3120 = load i32* %serial_id_pos3119, align 4, !dbg !104
  %check_serial_id3121 = icmp eq i32 %serial_id3120, 224, !dbg !104
  br i1 %check_serial_id3121, label %correct_serial3113, label %serial_fallback3104, !dbg !104

correct_serial3113:                               ; preds = %correct_class3112
  %cast3125 = ptrtoint %"struct.rubinius::Object"* %local3101 to i64, !dbg !104
  %masked3126 = and i64 %cast3125, 3, !dbg !104
  %is_reference3127 = icmp eq i64 %masked3126, 0, !dbg !104
  br i1 %is_reference3127, label %check_class_id3128, label %continue3124, !dbg !104

serial_fallback3104:                              ; preds = %correct_class3112
  store i32 117, i32* %8, align 4, !dbg !104
  %191 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 117, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !104
  br label %return_pad, !dbg !104

check_class_id3128:                               ; preds = %correct_serial3113
  %class_pos3130 = getelementptr %"struct.rubinius::Object"* %local3101, i64 0, i32 0, i32 1, !dbg !104
  %ref_class3131 = load %"struct.rubinius::Class"** %class_pos3130, align 8, !dbg !104
  %class_id_pos3132 = getelementptr %"struct.rubinius::Class"* %ref_class3131, i64 0, i32 4, !dbg !104
  %class_id3133 = load i32* %class_id_pos3132, align 4, !dbg !104
  %check_class_id3134 = icmp eq i32 %class_id3133, 77, !dbg !104
  br i1 %check_class_id3134, label %correct_class3129, label %continue3124, !dbg !104

correct_class3129:                                ; preds = %check_class_id3128
  %arg.value_pos3136 = getelementptr %"struct.rubinius::Object"* %local3101, i64 1, !dbg !104
  %192 = bitcast %"struct.rubinius::Object"* %arg.value_pos3136 to double*, !dbg !104
  %farg3137 = load double* %192, align 8, !dbg !104
  br label %continue3138, !dbg !104

continue3124:                                     ; preds = %check_class_id3128, %correct_serial3113
  %masked3140 = and i64 %cast3125, 1, !dbg !104
  %is_fixnum3141 = icmp eq i64 %masked3140, 0, !dbg !104
  br i1 %is_fixnum3141, label %class_fallback3103, label %guarded_body3142, !dbg !104

guarded_body3142:                                 ; preds = %continue3124
  %ashr3144 = ashr i64 %cast3125, 1, !dbg !104
  %193 = sitofp i64 %ashr3144 to double, !dbg !104
  br label %continue3138, !dbg !104

continue3138:                                     ; preds = %guarded_body3142, %correct_class3129
  %rhs3145 = phi double [ %farg3137, %correct_class3129 ], [ %193, %guarded_body3142 ], !dbg !104
  %self.value_pos3149 = getelementptr %"struct.rubinius::Object"* %stack_load3154, i64 1, !dbg !104
  %194 = bitcast %"struct.rubinius::Object"* %self.value_pos3149 to double*, !dbg !104
  %fself3150 = load double* %194, align 8, !dbg !104
  %float.mul3151 = fmul double %rhs3145, %fself3150, !dbg !104
  %result3152 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !104, !rbx-classid !84
  %195 = getelementptr %"struct.rubinius::Float"* %result3152, i64 0, i32 1, !dbg !104
  store double %float.mul3151, double* %195, align 8, !dbg !104
  %196 = getelementptr inbounds %"struct.rubinius::Float"* %result3152, i64 0, i32 0, i32 0, !dbg !104
  br label %continue3105, !dbg !104

class_fallback3103:                               ; preds = %continue3124, %check_class_id3111, %continue3078
  store %"struct.rubinius::Object"* %stack_load3154, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !104
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !104
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !104
  store i32 1, i32* %out_args_total, align 8, !dbg !104
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !104
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !104
  %cache_const3156 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549344 to %"struct.rubinius::CallSite"**), align 32, !dbg !104
  %execute_pos3157 = getelementptr %"struct.rubinius::CallSite"* %cache_const3156, i64 0, i32 2, !dbg !104
  %execute3158 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3157, align 8, !dbg !104
  store i32 117, i32* %8, align 4, !dbg !104
  %call_site_execute3159 = call %"struct.rubinius::Object"* %execute3158(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3156, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !104
  %null_check3161 = icmp eq %"struct.rubinius::Object"* %call_site_execute3159, null, !dbg !104
  br i1 %null_check3161, label %bail_out, label %class_fallback3103.continue3105_crit_edge, !dbg !104

class_fallback3103.continue3105_crit_edge:        ; preds = %class_fallback3103
  %local3181.pre = load %"struct.rubinius::Object"** %184, align 8, !dbg !104
  br label %continue3105, !dbg !104

continue3185:                                     ; preds = %class_fallback3183.continue3185_crit_edge, %continue3218
  %197 = phi %"struct.rubinius::Object"* [ %send_result3162, %continue3218 ], [ %.pre, %class_fallback3183.continue3185_crit_edge ]
  %send_result3242 = phi %"struct.rubinius::Object"* [ %205, %continue3218 ], [ %call_site_execute3239, %class_fallback3183.continue3185_crit_edge ], !dbg !104
  store %"struct.rubinius::Object"* %send_result3242, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !104
  store %"struct.rubinius::Object"* %197, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !104
  store %"struct.rubinius::Object"* %send_result3242, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !104
  %constant3248 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos2110), !dbg !104, !rbx-classid !105
  %stack_load3253 = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !104
  %stack_load3256 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !104
  store %"struct.rubinius::Object"* %stack_load3256, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !104
  %198 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 16, !dbg !104
  store %"struct.rubinius::Object"* %stack_load3256, %"struct.rubinius::Object"** %198, align 8, !dbg !104
  %199 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem5125, i64 0, i64 17, !dbg !104
  store %"struct.rubinius::Object"* %stack_load3253, %"struct.rubinius::Object"** %199, align 8, !dbg !104
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !106
  %self3273 = load %"struct.rubinius::Object"** %14, align 8, !dbg !106
  %cast3274 = ptrtoint %"struct.rubinius::Object"* %self3273 to i64, !dbg !106
  %masked3275 = and i64 %cast3274, 3, !dbg !106
  %is_reference3276 = icmp eq i64 %masked3275, 0, !dbg !106
  br i1 %is_reference3276, label %check_class_id3277, label %visit_push_ivar_fallback3270, !dbg !106

check_class_id3191:                               ; preds = %continue3105
  %class_pos3194 = getelementptr %"struct.rubinius::Object"* %"select ivar3178", i64 0, i32 0, i32 1, !dbg !104
  %ref_class3195 = load %"struct.rubinius::Class"** %class_pos3194, align 8, !dbg !104
  %class_id_pos3196 = getelementptr %"struct.rubinius::Class"* %ref_class3195, i64 0, i32 4, !dbg !104
  %class_id3197 = load i32* %class_id_pos3196, align 4, !dbg !104
  %check_class_id3198 = icmp eq i32 %class_id3197, 77, !dbg !104
  br i1 %check_class_id3198, label %correct_class3192, label %class_fallback3183, !dbg !104

correct_class3192:                                ; preds = %check_class_id3191
  %serial_id_pos3199 = getelementptr %"struct.rubinius::Class"* %ref_class3195, i64 0, i32 5, !dbg !104
  %serial_id3200 = load i32* %serial_id_pos3199, align 4, !dbg !104
  %check_serial_id3201 = icmp eq i32 %serial_id3200, 224, !dbg !104
  br i1 %check_serial_id3201, label %correct_serial3193, label %serial_fallback3184, !dbg !104

correct_serial3193:                               ; preds = %correct_class3192
  %cast3205 = ptrtoint %"struct.rubinius::Object"* %local3181 to i64, !dbg !104
  %masked3206 = and i64 %cast3205, 3, !dbg !104
  %is_reference3207 = icmp eq i64 %masked3206, 0, !dbg !104
  br i1 %is_reference3207, label %check_class_id3208, label %continue3204, !dbg !104

serial_fallback3184:                              ; preds = %correct_class3192
  store i32 127, i32* %8, align 4, !dbg !104
  %200 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 127, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !104
  br label %return_pad, !dbg !104

check_class_id3208:                               ; preds = %correct_serial3193
  %class_pos3210 = getelementptr %"struct.rubinius::Object"* %local3181, i64 0, i32 0, i32 1, !dbg !104
  %ref_class3211 = load %"struct.rubinius::Class"** %class_pos3210, align 8, !dbg !104
  %class_id_pos3212 = getelementptr %"struct.rubinius::Class"* %ref_class3211, i64 0, i32 4, !dbg !104
  %class_id3213 = load i32* %class_id_pos3212, align 4, !dbg !104
  %check_class_id3214 = icmp eq i32 %class_id3213, 77, !dbg !104
  br i1 %check_class_id3214, label %correct_class3209, label %continue3204, !dbg !104

correct_class3209:                                ; preds = %check_class_id3208
  %arg.value_pos3216 = getelementptr %"struct.rubinius::Object"* %local3181, i64 1, !dbg !104
  %201 = bitcast %"struct.rubinius::Object"* %arg.value_pos3216 to double*, !dbg !104
  %farg3217 = load double* %201, align 8, !dbg !104
  br label %continue3218, !dbg !104

continue3204:                                     ; preds = %check_class_id3208, %correct_serial3193
  %masked3220 = and i64 %cast3205, 1, !dbg !104
  %is_fixnum3221 = icmp eq i64 %masked3220, 0, !dbg !104
  br i1 %is_fixnum3221, label %class_fallback3183, label %guarded_body3222, !dbg !104

guarded_body3222:                                 ; preds = %continue3204
  %ashr3224 = ashr i64 %cast3205, 1, !dbg !104
  %202 = sitofp i64 %ashr3224 to double, !dbg !104
  br label %continue3218, !dbg !104

continue3218:                                     ; preds = %guarded_body3222, %correct_class3209
  %rhs3225 = phi double [ %farg3217, %correct_class3209 ], [ %202, %guarded_body3222 ], !dbg !104
  %self.value_pos3229 = getelementptr %"struct.rubinius::Object"* %"select ivar3178", i64 1, !dbg !104
  %203 = bitcast %"struct.rubinius::Object"* %self.value_pos3229 to double*, !dbg !104
  %fself3230 = load double* %203, align 8, !dbg !104
  %float.mul3231 = fmul double %rhs3225, %fself3230, !dbg !104
  %result3232 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !104, !rbx-classid !84
  %204 = getelementptr %"struct.rubinius::Float"* %result3232, i64 0, i32 1, !dbg !104
  store double %float.mul3231, double* %204, align 8, !dbg !104
  %205 = getelementptr inbounds %"struct.rubinius::Float"* %result3232, i64 0, i32 0, i32 0, !dbg !104
  br label %continue3185, !dbg !104

class_fallback3183:                               ; preds = %continue3204, %check_class_id3191, %continue3105
  store %"struct.rubinius::Object"* %"select ivar3178", %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !104
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !104
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !104
  store i32 1, i32* %out_args_total, align 8, !dbg !104
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !104
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !104
  %cache_const3236 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549424 to %"struct.rubinius::CallSite"**), align 16, !dbg !104
  %execute_pos3237 = getelementptr %"struct.rubinius::CallSite"* %cache_const3236, i64 0, i32 2, !dbg !104
  %execute3238 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3237, align 8, !dbg !104
  store i32 127, i32* %8, align 4, !dbg !104
  %call_site_execute3239 = call %"struct.rubinius::Object"* %execute3238(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3236, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !104
  %null_check3241 = icmp eq %"struct.rubinius::Object"* %call_site_execute3239, null, !dbg !104
  br i1 %null_check3241, label %bail_out, label %class_fallback3183.continue3185_crit_edge, !dbg !104

class_fallback3183.continue3185_crit_edge:        ; preds = %class_fallback3183
  %.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !104
  br label %continue3185, !dbg !104

continue3271:                                     ; preds = %visit_push_ivar_fallback3270, %correct_class3278
  %storemerge5139 = phi %"struct.rubinius::Object"* [ %"select ivar3288", %correct_class3278 ], [ %ivar3291, %visit_push_ivar_fallback3270 ]
  store %"struct.rubinius::Object"* %storemerge5139, %"struct.rubinius::Object"** %stack, align 8, !dbg !106
  %local3294 = load %"struct.rubinius::Object"** %92, align 8, !dbg !106, !rbx-classid !107
  store %"struct.rubinius::Object"* %local3294, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !106
  store %"struct.rubinius::Object"* %stack_load3253, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !106
  %cast3304 = ptrtoint %"struct.rubinius::Object"* %local3294 to i64, !dbg !106
  %masked3305 = and i64 %cast3304, 3, !dbg !106
  %is_reference3306 = icmp eq i64 %masked3305, 0, !dbg !106
  br i1 %is_reference3306, label %check_class_id3307, label %class_fallback3299, !dbg !106

check_class_id3277:                               ; preds = %continue3185
  %class_pos3279 = getelementptr %"struct.rubinius::Object"* %self3273, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3280 = load %"struct.rubinius::Class"** %class_pos3279, align 8, !dbg !106
  %class_id_pos3281 = getelementptr %"struct.rubinius::Class"* %ref_class3280, i64 0, i32 4, !dbg !106
  %class_id3282 = load i32* %class_id_pos3281, align 4, !dbg !106
  %check_class_id3283 = icmp eq i32 %class_id3282, 1285, !dbg !106
  br i1 %check_class_id3283, label %correct_class3278, label %visit_push_ivar_fallback3270, !dbg !106

correct_class3278:                                ; preds = %check_class_id3277
  %field_pos32855138 = getelementptr %"struct.rubinius::Object"* %self3273, i64 2, !dbg !106
  %field_pos3285 = bitcast %"struct.rubinius::Object"* %field_pos32855138 to %"struct.rubinius::Object"**, !dbg !106
  %field3286 = load %"struct.rubinius::Object"** %field_pos3285, align 8, !dbg !106
  %prune_undef3287 = icmp eq %"struct.rubinius::Object"* %field3286, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !106
  %"select ivar3288" = select i1 %prune_undef3287, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3286, !dbg !106
  br label %continue3271, !dbg !106

visit_push_ivar_fallback3270:                     ; preds = %check_class_id3277, %continue3185
  %ivar3291 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3273, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !106
  br label %continue3271, !dbg !106

continue3301:                                     ; preds = %class_fallback3299.continue3301_crit_edge, %continue3334
  %stack_load3364 = phi %"struct.rubinius::Object"* [ %storemerge5139, %continue3334 ], [ %stack_load3364.pre, %class_fallback3299.continue3301_crit_edge ]
  %send_result3358 = phi %"struct.rubinius::Object"* [ %211, %continue3334 ], [ %call_site_execute3355, %class_fallback3299.continue3301_crit_edge ], !dbg !106
  store %"struct.rubinius::Object"* %send_result3358, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !106
  %cast3365 = ptrtoint %"struct.rubinius::Object"* %stack_load3364 to i64, !dbg !106
  %masked3366 = and i64 %cast3365, 3, !dbg !106
  %is_reference3367 = icmp eq i64 %masked3366, 0, !dbg !106
  br i1 %is_reference3367, label %check_class_id3368, label %class_fallback3360, !dbg !106

check_class_id3307:                               ; preds = %continue3271
  %class_pos3310 = getelementptr %"struct.rubinius::Object"* %local3294, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3311 = load %"struct.rubinius::Class"** %class_pos3310, align 8, !dbg !106
  %class_id_pos3312 = getelementptr %"struct.rubinius::Class"* %ref_class3311, i64 0, i32 4, !dbg !106
  %class_id3313 = load i32* %class_id_pos3312, align 4, !dbg !106
  %check_class_id3314 = icmp eq i32 %class_id3313, 77, !dbg !106
  br i1 %check_class_id3314, label %correct_class3308, label %class_fallback3299, !dbg !106

correct_class3308:                                ; preds = %check_class_id3307
  %serial_id_pos3315 = getelementptr %"struct.rubinius::Class"* %ref_class3311, i64 0, i32 5, !dbg !106
  %serial_id3316 = load i32* %serial_id_pos3315, align 4, !dbg !106
  %check_serial_id3317 = icmp eq i32 %serial_id3316, 224, !dbg !106
  br i1 %check_serial_id3317, label %correct_serial3309, label %serial_fallback3300, !dbg !106

correct_serial3309:                               ; preds = %correct_class3308
  %cast3321 = ptrtoint %"struct.rubinius::Object"* %stack_load3253 to i64, !dbg !106
  %masked3322 = and i64 %cast3321, 3, !dbg !106
  %is_reference3323 = icmp eq i64 %masked3322, 0, !dbg !106
  br i1 %is_reference3323, label %check_class_id3324, label %continue3320, !dbg !106

serial_fallback3300:                              ; preds = %correct_class3308
  store i32 151, i32* %8, align 4, !dbg !106
  %206 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 151, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !106
  br label %return_pad, !dbg !106

check_class_id3324:                               ; preds = %correct_serial3309
  %class_pos3326 = getelementptr %"struct.rubinius::Object"* %stack_load3253, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3327 = load %"struct.rubinius::Class"** %class_pos3326, align 8, !dbg !106
  %class_id_pos3328 = getelementptr %"struct.rubinius::Class"* %ref_class3327, i64 0, i32 4, !dbg !106
  %class_id3329 = load i32* %class_id_pos3328, align 4, !dbg !106
  %check_class_id3330 = icmp eq i32 %class_id3329, 77, !dbg !106
  br i1 %check_class_id3330, label %correct_class3325, label %continue3320, !dbg !106

correct_class3325:                                ; preds = %check_class_id3324
  %arg.value_pos3332 = getelementptr %"struct.rubinius::Object"* %stack_load3253, i64 1, !dbg !106
  %207 = bitcast %"struct.rubinius::Object"* %arg.value_pos3332 to double*, !dbg !106
  %farg3333 = load double* %207, align 8, !dbg !106
  br label %continue3334, !dbg !106

continue3320:                                     ; preds = %check_class_id3324, %correct_serial3309
  %masked3336 = and i64 %cast3321, 1, !dbg !106
  %is_fixnum3337 = icmp eq i64 %masked3336, 0, !dbg !106
  br i1 %is_fixnum3337, label %class_fallback3299, label %guarded_body3338, !dbg !106

guarded_body3338:                                 ; preds = %continue3320
  %ashr3340 = ashr i64 %cast3321, 1, !dbg !106
  %208 = sitofp i64 %ashr3340 to double, !dbg !106
  br label %continue3334, !dbg !106

continue3334:                                     ; preds = %guarded_body3338, %correct_class3325
  %rhs3341 = phi double [ %farg3333, %correct_class3325 ], [ %208, %guarded_body3338 ], !dbg !106
  %self.value_pos3345 = getelementptr %"struct.rubinius::Object"* %local3294, i64 1, !dbg !106
  %209 = bitcast %"struct.rubinius::Object"* %self.value_pos3345 to double*, !dbg !106
  %fself3346 = load double* %209, align 8, !dbg !106
  %float.mul3347 = fmul double %rhs3341, %fself3346, !dbg !106
  %result3348 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !106, !rbx-classid !84
  %210 = getelementptr %"struct.rubinius::Float"* %result3348, i64 0, i32 1, !dbg !106
  store double %float.mul3347, double* %210, align 8, !dbg !106
  %211 = getelementptr inbounds %"struct.rubinius::Float"* %result3348, i64 0, i32 0, i32 0, !dbg !106
  br label %continue3301, !dbg !106

class_fallback3299:                               ; preds = %continue3320, %check_class_id3307, %continue3271
  store %"struct.rubinius::Object"* %local3294, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !106
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !106
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !106
  store i32 1, i32* %out_args_total, align 8, !dbg !106
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !106
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !106
  %cache_const3352 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549616 to %"struct.rubinius::CallSite"**), align 16, !dbg !106
  %execute_pos3353 = getelementptr %"struct.rubinius::CallSite"* %cache_const3352, i64 0, i32 2, !dbg !106
  %execute3354 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3353, align 8, !dbg !106
  store i32 151, i32* %8, align 4, !dbg !106
  %call_site_execute3355 = call %"struct.rubinius::Object"* %execute3354(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3352, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !106
  %null_check3357 = icmp eq %"struct.rubinius::Object"* %call_site_execute3355, null, !dbg !106
  br i1 %null_check3357, label %bail_out, label %class_fallback3299.continue3301_crit_edge, !dbg !106

class_fallback3299.continue3301_crit_edge:        ; preds = %class_fallback3299
  %stack_load3364.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !106
  br label %continue3301, !dbg !106

continue3362:                                     ; preds = %class_fallback3360, %continue3395
  %send_result3419 = phi %"struct.rubinius::Object"* [ %217, %continue3395 ], [ %call_site_execute3416, %class_fallback3360 ], !dbg !106
  store %"struct.rubinius::Object"* %send_result3419, %"struct.rubinius::Object"** %stack, align 8, !dbg !106
  %self3421 = load %"struct.rubinius::Object"** %14, align 8, !dbg !106
  %cast3426 = ptrtoint %"struct.rubinius::Object"* %self3421 to i64, !dbg !106
  %masked3427 = and i64 %cast3426, 3, !dbg !106
  %is_reference3428 = icmp eq i64 %masked3427, 0, !dbg !106
  br i1 %is_reference3428, label %check_class_id3429, label %visit_push_ivar_fallback3424, !dbg !106

check_class_id3368:                               ; preds = %continue3301
  %class_pos3371 = getelementptr %"struct.rubinius::Object"* %stack_load3364, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3372 = load %"struct.rubinius::Class"** %class_pos3371, align 8, !dbg !106
  %class_id_pos3373 = getelementptr %"struct.rubinius::Class"* %ref_class3372, i64 0, i32 4, !dbg !106
  %class_id3374 = load i32* %class_id_pos3373, align 4, !dbg !106
  %check_class_id3375 = icmp eq i32 %class_id3374, 77, !dbg !106
  br i1 %check_class_id3375, label %correct_class3369, label %class_fallback3360, !dbg !106

correct_class3369:                                ; preds = %check_class_id3368
  %serial_id_pos3376 = getelementptr %"struct.rubinius::Class"* %ref_class3372, i64 0, i32 5, !dbg !106
  %serial_id3377 = load i32* %serial_id_pos3376, align 4, !dbg !106
  %check_serial_id3378 = icmp eq i32 %serial_id3377, 224, !dbg !106
  br i1 %check_serial_id3378, label %correct_serial3370, label %serial_fallback3361, !dbg !106

correct_serial3370:                               ; preds = %correct_class3369
  %cast3382 = ptrtoint %"struct.rubinius::Object"* %send_result3358 to i64, !dbg !106
  %masked3383 = and i64 %cast3382, 3, !dbg !106
  %is_reference3384 = icmp eq i64 %masked3383, 0, !dbg !106
  br i1 %is_reference3384, label %check_class_id3385, label %continue3381, !dbg !106

serial_fallback3361:                              ; preds = %correct_class3369
  store i32 154, i32* %8, align 4, !dbg !106
  %212 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 154, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !106
  br label %return_pad, !dbg !106

check_class_id3385:                               ; preds = %correct_serial3370
  %class_pos3387 = getelementptr %"struct.rubinius::Object"* %send_result3358, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3388 = load %"struct.rubinius::Class"** %class_pos3387, align 8, !dbg !106
  %class_id_pos3389 = getelementptr %"struct.rubinius::Class"* %ref_class3388, i64 0, i32 4, !dbg !106
  %class_id3390 = load i32* %class_id_pos3389, align 4, !dbg !106
  %check_class_id3391 = icmp eq i32 %class_id3390, 77, !dbg !106
  br i1 %check_class_id3391, label %correct_class3386, label %continue3381, !dbg !106

correct_class3386:                                ; preds = %check_class_id3385
  %arg.value_pos3393 = getelementptr %"struct.rubinius::Object"* %send_result3358, i64 1, !dbg !106
  %213 = bitcast %"struct.rubinius::Object"* %arg.value_pos3393 to double*, !dbg !106
  %farg3394 = load double* %213, align 8, !dbg !106
  br label %continue3395, !dbg !106

continue3381:                                     ; preds = %check_class_id3385, %correct_serial3370
  %masked3397 = and i64 %cast3382, 1, !dbg !106
  %is_fixnum3398 = icmp eq i64 %masked3397, 0, !dbg !106
  br i1 %is_fixnum3398, label %class_fallback3360, label %guarded_body3399, !dbg !106

guarded_body3399:                                 ; preds = %continue3381
  %ashr3401 = ashr i64 %cast3382, 1, !dbg !106
  %214 = sitofp i64 %ashr3401 to double, !dbg !106
  br label %continue3395, !dbg !106

continue3395:                                     ; preds = %guarded_body3399, %correct_class3386
  %rhs3402 = phi double [ %farg3394, %correct_class3386 ], [ %214, %guarded_body3399 ], !dbg !106
  %self.value_pos3406 = getelementptr %"struct.rubinius::Object"* %stack_load3364, i64 1, !dbg !106
  %215 = bitcast %"struct.rubinius::Object"* %self.value_pos3406 to double*, !dbg !106
  %fself3407 = load double* %215, align 8, !dbg !106
  %float.sub3408 = fsub double %fself3407, %rhs3402, !dbg !106
  %result3409 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !106, !rbx-classid !84
  %216 = getelementptr %"struct.rubinius::Float"* %result3409, i64 0, i32 1, !dbg !106
  store double %float.sub3408, double* %216, align 8, !dbg !106
  %217 = getelementptr inbounds %"struct.rubinius::Float"* %result3409, i64 0, i32 0, i32 0, !dbg !106
  br label %continue3362, !dbg !106

class_fallback3360:                               ; preds = %continue3381, %check_class_id3368, %continue3301
  store %"struct.rubinius::Object"* %stack_load3364, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !106
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !106
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !106
  store i32 1, i32* %out_args_total, align 8, !dbg !106
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !106
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !106
  %cache_const3413 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549640 to %"struct.rubinius::CallSite"**), align 8, !dbg !106
  %execute_pos3414 = getelementptr %"struct.rubinius::CallSite"* %cache_const3413, i64 0, i32 2, !dbg !106
  %execute3415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3414, align 8, !dbg !106
  store i32 154, i32* %8, align 4, !dbg !106
  %call_site_execute3416 = call %"struct.rubinius::Object"* %execute3415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !106
  %null_check3418 = icmp eq %"struct.rubinius::Object"* %call_site_execute3416, null, !dbg !106
  br i1 %null_check3418, label %bail_out, label %continue3362, !dbg !106

continue3425:                                     ; preds = %visit_push_ivar_fallback3424, %correct_class3430, %run_barrier, %reference_obj
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !108
  %self3450 = load %"struct.rubinius::Object"** %14, align 8, !dbg !108
  %cast3451 = ptrtoint %"struct.rubinius::Object"* %self3450 to i64, !dbg !108
  %masked3452 = and i64 %cast3451, 3, !dbg !108
  %is_reference3453 = icmp eq i64 %masked3452, 0, !dbg !108
  br i1 %is_reference3453, label %check_class_id3454, label %visit_push_ivar_fallback3447, !dbg !108

check_class_id3429:                               ; preds = %continue3362
  %class_pos3431 = getelementptr %"struct.rubinius::Object"* %self3421, i64 0, i32 0, i32 1, !dbg !106
  %ref_class3432 = load %"struct.rubinius::Class"** %class_pos3431, align 8, !dbg !106
  %class_id_pos3433 = getelementptr %"struct.rubinius::Class"* %ref_class3432, i64 0, i32 4, !dbg !106
  %class_id3434 = load i32* %class_id_pos3433, align 4, !dbg !106
  %check_class_id3435 = icmp eq i32 %class_id3434, 1285, !dbg !106
  br i1 %check_class_id3435, label %correct_class3430, label %visit_push_ivar_fallback3424, !dbg !106

correct_class3430:                                ; preds = %check_class_id3429
  %218 = getelementptr inbounds %"struct.rubinius::Object"* %self3421, i64 2, i32 0, i32 0, i32 0, !dbg !106
  %send_result3419.c = ptrtoint %"struct.rubinius::Object"* %send_result3419 to i64, !dbg !106
  store i64 %send_result3419.c, i64* %218, align 8, !dbg !106
  %masked3439 = and i64 %send_result3419.c, 3, !dbg !106
  %is_reference3440 = icmp eq i64 %masked3439, 0, !dbg !106
  br i1 %is_reference3440, label %reference_obj, label %continue3425, !dbg !106

visit_push_ivar_fallback3424:                     ; preds = %check_class_id3429, %continue3362
  %ivar3443 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3421, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3419), !dbg !106
  %null_check3446 = icmp eq %"struct.rubinius::Object"* %ivar3443, null, !dbg !106
  br i1 %null_check3446, label %bail_out, label %continue3425, !dbg !106

reference_obj:                                    ; preds = %correct_class3430
  %object_memory_mark = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !106
  %word_pos3441 = getelementptr %"struct.rubinius::Object"* %self3421, i64 0, i32 0, i32 0, i32 0, !dbg !106
  %flags3442 = load i64* %word_pos3441, align 8, !dbg !106
  %mark_mask = and i64 %flags3442, 3670016, !dbg !106
  %scan_mark = add i32 %object_memory_mark, 1, !dbg !106
  %219 = zext i32 %scan_mark to i64, !dbg !106
  %lshr = shl nuw nsw i64 %219, 19, !dbg !106
  %is_scanned = icmp ne i64 %mark_mask, %lshr, !dbg !106
  %zone_mask = and i64 %flags3442, 768, !dbg !106
  %is_young = icmp eq i64 %zone_mask, 512, !dbg !106
  %or.cond = and i1 %is_scanned, %is_young, !dbg !106
  br i1 %or.cond, label %continue3425, label %run_barrier, !dbg !106

run_barrier:                                      ; preds = %reference_obj
  %220 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3421, %"struct.rubinius::Object"* %send_result3419), !dbg !106
  br label %continue3425, !dbg !106

continue3448:                                     ; preds = %visit_push_ivar_fallback3447, %correct_class3455
  %storemerge5136 = phi %"struct.rubinius::Object"* [ %"select ivar3465", %correct_class3455 ], [ %ivar3468, %visit_push_ivar_fallback3447 ]
  store %"struct.rubinius::Object"* %storemerge5136, %"struct.rubinius::Object"** %stack, align 8, !dbg !108
  %local3471 = load %"struct.rubinius::Object"** %101, align 8, !dbg !108, !rbx-classid !109
  store %"struct.rubinius::Object"* %local3471, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !108
  %local3474 = load %"struct.rubinius::Object"** %199, align 8, !dbg !108, !rbx-classid !110
  store %"struct.rubinius::Object"* %local3474, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !108
  %cast3481 = ptrtoint %"struct.rubinius::Object"* %local3471 to i64, !dbg !108
  %masked3482 = and i64 %cast3481, 3, !dbg !108
  %is_reference3483 = icmp eq i64 %masked3482, 0, !dbg !108
  br i1 %is_reference3483, label %check_class_id3484, label %class_fallback3476, !dbg !108

check_class_id3454:                               ; preds = %continue3425
  %class_pos3456 = getelementptr %"struct.rubinius::Object"* %self3450, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3457 = load %"struct.rubinius::Class"** %class_pos3456, align 8, !dbg !108
  %class_id_pos3458 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i64 0, i32 4, !dbg !108
  %class_id3459 = load i32* %class_id_pos3458, align 4, !dbg !108
  %check_class_id3460 = icmp eq i32 %class_id3459, 1285, !dbg !108
  br i1 %check_class_id3460, label %correct_class3455, label %visit_push_ivar_fallback3447, !dbg !108

correct_class3455:                                ; preds = %check_class_id3454
  %field_pos3462 = getelementptr %"struct.rubinius::Object"* %self3450, i64 2, i32 0, i32 1, !dbg !108
  %221 = load %"struct.rubinius::Class"** %field_pos3462, align 8, !dbg !108
  %field3463 = getelementptr inbounds %"struct.rubinius::Class"* %221, i64 0, i32 0, i32 0, !dbg !108
  %prune_undef3464 = icmp eq %"struct.rubinius::Object"* %field3463, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !108
  %"select ivar3465" = select i1 %prune_undef3464, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3463, !dbg !108
  br label %continue3448, !dbg !108

visit_push_ivar_fallback3447:                     ; preds = %check_class_id3454, %continue3425
  %ivar3468 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3450, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !108
  br label %continue3448, !dbg !108

continue3478:                                     ; preds = %class_fallback3476.continue3478_crit_edge, %continue3511
  %stack_load3541 = phi %"struct.rubinius::Object"* [ %storemerge5136, %continue3511 ], [ %stack_load3541.pre, %class_fallback3476.continue3478_crit_edge ]
  %send_result3535 = phi %"struct.rubinius::Object"* [ %227, %continue3511 ], [ %call_site_execute3532, %class_fallback3476.continue3478_crit_edge ], !dbg !108
  store %"struct.rubinius::Object"* %send_result3535, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !108
  %cast3542 = ptrtoint %"struct.rubinius::Object"* %stack_load3541 to i64, !dbg !108
  %masked3543 = and i64 %cast3542, 3, !dbg !108
  %is_reference3544 = icmp eq i64 %masked3543, 0, !dbg !108
  br i1 %is_reference3544, label %check_class_id3545, label %class_fallback3537, !dbg !108

check_class_id3484:                               ; preds = %continue3448
  %class_pos3487 = getelementptr %"struct.rubinius::Object"* %local3471, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3488 = load %"struct.rubinius::Class"** %class_pos3487, align 8, !dbg !108
  %class_id_pos3489 = getelementptr %"struct.rubinius::Class"* %ref_class3488, i64 0, i32 4, !dbg !108
  %class_id3490 = load i32* %class_id_pos3489, align 4, !dbg !108
  %check_class_id3491 = icmp eq i32 %class_id3490, 77, !dbg !108
  br i1 %check_class_id3491, label %correct_class3485, label %class_fallback3476, !dbg !108

correct_class3485:                                ; preds = %check_class_id3484
  %serial_id_pos3492 = getelementptr %"struct.rubinius::Class"* %ref_class3488, i64 0, i32 5, !dbg !108
  %serial_id3493 = load i32* %serial_id_pos3492, align 4, !dbg !108
  %check_serial_id3494 = icmp eq i32 %serial_id3493, 224, !dbg !108
  br i1 %check_serial_id3494, label %correct_serial3486, label %serial_fallback3477, !dbg !108

correct_serial3486:                               ; preds = %correct_class3485
  %cast3498 = ptrtoint %"struct.rubinius::Object"* %local3474 to i64, !dbg !108
  %masked3499 = and i64 %cast3498, 3, !dbg !108
  %is_reference3500 = icmp eq i64 %masked3499, 0, !dbg !108
  br i1 %is_reference3500, label %check_class_id3501, label %continue3497, !dbg !108

serial_fallback3477:                              ; preds = %correct_class3485
  store i32 166, i32* %8, align 4, !dbg !108
  %222 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 166, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !108
  br label %return_pad, !dbg !108

check_class_id3501:                               ; preds = %correct_serial3486
  %class_pos3503 = getelementptr %"struct.rubinius::Object"* %local3474, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3504 = load %"struct.rubinius::Class"** %class_pos3503, align 8, !dbg !108
  %class_id_pos3505 = getelementptr %"struct.rubinius::Class"* %ref_class3504, i64 0, i32 4, !dbg !108
  %class_id3506 = load i32* %class_id_pos3505, align 4, !dbg !108
  %check_class_id3507 = icmp eq i32 %class_id3506, 77, !dbg !108
  br i1 %check_class_id3507, label %correct_class3502, label %continue3497, !dbg !108

correct_class3502:                                ; preds = %check_class_id3501
  %arg.value_pos3509 = getelementptr %"struct.rubinius::Object"* %local3474, i64 1, !dbg !108
  %223 = bitcast %"struct.rubinius::Object"* %arg.value_pos3509 to double*, !dbg !108
  %farg3510 = load double* %223, align 8, !dbg !108
  br label %continue3511, !dbg !108

continue3497:                                     ; preds = %check_class_id3501, %correct_serial3486
  %masked3513 = and i64 %cast3498, 1, !dbg !108
  %is_fixnum3514 = icmp eq i64 %masked3513, 0, !dbg !108
  br i1 %is_fixnum3514, label %class_fallback3476, label %guarded_body3515, !dbg !108

guarded_body3515:                                 ; preds = %continue3497
  %ashr3517 = ashr i64 %cast3498, 1, !dbg !108
  %224 = sitofp i64 %ashr3517 to double, !dbg !108
  br label %continue3511, !dbg !108

continue3511:                                     ; preds = %guarded_body3515, %correct_class3502
  %rhs3518 = phi double [ %farg3510, %correct_class3502 ], [ %224, %guarded_body3515 ], !dbg !108
  %self.value_pos3522 = getelementptr %"struct.rubinius::Object"* %local3471, i64 1, !dbg !108
  %225 = bitcast %"struct.rubinius::Object"* %self.value_pos3522 to double*, !dbg !108
  %fself3523 = load double* %225, align 8, !dbg !108
  %float.mul3524 = fmul double %rhs3518, %fself3523, !dbg !108
  %result3525 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !108, !rbx-classid !84
  %226 = getelementptr %"struct.rubinius::Float"* %result3525, i64 0, i32 1, !dbg !108
  store double %float.mul3524, double* %226, align 8, !dbg !108
  %227 = getelementptr inbounds %"struct.rubinius::Float"* %result3525, i64 0, i32 0, i32 0, !dbg !108
  br label %continue3478, !dbg !108

class_fallback3476:                               ; preds = %continue3497, %check_class_id3484, %continue3448
  store %"struct.rubinius::Object"* %local3471, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !108
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !108
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !108
  store i32 1, i32* %out_args_total, align 8, !dbg !108
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !108
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !108
  %cache_const3529 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549736 to %"struct.rubinius::CallSite"**), align 8, !dbg !108
  %execute_pos3530 = getelementptr %"struct.rubinius::CallSite"* %cache_const3529, i64 0, i32 2, !dbg !108
  %execute3531 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3530, align 8, !dbg !108
  store i32 166, i32* %8, align 4, !dbg !108
  %call_site_execute3532 = call %"struct.rubinius::Object"* %execute3531(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3529, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !108
  %null_check3534 = icmp eq %"struct.rubinius::Object"* %call_site_execute3532, null, !dbg !108
  br i1 %null_check3534, label %bail_out, label %class_fallback3476.continue3478_crit_edge, !dbg !108

class_fallback3476.continue3478_crit_edge:        ; preds = %class_fallback3476
  %stack_load3541.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !108
  br label %continue3478, !dbg !108

continue3539:                                     ; preds = %class_fallback3537, %continue3572
  %send_result3596 = phi %"struct.rubinius::Object"* [ %233, %continue3572 ], [ %call_site_execute3593, %class_fallback3537 ], !dbg !108
  store %"struct.rubinius::Object"* %send_result3596, %"struct.rubinius::Object"** %stack, align 8, !dbg !108
  %self3598 = load %"struct.rubinius::Object"** %14, align 8, !dbg !108
  %cast3603 = ptrtoint %"struct.rubinius::Object"* %self3598 to i64, !dbg !108
  %masked3604 = and i64 %cast3603, 3, !dbg !108
  %is_reference3605 = icmp eq i64 %masked3604, 0, !dbg !108
  br i1 %is_reference3605, label %check_class_id3606, label %visit_push_ivar_fallback3601, !dbg !108

check_class_id3545:                               ; preds = %continue3478
  %class_pos3548 = getelementptr %"struct.rubinius::Object"* %stack_load3541, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3549 = load %"struct.rubinius::Class"** %class_pos3548, align 8, !dbg !108
  %class_id_pos3550 = getelementptr %"struct.rubinius::Class"* %ref_class3549, i64 0, i32 4, !dbg !108
  %class_id3551 = load i32* %class_id_pos3550, align 4, !dbg !108
  %check_class_id3552 = icmp eq i32 %class_id3551, 77, !dbg !108
  br i1 %check_class_id3552, label %correct_class3546, label %class_fallback3537, !dbg !108

correct_class3546:                                ; preds = %check_class_id3545
  %serial_id_pos3553 = getelementptr %"struct.rubinius::Class"* %ref_class3549, i64 0, i32 5, !dbg !108
  %serial_id3554 = load i32* %serial_id_pos3553, align 4, !dbg !108
  %check_serial_id3555 = icmp eq i32 %serial_id3554, 224, !dbg !108
  br i1 %check_serial_id3555, label %correct_serial3547, label %serial_fallback3538, !dbg !108

correct_serial3547:                               ; preds = %correct_class3546
  %cast3559 = ptrtoint %"struct.rubinius::Object"* %send_result3535 to i64, !dbg !108
  %masked3560 = and i64 %cast3559, 3, !dbg !108
  %is_reference3561 = icmp eq i64 %masked3560, 0, !dbg !108
  br i1 %is_reference3561, label %check_class_id3562, label %continue3558, !dbg !108

serial_fallback3538:                              ; preds = %correct_class3546
  store i32 169, i32* %8, align 4, !dbg !108
  %228 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 169, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !108
  br label %return_pad, !dbg !108

check_class_id3562:                               ; preds = %correct_serial3547
  %class_pos3564 = getelementptr %"struct.rubinius::Object"* %send_result3535, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3565 = load %"struct.rubinius::Class"** %class_pos3564, align 8, !dbg !108
  %class_id_pos3566 = getelementptr %"struct.rubinius::Class"* %ref_class3565, i64 0, i32 4, !dbg !108
  %class_id3567 = load i32* %class_id_pos3566, align 4, !dbg !108
  %check_class_id3568 = icmp eq i32 %class_id3567, 77, !dbg !108
  br i1 %check_class_id3568, label %correct_class3563, label %continue3558, !dbg !108

correct_class3563:                                ; preds = %check_class_id3562
  %arg.value_pos3570 = getelementptr %"struct.rubinius::Object"* %send_result3535, i64 1, !dbg !108
  %229 = bitcast %"struct.rubinius::Object"* %arg.value_pos3570 to double*, !dbg !108
  %farg3571 = load double* %229, align 8, !dbg !108
  br label %continue3572, !dbg !108

continue3558:                                     ; preds = %check_class_id3562, %correct_serial3547
  %masked3574 = and i64 %cast3559, 1, !dbg !108
  %is_fixnum3575 = icmp eq i64 %masked3574, 0, !dbg !108
  br i1 %is_fixnum3575, label %class_fallback3537, label %guarded_body3576, !dbg !108

guarded_body3576:                                 ; preds = %continue3558
  %ashr3578 = ashr i64 %cast3559, 1, !dbg !108
  %230 = sitofp i64 %ashr3578 to double, !dbg !108
  br label %continue3572, !dbg !108

continue3572:                                     ; preds = %guarded_body3576, %correct_class3563
  %rhs3579 = phi double [ %farg3571, %correct_class3563 ], [ %230, %guarded_body3576 ], !dbg !108
  %self.value_pos3583 = getelementptr %"struct.rubinius::Object"* %stack_load3541, i64 1, !dbg !108
  %231 = bitcast %"struct.rubinius::Object"* %self.value_pos3583 to double*, !dbg !108
  %fself3584 = load double* %231, align 8, !dbg !108
  %float.sub3585 = fsub double %fself3584, %rhs3579, !dbg !108
  %result3586 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !108, !rbx-classid !84
  %232 = getelementptr %"struct.rubinius::Float"* %result3586, i64 0, i32 1, !dbg !108
  store double %float.sub3585, double* %232, align 8, !dbg !108
  %233 = getelementptr inbounds %"struct.rubinius::Float"* %result3586, i64 0, i32 0, i32 0, !dbg !108
  br label %continue3539, !dbg !108

class_fallback3537:                               ; preds = %continue3558, %check_class_id3545, %continue3478
  store %"struct.rubinius::Object"* %stack_load3541, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !108
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !108
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !108
  store i32 1, i32* %out_args_total, align 8, !dbg !108
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !108
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !108
  %cache_const3590 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549760 to %"struct.rubinius::CallSite"**), align 512, !dbg !108
  %execute_pos3591 = getelementptr %"struct.rubinius::CallSite"* %cache_const3590, i64 0, i32 2, !dbg !108
  %execute3592 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3591, align 8, !dbg !108
  store i32 169, i32* %8, align 4, !dbg !108
  %call_site_execute3593 = call %"struct.rubinius::Object"* %execute3592(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3590, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !108
  %null_check3595 = icmp eq %"struct.rubinius::Object"* %call_site_execute3593, null, !dbg !108
  br i1 %null_check3595, label %bail_out, label %continue3539, !dbg !108

continue3602:                                     ; preds = %visit_push_ivar_fallback3601, %correct_class3607, %run_barrier3620, %reference_obj3618
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !111
  %self3638 = load %"struct.rubinius::Object"** %14, align 8, !dbg !111
  %cast3639 = ptrtoint %"struct.rubinius::Object"* %self3638 to i64, !dbg !111
  %masked3640 = and i64 %cast3639, 3, !dbg !111
  %is_reference3641 = icmp eq i64 %masked3640, 0, !dbg !111
  br i1 %is_reference3641, label %check_class_id3642, label %visit_push_ivar_fallback3635, !dbg !111

check_class_id3606:                               ; preds = %continue3539
  %class_pos3608 = getelementptr %"struct.rubinius::Object"* %self3598, i64 0, i32 0, i32 1, !dbg !108
  %ref_class3609 = load %"struct.rubinius::Class"** %class_pos3608, align 8, !dbg !108
  %class_id_pos3610 = getelementptr %"struct.rubinius::Class"* %ref_class3609, i64 0, i32 4, !dbg !108
  %class_id3611 = load i32* %class_id_pos3610, align 4, !dbg !108
  %check_class_id3612 = icmp eq i32 %class_id3611, 1285, !dbg !108
  br i1 %check_class_id3612, label %correct_class3607, label %visit_push_ivar_fallback3601, !dbg !108

correct_class3607:                                ; preds = %check_class_id3606
  %field_pos3614 = getelementptr %"struct.rubinius::Object"* %self3598, i64 2, i32 0, i32 1, !dbg !108
  %send_result3596.c = bitcast %"struct.rubinius::Object"* %send_result3596 to %"struct.rubinius::Class"*, !dbg !108
  store %"struct.rubinius::Class"* %send_result3596.c, %"struct.rubinius::Class"** %field_pos3614, align 8, !dbg !108
  %cast3615 = ptrtoint %"struct.rubinius::Object"* %send_result3596 to i64, !dbg !108
  %masked3616 = and i64 %cast3615, 3, !dbg !108
  %is_reference3617 = icmp eq i64 %masked3616, 0, !dbg !108
  br i1 %is_reference3617, label %reference_obj3618, label %continue3602, !dbg !108

visit_push_ivar_fallback3601:                     ; preds = %check_class_id3606, %continue3539
  %ivar3631 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3598, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3596), !dbg !108
  %null_check3634 = icmp eq %"struct.rubinius::Object"* %ivar3631, null, !dbg !108
  br i1 %null_check3634, label %bail_out, label %continue3602, !dbg !108

reference_obj3618:                                ; preds = %correct_class3607
  %object_memory_mark3622 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !108
  %word_pos3623 = getelementptr %"struct.rubinius::Object"* %self3598, i64 0, i32 0, i32 0, i32 0, !dbg !108
  %flags3624 = load i64* %word_pos3623, align 8, !dbg !108
  %mark_mask3625 = and i64 %flags3624, 3670016, !dbg !108
  %scan_mark3626 = add i32 %object_memory_mark3622, 1, !dbg !108
  %234 = zext i32 %scan_mark3626 to i64, !dbg !108
  %lshr3627 = shl nuw nsw i64 %234, 19, !dbg !108
  %is_scanned3628 = icmp ne i64 %mark_mask3625, %lshr3627, !dbg !108
  %zone_mask3629 = and i64 %flags3624, 768, !dbg !108
  %is_young3630 = icmp eq i64 %zone_mask3629, 512, !dbg !108
  %or.cond5116 = and i1 %is_scanned3628, %is_young3630, !dbg !108
  br i1 %or.cond5116, label %continue3602, label %run_barrier3620, !dbg !108

run_barrier3620:                                  ; preds = %reference_obj3618
  %235 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3598, %"struct.rubinius::Object"* %send_result3596), !dbg !108
  br label %continue3602, !dbg !108

continue3636:                                     ; preds = %visit_push_ivar_fallback3635, %correct_class3643
  %storemerge = phi %"struct.rubinius::Object"* [ %"select ivar3653", %correct_class3643 ], [ %ivar3656, %visit_push_ivar_fallback3635 ]
  store %"struct.rubinius::Object"* %storemerge, %"struct.rubinius::Object"** %stack, align 8, !dbg !111
  %local3659 = load %"struct.rubinius::Object"** %110, align 8, !dbg !111, !rbx-classid !112
  store %"struct.rubinius::Object"* %local3659, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !111
  %local3662 = load %"struct.rubinius::Object"** %199, align 8, !dbg !111, !rbx-classid !110
  store %"struct.rubinius::Object"* %local3662, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !111
  %cast3669 = ptrtoint %"struct.rubinius::Object"* %local3659 to i64, !dbg !111
  %masked3670 = and i64 %cast3669, 3, !dbg !111
  %is_reference3671 = icmp eq i64 %masked3670, 0, !dbg !111
  br i1 %is_reference3671, label %check_class_id3672, label %class_fallback3664, !dbg !111

check_class_id3642:                               ; preds = %continue3602
  %class_pos3644 = getelementptr %"struct.rubinius::Object"* %self3638, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3645 = load %"struct.rubinius::Class"** %class_pos3644, align 8, !dbg !111
  %class_id_pos3646 = getelementptr %"struct.rubinius::Class"* %ref_class3645, i64 0, i32 4, !dbg !111
  %class_id3647 = load i32* %class_id_pos3646, align 4, !dbg !111
  %check_class_id3648 = icmp eq i32 %class_id3647, 1285, !dbg !111
  br i1 %check_class_id3648, label %correct_class3643, label %visit_push_ivar_fallback3635, !dbg !111

correct_class3643:                                ; preds = %check_class_id3642
  %236 = getelementptr %"struct.rubinius::Object"* %self3638, i64 2, i32 0, i32 2, !dbg !111
  %field3651 = load %"struct.rubinius::Object"** %236, align 8, !dbg !111
  %prune_undef3652 = icmp eq %"struct.rubinius::Object"* %field3651, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !111
  %"select ivar3653" = select i1 %prune_undef3652, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3651, !dbg !111
  br label %continue3636, !dbg !111

visit_push_ivar_fallback3635:                     ; preds = %check_class_id3642, %continue3602
  %ivar3656 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3638, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !111
  br label %continue3636, !dbg !111

continue3666:                                     ; preds = %class_fallback3664.continue3666_crit_edge, %continue3699
  %stack_load3729 = phi %"struct.rubinius::Object"* [ %storemerge, %continue3699 ], [ %stack_load3729.pre, %class_fallback3664.continue3666_crit_edge ]
  %send_result3723 = phi %"struct.rubinius::Object"* [ %242, %continue3699 ], [ %call_site_execute3720, %class_fallback3664.continue3666_crit_edge ], !dbg !111
  store %"struct.rubinius::Object"* %send_result3723, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !111
  %cast3730 = ptrtoint %"struct.rubinius::Object"* %stack_load3729 to i64, !dbg !111
  %masked3731 = and i64 %cast3730, 3, !dbg !111
  %is_reference3732 = icmp eq i64 %masked3731, 0, !dbg !111
  br i1 %is_reference3732, label %check_class_id3733, label %class_fallback3725, !dbg !111

check_class_id3672:                               ; preds = %continue3636
  %class_pos3675 = getelementptr %"struct.rubinius::Object"* %local3659, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3676 = load %"struct.rubinius::Class"** %class_pos3675, align 8, !dbg !111
  %class_id_pos3677 = getelementptr %"struct.rubinius::Class"* %ref_class3676, i64 0, i32 4, !dbg !111
  %class_id3678 = load i32* %class_id_pos3677, align 4, !dbg !111
  %check_class_id3679 = icmp eq i32 %class_id3678, 77, !dbg !111
  br i1 %check_class_id3679, label %correct_class3673, label %class_fallback3664, !dbg !111

correct_class3673:                                ; preds = %check_class_id3672
  %serial_id_pos3680 = getelementptr %"struct.rubinius::Class"* %ref_class3676, i64 0, i32 5, !dbg !111
  %serial_id3681 = load i32* %serial_id_pos3680, align 4, !dbg !111
  %check_serial_id3682 = icmp eq i32 %serial_id3681, 224, !dbg !111
  br i1 %check_serial_id3682, label %correct_serial3674, label %serial_fallback3665, !dbg !111

correct_serial3674:                               ; preds = %correct_class3673
  %cast3686 = ptrtoint %"struct.rubinius::Object"* %local3662 to i64, !dbg !111
  %masked3687 = and i64 %cast3686, 3, !dbg !111
  %is_reference3688 = icmp eq i64 %masked3687, 0, !dbg !111
  br i1 %is_reference3688, label %check_class_id3689, label %continue3685, !dbg !111

serial_fallback3665:                              ; preds = %correct_class3673
  store i32 181, i32* %8, align 4, !dbg !111
  %237 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 181, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !111
  br label %return_pad, !dbg !111

check_class_id3689:                               ; preds = %correct_serial3674
  %class_pos3691 = getelementptr %"struct.rubinius::Object"* %local3662, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3692 = load %"struct.rubinius::Class"** %class_pos3691, align 8, !dbg !111
  %class_id_pos3693 = getelementptr %"struct.rubinius::Class"* %ref_class3692, i64 0, i32 4, !dbg !111
  %class_id3694 = load i32* %class_id_pos3693, align 4, !dbg !111
  %check_class_id3695 = icmp eq i32 %class_id3694, 77, !dbg !111
  br i1 %check_class_id3695, label %correct_class3690, label %continue3685, !dbg !111

correct_class3690:                                ; preds = %check_class_id3689
  %arg.value_pos3697 = getelementptr %"struct.rubinius::Object"* %local3662, i64 1, !dbg !111
  %238 = bitcast %"struct.rubinius::Object"* %arg.value_pos3697 to double*, !dbg !111
  %farg3698 = load double* %238, align 8, !dbg !111
  br label %continue3699, !dbg !111

continue3685:                                     ; preds = %check_class_id3689, %correct_serial3674
  %masked3701 = and i64 %cast3686, 1, !dbg !111
  %is_fixnum3702 = icmp eq i64 %masked3701, 0, !dbg !111
  br i1 %is_fixnum3702, label %class_fallback3664, label %guarded_body3703, !dbg !111

guarded_body3703:                                 ; preds = %continue3685
  %ashr3705 = ashr i64 %cast3686, 1, !dbg !111
  %239 = sitofp i64 %ashr3705 to double, !dbg !111
  br label %continue3699, !dbg !111

continue3699:                                     ; preds = %guarded_body3703, %correct_class3690
  %rhs3706 = phi double [ %farg3698, %correct_class3690 ], [ %239, %guarded_body3703 ], !dbg !111
  %self.value_pos3710 = getelementptr %"struct.rubinius::Object"* %local3659, i64 1, !dbg !111
  %240 = bitcast %"struct.rubinius::Object"* %self.value_pos3710 to double*, !dbg !111
  %fself3711 = load double* %240, align 8, !dbg !111
  %float.mul3712 = fmul double %rhs3706, %fself3711, !dbg !111
  %result3713 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !111, !rbx-classid !84
  %241 = getelementptr %"struct.rubinius::Float"* %result3713, i64 0, i32 1, !dbg !111
  store double %float.mul3712, double* %241, align 8, !dbg !111
  %242 = getelementptr inbounds %"struct.rubinius::Float"* %result3713, i64 0, i32 0, i32 0, !dbg !111
  br label %continue3666, !dbg !111

class_fallback3664:                               ; preds = %continue3685, %check_class_id3672, %continue3636
  store %"struct.rubinius::Object"* %local3659, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !111
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !111
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !111
  store i32 1, i32* %out_args_total, align 8, !dbg !111
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !111
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !111
  %cache_const3717 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549856 to %"struct.rubinius::CallSite"**), align 32, !dbg !111
  %execute_pos3718 = getelementptr %"struct.rubinius::CallSite"* %cache_const3717, i64 0, i32 2, !dbg !111
  %execute3719 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3718, align 8, !dbg !111
  store i32 181, i32* %8, align 4, !dbg !111
  %call_site_execute3720 = call %"struct.rubinius::Object"* %execute3719(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3717, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !111
  %null_check3722 = icmp eq %"struct.rubinius::Object"* %call_site_execute3720, null, !dbg !111
  br i1 %null_check3722, label %bail_out, label %class_fallback3664.continue3666_crit_edge, !dbg !111

class_fallback3664.continue3666_crit_edge:        ; preds = %class_fallback3664
  %stack_load3729.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !111
  br label %continue3666, !dbg !111

continue3727:                                     ; preds = %class_fallback3725, %continue3760
  %send_result3784 = phi %"struct.rubinius::Object"* [ %248, %continue3760 ], [ %call_site_execute3781, %class_fallback3725 ], !dbg !111
  store %"struct.rubinius::Object"* %send_result3784, %"struct.rubinius::Object"** %stack, align 8, !dbg !111
  %self3786 = load %"struct.rubinius::Object"** %14, align 8, !dbg !111
  %cast3791 = ptrtoint %"struct.rubinius::Object"* %self3786 to i64, !dbg !111
  %masked3792 = and i64 %cast3791, 3, !dbg !111
  %is_reference3793 = icmp eq i64 %masked3792, 0, !dbg !111
  br i1 %is_reference3793, label %check_class_id3794, label %visit_push_ivar_fallback3789, !dbg !111

check_class_id3733:                               ; preds = %continue3666
  %class_pos3736 = getelementptr %"struct.rubinius::Object"* %stack_load3729, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3737 = load %"struct.rubinius::Class"** %class_pos3736, align 8, !dbg !111
  %class_id_pos3738 = getelementptr %"struct.rubinius::Class"* %ref_class3737, i64 0, i32 4, !dbg !111
  %class_id3739 = load i32* %class_id_pos3738, align 4, !dbg !111
  %check_class_id3740 = icmp eq i32 %class_id3739, 77, !dbg !111
  br i1 %check_class_id3740, label %correct_class3734, label %class_fallback3725, !dbg !111

correct_class3734:                                ; preds = %check_class_id3733
  %serial_id_pos3741 = getelementptr %"struct.rubinius::Class"* %ref_class3737, i64 0, i32 5, !dbg !111
  %serial_id3742 = load i32* %serial_id_pos3741, align 4, !dbg !111
  %check_serial_id3743 = icmp eq i32 %serial_id3742, 224, !dbg !111
  br i1 %check_serial_id3743, label %correct_serial3735, label %serial_fallback3726, !dbg !111

correct_serial3735:                               ; preds = %correct_class3734
  %cast3747 = ptrtoint %"struct.rubinius::Object"* %send_result3723 to i64, !dbg !111
  %masked3748 = and i64 %cast3747, 3, !dbg !111
  %is_reference3749 = icmp eq i64 %masked3748, 0, !dbg !111
  br i1 %is_reference3749, label %check_class_id3750, label %continue3746, !dbg !111

serial_fallback3726:                              ; preds = %correct_class3734
  store i32 184, i32* %8, align 4, !dbg !111
  %243 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 184, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !111
  br label %return_pad, !dbg !111

check_class_id3750:                               ; preds = %correct_serial3735
  %class_pos3752 = getelementptr %"struct.rubinius::Object"* %send_result3723, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3753 = load %"struct.rubinius::Class"** %class_pos3752, align 8, !dbg !111
  %class_id_pos3754 = getelementptr %"struct.rubinius::Class"* %ref_class3753, i64 0, i32 4, !dbg !111
  %class_id3755 = load i32* %class_id_pos3754, align 4, !dbg !111
  %check_class_id3756 = icmp eq i32 %class_id3755, 77, !dbg !111
  br i1 %check_class_id3756, label %correct_class3751, label %continue3746, !dbg !111

correct_class3751:                                ; preds = %check_class_id3750
  %arg.value_pos3758 = getelementptr %"struct.rubinius::Object"* %send_result3723, i64 1, !dbg !111
  %244 = bitcast %"struct.rubinius::Object"* %arg.value_pos3758 to double*, !dbg !111
  %farg3759 = load double* %244, align 8, !dbg !111
  br label %continue3760, !dbg !111

continue3746:                                     ; preds = %check_class_id3750, %correct_serial3735
  %masked3762 = and i64 %cast3747, 1, !dbg !111
  %is_fixnum3763 = icmp eq i64 %masked3762, 0, !dbg !111
  br i1 %is_fixnum3763, label %class_fallback3725, label %guarded_body3764, !dbg !111

guarded_body3764:                                 ; preds = %continue3746
  %ashr3766 = ashr i64 %cast3747, 1, !dbg !111
  %245 = sitofp i64 %ashr3766 to double, !dbg !111
  br label %continue3760, !dbg !111

continue3760:                                     ; preds = %guarded_body3764, %correct_class3751
  %rhs3767 = phi double [ %farg3759, %correct_class3751 ], [ %245, %guarded_body3764 ], !dbg !111
  %self.value_pos3771 = getelementptr %"struct.rubinius::Object"* %stack_load3729, i64 1, !dbg !111
  %246 = bitcast %"struct.rubinius::Object"* %self.value_pos3771 to double*, !dbg !111
  %fself3772 = load double* %246, align 8, !dbg !111
  %float.sub3773 = fsub double %fself3772, %rhs3767, !dbg !111
  %result3774 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !111, !rbx-classid !84
  %247 = getelementptr %"struct.rubinius::Float"* %result3774, i64 0, i32 1, !dbg !111
  store double %float.sub3773, double* %247, align 8, !dbg !111
  %248 = getelementptr inbounds %"struct.rubinius::Float"* %result3774, i64 0, i32 0, i32 0, !dbg !111
  br label %continue3727, !dbg !111

class_fallback3725:                               ; preds = %continue3746, %check_class_id3733, %continue3666
  store %"struct.rubinius::Object"* %stack_load3729, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !111
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !111
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !111
  store i32 1, i32* %out_args_total, align 8, !dbg !111
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !111
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !111
  %cache_const3778 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549880 to %"struct.rubinius::CallSite"**), align 8, !dbg !111
  %execute_pos3779 = getelementptr %"struct.rubinius::CallSite"* %cache_const3778, i64 0, i32 2, !dbg !111
  %execute3780 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3779, align 8, !dbg !111
  store i32 184, i32* %8, align 4, !dbg !111
  %call_site_execute3781 = call %"struct.rubinius::Object"* %execute3780(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3778, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !111
  %null_check3783 = icmp eq %"struct.rubinius::Object"* %call_site_execute3781, null, !dbg !111
  br i1 %null_check3783, label %bail_out, label %continue3727, !dbg !111

continue3790:                                     ; preds = %visit_push_ivar_fallback3789, %correct_class3795, %run_barrier3808, %reference_obj3806
  %local3824 = load %"struct.rubinius::Object"** %89, align 8, !dbg !113, !rbx-classid !85
  store %"struct.rubinius::Object"* %local3824, %"struct.rubinius::Object"** %stack, align 8, !dbg !113
  store %"struct.rubinius::Object"* %local3824, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !113
  %field_pos38375134 = getelementptr %"struct.rubinius::Object"* %local3824, i64 2, !dbg !113
  %field_pos3837 = bitcast %"struct.rubinius::Object"* %field_pos38375134 to %"struct.rubinius::Object"**, !dbg !113
  %field3838 = load %"struct.rubinius::Object"** %field_pos3837, align 8, !dbg !113
  %prune_undef3839 = icmp eq %"struct.rubinius::Object"* %field3838, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !113
  %"select ivar3840" = select i1 %prune_undef3839, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3838, !dbg !113
  store %"struct.rubinius::Object"* %"select ivar3840", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !113
  %local3843 = load %"struct.rubinius::Object"** %92, align 8, !dbg !113, !rbx-classid !107
  store %"struct.rubinius::Object"* %local3843, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !113
  %local3846 = load %"struct.rubinius::Object"** %198, align 8, !dbg !113, !rbx-classid !114
  store %"struct.rubinius::Object"* %local3846, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !113
  %cast3853 = ptrtoint %"struct.rubinius::Object"* %local3843 to i64, !dbg !113
  %masked3854 = and i64 %cast3853, 3, !dbg !113
  %is_reference3855 = icmp eq i64 %masked3854, 0, !dbg !113
  br i1 %is_reference3855, label %check_class_id3856, label %class_fallback3848, !dbg !113

check_class_id3794:                               ; preds = %continue3727
  %class_pos3796 = getelementptr %"struct.rubinius::Object"* %self3786, i64 0, i32 0, i32 1, !dbg !111
  %ref_class3797 = load %"struct.rubinius::Class"** %class_pos3796, align 8, !dbg !111
  %class_id_pos3798 = getelementptr %"struct.rubinius::Class"* %ref_class3797, i64 0, i32 4, !dbg !111
  %class_id3799 = load i32* %class_id_pos3798, align 4, !dbg !111
  %check_class_id3800 = icmp eq i32 %class_id3799, 1285, !dbg !111
  br i1 %check_class_id3800, label %correct_class3795, label %visit_push_ivar_fallback3789, !dbg !111

correct_class3795:                                ; preds = %check_class_id3794
  %249 = getelementptr %"struct.rubinius::Object"* %self3786, i64 2, i32 0, i32 2, !dbg !111
  store %"struct.rubinius::Object"* %send_result3784, %"struct.rubinius::Object"** %249, align 8, !dbg !111
  %cast3803 = ptrtoint %"struct.rubinius::Object"* %send_result3784 to i64, !dbg !111
  %masked3804 = and i64 %cast3803, 3, !dbg !111
  %is_reference3805 = icmp eq i64 %masked3804, 0, !dbg !111
  br i1 %is_reference3805, label %reference_obj3806, label %continue3790, !dbg !111

visit_push_ivar_fallback3789:                     ; preds = %check_class_id3794, %continue3727
  %ivar3819 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self3786, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3784), !dbg !111
  %null_check3822 = icmp eq %"struct.rubinius::Object"* %ivar3819, null, !dbg !111
  br i1 %null_check3822, label %bail_out, label %continue3790, !dbg !111

reference_obj3806:                                ; preds = %correct_class3795
  %object_memory_mark3810 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !111
  %word_pos3811 = getelementptr %"struct.rubinius::Object"* %self3786, i64 0, i32 0, i32 0, i32 0, !dbg !111
  %flags3812 = load i64* %word_pos3811, align 8, !dbg !111
  %mark_mask3813 = and i64 %flags3812, 3670016, !dbg !111
  %scan_mark3814 = add i32 %object_memory_mark3810, 1, !dbg !111
  %250 = zext i32 %scan_mark3814 to i64, !dbg !111
  %lshr3815 = shl nuw nsw i64 %250, 19, !dbg !111
  %is_scanned3816 = icmp ne i64 %mark_mask3813, %lshr3815, !dbg !111
  %zone_mask3817 = and i64 %flags3812, 768, !dbg !111
  %is_young3818 = icmp eq i64 %zone_mask3817, 512, !dbg !111
  %or.cond5117 = and i1 %is_scanned3816, %is_young3818, !dbg !111
  br i1 %or.cond5117, label %continue3790, label %run_barrier3808, !dbg !111

run_barrier3808:                                  ; preds = %reference_obj3806
  %251 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3786, %"struct.rubinius::Object"* %send_result3784), !dbg !111
  br label %continue3790, !dbg !111

continue3850:                                     ; preds = %class_fallback3848.continue3850_crit_edge, %continue3883
  %stack_load3913 = phi %"struct.rubinius::Object"* [ %"select ivar3840", %continue3883 ], [ %stack_load3913.pre, %class_fallback3848.continue3850_crit_edge ]
  %send_result3907 = phi %"struct.rubinius::Object"* [ %257, %continue3883 ], [ %call_site_execute3904, %class_fallback3848.continue3850_crit_edge ], !dbg !113
  store %"struct.rubinius::Object"* %send_result3907, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !113
  %cast3914 = ptrtoint %"struct.rubinius::Object"* %stack_load3913 to i64, !dbg !113
  %masked3915 = and i64 %cast3914, 3, !dbg !113
  %is_reference3916 = icmp eq i64 %masked3915, 0, !dbg !113
  br i1 %is_reference3916, label %check_class_id3917, label %class_fallback3909, !dbg !113

check_class_id3856:                               ; preds = %continue3790
  %class_pos3859 = getelementptr %"struct.rubinius::Object"* %local3843, i64 0, i32 0, i32 1, !dbg !113
  %ref_class3860 = load %"struct.rubinius::Class"** %class_pos3859, align 8, !dbg !113
  %class_id_pos3861 = getelementptr %"struct.rubinius::Class"* %ref_class3860, i64 0, i32 4, !dbg !113
  %class_id3862 = load i32* %class_id_pos3861, align 4, !dbg !113
  %check_class_id3863 = icmp eq i32 %class_id3862, 77, !dbg !113
  br i1 %check_class_id3863, label %correct_class3857, label %class_fallback3848, !dbg !113

correct_class3857:                                ; preds = %check_class_id3856
  %serial_id_pos3864 = getelementptr %"struct.rubinius::Class"* %ref_class3860, i64 0, i32 5, !dbg !113
  %serial_id3865 = load i32* %serial_id_pos3864, align 4, !dbg !113
  %check_serial_id3866 = icmp eq i32 %serial_id3865, 224, !dbg !113
  br i1 %check_serial_id3866, label %correct_serial3858, label %serial_fallback3849, !dbg !113

correct_serial3858:                               ; preds = %correct_class3857
  %cast3870 = ptrtoint %"struct.rubinius::Object"* %local3846 to i64, !dbg !113
  %masked3871 = and i64 %cast3870, 3, !dbg !113
  %is_reference3872 = icmp eq i64 %masked3871, 0, !dbg !113
  br i1 %is_reference3872, label %check_class_id3873, label %continue3869, !dbg !113

serial_fallback3849:                              ; preds = %correct_class3857
  store i32 200, i32* %8, align 4, !dbg !113
  %252 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 200, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !113
  br label %return_pad, !dbg !113

check_class_id3873:                               ; preds = %correct_serial3858
  %class_pos3875 = getelementptr %"struct.rubinius::Object"* %local3846, i64 0, i32 0, i32 1, !dbg !113
  %ref_class3876 = load %"struct.rubinius::Class"** %class_pos3875, align 8, !dbg !113
  %class_id_pos3877 = getelementptr %"struct.rubinius::Class"* %ref_class3876, i64 0, i32 4, !dbg !113
  %class_id3878 = load i32* %class_id_pos3877, align 4, !dbg !113
  %check_class_id3879 = icmp eq i32 %class_id3878, 77, !dbg !113
  br i1 %check_class_id3879, label %correct_class3874, label %continue3869, !dbg !113

correct_class3874:                                ; preds = %check_class_id3873
  %arg.value_pos3881 = getelementptr %"struct.rubinius::Object"* %local3846, i64 1, !dbg !113
  %253 = bitcast %"struct.rubinius::Object"* %arg.value_pos3881 to double*, !dbg !113
  %farg3882 = load double* %253, align 8, !dbg !113
  br label %continue3883, !dbg !113

continue3869:                                     ; preds = %check_class_id3873, %correct_serial3858
  %masked3885 = and i64 %cast3870, 1, !dbg !113
  %is_fixnum3886 = icmp eq i64 %masked3885, 0, !dbg !113
  br i1 %is_fixnum3886, label %class_fallback3848, label %guarded_body3887, !dbg !113

guarded_body3887:                                 ; preds = %continue3869
  %ashr3889 = ashr i64 %cast3870, 1, !dbg !113
  %254 = sitofp i64 %ashr3889 to double, !dbg !113
  br label %continue3883, !dbg !113

continue3883:                                     ; preds = %guarded_body3887, %correct_class3874
  %rhs3890 = phi double [ %farg3882, %correct_class3874 ], [ %254, %guarded_body3887 ], !dbg !113
  %self.value_pos3894 = getelementptr %"struct.rubinius::Object"* %local3843, i64 1, !dbg !113
  %255 = bitcast %"struct.rubinius::Object"* %self.value_pos3894 to double*, !dbg !113
  %fself3895 = load double* %255, align 8, !dbg !113
  %float.mul3896 = fmul double %rhs3890, %fself3895, !dbg !113
  %result3897 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !113, !rbx-classid !84
  %256 = getelementptr %"struct.rubinius::Float"* %result3897, i64 0, i32 1, !dbg !113
  store double %float.mul3896, double* %256, align 8, !dbg !113
  %257 = getelementptr inbounds %"struct.rubinius::Float"* %result3897, i64 0, i32 0, i32 0, !dbg !113
  br label %continue3850, !dbg !113

class_fallback3848:                               ; preds = %continue3869, %check_class_id3856, %continue3790
  store %"struct.rubinius::Object"* %local3843, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !113
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !113
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !113
  store i32 1, i32* %out_args_total, align 8, !dbg !113
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !113
  store %"struct.rubinius::Object"** %stack_pos2176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !113
  %cache_const3901 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550008 to %"struct.rubinius::CallSite"**), align 8, !dbg !113
  %execute_pos3902 = getelementptr %"struct.rubinius::CallSite"* %cache_const3901, i64 0, i32 2, !dbg !113
  %execute3903 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3902, align 8, !dbg !113
  store i32 200, i32* %8, align 4, !dbg !113
  %call_site_execute3904 = call %"struct.rubinius::Object"* %execute3903(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3901, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !113
  %null_check3906 = icmp eq %"struct.rubinius::Object"* %call_site_execute3904, null, !dbg !113
  br i1 %null_check3906, label %bail_out, label %class_fallback3848.continue3850_crit_edge, !dbg !113

class_fallback3848.continue3850_crit_edge:        ; preds = %class_fallback3848
  %stack_load3913.pre = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !113
  br label %continue3850, !dbg !113

continue3911:                                     ; preds = %class_fallback3909, %continue3944
  %stack_load4002 = phi %"struct.rubinius::Object"* [ %263, %continue3944 ], [ %call_site_execute3965, %class_fallback3909 ], !dbg !113
  store %"struct.rubinius::Object"* %stack_load4002, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !113
  %stack_load3979 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !113, !rbx-classid !85
  store %"struct.rubinius::Object"* %stack_load3979, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !113
  store %"struct.rubinius::Object"* %stack_load4002, %"struct.rubinius::Object"** %stack, align 8, !dbg !113
  %cast3987 = ptrtoint %"struct.rubinius::Object"* %stack_load3979 to i64, !dbg !113
  %masked3988 = and i64 %cast3987, 3, !dbg !113
  %is_reference3989 = icmp eq i64 %masked3988, 0, !dbg !113
  br i1 %is_reference3989, label %check_class_id3990, label %class_fallback3982, !dbg !113

check_class_id3917:                               ; preds = %continue3850
  %class_pos3920 = getelementptr %"struct.rubinius::Object"* %stack_load3913, i64 0, i32 0, i32 1, !dbg !113
  %ref_class3921 = load %"struct.rubinius::Class"** %class_pos3920, align 8, !dbg !113
  %class_id_pos3922 = getelementptr %"struct.rubinius::Class"* %ref_class3921, i64 0, i32 4, !dbg !113
  %class_id3923 = load i32* %class_id_pos3922, align 4, !dbg !113
  %check_class_id3924 = icmp eq i32 %class_id3923, 77, !dbg !113
  br i1 %check_class_id3924, label %correct_class3918, label %class_fallback3909, !dbg !113

correct_class3918:                                ; preds = %check_class_id3917
  %serial_id_pos3925 = getelementptr %"struct.rubinius::Class"* %ref_class3921, i64 0, i32 5, !dbg !113
  %serial_id3926 = load i32* %serial_id_pos3925, align 4, !dbg !113
  %check_serial_id3927 = icmp eq i32 %serial_id3926, 224, !dbg !113
  br i1 %check_serial_id3927, label %correct_serial3919, label %serial_fallback3910, !dbg !113

correct_serial3919:                               ; preds = %correct_class3918
  %cast3931 = ptrtoint %"struct.rubinius::Object"* %send_result3907 to i64, !dbg !113
  %masked3932 = and i64 %cast3931, 3, !dbg !113
  %is_reference3933 = icmp eq i64 %masked3932, 0, !dbg !113
  br i1 %is_reference3933, label %check_class_id3934, label %continue3930, !dbg !113

serial_fallback3910:                              ; preds = %correct_class3918
  store i32 203, i32* %8, align 4, !dbg !113
  %258 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 203, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !113
  br label %return_pad, !dbg !113

check_class_id3934:                               ; preds = %correct_serial3919
  %class_pos3936 = getelementptr %"struct.rubinius::Object"* %send_result3907, i64 0, i32 0, i32 1, !dbg !113
  %ref_class3937 = load %"struct.rubinius::Class"** %class_pos3936, align 8, !dbg !113
  %class_id_pos3938 = getelementptr %"struct.rubinius::Class"* %ref_class3937, i64 0, i32 4, !dbg !113
  %class_id3939 = load i32* %class_id_pos3938, align 4, !dbg !113
  %check_class_id3940 = icmp eq i32 %class_id3939, 77, !dbg !113
  br i1 %check_class_id3940, label %correct_class3935, label %continue3930, !dbg !113

correct_class3935:                                ; preds = %check_class_id3934
  %arg.value_pos3942 = getelementptr %"struct.rubinius::Object"* %send_result3907, i64 1, !dbg !113
  %259 = bitcast %"struct.rubinius::Object"* %arg.value_pos3942 to double*, !dbg !113
  %farg3943 = load double* %259, align 8, !dbg !113
  br label %continue3944, !dbg !113

continue3930:                                     ; preds = %check_class_id3934, %correct_serial3919
  %masked3946 = and i64 %cast3931, 1, !dbg !113
  %is_fixnum3947 = icmp eq i64 %masked3946, 0, !dbg !113
  br i1 %is_fixnum3947, label %class_fallback3909, label %guarded_body3948, !dbg !113

guarded_body3948:                                 ; preds = %continue3930
  %ashr3950 = ashr i64 %cast3931, 1, !dbg !113
  %260 = sitofp i64 %ashr3950 to double, !dbg !113
  br label %continue3944, !dbg !113

continue3944:                                     ; preds = %guarded_body3948, %correct_class3935
  %rhs3951 = phi double [ %farg3943, %correct_class3935 ], [ %260, %guarded_body3948 ], !dbg !113
  %self.value_pos3955 = getelementptr %"struct.rubinius::Object"* %stack_load3913, i64 1, !dbg !113
  %261 = bitcast %"struct.rubinius::Object"* %self.value_pos3955 to double*, !dbg !113
  %fself3956 = load double* %261, align 8, !dbg !113
  %float.add3957 = fadd double %rhs3951, %fself3956, !dbg !113
  %result3958 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !113, !rbx-classid !84
  %262 = getelementptr %"struct.rubinius::Float"* %result3958, i64 0, i32 1, !dbg !113
  store double %float.add3957, double* %262, align 8, !dbg !113
  %263 = getelementptr inbounds %"struct.rubinius::Float"* %result3958, i64 0, i32 0, i32 0, !dbg !113
  br label %continue3911, !dbg !113

class_fallback3909:                               ; preds = %continue3930, %check_class_id3917, %continue3850
  store %"struct.rubinius::Object"* %stack_load3913, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !113
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !113
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !113
  store i32 1, i32* %out_args_total, align 8, !dbg !113
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !113
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !113
  %cache_const3962 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550032 to %"struct.rubinius::CallSite"**), align 16, !dbg !113
  %execute_pos3963 = getelementptr %"struct.rubinius::CallSite"* %cache_const3962, i64 0, i32 2, !dbg !113
  %execute3964 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3963, align 8, !dbg !113
  store i32 203, i32* %8, align 4, !dbg !113
  %call_site_execute3965 = call %"struct.rubinius::Object"* %execute3964(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3962, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !113
  %null_check3967 = icmp eq %"struct.rubinius::Object"* %call_site_execute3965, null, !dbg !113
  br i1 %null_check3967, label %bail_out, label %continue3911, !dbg !113

check_class_id3990:                               ; preds = %continue3911
  %class_pos3993 = getelementptr %"struct.rubinius::Object"* %stack_load3979, i64 0, i32 0, i32 1, !dbg !113
  %ref_class3994 = load %"struct.rubinius::Class"** %class_pos3993, align 8, !dbg !113
  %class_id_pos3995 = getelementptr %"struct.rubinius::Class"* %ref_class3994, i64 0, i32 4, !dbg !113
  %class_id3996 = load i32* %class_id_pos3995, align 4, !dbg !113
  %check_class_id3997 = icmp eq i32 %class_id3996, 1285, !dbg !113
  br i1 %check_class_id3997, label %correct_class3991, label %class_fallback3982, !dbg !113

correct_class3991:                                ; preds = %check_class_id3990
  %serial_id_pos3998 = getelementptr %"struct.rubinius::Class"* %ref_class3994, i64 0, i32 5, !dbg !113
  %serial_id3999 = load i32* %serial_id_pos3998, align 4, !dbg !113
  %check_serial_id4000 = icmp eq i32 %serial_id3999, 2, !dbg !113
  br i1 %check_serial_id4000, label %correct_serial3992, label %serial_fallback3983, !dbg !113

class_fallback3982:                               ; preds = %check_class_id3990, %continue3911
  store i32 209, i32* %8, align 4, !dbg !113
  %264 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !113
  br label %return_pad, !dbg !113

correct_serial3992:                               ; preds = %correct_class3991
  %265 = getelementptr inbounds %"struct.rubinius::Object"* %stack_load3979, i64 2, i32 0, i32 0, i32 0, !dbg !113
  %stack_load4002.c = ptrtoint %"struct.rubinius::Object"* %stack_load4002 to i64, !dbg !113
  store i64 %stack_load4002.c, i64* %265, align 8, !dbg !113
  %masked4008 = and i64 %stack_load4002.c, 3, !dbg !113
  %is_reference4009 = icmp eq i64 %masked4008, 0, !dbg !113
  br i1 %is_reference4009, label %reference_obj4010, label %done4013, !dbg !113

serial_fallback3983:                              ; preds = %correct_class3991
  store i32 209, i32* %8, align 4, !dbg !113
  %266 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !113
  br label %return_pad, !dbg !113

reference_obj4010:                                ; preds = %correct_serial3992
  %object_memory_mark4014 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !113
  %word_pos4015 = getelementptr %"struct.rubinius::Object"* %stack_load3979, i64 0, i32 0, i32 0, i32 0, !dbg !113
  %flags4016 = load i64* %word_pos4015, align 8, !dbg !113
  %mark_mask4017 = and i64 %flags4016, 3670016, !dbg !113
  %scan_mark4018 = add i32 %object_memory_mark4014, 1, !dbg !113
  %267 = zext i32 %scan_mark4018 to i64, !dbg !113
  %lshr4019 = shl nuw nsw i64 %267, 19, !dbg !113
  %is_scanned4020 = icmp ne i64 %mark_mask4017, %lshr4019, !dbg !113
  %zone_mask4021 = and i64 %flags4016, 768, !dbg !113
  %is_young4022 = icmp eq i64 %zone_mask4021, 512, !dbg !113
  %or.cond5118 = and i1 %is_scanned4020, %is_young4022, !dbg !113
  br i1 %or.cond5118, label %done4013, label %run_barrier4012, !dbg !113

run_barrier4012:                                  ; preds = %reference_obj4010
  %268 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load3979, %"struct.rubinius::Object"* %stack_load4002), !dbg !113
  br label %done4013, !dbg !113

done4013:                                         ; preds = %reference_obj4010, %run_barrier4012, %correct_serial3992
  %local4025 = load %"struct.rubinius::Object"** %89, align 8, !dbg !115, !rbx-classid !85
  store %"struct.rubinius::Object"* %local4025, %"struct.rubinius::Object"** %stack, align 8, !dbg !115
  %field_pos4038 = getelementptr %"struct.rubinius::Object"* %local4025, i64 2, i32 0, i32 1, !dbg !115
  %269 = load %"struct.rubinius::Class"** %field_pos4038, align 8, !dbg !115
  %field4039 = getelementptr inbounds %"struct.rubinius::Class"* %269, i64 0, i32 0, i32 0, !dbg !115
  %prune_undef4040 = icmp eq %"struct.rubinius::Object"* %field4039, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !115
  %"select ivar4041" = select i1 %prune_undef4040, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4039, !dbg !115
  store %"struct.rubinius::Object"* %"select ivar4041", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !115
  %local4044 = load %"struct.rubinius::Object"** %101, align 8, !dbg !115, !rbx-classid !109
  store %"struct.rubinius::Object"* %local4044, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !115
  %local4047 = load %"struct.rubinius::Object"** %198, align 8, !dbg !115, !rbx-classid !114
  store %"struct.rubinius::Object"* %local4047, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !115
  %cast4054 = ptrtoint %"struct.rubinius::Object"* %local4044 to i64, !dbg !115
  %masked4055 = and i64 %cast4054, 3, !dbg !115
  %is_reference4056 = icmp eq i64 %masked4055, 0, !dbg !115
  br i1 %is_reference4056, label %check_class_id4057, label %class_fallback4049, !dbg !115

continue4051:                                     ; preds = %class_fallback4049.continue4051_crit_edge, %continue4084
  %stack_load4114 = phi %"struct.rubinius::Object"* [ %"select ivar4041", %continue4084 ], [ %stack_load4114.pre, %class_fallback4049.continue4051_crit_edge ]
  %send_result4108 = phi %"struct.rubinius::Object"* [ %275, %continue4084 ], [ %call_site_execute4105, %class_fallback4049.continue4051_crit_edge ], !dbg !115
  store %"struct.rubinius::Object"* %send_result4108, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !115
  %cast4115 = ptrtoint %"struct.rubinius::Object"* %stack_load4114 to i64, !dbg !115
  %masked4116 = and i64 %cast4115, 3, !dbg !115
  %is_reference4117 = icmp eq i64 %masked4116, 0, !dbg !115
  br i1 %is_reference4117, label %check_class_id4118, label %class_fallback4110, !dbg !115

check_class_id4057:                               ; preds = %done4013
  %class_pos4060 = getelementptr %"struct.rubinius::Object"* %local4044, i64 0, i32 0, i32 1, !dbg !115
  %ref_class4061 = load %"struct.rubinius::Class"** %class_pos4060, align 8, !dbg !115
  %class_id_pos4062 = getelementptr %"struct.rubinius::Class"* %ref_class4061, i64 0, i32 4, !dbg !115
  %class_id4063 = load i32* %class_id_pos4062, align 4, !dbg !115
  %check_class_id4064 = icmp eq i32 %class_id4063, 77, !dbg !115
  br i1 %check_class_id4064, label %correct_class4058, label %class_fallback4049, !dbg !115

correct_class4058:                                ; preds = %check_class_id4057
  %serial_id_pos4065 = getelementptr %"struct.rubinius::Class"* %ref_class4061, i64 0, i32 5, !dbg !115
  %serial_id4066 = load i32* %serial_id_pos4065, align 4, !dbg !115
  %check_serial_id4067 = icmp eq i32 %serial_id4066, 224, !dbg !115
  br i1 %check_serial_id4067, label %correct_serial4059, label %serial_fallback4050, !dbg !115

correct_serial4059:                               ; preds = %correct_class4058
  %cast4071 = ptrtoint %"struct.rubinius::Object"* %local4047 to i64, !dbg !115
  %masked4072 = and i64 %cast4071, 3, !dbg !115
  %is_reference4073 = icmp eq i64 %masked4072, 0, !dbg !115
  br i1 %is_reference4073, label %check_class_id4074, label %continue4070, !dbg !115

serial_fallback4050:                              ; preds = %correct_class4058
  store i32 224, i32* %8, align 4, !dbg !115
  %270 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 224, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !115
  br label %return_pad, !dbg !115

check_class_id4074:                               ; preds = %correct_serial4059
  %class_pos4076 = getelementptr %"struct.rubinius::Object"* %local4047, i64 0, i32 0, i32 1, !dbg !115
  %ref_class4077 = load %"struct.rubinius::Class"** %class_pos4076, align 8, !dbg !115
  %class_id_pos4078 = getelementptr %"struct.rubinius::Class"* %ref_class4077, i64 0, i32 4, !dbg !115
  %class_id4079 = load i32* %class_id_pos4078, align 4, !dbg !115
  %check_class_id4080 = icmp eq i32 %class_id4079, 77, !dbg !115
  br i1 %check_class_id4080, label %correct_class4075, label %continue4070, !dbg !115

correct_class4075:                                ; preds = %check_class_id4074
  %arg.value_pos4082 = getelementptr %"struct.rubinius::Object"* %local4047, i64 1, !dbg !115
  %271 = bitcast %"struct.rubinius::Object"* %arg.value_pos4082 to double*, !dbg !115
  %farg4083 = load double* %271, align 8, !dbg !115
  br label %continue4084, !dbg !115

continue4070:                                     ; preds = %check_class_id4074, %correct_serial4059
  %masked4086 = and i64 %cast4071, 1, !dbg !115
  %is_fixnum4087 = icmp eq i64 %masked4086, 0, !dbg !115
  br i1 %is_fixnum4087, label %class_fallback4049, label %guarded_body4088, !dbg !115

guarded_body4088:                                 ; preds = %continue4070
  %ashr4090 = ashr i64 %cast4071, 1, !dbg !115
  %272 = sitofp i64 %ashr4090 to double, !dbg !115
  br label %continue4084, !dbg !115

continue4084:                                     ; preds = %guarded_body4088, %correct_class4075
  %rhs4091 = phi double [ %farg4083, %correct_class4075 ], [ %272, %guarded_body4088 ], !dbg !115
  %self.value_pos4095 = getelementptr %"struct.rubinius::Object"* %local4044, i64 1, !dbg !115
  %273 = bitcast %"struct.rubinius::Object"* %self.value_pos4095 to double*, !dbg !115
  %fself4096 = load double* %273, align 8, !dbg !115
  %float.mul4097 = fmul double %rhs4091, %fself4096, !dbg !115
  %result4098 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !115, !rbx-classid !84
  %274 = getelementptr %"struct.rubinius::Float"* %result4098, i64 0, i32 1, !dbg !115
  store double %float.mul4097, double* %274, align 8, !dbg !115
  %275 = getelementptr inbounds %"struct.rubinius::Float"* %result4098, i64 0, i32 0, i32 0, !dbg !115
  br label %continue4051, !dbg !115

class_fallback4049:                               ; preds = %continue4070, %check_class_id4057, %done4013
  store %"struct.rubinius::Object"* %local4044, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !115
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !115
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !115
  store i32 1, i32* %out_args_total, align 8, !dbg !115
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !115
  store %"struct.rubinius::Object"** %stack_pos2176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !115
  %cache_const4102 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550200 to %"struct.rubinius::CallSite"**), align 8, !dbg !115
  %execute_pos4103 = getelementptr %"struct.rubinius::CallSite"* %cache_const4102, i64 0, i32 2, !dbg !115
  %execute4104 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4103, align 8, !dbg !115
  store i32 224, i32* %8, align 4, !dbg !115
  %call_site_execute4105 = call %"struct.rubinius::Object"* %execute4104(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4102, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !115
  %null_check4107 = icmp eq %"struct.rubinius::Object"* %call_site_execute4105, null, !dbg !115
  br i1 %null_check4107, label %bail_out, label %class_fallback4049.continue4051_crit_edge, !dbg !115

class_fallback4049.continue4051_crit_edge:        ; preds = %class_fallback4049
  %stack_load4114.pre = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !115
  br label %continue4051, !dbg !115

continue4112:                                     ; preds = %class_fallback4110, %continue4145
  %stack_load4203 = phi %"struct.rubinius::Object"* [ %281, %continue4145 ], [ %call_site_execute4166, %class_fallback4110 ], !dbg !115
  store %"struct.rubinius::Object"* %stack_load4203, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !115
  %stack_load4180 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !115, !rbx-classid !85
  store %"struct.rubinius::Object"* %stack_load4180, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !115
  store %"struct.rubinius::Object"* %stack_load4203, %"struct.rubinius::Object"** %stack, align 8, !dbg !115
  %cast4188 = ptrtoint %"struct.rubinius::Object"* %stack_load4180 to i64, !dbg !115
  %masked4189 = and i64 %cast4188, 3, !dbg !115
  %is_reference4190 = icmp eq i64 %masked4189, 0, !dbg !115
  br i1 %is_reference4190, label %check_class_id4191, label %class_fallback4183, !dbg !115

check_class_id4118:                               ; preds = %continue4051
  %class_pos4121 = getelementptr %"struct.rubinius::Object"* %stack_load4114, i64 0, i32 0, i32 1, !dbg !115
  %ref_class4122 = load %"struct.rubinius::Class"** %class_pos4121, align 8, !dbg !115
  %class_id_pos4123 = getelementptr %"struct.rubinius::Class"* %ref_class4122, i64 0, i32 4, !dbg !115
  %class_id4124 = load i32* %class_id_pos4123, align 4, !dbg !115
  %check_class_id4125 = icmp eq i32 %class_id4124, 77, !dbg !115
  br i1 %check_class_id4125, label %correct_class4119, label %class_fallback4110, !dbg !115

correct_class4119:                                ; preds = %check_class_id4118
  %serial_id_pos4126 = getelementptr %"struct.rubinius::Class"* %ref_class4122, i64 0, i32 5, !dbg !115
  %serial_id4127 = load i32* %serial_id_pos4126, align 4, !dbg !115
  %check_serial_id4128 = icmp eq i32 %serial_id4127, 224, !dbg !115
  br i1 %check_serial_id4128, label %correct_serial4120, label %serial_fallback4111, !dbg !115

correct_serial4120:                               ; preds = %correct_class4119
  %cast4132 = ptrtoint %"struct.rubinius::Object"* %send_result4108 to i64, !dbg !115
  %masked4133 = and i64 %cast4132, 3, !dbg !115
  %is_reference4134 = icmp eq i64 %masked4133, 0, !dbg !115
  br i1 %is_reference4134, label %check_class_id4135, label %continue4131, !dbg !115

serial_fallback4111:                              ; preds = %correct_class4119
  store i32 227, i32* %8, align 4, !dbg !115
  %276 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 227, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !115
  br label %return_pad, !dbg !115

check_class_id4135:                               ; preds = %correct_serial4120
  %class_pos4137 = getelementptr %"struct.rubinius::Object"* %send_result4108, i64 0, i32 0, i32 1, !dbg !115
  %ref_class4138 = load %"struct.rubinius::Class"** %class_pos4137, align 8, !dbg !115
  %class_id_pos4139 = getelementptr %"struct.rubinius::Class"* %ref_class4138, i64 0, i32 4, !dbg !115
  %class_id4140 = load i32* %class_id_pos4139, align 4, !dbg !115
  %check_class_id4141 = icmp eq i32 %class_id4140, 77, !dbg !115
  br i1 %check_class_id4141, label %correct_class4136, label %continue4131, !dbg !115

correct_class4136:                                ; preds = %check_class_id4135
  %arg.value_pos4143 = getelementptr %"struct.rubinius::Object"* %send_result4108, i64 1, !dbg !115
  %277 = bitcast %"struct.rubinius::Object"* %arg.value_pos4143 to double*, !dbg !115
  %farg4144 = load double* %277, align 8, !dbg !115
  br label %continue4145, !dbg !115

continue4131:                                     ; preds = %check_class_id4135, %correct_serial4120
  %masked4147 = and i64 %cast4132, 1, !dbg !115
  %is_fixnum4148 = icmp eq i64 %masked4147, 0, !dbg !115
  br i1 %is_fixnum4148, label %class_fallback4110, label %guarded_body4149, !dbg !115

guarded_body4149:                                 ; preds = %continue4131
  %ashr4151 = ashr i64 %cast4132, 1, !dbg !115
  %278 = sitofp i64 %ashr4151 to double, !dbg !115
  br label %continue4145, !dbg !115

continue4145:                                     ; preds = %guarded_body4149, %correct_class4136
  %rhs4152 = phi double [ %farg4144, %correct_class4136 ], [ %278, %guarded_body4149 ], !dbg !115
  %self.value_pos4156 = getelementptr %"struct.rubinius::Object"* %stack_load4114, i64 1, !dbg !115
  %279 = bitcast %"struct.rubinius::Object"* %self.value_pos4156 to double*, !dbg !115
  %fself4157 = load double* %279, align 8, !dbg !115
  %float.add4158 = fadd double %rhs4152, %fself4157, !dbg !115
  %result4159 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !115, !rbx-classid !84
  %280 = getelementptr %"struct.rubinius::Float"* %result4159, i64 0, i32 1, !dbg !115
  store double %float.add4158, double* %280, align 8, !dbg !115
  %281 = getelementptr inbounds %"struct.rubinius::Float"* %result4159, i64 0, i32 0, i32 0, !dbg !115
  br label %continue4112, !dbg !115

class_fallback4110:                               ; preds = %continue4131, %check_class_id4118, %continue4051
  store %"struct.rubinius::Object"* %stack_load4114, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !115
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !115
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !115
  store i32 1, i32* %out_args_total, align 8, !dbg !115
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !115
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !115
  %cache_const4163 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550224 to %"struct.rubinius::CallSite"**), align 16, !dbg !115
  %execute_pos4164 = getelementptr %"struct.rubinius::CallSite"* %cache_const4163, i64 0, i32 2, !dbg !115
  %execute4165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4164, align 8, !dbg !115
  store i32 227, i32* %8, align 4, !dbg !115
  %call_site_execute4166 = call %"struct.rubinius::Object"* %execute4165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !115
  %null_check4168 = icmp eq %"struct.rubinius::Object"* %call_site_execute4166, null, !dbg !115
  br i1 %null_check4168, label %bail_out, label %continue4112, !dbg !115

check_class_id4191:                               ; preds = %continue4112
  %class_pos4194 = getelementptr %"struct.rubinius::Object"* %stack_load4180, i64 0, i32 0, i32 1, !dbg !115
  %ref_class4195 = load %"struct.rubinius::Class"** %class_pos4194, align 8, !dbg !115
  %class_id_pos4196 = getelementptr %"struct.rubinius::Class"* %ref_class4195, i64 0, i32 4, !dbg !115
  %class_id4197 = load i32* %class_id_pos4196, align 4, !dbg !115
  %check_class_id4198 = icmp eq i32 %class_id4197, 1285, !dbg !115
  br i1 %check_class_id4198, label %correct_class4192, label %class_fallback4183, !dbg !115

correct_class4192:                                ; preds = %check_class_id4191
  %serial_id_pos4199 = getelementptr %"struct.rubinius::Class"* %ref_class4195, i64 0, i32 5, !dbg !115
  %serial_id4200 = load i32* %serial_id_pos4199, align 4, !dbg !115
  %check_serial_id4201 = icmp eq i32 %serial_id4200, 2, !dbg !115
  br i1 %check_serial_id4201, label %correct_serial4193, label %serial_fallback4184, !dbg !115

class_fallback4183:                               ; preds = %check_class_id4191, %continue4112
  store i32 233, i32* %8, align 4, !dbg !115
  %282 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !115
  br label %return_pad, !dbg !115

correct_serial4193:                               ; preds = %correct_class4192
  %field_pos4207 = getelementptr %"struct.rubinius::Object"* %stack_load4180, i64 2, i32 0, i32 1, !dbg !115
  %stack_load4203.c = bitcast %"struct.rubinius::Object"* %stack_load4203 to %"struct.rubinius::Class"*, !dbg !115
  store %"struct.rubinius::Class"* %stack_load4203.c, %"struct.rubinius::Class"** %field_pos4207, align 8, !dbg !115
  %cast4208 = ptrtoint %"struct.rubinius::Object"* %stack_load4203 to i64, !dbg !115
  %masked4209 = and i64 %cast4208, 3, !dbg !115
  %is_reference4210 = icmp eq i64 %masked4209, 0, !dbg !115
  br i1 %is_reference4210, label %reference_obj4211, label %done4214, !dbg !115

serial_fallback4184:                              ; preds = %correct_class4192
  store i32 233, i32* %8, align 4, !dbg !115
  %283 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !115
  br label %return_pad, !dbg !115

reference_obj4211:                                ; preds = %correct_serial4193
  %object_memory_mark4215 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !115
  %word_pos4216 = getelementptr %"struct.rubinius::Object"* %stack_load4180, i64 0, i32 0, i32 0, i32 0, !dbg !115
  %flags4217 = load i64* %word_pos4216, align 8, !dbg !115
  %mark_mask4218 = and i64 %flags4217, 3670016, !dbg !115
  %scan_mark4219 = add i32 %object_memory_mark4215, 1, !dbg !115
  %284 = zext i32 %scan_mark4219 to i64, !dbg !115
  %lshr4220 = shl nuw nsw i64 %284, 19, !dbg !115
  %is_scanned4221 = icmp ne i64 %mark_mask4218, %lshr4220, !dbg !115
  %zone_mask4222 = and i64 %flags4217, 768, !dbg !115
  %is_young4223 = icmp eq i64 %zone_mask4222, 512, !dbg !115
  %or.cond5119 = and i1 %is_scanned4221, %is_young4223, !dbg !115
  br i1 %or.cond5119, label %done4214, label %run_barrier4213, !dbg !115

run_barrier4213:                                  ; preds = %reference_obj4211
  %285 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load4180, %"struct.rubinius::Object"* %stack_load4203), !dbg !115
  br label %done4214, !dbg !115

done4214:                                         ; preds = %reference_obj4211, %run_barrier4213, %correct_serial4193
  %local4226 = load %"struct.rubinius::Object"** %89, align 8, !dbg !116, !rbx-classid !85
  store %"struct.rubinius::Object"* %local4226, %"struct.rubinius::Object"** %stack, align 8, !dbg !116
  store %"struct.rubinius::Object"* %local4226, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !116
  %286 = getelementptr %"struct.rubinius::Object"* %local4226, i64 2, i32 0, i32 2, !dbg !116
  %field4240 = load %"struct.rubinius::Object"** %286, align 8, !dbg !116
  %prune_undef4241 = icmp eq %"struct.rubinius::Object"* %field4240, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !116
  %"select ivar4242" = select i1 %prune_undef4241, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4240, !dbg !116
  store %"struct.rubinius::Object"* %"select ivar4242", %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !116
  %local4245 = load %"struct.rubinius::Object"** %110, align 8, !dbg !116, !rbx-classid !112
  store %"struct.rubinius::Object"* %local4245, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !116
  %local4248 = load %"struct.rubinius::Object"** %198, align 8, !dbg !116, !rbx-classid !114
  store %"struct.rubinius::Object"* %local4248, %"struct.rubinius::Object"** %stack_pos2176, align 8, !dbg !116
  %cast4255 = ptrtoint %"struct.rubinius::Object"* %local4245 to i64, !dbg !116
  %masked4256 = and i64 %cast4255, 3, !dbg !116
  %is_reference4257 = icmp eq i64 %masked4256, 0, !dbg !116
  br i1 %is_reference4257, label %check_class_id4258, label %class_fallback4250, !dbg !116

continue4252:                                     ; preds = %class_fallback4250.continue4252_crit_edge, %continue4285
  %stack_load4315 = phi %"struct.rubinius::Object"* [ %"select ivar4242", %continue4285 ], [ %stack_load4315.pre, %class_fallback4250.continue4252_crit_edge ]
  %send_result4309 = phi %"struct.rubinius::Object"* [ %292, %continue4285 ], [ %call_site_execute4306, %class_fallback4250.continue4252_crit_edge ], !dbg !116
  store %"struct.rubinius::Object"* %send_result4309, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !116
  %cast4316 = ptrtoint %"struct.rubinius::Object"* %stack_load4315 to i64, !dbg !116
  %masked4317 = and i64 %cast4316, 3, !dbg !116
  %is_reference4318 = icmp eq i64 %masked4317, 0, !dbg !116
  br i1 %is_reference4318, label %check_class_id4319, label %class_fallback4311, !dbg !116

check_class_id4258:                               ; preds = %done4214
  %class_pos4261 = getelementptr %"struct.rubinius::Object"* %local4245, i64 0, i32 0, i32 1, !dbg !116
  %ref_class4262 = load %"struct.rubinius::Class"** %class_pos4261, align 8, !dbg !116
  %class_id_pos4263 = getelementptr %"struct.rubinius::Class"* %ref_class4262, i64 0, i32 4, !dbg !116
  %class_id4264 = load i32* %class_id_pos4263, align 4, !dbg !116
  %check_class_id4265 = icmp eq i32 %class_id4264, 77, !dbg !116
  br i1 %check_class_id4265, label %correct_class4259, label %class_fallback4250, !dbg !116

correct_class4259:                                ; preds = %check_class_id4258
  %serial_id_pos4266 = getelementptr %"struct.rubinius::Class"* %ref_class4262, i64 0, i32 5, !dbg !116
  %serial_id4267 = load i32* %serial_id_pos4266, align 4, !dbg !116
  %check_serial_id4268 = icmp eq i32 %serial_id4267, 224, !dbg !116
  br i1 %check_serial_id4268, label %correct_serial4260, label %serial_fallback4251, !dbg !116

correct_serial4260:                               ; preds = %correct_class4259
  %cast4272 = ptrtoint %"struct.rubinius::Object"* %local4248 to i64, !dbg !116
  %masked4273 = and i64 %cast4272, 3, !dbg !116
  %is_reference4274 = icmp eq i64 %masked4273, 0, !dbg !116
  br i1 %is_reference4274, label %check_class_id4275, label %continue4271, !dbg !116

serial_fallback4251:                              ; preds = %correct_class4259
  store i32 248, i32* %8, align 4, !dbg !116
  %287 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 248, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !116
  br label %return_pad, !dbg !116

check_class_id4275:                               ; preds = %correct_serial4260
  %class_pos4277 = getelementptr %"struct.rubinius::Object"* %local4248, i64 0, i32 0, i32 1, !dbg !116
  %ref_class4278 = load %"struct.rubinius::Class"** %class_pos4277, align 8, !dbg !116
  %class_id_pos4279 = getelementptr %"struct.rubinius::Class"* %ref_class4278, i64 0, i32 4, !dbg !116
  %class_id4280 = load i32* %class_id_pos4279, align 4, !dbg !116
  %check_class_id4281 = icmp eq i32 %class_id4280, 77, !dbg !116
  br i1 %check_class_id4281, label %correct_class4276, label %continue4271, !dbg !116

correct_class4276:                                ; preds = %check_class_id4275
  %arg.value_pos4283 = getelementptr %"struct.rubinius::Object"* %local4248, i64 1, !dbg !116
  %288 = bitcast %"struct.rubinius::Object"* %arg.value_pos4283 to double*, !dbg !116
  %farg4284 = load double* %288, align 8, !dbg !116
  br label %continue4285, !dbg !116

continue4271:                                     ; preds = %check_class_id4275, %correct_serial4260
  %masked4287 = and i64 %cast4272, 1, !dbg !116
  %is_fixnum4288 = icmp eq i64 %masked4287, 0, !dbg !116
  br i1 %is_fixnum4288, label %class_fallback4250, label %guarded_body4289, !dbg !116

guarded_body4289:                                 ; preds = %continue4271
  %ashr4291 = ashr i64 %cast4272, 1, !dbg !116
  %289 = sitofp i64 %ashr4291 to double, !dbg !116
  br label %continue4285, !dbg !116

continue4285:                                     ; preds = %guarded_body4289, %correct_class4276
  %rhs4292 = phi double [ %farg4284, %correct_class4276 ], [ %289, %guarded_body4289 ], !dbg !116
  %self.value_pos4296 = getelementptr %"struct.rubinius::Object"* %local4245, i64 1, !dbg !116
  %290 = bitcast %"struct.rubinius::Object"* %self.value_pos4296 to double*, !dbg !116
  %fself4297 = load double* %290, align 8, !dbg !116
  %float.mul4298 = fmul double %rhs4292, %fself4297, !dbg !116
  %result4299 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !116, !rbx-classid !84
  %291 = getelementptr %"struct.rubinius::Float"* %result4299, i64 0, i32 1, !dbg !116
  store double %float.mul4298, double* %291, align 8, !dbg !116
  %292 = getelementptr inbounds %"struct.rubinius::Float"* %result4299, i64 0, i32 0, i32 0, !dbg !116
  br label %continue4252, !dbg !116

class_fallback4250:                               ; preds = %continue4271, %check_class_id4258, %done4214
  store %"struct.rubinius::Object"* %local4245, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !116
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !116
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !116
  store i32 1, i32* %out_args_total, align 8, !dbg !116
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !116
  store %"struct.rubinius::Object"** %stack_pos2176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !116
  %cache_const4303 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550392 to %"struct.rubinius::CallSite"**), align 8, !dbg !116
  %execute_pos4304 = getelementptr %"struct.rubinius::CallSite"* %cache_const4303, i64 0, i32 2, !dbg !116
  %execute4305 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4304, align 8, !dbg !116
  store i32 248, i32* %8, align 4, !dbg !116
  %call_site_execute4306 = call %"struct.rubinius::Object"* %execute4305(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4303, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !116
  %null_check4308 = icmp eq %"struct.rubinius::Object"* %call_site_execute4306, null, !dbg !116
  br i1 %null_check4308, label %bail_out, label %class_fallback4250.continue4252_crit_edge, !dbg !116

class_fallback4250.continue4252_crit_edge:        ; preds = %class_fallback4250
  %stack_load4315.pre = load %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !116
  br label %continue4252, !dbg !116

continue4313:                                     ; preds = %class_fallback4311, %continue4346
  %stack_load4404 = phi %"struct.rubinius::Object"* [ %298, %continue4346 ], [ %call_site_execute4367, %class_fallback4311 ], !dbg !116
  store %"struct.rubinius::Object"* %stack_load4404, %"struct.rubinius::Object"** %stack_pos2110, align 8, !dbg !116
  %stack_load4381 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !116, !rbx-classid !85
  store %"struct.rubinius::Object"* %stack_load4381, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !116
  store %"struct.rubinius::Object"* %stack_load4404, %"struct.rubinius::Object"** %stack, align 8, !dbg !116
  %cast4389 = ptrtoint %"struct.rubinius::Object"* %stack_load4381 to i64, !dbg !116
  %masked4390 = and i64 %cast4389, 3, !dbg !116
  %is_reference4391 = icmp eq i64 %masked4390, 0, !dbg !116
  br i1 %is_reference4391, label %check_class_id4392, label %class_fallback4384, !dbg !116

check_class_id4319:                               ; preds = %continue4252
  %class_pos4322 = getelementptr %"struct.rubinius::Object"* %stack_load4315, i64 0, i32 0, i32 1, !dbg !116
  %ref_class4323 = load %"struct.rubinius::Class"** %class_pos4322, align 8, !dbg !116
  %class_id_pos4324 = getelementptr %"struct.rubinius::Class"* %ref_class4323, i64 0, i32 4, !dbg !116
  %class_id4325 = load i32* %class_id_pos4324, align 4, !dbg !116
  %check_class_id4326 = icmp eq i32 %class_id4325, 77, !dbg !116
  br i1 %check_class_id4326, label %correct_class4320, label %class_fallback4311, !dbg !116

correct_class4320:                                ; preds = %check_class_id4319
  %serial_id_pos4327 = getelementptr %"struct.rubinius::Class"* %ref_class4323, i64 0, i32 5, !dbg !116
  %serial_id4328 = load i32* %serial_id_pos4327, align 4, !dbg !116
  %check_serial_id4329 = icmp eq i32 %serial_id4328, 224, !dbg !116
  br i1 %check_serial_id4329, label %correct_serial4321, label %serial_fallback4312, !dbg !116

correct_serial4321:                               ; preds = %correct_class4320
  %cast4333 = ptrtoint %"struct.rubinius::Object"* %send_result4309 to i64, !dbg !116
  %masked4334 = and i64 %cast4333, 3, !dbg !116
  %is_reference4335 = icmp eq i64 %masked4334, 0, !dbg !116
  br i1 %is_reference4335, label %check_class_id4336, label %continue4332, !dbg !116

serial_fallback4312:                              ; preds = %correct_class4320
  store i32 251, i32* %8, align 4, !dbg !116
  %293 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 251, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !116
  br label %return_pad, !dbg !116

check_class_id4336:                               ; preds = %correct_serial4321
  %class_pos4338 = getelementptr %"struct.rubinius::Object"* %send_result4309, i64 0, i32 0, i32 1, !dbg !116
  %ref_class4339 = load %"struct.rubinius::Class"** %class_pos4338, align 8, !dbg !116
  %class_id_pos4340 = getelementptr %"struct.rubinius::Class"* %ref_class4339, i64 0, i32 4, !dbg !116
  %class_id4341 = load i32* %class_id_pos4340, align 4, !dbg !116
  %check_class_id4342 = icmp eq i32 %class_id4341, 77, !dbg !116
  br i1 %check_class_id4342, label %correct_class4337, label %continue4332, !dbg !116

correct_class4337:                                ; preds = %check_class_id4336
  %arg.value_pos4344 = getelementptr %"struct.rubinius::Object"* %send_result4309, i64 1, !dbg !116
  %294 = bitcast %"struct.rubinius::Object"* %arg.value_pos4344 to double*, !dbg !116
  %farg4345 = load double* %294, align 8, !dbg !116
  br label %continue4346, !dbg !116

continue4332:                                     ; preds = %check_class_id4336, %correct_serial4321
  %masked4348 = and i64 %cast4333, 1, !dbg !116
  %is_fixnum4349 = icmp eq i64 %masked4348, 0, !dbg !116
  br i1 %is_fixnum4349, label %class_fallback4311, label %guarded_body4350, !dbg !116

guarded_body4350:                                 ; preds = %continue4332
  %ashr4352 = ashr i64 %cast4333, 1, !dbg !116
  %295 = sitofp i64 %ashr4352 to double, !dbg !116
  br label %continue4346, !dbg !116

continue4346:                                     ; preds = %guarded_body4350, %correct_class4337
  %rhs4353 = phi double [ %farg4345, %correct_class4337 ], [ %295, %guarded_body4350 ], !dbg !116
  %self.value_pos4357 = getelementptr %"struct.rubinius::Object"* %stack_load4315, i64 1, !dbg !116
  %296 = bitcast %"struct.rubinius::Object"* %self.value_pos4357 to double*, !dbg !116
  %fself4358 = load double* %296, align 8, !dbg !116
  %float.add4359 = fadd double %rhs4353, %fself4358, !dbg !116
  %result4360 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !116, !rbx-classid !84
  %297 = getelementptr %"struct.rubinius::Float"* %result4360, i64 0, i32 1, !dbg !116
  store double %float.add4359, double* %297, align 8, !dbg !116
  %298 = getelementptr inbounds %"struct.rubinius::Float"* %result4360, i64 0, i32 0, i32 0, !dbg !116
  br label %continue4313, !dbg !116

class_fallback4311:                               ; preds = %continue4332, %check_class_id4319, %continue4252
  store %"struct.rubinius::Object"* %stack_load4315, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !116
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !116
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !116
  store i32 1, i32* %out_args_total, align 8, !dbg !116
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !116
  store %"struct.rubinius::Object"** %stack_pos2110, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !116
  %cache_const4364 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550416 to %"struct.rubinius::CallSite"**), align 16, !dbg !116
  %execute_pos4365 = getelementptr %"struct.rubinius::CallSite"* %cache_const4364, i64 0, i32 2, !dbg !116
  %execute4366 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4365, align 8, !dbg !116
  store i32 251, i32* %8, align 4, !dbg !116
  %call_site_execute4367 = call %"struct.rubinius::Object"* %execute4366(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4364, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !116
  %null_check4369 = icmp eq %"struct.rubinius::Object"* %call_site_execute4367, null, !dbg !116
  br i1 %null_check4369, label %bail_out, label %continue4313, !dbg !116

check_class_id4392:                               ; preds = %continue4313
  %class_pos4395 = getelementptr %"struct.rubinius::Object"* %stack_load4381, i64 0, i32 0, i32 1, !dbg !116
  %ref_class4396 = load %"struct.rubinius::Class"** %class_pos4395, align 8, !dbg !116
  %class_id_pos4397 = getelementptr %"struct.rubinius::Class"* %ref_class4396, i64 0, i32 4, !dbg !116
  %class_id4398 = load i32* %class_id_pos4397, align 4, !dbg !116
  %check_class_id4399 = icmp eq i32 %class_id4398, 1285, !dbg !116
  br i1 %check_class_id4399, label %correct_class4393, label %class_fallback4384, !dbg !116

correct_class4393:                                ; preds = %check_class_id4392
  %serial_id_pos4400 = getelementptr %"struct.rubinius::Class"* %ref_class4396, i64 0, i32 5, !dbg !116
  %serial_id4401 = load i32* %serial_id_pos4400, align 4, !dbg !116
  %check_serial_id4402 = icmp eq i32 %serial_id4401, 2, !dbg !116
  br i1 %check_serial_id4402, label %correct_serial4394, label %serial_fallback4385, !dbg !116

class_fallback4384:                               ; preds = %check_class_id4392, %continue4313
  store i32 257, i32* %8, align 4, !dbg !116
  %299 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 0), !dbg !116
  br label %return_pad, !dbg !116

correct_serial4394:                               ; preds = %correct_class4393
  %300 = getelementptr %"struct.rubinius::Object"* %stack_load4381, i64 2, i32 0, i32 2, !dbg !116
  store %"struct.rubinius::Object"* %stack_load4404, %"struct.rubinius::Object"** %300, align 8, !dbg !116
  %cast4409 = ptrtoint %"struct.rubinius::Object"* %stack_load4404 to i64, !dbg !116
  %masked4410 = and i64 %cast4409, 3, !dbg !116
  %is_reference4411 = icmp eq i64 %masked4410, 0, !dbg !116
  br i1 %is_reference4411, label %reference_obj4412, label %done4415, !dbg !116

serial_fallback4385:                              ; preds = %correct_class4393
  store i32 257, i32* %8, align 4, !dbg !116
  %301 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !116
  br label %return_pad, !dbg !116

reference_obj4412:                                ; preds = %correct_serial4394
  %object_memory_mark4416 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !116
  %word_pos4417 = getelementptr %"struct.rubinius::Object"* %stack_load4381, i64 0, i32 0, i32 0, i32 0, !dbg !116
  %flags4418 = load i64* %word_pos4417, align 8, !dbg !116
  %mark_mask4419 = and i64 %flags4418, 3670016, !dbg !116
  %scan_mark4420 = add i32 %object_memory_mark4416, 1, !dbg !116
  %302 = zext i32 %scan_mark4420 to i64, !dbg !116
  %lshr4421 = shl nuw nsw i64 %302, 19, !dbg !116
  %is_scanned4422 = icmp ne i64 %mark_mask4419, %lshr4421, !dbg !116
  %zone_mask4423 = and i64 %flags4418, 768, !dbg !116
  %is_young4424 = icmp eq i64 %zone_mask4423, 512, !dbg !116
  %or.cond5120 = and i1 %is_scanned4422, %is_young4424, !dbg !116
  br i1 %or.cond5120, label %done4415, label %run_barrier4414, !dbg !116

run_barrier4414:                                  ; preds = %reference_obj4412
  %303 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load4381, %"struct.rubinius::Object"* %stack_load4404), !dbg !116
  br label %done4415, !dbg !116

done4415:                                         ; preds = %reference_obj4412, %run_barrier4414, %correct_serial4394
  %local4427 = load %"struct.rubinius::Object"** %24, align 8, !dbg !117, !rbx-classid !23
  store %"struct.rubinius::Object"* %local4427, %"struct.rubinius::Object"** %stack, align 8, !dbg !117
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !117
  %cast4441 = ptrtoint %"struct.rubinius::Object"* %local4427 to i64, !dbg !117
  %masked4444 = and i64 %cast4441, 1, !dbg !117
  %is_fixnum4445 = icmp eq i64 %masked4444, 0, !dbg !117
  br i1 %is_fixnum4445, label %class_fallback4430, label %push_add4437, !dbg !117

class_fallback4430:                               ; preds = %done4415
  store %"struct.rubinius::Object"* %local4427, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !117
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !117
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !117
  store i32 1, i32* %out_args_total, align 8, !dbg !117
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !117
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !117
  %cache_const4460 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550528 to %"struct.rubinius::CallSite"**), align 256, !dbg !117
  %execute_pos4461 = getelementptr %"struct.rubinius::CallSite"* %cache_const4460, i64 0, i32 2, !dbg !117
  %execute4462 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4461, align 8, !dbg !117
  store i32 265, i32* %8, align 4, !dbg !117
  %call_site_execute4463 = call %"struct.rubinius::Object"* %execute4462(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4460, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !117
  %null_check4465 = icmp eq %"struct.rubinius::Object"* %call_site_execute4463, null, !dbg !117
  br i1 %null_check4465, label %bail_out, label %continue4432, !dbg !117

continue4432:                                     ; preds = %class_fallback4430, %bignum4439, %tagnow4438
  %send_result4466 = phi %"struct.rubinius::Object"* [ %big_value4452, %bignum4439 ], [ %as_obj4455, %tagnow4438 ], [ %call_site_execute4463, %class_fallback4430 ], !dbg !117
  store %"struct.rubinius::Object"* %send_result4466, %"struct.rubinius::Object"** %stack, align 8, !dbg !117
  store %"struct.rubinius::Object"* %send_result4466, %"struct.rubinius::Object"** %24, align 8, !dbg !117
  %vm_jit = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !117
  %304 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !117
  %check_interrupts = load i8* %304, align 1, !dbg !117
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !117
  %or4473 = or i8 %check_global_interrupts, %check_interrupts, !dbg !117
  %needs_interrupts = icmp eq i8 %or4473, 0, !dbg !117
  br i1 %needs_interrupts, label %method_body, label %interrupts, !dbg !117

push_add4437:                                     ; preds = %done4415
  %ashr4447 = ashr i64 %cast4441, 1, !dbg !117
  %fixnum.add4450 = add i64 %ashr4447, 1, !dbg !117
  %fixnum.add4450.off = add i64 %ashr4447, 4611686018427387904, !dbg !117
  %305 = icmp ult i64 %fixnum.add4450.off, 9223372036854775807, !dbg !117
  br i1 %305, label %tagnow4438, label %bignum4439, !dbg !117

tagnow4438:                                       ; preds = %push_add4437
  %shl4453 = shl i64 %fixnum.add4450, 1, !dbg !117
  %or4454 = or i64 %shl4453, 1, !dbg !117
  %as_obj4455 = inttoptr i64 %or4454 to %"struct.rubinius::Object"*, !dbg !117
  br label %continue4432, !dbg !117

bignum4439:                                       ; preds = %push_add4437
  %big_value4452 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add4450) #1, !dbg !117
  br label %continue4432, !dbg !117

interrupts:                                       ; preds = %continue4432
  store i32 271, i32* %8, align 4, !dbg !117
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !117
  %null_check4476 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !117
  br i1 %null_check4476, label %bail_out, label %method_body, !dbg !117

ip274:                                            ; preds = %continue
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !118
  %self4482 = load %"struct.rubinius::Object"** %14, align 8, !dbg !118
  %cast4483 = ptrtoint %"struct.rubinius::Object"* %self4482 to i64, !dbg !118
  %masked4484 = and i64 %cast4483, 3, !dbg !118
  %is_reference4485 = icmp eq i64 %masked4484, 0, !dbg !118
  br i1 %is_reference4485, label %check_class_id4486, label %visit_push_ivar_fallback4479, !dbg !118

continue4480:                                     ; preds = %visit_push_ivar_fallback4479, %correct_class4487
  %storemerge5165 = phi %"struct.rubinius::Object"* [ %"select ivar4497", %correct_class4487 ], [ %ivar4500, %visit_push_ivar_fallback4479 ]
  store %"struct.rubinius::Object"* %storemerge5165, %"struct.rubinius::Object"** %stack, align 8, !dbg !118
  %local4503 = load %"struct.rubinius::Object"** %23, align 8, !dbg !118, !rbx-classid !32
  store %"struct.rubinius::Object"* %local4503, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !118
  %stack_pos4507 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk5124, i64 0, i64 11, !dbg !118
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !118
  br i1 %is_reference4485, label %check_class_id4512, label %visit_push_ivar_fallback4505, !dbg !118

check_class_id4486:                               ; preds = %ip274
  %class_pos4488 = getelementptr %"struct.rubinius::Object"* %self4482, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4489 = load %"struct.rubinius::Class"** %class_pos4488, align 8, !dbg !118
  %class_id_pos4490 = getelementptr %"struct.rubinius::Class"* %ref_class4489, i64 0, i32 4, !dbg !118
  %class_id4491 = load i32* %class_id_pos4490, align 4, !dbg !118
  %check_class_id4492 = icmp eq i32 %class_id4491, 1285, !dbg !118
  br i1 %check_class_id4492, label %correct_class4487, label %visit_push_ivar_fallback4479, !dbg !118

correct_class4487:                                ; preds = %check_class_id4486
  %field_pos44945164 = getelementptr %"struct.rubinius::Object"* %self4482, i64 1, !dbg !118
  %field_pos4494 = bitcast %"struct.rubinius::Object"* %field_pos44945164 to %"struct.rubinius::Object"**, !dbg !118
  %field4495 = load %"struct.rubinius::Object"** %field_pos4494, align 8, !dbg !118
  %prune_undef4496 = icmp eq %"struct.rubinius::Object"* %field4495, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !118
  %"select ivar4497" = select i1 %prune_undef4496, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4495, !dbg !118
  br label %continue4480, !dbg !118

visit_push_ivar_fallback4479:                     ; preds = %check_class_id4486, %ip274
  %ivar4500 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4482, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !118
  br label %continue4480, !dbg !118

continue4506:                                     ; preds = %visit_push_ivar_fallback4505, %correct_class4513
  %stack_load4548 = phi %"struct.rubinius::Object"* [ %"select ivar4523", %correct_class4513 ], [ %ivar4526, %visit_push_ivar_fallback4505 ]
  store %"struct.rubinius::Object"* %stack_load4548, %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !118
  %cast4533 = ptrtoint %"struct.rubinius::Object"* %local4503 to i64, !dbg !118
  %masked4534 = and i64 %cast4533, 3, !dbg !118
  %is_reference4535 = icmp eq i64 %masked4534, 0, !dbg !118
  br i1 %is_reference4535, label %check_class_id4536, label %class_fallback4528, !dbg !118

check_class_id4512:                               ; preds = %continue4480
  %class_pos4514 = getelementptr %"struct.rubinius::Object"* %self4482, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4515 = load %"struct.rubinius::Class"** %class_pos4514, align 8, !dbg !118
  %class_id_pos4516 = getelementptr %"struct.rubinius::Class"* %ref_class4515, i64 0, i32 4, !dbg !118
  %class_id4517 = load i32* %class_id_pos4516, align 4, !dbg !118
  %check_class_id4518 = icmp eq i32 %class_id4517, 1285, !dbg !118
  br i1 %check_class_id4518, label %correct_class4513, label %visit_push_ivar_fallback4505, !dbg !118

correct_class4513:                                ; preds = %check_class_id4512
  %field_pos45205162 = getelementptr %"struct.rubinius::Object"* %self4482, i64 2, !dbg !118
  %field_pos4520 = bitcast %"struct.rubinius::Object"* %field_pos45205162 to %"struct.rubinius::Object"**, !dbg !118
  %field4521 = load %"struct.rubinius::Object"** %field_pos4520, align 8, !dbg !118
  %prune_undef4522 = icmp eq %"struct.rubinius::Object"* %field4521, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !118
  %"select ivar4523" = select i1 %prune_undef4522, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4521, !dbg !118
  br label %continue4506, !dbg !118

visit_push_ivar_fallback4505:                     ; preds = %check_class_id4512, %continue4480
  %ivar4526 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4482, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !118
  br label %continue4506, !dbg !118

continue4530:                                     ; preds = %class_fallback4528.continue4530_crit_edge, %continue4563
  %stack_load4593 = phi %"struct.rubinius::Object"* [ %storemerge5165, %continue4563 ], [ %stack_load4593.pre, %class_fallback4528.continue4530_crit_edge ]
  %send_result4587 = phi %"struct.rubinius::Object"* [ %311, %continue4563 ], [ %call_site_execute4584, %class_fallback4528.continue4530_crit_edge ], !dbg !118
  store %"struct.rubinius::Object"* %send_result4587, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !118
  %cast4594 = ptrtoint %"struct.rubinius::Object"* %stack_load4593 to i64, !dbg !118
  %masked4595 = and i64 %cast4594, 3, !dbg !118
  %is_reference4596 = icmp eq i64 %masked4595, 0, !dbg !118
  br i1 %is_reference4596, label %check_class_id4597, label %class_fallback4589, !dbg !118

check_class_id4536:                               ; preds = %continue4506
  %class_pos4539 = getelementptr %"struct.rubinius::Object"* %local4503, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4540 = load %"struct.rubinius::Class"** %class_pos4539, align 8, !dbg !118
  %class_id_pos4541 = getelementptr %"struct.rubinius::Class"* %ref_class4540, i64 0, i32 4, !dbg !118
  %class_id4542 = load i32* %class_id_pos4541, align 4, !dbg !118
  %check_class_id4543 = icmp eq i32 %class_id4542, 77, !dbg !118
  br i1 %check_class_id4543, label %correct_class4537, label %class_fallback4528, !dbg !118

correct_class4537:                                ; preds = %check_class_id4536
  %serial_id_pos4544 = getelementptr %"struct.rubinius::Class"* %ref_class4540, i64 0, i32 5, !dbg !118
  %serial_id4545 = load i32* %serial_id_pos4544, align 4, !dbg !118
  %check_serial_id4546 = icmp eq i32 %serial_id4545, 224, !dbg !118
  br i1 %check_serial_id4546, label %correct_serial4538, label %serial_fallback4529, !dbg !118

correct_serial4538:                               ; preds = %correct_class4537
  %cast4550 = ptrtoint %"struct.rubinius::Object"* %stack_load4548 to i64, !dbg !118
  %masked4551 = and i64 %cast4550, 3, !dbg !118
  %is_reference4552 = icmp eq i64 %masked4551, 0, !dbg !118
  br i1 %is_reference4552, label %check_class_id4553, label %continue4549, !dbg !118

serial_fallback4529:                              ; preds = %correct_class4537
  store i32 282, i32* %8, align 4, !dbg !118
  %306 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 282, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

check_class_id4553:                               ; preds = %correct_serial4538
  %class_pos4555 = getelementptr %"struct.rubinius::Object"* %stack_load4548, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4556 = load %"struct.rubinius::Class"** %class_pos4555, align 8, !dbg !118
  %class_id_pos4557 = getelementptr %"struct.rubinius::Class"* %ref_class4556, i64 0, i32 4, !dbg !118
  %class_id4558 = load i32* %class_id_pos4557, align 4, !dbg !118
  %check_class_id4559 = icmp eq i32 %class_id4558, 77, !dbg !118
  br i1 %check_class_id4559, label %correct_class4554, label %continue4549, !dbg !118

correct_class4554:                                ; preds = %check_class_id4553
  %arg.value_pos4561 = getelementptr %"struct.rubinius::Object"* %stack_load4548, i64 1, !dbg !118
  %307 = bitcast %"struct.rubinius::Object"* %arg.value_pos4561 to double*, !dbg !118
  %farg4562 = load double* %307, align 8, !dbg !118
  br label %continue4563, !dbg !118

continue4549:                                     ; preds = %check_class_id4553, %correct_serial4538
  %masked4565 = and i64 %cast4550, 1, !dbg !118
  %is_fixnum4566 = icmp eq i64 %masked4565, 0, !dbg !118
  br i1 %is_fixnum4566, label %class_fallback4528, label %guarded_body4567, !dbg !118

guarded_body4567:                                 ; preds = %continue4549
  %ashr4569 = ashr i64 %cast4550, 1, !dbg !118
  %308 = sitofp i64 %ashr4569 to double, !dbg !118
  br label %continue4563, !dbg !118

continue4563:                                     ; preds = %guarded_body4567, %correct_class4554
  %rhs4570 = phi double [ %farg4562, %correct_class4554 ], [ %308, %guarded_body4567 ], !dbg !118
  %self.value_pos4574 = getelementptr %"struct.rubinius::Object"* %local4503, i64 1, !dbg !118
  %309 = bitcast %"struct.rubinius::Object"* %self.value_pos4574 to double*, !dbg !118
  %fself4575 = load double* %309, align 8, !dbg !118
  %float.mul4576 = fmul double %rhs4570, %fself4575, !dbg !118
  %result4577 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !118, !rbx-classid !84
  %310 = getelementptr %"struct.rubinius::Float"* %result4577, i64 0, i32 1, !dbg !118
  store double %float.mul4576, double* %310, align 8, !dbg !118
  %311 = getelementptr inbounds %"struct.rubinius::Float"* %result4577, i64 0, i32 0, i32 0, !dbg !118
  br label %continue4530, !dbg !118

class_fallback4528:                               ; preds = %continue4549, %check_class_id4536, %continue4506
  store %"struct.rubinius::Object"* %local4503, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !118
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !118
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !118
  store i32 1, i32* %out_args_total, align 8, !dbg !118
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !118
  store %"struct.rubinius::Object"** %stack_pos4507, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !118
  %cache_const4581 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550664 to %"struct.rubinius::CallSite"**), align 8, !dbg !118
  %execute_pos4582 = getelementptr %"struct.rubinius::CallSite"* %cache_const4581, i64 0, i32 2, !dbg !118
  %execute4583 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4582, align 8, !dbg !118
  store i32 282, i32* %8, align 4, !dbg !118
  %call_site_execute4584 = call %"struct.rubinius::Object"* %execute4583(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4581, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !118
  %null_check4586 = icmp eq %"struct.rubinius::Object"* %call_site_execute4584, null, !dbg !118
  br i1 %null_check4586, label %bail_out, label %class_fallback4528.continue4530_crit_edge, !dbg !118

class_fallback4528.continue4530_crit_edge:        ; preds = %class_fallback4528
  %stack_load4593.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !118
  br label %continue4530, !dbg !118

continue4591:                                     ; preds = %class_fallback4589, %continue4624
  %send_result4648 = phi %"struct.rubinius::Object"* [ %317, %continue4624 ], [ %call_site_execute4645, %class_fallback4589 ], !dbg !118
  store %"struct.rubinius::Object"* %send_result4648, %"struct.rubinius::Object"** %stack, align 8, !dbg !118
  %self4650 = load %"struct.rubinius::Object"** %14, align 8, !dbg !118
  %cast4655 = ptrtoint %"struct.rubinius::Object"* %self4650 to i64, !dbg !118
  %masked4656 = and i64 %cast4655, 3, !dbg !118
  %is_reference4657 = icmp eq i64 %masked4656, 0, !dbg !118
  br i1 %is_reference4657, label %check_class_id4658, label %visit_push_ivar_fallback4653, !dbg !118

check_class_id4597:                               ; preds = %continue4530
  %class_pos4600 = getelementptr %"struct.rubinius::Object"* %stack_load4593, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4601 = load %"struct.rubinius::Class"** %class_pos4600, align 8, !dbg !118
  %class_id_pos4602 = getelementptr %"struct.rubinius::Class"* %ref_class4601, i64 0, i32 4, !dbg !118
  %class_id4603 = load i32* %class_id_pos4602, align 4, !dbg !118
  %check_class_id4604 = icmp eq i32 %class_id4603, 77, !dbg !118
  br i1 %check_class_id4604, label %correct_class4598, label %class_fallback4589, !dbg !118

correct_class4598:                                ; preds = %check_class_id4597
  %serial_id_pos4605 = getelementptr %"struct.rubinius::Class"* %ref_class4601, i64 0, i32 5, !dbg !118
  %serial_id4606 = load i32* %serial_id_pos4605, align 4, !dbg !118
  %check_serial_id4607 = icmp eq i32 %serial_id4606, 224, !dbg !118
  br i1 %check_serial_id4607, label %correct_serial4599, label %serial_fallback4590, !dbg !118

correct_serial4599:                               ; preds = %correct_class4598
  %cast4611 = ptrtoint %"struct.rubinius::Object"* %send_result4587 to i64, !dbg !118
  %masked4612 = and i64 %cast4611, 3, !dbg !118
  %is_reference4613 = icmp eq i64 %masked4612, 0, !dbg !118
  br i1 %is_reference4613, label %check_class_id4614, label %continue4610, !dbg !118

serial_fallback4590:                              ; preds = %correct_class4598
  store i32 285, i32* %8, align 4, !dbg !118
  %312 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 285, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !118
  br label %return_pad, !dbg !118

check_class_id4614:                               ; preds = %correct_serial4599
  %class_pos4616 = getelementptr %"struct.rubinius::Object"* %send_result4587, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4617 = load %"struct.rubinius::Class"** %class_pos4616, align 8, !dbg !118
  %class_id_pos4618 = getelementptr %"struct.rubinius::Class"* %ref_class4617, i64 0, i32 4, !dbg !118
  %class_id4619 = load i32* %class_id_pos4618, align 4, !dbg !118
  %check_class_id4620 = icmp eq i32 %class_id4619, 77, !dbg !118
  br i1 %check_class_id4620, label %correct_class4615, label %continue4610, !dbg !118

correct_class4615:                                ; preds = %check_class_id4614
  %arg.value_pos4622 = getelementptr %"struct.rubinius::Object"* %send_result4587, i64 1, !dbg !118
  %313 = bitcast %"struct.rubinius::Object"* %arg.value_pos4622 to double*, !dbg !118
  %farg4623 = load double* %313, align 8, !dbg !118
  br label %continue4624, !dbg !118

continue4610:                                     ; preds = %check_class_id4614, %correct_serial4599
  %masked4626 = and i64 %cast4611, 1, !dbg !118
  %is_fixnum4627 = icmp eq i64 %masked4626, 0, !dbg !118
  br i1 %is_fixnum4627, label %class_fallback4589, label %guarded_body4628, !dbg !118

guarded_body4628:                                 ; preds = %continue4610
  %ashr4630 = ashr i64 %cast4611, 1, !dbg !118
  %314 = sitofp i64 %ashr4630 to double, !dbg !118
  br label %continue4624, !dbg !118

continue4624:                                     ; preds = %guarded_body4628, %correct_class4615
  %rhs4631 = phi double [ %farg4623, %correct_class4615 ], [ %314, %guarded_body4628 ], !dbg !118
  %self.value_pos4635 = getelementptr %"struct.rubinius::Object"* %stack_load4593, i64 1, !dbg !118
  %315 = bitcast %"struct.rubinius::Object"* %self.value_pos4635 to double*, !dbg !118
  %fself4636 = load double* %315, align 8, !dbg !118
  %float.add4637 = fadd double %rhs4631, %fself4636, !dbg !118
  %result4638 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !118, !rbx-classid !84
  %316 = getelementptr %"struct.rubinius::Float"* %result4638, i64 0, i32 1, !dbg !118
  store double %float.add4637, double* %316, align 8, !dbg !118
  %317 = getelementptr inbounds %"struct.rubinius::Float"* %result4638, i64 0, i32 0, i32 0, !dbg !118
  br label %continue4591, !dbg !118

class_fallback4589:                               ; preds = %continue4610, %check_class_id4597, %continue4530
  store %"struct.rubinius::Object"* %stack_load4593, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !118
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !118
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !118
  store i32 1, i32* %out_args_total, align 8, !dbg !118
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !118
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !118
  %cache_const4642 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550688 to %"struct.rubinius::CallSite"**), align 32, !dbg !118
  %execute_pos4643 = getelementptr %"struct.rubinius::CallSite"* %cache_const4642, i64 0, i32 2, !dbg !118
  %execute4644 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4643, align 8, !dbg !118
  store i32 285, i32* %8, align 4, !dbg !118
  %call_site_execute4645 = call %"struct.rubinius::Object"* %execute4644(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4642, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !118
  %null_check4647 = icmp eq %"struct.rubinius::Object"* %call_site_execute4645, null, !dbg !118
  br i1 %null_check4647, label %bail_out, label %continue4591, !dbg !118

continue4654:                                     ; preds = %visit_push_ivar_fallback4653, %correct_class4659, %run_barrier4672, %reference_obj4670
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !119
  %self4690 = load %"struct.rubinius::Object"** %14, align 8, !dbg !119
  %cast4691 = ptrtoint %"struct.rubinius::Object"* %self4690 to i64, !dbg !119
  %masked4692 = and i64 %cast4691, 3, !dbg !119
  %is_reference4693 = icmp eq i64 %masked4692, 0, !dbg !119
  br i1 %is_reference4693, label %check_class_id4694, label %visit_push_ivar_fallback4687, !dbg !119

check_class_id4658:                               ; preds = %continue4591
  %class_pos4660 = getelementptr %"struct.rubinius::Object"* %self4650, i64 0, i32 0, i32 1, !dbg !118
  %ref_class4661 = load %"struct.rubinius::Class"** %class_pos4660, align 8, !dbg !118
  %class_id_pos4662 = getelementptr %"struct.rubinius::Class"* %ref_class4661, i64 0, i32 4, !dbg !118
  %class_id4663 = load i32* %class_id_pos4662, align 4, !dbg !118
  %check_class_id4664 = icmp eq i32 %class_id4663, 1285, !dbg !118
  br i1 %check_class_id4664, label %correct_class4659, label %visit_push_ivar_fallback4653, !dbg !118

correct_class4659:                                ; preds = %check_class_id4658
  %318 = getelementptr inbounds %"struct.rubinius::Object"* %self4650, i64 1, i32 0, i32 0, i32 0, !dbg !118
  %send_result4648.c = ptrtoint %"struct.rubinius::Object"* %send_result4648 to i64, !dbg !118
  store i64 %send_result4648.c, i64* %318, align 8, !dbg !118
  %masked4668 = and i64 %send_result4648.c, 3, !dbg !118
  %is_reference4669 = icmp eq i64 %masked4668, 0, !dbg !118
  br i1 %is_reference4669, label %reference_obj4670, label %continue4654, !dbg !118

visit_push_ivar_fallback4653:                     ; preds = %check_class_id4658, %continue4591
  %ivar4683 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self4650, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result4648), !dbg !118
  %null_check4686 = icmp eq %"struct.rubinius::Object"* %ivar4683, null, !dbg !118
  br i1 %null_check4686, label %bail_out, label %continue4654, !dbg !118

reference_obj4670:                                ; preds = %correct_class4659
  %object_memory_mark4674 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !118
  %word_pos4675 = getelementptr %"struct.rubinius::Object"* %self4650, i64 0, i32 0, i32 0, i32 0, !dbg !118
  %flags4676 = load i64* %word_pos4675, align 8, !dbg !118
  %mark_mask4677 = and i64 %flags4676, 3670016, !dbg !118
  %scan_mark4678 = add i32 %object_memory_mark4674, 1, !dbg !118
  %319 = zext i32 %scan_mark4678 to i64, !dbg !118
  %lshr4679 = shl nuw nsw i64 %319, 19, !dbg !118
  %is_scanned4680 = icmp ne i64 %mark_mask4677, %lshr4679, !dbg !118
  %zone_mask4681 = and i64 %flags4676, 768, !dbg !118
  %is_young4682 = icmp eq i64 %zone_mask4681, 512, !dbg !118
  %or.cond5121 = and i1 %is_scanned4680, %is_young4682, !dbg !118
  br i1 %or.cond5121, label %continue4654, label %run_barrier4672, !dbg !118

run_barrier4672:                                  ; preds = %reference_obj4670
  %320 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4650, %"struct.rubinius::Object"* %send_result4648), !dbg !118
  br label %continue4654, !dbg !118

continue4688:                                     ; preds = %visit_push_ivar_fallback4687, %correct_class4695
  %storemerge5160 = phi %"struct.rubinius::Object"* [ %"select ivar4705", %correct_class4695 ], [ %ivar4708, %visit_push_ivar_fallback4687 ]
  store %"struct.rubinius::Object"* %storemerge5160, %"struct.rubinius::Object"** %stack, align 8, !dbg !119
  %local4711 = load %"struct.rubinius::Object"** %23, align 8, !dbg !119, !rbx-classid !32
  store %"struct.rubinius::Object"* %local4711, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !119
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !119
  br i1 %is_reference4693, label %check_class_id4720, label %visit_push_ivar_fallback4713, !dbg !119

check_class_id4694:                               ; preds = %continue4654
  %class_pos4696 = getelementptr %"struct.rubinius::Object"* %self4690, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4697 = load %"struct.rubinius::Class"** %class_pos4696, align 8, !dbg !119
  %class_id_pos4698 = getelementptr %"struct.rubinius::Class"* %ref_class4697, i64 0, i32 4, !dbg !119
  %class_id4699 = load i32* %class_id_pos4698, align 4, !dbg !119
  %check_class_id4700 = icmp eq i32 %class_id4699, 1285, !dbg !119
  br i1 %check_class_id4700, label %correct_class4695, label %visit_push_ivar_fallback4687, !dbg !119

correct_class4695:                                ; preds = %check_class_id4694
  %field_pos4702 = getelementptr %"struct.rubinius::Object"* %self4690, i64 1, i32 0, i32 1, !dbg !119
  %321 = load %"struct.rubinius::Class"** %field_pos4702, align 8, !dbg !119
  %field4703 = getelementptr inbounds %"struct.rubinius::Class"* %321, i64 0, i32 0, i32 0, !dbg !119
  %prune_undef4704 = icmp eq %"struct.rubinius::Object"* %field4703, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !119
  %"select ivar4705" = select i1 %prune_undef4704, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4703, !dbg !119
  br label %continue4688, !dbg !119

visit_push_ivar_fallback4687:                     ; preds = %check_class_id4694, %continue4654
  %ivar4708 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4690, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !119
  br label %continue4688, !dbg !119

continue4714:                                     ; preds = %visit_push_ivar_fallback4713, %correct_class4721
  %stack_load4756 = phi %"struct.rubinius::Object"* [ %"select ivar4731", %correct_class4721 ], [ %ivar4734, %visit_push_ivar_fallback4713 ]
  store %"struct.rubinius::Object"* %stack_load4756, %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !119
  %cast4741 = ptrtoint %"struct.rubinius::Object"* %local4711 to i64, !dbg !119
  %masked4742 = and i64 %cast4741, 3, !dbg !119
  %is_reference4743 = icmp eq i64 %masked4742, 0, !dbg !119
  br i1 %is_reference4743, label %check_class_id4744, label %class_fallback4736, !dbg !119

check_class_id4720:                               ; preds = %continue4688
  %class_pos4722 = getelementptr %"struct.rubinius::Object"* %self4690, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4723 = load %"struct.rubinius::Class"** %class_pos4722, align 8, !dbg !119
  %class_id_pos4724 = getelementptr %"struct.rubinius::Class"* %ref_class4723, i64 0, i32 4, !dbg !119
  %class_id4725 = load i32* %class_id_pos4724, align 4, !dbg !119
  %check_class_id4726 = icmp eq i32 %class_id4725, 1285, !dbg !119
  br i1 %check_class_id4726, label %correct_class4721, label %visit_push_ivar_fallback4713, !dbg !119

correct_class4721:                                ; preds = %check_class_id4720
  %field_pos4728 = getelementptr %"struct.rubinius::Object"* %self4690, i64 2, i32 0, i32 1, !dbg !119
  %322 = load %"struct.rubinius::Class"** %field_pos4728, align 8, !dbg !119
  %field4729 = getelementptr inbounds %"struct.rubinius::Class"* %322, i64 0, i32 0, i32 0, !dbg !119
  %prune_undef4730 = icmp eq %"struct.rubinius::Object"* %field4729, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !119
  %"select ivar4731" = select i1 %prune_undef4730, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4729, !dbg !119
  br label %continue4714, !dbg !119

visit_push_ivar_fallback4713:                     ; preds = %check_class_id4720, %continue4688
  %ivar4734 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4690, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !119
  br label %continue4714, !dbg !119

continue4738:                                     ; preds = %class_fallback4736.continue4738_crit_edge, %continue4771
  %stack_load4801 = phi %"struct.rubinius::Object"* [ %storemerge5160, %continue4771 ], [ %stack_load4801.pre, %class_fallback4736.continue4738_crit_edge ]
  %send_result4795 = phi %"struct.rubinius::Object"* [ %328, %continue4771 ], [ %call_site_execute4792, %class_fallback4736.continue4738_crit_edge ], !dbg !119
  store %"struct.rubinius::Object"* %send_result4795, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !119
  %cast4802 = ptrtoint %"struct.rubinius::Object"* %stack_load4801 to i64, !dbg !119
  %masked4803 = and i64 %cast4802, 3, !dbg !119
  %is_reference4804 = icmp eq i64 %masked4803, 0, !dbg !119
  br i1 %is_reference4804, label %check_class_id4805, label %class_fallback4797, !dbg !119

check_class_id4744:                               ; preds = %continue4714
  %class_pos4747 = getelementptr %"struct.rubinius::Object"* %local4711, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4748 = load %"struct.rubinius::Class"** %class_pos4747, align 8, !dbg !119
  %class_id_pos4749 = getelementptr %"struct.rubinius::Class"* %ref_class4748, i64 0, i32 4, !dbg !119
  %class_id4750 = load i32* %class_id_pos4749, align 4, !dbg !119
  %check_class_id4751 = icmp eq i32 %class_id4750, 77, !dbg !119
  br i1 %check_class_id4751, label %correct_class4745, label %class_fallback4736, !dbg !119

correct_class4745:                                ; preds = %check_class_id4744
  %serial_id_pos4752 = getelementptr %"struct.rubinius::Class"* %ref_class4748, i64 0, i32 5, !dbg !119
  %serial_id4753 = load i32* %serial_id_pos4752, align 4, !dbg !119
  %check_serial_id4754 = icmp eq i32 %serial_id4753, 224, !dbg !119
  br i1 %check_serial_id4754, label %correct_serial4746, label %serial_fallback4737, !dbg !119

correct_serial4746:                               ; preds = %correct_class4745
  %cast4758 = ptrtoint %"struct.rubinius::Object"* %stack_load4756 to i64, !dbg !119
  %masked4759 = and i64 %cast4758, 3, !dbg !119
  %is_reference4760 = icmp eq i64 %masked4759, 0, !dbg !119
  br i1 %is_reference4760, label %check_class_id4761, label %continue4757, !dbg !119

serial_fallback4737:                              ; preds = %correct_class4745
  store i32 297, i32* %8, align 4, !dbg !119
  %323 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 297, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !119
  br label %return_pad, !dbg !119

check_class_id4761:                               ; preds = %correct_serial4746
  %class_pos4763 = getelementptr %"struct.rubinius::Object"* %stack_load4756, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4764 = load %"struct.rubinius::Class"** %class_pos4763, align 8, !dbg !119
  %class_id_pos4765 = getelementptr %"struct.rubinius::Class"* %ref_class4764, i64 0, i32 4, !dbg !119
  %class_id4766 = load i32* %class_id_pos4765, align 4, !dbg !119
  %check_class_id4767 = icmp eq i32 %class_id4766, 77, !dbg !119
  br i1 %check_class_id4767, label %correct_class4762, label %continue4757, !dbg !119

correct_class4762:                                ; preds = %check_class_id4761
  %arg.value_pos4769 = getelementptr %"struct.rubinius::Object"* %stack_load4756, i64 1, !dbg !119
  %324 = bitcast %"struct.rubinius::Object"* %arg.value_pos4769 to double*, !dbg !119
  %farg4770 = load double* %324, align 8, !dbg !119
  br label %continue4771, !dbg !119

continue4757:                                     ; preds = %check_class_id4761, %correct_serial4746
  %masked4773 = and i64 %cast4758, 1, !dbg !119
  %is_fixnum4774 = icmp eq i64 %masked4773, 0, !dbg !119
  br i1 %is_fixnum4774, label %class_fallback4736, label %guarded_body4775, !dbg !119

guarded_body4775:                                 ; preds = %continue4757
  %ashr4777 = ashr i64 %cast4758, 1, !dbg !119
  %325 = sitofp i64 %ashr4777 to double, !dbg !119
  br label %continue4771, !dbg !119

continue4771:                                     ; preds = %guarded_body4775, %correct_class4762
  %rhs4778 = phi double [ %farg4770, %correct_class4762 ], [ %325, %guarded_body4775 ], !dbg !119
  %self.value_pos4782 = getelementptr %"struct.rubinius::Object"* %local4711, i64 1, !dbg !119
  %326 = bitcast %"struct.rubinius::Object"* %self.value_pos4782 to double*, !dbg !119
  %fself4783 = load double* %326, align 8, !dbg !119
  %float.mul4784 = fmul double %rhs4778, %fself4783, !dbg !119
  %result4785 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !119, !rbx-classid !84
  %327 = getelementptr %"struct.rubinius::Float"* %result4785, i64 0, i32 1, !dbg !119
  store double %float.mul4784, double* %327, align 8, !dbg !119
  %328 = getelementptr inbounds %"struct.rubinius::Float"* %result4785, i64 0, i32 0, i32 0, !dbg !119
  br label %continue4738, !dbg !119

class_fallback4736:                               ; preds = %continue4757, %check_class_id4744, %continue4714
  store %"struct.rubinius::Object"* %local4711, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !119
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !119
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !119
  store i32 1, i32* %out_args_total, align 8, !dbg !119
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !119
  store %"struct.rubinius::Object"** %stack_pos4507, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !119
  %cache_const4789 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550784 to %"struct.rubinius::CallSite"**), align 512, !dbg !119
  %execute_pos4790 = getelementptr %"struct.rubinius::CallSite"* %cache_const4789, i64 0, i32 2, !dbg !119
  %execute4791 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4790, align 8, !dbg !119
  store i32 297, i32* %8, align 4, !dbg !119
  %call_site_execute4792 = call %"struct.rubinius::Object"* %execute4791(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4789, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !119
  %null_check4794 = icmp eq %"struct.rubinius::Object"* %call_site_execute4792, null, !dbg !119
  br i1 %null_check4794, label %bail_out, label %class_fallback4736.continue4738_crit_edge, !dbg !119

class_fallback4736.continue4738_crit_edge:        ; preds = %class_fallback4736
  %stack_load4801.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !119
  br label %continue4738, !dbg !119

continue4799:                                     ; preds = %class_fallback4797, %continue4832
  %send_result4856 = phi %"struct.rubinius::Object"* [ %334, %continue4832 ], [ %call_site_execute4853, %class_fallback4797 ], !dbg !119
  store %"struct.rubinius::Object"* %send_result4856, %"struct.rubinius::Object"** %stack, align 8, !dbg !119
  %self4858 = load %"struct.rubinius::Object"** %14, align 8, !dbg !119
  %cast4863 = ptrtoint %"struct.rubinius::Object"* %self4858 to i64, !dbg !119
  %masked4864 = and i64 %cast4863, 3, !dbg !119
  %is_reference4865 = icmp eq i64 %masked4864, 0, !dbg !119
  br i1 %is_reference4865, label %check_class_id4866, label %visit_push_ivar_fallback4861, !dbg !119

check_class_id4805:                               ; preds = %continue4738
  %class_pos4808 = getelementptr %"struct.rubinius::Object"* %stack_load4801, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4809 = load %"struct.rubinius::Class"** %class_pos4808, align 8, !dbg !119
  %class_id_pos4810 = getelementptr %"struct.rubinius::Class"* %ref_class4809, i64 0, i32 4, !dbg !119
  %class_id4811 = load i32* %class_id_pos4810, align 4, !dbg !119
  %check_class_id4812 = icmp eq i32 %class_id4811, 77, !dbg !119
  br i1 %check_class_id4812, label %correct_class4806, label %class_fallback4797, !dbg !119

correct_class4806:                                ; preds = %check_class_id4805
  %serial_id_pos4813 = getelementptr %"struct.rubinius::Class"* %ref_class4809, i64 0, i32 5, !dbg !119
  %serial_id4814 = load i32* %serial_id_pos4813, align 4, !dbg !119
  %check_serial_id4815 = icmp eq i32 %serial_id4814, 224, !dbg !119
  br i1 %check_serial_id4815, label %correct_serial4807, label %serial_fallback4798, !dbg !119

correct_serial4807:                               ; preds = %correct_class4806
  %cast4819 = ptrtoint %"struct.rubinius::Object"* %send_result4795 to i64, !dbg !119
  %masked4820 = and i64 %cast4819, 3, !dbg !119
  %is_reference4821 = icmp eq i64 %masked4820, 0, !dbg !119
  br i1 %is_reference4821, label %check_class_id4822, label %continue4818, !dbg !119

serial_fallback4798:                              ; preds = %correct_class4806
  store i32 300, i32* %8, align 4, !dbg !119
  %329 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 300, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !119
  br label %return_pad, !dbg !119

check_class_id4822:                               ; preds = %correct_serial4807
  %class_pos4824 = getelementptr %"struct.rubinius::Object"* %send_result4795, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4825 = load %"struct.rubinius::Class"** %class_pos4824, align 8, !dbg !119
  %class_id_pos4826 = getelementptr %"struct.rubinius::Class"* %ref_class4825, i64 0, i32 4, !dbg !119
  %class_id4827 = load i32* %class_id_pos4826, align 4, !dbg !119
  %check_class_id4828 = icmp eq i32 %class_id4827, 77, !dbg !119
  br i1 %check_class_id4828, label %correct_class4823, label %continue4818, !dbg !119

correct_class4823:                                ; preds = %check_class_id4822
  %arg.value_pos4830 = getelementptr %"struct.rubinius::Object"* %send_result4795, i64 1, !dbg !119
  %330 = bitcast %"struct.rubinius::Object"* %arg.value_pos4830 to double*, !dbg !119
  %farg4831 = load double* %330, align 8, !dbg !119
  br label %continue4832, !dbg !119

continue4818:                                     ; preds = %check_class_id4822, %correct_serial4807
  %masked4834 = and i64 %cast4819, 1, !dbg !119
  %is_fixnum4835 = icmp eq i64 %masked4834, 0, !dbg !119
  br i1 %is_fixnum4835, label %class_fallback4797, label %guarded_body4836, !dbg !119

guarded_body4836:                                 ; preds = %continue4818
  %ashr4838 = ashr i64 %cast4819, 1, !dbg !119
  %331 = sitofp i64 %ashr4838 to double, !dbg !119
  br label %continue4832, !dbg !119

continue4832:                                     ; preds = %guarded_body4836, %correct_class4823
  %rhs4839 = phi double [ %farg4831, %correct_class4823 ], [ %331, %guarded_body4836 ], !dbg !119
  %self.value_pos4843 = getelementptr %"struct.rubinius::Object"* %stack_load4801, i64 1, !dbg !119
  %332 = bitcast %"struct.rubinius::Object"* %self.value_pos4843 to double*, !dbg !119
  %fself4844 = load double* %332, align 8, !dbg !119
  %float.add4845 = fadd double %rhs4839, %fself4844, !dbg !119
  %result4846 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !119, !rbx-classid !84
  %333 = getelementptr %"struct.rubinius::Float"* %result4846, i64 0, i32 1, !dbg !119
  store double %float.add4845, double* %333, align 8, !dbg !119
  %334 = getelementptr inbounds %"struct.rubinius::Float"* %result4846, i64 0, i32 0, i32 0, !dbg !119
  br label %continue4799, !dbg !119

class_fallback4797:                               ; preds = %continue4818, %check_class_id4805, %continue4738
  store %"struct.rubinius::Object"* %stack_load4801, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !119
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !119
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !119
  store i32 1, i32* %out_args_total, align 8, !dbg !119
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !119
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !119
  %cache_const4850 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550808 to %"struct.rubinius::CallSite"**), align 8, !dbg !119
  %execute_pos4851 = getelementptr %"struct.rubinius::CallSite"* %cache_const4850, i64 0, i32 2, !dbg !119
  %execute4852 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4851, align 8, !dbg !119
  store i32 300, i32* %8, align 4, !dbg !119
  %call_site_execute4853 = call %"struct.rubinius::Object"* %execute4852(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4850, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !119
  %null_check4855 = icmp eq %"struct.rubinius::Object"* %call_site_execute4853, null, !dbg !119
  br i1 %null_check4855, label %bail_out, label %continue4799, !dbg !119

continue4862:                                     ; preds = %visit_push_ivar_fallback4861, %correct_class4867, %run_barrier4880, %reference_obj4878
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  %self4898 = load %"struct.rubinius::Object"** %14, align 8, !dbg !21
  %cast4899 = ptrtoint %"struct.rubinius::Object"* %self4898 to i64, !dbg !21
  %masked4900 = and i64 %cast4899, 3, !dbg !21
  %is_reference4901 = icmp eq i64 %masked4900, 0, !dbg !21
  br i1 %is_reference4901, label %check_class_id4902, label %visit_push_ivar_fallback4895, !dbg !21

check_class_id4866:                               ; preds = %continue4799
  %class_pos4868 = getelementptr %"struct.rubinius::Object"* %self4858, i64 0, i32 0, i32 1, !dbg !119
  %ref_class4869 = load %"struct.rubinius::Class"** %class_pos4868, align 8, !dbg !119
  %class_id_pos4870 = getelementptr %"struct.rubinius::Class"* %ref_class4869, i64 0, i32 4, !dbg !119
  %class_id4871 = load i32* %class_id_pos4870, align 4, !dbg !119
  %check_class_id4872 = icmp eq i32 %class_id4871, 1285, !dbg !119
  br i1 %check_class_id4872, label %correct_class4867, label %visit_push_ivar_fallback4861, !dbg !119

correct_class4867:                                ; preds = %check_class_id4866
  %field_pos4874 = getelementptr %"struct.rubinius::Object"* %self4858, i64 1, i32 0, i32 1, !dbg !119
  %send_result4856.c = bitcast %"struct.rubinius::Object"* %send_result4856 to %"struct.rubinius::Class"*, !dbg !119
  store %"struct.rubinius::Class"* %send_result4856.c, %"struct.rubinius::Class"** %field_pos4874, align 8, !dbg !119
  %cast4875 = ptrtoint %"struct.rubinius::Object"* %send_result4856 to i64, !dbg !119
  %masked4876 = and i64 %cast4875, 3, !dbg !119
  %is_reference4877 = icmp eq i64 %masked4876, 0, !dbg !119
  br i1 %is_reference4877, label %reference_obj4878, label %continue4862, !dbg !119

visit_push_ivar_fallback4861:                     ; preds = %check_class_id4866, %continue4799
  %ivar4891 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self4858, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result4856), !dbg !119
  %null_check4894 = icmp eq %"struct.rubinius::Object"* %ivar4891, null, !dbg !119
  br i1 %null_check4894, label %bail_out, label %continue4862, !dbg !119

reference_obj4878:                                ; preds = %correct_class4867
  %object_memory_mark4882 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !119
  %word_pos4883 = getelementptr %"struct.rubinius::Object"* %self4858, i64 0, i32 0, i32 0, i32 0, !dbg !119
  %flags4884 = load i64* %word_pos4883, align 8, !dbg !119
  %mark_mask4885 = and i64 %flags4884, 3670016, !dbg !119
  %scan_mark4886 = add i32 %object_memory_mark4882, 1, !dbg !119
  %335 = zext i32 %scan_mark4886 to i64, !dbg !119
  %lshr4887 = shl nuw nsw i64 %335, 19, !dbg !119
  %is_scanned4888 = icmp ne i64 %mark_mask4885, %lshr4887, !dbg !119
  %zone_mask4889 = and i64 %flags4884, 768, !dbg !119
  %is_young4890 = icmp eq i64 %zone_mask4889, 512, !dbg !119
  %or.cond5122 = and i1 %is_scanned4888, %is_young4890, !dbg !119
  br i1 %or.cond5122, label %continue4862, label %run_barrier4880, !dbg !119

run_barrier4880:                                  ; preds = %reference_obj4878
  %336 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4858, %"struct.rubinius::Object"* %send_result4856), !dbg !119
  br label %continue4862, !dbg !119

continue4896:                                     ; preds = %visit_push_ivar_fallback4895, %correct_class4903
  %storemerge5158 = phi %"struct.rubinius::Object"* [ %"select ivar4913", %correct_class4903 ], [ %ivar4916, %visit_push_ivar_fallback4895 ]
  store %"struct.rubinius::Object"* %storemerge5158, %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  %local4919 = load %"struct.rubinius::Object"** %23, align 8, !dbg !21, !rbx-classid !32
  store %"struct.rubinius::Object"* %local4919, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !21
  br i1 %is_reference4901, label %check_class_id4928, label %visit_push_ivar_fallback4921, !dbg !21

check_class_id4902:                               ; preds = %continue4862
  %class_pos4904 = getelementptr %"struct.rubinius::Object"* %self4898, i64 0, i32 0, i32 1, !dbg !21
  %ref_class4905 = load %"struct.rubinius::Class"** %class_pos4904, align 8, !dbg !21
  %class_id_pos4906 = getelementptr %"struct.rubinius::Class"* %ref_class4905, i64 0, i32 4, !dbg !21
  %class_id4907 = load i32* %class_id_pos4906, align 4, !dbg !21
  %check_class_id4908 = icmp eq i32 %class_id4907, 1285, !dbg !21
  br i1 %check_class_id4908, label %correct_class4903, label %visit_push_ivar_fallback4895, !dbg !21

correct_class4903:                                ; preds = %check_class_id4902
  %337 = getelementptr %"struct.rubinius::Object"* %self4898, i64 1, i32 0, i32 2, !dbg !21
  %field4911 = load %"struct.rubinius::Object"** %337, align 8, !dbg !21
  %prune_undef4912 = icmp eq %"struct.rubinius::Object"* %field4911, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !21
  %"select ivar4913" = select i1 %prune_undef4912, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4911, !dbg !21
  br label %continue4896, !dbg !21

visit_push_ivar_fallback4895:                     ; preds = %check_class_id4902, %continue4862
  %ivar4916 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4898, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !21
  br label %continue4896, !dbg !21

continue4922:                                     ; preds = %visit_push_ivar_fallback4921, %correct_class4929
  %stack_load4964 = phi %"struct.rubinius::Object"* [ %"select ivar4939", %correct_class4929 ], [ %ivar4942, %visit_push_ivar_fallback4921 ]
  store %"struct.rubinius::Object"* %stack_load4964, %"struct.rubinius::Object"** %stack_pos4507, align 8, !dbg !21
  %cast4949 = ptrtoint %"struct.rubinius::Object"* %local4919 to i64, !dbg !21
  %masked4950 = and i64 %cast4949, 3, !dbg !21
  %is_reference4951 = icmp eq i64 %masked4950, 0, !dbg !21
  br i1 %is_reference4951, label %check_class_id4952, label %class_fallback4944, !dbg !21

check_class_id4928:                               ; preds = %continue4896
  %class_pos4930 = getelementptr %"struct.rubinius::Object"* %self4898, i64 0, i32 0, i32 1, !dbg !21
  %ref_class4931 = load %"struct.rubinius::Class"** %class_pos4930, align 8, !dbg !21
  %class_id_pos4932 = getelementptr %"struct.rubinius::Class"* %ref_class4931, i64 0, i32 4, !dbg !21
  %class_id4933 = load i32* %class_id_pos4932, align 4, !dbg !21
  %check_class_id4934 = icmp eq i32 %class_id4933, 1285, !dbg !21
  br i1 %check_class_id4934, label %correct_class4929, label %visit_push_ivar_fallback4921, !dbg !21

correct_class4929:                                ; preds = %check_class_id4928
  %338 = getelementptr %"struct.rubinius::Object"* %self4898, i64 2, i32 0, i32 2, !dbg !21
  %field4937 = load %"struct.rubinius::Object"** %338, align 8, !dbg !21
  %prune_undef4938 = icmp eq %"struct.rubinius::Object"* %field4937, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !21
  %"select ivar4939" = select i1 %prune_undef4938, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field4937, !dbg !21
  br label %continue4922, !dbg !21

visit_push_ivar_fallback4921:                     ; preds = %check_class_id4928, %continue4896
  %ivar4942 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self4898, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !21
  br label %continue4922, !dbg !21

continue4946:                                     ; preds = %class_fallback4944.continue4946_crit_edge, %continue4979
  %stack_load5009 = phi %"struct.rubinius::Object"* [ %storemerge5158, %continue4979 ], [ %stack_load5009.pre, %class_fallback4944.continue4946_crit_edge ]
  %send_result5003 = phi %"struct.rubinius::Object"* [ %344, %continue4979 ], [ %call_site_execute5000, %class_fallback4944.continue4946_crit_edge ], !dbg !21
  store %"struct.rubinius::Object"* %send_result5003, %"struct.rubinius::Object"** %stack_pos19, align 8, !dbg !21
  %cast5010 = ptrtoint %"struct.rubinius::Object"* %stack_load5009 to i64, !dbg !21
  %masked5011 = and i64 %cast5010, 3, !dbg !21
  %is_reference5012 = icmp eq i64 %masked5011, 0, !dbg !21
  br i1 %is_reference5012, label %check_class_id5013, label %class_fallback5005, !dbg !21

check_class_id4952:                               ; preds = %continue4922
  %class_pos4955 = getelementptr %"struct.rubinius::Object"* %local4919, i64 0, i32 0, i32 1, !dbg !21
  %ref_class4956 = load %"struct.rubinius::Class"** %class_pos4955, align 8, !dbg !21
  %class_id_pos4957 = getelementptr %"struct.rubinius::Class"* %ref_class4956, i64 0, i32 4, !dbg !21
  %class_id4958 = load i32* %class_id_pos4957, align 4, !dbg !21
  %check_class_id4959 = icmp eq i32 %class_id4958, 77, !dbg !21
  br i1 %check_class_id4959, label %correct_class4953, label %class_fallback4944, !dbg !21

correct_class4953:                                ; preds = %check_class_id4952
  %serial_id_pos4960 = getelementptr %"struct.rubinius::Class"* %ref_class4956, i64 0, i32 5, !dbg !21
  %serial_id4961 = load i32* %serial_id_pos4960, align 4, !dbg !21
  %check_serial_id4962 = icmp eq i32 %serial_id4961, 224, !dbg !21
  br i1 %check_serial_id4962, label %correct_serial4954, label %serial_fallback4945, !dbg !21

correct_serial4954:                               ; preds = %correct_class4953
  %cast4966 = ptrtoint %"struct.rubinius::Object"* %stack_load4964 to i64, !dbg !21
  %masked4967 = and i64 %cast4966, 3, !dbg !21
  %is_reference4968 = icmp eq i64 %masked4967, 0, !dbg !21
  br i1 %is_reference4968, label %check_class_id4969, label %continue4965, !dbg !21

serial_fallback4945:                              ; preds = %correct_class4953
  store i32 312, i32* %8, align 4, !dbg !21
  %339 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 312, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !21
  br label %return_pad, !dbg !21

check_class_id4969:                               ; preds = %correct_serial4954
  %class_pos4971 = getelementptr %"struct.rubinius::Object"* %stack_load4964, i64 0, i32 0, i32 1, !dbg !21
  %ref_class4972 = load %"struct.rubinius::Class"** %class_pos4971, align 8, !dbg !21
  %class_id_pos4973 = getelementptr %"struct.rubinius::Class"* %ref_class4972, i64 0, i32 4, !dbg !21
  %class_id4974 = load i32* %class_id_pos4973, align 4, !dbg !21
  %check_class_id4975 = icmp eq i32 %class_id4974, 77, !dbg !21
  br i1 %check_class_id4975, label %correct_class4970, label %continue4965, !dbg !21

correct_class4970:                                ; preds = %check_class_id4969
  %arg.value_pos4977 = getelementptr %"struct.rubinius::Object"* %stack_load4964, i64 1, !dbg !21
  %340 = bitcast %"struct.rubinius::Object"* %arg.value_pos4977 to double*, !dbg !21
  %farg4978 = load double* %340, align 8, !dbg !21
  br label %continue4979, !dbg !21

continue4965:                                     ; preds = %check_class_id4969, %correct_serial4954
  %masked4981 = and i64 %cast4966, 1, !dbg !21
  %is_fixnum4982 = icmp eq i64 %masked4981, 0, !dbg !21
  br i1 %is_fixnum4982, label %class_fallback4944, label %guarded_body4983, !dbg !21

guarded_body4983:                                 ; preds = %continue4965
  %ashr4985 = ashr i64 %cast4966, 1, !dbg !21
  %341 = sitofp i64 %ashr4985 to double, !dbg !21
  br label %continue4979, !dbg !21

continue4979:                                     ; preds = %guarded_body4983, %correct_class4970
  %rhs4986 = phi double [ %farg4978, %correct_class4970 ], [ %341, %guarded_body4983 ], !dbg !21
  %self.value_pos4990 = getelementptr %"struct.rubinius::Object"* %local4919, i64 1, !dbg !21
  %342 = bitcast %"struct.rubinius::Object"* %self.value_pos4990 to double*, !dbg !21
  %fself4991 = load double* %342, align 8, !dbg !21
  %float.mul4992 = fmul double %rhs4986, %fself4991, !dbg !21
  %result4993 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !21, !rbx-classid !84
  %343 = getelementptr %"struct.rubinius::Float"* %result4993, i64 0, i32 1, !dbg !21
  store double %float.mul4992, double* %343, align 8, !dbg !21
  %344 = getelementptr inbounds %"struct.rubinius::Float"* %result4993, i64 0, i32 0, i32 0, !dbg !21
  br label %continue4946, !dbg !21

class_fallback4944:                               ; preds = %continue4965, %check_class_id4952, %continue4922
  store %"struct.rubinius::Object"* %local4919, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !21
  store i32 1, i32* %out_args_total, align 8, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos4507, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !21
  %cache_const4997 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550904 to %"struct.rubinius::CallSite"**), align 8, !dbg !21
  %execute_pos4998 = getelementptr %"struct.rubinius::CallSite"* %cache_const4997, i64 0, i32 2, !dbg !21
  %execute4999 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos4998, align 8, !dbg !21
  store i32 312, i32* %8, align 4, !dbg !21
  %call_site_execute5000 = call %"struct.rubinius::Object"* %execute4999(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const4997, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check5002 = icmp eq %"struct.rubinius::Object"* %call_site_execute5000, null, !dbg !21
  br i1 %null_check5002, label %bail_out, label %class_fallback4944.continue4946_crit_edge, !dbg !21

class_fallback4944.continue4946_crit_edge:        ; preds = %class_fallback4944
  %stack_load5009.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  br label %continue4946, !dbg !21

continue5007:                                     ; preds = %class_fallback5005, %continue5040
  %send_result5064 = phi %"struct.rubinius::Object"* [ %350, %continue5040 ], [ %call_site_execute5061, %class_fallback5005 ], !dbg !21
  store %"struct.rubinius::Object"* %send_result5064, %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  %self5066 = load %"struct.rubinius::Object"** %14, align 8, !dbg !21
  %cast5071 = ptrtoint %"struct.rubinius::Object"* %self5066 to i64, !dbg !21
  %masked5072 = and i64 %cast5071, 3, !dbg !21
  %is_reference5073 = icmp eq i64 %masked5072, 0, !dbg !21
  br i1 %is_reference5073, label %check_class_id5074, label %visit_push_ivar_fallback5069, !dbg !21

check_class_id5013:                               ; preds = %continue4946
  %class_pos5016 = getelementptr %"struct.rubinius::Object"* %stack_load5009, i64 0, i32 0, i32 1, !dbg !21
  %ref_class5017 = load %"struct.rubinius::Class"** %class_pos5016, align 8, !dbg !21
  %class_id_pos5018 = getelementptr %"struct.rubinius::Class"* %ref_class5017, i64 0, i32 4, !dbg !21
  %class_id5019 = load i32* %class_id_pos5018, align 4, !dbg !21
  %check_class_id5020 = icmp eq i32 %class_id5019, 77, !dbg !21
  br i1 %check_class_id5020, label %correct_class5014, label %class_fallback5005, !dbg !21

correct_class5014:                                ; preds = %check_class_id5013
  %serial_id_pos5021 = getelementptr %"struct.rubinius::Class"* %ref_class5017, i64 0, i32 5, !dbg !21
  %serial_id5022 = load i32* %serial_id_pos5021, align 4, !dbg !21
  %check_serial_id5023 = icmp eq i32 %serial_id5022, 224, !dbg !21
  br i1 %check_serial_id5023, label %correct_serial5015, label %serial_fallback5006, !dbg !21

correct_serial5015:                               ; preds = %correct_class5014
  %cast5027 = ptrtoint %"struct.rubinius::Object"* %send_result5003 to i64, !dbg !21
  %masked5028 = and i64 %cast5027, 3, !dbg !21
  %is_reference5029 = icmp eq i64 %masked5028, 0, !dbg !21
  br i1 %is_reference5029, label %check_class_id5030, label %continue5026, !dbg !21

serial_fallback5006:                              ; preds = %correct_class5014
  store i32 315, i32* %8, align 4, !dbg !21
  %345 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 315, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135376 to i8*), i32 0, i8 1), !dbg !21
  br label %return_pad, !dbg !21

check_class_id5030:                               ; preds = %correct_serial5015
  %class_pos5032 = getelementptr %"struct.rubinius::Object"* %send_result5003, i64 0, i32 0, i32 1, !dbg !21
  %ref_class5033 = load %"struct.rubinius::Class"** %class_pos5032, align 8, !dbg !21
  %class_id_pos5034 = getelementptr %"struct.rubinius::Class"* %ref_class5033, i64 0, i32 4, !dbg !21
  %class_id5035 = load i32* %class_id_pos5034, align 4, !dbg !21
  %check_class_id5036 = icmp eq i32 %class_id5035, 77, !dbg !21
  br i1 %check_class_id5036, label %correct_class5031, label %continue5026, !dbg !21

correct_class5031:                                ; preds = %check_class_id5030
  %arg.value_pos5038 = getelementptr %"struct.rubinius::Object"* %send_result5003, i64 1, !dbg !21
  %346 = bitcast %"struct.rubinius::Object"* %arg.value_pos5038 to double*, !dbg !21
  %farg5039 = load double* %346, align 8, !dbg !21
  br label %continue5040, !dbg !21

continue5026:                                     ; preds = %check_class_id5030, %correct_serial5015
  %masked5042 = and i64 %cast5027, 1, !dbg !21
  %is_fixnum5043 = icmp eq i64 %masked5042, 0, !dbg !21
  br i1 %is_fixnum5043, label %class_fallback5005, label %guarded_body5044, !dbg !21

guarded_body5044:                                 ; preds = %continue5026
  %ashr5046 = ashr i64 %cast5027, 1, !dbg !21
  %347 = sitofp i64 %ashr5046 to double, !dbg !21
  br label %continue5040, !dbg !21

continue5040:                                     ; preds = %guarded_body5044, %correct_class5031
  %rhs5047 = phi double [ %farg5039, %correct_class5031 ], [ %347, %guarded_body5044 ], !dbg !21
  %self.value_pos5051 = getelementptr %"struct.rubinius::Object"* %stack_load5009, i64 1, !dbg !21
  %348 = bitcast %"struct.rubinius::Object"* %self.value_pos5051 to double*, !dbg !21
  %fself5052 = load double* %348, align 8, !dbg !21
  %float.add5053 = fadd double %rhs5047, %fself5052, !dbg !21
  %result5054 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !21, !rbx-classid !84
  %349 = getelementptr %"struct.rubinius::Float"* %result5054, i64 0, i32 1, !dbg !21
  store double %float.add5053, double* %349, align 8, !dbg !21
  %350 = getelementptr inbounds %"struct.rubinius::Float"* %result5054, i64 0, i32 0, i32 0, !dbg !21
  br label %continue5007, !dbg !21

class_fallback5005:                               ; preds = %continue5026, %check_class_id5013, %continue4946
  store %"struct.rubinius::Object"* %stack_load5009, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !21
  store i32 1, i32* %out_args_total, align 8, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !21
  %cache_const5058 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550928 to %"struct.rubinius::CallSite"**), align 16, !dbg !21
  %execute_pos5059 = getelementptr %"struct.rubinius::CallSite"* %cache_const5058, i64 0, i32 2, !dbg !21
  %execute5060 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos5059, align 8, !dbg !21
  store i32 315, i32* %8, align 4, !dbg !21
  %call_site_execute5061 = call %"struct.rubinius::Object"* %execute5060(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const5058, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check5063 = icmp eq %"struct.rubinius::Object"* %call_site_execute5061, null, !dbg !21
  br i1 %null_check5063, label %bail_out, label %continue5007, !dbg !21

continue5070:                                     ; preds = %visit_push_ivar_fallback5069, %correct_class5075, %run_barrier5088, %reference_obj5086
  %stack_load5104 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  br label %return_pad, !dbg !21

return_pad:                                       ; preds = %prologue_check, %bail_out, %continue5070, %serial_fallback5006, %serial_fallback4945, %serial_fallback4798, %serial_fallback4737, %serial_fallback4590, %serial_fallback4529, %serial_fallback4385, %class_fallback4384, %serial_fallback4312, %serial_fallback4251, %serial_fallback4184, %class_fallback4183, %serial_fallback4111, %serial_fallback4050, %serial_fallback3983, %class_fallback3982, %serial_fallback3910, %serial_fallback3849, %serial_fallback3726, %serial_fallback3665, %serial_fallback3538, %serial_fallback3477, %serial_fallback3361, %serial_fallback3300, %serial_fallback3184, %serial_fallback3104, %serial_fallback3015, %serial_fallback2954, %serial_fallback2890, %serial_fallback2427, %class_fallback2426, %serial_fallback2366, %serial_fallback2305, %serial_fallback2239, %serial_fallback2178, %serial_fallback2112, %serial_fallback2020, %serial_fallback1917, %serial_fallback1823, %serial_fallback1796, %class_fallback1795, %serial_fallback38, %class_fallback37, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %30, %class_fallback37 ], [ %39, %serial_fallback38 ], [ %90, %class_fallback1795 ], [ %91, %serial_fallback1796 ], [ %93, %serial_fallback1823 ], [ %102, %serial_fallback1917 ], [ %112, %serial_fallback2020 ], [ %118, %serial_fallback2112 ], [ %122, %serial_fallback2178 ], [ %126, %serial_fallback2239 ], [ %132, %serial_fallback2305 ], [ %136, %serial_fallback2366 ], [ %142, %class_fallback2426 ], [ %158, %serial_fallback2427 ], [ %174, %serial_fallback2890 ], [ %178, %serial_fallback2954 ], [ %185, %serial_fallback3015 ], [ %191, %serial_fallback3104 ], [ %200, %serial_fallback3184 ], [ %206, %serial_fallback3300 ], [ %212, %serial_fallback3361 ], [ %222, %serial_fallback3477 ], [ %228, %serial_fallback3538 ], [ %237, %serial_fallback3665 ], [ %243, %serial_fallback3726 ], [ %252, %serial_fallback3849 ], [ %258, %serial_fallback3910 ], [ %264, %class_fallback3982 ], [ %266, %serial_fallback3983 ], [ %270, %serial_fallback4050 ], [ %276, %serial_fallback4111 ], [ %282, %class_fallback4183 ], [ %283, %serial_fallback4184 ], [ %287, %serial_fallback4251 ], [ %293, %serial_fallback4312 ], [ %299, %class_fallback4384 ], [ %301, %serial_fallback4385 ], [ %306, %serial_fallback4529 ], [ %312, %serial_fallback4590 ], [ %323, %serial_fallback4737 ], [ %329, %serial_fallback4798 ], [ %339, %serial_fallback4945 ], [ %345, %serial_fallback5006 ], [ %stack_load5104, %continue5070 ], [ null, %bail_out ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !21

check_class_id5074:                               ; preds = %continue5007
  %class_pos5076 = getelementptr %"struct.rubinius::Object"* %self5066, i64 0, i32 0, i32 1, !dbg !21
  %ref_class5077 = load %"struct.rubinius::Class"** %class_pos5076, align 8, !dbg !21
  %class_id_pos5078 = getelementptr %"struct.rubinius::Class"* %ref_class5077, i64 0, i32 4, !dbg !21
  %class_id5079 = load i32* %class_id_pos5078, align 4, !dbg !21
  %check_class_id5080 = icmp eq i32 %class_id5079, 1285, !dbg !21
  br i1 %check_class_id5080, label %correct_class5075, label %visit_push_ivar_fallback5069, !dbg !21

correct_class5075:                                ; preds = %check_class_id5074
  %351 = getelementptr %"struct.rubinius::Object"* %self5066, i64 1, i32 0, i32 2, !dbg !21
  store %"struct.rubinius::Object"* %send_result5064, %"struct.rubinius::Object"** %351, align 8, !dbg !21
  %cast5083 = ptrtoint %"struct.rubinius::Object"* %send_result5064 to i64, !dbg !21
  %masked5084 = and i64 %cast5083, 3, !dbg !21
  %is_reference5085 = icmp eq i64 %masked5084, 0, !dbg !21
  br i1 %is_reference5085, label %reference_obj5086, label %continue5070, !dbg !21

visit_push_ivar_fallback5069:                     ; preds = %check_class_id5074, %continue5007
  %ivar5099 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %self5066, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result5064), !dbg !21
  %null_check5102 = icmp eq %"struct.rubinius::Object"* %ivar5099, null, !dbg !21
  br i1 %null_check5102, label %bail_out, label %continue5070, !dbg !21

reference_obj5086:                                ; preds = %correct_class5075
  %object_memory_mark5090 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !21
  %word_pos5091 = getelementptr %"struct.rubinius::Object"* %self5066, i64 0, i32 0, i32 0, i32 0, !dbg !21
  %flags5092 = load i64* %word_pos5091, align 8, !dbg !21
  %mark_mask5093 = and i64 %flags5092, 3670016, !dbg !21
  %scan_mark5094 = add i32 %object_memory_mark5090, 1, !dbg !21
  %352 = zext i32 %scan_mark5094 to i64, !dbg !21
  %lshr5095 = shl nuw nsw i64 %352, 19, !dbg !21
  %is_scanned5096 = icmp ne i64 %mark_mask5093, %lshr5095, !dbg !21
  %zone_mask5097 = and i64 %flags5092, 768, !dbg !21
  %is_young5098 = icmp eq i64 %zone_mask5097, 512, !dbg !21
  %or.cond5123 = and i1 %is_scanned5096, %is_young5098, !dbg !21
  br i1 %or.cond5123, label %continue5070, label %run_barrier5088, !dbg !21

run_barrier5088:                                  ; preds = %reference_obj5086
  %353 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self5066, %"struct.rubinius::Object"* %send_result5064), !dbg !21
  br label %continue5070, !dbg !21

prologue_check:                                   ; preds = %bottom1
  %ci5110 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !21
  %354 = icmp eq %"struct.rubinius::Object"* %ci5110, null, !dbg !21
  br i1 %354, label %return_pad, label %method_body, !dbg !21
}

[[[ JIT Machine Code: _X_Planet#move_from_i@2 ]]]
0x7fc7cfaac510  push %rbp               
0x7fc7cfaac511  mov %rsp, %rbp          
0x7fc7cfaac514  push %r15               
0x7fc7cfaac516  push %r14               
0x7fc7cfaac518  push %r13               
0x7fc7cfaac51a  push %r12               
0x7fc7cfaac51c  push %rbx               
0x7fc7cfaac51d  subq $0x368, %rsp       
0x7fc7cfaac524  mov %rdi, %r15          
0x7fc7cfaac527  cmp $0x4, 0x18(%r8)     
0x7fc7cfaac52c  jnz 0x189                ; 0x7fc7cfaac699
0x7fc7cfaac532  mov %rsi, -0x128(%rbp)  
0x7fc7cfaac539  mov %r8, -0xe8(%rbp)    
0x7fc7cfaac540  movq $0x0, -0x118(%rbp) 
0x7fc7cfaac54b  mov %rdx, -0x110(%rbp)  
0x7fc7cfaac552  mov 0xa0(%rdx), %rax    
0x7fc7cfaac559  mov %rax, -0x120(%rbp)  
0x7fc7cfaac560  mov $0x28, -0x108(%rbp) 
0x7fc7cfaac56a  mov $0x0, -0x104(%rbp)  
0x7fc7cfaac574  lea -0x1b8(%rbp), %rax  
0x7fc7cfaac57b  mov %rax, -0xf0(%rbp)   
0x7fc7cfaac582  mov $0x7fc7b4004290, %rax
0x7fc7cfaac58c  mov %rax, -0x100(%rbp)  
0x7fc7cfaac593  movq $0xffffffb8, %rax  
0x7fc7cfaac59a  mov $0x10, %edx         
0x7fc7cfaac59f  lea -0x128(%rbp), %r14  
0x7fc7cfaac5a6  mov %r14, %rsi          
0x7fc7cfaac5a9  sub %rax, %rsi          
0x7fc7cfaac5ac  movq $0x1a, (%rsi)      
0x7fc7cfaac5b3  addq $0xf8, %rax        
0x7fc7cfaac5b7  dec %edx                
0x7fc7cfaac5b9  jnz 0x96                 ; 0x7fc7cfaac5a6
0x7fc7cfaac5bf  movq $0x0, -0x1b8(%rbp) 
0x7fc7cfaac5ca  mov 0x8(%r8), %rax      
0x7fc7cfaac5ce  mov %rax, -0x1a8(%rbp)  
0x7fc7cfaac5d5  mov %rcx, -0x198(%rbp)  
0x7fc7cfaac5dc  mov 0x10(%r8), %rax     
0x7fc7cfaac5e0  mov %rax, -0x1a0(%rbp)  
0x7fc7cfaac5e7  movq $0x0, -0x1b0(%rbp) 
0x7fc7cfaac5f2  movq $0x1a, -0x190(%rbp)
0x7fc7cfaac5fd  lea -0x188(%rbp), %rax  
0x7fc7cfaac604  mov $0xc, %ecx          
0x7fc7cfaac609  movq $0x1a, (%rax)      
0x7fc7cfaac610  addq $0x8, %rax         
0x7fc7cfaac614  dec %ecx                
0x7fc7cfaac616  jnz 0xf9                 ; 0x7fc7cfaac609
0x7fc7cfaac61c  mov 0x20(%r8), %rax     
0x7fc7cfaac620  mov (%rax), %rcx        
0x7fc7cfaac623  mov %rcx, -0x188(%rbp)  
0x7fc7cfaac62a  mov 0x8(%rax), %rcx     
0x7fc7cfaac62e  mov %rcx, -0x180(%rbp)  
0x7fc7cfaac635  mov 0x10(%rax), %rcx    
0x7fc7cfaac639  mov %rcx, -0x178(%rbp)  
0x7fc7cfaac640  mov 0x18(%rax), %rax    
0x7fc7cfaac644  mov %rax, -0x170(%rbp)  
0x7fc7cfaac64b  mov 0x8(%r15), %rax     
0x7fc7cfaac64f  mov 0x158251e, %cl      
0x7fc7cfaac656  or 0x16(%rax), %cl      
0x7fc7cfaac659  jnz 0x159                ; 0x7fc7cfaac669
0x7fc7cfaac65f  cmp 0x8(%rax), %r14     
0x7fc7cfaac663  jae 0x17d                ; 0x7fc7cfaac68d
0x7fc7cfaac669  mov $0x762f80, %rax      ; rbx_prologue_check
0x7fc7cfaac673  lea -0x128(%rbp), %rsi  
0x7fc7cfaac67a  mov %r15, %rdi          
0x7fc7cfaac67d  callq *%rax             
0x7fc7cfaac67f  mov %rax, %rcx          
0x7fc7cfaac682  xor %eax, %eax          
0x7fc7cfaac684  test %rcx, %rcx         
0x7fc7cfaac687  jz 0x655c                ; 0x7fc7cfab2a6c
0x7fc7cfaac68d  lea -0xd8(%rbp), %r12   
0x7fc7cfaac694  jmp 0x4f55               ; 0x7fc7cfab1465
0x7fc7cfaac699  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfaac6a3  mov $0x4, %ecx          
0x7fc7cfaac6a8  mov %r15, %rdi          
0x7fc7cfaac6ab  mov %r8, %rdx           
0x7fc7cfaac6ae  callq *%rax             
0x7fc7cfaac6b0  jmp 0x655c               ; 0x7fc7cfab2a6c
0x7fc7cfaac6b5  mov -0x188(%rbp), %rax  
0x7fc7cfaac6bc  mov %rax, -0xe0(%rbp)   
0x7fc7cfaac6c3  mov -0x170(%rbp), %rbx  
0x7fc7cfaac6ca  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaac6d1  testb $0x3, %al         
0x7fc7cfaac6d4  jnz 0x5042               ; 0x7fc7cfab1552
0x7fc7cfaac6da  mov 0x8(%rax), %rcx     
0x7fc7cfaac6de  cmp $0x6, 0x70(%rcx)    
0x7fc7cfaac6e2  jnz 0x5042               ; 0x7fc7cfab1552
0x7fc7cfaac6e8  cmp $0xf9, 0x74(%rcx)   
0x7fc7cfaac6ef  jnz 0x50b1               ; 0x7fc7cfab15c1
0x7fc7cfaac6f5  mov %r14, -0x268(%rbp)  
0x7fc7cfaac6fc  mov $0x7fc7b40114c0, %rcx
0x7fc7cfaac706  mov %rcx, -0x258(%rbp)  
0x7fc7cfaac70d  mov (%rcx), %rcx        
0x7fc7cfaac710  mov %rcx, -0x250(%rbp)  
0x7fc7cfaac717  mov 0xa0(%rcx), %rcx    
0x7fc7cfaac71e  mov %rcx, -0x260(%rbp)  
0x7fc7cfaac725  mov $0xc, -0x248(%rbp)  
0x7fc7cfaac72f  mov $0x0, -0x244(%rbp)  
0x7fc7cfaac739  lea -0x2c0(%rbp), %rcx  
0x7fc7cfaac740  mov %rcx, -0x230(%rbp)  
0x7fc7cfaac747  mov $0xd, %ecx          
0x7fc7cfaac74c  lea -0x220(%rbp), %rdx  
0x7fc7cfaac753  movq $0x1a, (%rdx)      
0x7fc7cfaac75a  addq $0x8, %rdx         
0x7fc7cfaac75e  dec %ecx                
0x7fc7cfaac760  jnz 0x243                ; 0x7fc7cfaac753
0x7fc7cfaac766  mov $0x7fc7b40114d0, %rcx
0x7fc7cfaac770  mov (%rcx), %rcx        
0x7fc7cfaac773  movq $0x0, -0x2c0(%rbp) 
0x7fc7cfaac77e  mov %rax, -0x2b0(%rbp)  
0x7fc7cfaac785  mov %rcx, -0x2a0(%rbp)  
0x7fc7cfaac78c  movq $0x1a, -0x2a8(%rbp)
0x7fc7cfaac797  movq $0x0, -0x2b8(%rbp) 
0x7fc7cfaac7a2  movq $0x1a, -0x298(%rbp)
0x7fc7cfaac7ad  movq $0x1a, -0x280(%rbp)
0x7fc7cfaac7b8  movq $0x1a, -0x278(%rbp)
0x7fc7cfaac7c3  movq $0x1a, -0x270(%rbp)
0x7fc7cfaac7ce  mov %rbx, -0x290(%rbp)  
0x7fc7cfaac7d5  movq $0x1a, -0x288(%rbp)
0x7fc7cfaac7e0  mov %rbx, -0x220(%rbp)  
0x7fc7cfaac7e7  mov %rbx, -0x218(%rbp)  
0x7fc7cfaac7ee  mov 0x176d1b0, %rax     
0x7fc7cfaac7f6  mov 0x30(%rax), %rcx    
0x7fc7cfaac7fa  mov -0x260(%rbp), %r13  
0x7fc7cfaac801  cmp %r13, %rcx          
0x7fc7cfaac804  jnz 0x30a                ; 0x7fc7cfaac81a
0x7fc7cfaac80a  mov 0x1582514, %ecx     
0x7fc7cfaac811  cmp 0x44(%rax), %ecx    
0x7fc7cfaac814  jz 0x338                 ; 0x7fc7cfaac848
0x7fc7cfaac81a  mov $0xb, -0x244(%rbp)  
0x7fc7cfaac824  mov $0x176d1b0, %edx    
0x7fc7cfaac829  mov %r15, %rdi          
0x7fc7cfaac82c  lea -0x268(%rbp), %rsi  
0x7fc7cfaac833  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaac83d  callq *%rax             
0x7fc7cfaac83f  test %rax, %rax         
0x7fc7cfaac842  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaac848  mov %rbx, -0x210(%rbp)  
0x7fc7cfaac84f  mov %rbx, %rax          
0x7fc7cfaac852  andq $0x1, %rax         
0x7fc7cfaac856  lea 0xa(%rax,8), %rcx   
0x7fc7cfaac85e  mov %rcx, -0x218(%rbp)  
0x7fc7cfaac865  andq $0xa, %rcx         
0x7fc7cfaac869  cmpq $0xa, %rcx         
0x7fc7cfaac86d  jnz 0x395                ; 0x7fc7cfaac8a5
0x7fc7cfaac873  mov %rbx, -0x218(%rbp)  
0x7fc7cfaac87a  mov 0x176d608, %rax     
0x7fc7cfaac882  cmp %r13, 0x30(%rax)    
0x7fc7cfaac886  jnz 0x419                ; 0x7fc7cfaac929
0x7fc7cfaac88c  mov 0x1582514, %ecx     
0x7fc7cfaac893  cmp 0x44(%rax), %ecx    
0x7fc7cfaac896  jnz 0x419                ; 0x7fc7cfaac929
0x7fc7cfaac89c  mov 0x20(%rax), %rax    
0x7fc7cfaac8a0  jmp 0x447                ; 0x7fc7cfaac957
0x7fc7cfaac8a5  mov %rbx, -0x280(%rbp)  
0x7fc7cfaac8ac  mov %rbx, -0x220(%rbp)  
0x7fc7cfaac8b3  movq $0x1, -0x218(%rbp) 
0x7fc7cfaac8be  test %rax, %rax         
0x7fc7cfaac8c1  jnz 0x511                ; 0x7fc7cfaaca21
0x7fc7cfaac8c7  mov %rbx, -0x50(%rbp)   
0x7fc7cfaac8cb  movq $0x586, -0x58(%rbp)
0x7fc7cfaac8d3  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac8db  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac8e2  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac8ea  lea -0x218(%rbp), %rax  
0x7fc7cfaac8f1  mov %rax, -0x38(%rbp)   
0x7fc7cfaac8f5  mov 0x176d238, %rsi     
0x7fc7cfaac8fd  mov 0x20(%rsi), %rax    
0x7fc7cfaac901  mov $0x1c, -0x244(%rbp) 
0x7fc7cfaac90b  mov %r15, %rdi          
0x7fc7cfaac90e  lea -0x268(%rbp), %rdx  
0x7fc7cfaac915  lea -0x58(%rbp), %rcx   
0x7fc7cfaac919  callq *%rax             
0x7fc7cfaac91b  test %rax, %rax         
0x7fc7cfaac91e  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaac924  jmp 0x522                ; 0x7fc7cfaaca32
0x7fc7cfaac929  mov $0x96, -0x244(%rbp) 
0x7fc7cfaac933  mov $0x176d608, %edx    
0x7fc7cfaac938  mov %r15, %rdi          
0x7fc7cfaac93b  lea -0x268(%rbp), %rsi  
0x7fc7cfaac942  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaac94c  callq *%rax             
0x7fc7cfaac94e  test %rax, %rax         
0x7fc7cfaac951  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaac957  mov %rax, -0x218(%rbp)  
0x7fc7cfaac95e  mov %rbx, -0x210(%rbp)  
0x7fc7cfaac965  mov %rax, -0x50(%rbp)   
0x7fc7cfaac969  movq $0x57e, -0x58(%rbp)
0x7fc7cfaac971  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaac979  mov $0x1, -0x40(%rbp)   
0x7fc7cfaac980  movq $0x0, -0x30(%rbp)  
0x7fc7cfaac988  lea -0x210(%rbp), %rax  
0x7fc7cfaac98f  mov %rax, -0x38(%rbp)   
0x7fc7cfaac993  mov 0x176d620, %rsi     
0x7fc7cfaac99b  mov 0x20(%rsi), %rax    
0x7fc7cfaac99f  mov $0x99, -0x244(%rbp) 
0x7fc7cfaac9a9  mov %r15, %rdi          
0x7fc7cfaac9ac  lea -0x268(%rbp), %rdx  
0x7fc7cfaac9b3  lea -0x58(%rbp), %rcx   
0x7fc7cfaac9b7  callq *%rax             
0x7fc7cfaac9b9  test %rax, %rax         
0x7fc7cfaac9bc  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaac9c2  mov %rax, -0x218(%rbp)  
0x7fc7cfaac9c9  andq $0xf, %rax         
0x7fc7cfaac9cd  cmpq $0xa, %rax         
0x7fc7cfaac9d1  jnz 0x60a                ; 0x7fc7cfaacb1a
0x7fc7cfaac9d7  mov -0x290(%rbp), %rbx  
0x7fc7cfaac9de  mov %rbx, -0x220(%rbp)  
0x7fc7cfaac9e5  mov %rbx, -0x218(%rbp)  
0x7fc7cfaac9ec  mov 0x176db40, %rax     
0x7fc7cfaac9f4  mov 0x30(%rax), %rcx    
0x7fc7cfaac9f8  mov -0x260(%rbp), %r13  
0x7fc7cfaac9ff  cmp %r13, %rcx          
0x7fc7cfaaca02  jnz 0x6b2                ; 0x7fc7cfaacbc2
0x7fc7cfaaca08  mov 0x1582514, %ecx     
0x7fc7cfaaca0f  cmp 0x44(%rax), %ecx    
0x7fc7cfaaca12  jnz 0x6b2                ; 0x7fc7cfaacbc2
0x7fc7cfaaca18  mov 0x20(%rax), %rax    
0x7fc7cfaaca1c  jmp 0x6e0                ; 0x7fc7cfaacbf0
0x7fc7cfaaca21  test %rbx, %rbx         
0x7fc7cfaaca24  setle %al               
0x7fc7cfaaca27  movzxb %al, %eax        
0x7fc7cfaaca2a  lea 0xa(%rax,8), %rax   
0x7fc7cfaaca32  mov %rax, -0x220(%rbp)  
0x7fc7cfaaca39  andq $0xf, %rax         
0x7fc7cfaaca3d  cmpq $0xa, %rax         
0x7fc7cfaaca41  jnz 0x547                ; 0x7fc7cfaaca57
0x7fc7cfaaca47  movq $0x1a, -0x220(%rbp)
0x7fc7cfaaca52  jmp 0x728                ; 0x7fc7cfaacc38
0x7fc7cfaaca57  mov -0x280(%rbp), %rax  
0x7fc7cfaaca5e  mov %rax, -0x220(%rbp)  
0x7fc7cfaaca65  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaaca6c  mov 0x18(%rcx), %rsi    
0x7fc7cfaaca70  mov %rsi, -0x218(%rbp)  
0x7fc7cfaaca77  mov %esi, %ecx          
0x7fc7cfaaca79  and %eax, %ecx          
0x7fc7cfaaca7b  testb $0x1, %cl         
0x7fc7cfaaca7e  jnz 0x5d6                ; 0x7fc7cfaacae6
0x7fc7cfaaca84  mov %rax, -0x50(%rbp)   
0x7fc7cfaaca88  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaca90  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaca98  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaca9f  movq $0x0, -0x30(%rbp)  
0x7fc7cfaacaa7  lea -0x218(%rbp), %rax  
0x7fc7cfaacaae  mov %rax, -0x38(%rbp)   
0x7fc7cfaacab2  mov 0x176d280, %rsi     
0x7fc7cfaacaba  mov 0x20(%rsi), %rax    
0x7fc7cfaacabe  mov $0x25, -0x244(%rbp) 
0x7fc7cfaacac8  mov %r15, %rdi          
0x7fc7cfaacacb  lea -0x268(%rbp), %rdx  
0x7fc7cfaacad2  lea -0x58(%rbp), %rcx   
0x7fc7cfaacad6  callq *%rax             
0x7fc7cfaacad8  test %rax, %rax         
0x7fc7cfaacadb  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacae1  jmp 0x71a                ; 0x7fc7cfaacc2a
0x7fc7cfaacae6  sarq $0x1, %rax         
0x7fc7cfaacae9  sarq $0x1, %rsi         
0x7fc7cfaacaec  add %rax, %rsi          
0x7fc7cfaacaef  mov $0x3fffffffffffffff, %rax
0x7fc7cfaacaf9  lea (%rsi,%rax), %rax   
0x7fc7cfaacafd  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaacb07  cmp %rcx, %rax          
0x7fc7cfaacb0a  ja 0x70b                 ; 0x7fc7cfaacc1b
0x7fc7cfaacb10  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaacb15  jmp 0x71a                ; 0x7fc7cfaacc2a
0x7fc7cfaacb1a  mov 0x1584100, %rax     
0x7fc7cfaacb22  mov %rax, -0x220(%rbp)  
0x7fc7cfaacb29  mov -0x290(%rbp), %rax  
0x7fc7cfaacb30  mov %rax, -0x218(%rbp)  
0x7fc7cfaacb37  mov %rax, -0x50(%rbp)   
0x7fc7cfaacb3b  movq $0x496e, -0x58(%rbp)
0x7fc7cfaacb43  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaacb4b  mov $0x0, -0x40(%rbp)   
0x7fc7cfaacb52  movq $0x0, -0x30(%rbp)  
0x7fc7cfaacb5a  mov 0x176d668, %rsi     
0x7fc7cfaacb62  mov 0x20(%rsi), %rax    
0x7fc7cfaacb66  mov $0xa2, -0x244(%rbp) 
0x7fc7cfaacb70  mov %r15, %rdi          
0x7fc7cfaacb73  lea -0x268(%rbp), %rdx  
0x7fc7cfaacb7a  lea -0x58(%rbp), %rcx   
0x7fc7cfaacb7e  callq *%rax             
0x7fc7cfaacb80  test %rax, %rax         
0x7fc7cfaacb83  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacb89  mov %rax, -0x218(%rbp)  
0x7fc7cfaacb90  mov 0x176d680, %rax     
0x7fc7cfaacb98  mov 0x30(%rax), %rcx    
0x7fc7cfaacb9c  cmp -0x260(%rbp), %rcx  
0x7fc7cfaacba3  jnz 0xc41                ; 0x7fc7cfaad151
0x7fc7cfaacba9  mov 0x1582514, %ecx     
0x7fc7cfaacbb0  cmp 0x44(%rax), %ecx    
0x7fc7cfaacbb3  jnz 0xc41                ; 0x7fc7cfaad151
0x7fc7cfaacbb9  mov 0x20(%rax), %rax    
0x7fc7cfaacbbd  jmp 0xc6f                ; 0x7fc7cfaad17f
0x7fc7cfaacbc2  mov $0x13d, -0x244(%rbp)
0x7fc7cfaacbcc  mov $0x176db40, %edx    
0x7fc7cfaacbd1  mov %r15, %rdi          
0x7fc7cfaacbd4  lea -0x268(%rbp), %rsi  
0x7fc7cfaacbdb  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaacbe5  callq *%rax             
0x7fc7cfaacbe7  test %rax, %rax         
0x7fc7cfaacbea  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacbf0  mov %rax, -0x218(%rbp)  
0x7fc7cfaacbf7  mov %rbx, -0x210(%rbp)  
0x7fc7cfaacbfe  testb $0x3, %bl         
0x7fc7cfaacc01  jnz 0xd87                ; 0x7fc7cfaad297
0x7fc7cfaacc07  cmp %rax, 0x8(%rbx)     
0x7fc7cfaacc0b  mov $0x12, %ecx         
0x7fc7cfaacc10  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaacc16  jmp 0x15a8               ; 0x7fc7cfaadab8
0x7fc7cfaacc1b  mov %r15, %rdi          
0x7fc7cfaacc1e  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaacc28  callq *%rax             
0x7fc7cfaacc2a  mov %rax, -0x220(%rbp)  
0x7fc7cfaacc31  mov %rax, -0x280(%rbp)  
0x7fc7cfaacc38  mov -0x288(%rbp), %r13  
0x7fc7cfaacc3f  mov %r13, -0x220(%rbp)  
0x7fc7cfaacc46  mov %r13, %rax          
0x7fc7cfaacc49  andq $0xf, %rax         
0x7fc7cfaacc4d  cmpq $0xa, %rax         
0x7fc7cfaacc51  jnz 0x7d6                ; 0x7fc7cfaacce6
0x7fc7cfaacc57  mov -0x280(%rbp), %rax  
0x7fc7cfaacc5e  mov %rax, -0x220(%rbp)  
0x7fc7cfaacc65  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaacc6c  mov 0x18(%rcx), %rcx    
0x7fc7cfaacc70  mov %rcx, -0x218(%rbp)  
0x7fc7cfaacc77  mov %ecx, %edx          
0x7fc7cfaacc79  and %eax, %edx          
0x7fc7cfaacc7b  testb $0x1, %dl         
0x7fc7cfaacc7e  jnz 0x8aa                ; 0x7fc7cfaacdba
0x7fc7cfaacc84  mov %rax, -0x50(%rbp)   
0x7fc7cfaacc88  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaacc90  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaacc98  mov $0x1, -0x40(%rbp)   
0x7fc7cfaacc9f  movq $0x0, -0x30(%rbp)  
0x7fc7cfaacca7  lea -0x218(%rbp), %rax  
0x7fc7cfaaccae  mov %rax, -0x38(%rbp)   
0x7fc7cfaaccb2  mov 0x176d3c8, %rsi     
0x7fc7cfaaccba  mov 0x20(%rsi), %rax    
0x7fc7cfaaccbe  mov $0x4e, -0x244(%rbp) 
0x7fc7cfaaccc8  mov %r15, %rdi          
0x7fc7cfaacccb  lea -0x268(%rbp), %rdx  
0x7fc7cfaaccd2  lea -0x58(%rbp), %rcx   
0x7fc7cfaaccd6  callq *%rax             
0x7fc7cfaaccd8  test %rax, %rax         
0x7fc7cfaaccdb  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacce1  jmp 0x8bb                ; 0x7fc7cfaacdcb
0x7fc7cfaacce6  mov %r13, -0x220(%rbp)  
0x7fc7cfaacced  mov %r13, -0x218(%rbp)  
0x7fc7cfaaccf4  mov 0x176d300, %rax     
0x7fc7cfaaccfc  mov 0x30(%rax), %rcx    
0x7fc7cfaacd00  mov -0x260(%rbp), %rbx  
0x7fc7cfaacd07  cmp %rbx, %rcx          
0x7fc7cfaacd0a  jnz 0x810                ; 0x7fc7cfaacd20
0x7fc7cfaacd10  mov 0x1582514, %ecx     
0x7fc7cfaacd17  cmp 0x44(%rax), %ecx    
0x7fc7cfaacd1a  jz 0x83e                 ; 0x7fc7cfaacd4e
0x7fc7cfaacd20  mov $0x35, -0x244(%rbp) 
0x7fc7cfaacd2a  mov $0x176d300, %edx    
0x7fc7cfaacd2f  mov %r15, %rdi          
0x7fc7cfaacd32  lea -0x268(%rbp), %rsi  
0x7fc7cfaacd39  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaacd43  callq *%rax             
0x7fc7cfaacd45  test %rax, %rax         
0x7fc7cfaacd48  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacd4e  mov %r13, -0x210(%rbp)  
0x7fc7cfaacd55  mov %r13, %rax          
0x7fc7cfaacd58  andq $0x1, %rax         
0x7fc7cfaacd5c  lea 0xa(%rax,8), %rax   
0x7fc7cfaacd64  mov %rax, -0x218(%rbp)  
0x7fc7cfaacd6b  andq $0xa, %rax         
0x7fc7cfaacd6f  cmpq $0xa, %rax         
0x7fc7cfaacd73  jnz 0xabc                ; 0x7fc7cfaacfcc
0x7fc7cfaacd79  mov 0x1584100, %r12     
0x7fc7cfaacd81  mov %r12, -0x220(%rbp)  
0x7fc7cfaacd88  mov %r13, -0x218(%rbp)  
0x7fc7cfaacd8f  mov 0x176d350, %rax     
0x7fc7cfaacd97  cmp %rbx, 0x30(%rax)    
0x7fc7cfaacd9b  jnz 0xa15                ; 0x7fc7cfaacf25
0x7fc7cfaacda1  mov 0x1582514, %ecx     
0x7fc7cfaacda8  cmp 0x44(%rax), %ecx    
0x7fc7cfaacdab  jnz 0xa15                ; 0x7fc7cfaacf25
0x7fc7cfaacdb1  mov 0x20(%rax), %rax    
0x7fc7cfaacdb5  jmp 0xa43                ; 0x7fc7cfaacf53
0x7fc7cfaacdba  cmp %rcx, %rax          
0x7fc7cfaacdbd  setge %al               
0x7fc7cfaacdc0  movzxb %al, %eax        
0x7fc7cfaacdc3  lea 0xa(%rax,8), %rax   
0x7fc7cfaacdcb  andq $0xf, %rax         
0x7fc7cfaacdcf  movq $0x1a, -0x220(%rbp)
0x7fc7cfaacdda  mov $0x1a, %ebx         
0x7fc7cfaacddf  cmpq $0xa, %rax         
0x7fc7cfaacde3  lea -0xd8(%rbp), %r12   
0x7fc7cfaacdea  jnz 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaacdf0  mov %r15, %rdi          
0x7fc7cfaacdf3  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaacdfd  callq *%rax             
0x7fc7cfaacdff  mov %rax, -0x1c0(%rbp)  
0x7fc7cfaace06  mov -0x2b0(%rbp), %rax  
0x7fc7cfaace0d  mov 0x20(%rax), %rcx    
0x7fc7cfaace11  mov %rcx, -0x220(%rbp)  
0x7fc7cfaace18  mov 0x28(%rax), %rax    
0x7fc7cfaace1c  mov %rax, -0x218(%rbp)  
0x7fc7cfaace23  mov -0x280(%rbp), %rsi  
0x7fc7cfaace2a  mov %rsi, -0x210(%rbp)  
0x7fc7cfaace31  mov %esi, %ecx          
0x7fc7cfaace33  and %eax, %ecx          
0x7fc7cfaace35  testb $0x1, %cl         
0x7fc7cfaace38  jnz 0xc0d                ; 0x7fc7cfaad11d
0x7fc7cfaace3e  mov %rax, -0x50(%rbp)   
0x7fc7cfaace42  movq $0x55e, -0x58(%rbp)
0x7fc7cfaace4a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaace52  mov $0x1, -0x40(%rbp)   
0x7fc7cfaace59  movq $0x0, -0x30(%rbp)  
0x7fc7cfaace61  lea -0x210(%rbp), %rax  
0x7fc7cfaace68  mov %rax, -0x38(%rbp)   
0x7fc7cfaace6c  mov 0x176d488, %rsi     
0x7fc7cfaace74  mov 0x20(%rsi), %rax    
0x7fc7cfaace78  mov $0x66, -0x244(%rbp) 
0x7fc7cfaace82  mov %r15, %rdi          
0x7fc7cfaace85  lea -0x268(%rbp), %rdx  
0x7fc7cfaace8c  lea -0x58(%rbp), %rcx   
0x7fc7cfaace90  callq *%rax             
0x7fc7cfaace92  test %rax, %rax         
0x7fc7cfaace95  jnz 0xdc6                ; 0x7fc7cfaad2d6
0x7fc7cfaace9b  mov %r15, %rdi          
0x7fc7cfaace9e  mov $0x763170, %rax      ; rbx_raising_exception
0x7fc7cfaacea8  callq *%rax             
0x7fc7cfaaceaa  testb $0x1, %al         
0x7fc7cfaacead  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaaceb3  mov %r15, %rdi          
0x7fc7cfaaceb6  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaacec0  callq *%rax             
0x7fc7cfaacec2  mov %rax, -0x220(%rbp)  
0x7fc7cfaacec9  mov %rax, -0x1c8(%rbp)  
0x7fc7cfaaced0  mov %r15, %rdi          
0x7fc7cfaaced3  mov $0x763190, %rax      ; rbx_current_exception
0x7fc7cfaacedd  callq *%rax             
0x7fc7cfaacedf  mov %rax, %r12          
0x7fc7cfaacee2  mov %r12, -0x220(%rbp)  
0x7fc7cfaacee9  mov %r12, -0x218(%rbp)  
0x7fc7cfaacef0  mov 0x176d508, %rax     
0x7fc7cfaacef8  mov 0x30(%rax), %rcx    
0x7fc7cfaacefc  mov -0x260(%rbp), %rbx  
0x7fc7cfaacf03  cmp %rbx, %rcx          
0x7fc7cfaacf06  jnz 0x100d               ; 0x7fc7cfaad51d
0x7fc7cfaacf0c  mov 0x1582514, %ecx     
0x7fc7cfaacf13  cmp 0x44(%rax), %ecx    
0x7fc7cfaacf16  jnz 0x100d               ; 0x7fc7cfaad51d
0x7fc7cfaacf1c  mov 0x20(%rax), %rax    
0x7fc7cfaacf20  jmp 0x103b               ; 0x7fc7cfaad54b
0x7fc7cfaacf25  mov $0x3f, -0x244(%rbp) 
0x7fc7cfaacf2f  mov $0x176d350, %edx    
0x7fc7cfaacf34  mov %r15, %rdi          
0x7fc7cfaacf37  lea -0x268(%rbp), %rsi  
0x7fc7cfaacf3e  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaacf48  callq *%rax             
0x7fc7cfaacf4a  test %rax, %rax         
0x7fc7cfaacf4d  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacf53  mov %rax, -0x210(%rbp)  
0x7fc7cfaacf5a  movq $0x398e, -0x208(%rbp)
0x7fc7cfaacf65  mov %r12, -0x50(%rbp)   
0x7fc7cfaacf69  movq $0x3996, -0x58(%rbp)
0x7fc7cfaacf71  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaacf79  mov $0x3, -0x40(%rbp)   
0x7fc7cfaacf80  movq $0x0, -0x30(%rbp)  
0x7fc7cfaacf88  lea -0x218(%rbp), %rax  
0x7fc7cfaacf8f  mov %rax, -0x38(%rbp)   
0x7fc7cfaacf93  mov 0x176d370, %rsi     
0x7fc7cfaacf9b  mov 0x20(%rsi), %rax    
0x7fc7cfaacf9f  mov $0x43, -0x244(%rbp) 
0x7fc7cfaacfa9  mov %r15, %rdi          
0x7fc7cfaacfac  lea -0x268(%rbp), %rdx  
0x7fc7cfaacfb3  lea -0x58(%rbp), %rcx   
0x7fc7cfaacfb7  callq *%rax             
0x7fc7cfaacfb9  mov %rax, %r13          
0x7fc7cfaacfbc  test %r13, %r13         
0x7fc7cfaacfbf  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaacfc5  mov %r13, -0x220(%rbp)  
0x7fc7cfaacfcc  mov %r13, -0x278(%rbp)  
0x7fc7cfaacfd3  mov %r13, -0x220(%rbp)  
0x7fc7cfaacfda  movq $0x1, -0x218(%rbp) 
0x7fc7cfaacfe5  testb $0x1, %r13b       
0x7fc7cfaacfe9  jnz 0xb41                ; 0x7fc7cfaad051
0x7fc7cfaacfef  mov %r13, -0x50(%rbp)   
0x7fc7cfaacff3  movq $0x586, -0x58(%rbp)
0x7fc7cfaacffb  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad003  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad00a  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad012  lea -0x218(%rbp), %rax  
0x7fc7cfaad019  mov %rax, -0x38(%rbp)   
0x7fc7cfaad01d  mov 0x176dfd0, %rsi     
0x7fc7cfaad025  mov 0x20(%rsi), %rax    
0x7fc7cfaad029  mov $0x1cf, -0x244(%rbp)
0x7fc7cfaad033  mov %r15, %rdi          
0x7fc7cfaad036  lea -0x268(%rbp), %rdx  
0x7fc7cfaad03d  lea -0x58(%rbp), %rcx   
0x7fc7cfaad041  callq *%rax             
0x7fc7cfaad043  test %rax, %rax         
0x7fc7cfaad046  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad04c  jmp 0xb52                ; 0x7fc7cfaad062
0x7fc7cfaad051  test %r13, %r13         
0x7fc7cfaad054  setle %al               
0x7fc7cfaad057  movzxb %al, %eax        
0x7fc7cfaad05a  lea 0xa(%rax,8), %rax   
0x7fc7cfaad062  andq $0xf, %rax         
0x7fc7cfaad066  movq $0x1a, -0x220(%rbp)
0x7fc7cfaad071  mov $0x1a, %ebx         
0x7fc7cfaad076  cmpq $0xa, %rax         
0x7fc7cfaad07a  lea -0xd8(%rbp), %r12   
0x7fc7cfaad081  jnz 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad087  mov -0x280(%rbp), %rcx  
0x7fc7cfaad08e  mov %rcx, -0x220(%rbp)  
0x7fc7cfaad095  mov -0x2b0(%rbp), %rax  
0x7fc7cfaad09c  mov 0x18(%rax), %rax    
0x7fc7cfaad0a0  mov %rax, -0x218(%rbp)  
0x7fc7cfaad0a7  mov %eax, %edx          
0x7fc7cfaad0a9  and %ecx, %edx          
0x7fc7cfaad0ab  testb $0x1, %dl         
0x7fc7cfaad0ae  jnz 0xea1                ; 0x7fc7cfaad3b1
0x7fc7cfaad0b4  mov %rcx, -0x50(%rbp)   
0x7fc7cfaad0b8  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaad0c0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad0c8  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad0cf  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad0d7  lea -0x218(%rbp), %rax  
0x7fc7cfaad0de  mov %rax, -0x38(%rbp)   
0x7fc7cfaad0e2  mov 0x176e048, %rsi     
0x7fc7cfaad0ea  mov 0x20(%rsi), %rax    
0x7fc7cfaad0ee  mov $0x1de, -0x244(%rbp)
0x7fc7cfaad0f8  mov %r15, %rdi          
0x7fc7cfaad0fb  lea -0x268(%rbp), %rdx  
0x7fc7cfaad102  lea -0x58(%rbp), %rcx   
0x7fc7cfaad106  callq *%rax             
0x7fc7cfaad108  test %rax, %rax         
0x7fc7cfaad10b  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad111  mov -0x280(%rbp), %rcx  
0x7fc7cfaad118  jmp 0xeb2                ; 0x7fc7cfaad3c2
0x7fc7cfaad11d  sarq $0x1, %rax         
0x7fc7cfaad120  sarq $0x1, %rsi         
0x7fc7cfaad123  add %rax, %rsi          
0x7fc7cfaad126  mov $0x3fffffffffffffff, %rax
0x7fc7cfaad130  lea (%rsi,%rax), %rax   
0x7fc7cfaad134  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaad13e  cmp %rcx, %rax          
0x7fc7cfaad141  ja 0xdb7                 ; 0x7fc7cfaad2c7
0x7fc7cfaad147  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaad14c  jmp 0xdc6                ; 0x7fc7cfaad2d6
0x7fc7cfaad151  mov $0xa5, -0x244(%rbp) 
0x7fc7cfaad15b  mov $0x176d680, %edx    
0x7fc7cfaad160  mov %r15, %rdi          
0x7fc7cfaad163  lea -0x268(%rbp), %rsi  
0x7fc7cfaad16a  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaad174  callq *%rax             
0x7fc7cfaad176  test %rax, %rax         
0x7fc7cfaad179  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad17f  mov %rax, -0x210(%rbp)  
0x7fc7cfaad186  movq $0x398e, -0x208(%rbp)
0x7fc7cfaad191  mov -0x220(%rbp), %rax  
0x7fc7cfaad198  mov %rax, -0x50(%rbp)   
0x7fc7cfaad19c  movq $0x3996, -0x58(%rbp)
0x7fc7cfaad1a4  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad1ac  mov $0x3, -0x40(%rbp)   
0x7fc7cfaad1b3  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad1bb  lea -0x218(%rbp), %rax  
0x7fc7cfaad1c2  mov %rax, -0x38(%rbp)   
0x7fc7cfaad1c6  mov 0x176d6a0, %rsi     
0x7fc7cfaad1ce  mov 0x20(%rsi), %rax    
0x7fc7cfaad1d2  mov $0xa9, -0x244(%rbp) 
0x7fc7cfaad1dc  mov %r15, %rdi          
0x7fc7cfaad1df  lea -0x268(%rbp), %rdx  
0x7fc7cfaad1e6  lea -0x58(%rbp), %rcx   
0x7fc7cfaad1ea  callq *%rax             
0x7fc7cfaad1ec  test %rax, %rax         
0x7fc7cfaad1ef  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad1f5  mov %rax, -0x280(%rbp)  
0x7fc7cfaad1fc  mov %rax, -0x220(%rbp)  
0x7fc7cfaad203  movq $0x1, -0x218(%rbp) 
0x7fc7cfaad20e  mov %rax, -0x50(%rbp)   
0x7fc7cfaad212  movq $0x586, -0x58(%rbp)
0x7fc7cfaad21a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad222  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad229  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad231  lea -0x218(%rbp), %rax  
0x7fc7cfaad238  mov %rax, -0x38(%rbp)   
0x7fc7cfaad23c  mov 0x176d6e8, %rsi     
0x7fc7cfaad244  mov 0x20(%rsi), %rax    
0x7fc7cfaad248  mov $0xb2, -0x244(%rbp) 
0x7fc7cfaad252  mov %r15, %rdi          
0x7fc7cfaad255  lea -0x268(%rbp), %rdx  
0x7fc7cfaad25c  lea -0x58(%rbp), %rcx   
0x7fc7cfaad260  callq *%rax             
0x7fc7cfaad262  test %rax, %rax         
0x7fc7cfaad265  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad26b  mov %rax, -0x220(%rbp)  
0x7fc7cfaad272  andq $0xf, %rax         
0x7fc7cfaad276  cmpq $0xa, %rax         
0x7fc7cfaad27a  jnz 0x120d               ; 0x7fc7cfaad71d
0x7fc7cfaad280  movq $0x1a, -0x220(%rbp)
0x7fc7cfaad28b  mov -0x280(%rbp), %rax  
0x7fc7cfaad292  jmp 0x1298               ; 0x7fc7cfaad7a8
0x7fc7cfaad297  cmpb $0x14, (%rax)      
0x7fc7cfaad29a  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaad2a0  mov 0x70(%rax), %edx    
0x7fc7cfaad2a3  mov %rbx, %rcx          
0x7fc7cfaad2a6  andq $0x7, %rcx         
0x7fc7cfaad2aa  cmpq $0x6, %rcx         
0x7fc7cfaad2ae  jnz 0xfdd                ; 0x7fc7cfaad4ed
0x7fc7cfaad2b4  mov $0x12, %ecx         
0x7fc7cfaad2b9  cmp $0x27, %edx         
0x7fc7cfaad2bc  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaad2c2  jmp 0x15a8               ; 0x7fc7cfaadab8
0x7fc7cfaad2c7  mov %r15, %rdi          
0x7fc7cfaad2ca  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaad2d4  callq *%rax             
0x7fc7cfaad2d6  mov %rax, -0x218(%rbp)  
0x7fc7cfaad2dd  mov -0x220(%rbp), %rcx  
0x7fc7cfaad2e4  cmpb $0x49, (%rcx)      
0x7fc7cfaad2e7  jnz 0xe2d                ; 0x7fc7cfaad33d
0x7fc7cfaad2ed  mov %rax, %rdx          
0x7fc7cfaad2f0  mov $0x8000000000000001, %rsi
0x7fc7cfaad2fa  and %rsi, %rdx          
0x7fc7cfaad2fd  cmpq $0x1, %rdx         
0x7fc7cfaad301  jnz 0xe2d                ; 0x7fc7cfaad33d
0x7fc7cfaad307  sarq $0x1, %rax         
0x7fc7cfaad30a  mov 0x18(%rcx), %rdx    
0x7fc7cfaad30e  lea -0x20(%rdx), %rsi   
0x7fc7cfaad312  sarq $0x3f, %rsi        
0x7fc7cfaad316  shrq $0x3d, %rsi        
0x7fc7cfaad31a  lea -0x20(%rdx,%rsi), %rdx
0x7fc7cfaad31f  sarq $0x3, %rdx         
0x7fc7cfaad323  cmp %rdx, %rax          
0x7fc7cfaad326  jge 0xe2d                ; 0x7fc7cfaad33d
0x7fc7cfaad32c  mov 0x20(%rcx,%rax,8), %rbx
0x7fc7cfaad331  mov %rbx, -0x220(%rbp)  
0x7fc7cfaad338  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad33d  mov $0x69, -0x244(%rbp) 
0x7fc7cfaad347  xor %esi, %esi          
0x7fc7cfaad349  mov $0x70, %edx         
0x7fc7cfaad34e  mov $0xffffffff, %ecx   
0x7fc7cfaad353  xor %r8d, %r8d          
0x7fc7cfaad356  mov %r15, %rdi          
0x7fc7cfaad359  mov $0x763ce0, %rax      ; rbx_setup_unwind
0x7fc7cfaad363  callq *%rax             
0x7fc7cfaad365  mov $0x7fc7b4004290, %rax
0x7fc7cfaad36f  mov %rax, (%rsp)        
0x7fc7cfaad373  mov $0x0, 0x10(%rsp)    
0x7fc7cfaad37b  mov $0x1, 0x8(%rsp)     
0x7fc7cfaad383  mov $0x69, %edx         
0x7fc7cfaad388  mov $0x1, %ecx          
0x7fc7cfaad38d  xor %r9d, %r9d          
0x7fc7cfaad390  mov %r15, %rdi          
0x7fc7cfaad393  lea -0x268(%rbp), %rsi  
0x7fc7cfaad39a  mov %r14, %r8           
0x7fc7cfaad39d  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfaad3a7  callq *%rax             
0x7fc7cfaad3a9  mov %rax, %rbx          
0x7fc7cfaad3ac  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad3b1  cmp %rax, %rcx          
0x7fc7cfaad3b4  setge %al               
0x7fc7cfaad3b7  movzxb %al, %eax        
0x7fc7cfaad3ba  lea 0xa(%rax,8), %rax   
0x7fc7cfaad3c2  andq $0xf, %rax         
0x7fc7cfaad3c6  mov %rcx, -0x220(%rbp)  
0x7fc7cfaad3cd  cmpq $0xa, %rax         
0x7fc7cfaad3d1  jnz 0xf3d                ; 0x7fc7cfaad44d
0x7fc7cfaad3d7  movq $0x1, -0x218(%rbp) 
0x7fc7cfaad3e2  testb $0x1, %cl         
0x7fc7cfaad3e5  jnz 0x1077               ; 0x7fc7cfaad587
0x7fc7cfaad3eb  mov %rcx, -0x50(%rbp)   
0x7fc7cfaad3ef  movq $0x586, -0x58(%rbp)
0x7fc7cfaad3f7  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad3ff  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad406  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad40e  lea -0x218(%rbp), %rax  
0x7fc7cfaad415  mov %rax, -0x38(%rbp)   
0x7fc7cfaad419  mov 0x176e160, %rsi     
0x7fc7cfaad421  mov 0x20(%rsi), %rax    
0x7fc7cfaad425  mov $0x201, -0x244(%rbp)
0x7fc7cfaad42f  mov %r15, %rdi          
0x7fc7cfaad432  lea -0x268(%rbp), %rdx  
0x7fc7cfaad439  lea -0x58(%rbp), %rcx   
0x7fc7cfaad43d  callq *%rax             
0x7fc7cfaad43f  test %rax, %rax         
0x7fc7cfaad442  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad448  jmp 0x1088               ; 0x7fc7cfaad598
0x7fc7cfaad44d  mov -0x2b0(%rbp), %rax  
0x7fc7cfaad454  mov 0x18(%rax), %rax    
0x7fc7cfaad458  mov %rax, -0x218(%rbp)  
0x7fc7cfaad45f  mov %rcx, -0x50(%rbp)   
0x7fc7cfaad463  movq $0x56e, -0x58(%rbp)
0x7fc7cfaad46b  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad473  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad47a  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad482  lea -0x218(%rbp), %rax  
0x7fc7cfaad489  mov %rax, -0x38(%rbp)   
0x7fc7cfaad48d  mov 0x176e090, %rsi     
0x7fc7cfaad495  mov 0x20(%rsi), %rax    
0x7fc7cfaad499  mov $0x1e7, -0x244(%rbp)
0x7fc7cfaad4a3  mov %r15, %rdi          
0x7fc7cfaad4a6  lea -0x268(%rbp), %rdx  
0x7fc7cfaad4ad  lea -0x58(%rbp), %rcx   
0x7fc7cfaad4b1  callq *%rax             
0x7fc7cfaad4b3  test %rax, %rax         
0x7fc7cfaad4b6  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad4bc  mov %rax, -0x220(%rbp)  
0x7fc7cfaad4c3  andq $0xf, %rax         
0x7fc7cfaad4c7  cmpq $0xa, %rax         
0x7fc7cfaad4cb  lea -0xd8(%rbp), %r12   
0x7fc7cfaad4d2  jnz 0x149a               ; 0x7fc7cfaad9aa
0x7fc7cfaad4d8  movq $0x1a, -0x220(%rbp)
0x7fc7cfaad4e3  mov $0x1a, %ebx         
0x7fc7cfaad4e8  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad4ed  testb $0x1, %bl         
0x7fc7cfaad4f0  jnz 0x147e               ; 0x7fc7cfaad98e
0x7fc7cfaad4f6  cmpq $0xa, %rbx         
0x7fc7cfaad4fa  jz 0x1565                ; 0x7fc7cfaada75
0x7fc7cfaad500  cmpq $0x12, %rbx        
0x7fc7cfaad504  jnz 0x1578               ; 0x7fc7cfaada88
0x7fc7cfaad50a  mov $0x12, %ecx         
0x7fc7cfaad50f  cmp $0x1d, %edx         
0x7fc7cfaad512  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaad518  jmp 0x15a8               ; 0x7fc7cfaadab8
0x7fc7cfaad51d  mov $0x76, -0x244(%rbp) 
0x7fc7cfaad527  mov $0x176d508, %edx    
0x7fc7cfaad52c  mov %r15, %rdi          
0x7fc7cfaad52f  lea -0x268(%rbp), %rsi  
0x7fc7cfaad536  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaad540  callq *%rax             
0x7fc7cfaad542  test %rax, %rax         
0x7fc7cfaad545  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad54b  mov %rax, -0x210(%rbp)  
0x7fc7cfaad552  mov 0x176d518, %rcx     
0x7fc7cfaad55a  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaad55e  jnz 0x1138               ; 0x7fc7cfaad648
0x7fc7cfaad564  mov 0x1582514, %edx     
0x7fc7cfaad56b  cmp 0x44(%rcx), %edx    
0x7fc7cfaad56e  jnz 0x1138               ; 0x7fc7cfaad648
0x7fc7cfaad574  cmp %rax, 0x28(%rcx)    
0x7fc7cfaad578  jnz 0x1138               ; 0x7fc7cfaad648
0x7fc7cfaad57e  mov 0x20(%rcx), %rax    
0x7fc7cfaad582  jmp 0x1169               ; 0x7fc7cfaad679
0x7fc7cfaad587  test %rcx, %rcx         
0x7fc7cfaad58a  setle %al               
0x7fc7cfaad58d  movzxb %al, %eax        
0x7fc7cfaad590  lea 0xa(%rax,8), %rax   
0x7fc7cfaad598  andq $0xf, %rax         
0x7fc7cfaad59c  movq $0x1a, -0x220(%rbp)
0x7fc7cfaad5a7  mov $0x1a, %ebx         
0x7fc7cfaad5ac  cmpq $0xa, %rax         
0x7fc7cfaad5b0  lea -0xd8(%rbp), %r12   
0x7fc7cfaad5b7  jnz 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad5bd  mov -0x280(%rbp), %rax  
0x7fc7cfaad5c4  mov %rax, -0x220(%rbp)  
0x7fc7cfaad5cb  mov -0x278(%rbp), %rsi  
0x7fc7cfaad5d2  mov %rsi, -0x218(%rbp)  
0x7fc7cfaad5d9  mov %esi, %ecx          
0x7fc7cfaad5db  and %eax, %ecx          
0x7fc7cfaad5dd  testb $0x1, %cl         
0x7fc7cfaad5e0  jnz 0x1531               ; 0x7fc7cfaada41
0x7fc7cfaad5e6  mov %rax, -0x50(%rbp)   
0x7fc7cfaad5ea  movq $0x55e, -0x58(%rbp)
0x7fc7cfaad5f2  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad5fa  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad601  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad609  lea -0x218(%rbp), %rax  
0x7fc7cfaad610  mov %rax, -0x38(%rbp)   
0x7fc7cfaad614  mov 0x176e1d8, %rsi     
0x7fc7cfaad61c  mov 0x20(%rsi), %rax    
0x7fc7cfaad620  mov $0x210, -0x244(%rbp)
0x7fc7cfaad62a  mov %r15, %rdi          
0x7fc7cfaad62d  lea -0x268(%rbp), %rdx  
0x7fc7cfaad634  lea -0x58(%rbp), %rcx   
0x7fc7cfaad638  callq *%rax             
0x7fc7cfaad63a  test %rax, %rax         
0x7fc7cfaad63d  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad643  jmp 0x1afe               ; 0x7fc7cfaae00e
0x7fc7cfaad648  mov $0x78, -0x244(%rbp) 
0x7fc7cfaad652  mov $0x176d518, %edx    
0x7fc7cfaad657  mov %r15, %rdi          
0x7fc7cfaad65a  lea -0x268(%rbp), %rsi  
0x7fc7cfaad661  mov %rax, %rcx          
0x7fc7cfaad664  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfaad66e  callq *%rax             
0x7fc7cfaad670  test %rax, %rax         
0x7fc7cfaad673  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad679  mov %rax, -0x218(%rbp)  
0x7fc7cfaad680  mov %r12, -0x210(%rbp)  
0x7fc7cfaad687  mov %rax, -0x50(%rbp)   
0x7fc7cfaad68b  movq $0x57e, -0x58(%rbp)
0x7fc7cfaad693  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad69b  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad6a2  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad6aa  lea -0x210(%rbp), %rax  
0x7fc7cfaad6b1  mov %rax, -0x38(%rbp)   
0x7fc7cfaad6b5  mov 0x176d530, %rsi     
0x7fc7cfaad6bd  mov 0x20(%rsi), %rax    
0x7fc7cfaad6c1  mov $0x7b, -0x244(%rbp) 
0x7fc7cfaad6cb  mov %r15, %rdi          
0x7fc7cfaad6ce  lea -0x268(%rbp), %rdx  
0x7fc7cfaad6d5  lea -0x58(%rbp), %rcx   
0x7fc7cfaad6d9  callq *%rax             
0x7fc7cfaad6db  test %rax, %rax         
0x7fc7cfaad6de  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad6e4  mov %rax, -0x218(%rbp)  
0x7fc7cfaad6eb  andq $0xf, %rax         
0x7fc7cfaad6ef  cmpq $0xa, %rax         
0x7fc7cfaad6f3  lea -0xd8(%rbp), %r12   
0x7fc7cfaad6fa  jnz 0x1cdd               ; 0x7fc7cfaae1ed
0x7fc7cfaad700  mov -0x1c8(%rbp), %rdx  
0x7fc7cfaad707  mov %rdx, -0x220(%rbp)  
0x7fc7cfaad70e  mov %r15, %rdi          
0x7fc7cfaad711  lea -0x268(%rbp), %rsi  
0x7fc7cfaad718  jmp 0x2336               ; 0x7fc7cfaae846
0x7fc7cfaad71d  mov -0x280(%rbp), %rax  
0x7fc7cfaad724  mov %rax, -0x220(%rbp)  
0x7fc7cfaad72b  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaad732  mov 0x18(%rcx), %rcx    
0x7fc7cfaad736  mov %rcx, -0x218(%rbp)  
0x7fc7cfaad73d  mov %rax, -0x50(%rbp)   
0x7fc7cfaad741  movq $0x55e, -0x58(%rbp)
0x7fc7cfaad749  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad751  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad758  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad760  lea -0x218(%rbp), %rax  
0x7fc7cfaad767  mov %rax, -0x38(%rbp)   
0x7fc7cfaad76b  mov 0x176d730, %rsi     
0x7fc7cfaad773  mov 0x20(%rsi), %rax    
0x7fc7cfaad777  mov $0xbb, -0x244(%rbp) 
0x7fc7cfaad781  mov %r15, %rdi          
0x7fc7cfaad784  lea -0x268(%rbp), %rdx  
0x7fc7cfaad78b  lea -0x58(%rbp), %rcx   
0x7fc7cfaad78f  callq *%rax             
0x7fc7cfaad791  test %rax, %rax         
0x7fc7cfaad794  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad79a  mov %rax, -0x220(%rbp)  
0x7fc7cfaad7a1  mov %rax, -0x280(%rbp)  
0x7fc7cfaad7a8  mov %rax, -0x220(%rbp)  
0x7fc7cfaad7af  movq $0x1, -0x218(%rbp) 
0x7fc7cfaad7ba  mov %rax, -0x50(%rbp)   
0x7fc7cfaad7be  movq $0x586, -0x58(%rbp)
0x7fc7cfaad7c6  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad7ce  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad7d5  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad7dd  lea -0x218(%rbp), %rax  
0x7fc7cfaad7e4  mov %rax, -0x38(%rbp)   
0x7fc7cfaad7e8  mov 0x176d790, %rsi     
0x7fc7cfaad7f0  mov 0x20(%rsi), %rax    
0x7fc7cfaad7f4  mov $0xc7, -0x244(%rbp) 
0x7fc7cfaad7fe  mov %r15, %rdi          
0x7fc7cfaad801  lea -0x268(%rbp), %rdx  
0x7fc7cfaad808  lea -0x58(%rbp), %rcx   
0x7fc7cfaad80c  callq *%rax             
0x7fc7cfaad80e  test %rax, %rax         
0x7fc7cfaad811  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad817  mov %rax, -0x220(%rbp)  
0x7fc7cfaad81e  mov %rax, -0x218(%rbp)  
0x7fc7cfaad825  mov %rax, %rcx          
0x7fc7cfaad828  andq $0xf, %rcx         
0x7fc7cfaad82c  cmpq $0xa, %rcx         
0x7fc7cfaad830  lea -0xd8(%rbp), %r12   
0x7fc7cfaad837  jnz 0x13b8               ; 0x7fc7cfaad8c8
0x7fc7cfaad83d  mov -0x280(%rbp), %rax  
0x7fc7cfaad844  mov %rax, -0x220(%rbp)  
0x7fc7cfaad84b  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaad852  mov 0x18(%rcx), %rcx    
0x7fc7cfaad856  mov %rcx, -0x218(%rbp)  
0x7fc7cfaad85d  mov %rax, -0x50(%rbp)   
0x7fc7cfaad861  movq $0x58e, -0x58(%rbp)
0x7fc7cfaad869  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad871  mov $0x1, -0x40(%rbp)   
0x7fc7cfaad878  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad880  lea -0x218(%rbp), %rax  
0x7fc7cfaad887  mov %rax, -0x38(%rbp)   
0x7fc7cfaad88b  mov 0x176d7e8, %rsi     
0x7fc7cfaad893  mov 0x20(%rsi), %rax    
0x7fc7cfaad897  mov $0xd2, -0x244(%rbp) 
0x7fc7cfaad8a1  mov %r15, %rdi          
0x7fc7cfaad8a4  lea -0x268(%rbp), %rdx  
0x7fc7cfaad8ab  lea -0x58(%rbp), %rcx   
0x7fc7cfaad8af  callq *%rax             
0x7fc7cfaad8b1  test %rax, %rax         
0x7fc7cfaad8b4  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad8ba  mov %rax, -0x220(%rbp)  
0x7fc7cfaad8c1  lea -0xd8(%rbp), %r12   
0x7fc7cfaad8c8  andq $0xf, %rax         
0x7fc7cfaad8cc  movq $0x1a, -0x220(%rbp)
0x7fc7cfaad8d7  mov $0x1a, %ebx         
0x7fc7cfaad8dc  cmpq $0xa, %rax         
0x7fc7cfaad8e0  jnz 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaad8e6  mov 0x1584100, %rax     
0x7fc7cfaad8ee  mov %rax, -0x220(%rbp)  
0x7fc7cfaad8f5  mov -0x290(%rbp), %rax  
0x7fc7cfaad8fc  mov %rax, -0x218(%rbp)  
0x7fc7cfaad903  mov %rax, -0x50(%rbp)   
0x7fc7cfaad907  movq $0x4976, -0x58(%rbp)
0x7fc7cfaad90f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad917  mov $0x0, -0x40(%rbp)   
0x7fc7cfaad91e  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad926  mov 0x176d858, %rsi     
0x7fc7cfaad92e  mov 0x20(%rsi), %rax    
0x7fc7cfaad932  mov $0xe0, -0x244(%rbp) 
0x7fc7cfaad93c  mov %r15, %rdi          
0x7fc7cfaad93f  lea -0x268(%rbp), %rdx  
0x7fc7cfaad946  lea -0x58(%rbp), %rcx   
0x7fc7cfaad94a  callq *%rax             
0x7fc7cfaad94c  test %rax, %rax         
0x7fc7cfaad94f  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaad955  mov %rax, -0x218(%rbp)  
0x7fc7cfaad95c  mov 0x176d870, %rax     
0x7fc7cfaad964  mov 0x30(%rax), %rcx    
0x7fc7cfaad968  cmp -0x260(%rbp), %rcx  
0x7fc7cfaad96f  jnz 0x1e33               ; 0x7fc7cfaae343
0x7fc7cfaad975  mov 0x1582514, %ecx     
0x7fc7cfaad97c  cmp 0x44(%rax), %ecx    
0x7fc7cfaad97f  jnz 0x1e33               ; 0x7fc7cfaae343
0x7fc7cfaad985  mov 0x20(%rax), %rax    
0x7fc7cfaad989  jmp 0x1e64               ; 0x7fc7cfaae374
0x7fc7cfaad98e  mov $0x12, %ecx         
0x7fc7cfaad993  cmp $0x23, %edx         
0x7fc7cfaad996  jz 0x15a8                ; 0x7fc7cfaadab8
0x7fc7cfaad99c  cmp $0x25, %edx         
0x7fc7cfaad99f  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaad9a5  jmp 0x15a8               ; 0x7fc7cfaadab8
0x7fc7cfaad9aa  mov -0x2b0(%rbp), %rax  
0x7fc7cfaad9b1  mov %rax, -0x220(%rbp)  
0x7fc7cfaad9b8  movq $0x1, -0x218(%rbp) 
0x7fc7cfaad9c3  movq $0x1, -0x210(%rbp) 
0x7fc7cfaad9ce  mov %rax, -0x50(%rbp)   
0x7fc7cfaad9d2  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaad9da  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaad9e2  mov $0x2, -0x40(%rbp)   
0x7fc7cfaad9e9  movq $0x0, -0x30(%rbp)  
0x7fc7cfaad9f1  lea -0x218(%rbp), %rax  
0x7fc7cfaad9f8  mov %rax, -0x38(%rbp)   
0x7fc7cfaad9fc  mov 0x176e0d8, %rsi     
0x7fc7cfaada04  mov 0x20(%rsi), %rax    
0x7fc7cfaada08  mov $0x1f0, -0x244(%rbp)
0x7fc7cfaada12  mov %r15, %rdi          
0x7fc7cfaada15  lea -0x268(%rbp), %rdx  
0x7fc7cfaada1c  lea -0x58(%rbp), %rcx   
0x7fc7cfaada20  callq *%rax             
0x7fc7cfaada22  mov %rax, %rbx          
0x7fc7cfaada25  test %rbx, %rbx         
0x7fc7cfaada28  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaada2e  mov %rbx, -0x220(%rbp)  
0x7fc7cfaada35  lea -0xd8(%rbp), %r12   
0x7fc7cfaada3c  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaada41  sarq $0x1, %rax         
0x7fc7cfaada44  sarq $0x1, %rsi         
0x7fc7cfaada47  add %rax, %rsi          
0x7fc7cfaada4a  mov $0x3fffffffffffffff, %rax
0x7fc7cfaada54  lea (%rsi,%rax), %rax   
0x7fc7cfaada58  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaada62  cmp %rcx, %rax          
0x7fc7cfaada65  ja 0x1aef                ; 0x7fc7cfaadfff
0x7fc7cfaada6b  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaada70  jmp 0x1afe               ; 0x7fc7cfaae00e
0x7fc7cfaada75  mov $0x12, %ecx         
0x7fc7cfaada7a  cmp $0x1f, %edx         
0x7fc7cfaada7d  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaada83  jmp 0x15a8               ; 0x7fc7cfaadab8
0x7fc7cfaada88  cmpq $0x1a, %rbx        
0x7fc7cfaada8c  jnz 0x1590               ; 0x7fc7cfaadaa0
0x7fc7cfaada92  mov $0x12, %ecx         
0x7fc7cfaada97  cmp $0x1b, %edx         
0x7fc7cfaada9a  jz 0x15a8                ; 0x7fc7cfaadab8
0x7fc7cfaadaa0  mov %r15, %rdi          
0x7fc7cfaadaa3  mov %rbx, %rsi          
0x7fc7cfaadaa6  mov %rax, %rdx          
0x7fc7cfaadaa9  mov $0x7626f0, %rax      ; rbx_kind_of
0x7fc7cfaadab3  callq *%rax             
0x7fc7cfaadab5  mov %rax, %rcx          
0x7fc7cfaadab8  mov %rcx, -0x218(%rbp)  
0x7fc7cfaadabf  andq $0xf, %rcx         
0x7fc7cfaadac3  cmpq $0xa, %rcx         
0x7fc7cfaadac7  jnz 0x16a5               ; 0x7fc7cfaadbb5
0x7fc7cfaadacd  mov 0x1584100, %r12     
0x7fc7cfaadad5  mov %r12, -0x220(%rbp)  
0x7fc7cfaadadc  mov %rbx, -0x218(%rbp)  
0x7fc7cfaadae3  mov 0x176db90, %rax     
0x7fc7cfaadaeb  cmp %r13, 0x30(%rax)    
0x7fc7cfaadaef  jnz 0x15fe               ; 0x7fc7cfaadb0e
0x7fc7cfaadaf5  mov 0x1582514, %ecx     
0x7fc7cfaadafc  cmp 0x44(%rax), %ecx    
0x7fc7cfaadaff  jnz 0x15fe               ; 0x7fc7cfaadb0e
0x7fc7cfaadb05  mov 0x20(%rax), %rax    
0x7fc7cfaadb09  jmp 0x162c               ; 0x7fc7cfaadb3c
0x7fc7cfaadb0e  mov $0x147, -0x244(%rbp)
0x7fc7cfaadb18  mov $0x176db90, %edx    
0x7fc7cfaadb1d  mov %r15, %rdi          
0x7fc7cfaadb20  lea -0x268(%rbp), %rsi  
0x7fc7cfaadb27  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaadb31  callq *%rax             
0x7fc7cfaadb33  test %rax, %rax         
0x7fc7cfaadb36  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadb3c  mov %rax, -0x210(%rbp)  
0x7fc7cfaadb43  movq $0x398e, -0x208(%rbp)
0x7fc7cfaadb4e  mov %r12, -0x50(%rbp)   
0x7fc7cfaadb52  movq $0x3996, -0x58(%rbp)
0x7fc7cfaadb5a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaadb62  mov $0x3, -0x40(%rbp)   
0x7fc7cfaadb69  movq $0x0, -0x30(%rbp)  
0x7fc7cfaadb71  lea -0x218(%rbp), %rax  
0x7fc7cfaadb78  mov %rax, -0x38(%rbp)   
0x7fc7cfaadb7c  mov 0x176dbb0, %rsi     
0x7fc7cfaadb84  mov 0x20(%rsi), %rax    
0x7fc7cfaadb88  mov $0x14b, -0x244(%rbp)
0x7fc7cfaadb92  mov %r15, %rdi          
0x7fc7cfaadb95  lea -0x268(%rbp), %rdx  
0x7fc7cfaadb9c  lea -0x58(%rbp), %rcx   
0x7fc7cfaadba0  callq *%rax             
0x7fc7cfaadba2  mov %rax, %rbx          
0x7fc7cfaadba5  test %rbx, %rbx         
0x7fc7cfaadba8  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadbae  mov %rbx, -0x220(%rbp)  
0x7fc7cfaadbb5  mov %rbx, -0x280(%rbp)  
0x7fc7cfaadbbc  mov %rbx, -0x220(%rbp)  
0x7fc7cfaadbc3  movq $0x1, -0x218(%rbp) 
0x7fc7cfaadbce  mov %rbx, -0x50(%rbp)   
0x7fc7cfaadbd2  movq $0x586, -0x58(%rbp)
0x7fc7cfaadbda  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaadbe2  mov $0x1, -0x40(%rbp)   
0x7fc7cfaadbe9  movq $0x0, -0x30(%rbp)  
0x7fc7cfaadbf1  lea -0x218(%rbp), %rax  
0x7fc7cfaadbf8  mov %rax, -0x38(%rbp)   
0x7fc7cfaadbfc  mov 0x176dbf8, %rsi     
0x7fc7cfaadc04  mov 0x20(%rsi), %rax    
0x7fc7cfaadc08  mov $0x154, -0x244(%rbp)
0x7fc7cfaadc12  mov %r15, %rdi          
0x7fc7cfaadc15  lea -0x268(%rbp), %rdx  
0x7fc7cfaadc1c  lea -0x58(%rbp), %rcx   
0x7fc7cfaadc20  callq *%rax             
0x7fc7cfaadc22  test %rax, %rax         
0x7fc7cfaadc25  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadc2b  mov %rax, -0x220(%rbp)  
0x7fc7cfaadc32  andq $0xf, %rax         
0x7fc7cfaadc36  cmpq $0xa, %rax         
0x7fc7cfaadc3a  jnz 0x1740               ; 0x7fc7cfaadc50
0x7fc7cfaadc40  movq $0x1a, -0x220(%rbp)
0x7fc7cfaadc4b  jmp 0x17cb               ; 0x7fc7cfaadcdb
0x7fc7cfaadc50  mov -0x280(%rbp), %rax  
0x7fc7cfaadc57  mov %rax, -0x220(%rbp)  
0x7fc7cfaadc5e  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaadc65  mov 0x18(%rcx), %rcx    
0x7fc7cfaadc69  mov %rcx, -0x218(%rbp)  
0x7fc7cfaadc70  mov %rax, -0x50(%rbp)   
0x7fc7cfaadc74  movq $0x55e, -0x58(%rbp)
0x7fc7cfaadc7c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaadc84  mov $0x1, -0x40(%rbp)   
0x7fc7cfaadc8b  movq $0x0, -0x30(%rbp)  
0x7fc7cfaadc93  lea -0x218(%rbp), %rax  
0x7fc7cfaadc9a  mov %rax, -0x38(%rbp)   
0x7fc7cfaadc9e  mov 0x176dc40, %rsi     
0x7fc7cfaadca6  mov 0x20(%rsi), %rax    
0x7fc7cfaadcaa  mov $0x15d, -0x244(%rbp)
0x7fc7cfaadcb4  mov %r15, %rdi          
0x7fc7cfaadcb7  lea -0x268(%rbp), %rdx  
0x7fc7cfaadcbe  lea -0x58(%rbp), %rcx   
0x7fc7cfaadcc2  callq *%rax             
0x7fc7cfaadcc4  test %rax, %rax         
0x7fc7cfaadcc7  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadccd  mov %rax, -0x220(%rbp)  
0x7fc7cfaadcd4  mov %rax, -0x280(%rbp)  
0x7fc7cfaadcdb  mov -0x288(%rbp), %r13  
0x7fc7cfaadce2  mov %r13, -0x220(%rbp)  
0x7fc7cfaadce9  mov %r13, %rax          
0x7fc7cfaadcec  andq $0xf, %rax         
0x7fc7cfaadcf0  cmpq $0xa, %rax         
0x7fc7cfaadcf4  jnz 0x1a22               ; 0x7fc7cfaadf32
0x7fc7cfaadcfa  mov -0x280(%rbp), %rax  
0x7fc7cfaadd01  mov %rax, -0x220(%rbp)  
0x7fc7cfaadd08  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaadd0f  mov 0x18(%rcx), %rcx    
0x7fc7cfaadd13  mov %rcx, -0x218(%rbp)  
0x7fc7cfaadd1a  mov %rax, -0x50(%rbp)   
0x7fc7cfaadd1e  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaadd26  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaadd2e  mov $0x1, -0x40(%rbp)   
0x7fc7cfaadd35  movq $0x0, -0x30(%rbp)  
0x7fc7cfaadd3d  lea -0x218(%rbp), %rax  
0x7fc7cfaadd44  mov %rax, -0x38(%rbp)   
0x7fc7cfaadd48  mov 0x176dd88, %rsi     
0x7fc7cfaadd50  mov 0x20(%rsi), %rax    
0x7fc7cfaadd54  mov $0x186, -0x244(%rbp)
0x7fc7cfaadd5e  mov %r15, %rdi          
0x7fc7cfaadd61  lea -0x268(%rbp), %rdx  
0x7fc7cfaadd68  lea -0x58(%rbp), %rcx   
0x7fc7cfaadd6c  callq *%rax             
0x7fc7cfaadd6e  test %rax, %rax         
0x7fc7cfaadd71  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadd77  andq $0xf, %rax         
0x7fc7cfaadd7b  movq $0x1a, -0x220(%rbp)
0x7fc7cfaadd86  mov $0x1a, %ebx         
0x7fc7cfaadd8b  cmpq $0xa, %rax         
0x7fc7cfaadd8f  lea -0xd8(%rbp), %r12   
0x7fc7cfaadd96  jnz 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaadd9c  mov %r15, %rdi          
0x7fc7cfaadd9f  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaadda9  callq *%rax             
0x7fc7cfaaddab  mov %rax, -0x1d0(%rbp)  
0x7fc7cfaaddb2  mov -0x2b0(%rbp), %rax  
0x7fc7cfaaddb9  mov 0x20(%rax), %rcx    
0x7fc7cfaaddbd  mov %rcx, -0x220(%rbp)  
0x7fc7cfaaddc4  mov 0x28(%rax), %rax    
0x7fc7cfaaddc8  mov %rax, -0x218(%rbp)  
0x7fc7cfaaddcf  mov -0x280(%rbp), %rcx  
0x7fc7cfaaddd6  mov %rcx, -0x210(%rbp)  
0x7fc7cfaadddd  mov %rax, -0x50(%rbp)   
0x7fc7cfaadde1  movq $0x55e, -0x58(%rbp)
0x7fc7cfaadde9  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaddf1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaddf8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaade00  lea -0x210(%rbp), %rax  
0x7fc7cfaade07  mov %rax, -0x38(%rbp)   
0x7fc7cfaade0b  mov 0x176de48, %rsi     
0x7fc7cfaade13  mov 0x20(%rsi), %rax    
0x7fc7cfaade17  mov $0x19e, -0x244(%rbp)
0x7fc7cfaade21  mov %r15, %rdi          
0x7fc7cfaade24  lea -0x268(%rbp), %rdx  
0x7fc7cfaade2b  lea -0x58(%rbp), %rcx   
0x7fc7cfaade2f  callq *%rax             
0x7fc7cfaade31  test %rax, %rax         
0x7fc7cfaade34  jz 0x1998                ; 0x7fc7cfaadea8
0x7fc7cfaade3a  mov %rax, -0x218(%rbp)  
0x7fc7cfaade41  mov -0x220(%rbp), %rax  
0x7fc7cfaade48  mov %rax, -0x50(%rbp)   
0x7fc7cfaade4c  movq $0x3bbe, -0x58(%rbp)
0x7fc7cfaade54  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaade5c  mov $0x1, -0x40(%rbp)   
0x7fc7cfaade63  movq $0x0, -0x30(%rbp)  
0x7fc7cfaade6b  lea -0x218(%rbp), %rax  
0x7fc7cfaade72  mov %rax, -0x38(%rbp)   
0x7fc7cfaade76  mov 0x176de60, %rsi     
0x7fc7cfaade7e  mov 0x20(%rsi), %rax    
0x7fc7cfaade82  mov $0x1a1, -0x244(%rbp)
0x7fc7cfaade8c  mov %r15, %rdi          
0x7fc7cfaade8f  lea -0x268(%rbp), %rdx  
0x7fc7cfaade96  lea -0x58(%rbp), %rcx   
0x7fc7cfaade9a  callq *%rax             
0x7fc7cfaade9c  mov %rax, %rbx          
0x7fc7cfaade9f  test %rbx, %rbx         
0x7fc7cfaadea2  jnz 0x1d4c               ; 0x7fc7cfaae25c
0x7fc7cfaadea8  mov %r15, %rdi          
0x7fc7cfaadeab  mov $0x763170, %rax      ; rbx_raising_exception
0x7fc7cfaadeb5  callq *%rax             
0x7fc7cfaadeb7  testb $0x1, %al         
0x7fc7cfaadeba  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadec0  mov %r15, %rdi          
0x7fc7cfaadec3  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7fc7cfaadecd  callq *%rax             
0x7fc7cfaadecf  mov %rax, -0x220(%rbp)  
0x7fc7cfaaded6  mov %rax, -0x1d8(%rbp)  
0x7fc7cfaadedd  mov %r15, %rdi          
0x7fc7cfaadee0  mov $0x763190, %rax      ; rbx_current_exception
0x7fc7cfaadeea  callq *%rax             
0x7fc7cfaadeec  mov %rax, %r12          
0x7fc7cfaadeef  mov %r12, -0x220(%rbp)  
0x7fc7cfaadef6  mov %r12, -0x218(%rbp)  
0x7fc7cfaadefd  mov 0x176dec8, %rax     
0x7fc7cfaadf05  mov 0x30(%rax), %rcx    
0x7fc7cfaadf09  mov -0x260(%rbp), %rbx  
0x7fc7cfaadf10  cmp %rbx, %rcx          
0x7fc7cfaadf13  jnz 0x1f87               ; 0x7fc7cfaae497
0x7fc7cfaadf19  mov 0x1582514, %ecx     
0x7fc7cfaadf20  cmp 0x44(%rax), %ecx    
0x7fc7cfaadf23  jnz 0x1f87               ; 0x7fc7cfaae497
0x7fc7cfaadf29  mov 0x20(%rax), %rax    
0x7fc7cfaadf2d  jmp 0x1fb8               ; 0x7fc7cfaae4c8
0x7fc7cfaadf32  mov %r13, -0x220(%rbp)  
0x7fc7cfaadf39  mov %r13, -0x218(%rbp)  
0x7fc7cfaadf40  mov 0x176dcc0, %rax     
0x7fc7cfaadf48  mov 0x30(%rax), %rcx    
0x7fc7cfaadf4c  mov -0x260(%rbp), %rbx  
0x7fc7cfaadf53  cmp %rbx, %rcx          
0x7fc7cfaadf56  jnz 0x1a65               ; 0x7fc7cfaadf75
0x7fc7cfaadf5c  mov 0x1582514, %ecx     
0x7fc7cfaadf63  cmp 0x44(%rax), %ecx    
0x7fc7cfaadf66  jnz 0x1a65               ; 0x7fc7cfaadf75
0x7fc7cfaadf6c  mov 0x20(%rax), %rax    
0x7fc7cfaadf70  jmp 0x1a93               ; 0x7fc7cfaadfa3
0x7fc7cfaadf75  mov $0x16d, -0x244(%rbp)
0x7fc7cfaadf7f  mov $0x176dcc0, %edx    
0x7fc7cfaadf84  mov %r15, %rdi          
0x7fc7cfaadf87  lea -0x268(%rbp), %rsi  
0x7fc7cfaadf8e  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaadf98  callq *%rax             
0x7fc7cfaadf9a  test %rax, %rax         
0x7fc7cfaadf9d  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaadfa3  mov %rax, -0x218(%rbp)  
0x7fc7cfaadfaa  mov %r13, -0x210(%rbp)  
0x7fc7cfaadfb1  testb $0x3, %r13b       
0x7fc7cfaadfb5  jnz 0x1abf               ; 0x7fc7cfaadfcf
0x7fc7cfaadfbb  cmp %rax, 0x8(%r13)     
0x7fc7cfaadfbf  mov $0x12, %ecx         
0x7fc7cfaadfc4  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaadfca  jmp 0x2053               ; 0x7fc7cfaae563
0x7fc7cfaadfcf  cmpb $0x14, (%rax)      
0x7fc7cfaadfd2  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaadfd8  mov 0x70(%rax), %edx    
0x7fc7cfaadfdb  mov %r13, %rcx          
0x7fc7cfaadfde  andq $0x7, %rcx         
0x7fc7cfaadfe2  cmpq $0x6, %rcx         
0x7fc7cfaadfe6  jnz 0x1d58               ; 0x7fc7cfaae268
0x7fc7cfaadfec  mov $0x12, %ecx         
0x7fc7cfaadff1  cmp $0x27, %edx         
0x7fc7cfaadff4  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaadffa  jmp 0x2053               ; 0x7fc7cfaae563
0x7fc7cfaadfff  mov %r15, %rdi          
0x7fc7cfaae002  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaae00c  callq *%rax             
0x7fc7cfaae00e  mov %rax, -0x220(%rbp)  
0x7fc7cfaae015  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaae01c  mov 0x18(%rcx), %rcx    
0x7fc7cfaae020  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae027  mov %ecx, %edx          
0x7fc7cfaae029  and %eax, %edx          
0x7fc7cfaae02b  testb $0x1, %dl         
0x7fc7cfaae02e  jnz 0x1b86               ; 0x7fc7cfaae096
0x7fc7cfaae034  mov %rax, -0x50(%rbp)   
0x7fc7cfaae038  movq $0x58e, -0x58(%rbp)
0x7fc7cfaae040  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae048  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae04f  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae057  lea -0x218(%rbp), %rax  
0x7fc7cfaae05e  mov %rax, -0x38(%rbp)   
0x7fc7cfaae062  mov 0x176e200, %rsi     
0x7fc7cfaae06a  mov 0x20(%rsi), %rax    
0x7fc7cfaae06e  mov $0x215, -0x244(%rbp)
0x7fc7cfaae078  mov %r15, %rdi          
0x7fc7cfaae07b  lea -0x268(%rbp), %rdx  
0x7fc7cfaae082  lea -0x58(%rbp), %rcx   
0x7fc7cfaae086  callq *%rax             
0x7fc7cfaae088  test %rax, %rax         
0x7fc7cfaae08b  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae091  jmp 0x1b97               ; 0x7fc7cfaae0a7
0x7fc7cfaae096  cmp %rcx, %rax          
0x7fc7cfaae099  setg %al                
0x7fc7cfaae09c  movzxb %al, %eax        
0x7fc7cfaae09f  lea 0xa(%rax,8), %rax   
0x7fc7cfaae0a7  mov %rax, -0x220(%rbp)  
0x7fc7cfaae0ae  andq $0xf, %rax         
0x7fc7cfaae0b2  cmpq $0xa, %rax         
0x7fc7cfaae0b6  jnz 0x1bbc               ; 0x7fc7cfaae0cc
0x7fc7cfaae0bc  movq $0x1a, -0x220(%rbp)
0x7fc7cfaae0c7  jmp 0x1c47               ; 0x7fc7cfaae157
0x7fc7cfaae0cc  mov -0x2b0(%rbp), %rax  
0x7fc7cfaae0d3  mov 0x18(%rax), %rax    
0x7fc7cfaae0d7  mov %rax, -0x220(%rbp)  
0x7fc7cfaae0de  mov -0x280(%rbp), %rcx  
0x7fc7cfaae0e5  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae0ec  mov %rax, -0x50(%rbp)   
0x7fc7cfaae0f0  movq $0x566, -0x58(%rbp)
0x7fc7cfaae0f8  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae100  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae107  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae10f  lea -0x218(%rbp), %rax  
0x7fc7cfaae116  mov %rax, -0x38(%rbp)   
0x7fc7cfaae11a  mov 0x176e248, %rsi     
0x7fc7cfaae122  mov 0x20(%rsi), %rax    
0x7fc7cfaae126  mov $0x21e, -0x244(%rbp)
0x7fc7cfaae130  mov %r15, %rdi          
0x7fc7cfaae133  lea -0x268(%rbp), %rdx  
0x7fc7cfaae13a  lea -0x58(%rbp), %rcx   
0x7fc7cfaae13e  callq *%rax             
0x7fc7cfaae140  test %rax, %rax         
0x7fc7cfaae143  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae149  mov %rax, -0x220(%rbp)  
0x7fc7cfaae150  mov %rax, -0x278(%rbp)  
0x7fc7cfaae157  mov -0x2b0(%rbp), %rax  
0x7fc7cfaae15e  mov %rax, -0x220(%rbp)  
0x7fc7cfaae165  mov 0x28(%rax), %rax    
0x7fc7cfaae169  mov %rax, -0x218(%rbp)  
0x7fc7cfaae170  mov -0x280(%rbp), %rsi  
0x7fc7cfaae177  mov %rsi, -0x210(%rbp)  
0x7fc7cfaae17e  mov %esi, %ecx          
0x7fc7cfaae180  and %eax, %ecx          
0x7fc7cfaae182  testb $0x1, %cl         
0x7fc7cfaae185  jnz 0x1d18               ; 0x7fc7cfaae228
0x7fc7cfaae18b  mov %rax, -0x50(%rbp)   
0x7fc7cfaae18f  movq $0x55e, -0x58(%rbp)
0x7fc7cfaae197  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae19f  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae1a6  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae1ae  lea -0x210(%rbp), %rax  
0x7fc7cfaae1b5  mov %rax, -0x38(%rbp)   
0x7fc7cfaae1b9  mov 0x176e2b8, %rsi     
0x7fc7cfaae1c1  mov 0x20(%rsi), %rax    
0x7fc7cfaae1c5  mov $0x22c, -0x244(%rbp)
0x7fc7cfaae1cf  mov %r15, %rdi          
0x7fc7cfaae1d2  lea -0x268(%rbp), %rdx  
0x7fc7cfaae1d9  lea -0x58(%rbp), %rcx   
0x7fc7cfaae1dd  callq *%rax             
0x7fc7cfaae1df  test %rax, %rax         
0x7fc7cfaae1e2  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae1e8  jmp 0x1d98               ; 0x7fc7cfaae2a8
0x7fc7cfaae1ed  movq $0x1a, -0x220(%rbp)
0x7fc7cfaae1f8  mov -0x1c0(%rbp), %rdx  
0x7fc7cfaae1ff  mov %rdx, -0x218(%rbp)  
0x7fc7cfaae206  mov %r15, %rdi          
0x7fc7cfaae209  lea -0x268(%rbp), %rsi  
0x7fc7cfaae210  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7fc7cfaae21a  callq *%rax             
0x7fc7cfaae21c  mov -0x220(%rbp), %rbx  
0x7fc7cfaae223  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaae228  sarq $0x1, %rax         
0x7fc7cfaae22b  sarq $0x1, %rsi         
0x7fc7cfaae22e  add %rax, %rsi          
0x7fc7cfaae231  mov $0x3fffffffffffffff, %rax
0x7fc7cfaae23b  lea (%rsi,%rax), %rax   
0x7fc7cfaae23f  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfaae249  cmp %rcx, %rax          
0x7fc7cfaae24c  ja 0x1d89                ; 0x7fc7cfaae299
0x7fc7cfaae252  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfaae257  jmp 0x1d98               ; 0x7fc7cfaae2a8
0x7fc7cfaae25c  mov %rbx, -0x220(%rbp)  
0x7fc7cfaae263  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfaae268  testb $0x1, %r13b       
0x7fc7cfaae26c  jnz 0x1ff4               ; 0x7fc7cfaae504
0x7fc7cfaae272  cmpq $0xa, %r13         
0x7fc7cfaae276  jz 0x2010                ; 0x7fc7cfaae520
0x7fc7cfaae27c  cmpq $0x12, %r13        
0x7fc7cfaae280  jnz 0x2023               ; 0x7fc7cfaae533
0x7fc7cfaae286  mov $0x12, %ecx         
0x7fc7cfaae28b  cmp $0x1d, %edx         
0x7fc7cfaae28e  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaae294  jmp 0x2053               ; 0x7fc7cfaae563
0x7fc7cfaae299  mov %r15, %rdi          
0x7fc7cfaae29c  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfaae2a6  callq *%rax             
0x7fc7cfaae2a8  mov %rax, -0x218(%rbp)  
0x7fc7cfaae2af  mov -0x278(%rbp), %r8   
0x7fc7cfaae2b6  mov %r8, -0x210(%rbp)   
0x7fc7cfaae2bd  mov -0x220(%rbp), %rdx  
0x7fc7cfaae2c4  mov %r15, %rdi          
0x7fc7cfaae2c7  lea -0x268(%rbp), %rsi  
0x7fc7cfaae2ce  mov %rax, %rcx          
0x7fc7cfaae2d1  mov $0x5d67c0, %rax      ; jit_stub_array_new_range
0x7fc7cfaae2db  callq *%rax             
0x7fc7cfaae2dd  mov %rax, %rbx          
0x7fc7cfaae2e0  test %rbx, %rbx         
0x7fc7cfaae2e3  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae2e9  cmpq $0x22, %rbx        
0x7fc7cfaae2ed  jnz 0x4f3f               ; 0x7fc7cfab144f
0x7fc7cfaae2f3  mov -0x220(%rbp), %rax  
0x7fc7cfaae2fa  mov %rax, -0x50(%rbp)   
0x7fc7cfaae2fe  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaae306  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae30e  mov $0x2, -0x40(%rbp)   
0x7fc7cfaae315  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae31d  lea -0x218(%rbp), %rax  
0x7fc7cfaae324  mov %rax, -0x38(%rbp)   
0x7fc7cfaae328  mov 0x176e2e8, %rax     
0x7fc7cfaae330  mov 0x20(%rax), %rbx    
0x7fc7cfaae334  mov $0x232, -0x244(%rbp)
0x7fc7cfaae33e  jmp 0x2603               ; 0x7fc7cfaaeb13
0x7fc7cfaae343  mov $0xe3, -0x244(%rbp) 
0x7fc7cfaae34d  mov $0x176d870, %edx    
0x7fc7cfaae352  mov %r15, %rdi          
0x7fc7cfaae355  lea -0x268(%rbp), %rax  
0x7fc7cfaae35c  mov %rax, %rsi          
0x7fc7cfaae35f  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaae369  callq *%rax             
0x7fc7cfaae36b  test %rax, %rax         
0x7fc7cfaae36e  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae374  mov %rax, -0x210(%rbp)  
0x7fc7cfaae37b  movq $0x398e, -0x208(%rbp)
0x7fc7cfaae386  mov -0x220(%rbp), %rax  
0x7fc7cfaae38d  mov %rax, -0x50(%rbp)   
0x7fc7cfaae391  movq $0x3996, -0x58(%rbp)
0x7fc7cfaae399  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae3a1  mov $0x3, -0x40(%rbp)   
0x7fc7cfaae3a8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae3b0  lea -0x218(%rbp), %rax  
0x7fc7cfaae3b7  mov %rax, -0x38(%rbp)   
0x7fc7cfaae3bb  mov 0x176d890, %rax     
0x7fc7cfaae3c3  mov 0x20(%rax), %rbx    
0x7fc7cfaae3c7  mov $0xe7, -0x244(%rbp) 
0x7fc7cfaae3d1  mov %r15, %rdi          
0x7fc7cfaae3d4  mov %rax, %rsi          
0x7fc7cfaae3d7  lea -0x268(%rbp), %rax  
0x7fc7cfaae3de  mov %rax, %rdx          
0x7fc7cfaae3e1  lea -0x58(%rbp), %rax   
0x7fc7cfaae3e5  mov %rax, %rcx          
0x7fc7cfaae3e8  callq *%rbx             
0x7fc7cfaae3ea  test %rax, %rax         
0x7fc7cfaae3ed  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae3f3  mov %rax, -0x270(%rbp)  
0x7fc7cfaae3fa  mov %rax, -0x220(%rbp)  
0x7fc7cfaae401  movq $0x1, -0x218(%rbp) 
0x7fc7cfaae40c  mov %rax, -0x50(%rbp)   
0x7fc7cfaae410  movq $0x586, -0x58(%rbp)
0x7fc7cfaae418  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae420  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae427  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae42f  lea -0x218(%rbp), %rax  
0x7fc7cfaae436  mov %rax, -0x38(%rbp)   
0x7fc7cfaae43a  mov 0x176d8d8, %rax     
0x7fc7cfaae442  mov 0x20(%rax), %rbx    
0x7fc7cfaae446  mov $0xf0, -0x244(%rbp) 
0x7fc7cfaae450  mov %r15, %rdi          
0x7fc7cfaae453  mov %rax, %rsi          
0x7fc7cfaae456  lea -0x268(%rbp), %rax  
0x7fc7cfaae45d  mov %rax, %rdx          
0x7fc7cfaae460  lea -0x58(%rbp), %rax   
0x7fc7cfaae464  mov %rax, %rcx          
0x7fc7cfaae467  callq *%rbx             
0x7fc7cfaae469  test %rax, %rax         
0x7fc7cfaae46c  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae472  mov %rax, -0x220(%rbp)  
0x7fc7cfaae479  andq $0xf, %rax         
0x7fc7cfaae47d  cmpq $0xa, %rax         
0x7fc7cfaae481  jnz 0x2132               ; 0x7fc7cfaae642
0x7fc7cfaae487  movq $0x1a, -0x220(%rbp)
0x7fc7cfaae492  jmp 0x21c6               ; 0x7fc7cfaae6d6
0x7fc7cfaae497  mov $0x1ae, -0x244(%rbp)
0x7fc7cfaae4a1  mov $0x176dec8, %edx    
0x7fc7cfaae4a6  mov %r15, %rdi          
0x7fc7cfaae4a9  lea -0x268(%rbp), %rax  
0x7fc7cfaae4b0  mov %rax, %rsi          
0x7fc7cfaae4b3  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaae4bd  callq *%rax             
0x7fc7cfaae4bf  test %rax, %rax         
0x7fc7cfaae4c2  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae4c8  mov %rax, -0x210(%rbp)  
0x7fc7cfaae4cf  mov 0x176ded8, %rcx     
0x7fc7cfaae4d7  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaae4db  jnz 0x225b               ; 0x7fc7cfaae76b
0x7fc7cfaae4e1  mov 0x1582514, %edx     
0x7fc7cfaae4e8  cmp 0x44(%rcx), %edx    
0x7fc7cfaae4eb  jnz 0x225b               ; 0x7fc7cfaae76b
0x7fc7cfaae4f1  cmp %rax, 0x28(%rcx)    
0x7fc7cfaae4f5  jnz 0x225b               ; 0x7fc7cfaae76b
0x7fc7cfaae4fb  mov 0x20(%rcx), %rax    
0x7fc7cfaae4ff  jmp 0x228f               ; 0x7fc7cfaae79f
0x7fc7cfaae504  mov $0x12, %ecx         
0x7fc7cfaae509  cmp $0x23, %edx         
0x7fc7cfaae50c  jz 0x2053                ; 0x7fc7cfaae563
0x7fc7cfaae512  cmp $0x25, %edx         
0x7fc7cfaae515  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaae51b  jmp 0x2053               ; 0x7fc7cfaae563
0x7fc7cfaae520  mov $0x12, %ecx         
0x7fc7cfaae525  cmp $0x1f, %edx         
0x7fc7cfaae528  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaae52e  jmp 0x2053               ; 0x7fc7cfaae563
0x7fc7cfaae533  cmpq $0x1a, %r13        
0x7fc7cfaae537  jnz 0x203b               ; 0x7fc7cfaae54b
0x7fc7cfaae53d  mov $0x12, %ecx         
0x7fc7cfaae542  cmp $0x1b, %edx         
0x7fc7cfaae545  jz 0x2053                ; 0x7fc7cfaae563
0x7fc7cfaae54b  mov %r15, %rdi          
0x7fc7cfaae54e  mov %r13, %rsi          
0x7fc7cfaae551  mov %rax, %rdx          
0x7fc7cfaae554  mov $0x7626f0, %rax      ; rbx_kind_of
0x7fc7cfaae55e  callq *%rax             
0x7fc7cfaae560  mov %rax, %rcx          
0x7fc7cfaae563  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae56a  andq $0xf, %rcx         
0x7fc7cfaae56e  cmpq $0xa, %rcx         
0x7fc7cfaae572  jnz 0xabc                ; 0x7fc7cfaacfcc
0x7fc7cfaae578  mov 0x1584100, %r12     
0x7fc7cfaae580  mov %r12, -0x220(%rbp)  
0x7fc7cfaae587  mov %r13, -0x218(%rbp)  
0x7fc7cfaae58e  mov 0x176dd10, %rax     
0x7fc7cfaae596  cmp %rbx, 0x30(%rax)    
0x7fc7cfaae59a  jnz 0x20a9               ; 0x7fc7cfaae5b9
0x7fc7cfaae5a0  mov 0x1582514, %ecx     
0x7fc7cfaae5a7  cmp 0x44(%rax), %ecx    
0x7fc7cfaae5aa  jnz 0x20a9               ; 0x7fc7cfaae5b9
0x7fc7cfaae5b0  mov 0x20(%rax), %rax    
0x7fc7cfaae5b4  jmp 0x20d7               ; 0x7fc7cfaae5e7
0x7fc7cfaae5b9  mov $0x177, -0x244(%rbp)
0x7fc7cfaae5c3  mov $0x176dd10, %edx    
0x7fc7cfaae5c8  mov %r15, %rdi          
0x7fc7cfaae5cb  lea -0x268(%rbp), %rsi  
0x7fc7cfaae5d2  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaae5dc  callq *%rax             
0x7fc7cfaae5de  test %rax, %rax         
0x7fc7cfaae5e1  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae5e7  mov %rax, -0x210(%rbp)  
0x7fc7cfaae5ee  movq $0x398e, -0x208(%rbp)
0x7fc7cfaae5f9  mov %r12, -0x50(%rbp)   
0x7fc7cfaae5fd  movq $0x3996, -0x58(%rbp)
0x7fc7cfaae605  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae60d  mov $0x3, -0x40(%rbp)   
0x7fc7cfaae614  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae61c  lea -0x218(%rbp), %rax  
0x7fc7cfaae623  mov %rax, -0x38(%rbp)   
0x7fc7cfaae627  mov 0x176dd30, %rsi     
0x7fc7cfaae62f  mov 0x20(%rsi), %rax    
0x7fc7cfaae633  mov $0x17b, -0x244(%rbp)
0x7fc7cfaae63d  jmp 0xa99                ; 0x7fc7cfaacfa9
0x7fc7cfaae642  mov -0x270(%rbp), %rax  
0x7fc7cfaae649  mov %rax, -0x220(%rbp)  
0x7fc7cfaae650  mov -0x2b0(%rbp), %rcx  
0x7fc7cfaae657  mov 0x18(%rcx), %rcx    
0x7fc7cfaae65b  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae662  mov %rax, -0x50(%rbp)   
0x7fc7cfaae666  movq $0x55e, -0x58(%rbp)
0x7fc7cfaae66e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae676  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae67d  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae685  lea -0x218(%rbp), %rax  
0x7fc7cfaae68c  mov %rax, -0x38(%rbp)   
0x7fc7cfaae690  mov 0x176d920, %rax     
0x7fc7cfaae698  mov 0x20(%rax), %rbx    
0x7fc7cfaae69c  mov $0xf9, -0x244(%rbp) 
0x7fc7cfaae6a6  mov %r15, %rdi          
0x7fc7cfaae6a9  mov %rax, %rsi          
0x7fc7cfaae6ac  lea -0x268(%rbp), %rax  
0x7fc7cfaae6b3  mov %rax, %rdx          
0x7fc7cfaae6b6  lea -0x58(%rbp), %rax   
0x7fc7cfaae6ba  mov %rax, %rcx          
0x7fc7cfaae6bd  callq *%rbx             
0x7fc7cfaae6bf  test %rax, %rax         
0x7fc7cfaae6c2  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae6c8  mov %rax, -0x220(%rbp)  
0x7fc7cfaae6cf  mov %rax, -0x270(%rbp)  
0x7fc7cfaae6d6  mov -0x290(%rbp), %rax  
0x7fc7cfaae6dd  mov %rax, -0x220(%rbp)  
0x7fc7cfaae6e4  mov %rax, -0x50(%rbp)   
0x7fc7cfaae6e8  movq $0x497e, -0x58(%rbp)
0x7fc7cfaae6f0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae6f8  mov $0x0, -0x40(%rbp)   
0x7fc7cfaae6ff  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae707  mov 0x176d978, %rax     
0x7fc7cfaae70f  mov 0x20(%rax), %rbx    
0x7fc7cfaae713  mov $0x104, -0x244(%rbp)
0x7fc7cfaae71d  mov %r15, %rdi          
0x7fc7cfaae720  mov %rax, %rsi          
0x7fc7cfaae723  lea -0x268(%rbp), %rax  
0x7fc7cfaae72a  mov %rax, %rdx          
0x7fc7cfaae72d  lea -0x58(%rbp), %rax   
0x7fc7cfaae731  mov %rax, %rcx          
0x7fc7cfaae734  callq *%rbx             
0x7fc7cfaae736  test %rax, %rax         
0x7fc7cfaae739  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae73f  mov %rax, -0x220(%rbp)  
0x7fc7cfaae746  andq $0xf, %rax         
0x7fc7cfaae74a  cmpq $0xa, %rax         
0x7fc7cfaae74e  jnz 0x2347               ; 0x7fc7cfaae857
0x7fc7cfaae754  movq $0x1a, -0x220(%rbp)
0x7fc7cfaae75f  mov -0x270(%rbp), %rax  
0x7fc7cfaae766  jmp 0x23d4               ; 0x7fc7cfaae8e4
0x7fc7cfaae76b  mov $0x1b0, -0x244(%rbp)
0x7fc7cfaae775  mov $0x176ded8, %edx    
0x7fc7cfaae77a  mov %r15, %rdi          
0x7fc7cfaae77d  lea -0x268(%rbp), %rcx  
0x7fc7cfaae784  mov %rcx, %rsi          
0x7fc7cfaae787  mov %rax, %rcx          
0x7fc7cfaae78a  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfaae794  callq *%rax             
0x7fc7cfaae796  test %rax, %rax         
0x7fc7cfaae799  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae79f  mov %rax, -0x218(%rbp)  
0x7fc7cfaae7a6  mov %r12, -0x210(%rbp)  
0x7fc7cfaae7ad  mov %rax, -0x50(%rbp)   
0x7fc7cfaae7b1  movq $0x57e, -0x58(%rbp)
0x7fc7cfaae7b9  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae7c1  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae7c8  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae7d0  lea -0x210(%rbp), %rax  
0x7fc7cfaae7d7  mov %rax, -0x38(%rbp)   
0x7fc7cfaae7db  mov 0x176def0, %rax     
0x7fc7cfaae7e3  mov 0x20(%rax), %rbx    
0x7fc7cfaae7e7  mov $0x1b3, -0x244(%rbp)
0x7fc7cfaae7f1  mov %r15, %rdi          
0x7fc7cfaae7f4  mov %rax, %rsi          
0x7fc7cfaae7f7  lea -0x268(%rbp), %rax  
0x7fc7cfaae7fe  mov %rax, %rdx          
0x7fc7cfaae801  lea -0x58(%rbp), %rax   
0x7fc7cfaae805  mov %rax, %rcx          
0x7fc7cfaae808  callq *%rbx             
0x7fc7cfaae80a  test %rax, %rax         
0x7fc7cfaae80d  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae813  mov %rax, -0x218(%rbp)  
0x7fc7cfaae81a  andq $0xf, %rax         
0x7fc7cfaae81e  cmpq $0xa, %rax         
0x7fc7cfaae822  jnz 0x255a               ; 0x7fc7cfaaea6a
0x7fc7cfaae828  mov -0x1d8(%rbp), %rax  
0x7fc7cfaae82f  mov %rax, -0x220(%rbp)  
0x7fc7cfaae836  mov %r15, %rdi          
0x7fc7cfaae839  lea -0x268(%rbp), %rcx  
0x7fc7cfaae840  mov %rcx, %rsi          
0x7fc7cfaae843  mov %rax, %rdx          
0x7fc7cfaae846  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7fc7cfaae850  callq *%rax             
0x7fc7cfaae852  jmp 0x2628               ; 0x7fc7cfaaeb38
0x7fc7cfaae857  mov -0x270(%rbp), %rax  
0x7fc7cfaae85e  mov %rax, -0x220(%rbp)  
0x7fc7cfaae865  movq $0x3, -0x218(%rbp) 
0x7fc7cfaae870  mov %rax, -0x50(%rbp)   
0x7fc7cfaae874  movq $0x566, -0x58(%rbp)
0x7fc7cfaae87c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae884  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae88b  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae893  lea -0x218(%rbp), %rax  
0x7fc7cfaae89a  mov %rax, -0x38(%rbp)   
0x7fc7cfaae89e  mov 0x176d9b8, %rax     
0x7fc7cfaae8a6  mov 0x20(%rax), %rbx    
0x7fc7cfaae8aa  mov $0x10c, -0x244(%rbp)
0x7fc7cfaae8b4  mov %r15, %rdi          
0x7fc7cfaae8b7  mov %rax, %rsi          
0x7fc7cfaae8ba  lea -0x268(%rbp), %rax  
0x7fc7cfaae8c1  mov %rax, %rdx          
0x7fc7cfaae8c4  lea -0x58(%rbp), %rax   
0x7fc7cfaae8c8  mov %rax, %rcx          
0x7fc7cfaae8cb  callq *%rbx             
0x7fc7cfaae8cd  test %rax, %rax         
0x7fc7cfaae8d0  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae8d6  mov %rax, -0x220(%rbp)  
0x7fc7cfaae8dd  mov %rax, -0x270(%rbp)  
0x7fc7cfaae8e4  mov %rax, -0x220(%rbp)  
0x7fc7cfaae8eb  mov -0x280(%rbp), %rcx  
0x7fc7cfaae8f2  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae8f9  mov %rax, -0x50(%rbp)   
0x7fc7cfaae8fd  movq $0x586, -0x58(%rbp)
0x7fc7cfaae905  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae90d  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae914  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae91c  lea -0x218(%rbp), %rax  
0x7fc7cfaae923  mov %rax, -0x38(%rbp)   
0x7fc7cfaae927  mov 0x176da20, %rax     
0x7fc7cfaae92f  mov 0x20(%rax), %rbx    
0x7fc7cfaae933  mov $0x119, -0x244(%rbp)
0x7fc7cfaae93d  mov %r15, %rdi          
0x7fc7cfaae940  mov %rax, %rsi          
0x7fc7cfaae943  lea -0x268(%rbp), %rax  
0x7fc7cfaae94a  mov %rax, %rdx          
0x7fc7cfaae94d  lea -0x58(%rbp), %rax   
0x7fc7cfaae951  mov %rax, %rcx          
0x7fc7cfaae954  callq *%rbx             
0x7fc7cfaae956  test %rax, %rax         
0x7fc7cfaae959  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae95f  mov %rax, -0x220(%rbp)  
0x7fc7cfaae966  andq $0xf, %rax         
0x7fc7cfaae96a  cmpq $0xa, %rax         
0x7fc7cfaae96e  jnz 0x259b               ; 0x7fc7cfaaeaab
0x7fc7cfaae974  mov -0x270(%rbp), %rax  
0x7fc7cfaae97b  mov %rax, -0x220(%rbp)  
0x7fc7cfaae982  mov -0x280(%rbp), %rcx  
0x7fc7cfaae989  mov %rcx, -0x218(%rbp)  
0x7fc7cfaae990  mov %rax, -0x50(%rbp)   
0x7fc7cfaae994  movq $0x566, -0x58(%rbp)
0x7fc7cfaae99c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaae9a4  mov $0x1, -0x40(%rbp)   
0x7fc7cfaae9ab  movq $0x0, -0x30(%rbp)  
0x7fc7cfaae9b3  lea -0x218(%rbp), %rax  
0x7fc7cfaae9ba  mov %rax, -0x38(%rbp)   
0x7fc7cfaae9be  mov 0x176dac8, %rax     
0x7fc7cfaae9c6  mov 0x20(%rax), %rbx    
0x7fc7cfaae9ca  mov $0x12e, -0x244(%rbp)
0x7fc7cfaae9d4  mov %r15, %rdi          
0x7fc7cfaae9d7  mov %rax, %rsi          
0x7fc7cfaae9da  lea -0x268(%rbp), %rax  
0x7fc7cfaae9e1  mov %rax, %rdx          
0x7fc7cfaae9e4  lea -0x58(%rbp), %rax   
0x7fc7cfaae9e8  mov %rax, %rcx          
0x7fc7cfaae9eb  callq *%rbx             
0x7fc7cfaae9ed  test %rax, %rax         
0x7fc7cfaae9f0  jz 0x2628                ; 0x7fc7cfaaeb38
0x7fc7cfaae9f6  mov %rax, -0x220(%rbp)  
0x7fc7cfaae9fd  movq $0x3, -0x218(%rbp) 
0x7fc7cfaaea08  mov %rax, -0x50(%rbp)   
0x7fc7cfaaea0c  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaea14  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaea1c  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaea23  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaea2b  lea -0x218(%rbp), %rax  
0x7fc7cfaaea32  mov %rax, -0x38(%rbp)   
0x7fc7cfaaea36  mov 0x176dae8, %rax     
0x7fc7cfaaea3e  mov 0x20(%rax), %rbx    
0x7fc7cfaaea42  mov $0x132, -0x244(%rbp)
0x7fc7cfaaea4c  mov %r15, %rdi          
0x7fc7cfaaea4f  mov %rax, %rsi          
0x7fc7cfaaea52  lea -0x268(%rbp), %rax  
0x7fc7cfaaea59  mov %rax, %rdx          
0x7fc7cfaaea5c  lea -0x58(%rbp), %rax   
0x7fc7cfaaea60  mov %rax, %rcx          
0x7fc7cfaaea63  callq *%rbx             
0x7fc7cfaaea65  jmp 0xaa9                ; 0x7fc7cfaacfb9
0x7fc7cfaaea6a  movq $0x1a, -0x220(%rbp)
0x7fc7cfaaea75  mov -0x1d0(%rbp), %rax  
0x7fc7cfaaea7c  mov %rax, -0x218(%rbp)  
0x7fc7cfaaea83  mov %r15, %rdi          
0x7fc7cfaaea86  lea -0x268(%rbp), %rcx  
0x7fc7cfaaea8d  mov %rcx, %rsi          
0x7fc7cfaaea90  mov %rax, %rdx          
0x7fc7cfaaea93  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7fc7cfaaea9d  callq *%rax             
0x7fc7cfaaea9f  mov -0x220(%rbp), %rbx  
0x7fc7cfaaeaa6  jmp 0x4f46               ; 0x7fc7cfab1456
0x7fc7cfaaeaab  mov -0x2b0(%rbp), %rax  
0x7fc7cfaaeab2  mov %rax, -0x220(%rbp)  
0x7fc7cfaaeab9  movq $0x1, -0x218(%rbp) 
0x7fc7cfaaeac4  movq $0x1, -0x210(%rbp) 
0x7fc7cfaaeacf  mov %rax, -0x50(%rbp)   
0x7fc7cfaaead3  movq $0x3ba6, -0x58(%rbp)
0x7fc7cfaaeadb  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaeae3  mov $0x2, -0x40(%rbp)   
0x7fc7cfaaeaea  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaeaf2  lea -0x218(%rbp), %rax  
0x7fc7cfaaeaf9  mov %rax, -0x38(%rbp)   
0x7fc7cfaaeafd  mov 0x176da68, %rax     
0x7fc7cfaaeb05  mov 0x20(%rax), %rbx    
0x7fc7cfaaeb09  mov $0x122, -0x244(%rbp)
0x7fc7cfaaeb13  mov %r15, %rdi          
0x7fc7cfaaeb16  mov %rax, %rsi          
0x7fc7cfaaeb19  lea -0x268(%rbp), %rax  
0x7fc7cfaaeb20  mov %rax, %rdx          
0x7fc7cfaaeb23  lea -0x58(%rbp), %rax   
0x7fc7cfaaeb27  mov %rax, %rcx          
0x7fc7cfaaeb2a  callq *%rbx             
0x7fc7cfaaeb2c  mov %rax, %rbx          
0x7fc7cfaaeb2f  test %rbx, %rbx         
0x7fc7cfaaeb32  jnz 0x4f3f               ; 0x7fc7cfab144f
0x7fc7cfaaeb38  mov %r15, %rdi          
0x7fc7cfaaeb3b  lea -0x268(%rbp), %rsi  
0x7fc7cfaaeb42  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfaaeb4c  callq *%rax             
0x7fc7cfaaeb4e  mov $0x0, %ebx          
0x7fc7cfaaeb53  testb $0x1, %al         
0x7fc7cfaaeb56  lea -0xd8(%rbp), %r12   
0x7fc7cfaaeb5d  jz 0x2665                ; 0x7fc7cfaaeb75
0x7fc7cfaaeb63  mov %r15, %rdi          
0x7fc7cfaaeb66  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfaaeb70  callq *%rax             
0x7fc7cfaaeb72  mov %rax, %rbx          
0x7fc7cfaaeb75  test %rbx, %rbx         
0x7fc7cfaaeb78  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaeb7e  mov %rbx, -0x168(%rbp)  
0x7fc7cfaaeb85  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfaaeb90  mov -0x1a8(%rbp), %r13  
0x7fc7cfaaeb97  testb $0x3, %r13b       
0x7fc7cfaaeb9b  jnz 0x26b8               ; 0x7fc7cfaaebc8
0x7fc7cfaaeba1  mov 0x8(%r13), %rax     
0x7fc7cfaaeba5  cmp $0x505, 0x70(%rax)  
0x7fc7cfaaebac  jnz 0x26b8               ; 0x7fc7cfaaebc8
0x7fc7cfaaebb2  mov 0x18(%r13), %rcx    
0x7fc7cfaaebb6  cmpq $0x22, %rcx        
0x7fc7cfaaebba  mov $0x1a, %eax         
0x7fc7cfaaebbf  cmovnz %rcx, %rax       
0x7fc7cfaaebc3  jmp 0x26cf               ; 0x7fc7cfaaebdf
0x7fc7cfaaebc8  mov $0x10056, %edx      
0x7fc7cfaaebcd  mov %r15, %rdi          
0x7fc7cfaaebd0  mov %r13, %rsi          
0x7fc7cfaaebd3  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfaaebdd  callq *%rax             
0x7fc7cfaaebdf  mov %rax, -0xe0(%rbp)   
0x7fc7cfaaebe6  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaaebed  testb $0x3, %bl         
0x7fc7cfaaebf0  jnz 0x5067               ; 0x7fc7cfab1577
0x7fc7cfaaebf6  mov 0x8(%rbx), %rcx     
0x7fc7cfaaebfa  cmp $0x505, 0x70(%rcx)  
0x7fc7cfaaec01  jnz 0x5067               ; 0x7fc7cfab1577
0x7fc7cfaaec07  cmp $0x2, 0x74(%rcx)    
0x7fc7cfaaec0b  jnz 0x51c3               ; 0x7fc7cfab16d3
0x7fc7cfaaec11  mov 0x18(%rbx), %rdx    
0x7fc7cfaaec15  cmpq $0x22, %rdx        
0x7fc7cfaaec19  mov $0x1a, %ecx         
0x7fc7cfaaec1e  cmovnz %rdx, %rcx       
0x7fc7cfaaec22  mov %rcx, -0xd8(%rbp)   
0x7fc7cfaaec29  testb $0x3, %al         
0x7fc7cfaaec2c  jnz 0x2767               ; 0x7fc7cfaaec77
0x7fc7cfaaec32  mov 0x8(%rax), %rdx     
0x7fc7cfaaec36  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaec3a  jnz 0x2767               ; 0x7fc7cfaaec77
0x7fc7cfaaec40  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfaaec47  jnz 0x53a0               ; 0x7fc7cfab18b0
0x7fc7cfaaec4d  testb $0x3, %cl         
0x7fc7cfaaec50  jnz 0x275e               ; 0x7fc7cfaaec6e
0x7fc7cfaaec56  mov 0x8(%rcx), %rdx     
0x7fc7cfaaec5a  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaec5e  jnz 0x275e               ; 0x7fc7cfaaec6e
0x7fc7cfaaec64  invalid                 
0x7fc7cfaaec65  sti                     
0x7fc7cfaaec66  adc %al, 0x18(%rcx)     
0x7fc7cfaaec69  jmp 0x322f               ; 0x7fc7cfaaf73f
0x7fc7cfaaec6e  testb $0x1, %cl         
0x7fc7cfaaec71  jnz 0x3227               ; 0x7fc7cfaaf737
0x7fc7cfaaec77  mov %rax, -0x50(%rbp)   
0x7fc7cfaaec7b  movq $0x566, -0x58(%rbp)
0x7fc7cfaaec83  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaec8b  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaec92  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaec9a  mov %r12, -0x38(%rbp)   
0x7fc7cfaaec9e  mov 0x1951988, %rsi     
0x7fc7cfaaeca6  mov 0x20(%rsi), %rax    
0x7fc7cfaaecaa  mov $0x1a, -0x104(%rbp) 
0x7fc7cfaaecb4  mov %r15, %rdi          
0x7fc7cfaaecb7  mov %r14, %rdx          
0x7fc7cfaaecba  lea -0x58(%rbp), %rcx   
0x7fc7cfaaecbe  callq *%rax             
0x7fc7cfaaecc0  test %rax, %rax         
0x7fc7cfaaecc3  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaecc9  mov -0x1a8(%rbp), %r13  
0x7fc7cfaaecd0  mov %rax, -0x160(%rbp)  
0x7fc7cfaaecd7  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfaaece2  testb $0x3, %r13b       
0x7fc7cfaaece6  jnz 0x2803               ; 0x7fc7cfaaed13
0x7fc7cfaaecec  mov 0x8(%r13), %rax     
0x7fc7cfaaecf0  cmp $0x505, 0x70(%rax)  
0x7fc7cfaaecf7  jnz 0x2803               ; 0x7fc7cfaaed13
0x7fc7cfaaecfd  mov 0x20(%r13), %rcx    
0x7fc7cfaaed01  cmpq $0x22, %rcx        
0x7fc7cfaaed05  mov $0x1a, %eax         
0x7fc7cfaaed0a  cmovnz %rcx, %rax       
0x7fc7cfaaed0e  jmp 0x281a               ; 0x7fc7cfaaed2a
0x7fc7cfaaed13  mov $0x1005e, %edx      
0x7fc7cfaaed18  mov %r15, %rdi          
0x7fc7cfaaed1b  mov %r13, %rsi          
0x7fc7cfaaed1e  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfaaed28  callq *%rax             
0x7fc7cfaaed2a  mov %rax, -0xe0(%rbp)   
0x7fc7cfaaed31  mov -0x168(%rbp), %rcx  
0x7fc7cfaaed38  mov 0x20(%rcx), %rdx    
0x7fc7cfaaed3c  cmpq $0x22, %rdx        
0x7fc7cfaaed40  mov $0x1a, %ecx         
0x7fc7cfaaed45  cmovnz %rdx, %rcx       
0x7fc7cfaaed49  mov %rcx, -0xd8(%rbp)   
0x7fc7cfaaed50  testb $0x3, %al         
0x7fc7cfaaed53  jnz 0x288e               ; 0x7fc7cfaaed9e
0x7fc7cfaaed59  mov 0x8(%rax), %rdx     
0x7fc7cfaaed5d  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaed61  jnz 0x288e               ; 0x7fc7cfaaed9e
0x7fc7cfaaed67  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfaaed6e  jnz 0x53e3               ; 0x7fc7cfab18f3
0x7fc7cfaaed74  testb $0x3, %cl         
0x7fc7cfaaed77  jnz 0x2885               ; 0x7fc7cfaaed95
0x7fc7cfaaed7d  mov 0x8(%rcx), %rdx     
0x7fc7cfaaed81  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaed85  jnz 0x2885               ; 0x7fc7cfaaed95
0x7fc7cfaaed8b  invalid                 
0x7fc7cfaaed8c  sti                     
0x7fc7cfaaed8d  adc %al, 0x18(%rcx)     
0x7fc7cfaaed90  jmp 0x3269               ; 0x7fc7cfaaf779
0x7fc7cfaaed95  testb $0x1, %cl         
0x7fc7cfaaed98  jnz 0x3261               ; 0x7fc7cfaaf771
0x7fc7cfaaed9e  mov %rax, -0x50(%rbp)   
0x7fc7cfaaeda2  movq $0x566, -0x58(%rbp)
0x7fc7cfaaedaa  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaedb2  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaedb9  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaedc1  mov %r12, -0x38(%rbp)   
0x7fc7cfaaedc5  mov 0x19519f0, %rsi     
0x7fc7cfaaedcd  mov 0x20(%rsi), %rax    
0x7fc7cfaaedd1  mov $0x27, -0x104(%rbp) 
0x7fc7cfaaeddb  mov %r15, %rdi          
0x7fc7cfaaedde  mov %r14, %rdx          
0x7fc7cfaaede1  lea -0x58(%rbp), %rcx   
0x7fc7cfaaede5  callq *%rax             
0x7fc7cfaaede7  test %rax, %rax         
0x7fc7cfaaedea  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaedf0  mov -0x1a8(%rbp), %r13  
0x7fc7cfaaedf7  mov %rax, -0x158(%rbp)  
0x7fc7cfaaedfe  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfaaee09  testb $0x3, %r13b       
0x7fc7cfaaee0d  jnz 0x292a               ; 0x7fc7cfaaee3a
0x7fc7cfaaee13  mov 0x8(%r13), %rax     
0x7fc7cfaaee17  cmp $0x505, 0x70(%rax)  
0x7fc7cfaaee1e  jnz 0x292a               ; 0x7fc7cfaaee3a
0x7fc7cfaaee24  mov 0x28(%r13), %rcx    
0x7fc7cfaaee28  cmpq $0x22, %rcx        
0x7fc7cfaaee2c  mov $0x1a, %eax         
0x7fc7cfaaee31  cmovnz %rcx, %rax       
0x7fc7cfaaee35  jmp 0x2941               ; 0x7fc7cfaaee51
0x7fc7cfaaee3a  mov $0x10066, %edx      
0x7fc7cfaaee3f  mov %r15, %rdi          
0x7fc7cfaaee42  mov %r13, %rsi          
0x7fc7cfaaee45  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfaaee4f  callq *%rax             
0x7fc7cfaaee51  mov %rax, -0xe0(%rbp)   
0x7fc7cfaaee58  mov -0x168(%rbp), %rcx  
0x7fc7cfaaee5f  mov %rcx, -0xd8(%rbp)   
0x7fc7cfaaee66  mov 0x28(%rcx), %rdx    
0x7fc7cfaaee6a  cmpq $0x22, %rdx        
0x7fc7cfaaee6e  mov $0x1a, %ecx         
0x7fc7cfaaee73  cmovnz %rdx, %rcx       
0x7fc7cfaaee77  mov %rcx, -0xd8(%rbp)   
0x7fc7cfaaee7e  testb $0x3, %al         
0x7fc7cfaaee81  jnz 0x29bc               ; 0x7fc7cfaaeecc
0x7fc7cfaaee87  mov 0x8(%rax), %rdx     
0x7fc7cfaaee8b  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaee8f  jnz 0x29bc               ; 0x7fc7cfaaeecc
0x7fc7cfaaee95  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfaaee9c  jnz 0x5426               ; 0x7fc7cfab1936
0x7fc7cfaaeea2  testb $0x3, %cl         
0x7fc7cfaaeea5  jnz 0x29b3               ; 0x7fc7cfaaeec3
0x7fc7cfaaeeab  mov 0x8(%rcx), %rdx     
0x7fc7cfaaeeaf  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaeeb3  jnz 0x29b3               ; 0x7fc7cfaaeec3
0x7fc7cfaaeeb9  invalid                 
0x7fc7cfaaeeba  sti                     
0x7fc7cfaaeebb  adc %al, 0x18(%rcx)     
0x7fc7cfaaeebe  jmp 0x32a3               ; 0x7fc7cfaaf7b3
0x7fc7cfaaeec3  testb $0x1, %cl         
0x7fc7cfaaeec6  jnz 0x329b               ; 0x7fc7cfaaf7ab
0x7fc7cfaaeecc  mov %rax, -0x50(%rbp)   
0x7fc7cfaaeed0  movq $0x566, -0x58(%rbp)
0x7fc7cfaaeed8  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaeee0  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaeee7  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaeeef  mov %r12, -0x38(%rbp)   
0x7fc7cfaaeef3  mov 0x1951a58, %rsi     
0x7fc7cfaaeefb  mov 0x20(%rsi), %rax    
0x7fc7cfaaeeff  mov $0x34, -0x104(%rbp) 
0x7fc7cfaaef09  mov %r15, %rdi          
0x7fc7cfaaef0c  mov %r14, %rdx          
0x7fc7cfaaef0f  lea -0x58(%rbp), %rcx   
0x7fc7cfaaef13  callq *%rax             
0x7fc7cfaaef15  test %rax, %rax         
0x7fc7cfaaef18  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaef1e  mov %rax, -0xe0(%rbp)   
0x7fc7cfaaef25  mov %rax, -0x150(%rbp)  
0x7fc7cfaaef2c  mov 0x1951a88, %rax     
0x7fc7cfaaef34  mov 0x30(%rax), %rcx    
0x7fc7cfaaef38  cmp -0x120(%rbp), %rcx  
0x7fc7cfaaef3f  jnz 0x2a4e               ; 0x7fc7cfaaef5e
0x7fc7cfaaef45  mov 0x1582514, %ecx     
0x7fc7cfaaef4c  cmp 0x44(%rax), %ecx    
0x7fc7cfaaef4f  jnz 0x2a4e               ; 0x7fc7cfaaef5e
0x7fc7cfaaef55  mov 0x20(%rax), %rax    
0x7fc7cfaaef59  jmp 0x2a78               ; 0x7fc7cfaaef88
0x7fc7cfaaef5e  mov $0x3a, -0x104(%rbp) 
0x7fc7cfaaef68  mov $0x1951a88, %edx    
0x7fc7cfaaef6d  mov %r15, %rdi          
0x7fc7cfaaef70  mov %r14, %rsi          
0x7fc7cfaaef73  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaef7d  callq *%rax             
0x7fc7cfaaef7f  test %rax, %rax         
0x7fc7cfaaef82  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaef88  mov %rax, -0xe0(%rbp)   
0x7fc7cfaaef8f  mov -0x160(%rbp), %rax  
0x7fc7cfaaef96  mov %rax, -0xd8(%rbp)   
0x7fc7cfaaef9d  mov %rax, -0xd0(%rbp)   
0x7fc7cfaaefa4  testb $0x3, %al         
0x7fc7cfaaefa7  jnz 0x2aed               ; 0x7fc7cfaaeffd
0x7fc7cfaaefad  mov 0x8(%rax), %rcx     
0x7fc7cfaaefb1  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaefb5  jnz 0x2aed               ; 0x7fc7cfaaeffd
0x7fc7cfaaefbb  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaefc2  jnz 0x5469               ; 0x7fc7cfab1979
0x7fc7cfaaefc8  invalid                 
0x7fc7cfaaefc9  sti                     
0x7fc7cfaaefca  adc %al, 0x18(%rax)     
0x7fc7cfaaefcd  invalid                 
0x7fc7cfaaefce  sti                     
0x7fc7cfaaefcf  pop %rcx                
0x7fc7cfaaefd0  rolb $0xfb, %ch         
0x7fc7cfaaefd3  adc %eax, -0x368(%rbp)  
0x7fc7cfaaefd9  mov %r15, %rdi          
0x7fc7cfaaefdc  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaefe6  callq *%rax             
0x7fc7cfaaefe8  mov %rax, %rbx          
0x7fc7cfaaefeb  invalid                 
0x7fc7cfaaefec  sti                     
0x7fc7cfaaefed  adc %al, -0x368(%rbp)   
0x7fc7cfaaeff3  invalid                 
0x7fc7cfaaeff4  sti                     
0x7fc7cfaaeff5  adc %eax, 0x18(%rbx)    
0x7fc7cfaaeff8  jmp 0x2b49               ; 0x7fc7cfaaf059
0x7fc7cfaaeffd  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf001  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaaf009  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf011  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf018  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf020  lea -0xd0(%rbp), %rax   
0x7fc7cfaaf027  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf02b  mov 0x1951ab8, %rsi     
0x7fc7cfaaf033  mov 0x20(%rsi), %rax    
0x7fc7cfaaf037  mov $0x40, -0x104(%rbp) 
0x7fc7cfaaf041  mov %r15, %rdi          
0x7fc7cfaaf044  mov %r14, %rdx          
0x7fc7cfaaf047  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf04b  callq *%rax             
0x7fc7cfaaf04d  mov %rax, %rbx          
0x7fc7cfaaf050  test %rbx, %rbx         
0x7fc7cfaaf053  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaf059  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaaf060  mov -0x158(%rbp), %rax  
0x7fc7cfaaf067  mov %rax, -0xd0(%rbp)   
0x7fc7cfaaf06e  mov %rax, -0xc8(%rbp)   
0x7fc7cfaaf075  testb $0x3, %al         
0x7fc7cfaaf078  jnz 0x2bbb               ; 0x7fc7cfaaf0cb
0x7fc7cfaaf07e  mov 0x8(%rax), %rcx     
0x7fc7cfaaf082  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf086  jnz 0x2bbb               ; 0x7fc7cfaaf0cb
0x7fc7cfaaf08c  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaf093  jnz 0x54b1               ; 0x7fc7cfab19c1
0x7fc7cfaaf099  invalid                 
0x7fc7cfaaf09a  sti                     
0x7fc7cfaaf09b  adc %al, 0x18(%rax)     
0x7fc7cfaaf09e  invalid                 
0x7fc7cfaaf09f  sti                     
0x7fc7cfaaf0a0  pop %rcx                
0x7fc7cfaaf0a1  rolb $0xfb, %ch         
0x7fc7cfaaf0a4  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf0aa  mov %r15, %rdi          
0x7fc7cfaaf0ad  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf0b7  callq *%rax             
0x7fc7cfaaf0b9  invalid                 
0x7fc7cfaaf0ba  sti                     
0x7fc7cfaaf0bb  adc %al, -0x368(%rbp)   
0x7fc7cfaaf0c1  invalid                 
0x7fc7cfaaf0c2  sti                     
0x7fc7cfaaf0c3  adc %eax, 0x18(%rax)    
0x7fc7cfaaf0c6  jmp 0x2c1b               ; 0x7fc7cfaaf12b
0x7fc7cfaaf0cb  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf0cf  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaaf0d7  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf0df  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf0e6  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf0ee  lea -0xc8(%rbp), %rax   
0x7fc7cfaaf0f5  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf0f9  mov 0x1951af0, %rsi     
0x7fc7cfaaf101  mov 0x20(%rsi), %rax    
0x7fc7cfaaf105  mov $0x47, -0x104(%rbp) 
0x7fc7cfaaf10f  mov %r15, %rdi          
0x7fc7cfaaf112  mov %r14, %rdx          
0x7fc7cfaaf115  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf119  callq *%rax             
0x7fc7cfaaf11b  test %rax, %rax         
0x7fc7cfaaf11e  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaf124  mov -0xd8(%rbp), %rbx   
0x7fc7cfaaf12b  mov %rax, -0xd0(%rbp)   
0x7fc7cfaaf132  testb $0x3, %bl         
0x7fc7cfaaf135  jnz 0x2c70               ; 0x7fc7cfaaf180
0x7fc7cfaaf13b  mov 0x8(%rbx), %rcx     
0x7fc7cfaaf13f  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf143  jnz 0x2c70               ; 0x7fc7cfaaf180
0x7fc7cfaaf149  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaf150  jnz 0x54f9               ; 0x7fc7cfab1a09
0x7fc7cfaaf156  testb $0x3, %al         
0x7fc7cfaaf159  jnz 0x2c67               ; 0x7fc7cfaaf177
0x7fc7cfaaf15f  mov 0x8(%rax), %rcx     
0x7fc7cfaaf163  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf167  jnz 0x2c67               ; 0x7fc7cfaaf177
0x7fc7cfaaf16d  invalid                 
0x7fc7cfaaf16e  sti                     
0x7fc7cfaaf16f  adc %al, 0x18(%rax)     
0x7fc7cfaaf172  jmp 0x3312               ; 0x7fc7cfaaf822
0x7fc7cfaaf177  testb $0x1, %al         
0x7fc7cfaaf17a  jnz 0x330a               ; 0x7fc7cfaaf81a
0x7fc7cfaaf180  mov %rbx, -0x50(%rbp)   
0x7fc7cfaaf184  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaf18c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf194  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf19b  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf1a3  lea -0xd0(%rbp), %rax   
0x7fc7cfaaf1aa  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf1ae  mov 0x1951b08, %rsi     
0x7fc7cfaaf1b6  mov 0x20(%rsi), %rax    
0x7fc7cfaaf1ba  mov $0x4a, -0x104(%rbp) 
0x7fc7cfaaf1c4  mov %r15, %rdi          
0x7fc7cfaaf1c7  mov %r14, %rdx          
0x7fc7cfaaf1ca  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf1ce  callq *%rax             
0x7fc7cfaaf1d0  mov %rax, %rbx          
0x7fc7cfaaf1d3  test %rbx, %rbx         
0x7fc7cfaaf1d6  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaf1dc  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaaf1e3  mov -0x150(%rbp), %rax  
0x7fc7cfaaf1ea  mov %rax, -0xd0(%rbp)   
0x7fc7cfaaf1f1  mov %rax, -0xc8(%rbp)   
0x7fc7cfaaf1f8  testb $0x3, %al         
0x7fc7cfaaf1fb  jnz 0x2d3e               ; 0x7fc7cfaaf24e
0x7fc7cfaaf201  mov 0x8(%rax), %rcx     
0x7fc7cfaaf205  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf209  jnz 0x2d3e               ; 0x7fc7cfaaf24e
0x7fc7cfaaf20f  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaf216  jnz 0x5541               ; 0x7fc7cfab1a51
0x7fc7cfaaf21c  invalid                 
0x7fc7cfaaf21d  sti                     
0x7fc7cfaaf21e  adc %al, 0x18(%rax)     
0x7fc7cfaaf221  invalid                 
0x7fc7cfaaf222  sti                     
0x7fc7cfaaf223  pop %rcx                
0x7fc7cfaaf224  rolb $0xfb, %ch         
0x7fc7cfaaf227  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf22d  mov %r15, %rdi          
0x7fc7cfaaf230  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf23a  callq *%rax             
0x7fc7cfaaf23c  invalid                 
0x7fc7cfaaf23d  sti                     
0x7fc7cfaaf23e  adc %al, -0x368(%rbp)   
0x7fc7cfaaf244  invalid                 
0x7fc7cfaaf245  sti                     
0x7fc7cfaaf246  adc %eax, 0x18(%rax)    
0x7fc7cfaaf249  jmp 0x2d9e               ; 0x7fc7cfaaf2ae
0x7fc7cfaaf24e  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf252  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaaf25a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf262  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf269  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf271  lea -0xc8(%rbp), %rax   
0x7fc7cfaaf278  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf27c  mov 0x1951b40, %rsi     
0x7fc7cfaaf284  mov 0x20(%rsi), %rax    
0x7fc7cfaaf288  mov $0x51, -0x104(%rbp) 
0x7fc7cfaaf292  mov %r15, %rdi          
0x7fc7cfaaf295  mov %r14, %rdx          
0x7fc7cfaaf298  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf29c  callq *%rax             
0x7fc7cfaaf29e  test %rax, %rax         
0x7fc7cfaaf2a1  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaf2a7  mov -0xd8(%rbp), %rbx   
0x7fc7cfaaf2ae  mov %rax, -0xd0(%rbp)   
0x7fc7cfaaf2b5  testb $0x3, %bl         
0x7fc7cfaaf2b8  jnz 0x2df3               ; 0x7fc7cfaaf303
0x7fc7cfaaf2be  mov 0x8(%rbx), %rcx     
0x7fc7cfaaf2c2  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf2c6  jnz 0x2df3               ; 0x7fc7cfaaf303
0x7fc7cfaaf2cc  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaf2d3  jnz 0x5589               ; 0x7fc7cfab1a99
0x7fc7cfaaf2d9  testb $0x3, %al         
0x7fc7cfaaf2dc  jnz 0x2dea               ; 0x7fc7cfaaf2fa
0x7fc7cfaaf2e2  mov 0x8(%rax), %rcx     
0x7fc7cfaaf2e6  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaf2ea  jnz 0x2dea               ; 0x7fc7cfaaf2fa
0x7fc7cfaaf2f0  invalid                 
0x7fc7cfaaf2f1  sti                     
0x7fc7cfaaf2f2  adc %al, 0x18(%rax)     
0x7fc7cfaaf2f5  jmp 0x334b               ; 0x7fc7cfaaf85b
0x7fc7cfaaf2fa  testb $0x1, %al         
0x7fc7cfaaf2fd  jnz 0x3343               ; 0x7fc7cfaaf853
0x7fc7cfaaf303  mov %rbx, -0x50(%rbp)   
0x7fc7cfaaf307  movq $0x55e, -0x58(%rbp)
0x7fc7cfaaf30f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf317  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf31e  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf326  lea -0xd0(%rbp), %rax   
0x7fc7cfaaf32d  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf331  mov 0x1951b58, %rsi     
0x7fc7cfaaf339  mov 0x20(%rsi), %rax    
0x7fc7cfaaf33d  mov $0x54, -0x104(%rbp) 
0x7fc7cfaaf347  mov %r15, %rdi          
0x7fc7cfaaf34a  mov %r14, %rdx          
0x7fc7cfaaf34d  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf351  callq *%rax             
0x7fc7cfaaf353  mov %rax, %rbx          
0x7fc7cfaaf356  test %rbx, %rbx         
0x7fc7cfaaf359  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaf35f  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaaf366  mov -0xe0(%rbp), %rax   
0x7fc7cfaaf36d  testb $0x3, %al         
0x7fc7cfaaf370  jnz 0x508c               ; 0x7fc7cfab159c
0x7fc7cfaaf376  mov 0x8(%rax), %rcx     
0x7fc7cfaaf37a  cmp $0x30b, 0x70(%rcx)  
0x7fc7cfaaf381  jnz 0x508c               ; 0x7fc7cfab159c
0x7fc7cfaaf387  cmp $0x7, 0x74(%rcx)    
0x7fc7cfaaf38b  jnz 0x522b               ; 0x7fc7cfab173b
0x7fc7cfaaf391  mov %r14, -0x328(%rbp)  
0x7fc7cfaaf398  mov $0x7fc7b40cce20, %rcx
0x7fc7cfaaf3a2  mov %rcx, -0x318(%rbp)  
0x7fc7cfaaf3a9  mov (%rcx), %rcx        
0x7fc7cfaaf3ac  mov %rcx, -0x310(%rbp)  
0x7fc7cfaaf3b3  mov 0xa0(%rcx), %rcx    
0x7fc7cfaaf3ba  mov %rcx, -0x320(%rbp)  
0x7fc7cfaaf3c1  mov $0xc, -0x308(%rbp)  
0x7fc7cfaaf3cb  mov $0x0, -0x304(%rbp)  
0x7fc7cfaaf3d5  lea -0x360(%rbp), %rdx  
0x7fc7cfaaf3dc  mov %rdx, -0x2f0(%rbp)  
0x7fc7cfaaf3e3  movq $0x1a, -0x2d8(%rbp)
0x7fc7cfaaf3ee  movq $0x1a, -0x2d0(%rbp)
0x7fc7cfaaf3f9  movq $0x1a, -0x2c8(%rbp)
0x7fc7cfaaf404  mov $0x7fc7b40cce30, %rdx
0x7fc7cfaaf40e  mov (%rdx), %rdx        
0x7fc7cfaaf411  movq $0x0, -0x360(%rbp) 
0x7fc7cfaaf41c  mov %rax, -0x350(%rbp)  
0x7fc7cfaaf423  mov %rdx, -0x340(%rbp)  
0x7fc7cfaaf42a  movq $0x1a, -0x348(%rbp)
0x7fc7cfaaf435  movq $0x0, -0x358(%rbp) 
0x7fc7cfaaf440  movq $0x1a, -0x338(%rbp)
0x7fc7cfaaf44b  mov %rbx, -0x330(%rbp)  
0x7fc7cfaaf452  mov %rbx, -0x2e0(%rbp)  
0x7fc7cfaaf459  mov 0x1653b68, %rax     
0x7fc7cfaaf461  cmp %rcx, 0x30(%rax)    
0x7fc7cfaaf465  jnz 0x2f7b               ; 0x7fc7cfaaf48b
0x7fc7cfaaf46b  mov 0x1582514, %ecx     
0x7fc7cfaaf472  cmp 0x44(%rax), %ecx    
0x7fc7cfaaf475  jnz 0x2f7b               ; 0x7fc7cfaaf48b
0x7fc7cfaaf47b  mov 0x20(%rax), %rax    
0x7fc7cfaaf47f  lea -0x328(%rbp), %r13  
0x7fc7cfaaf486  jmp 0x2fac               ; 0x7fc7cfaaf4bc
0x7fc7cfaaf48b  mov $0x2, -0x304(%rbp)  
0x7fc7cfaaf495  mov $0x1653b68, %edx    
0x7fc7cfaaf49a  mov %r15, %rdi          
0x7fc7cfaaf49d  lea -0x328(%rbp), %r13  
0x7fc7cfaaf4a4  mov %r13, %rsi          
0x7fc7cfaaf4a7  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaf4b1  callq *%rax             
0x7fc7cfaaf4b3  test %rax, %rax         
0x7fc7cfaaf4b6  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf4bc  mov %rax, -0x2d8(%rbp)  
0x7fc7cfaaf4c3  mov %rbx, %rcx          
0x7fc7cfaaf4c6  andq $0x3, %rcx         
0x7fc7cfaaf4ca  jnz 0x2fce               ; 0x7fc7cfaaf4de
0x7fc7cfaaf4d0  cmpb $0x23, (%rbx)      
0x7fc7cfaaf4d3  mov $0x12, %eax         
0x7fc7cfaaf4d8  jz 0x2fd3                ; 0x7fc7cfaaf4e3
0x7fc7cfaaf4de  mov $0xa, %eax          
0x7fc7cfaaf4e3  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf4ea  mov %rax, -0x2d8(%rbp)  
0x7fc7cfaaf4f1  mov %rax, %rdx          
0x7fc7cfaaf4f4  andq $0xa, %rdx         
0x7fc7cfaaf4f8  cmpq $0xa, %rdx         
0x7fc7cfaaf4fc  jz 0x309e                ; 0x7fc7cfaaf5ae
0x7fc7cfaaf502  mov %rbx, -0x2e0(%rbp)  
0x7fc7cfaaf509  test %rcx, %rcx         
0x7fc7cfaaf50c  jnz 0x3049               ; 0x7fc7cfaaf559
0x7fc7cfaaf512  mov 0x8(%rbx), %rax     
0x7fc7cfaaf516  cmp $0x4d, 0x70(%rax)   
0x7fc7cfaaf51a  jnz 0x3049               ; 0x7fc7cfaaf559
0x7fc7cfaaf520  cmp $0xe0, 0x74(%rax)   
0x7fc7cfaaf527  jnz 0x342f               ; 0x7fc7cfaaf93f
0x7fc7cfaaf52d  mov %r15, %rdi          
0x7fc7cfaaf530  mov %rbx, %rsi          
0x7fc7cfaaf533  mov $0x5db1e0, %rax      ; jit_stub_float_isnan
0x7fc7cfaaf53d  callq *%rax             
0x7fc7cfaaf53f  test %rax, %rax         
0x7fc7cfaaf542  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf548  cmpq $0x22, %rax        
0x7fc7cfaaf54c  jnz 0x3097               ; 0x7fc7cfaaf5a7
0x7fc7cfaaf552  mov -0x2e0(%rbp), %rbx  
0x7fc7cfaaf559  mov %rbx, -0x50(%rbp)   
0x7fc7cfaaf55d  movq $0x7c56, -0x58(%rbp)
0x7fc7cfaaf565  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf56d  mov $0x0, -0x40(%rbp)   
0x7fc7cfaaf574  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf57c  mov 0x1653bc0, %rsi     
0x7fc7cfaaf584  mov 0x20(%rsi), %rax    
0x7fc7cfaaf588  mov $0xd, -0x304(%rbp)  
0x7fc7cfaaf592  mov %r15, %rdi          
0x7fc7cfaaf595  mov %r13, %rdx          
0x7fc7cfaaf598  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf59c  callq *%rax             
0x7fc7cfaaf59e  test %rax, %rax         
0x7fc7cfaaf5a1  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf5a7  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf5ae  andq $0xf, %rax         
0x7fc7cfaaf5b2  cmpq $0xa, %rax         
0x7fc7cfaaf5b6  jnz 0x318c               ; 0x7fc7cfaaf69c
0x7fc7cfaaf5bc  mov 0x1584100, %rax     
0x7fc7cfaaf5c4  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf5cb  mov -0x330(%rbp), %rcx  
0x7fc7cfaaf5d2  mov %rcx, -0x2d8(%rbp)  
0x7fc7cfaaf5d9  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf5dd  movq $0x492e, -0x58(%rbp)
0x7fc7cfaaf5e5  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf5ed  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf5f4  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf5fc  lea -0x2d8(%rbp), %rax  
0x7fc7cfaaf603  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf607  mov 0x1653c48, %rsi     
0x7fc7cfaaf60f  mov 0x20(%rsi), %rax    
0x7fc7cfaaf613  mov $0x1e, -0x304(%rbp) 
0x7fc7cfaaf61d  mov %r15, %rdi          
0x7fc7cfaaf620  mov %r13, %rdx          
0x7fc7cfaaf623  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf627  callq *%rax             
0x7fc7cfaaf629  test %rax, %rax         
0x7fc7cfaaf62c  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf632  mov %rax, -0x330(%rbp)  
0x7fc7cfaaf639  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf640  mov -0x310(%rbp), %rcx  
0x7fc7cfaaf647  mov 0xc0(%rcx), %rcx    
0x7fc7cfaaf64e  mov 0x48(%rcx), %rcx    
0x7fc7cfaaf652  mov %rcx, -0x2d8(%rbp)  
0x7fc7cfaaf659  testb $0x3, %al         
0x7fc7cfaaf65c  jnz 0x337c               ; 0x7fc7cfaaf88c
0x7fc7cfaaf662  mov 0x8(%rax), %rdx     
0x7fc7cfaaf666  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaaf66a  jnz 0x337c               ; 0x7fc7cfaaf88c
0x7fc7cfaaf670  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfaaf677  jnz 0x363d               ; 0x7fc7cfaafb4d
0x7fc7cfaaf67d  invalid                 
0x7fc7cfaaf67e  sti                     
0x7fc7cfaaf67f  adc %al, 0x18(%rcx)     
0x7fc7cfaaf682  invalid                 
0x7fc7cfaaf683  stc                     
0x7fc7cfaaf684  sbb %dil, %cs:0x12(%rax)
0x7fc7cfaaf68c  jbe 0x33d5               ; 0x7fc7cfaaf8e5
0x7fc7cfaaf692  mov $0xa, %eax          
0x7fc7cfaaf697  jmp 0x33d5               ; 0x7fc7cfaaf8e5
0x7fc7cfaaf69c  mov 0x1653be8, %rax     
0x7fc7cfaaf6a4  mov 0x30(%rax), %rcx    
0x7fc7cfaaf6a8  mov -0x320(%rbp), %rbx  
0x7fc7cfaaf6af  cmp %rbx, %rcx          
0x7fc7cfaaf6b2  jnz 0x31c1               ; 0x7fc7cfaaf6d1
0x7fc7cfaaf6b8  mov 0x1582514, %ecx     
0x7fc7cfaaf6bf  cmp 0x44(%rax), %ecx    
0x7fc7cfaaf6c2  jnz 0x31c1               ; 0x7fc7cfaaf6d1
0x7fc7cfaaf6c8  mov 0x20(%rax), %rax    
0x7fc7cfaaf6cc  jmp 0x31eb               ; 0x7fc7cfaaf6fb
0x7fc7cfaaf6d1  mov $0x12, -0x304(%rbp) 
0x7fc7cfaaf6db  mov $0x1653be8, %edx    
0x7fc7cfaaf6e0  mov %r15, %rdi          
0x7fc7cfaaf6e3  mov %r13, %rsi          
0x7fc7cfaaf6e6  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaf6f0  callq *%rax             
0x7fc7cfaaf6f2  test %rax, %rax         
0x7fc7cfaaf6f5  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf6fb  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf702  mov 0x1653bf8, %rcx     
0x7fc7cfaaf70a  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaaf70e  jnz 0x32d5               ; 0x7fc7cfaaf7e5
0x7fc7cfaaf714  mov 0x1582514, %edx     
0x7fc7cfaaf71b  cmp 0x44(%rcx), %edx    
0x7fc7cfaaf71e  jnz 0x32d5               ; 0x7fc7cfaaf7e5
0x7fc7cfaaf724  cmp %rax, 0x28(%rcx)    
0x7fc7cfaaf728  jnz 0x32d5               ; 0x7fc7cfaaf7e5
0x7fc7cfaaf72e  mov 0x20(%rcx), %rbx    
0x7fc7cfaaf732  jmp 0x4ebc               ; 0x7fc7cfab13cc
0x7fc7cfaaf737  sarq $0x1, %rcx         
0x7fc7cfaaf73a  invalid                 
0x7fc7cfaaf73b  loope 0x3228             ; 0x7fc7cfaaf838
0x7fc7cfaaf73d  sub %cl, %al            
0x7fc7cfaaf73f  invalid                 
0x7fc7cfaaf740  sti                     
0x7fc7cfaaf741  adc %cl, 0x18(%rax)     
0x7fc7cfaaf744  invalid                 
0x7fc7cfaaf745  rep pop %rsp            
0x7fc7cfaaf747  rolb $0xfb, %ch         
0x7fc7cfaaf74a  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf750  mov %r15, %rdi          
0x7fc7cfaaf753  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf75d  callq *%rax             
0x7fc7cfaaf75f  invalid                 
0x7fc7cfaaf760  sti                     
0x7fc7cfaaf761  adc %al, -0x368(%rbp)   
0x7fc7cfaaf767  invalid                 
0x7fc7cfaaf768  sti                     
0x7fc7cfaaf769  adc %eax, 0x18(%rax)    
0x7fc7cfaaf76c  jmp 0x27c0               ; 0x7fc7cfaaecd0
0x7fc7cfaaf771  sarq $0x1, %rcx         
0x7fc7cfaaf774  invalid                 
0x7fc7cfaaf775  loope 0x3262             ; 0x7fc7cfaaf872
0x7fc7cfaaf777  sub %cl, %al            
0x7fc7cfaaf779  invalid                 
0x7fc7cfaaf77a  sti                     
0x7fc7cfaaf77b  adc %cl, 0x18(%rax)     
0x7fc7cfaaf77e  invalid                 
0x7fc7cfaaf77f  rep pop %rsp            
0x7fc7cfaaf781  rolb $0xfb, %ch         
0x7fc7cfaaf784  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf78a  mov %r15, %rdi          
0x7fc7cfaaf78d  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf797  callq *%rax             
0x7fc7cfaaf799  invalid                 
0x7fc7cfaaf79a  sti                     
0x7fc7cfaaf79b  adc %al, -0x368(%rbp)   
0x7fc7cfaaf7a1  invalid                 
0x7fc7cfaaf7a2  sti                     
0x7fc7cfaaf7a3  adc %eax, 0x18(%rax)    
0x7fc7cfaaf7a6  jmp 0x28e7               ; 0x7fc7cfaaedf7
0x7fc7cfaaf7ab  sarq $0x1, %rcx         
0x7fc7cfaaf7ae  invalid                 
0x7fc7cfaaf7af  loope 0x329c             ; 0x7fc7cfaaf8ac
0x7fc7cfaaf7b1  sub %cl, %al            
0x7fc7cfaaf7b3  invalid                 
0x7fc7cfaaf7b4  sti                     
0x7fc7cfaaf7b5  adc %cl, 0x18(%rax)     
0x7fc7cfaaf7b8  invalid                 
0x7fc7cfaaf7b9  rep pop %rsp            
0x7fc7cfaaf7bb  rolb $0xfb, %ch         
0x7fc7cfaaf7be  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf7c4  mov %r15, %rdi          
0x7fc7cfaaf7c7  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf7d1  callq *%rax             
0x7fc7cfaaf7d3  invalid                 
0x7fc7cfaaf7d4  sti                     
0x7fc7cfaaf7d5  adc %al, -0x368(%rbp)   
0x7fc7cfaaf7db  invalid                 
0x7fc7cfaaf7dc  sti                     
0x7fc7cfaaf7dd  adc %eax, 0x18(%rax)    
0x7fc7cfaaf7e0  jmp 0x2a0e               ; 0x7fc7cfaaef1e
0x7fc7cfaaf7e5  mov $0x14, -0x304(%rbp) 
0x7fc7cfaaf7ef  mov $0x1653bf8, %edx    
0x7fc7cfaaf7f4  mov %r15, %rdi          
0x7fc7cfaaf7f7  mov %r13, %rsi          
0x7fc7cfaaf7fa  mov %rax, %rcx          
0x7fc7cfaaf7fd  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfaaf807  callq *%rax             
0x7fc7cfaaf809  mov %rax, %rbx          
0x7fc7cfaaf80c  test %rbx, %rbx         
0x7fc7cfaaf80f  jnz 0x4ebc               ; 0x7fc7cfab13cc
0x7fc7cfaaf815  jmp 0x369c               ; 0x7fc7cfaafbac
0x7fc7cfaaf81a  sarq $0x1, %rax         
0x7fc7cfaaf81d  invalid                 
0x7fc7cfaaf81e  loope 0x330b             ; 0x7fc7cfaaf91b
0x7fc7cfaaf820  sub %al, %al            
0x7fc7cfaaf822  invalid                 
0x7fc7cfaaf823  sti                     
0x7fc7cfaaf824  pop %rax                
0x7fc7cfaaf825  sbb %al, %r13b          
0x7fc7cfaaf828  sti                     
0x7fc7cfaaf829  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf82f  mov %r15, %rdi          
0x7fc7cfaaf832  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf83c  callq *%rax             
0x7fc7cfaaf83e  mov %rax, %rbx          
0x7fc7cfaaf841  invalid                 
0x7fc7cfaaf842  sti                     
0x7fc7cfaaf843  adc %al, -0x368(%rbp)   
0x7fc7cfaaf849  invalid                 
0x7fc7cfaaf84a  sti                     
0x7fc7cfaaf84b  adc %eax, 0x18(%rbx)    
0x7fc7cfaaf84e  jmp 0x2ccc               ; 0x7fc7cfaaf1dc
0x7fc7cfaaf853  sarq $0x1, %rax         
0x7fc7cfaaf856  invalid                 
0x7fc7cfaaf857  loope 0x3344             ; 0x7fc7cfaaf954
0x7fc7cfaaf859  sub %al, %al            
0x7fc7cfaaf85b  invalid                 
0x7fc7cfaaf85c  sti                     
0x7fc7cfaaf85d  pop %rax                
0x7fc7cfaaf85e  sbb %al, %r13b          
0x7fc7cfaaf861  sti                     
0x7fc7cfaaf862  adc %eax, -0x368(%rbp)  
0x7fc7cfaaf868  mov %r15, %rdi          
0x7fc7cfaaf86b  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaaf875  callq *%rax             
0x7fc7cfaaf877  mov %rax, %rbx          
0x7fc7cfaaf87a  invalid                 
0x7fc7cfaaf87b  sti                     
0x7fc7cfaaf87c  adc %al, -0x368(%rbp)   
0x7fc7cfaaf882  invalid                 
0x7fc7cfaaf883  sti                     
0x7fc7cfaaf884  adc %eax, 0x18(%rbx)    
0x7fc7cfaaf887  jmp 0x2e4f               ; 0x7fc7cfaaf35f
0x7fc7cfaaf88c  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf890  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfaaf898  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf8a0  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaf8a7  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaf8af  lea -0x2d8(%rbp), %rax  
0x7fc7cfaaf8b6  mov %rax, -0x38(%rbp)   
0x7fc7cfaaf8ba  mov 0x1653c98, %rsi     
0x7fc7cfaaf8c2  mov 0x20(%rsi), %rax    
0x7fc7cfaaf8c6  mov $0x28, -0x304(%rbp) 
0x7fc7cfaaf8d0  mov %r15, %rdi          
0x7fc7cfaaf8d3  mov %r13, %rdx          
0x7fc7cfaaf8d6  lea -0x58(%rbp), %rcx   
0x7fc7cfaaf8da  callq *%rax             
0x7fc7cfaaf8dc  test %rax, %rax         
0x7fc7cfaaf8df  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf8e5  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf8ec  andq $0xf, %rax         
0x7fc7cfaaf8f0  mov $0x1a, %ecx         
0x7fc7cfaaf8f5  cmpq $0xa, %rax         
0x7fc7cfaaf8f9  jnz 0x3532               ; 0x7fc7cfaafa42
0x7fc7cfaaf8ff  mov -0x350(%rbp), %rax  
0x7fc7cfaaf906  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaaf90d  mov 0x1653ce0, %rax     
0x7fc7cfaaf915  mov 0x30(%rax), %rcx    
0x7fc7cfaaf919  cmp -0x320(%rbp), %rcx  
0x7fc7cfaaf920  jnz 0x3463               ; 0x7fc7cfaaf973
0x7fc7cfaaf926  mov 0x1582514, %ecx     
0x7fc7cfaaf92d  cmp 0x44(%rax), %ecx    
0x7fc7cfaaf930  jnz 0x3463               ; 0x7fc7cfaaf973
0x7fc7cfaaf936  mov 0x20(%rax), %rax    
0x7fc7cfaaf93a  jmp 0x348d               ; 0x7fc7cfaaf99d
0x7fc7cfaaf93f  mov $0xd, -0x304(%rbp)  
0x7fc7cfaaf949  mov $0x7fc7b4004290, %rax
0x7fc7cfaaf953  mov %rax, (%rsp)        
0x7fc7cfaaf957  mov $0x1, 0x10(%rsp)    
0x7fc7cfaaf95f  mov $0x0, 0x8(%rsp)     
0x7fc7cfaaf967  mov $0xd, %edx          
0x7fc7cfaaf96c  xor %ecx, %ecx          
0x7fc7cfaaf96e  jmp 0x4efa               ; 0x7fc7cfab140a
0x7fc7cfaaf973  mov $0x31, -0x304(%rbp) 
0x7fc7cfaaf97d  mov $0x1653ce0, %edx    
0x7fc7cfaaf982  mov %r15, %rdi          
0x7fc7cfaaf985  mov %r13, %rsi          
0x7fc7cfaaf988  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaaf992  callq *%rax             
0x7fc7cfaaf994  test %rax, %rax         
0x7fc7cfaaf997  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf99d  mov %rax, -0x2d8(%rbp)  
0x7fc7cfaaf9a4  mov -0x310(%rbp), %rax  
0x7fc7cfaaf9ab  mov 0xc0(%rax), %rax    
0x7fc7cfaaf9b2  mov 0x60(%rax), %rdx    
0x7fc7cfaaf9b6  mov %rdx, -0x2d0(%rbp)  
0x7fc7cfaaf9bd  mov %r15, %rdi          
0x7fc7cfaaf9c0  mov %r13, %rsi          
0x7fc7cfaaf9c3  mov $0x760dc0, %rax      ; rbx_string_dup
0x7fc7cfaaf9cd  callq *%rax             
0x7fc7cfaaf9cf  test %rax, %rax         
0x7fc7cfaaf9d2  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaaf9d8  mov %rax, -0x2d0(%rbp)  
0x7fc7cfaaf9df  mov -0x2e0(%rbp), %rax  
0x7fc7cfaaf9e6  mov %rax, -0x50(%rbp)   
0x7fc7cfaaf9ea  movq $0x37ce, -0x58(%rbp)
0x7fc7cfaaf9f2  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaf9fa  mov $0x2, -0x40(%rbp)   
0x7fc7cfaafa01  movq $0x0, -0x30(%rbp)  
0x7fc7cfaafa09  lea -0x2d8(%rbp), %rax  
0x7fc7cfaafa10  mov %rax, -0x38(%rbp)   
0x7fc7cfaafa14  mov 0x1653d10, %rsi     
0x7fc7cfaafa1c  mov 0x20(%rsi), %rax    
0x7fc7cfaafa20  mov $0x37, -0x304(%rbp) 
0x7fc7cfaafa2a  mov %r15, %rdi          
0x7fc7cfaafa2d  mov %r13, %rdx          
0x7fc7cfaafa30  lea -0x58(%rbp), %rcx   
0x7fc7cfaafa34  callq *%rax             
0x7fc7cfaafa36  mov %rax, %rcx          
0x7fc7cfaafa39  test %rcx, %rcx         
0x7fc7cfaafa3c  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaafa42  mov %rcx, -0x2e0(%rbp)  
0x7fc7cfaafa49  mov 0x1653d30, %rax     
0x7fc7cfaafa51  mov 0x30(%rax), %rcx    
0x7fc7cfaafa55  mov -0x320(%rbp), %rbx  
0x7fc7cfaafa5c  cmp %rbx, %rcx          
0x7fc7cfaafa5f  jnz 0x356e               ; 0x7fc7cfaafa7e
0x7fc7cfaafa65  mov 0x1582514, %ecx     
0x7fc7cfaafa6c  cmp 0x44(%rax), %ecx    
0x7fc7cfaafa6f  jnz 0x356e               ; 0x7fc7cfaafa7e
0x7fc7cfaafa75  mov 0x20(%rax), %rax    
0x7fc7cfaafa79  jmp 0x3598               ; 0x7fc7cfaafaa8
0x7fc7cfaafa7e  mov $0x3b, -0x304(%rbp) 
0x7fc7cfaafa88  mov $0x1653d30, %edx    
0x7fc7cfaafa8d  mov %r15, %rdi          
0x7fc7cfaafa90  mov %r13, %rsi          
0x7fc7cfaafa93  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfaafa9d  callq *%rax             
0x7fc7cfaafa9f  test %rax, %rax         
0x7fc7cfaafaa2  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaafaa8  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaafaaf  mov 0x1653d40, %rcx     
0x7fc7cfaafab7  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaafabb  jnz 0x35d4               ; 0x7fc7cfaafae4
0x7fc7cfaafac1  mov 0x1582514, %edx     
0x7fc7cfaafac8  cmp 0x44(%rcx), %edx    
0x7fc7cfaafacb  jnz 0x35d4               ; 0x7fc7cfaafae4
0x7fc7cfaafad1  cmp %rax, 0x28(%rcx)    
0x7fc7cfaafad5  jnz 0x35d4               ; 0x7fc7cfaafae4
0x7fc7cfaafadb  mov 0x20(%rcx), %rax    
0x7fc7cfaafadf  jmp 0x3601               ; 0x7fc7cfaafb11
0x7fc7cfaafae4  mov $0x3d, -0x304(%rbp) 
0x7fc7cfaafaee  mov $0x1653d40, %edx    
0x7fc7cfaafaf3  mov %r15, %rdi          
0x7fc7cfaafaf6  mov %r13, %rsi          
0x7fc7cfaafaf9  mov %rax, %rcx          
0x7fc7cfaafafc  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfaafb06  callq *%rax             
0x7fc7cfaafb08  test %rax, %rax         
0x7fc7cfaafb0b  jz 0x369c                ; 0x7fc7cfaafbac
0x7fc7cfaafb11  mov %rax, -0x2e0(%rbp)  
0x7fc7cfaafb18  mov 0x1653d50, %rcx     
0x7fc7cfaafb20  cmp %rbx, 0x30(%rcx)    
0x7fc7cfaafb24  jnz 0x366f               ; 0x7fc7cfaafb7f
0x7fc7cfaafb2a  mov 0x1582514, %edx     
0x7fc7cfaafb31  cmp 0x44(%rcx), %edx    
0x7fc7cfaafb34  jnz 0x366f               ; 0x7fc7cfaafb7f
0x7fc7cfaafb3a  cmp %rax, 0x28(%rcx)    
0x7fc7cfaafb3e  jnz 0x366f               ; 0x7fc7cfaafb7f
0x7fc7cfaafb44  mov 0x20(%rcx), %rax    
0x7fc7cfaafb48  jmp 0x4e00               ; 0x7fc7cfab1310
0x7fc7cfaafb4d  mov $0x28, -0x304(%rbp) 
0x7fc7cfaafb57  mov $0x7fc7b4004290, %rax
0x7fc7cfaafb61  mov %rax, (%rsp)        
0x7fc7cfaafb65  mov $0x1, 0x10(%rsp)    
0x7fc7cfaafb6d  mov $0x0, 0x8(%rsp)     
0x7fc7cfaafb75  mov $0x28, %edx         
0x7fc7cfaafb7a  jmp 0x4ef5               ; 0x7fc7cfab1405
0x7fc7cfaafb7f  mov $0x3f, -0x304(%rbp) 
0x7fc7cfaafb89  mov $0x1653d50, %edx    
0x7fc7cfaafb8e  mov %r15, %rdi          
0x7fc7cfaafb91  mov %r13, %rsi          
0x7fc7cfaafb94  mov %rax, %rcx          
0x7fc7cfaafb97  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfaafba1  callq *%rax             
0x7fc7cfaafba3  test %rax, %rax         
0x7fc7cfaafba6  jnz 0x4e00               ; 0x7fc7cfab1310
0x7fc7cfaafbac  mov %r15, %rdi          
0x7fc7cfaafbaf  mov %r13, %rsi          
0x7fc7cfaafbb2  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfaafbbc  callq *%rax             
0x7fc7cfaafbbe  mov $0x0, %ebx          
0x7fc7cfaafbc3  testb $0x1, %al         
0x7fc7cfaafbc6  jz 0x36ce                ; 0x7fc7cfaafbde
0x7fc7cfaafbcc  mov %r15, %rdi          
0x7fc7cfaafbcf  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfaafbd9  callq *%rax             
0x7fc7cfaafbdb  mov %rax, %rbx          
0x7fc7cfaafbde  test %rbx, %rbx         
0x7fc7cfaafbe1  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaafbe7  mov %rbx, -0x148(%rbp)  
0x7fc7cfaafbee  mov -0x178(%rbp), %rax  
0x7fc7cfaafbf5  mov %rax, -0xe0(%rbp)   
0x7fc7cfaafbfc  mov %rbx, -0xd8(%rbp)   
0x7fc7cfaafc03  mov %rbx, -0xd0(%rbp)   
0x7fc7cfaafc0a  testb $0x3, %bl         
0x7fc7cfaafc0d  jnz 0x3750               ; 0x7fc7cfaafc60
0x7fc7cfaafc13  mov 0x8(%rbx), %rax     
0x7fc7cfaafc17  cmp $0x4d, 0x70(%rax)   
0x7fc7cfaafc1b  jnz 0x3750               ; 0x7fc7cfaafc60
0x7fc7cfaafc21  cmp $0xe0, 0x74(%rax)   
0x7fc7cfaafc28  jnz 0x55d1               ; 0x7fc7cfab1ae1
0x7fc7cfaafc2e  invalid                 
0x7fc7cfaafc2f  sti                     
0x7fc7cfaafc30  adc %al, 0x18(%rbx)     
0x7fc7cfaafc33  invalid                 
0x7fc7cfaafc34  sti                     
0x7fc7cfaafc35  pop %rcx                
0x7fc7cfaafc36  rolb $0xfb, %ch         
0x7fc7cfaafc39  adc %eax, -0x368(%rbp)  
0x7fc7cfaafc3f  mov %r15, %rdi          
0x7fc7cfaafc42  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfaafc4c  callq *%rax             
0x7fc7cfaafc4e  invalid                 
0x7fc7cfaafc4f  sti                     
0x7fc7cfaafc50  adc %al, -0x368(%rbp)   
0x7fc7cfaafc56  invalid                 
0x7fc7cfaafc57  sti                     
0x7fc7cfaafc58  adc %eax, 0x18(%rax)    
0x7fc7cfaafc5b  jmp 0x37b0               ; 0x7fc7cfaafcc0
0x7fc7cfaafc60  mov %rbx, -0x50(%rbp)   
0x7fc7cfaafc64  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaafc6c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaafc74  mov $0x1, -0x40(%rbp)   
0x7fc7cfaafc7b  movq $0x0, -0x30(%rbp)  
0x7fc7cfaafc83  lea -0xd0(%rbp), %rax   
0x7fc7cfaafc8a  mov %rax, -0x38(%rbp)   
0x7fc7cfaafc8e  mov 0x1951bd0, %rsi     
0x7fc7cfaafc96  mov 0x20(%rsi), %rax    
0x7fc7cfaafc9a  mov $0x63, -0x104(%rbp) 
0x7fc7cfaafca4  mov %r15, %rdi          
0x7fc7cfaafca7  mov %r14, %rdx          
0x7fc7cfaafcaa  lea -0x58(%rbp), %rcx   
0x7fc7cfaafcae  callq *%rax             
0x7fc7cfaafcb0  test %rax, %rax         
0x7fc7cfaafcb3  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaafcb9  mov -0x148(%rbp), %rbx  
0x7fc7cfaafcc0  mov %rax, -0xd8(%rbp)   
0x7fc7cfaafcc7  mov %rbx, -0xd0(%rbp)   
0x7fc7cfaafcce  testb $0x3, %al         
0x7fc7cfaafcd1  jnz 0x380c               ; 0x7fc7cfaafd1c
0x7fc7cfaafcd7  mov 0x8(%rax), %rcx     
0x7fc7cfaafcdb  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaafcdf  jnz 0x380c               ; 0x7fc7cfaafd1c
0x7fc7cfaafce5  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaafcec  jnz 0x5619               ; 0x7fc7cfab1b29
0x7fc7cfaafcf2  testb $0x3, %bl         
0x7fc7cfaafcf5  jnz 0x3803               ; 0x7fc7cfaafd13
0x7fc7cfaafcfb  mov 0x8(%rbx), %rcx     
0x7fc7cfaafcff  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaafd03  jnz 0x3803               ; 0x7fc7cfaafd13
0x7fc7cfaafd09  invalid                 
0x7fc7cfaafd0a  sti                     
0x7fc7cfaafd0b  adc %al, 0x18(%rbx)     
0x7fc7cfaafd0e  jmp 0x47db               ; 0x7fc7cfab0ceb
0x7fc7cfaafd13  testb $0x1, %bl         
0x7fc7cfaafd16  jnz 0x47d3               ; 0x7fc7cfab0ce3
0x7fc7cfaafd1c  mov %rax, -0x50(%rbp)   
0x7fc7cfaafd20  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaafd28  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaafd30  mov $0x1, -0x40(%rbp)   
0x7fc7cfaafd37  movq $0x0, -0x30(%rbp)  
0x7fc7cfaafd3f  lea -0xd0(%rbp), %rax   
0x7fc7cfaafd46  mov %rax, -0x38(%rbp)   
0x7fc7cfaafd4a  mov 0x1951bf8, %rsi     
0x7fc7cfaafd52  mov 0x20(%rsi), %rax    
0x7fc7cfaafd56  mov $0x68, -0x104(%rbp) 
0x7fc7cfaafd60  mov %r15, %rdi          
0x7fc7cfaafd63  mov %r14, %rdx          
0x7fc7cfaafd66  lea -0x58(%rbp), %rcx   
0x7fc7cfaafd6a  callq *%rax             
0x7fc7cfaafd6c  test %rax, %rax         
0x7fc7cfaafd6f  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaafd75  mov %rax, -0xd8(%rbp)   
0x7fc7cfaafd7c  mov -0xe0(%rbp), %rcx   
0x7fc7cfaafd83  testb $0x3, %cl         
0x7fc7cfaafd86  jnz 0x38c1               ; 0x7fc7cfaafdd1
0x7fc7cfaafd8c  mov 0x8(%rcx), %rdx     
0x7fc7cfaafd90  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaafd94  jnz 0x38c1               ; 0x7fc7cfaafdd1
0x7fc7cfaafd9a  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfaafda1  jnz 0x5661               ; 0x7fc7cfab1b71
0x7fc7cfaafda7  testb $0x3, %al         
0x7fc7cfaafdaa  jnz 0x38b8               ; 0x7fc7cfaafdc8
0x7fc7cfaafdb0  mov 0x8(%rax), %rdx     
0x7fc7cfaafdb4  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfaafdb8  jnz 0x38b8               ; 0x7fc7cfaafdc8
0x7fc7cfaafdbe  invalid                 
0x7fc7cfaafdbf  sti                     
0x7fc7cfaafdc0  adc %al, 0x18(%rax)     
0x7fc7cfaafdc3  jmp 0x4811               ; 0x7fc7cfab0d21
0x7fc7cfaafdc8  testb $0x1, %al         
0x7fc7cfaafdcb  jnz 0x4809               ; 0x7fc7cfab0d19
0x7fc7cfaafdd1  mov %rcx, -0x50(%rbp)   
0x7fc7cfaafdd5  movq $0x3cd6, -0x58(%rbp)
0x7fc7cfaafddd  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaafde5  mov $0x1, -0x40(%rbp)   
0x7fc7cfaafdec  movq $0x0, -0x30(%rbp)  
0x7fc7cfaafdf4  mov %r12, -0x38(%rbp)   
0x7fc7cfaafdf8  mov 0x1951c10, %rsi     
0x7fc7cfaafe00  mov 0x20(%rsi), %rax    
0x7fc7cfaafe04  mov $0x6b, -0x104(%rbp) 
0x7fc7cfaafe0e  mov %r15, %rdi          
0x7fc7cfaafe11  mov %r14, %rdx          
0x7fc7cfaafe14  lea -0x58(%rbp), %rcx   
0x7fc7cfaafe18  callq *%rax             
0x7fc7cfaafe1a  mov %rax, %r13          
0x7fc7cfaafe1d  test %r13, %r13         
0x7fc7cfaafe20  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaafe26  mov %r13, -0x140(%rbp)  
0x7fc7cfaafe2d  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfaafe38  mov -0x1a8(%rbp), %rsi  
0x7fc7cfaafe3f  testb $0x3, %sil        
0x7fc7cfaafe43  jnz 0x3960               ; 0x7fc7cfaafe70
0x7fc7cfaafe49  mov 0x8(%rsi), %rax     
0x7fc7cfaafe4d  cmp $0x505, 0x70(%rax)  
0x7fc7cfaafe54  jnz 0x3960               ; 0x7fc7cfaafe70
0x7fc7cfaafe5a  mov 0x48(%rsi), %rcx    
0x7fc7cfaafe5e  cmpq $0x22, %rcx        
0x7fc7cfaafe62  mov $0x1a, %eax         
0x7fc7cfaafe67  cmovnz %rcx, %rax       
0x7fc7cfaafe6b  jmp 0x3974               ; 0x7fc7cfaafe84
0x7fc7cfaafe70  mov $0x10086, %edx      
0x7fc7cfaafe75  mov %r15, %rdi          
0x7fc7cfaafe78  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfaafe82  callq *%rax             
0x7fc7cfaafe84  mov %rax, -0xe0(%rbp)   
0x7fc7cfaafe8b  mov %r13, -0xd8(%rbp)   
0x7fc7cfaafe92  testb $0x3, %al         
0x7fc7cfaafe95  jnz 0x39d3               ; 0x7fc7cfaafee3
0x7fc7cfaafe9b  mov 0x8(%rax), %rcx     
0x7fc7cfaafe9f  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaafea3  jnz 0x39d3               ; 0x7fc7cfaafee3
0x7fc7cfaafea9  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaafeb0  jnz 0x56a4               ; 0x7fc7cfab1bb4
0x7fc7cfaafeb6  testb $0x3, %r13b       
0x7fc7cfaafeba  jnz 0x39c9               ; 0x7fc7cfaafed9
0x7fc7cfaafec0  mov 0x8(%r13), %rcx     
0x7fc7cfaafec4  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaafec8  jnz 0x39c9               ; 0x7fc7cfaafed9
0x7fc7cfaafece  invalid                 
0x7fc7cfaafecf  sar $0x45, 0x10(%rbx)   
0x7fc7cfaafed3  sbb %ch, %cl            
0x7fc7cfaafed5  mov %ecx, (%rsi)        
0x7fc7cfaafed7  add %al, (%rax)         
0x7fc7cfaafed9  testb $0x1, %r13b       
0x7fc7cfaafedd  jnz 0x4847               ; 0x7fc7cfab0d57
0x7fc7cfaafee3  mov %rax, -0x50(%rbp)   
0x7fc7cfaafee7  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaafeef  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaafef7  mov $0x1, -0x40(%rbp)   
0x7fc7cfaafefe  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaff06  mov %r12, -0x38(%rbp)   
0x7fc7cfaaff0a  mov 0x1951c60, %rsi     
0x7fc7cfaaff12  mov 0x20(%rsi), %rax    
0x7fc7cfaaff16  mov $0x75, -0x104(%rbp) 
0x7fc7cfaaff20  mov %r15, %rdi          
0x7fc7cfaaff23  mov %r14, %rdx          
0x7fc7cfaaff26  lea -0x58(%rbp), %rcx   
0x7fc7cfaaff2a  callq *%rax             
0x7fc7cfaaff2c  mov %rax, %rbx          
0x7fc7cfaaff2f  test %rbx, %rbx         
0x7fc7cfaaff32  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfaaff38  mov -0x140(%rbp), %r13  
0x7fc7cfaaff3f  mov %rbx, -0xe0(%rbp)   
0x7fc7cfaaff46  mov -0x168(%rbp), %rax  
0x7fc7cfaaff4d  mov %rax, -0xd8(%rbp)   
0x7fc7cfaaff54  mov 0x48(%rax), %rcx    
0x7fc7cfaaff58  cmpq $0x22, %rcx        
0x7fc7cfaaff5c  mov $0x1a, %eax         
0x7fc7cfaaff61  cmovnz %rcx, %rax       
0x7fc7cfaaff65  mov %rax, -0xd8(%rbp)   
0x7fc7cfaaff6c  mov %r13, -0xd0(%rbp)   
0x7fc7cfaaff73  testb $0x3, %al         
0x7fc7cfaaff76  jnz 0x3ab4               ; 0x7fc7cfaaffc4
0x7fc7cfaaff7c  mov 0x8(%rax), %rcx     
0x7fc7cfaaff80  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaff84  jnz 0x3ab4               ; 0x7fc7cfaaffc4
0x7fc7cfaaff8a  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfaaff91  jnz 0x56e7               ; 0x7fc7cfab1bf7
0x7fc7cfaaff97  testb $0x3, %r13b       
0x7fc7cfaaff9b  jnz 0x3aaa               ; 0x7fc7cfaaffba
0x7fc7cfaaffa1  mov 0x8(%r13), %rcx     
0x7fc7cfaaffa5  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfaaffa9  jnz 0x3aaa               ; 0x7fc7cfaaffba
0x7fc7cfaaffaf  invalid                 
0x7fc7cfaaffb0  sar $0x45, 0x10(%rbx)   
0x7fc7cfaaffb4  sbb %ch, %cl            
0x7fc7cfaaffb6  xchg %eax, %esi         
0x7fc7cfaaffb7  invalid                 
0x7fc7cfaaffb8  add %al, (%rax)         
0x7fc7cfaaffba  testb $0x1, %r13b       
0x7fc7cfaaffbe  jnz 0x4938               ; 0x7fc7cfab0e48
0x7fc7cfaaffc4  mov %rax, -0x50(%rbp)   
0x7fc7cfaaffc8  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfaaffd0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfaaffd8  mov $0x1, -0x40(%rbp)   
0x7fc7cfaaffdf  movq $0x0, -0x30(%rbp)  
0x7fc7cfaaffe7  lea -0xd0(%rbp), %rax   
0x7fc7cfaaffee  mov %rax, -0x38(%rbp)   
0x7fc7cfaafff2  mov 0x1951cb0, %rsi     
0x7fc7cfaafffa  mov 0x20(%rsi), %rax    
0x7fc7cfaafffe  mov $0x7f, -0x104(%rbp) 
0x7fc7cfab0008  mov %r15, %rdi          
0x7fc7cfab000b  mov %r14, %rdx          
0x7fc7cfab000e  lea -0x58(%rbp), %rcx   
0x7fc7cfab0012  callq *%rax             
0x7fc7cfab0014  test %rax, %rax         
0x7fc7cfab0017  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab001d  mov -0xe0(%rbp), %rbx   
0x7fc7cfab0024  mov %rax, -0xd8(%rbp)   
0x7fc7cfab002b  mov %rbx, -0xd0(%rbp)   
0x7fc7cfab0032  mov %rax, -0xc8(%rbp)   
0x7fc7cfab0039  mov $0x2, %esi          
0x7fc7cfab003e  mov %r15, %rdi          
0x7fc7cfab0041  lea -0xd0(%rbp), %rdx   
0x7fc7cfab0048  mov $0x762710, %rax      ; rbx_make_array
0x7fc7cfab0052  callq *%rax             
0x7fc7cfab0054  mov -0xe0(%rbp), %rax   
0x7fc7cfab005b  mov -0xd8(%rbp), %r13   
0x7fc7cfab0062  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0069  mov %rax, -0x138(%rbp)  
0x7fc7cfab0070  mov %r13, -0x130(%rbp)  
0x7fc7cfab0077  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab0082  mov -0x1a8(%rbp), %rsi  
0x7fc7cfab0089  testb $0x3, %sil        
0x7fc7cfab008d  jnz 0x3baa               ; 0x7fc7cfab00ba
0x7fc7cfab0093  mov 0x8(%rsi), %rax     
0x7fc7cfab0097  cmp $0x505, 0x70(%rax)  
0x7fc7cfab009e  jnz 0x3baa               ; 0x7fc7cfab00ba
0x7fc7cfab00a4  mov 0x30(%rsi), %rax    
0x7fc7cfab00a8  cmpq $0x22, %rax        
0x7fc7cfab00ac  mov $0x1a, %ebx         
0x7fc7cfab00b1  cmovnz %rax, %rbx       
0x7fc7cfab00b5  jmp 0x3bc1               ; 0x7fc7cfab00d1
0x7fc7cfab00ba  mov $0x1006e, %edx      
0x7fc7cfab00bf  mov %r15, %rdi          
0x7fc7cfab00c2  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab00cc  callq *%rax             
0x7fc7cfab00ce  mov %rax, %rbx          
0x7fc7cfab00d1  mov %rbx, -0xe0(%rbp)   
0x7fc7cfab00d8  mov -0x160(%rbp), %rax  
0x7fc7cfab00df  mov %rax, -0xd8(%rbp)   
0x7fc7cfab00e6  mov %r13, -0xd0(%rbp)   
0x7fc7cfab00ed  testb $0x3, %al         
0x7fc7cfab00f0  jnz 0x3c2e               ; 0x7fc7cfab013e
0x7fc7cfab00f6  mov 0x8(%rax), %rcx     
0x7fc7cfab00fa  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab00fe  jnz 0x3c2e               ; 0x7fc7cfab013e
0x7fc7cfab0104  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab010b  jnz 0x572f               ; 0x7fc7cfab1c3f
0x7fc7cfab0111  testb $0x3, %r13b       
0x7fc7cfab0115  jnz 0x3c24               ; 0x7fc7cfab0134
0x7fc7cfab011b  mov 0x8(%r13), %rcx     
0x7fc7cfab011f  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0123  jnz 0x3c24               ; 0x7fc7cfab0134
0x7fc7cfab0129  invalid                 
0x7fc7cfab012a  sar $0x45, 0x10(%rbx)   
0x7fc7cfab012e  sbb %ch, %cl            
0x7fc7cfab0130  push %rax               
0x7fc7cfab0131  sldt (%rax)             
0x7fc7cfab0134  testb $0x1, %r13b       
0x7fc7cfab0138  jnz 0x4b6c               ; 0x7fc7cfab107c
0x7fc7cfab013e  mov %rax, -0x50(%rbp)   
0x7fc7cfab0142  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab014a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0152  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0159  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0161  lea -0xd0(%rbp), %rax   
0x7fc7cfab0168  mov %rax, -0x38(%rbp)   
0x7fc7cfab016c  mov 0x1951d70, %rsi     
0x7fc7cfab0174  mov 0x20(%rsi), %rax    
0x7fc7cfab0178  mov $0x97, -0x104(%rbp) 
0x7fc7cfab0182  mov %r15, %rdi          
0x7fc7cfab0185  mov %r14, %rdx          
0x7fc7cfab0188  lea -0x58(%rbp), %rcx   
0x7fc7cfab018c  callq *%rax             
0x7fc7cfab018e  test %rax, %rax         
0x7fc7cfab0191  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0197  mov -0xe0(%rbp), %rbx   
0x7fc7cfab019e  mov %rax, -0xd8(%rbp)   
0x7fc7cfab01a5  testb $0x3, %bl         
0x7fc7cfab01a8  jnz 0x3ce3               ; 0x7fc7cfab01f3
0x7fc7cfab01ae  mov 0x8(%rbx), %rcx     
0x7fc7cfab01b2  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab01b6  jnz 0x3ce3               ; 0x7fc7cfab01f3
0x7fc7cfab01bc  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab01c3  jnz 0x5777               ; 0x7fc7cfab1c87
0x7fc7cfab01c9  testb $0x3, %al         
0x7fc7cfab01cc  jnz 0x3cda               ; 0x7fc7cfab01ea
0x7fc7cfab01d2  mov 0x8(%rax), %rcx     
0x7fc7cfab01d6  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab01da  jnz 0x3cda               ; 0x7fc7cfab01ea
0x7fc7cfab01e0  invalid                 
0x7fc7cfab01e1  sti                     
0x7fc7cfab01e2  adc %al, 0x18(%rax)     
0x7fc7cfab01e5  jmp 0x4baa               ; 0x7fc7cfab10ba
0x7fc7cfab01ea  testb $0x1, %al         
0x7fc7cfab01ed  jnz 0x4ba2               ; 0x7fc7cfab10b2
0x7fc7cfab01f3  mov %rbx, -0x50(%rbp)   
0x7fc7cfab01f7  movq $0x566, -0x58(%rbp)
0x7fc7cfab01ff  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0207  mov $0x1, -0x40(%rbp)   
0x7fc7cfab020e  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0216  mov %r12, -0x38(%rbp)   
0x7fc7cfab021a  mov 0x1951d88, %rsi     
0x7fc7cfab0222  mov 0x20(%rsi), %rax    
0x7fc7cfab0226  mov $0x9a, -0x104(%rbp) 
0x7fc7cfab0230  mov %r15, %rdi          
0x7fc7cfab0233  mov %r14, %rdx          
0x7fc7cfab0236  lea -0x58(%rbp), %rcx   
0x7fc7cfab023a  callq *%rax             
0x7fc7cfab023c  test %rax, %rax         
0x7fc7cfab023f  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0245  mov %rax, -0xe0(%rbp)   
0x7fc7cfab024c  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab0253  testb $0x3, %dl         
0x7fc7cfab0256  jnz 0x3dbb               ; 0x7fc7cfab02cb
0x7fc7cfab025c  mov 0x8(%rdx), %rcx     
0x7fc7cfab0260  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab0267  jnz 0x3dbb               ; 0x7fc7cfab02cb
0x7fc7cfab026d  mov %rax, 0x30(%rdx)    
0x7fc7cfab0271  testb $0x3, %al         
0x7fc7cfab0274  jnz 0x3dde               ; 0x7fc7cfab02ee
0x7fc7cfab027a  mov 0x15853f8, %esi     
0x7fc7cfab0281  mov (%rdx), %rcx        
0x7fc7cfab0284  mov %rcx, %rdi          
0x7fc7cfab0287  andq $0x380000, %rdi    
0x7fc7cfab028e  inc %esi                
0x7fc7cfab0290  shlq $0x13, %rsi        
0x7fc7cfab0294  cmp %rsi, %rdi          
0x7fc7cfab0297  jz 0x3da1                ; 0x7fc7cfab02b1
0x7fc7cfab029d  andq $0x300, %rcx       
0x7fc7cfab02a4  cmpq $0x200, %rcx       
0x7fc7cfab02ab  jz 0x3dde                ; 0x7fc7cfab02ee
0x7fc7cfab02b1  mov %r15, %rdi          
0x7fc7cfab02b4  mov %rdx, %rsi          
0x7fc7cfab02b7  mov %rax, %rdx          
0x7fc7cfab02ba  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab02c4  callq *%rax             
0x7fc7cfab02c6  jmp 0x3dde               ; 0x7fc7cfab02ee
0x7fc7cfab02cb  mov $0x1006e, %ecx      
0x7fc7cfab02d0  mov %r15, %rdi          
0x7fc7cfab02d3  mov %r14, %rsi          
0x7fc7cfab02d6  mov %rax, %r8           
0x7fc7cfab02d9  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab02e3  callq *%rax             
0x7fc7cfab02e5  test %rax, %rax         
0x7fc7cfab02e8  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab02ee  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab02f9  mov -0x1a8(%rbp), %rsi  
0x7fc7cfab0300  testb $0x3, %sil        
0x7fc7cfab0304  jnz 0x3e21               ; 0x7fc7cfab0331
0x7fc7cfab030a  mov 0x8(%rsi), %rax     
0x7fc7cfab030e  cmp $0x505, 0x70(%rax)  
0x7fc7cfab0315  jnz 0x3e21               ; 0x7fc7cfab0331
0x7fc7cfab031b  mov 0x38(%rsi), %rax    
0x7fc7cfab031f  cmpq $0x22, %rax        
0x7fc7cfab0323  mov $0x1a, %ebx         
0x7fc7cfab0328  cmovnz %rax, %rbx       
0x7fc7cfab032c  jmp 0x3e38               ; 0x7fc7cfab0348
0x7fc7cfab0331  mov $0x10076, %edx      
0x7fc7cfab0336  mov %r15, %rdi          
0x7fc7cfab0339  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab0343  callq *%rax             
0x7fc7cfab0345  mov %rax, %rbx          
0x7fc7cfab0348  mov %rbx, -0xe0(%rbp)   
0x7fc7cfab034f  mov -0x158(%rbp), %rax  
0x7fc7cfab0356  mov %rax, -0xd8(%rbp)   
0x7fc7cfab035d  mov -0x130(%rbp), %rcx  
0x7fc7cfab0364  mov %rcx, -0xd0(%rbp)   
0x7fc7cfab036b  testb $0x3, %al         
0x7fc7cfab036e  jnz 0x3ea9               ; 0x7fc7cfab03b9
0x7fc7cfab0374  mov 0x8(%rax), %rdx     
0x7fc7cfab0378  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab037c  jnz 0x3ea9               ; 0x7fc7cfab03b9
0x7fc7cfab0382  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab0389  jnz 0x57ba               ; 0x7fc7cfab1cca
0x7fc7cfab038f  testb $0x3, %cl         
0x7fc7cfab0392  jnz 0x3ea0               ; 0x7fc7cfab03b0
0x7fc7cfab0398  mov 0x8(%rcx), %rdx     
0x7fc7cfab039c  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab03a0  jnz 0x3ea0               ; 0x7fc7cfab03b0
0x7fc7cfab03a6  invalid                 
0x7fc7cfab03a7  sti                     
0x7fc7cfab03a8  adc %al, 0x18(%rcx)     
0x7fc7cfab03ab  jmp 0x4be4               ; 0x7fc7cfab10f4
0x7fc7cfab03b0  testb $0x1, %cl         
0x7fc7cfab03b3  jnz 0x4bdc               ; 0x7fc7cfab10ec
0x7fc7cfab03b9  mov %rax, -0x50(%rbp)   
0x7fc7cfab03bd  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab03c5  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab03cd  mov $0x1, -0x40(%rbp)   
0x7fc7cfab03d4  movq $0x0, -0x30(%rbp)  
0x7fc7cfab03dc  lea -0xd0(%rbp), %rax   
0x7fc7cfab03e3  mov %rax, -0x38(%rbp)   
0x7fc7cfab03e7  mov 0x1951de8, %rsi     
0x7fc7cfab03ef  mov 0x20(%rsi), %rax    
0x7fc7cfab03f3  mov $0xa6, -0x104(%rbp) 
0x7fc7cfab03fd  mov %r15, %rdi          
0x7fc7cfab0400  mov %r14, %rdx          
0x7fc7cfab0403  lea -0x58(%rbp), %rcx   
0x7fc7cfab0407  callq *%rax             
0x7fc7cfab0409  test %rax, %rax         
0x7fc7cfab040c  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0412  mov -0xe0(%rbp), %rbx   
0x7fc7cfab0419  mov %rax, -0xd8(%rbp)   
0x7fc7cfab0420  testb $0x3, %bl         
0x7fc7cfab0423  jnz 0x3f5e               ; 0x7fc7cfab046e
0x7fc7cfab0429  mov 0x8(%rbx), %rcx     
0x7fc7cfab042d  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0431  jnz 0x3f5e               ; 0x7fc7cfab046e
0x7fc7cfab0437  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab043e  jnz 0x5802               ; 0x7fc7cfab1d12
0x7fc7cfab0444  testb $0x3, %al         
0x7fc7cfab0447  jnz 0x3f55               ; 0x7fc7cfab0465
0x7fc7cfab044d  mov 0x8(%rax), %rcx     
0x7fc7cfab0451  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0455  jnz 0x3f55               ; 0x7fc7cfab0465
0x7fc7cfab045b  invalid                 
0x7fc7cfab045c  sti                     
0x7fc7cfab045d  adc %al, 0x18(%rax)     
0x7fc7cfab0460  jmp 0x4c1a               ; 0x7fc7cfab112a
0x7fc7cfab0465  testb $0x1, %al         
0x7fc7cfab0468  jnz 0x4c12               ; 0x7fc7cfab1122
0x7fc7cfab046e  mov %rbx, -0x50(%rbp)   
0x7fc7cfab0472  movq $0x566, -0x58(%rbp)
0x7fc7cfab047a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0482  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0489  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0491  mov %r12, -0x38(%rbp)   
0x7fc7cfab0495  mov 0x1951e00, %rsi     
0x7fc7cfab049d  mov 0x20(%rsi), %rax    
0x7fc7cfab04a1  mov $0xa9, -0x104(%rbp) 
0x7fc7cfab04ab  mov %r15, %rdi          
0x7fc7cfab04ae  mov %r14, %rdx          
0x7fc7cfab04b1  lea -0x58(%rbp), %rcx   
0x7fc7cfab04b5  callq *%rax             
0x7fc7cfab04b7  test %rax, %rax         
0x7fc7cfab04ba  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab04c0  mov %rax, -0xe0(%rbp)   
0x7fc7cfab04c7  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab04ce  testb $0x3, %dl         
0x7fc7cfab04d1  jnz 0x4036               ; 0x7fc7cfab0546
0x7fc7cfab04d7  mov 0x8(%rdx), %rcx     
0x7fc7cfab04db  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab04e2  jnz 0x4036               ; 0x7fc7cfab0546
0x7fc7cfab04e8  mov %rax, 0x38(%rdx)    
0x7fc7cfab04ec  testb $0x3, %al         
0x7fc7cfab04ef  jnz 0x4059               ; 0x7fc7cfab0569
0x7fc7cfab04f5  mov 0x15853f8, %esi     
0x7fc7cfab04fc  mov (%rdx), %rcx        
0x7fc7cfab04ff  mov %rcx, %rdi          
0x7fc7cfab0502  andq $0x380000, %rdi    
0x7fc7cfab0509  inc %esi                
0x7fc7cfab050b  shlq $0x13, %rsi        
0x7fc7cfab050f  cmp %rsi, %rdi          
0x7fc7cfab0512  jz 0x401c                ; 0x7fc7cfab052c
0x7fc7cfab0518  andq $0x300, %rcx       
0x7fc7cfab051f  cmpq $0x200, %rcx       
0x7fc7cfab0526  jz 0x4059                ; 0x7fc7cfab0569
0x7fc7cfab052c  mov %r15, %rdi          
0x7fc7cfab052f  mov %rdx, %rsi          
0x7fc7cfab0532  mov %rax, %rdx          
0x7fc7cfab0535  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab053f  callq *%rax             
0x7fc7cfab0541  jmp 0x4059               ; 0x7fc7cfab0569
0x7fc7cfab0546  mov $0x10076, %ecx      
0x7fc7cfab054b  mov %r15, %rdi          
0x7fc7cfab054e  mov %r14, %rsi          
0x7fc7cfab0551  mov %rax, %r8           
0x7fc7cfab0554  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab055e  callq *%rax             
0x7fc7cfab0560  test %rax, %rax         
0x7fc7cfab0563  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0569  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab0574  mov -0x1a8(%rbp), %rsi  
0x7fc7cfab057b  testb $0x3, %sil        
0x7fc7cfab057f  jnz 0x409c               ; 0x7fc7cfab05ac
0x7fc7cfab0585  mov 0x8(%rsi), %rax     
0x7fc7cfab0589  cmp $0x505, 0x70(%rax)  
0x7fc7cfab0590  jnz 0x409c               ; 0x7fc7cfab05ac
0x7fc7cfab0596  mov 0x40(%rsi), %rax    
0x7fc7cfab059a  cmpq $0x22, %rax        
0x7fc7cfab059e  mov $0x1a, %ebx         
0x7fc7cfab05a3  cmovnz %rax, %rbx       
0x7fc7cfab05a7  jmp 0x40b3               ; 0x7fc7cfab05c3
0x7fc7cfab05ac  mov $0x1007e, %edx      
0x7fc7cfab05b1  mov %r15, %rdi          
0x7fc7cfab05b4  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab05be  callq *%rax             
0x7fc7cfab05c0  mov %rax, %rbx          
0x7fc7cfab05c3  mov %rbx, -0xe0(%rbp)   
0x7fc7cfab05ca  mov -0x150(%rbp), %rax  
0x7fc7cfab05d1  mov %rax, -0xd8(%rbp)   
0x7fc7cfab05d8  mov -0x130(%rbp), %rcx  
0x7fc7cfab05df  mov %rcx, -0xd0(%rbp)   
0x7fc7cfab05e6  testb $0x3, %al         
0x7fc7cfab05e9  jnz 0x4124               ; 0x7fc7cfab0634
0x7fc7cfab05ef  mov 0x8(%rax), %rdx     
0x7fc7cfab05f3  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab05f7  jnz 0x4124               ; 0x7fc7cfab0634
0x7fc7cfab05fd  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab0604  jnz 0x588d               ; 0x7fc7cfab1d9d
0x7fc7cfab060a  testb $0x3, %cl         
0x7fc7cfab060d  jnz 0x411b               ; 0x7fc7cfab062b
0x7fc7cfab0613  mov 0x8(%rcx), %rdx     
0x7fc7cfab0617  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab061b  jnz 0x411b               ; 0x7fc7cfab062b
0x7fc7cfab0621  invalid                 
0x7fc7cfab0622  sti                     
0x7fc7cfab0623  adc %al, 0x18(%rcx)     
0x7fc7cfab0626  jmp 0x4c54               ; 0x7fc7cfab1164
0x7fc7cfab062b  testb $0x1, %cl         
0x7fc7cfab062e  jnz 0x4c4c               ; 0x7fc7cfab115c
0x7fc7cfab0634  mov %rax, -0x50(%rbp)   
0x7fc7cfab0638  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab0640  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0648  mov $0x1, -0x40(%rbp)   
0x7fc7cfab064f  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0657  lea -0xd0(%rbp), %rax   
0x7fc7cfab065e  mov %rax, -0x38(%rbp)   
0x7fc7cfab0662  mov 0x1951e60, %rsi     
0x7fc7cfab066a  mov 0x20(%rsi), %rax    
0x7fc7cfab066e  mov $0xb5, -0x104(%rbp) 
0x7fc7cfab0678  mov %r15, %rdi          
0x7fc7cfab067b  mov %r14, %rdx          
0x7fc7cfab067e  lea -0x58(%rbp), %rcx   
0x7fc7cfab0682  callq *%rax             
0x7fc7cfab0684  test %rax, %rax         
0x7fc7cfab0687  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab068d  mov -0xe0(%rbp), %rbx   
0x7fc7cfab0694  mov %rax, -0xd8(%rbp)   
0x7fc7cfab069b  testb $0x3, %bl         
0x7fc7cfab069e  jnz 0x41d9               ; 0x7fc7cfab06e9
0x7fc7cfab06a4  mov 0x8(%rbx), %rcx     
0x7fc7cfab06a8  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab06ac  jnz 0x41d9               ; 0x7fc7cfab06e9
0x7fc7cfab06b2  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab06b9  jnz 0x58d5               ; 0x7fc7cfab1de5
0x7fc7cfab06bf  testb $0x3, %al         
0x7fc7cfab06c2  jnz 0x41d0               ; 0x7fc7cfab06e0
0x7fc7cfab06c8  mov 0x8(%rax), %rcx     
0x7fc7cfab06cc  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab06d0  jnz 0x41d0               ; 0x7fc7cfab06e0
0x7fc7cfab06d6  invalid                 
0x7fc7cfab06d7  sti                     
0x7fc7cfab06d8  adc %al, 0x18(%rax)     
0x7fc7cfab06db  jmp 0x4c8a               ; 0x7fc7cfab119a
0x7fc7cfab06e0  testb $0x1, %al         
0x7fc7cfab06e3  jnz 0x4c82               ; 0x7fc7cfab1192
0x7fc7cfab06e9  mov %rbx, -0x50(%rbp)   
0x7fc7cfab06ed  movq $0x566, -0x58(%rbp)
0x7fc7cfab06f5  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab06fd  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0704  movq $0x0, -0x30(%rbp)  
0x7fc7cfab070c  mov %r12, -0x38(%rbp)   
0x7fc7cfab0710  mov 0x1951e78, %rsi     
0x7fc7cfab0718  mov 0x20(%rsi), %rax    
0x7fc7cfab071c  mov $0xb8, -0x104(%rbp) 
0x7fc7cfab0726  mov %r15, %rdi          
0x7fc7cfab0729  mov %r14, %rdx          
0x7fc7cfab072c  lea -0x58(%rbp), %rcx   
0x7fc7cfab0730  callq *%rax             
0x7fc7cfab0732  test %rax, %rax         
0x7fc7cfab0735  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab073b  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0742  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab0749  testb $0x3, %dl         
0x7fc7cfab074c  jnz 0x42b1               ; 0x7fc7cfab07c1
0x7fc7cfab0752  mov 0x8(%rdx), %rcx     
0x7fc7cfab0756  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab075d  jnz 0x42b1               ; 0x7fc7cfab07c1
0x7fc7cfab0763  mov %rax, 0x40(%rdx)    
0x7fc7cfab0767  testb $0x3, %al         
0x7fc7cfab076a  jnz 0x42d4               ; 0x7fc7cfab07e4
0x7fc7cfab0770  mov 0x15853f8, %esi     
0x7fc7cfab0777  mov (%rdx), %rcx        
0x7fc7cfab077a  mov %rcx, %rdi          
0x7fc7cfab077d  andq $0x380000, %rdi    
0x7fc7cfab0784  inc %esi                
0x7fc7cfab0786  shlq $0x13, %rsi        
0x7fc7cfab078a  cmp %rsi, %rdi          
0x7fc7cfab078d  jz 0x4297                ; 0x7fc7cfab07a7
0x7fc7cfab0793  andq $0x300, %rcx       
0x7fc7cfab079a  cmpq $0x200, %rcx       
0x7fc7cfab07a1  jz 0x42d4                ; 0x7fc7cfab07e4
0x7fc7cfab07a7  mov %r15, %rdi          
0x7fc7cfab07aa  mov %rdx, %rsi          
0x7fc7cfab07ad  mov %rax, %rdx          
0x7fc7cfab07b0  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab07ba  callq *%rax             
0x7fc7cfab07bc  jmp 0x42d4               ; 0x7fc7cfab07e4
0x7fc7cfab07c1  mov $0x1007e, %ecx      
0x7fc7cfab07c6  mov %r15, %rdi          
0x7fc7cfab07c9  mov %r14, %rsi          
0x7fc7cfab07cc  mov %rax, %r8           
0x7fc7cfab07cf  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab07d9  callq *%rax             
0x7fc7cfab07db  test %rax, %rax         
0x7fc7cfab07de  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab07e4  mov -0x168(%rbp), %rax  
0x7fc7cfab07eb  mov %rax, -0xe0(%rbp)   
0x7fc7cfab07f2  mov %rax, -0xd8(%rbp)   
0x7fc7cfab07f9  mov 0x30(%rax), %rax    
0x7fc7cfab07fd  cmpq $0x22, %rax        
0x7fc7cfab0801  mov $0x1a, %ebx         
0x7fc7cfab0806  cmovnz %rax, %rbx       
0x7fc7cfab080a  mov %rbx, -0xd8(%rbp)   
0x7fc7cfab0811  mov -0x160(%rbp), %rax  
0x7fc7cfab0818  mov %rax, -0xd0(%rbp)   
0x7fc7cfab081f  mov -0x138(%rbp), %rcx  
0x7fc7cfab0826  mov %rcx, -0xc8(%rbp)   
0x7fc7cfab082d  testb $0x3, %al         
0x7fc7cfab0830  jnz 0x436b               ; 0x7fc7cfab087b
0x7fc7cfab0836  mov 0x8(%rax), %rdx     
0x7fc7cfab083a  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab083e  jnz 0x436b               ; 0x7fc7cfab087b
0x7fc7cfab0844  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab084b  jnz 0x5918               ; 0x7fc7cfab1e28
0x7fc7cfab0851  testb $0x3, %cl         
0x7fc7cfab0854  jnz 0x4362               ; 0x7fc7cfab0872
0x7fc7cfab085a  mov 0x8(%rcx), %rdx     
0x7fc7cfab085e  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab0862  jnz 0x4362               ; 0x7fc7cfab0872
0x7fc7cfab0868  invalid                 
0x7fc7cfab0869  sti                     
0x7fc7cfab086a  adc %al, 0x18(%rcx)     
0x7fc7cfab086d  jmp 0x4cc4               ; 0x7fc7cfab11d4
0x7fc7cfab0872  testb $0x1, %cl         
0x7fc7cfab0875  jnz 0x4cbc               ; 0x7fc7cfab11cc
0x7fc7cfab087b  mov %rax, -0x50(%rbp)   
0x7fc7cfab087f  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab0887  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab088f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0896  movq $0x0, -0x30(%rbp)  
0x7fc7cfab089e  lea -0xc8(%rbp), %rax   
0x7fc7cfab08a5  mov %rax, -0x38(%rbp)   
0x7fc7cfab08a9  mov 0x1951ef8, %rsi     
0x7fc7cfab08b1  mov 0x20(%rsi), %rax    
0x7fc7cfab08b5  mov $0xc8, -0x104(%rbp) 
0x7fc7cfab08bf  mov %r15, %rdi          
0x7fc7cfab08c2  mov %r14, %rdx          
0x7fc7cfab08c5  lea -0x58(%rbp), %rcx   
0x7fc7cfab08c9  callq *%rax             
0x7fc7cfab08cb  test %rax, %rax         
0x7fc7cfab08ce  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab08d4  mov -0xd8(%rbp), %rbx   
0x7fc7cfab08db  mov %rax, -0xd0(%rbp)   
0x7fc7cfab08e2  testb $0x3, %bl         
0x7fc7cfab08e5  jnz 0x4420               ; 0x7fc7cfab0930
0x7fc7cfab08eb  mov 0x8(%rbx), %rcx     
0x7fc7cfab08ef  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab08f3  jnz 0x4420               ; 0x7fc7cfab0930
0x7fc7cfab08f9  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab0900  jnz 0x5960               ; 0x7fc7cfab1e70
0x7fc7cfab0906  testb $0x3, %al         
0x7fc7cfab0909  jnz 0x4417               ; 0x7fc7cfab0927
0x7fc7cfab090f  mov 0x8(%rax), %rcx     
0x7fc7cfab0913  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0917  jnz 0x4417               ; 0x7fc7cfab0927
0x7fc7cfab091d  invalid                 
0x7fc7cfab091e  sti                     
0x7fc7cfab091f  adc %al, 0x18(%rax)     
0x7fc7cfab0922  jmp 0x4cfa               ; 0x7fc7cfab120a
0x7fc7cfab0927  testb $0x1, %al         
0x7fc7cfab092a  jnz 0x4cf2               ; 0x7fc7cfab1202
0x7fc7cfab0930  mov %rbx, -0x50(%rbp)   
0x7fc7cfab0934  movq $0x55e, -0x58(%rbp)
0x7fc7cfab093c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0944  mov $0x1, -0x40(%rbp)   
0x7fc7cfab094b  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0953  lea -0xd0(%rbp), %rax   
0x7fc7cfab095a  mov %rax, -0x38(%rbp)   
0x7fc7cfab095e  mov 0x1951f10, %rsi     
0x7fc7cfab0966  mov 0x20(%rsi), %rax    
0x7fc7cfab096a  mov $0xcb, -0x104(%rbp) 
0x7fc7cfab0974  mov %r15, %rdi          
0x7fc7cfab0977  mov %r14, %rdx          
0x7fc7cfab097a  lea -0x58(%rbp), %rcx   
0x7fc7cfab097e  callq *%rax             
0x7fc7cfab0980  test %rax, %rax         
0x7fc7cfab0983  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0989  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0990  mov -0xe0(%rbp), %rsi   
0x7fc7cfab0997  mov %rsi, -0xd8(%rbp)   
0x7fc7cfab099e  mov %rax, -0xe0(%rbp)   
0x7fc7cfab09a5  testb $0x3, %sil        
0x7fc7cfab09a9  jnz 0x5206               ; 0x7fc7cfab1716
0x7fc7cfab09af  mov 0x8(%rsi), %rcx     
0x7fc7cfab09b3  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab09ba  jnz 0x5206               ; 0x7fc7cfab1716
0x7fc7cfab09c0  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab09c4  jnz 0x52c8               ; 0x7fc7cfab17d8
0x7fc7cfab09ca  mov %rax, 0x30(%rsi)    
0x7fc7cfab09ce  testb $0x3, %al         
0x7fc7cfab09d1  jnz 0x4510               ; 0x7fc7cfab0a20
0x7fc7cfab09d7  mov 0x15853f8, %edx     
0x7fc7cfab09de  mov (%rsi), %rcx        
0x7fc7cfab09e1  mov %rcx, %rdi          
0x7fc7cfab09e4  andq $0x380000, %rdi    
0x7fc7cfab09eb  inc %edx                
0x7fc7cfab09ed  shlq $0x13, %rdx        
0x7fc7cfab09f1  cmp %rdx, %rdi          
0x7fc7cfab09f4  jz 0x44fe                ; 0x7fc7cfab0a0e
0x7fc7cfab09fa  andq $0x300, %rcx       
0x7fc7cfab0a01  cmpq $0x200, %rcx       
0x7fc7cfab0a08  jz 0x4510                ; 0x7fc7cfab0a20
0x7fc7cfab0a0e  mov %r15, %rdi          
0x7fc7cfab0a11  mov %rax, %rdx          
0x7fc7cfab0a14  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab0a1e  callq *%rax             
0x7fc7cfab0a20  mov -0x168(%rbp), %rax  
0x7fc7cfab0a27  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0a2e  mov 0x38(%rax), %rax    
0x7fc7cfab0a32  cmpq $0x22, %rax        
0x7fc7cfab0a36  mov $0x1a, %ebx         
0x7fc7cfab0a3b  cmovnz %rax, %rbx       
0x7fc7cfab0a3f  mov %rbx, -0xd8(%rbp)   
0x7fc7cfab0a46  mov -0x158(%rbp), %rax  
0x7fc7cfab0a4d  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0a54  mov -0x138(%rbp), %rcx  
0x7fc7cfab0a5b  mov %rcx, -0xc8(%rbp)   
0x7fc7cfab0a62  testb $0x3, %al         
0x7fc7cfab0a65  jnz 0x45a0               ; 0x7fc7cfab0ab0
0x7fc7cfab0a6b  mov 0x8(%rax), %rdx     
0x7fc7cfab0a6f  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab0a73  jnz 0x45a0               ; 0x7fc7cfab0ab0
0x7fc7cfab0a79  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab0a80  jnz 0x5aae               ; 0x7fc7cfab1fbe
0x7fc7cfab0a86  testb $0x3, %cl         
0x7fc7cfab0a89  jnz 0x4597               ; 0x7fc7cfab0aa7
0x7fc7cfab0a8f  mov 0x8(%rcx), %rdx     
0x7fc7cfab0a93  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab0a97  jnz 0x4597               ; 0x7fc7cfab0aa7
0x7fc7cfab0a9d  invalid                 
0x7fc7cfab0a9e  sti                     
0x7fc7cfab0a9f  adc %al, 0x18(%rcx)     
0x7fc7cfab0aa2  jmp 0x4d30               ; 0x7fc7cfab1240
0x7fc7cfab0aa7  testb $0x1, %cl         
0x7fc7cfab0aaa  jnz 0x4d28               ; 0x7fc7cfab1238
0x7fc7cfab0ab0  mov %rax, -0x50(%rbp)   
0x7fc7cfab0ab4  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab0abc  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0ac4  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0acb  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0ad3  lea -0xc8(%rbp), %rax   
0x7fc7cfab0ada  mov %rax, -0x38(%rbp)   
0x7fc7cfab0ade  mov 0x1951fb8, %rsi     
0x7fc7cfab0ae6  mov 0x20(%rsi), %rax    
0x7fc7cfab0aea  mov $0xe0, -0x104(%rbp) 
0x7fc7cfab0af4  mov %r15, %rdi          
0x7fc7cfab0af7  mov %r14, %rdx          
0x7fc7cfab0afa  lea -0x58(%rbp), %rcx   
0x7fc7cfab0afe  callq *%rax             
0x7fc7cfab0b00  test %rax, %rax         
0x7fc7cfab0b03  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0b09  mov -0xd8(%rbp), %rbx   
0x7fc7cfab0b10  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0b17  testb $0x3, %bl         
0x7fc7cfab0b1a  jnz 0x4655               ; 0x7fc7cfab0b65
0x7fc7cfab0b20  mov 0x8(%rbx), %rcx     
0x7fc7cfab0b24  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0b28  jnz 0x4655               ; 0x7fc7cfab0b65
0x7fc7cfab0b2e  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab0b35  jnz 0x5af6               ; 0x7fc7cfab2006
0x7fc7cfab0b3b  testb $0x3, %al         
0x7fc7cfab0b3e  jnz 0x464c               ; 0x7fc7cfab0b5c
0x7fc7cfab0b44  mov 0x8(%rax), %rcx     
0x7fc7cfab0b48  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0b4c  jnz 0x464c               ; 0x7fc7cfab0b5c
0x7fc7cfab0b52  invalid                 
0x7fc7cfab0b53  sti                     
0x7fc7cfab0b54  adc %al, 0x18(%rax)     
0x7fc7cfab0b57  jmp 0x4d66               ; 0x7fc7cfab1276
0x7fc7cfab0b5c  testb $0x1, %al         
0x7fc7cfab0b5f  jnz 0x4d5e               ; 0x7fc7cfab126e
0x7fc7cfab0b65  mov %rbx, -0x50(%rbp)   
0x7fc7cfab0b69  movq $0x55e, -0x58(%rbp)
0x7fc7cfab0b71  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0b79  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0b80  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0b88  lea -0xd0(%rbp), %rax   
0x7fc7cfab0b8f  mov %rax, -0x38(%rbp)   
0x7fc7cfab0b93  mov 0x1951fd0, %rsi     
0x7fc7cfab0b9b  mov 0x20(%rsi), %rax    
0x7fc7cfab0b9f  mov $0xe3, -0x104(%rbp) 
0x7fc7cfab0ba9  mov %r15, %rdi          
0x7fc7cfab0bac  mov %r14, %rdx          
0x7fc7cfab0baf  lea -0x58(%rbp), %rcx   
0x7fc7cfab0bb3  callq *%rax             
0x7fc7cfab0bb5  test %rax, %rax         
0x7fc7cfab0bb8  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0bbe  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0bc5  mov -0xe0(%rbp), %rsi   
0x7fc7cfab0bcc  mov %rsi, -0xd8(%rbp)   
0x7fc7cfab0bd3  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0bda  testb $0x3, %sil        
0x7fc7cfab0bde  jnz 0x527e               ; 0x7fc7cfab178e
0x7fc7cfab0be4  mov 0x8(%rsi), %rcx     
0x7fc7cfab0be8  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab0bef  jnz 0x527e               ; 0x7fc7cfab178e
0x7fc7cfab0bf5  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab0bf9  jnz 0x5310               ; 0x7fc7cfab1820
0x7fc7cfab0bff  mov %rax, 0x38(%rsi)    
0x7fc7cfab0c03  testb $0x3, %al         
0x7fc7cfab0c06  jnz 0x4745               ; 0x7fc7cfab0c55
0x7fc7cfab0c0c  mov 0x15853f8, %edx     
0x7fc7cfab0c13  mov (%rsi), %rcx        
0x7fc7cfab0c16  mov %rcx, %rdi          
0x7fc7cfab0c19  andq $0x380000, %rdi    
0x7fc7cfab0c20  inc %edx                
0x7fc7cfab0c22  shlq $0x13, %rdx        
0x7fc7cfab0c26  cmp %rdx, %rdi          
0x7fc7cfab0c29  jz 0x4733                ; 0x7fc7cfab0c43
0x7fc7cfab0c2f  andq $0x300, %rcx       
0x7fc7cfab0c36  cmpq $0x200, %rcx       
0x7fc7cfab0c3d  jz 0x4745                ; 0x7fc7cfab0c55
0x7fc7cfab0c43  mov %r15, %rdi          
0x7fc7cfab0c46  mov %rax, %rdx          
0x7fc7cfab0c49  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab0c53  callq *%rax             
0x7fc7cfab0c55  mov -0x168(%rbp), %rax  
0x7fc7cfab0c5c  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0c63  mov %rax, -0xd8(%rbp)   
0x7fc7cfab0c6a  mov 0x40(%rax), %rax    
0x7fc7cfab0c6e  cmpq $0x22, %rax        
0x7fc7cfab0c72  mov $0x1a, %ebx         
0x7fc7cfab0c77  cmovnz %rax, %rbx       
0x7fc7cfab0c7b  mov %rbx, -0xd8(%rbp)   
0x7fc7cfab0c82  mov -0x150(%rbp), %rax  
0x7fc7cfab0c89  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0c90  mov -0x138(%rbp), %rcx  
0x7fc7cfab0c97  mov %rcx, -0xc8(%rbp)   
0x7fc7cfab0c9e  testb $0x3, %al         
0x7fc7cfab0ca1  jnz 0x488c               ; 0x7fc7cfab0d9c
0x7fc7cfab0ca7  mov 0x8(%rax), %rdx     
0x7fc7cfab0cab  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab0caf  jnz 0x488c               ; 0x7fc7cfab0d9c
0x7fc7cfab0cb5  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab0cbc  jnz 0x5b3e               ; 0x7fc7cfab204e
0x7fc7cfab0cc2  testb $0x3, %cl         
0x7fc7cfab0cc5  jnz 0x4883               ; 0x7fc7cfab0d93
0x7fc7cfab0ccb  mov 0x8(%rcx), %rdx     
0x7fc7cfab0ccf  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab0cd3  jnz 0x4883               ; 0x7fc7cfab0d93
0x7fc7cfab0cd9  invalid                 
0x7fc7cfab0cda  sti                     
0x7fc7cfab0cdb  adc %al, 0x18(%rcx)     
0x7fc7cfab0cde  jmp 0x4d9c               ; 0x7fc7cfab12ac
0x7fc7cfab0ce3  sarq $0x1, %rbx         
0x7fc7cfab0ce6  invalid                 
0x7fc7cfab0ce7  loope 0x47d4             ; 0x7fc7cfab0de4
0x7fc7cfab0ce9  sub %bl, %al            
0x7fc7cfab0ceb  invalid                 
0x7fc7cfab0cec  sti                     
0x7fc7cfab0ced  pop %rcx                
0x7fc7cfab0cee  sbb %al, %bpl           
0x7fc7cfab0cf1  sti                     
0x7fc7cfab0cf2  adc %eax, -0x368(%rbp)  
0x7fc7cfab0cf8  mov %r15, %rdi          
0x7fc7cfab0cfb  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab0d05  callq *%rax             
0x7fc7cfab0d07  invalid                 
0x7fc7cfab0d08  sti                     
0x7fc7cfab0d09  adc %al, -0x368(%rbp)   
0x7fc7cfab0d0f  invalid                 
0x7fc7cfab0d10  sti                     
0x7fc7cfab0d11  adc %eax, 0x18(%rax)    
0x7fc7cfab0d14  jmp 0x3865               ; 0x7fc7cfaafd75
0x7fc7cfab0d19  sarq $0x1, %rax         
0x7fc7cfab0d1c  invalid                 
0x7fc7cfab0d1d  loope 0x480a             ; 0x7fc7cfab0e1a
0x7fc7cfab0d1f  sub %al, %al            
0x7fc7cfab0d21  invalid                 
0x7fc7cfab0d22  sti                     
0x7fc7cfab0d23  adc %cl, 0x18(%rcx)     
0x7fc7cfab0d26  invalid                 
0x7fc7cfab0d27  rep pop %rsi            
0x7fc7cfab0d29  rolb $0xfb, %ch         
0x7fc7cfab0d2c  adc %eax, -0x368(%rbp)  
0x7fc7cfab0d32  mov %r15, %rdi          
0x7fc7cfab0d35  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab0d3f  callq *%rax             
0x7fc7cfab0d41  mov %rax, %r13          
0x7fc7cfab0d44  invalid                 
0x7fc7cfab0d45  sti                     
0x7fc7cfab0d46  adc %al, -0x368(%rbp)   
0x7fc7cfab0d4c  invalid                 
0x7fc7cfab0d4d  sar $0x45, 0x11(%rbx)   
0x7fc7cfab0d51  sbb %ch, %cl            
0x7fc7cfab0d53  iretd                   
0x7fc7cfab0d54  lock invalid            
0x7fc7cfab0d57  mov %r13, %rcx          
0x7fc7cfab0d5a  sarq $0x1, %rcx         
0x7fc7cfab0d5d  invalid                 
0x7fc7cfab0d5e  loope 0x484b             ; 0x7fc7cfab0e5b
0x7fc7cfab0d60  sub %cl, %al            
0x7fc7cfab0d62  invalid                 
0x7fc7cfab0d63  sti                     
0x7fc7cfab0d64  pop %rcx                
0x7fc7cfab0d65  sbb %al, %bpl           
0x7fc7cfab0d68  sti                     
0x7fc7cfab0d69  adc %eax, -0x368(%rbp)  
0x7fc7cfab0d6f  mov %r15, %rdi          
0x7fc7cfab0d72  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab0d7c  callq *%rax             
0x7fc7cfab0d7e  mov %rax, %rbx          
0x7fc7cfab0d81  invalid                 
0x7fc7cfab0d82  sti                     
0x7fc7cfab0d83  adc %al, -0x368(%rbp)   
0x7fc7cfab0d89  invalid                 
0x7fc7cfab0d8a  sti                     
0x7fc7cfab0d8b  adc %eax, 0x18(%rbx)    
0x7fc7cfab0d8e  jmp 0x3a2f               ; 0x7fc7cfaaff3f
0x7fc7cfab0d93  testb $0x1, %cl         
0x7fc7cfab0d96  jnz 0x4d94               ; 0x7fc7cfab12a4
0x7fc7cfab0d9c  mov %rax, -0x50(%rbp)   
0x7fc7cfab0da0  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab0da8  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0db0  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0db7  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0dbf  lea -0xc8(%rbp), %rax   
0x7fc7cfab0dc6  mov %rax, -0x38(%rbp)   
0x7fc7cfab0dca  mov 0x1952078, %rsi     
0x7fc7cfab0dd2  mov 0x20(%rsi), %rax    
0x7fc7cfab0dd6  mov $0xf8, -0x104(%rbp) 
0x7fc7cfab0de0  mov %r15, %rdi          
0x7fc7cfab0de3  mov %r14, %rdx          
0x7fc7cfab0de6  lea -0x58(%rbp), %rcx   
0x7fc7cfab0dea  callq *%rax             
0x7fc7cfab0dec  test %rax, %rax         
0x7fc7cfab0def  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0df5  mov -0xd8(%rbp), %rbx   
0x7fc7cfab0dfc  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0e03  testb $0x3, %bl         
0x7fc7cfab0e06  jnz 0x4977               ; 0x7fc7cfab0e87
0x7fc7cfab0e0c  mov 0x8(%rbx), %rcx     
0x7fc7cfab0e10  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0e14  jnz 0x4977               ; 0x7fc7cfab0e87
0x7fc7cfab0e1a  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab0e21  jnz 0x5b86               ; 0x7fc7cfab2096
0x7fc7cfab0e27  testb $0x3, %al         
0x7fc7cfab0e2a  jnz 0x496e               ; 0x7fc7cfab0e7e
0x7fc7cfab0e30  mov 0x8(%rax), %rcx     
0x7fc7cfab0e34  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab0e38  jnz 0x496e               ; 0x7fc7cfab0e7e
0x7fc7cfab0e3e  invalid                 
0x7fc7cfab0e3f  sti                     
0x7fc7cfab0e40  adc %al, 0x18(%rax)     
0x7fc7cfab0e43  jmp 0x4dd2               ; 0x7fc7cfab12e2
0x7fc7cfab0e48  sarq $0x1, %r13         
0x7fc7cfab0e4b  invalid                 
0x7fc7cfab0e4c  sar $0x2a, %ebx         
0x7fc7cfab0e4f  invalid                 
0x7fc7cfab0e50  invalid                 
0x7fc7cfab0e51  sti                     
0x7fc7cfab0e52  pop %rcx                
0x7fc7cfab0e53  sbb %al, %bpl           
0x7fc7cfab0e56  sti                     
0x7fc7cfab0e57  adc %eax, -0x368(%rbp)  
0x7fc7cfab0e5d  mov %r15, %rdi          
0x7fc7cfab0e60  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab0e6a  callq *%rax             
0x7fc7cfab0e6c  invalid                 
0x7fc7cfab0e6d  sti                     
0x7fc7cfab0e6e  adc %al, -0x368(%rbp)   
0x7fc7cfab0e74  invalid                 
0x7fc7cfab0e75  sti                     
0x7fc7cfab0e76  adc %eax, 0x18(%rax)    
0x7fc7cfab0e79  jmp 0x3b14               ; 0x7fc7cfab0024
0x7fc7cfab0e7e  testb $0x1, %al         
0x7fc7cfab0e81  jnz 0x4dca               ; 0x7fc7cfab12da
0x7fc7cfab0e87  mov %rbx, -0x50(%rbp)   
0x7fc7cfab0e8b  movq $0x55e, -0x58(%rbp)
0x7fc7cfab0e93  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0e9b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0ea2  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0eaa  lea -0xd0(%rbp), %rax   
0x7fc7cfab0eb1  mov %rax, -0x38(%rbp)   
0x7fc7cfab0eb5  mov 0x1952090, %rsi     
0x7fc7cfab0ebd  mov 0x20(%rsi), %rax    
0x7fc7cfab0ec1  mov $0xfb, -0x104(%rbp) 
0x7fc7cfab0ecb  mov %r15, %rdi          
0x7fc7cfab0ece  mov %r14, %rdx          
0x7fc7cfab0ed1  lea -0x58(%rbp), %rcx   
0x7fc7cfab0ed5  callq *%rax             
0x7fc7cfab0ed7  test %rax, %rax         
0x7fc7cfab0eda  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab0ee0  mov %rax, -0xd0(%rbp)   
0x7fc7cfab0ee7  mov -0xe0(%rbp), %rsi   
0x7fc7cfab0eee  mov %rsi, -0xd8(%rbp)   
0x7fc7cfab0ef5  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0efc  testb $0x3, %sil        
0x7fc7cfab0f00  jnz 0x52a3               ; 0x7fc7cfab17b3
0x7fc7cfab0f06  mov 0x8(%rsi), %rcx     
0x7fc7cfab0f0a  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab0f11  jnz 0x52a3               ; 0x7fc7cfab17b3
0x7fc7cfab0f17  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab0f1b  jnz 0x5358               ; 0x7fc7cfab1868
0x7fc7cfab0f21  mov %rax, 0x40(%rsi)    
0x7fc7cfab0f25  testb $0x3, %al         
0x7fc7cfab0f28  jnz 0x4a67               ; 0x7fc7cfab0f77
0x7fc7cfab0f2e  mov 0x15853f8, %edx     
0x7fc7cfab0f35  mov (%rsi), %rcx        
0x7fc7cfab0f38  mov %rcx, %rdi          
0x7fc7cfab0f3b  andq $0x380000, %rdi    
0x7fc7cfab0f42  inc %edx                
0x7fc7cfab0f44  shlq $0x13, %rdx        
0x7fc7cfab0f48  cmp %rdx, %rdi          
0x7fc7cfab0f4b  jz 0x4a55                ; 0x7fc7cfab0f65
0x7fc7cfab0f51  andq $0x300, %rcx       
0x7fc7cfab0f58  cmpq $0x200, %rcx       
0x7fc7cfab0f5f  jz 0x4a67                ; 0x7fc7cfab0f77
0x7fc7cfab0f65  mov %r15, %rdi          
0x7fc7cfab0f68  mov %rax, %rdx          
0x7fc7cfab0f6b  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab0f75  callq *%rax             
0x7fc7cfab0f77  mov -0x170(%rbp), %rax  
0x7fc7cfab0f7e  mov %rax, -0xe0(%rbp)   
0x7fc7cfab0f85  movq $0x3, -0xd8(%rbp)  
0x7fc7cfab0f90  testb $0x1, %al         
0x7fc7cfab0f93  jnz 0x4ae0               ; 0x7fc7cfab0ff0
0x7fc7cfab0f99  mov %rax, -0x50(%rbp)   
0x7fc7cfab0f9d  movq $0x55e, -0x58(%rbp)
0x7fc7cfab0fa5  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab0fad  mov $0x1, -0x40(%rbp)   
0x7fc7cfab0fb4  movq $0x0, -0x30(%rbp)  
0x7fc7cfab0fbc  mov %r12, -0x38(%rbp)   
0x7fc7cfab0fc0  mov 0x1952100, %rsi     
0x7fc7cfab0fc8  mov 0x20(%rsi), %rax    
0x7fc7cfab0fcc  mov $0x109, -0x104(%rbp)
0x7fc7cfab0fd6  mov %r15, %rdi          
0x7fc7cfab0fd9  mov %r14, %rdx          
0x7fc7cfab0fdc  lea -0x58(%rbp), %rcx   
0x7fc7cfab0fe0  callq *%rax             
0x7fc7cfab0fe2  test %rax, %rax         
0x7fc7cfab0fe5  jnz 0x4b20               ; 0x7fc7cfab1030
0x7fc7cfab0feb  jmp 0x652a               ; 0x7fc7cfab2a3a
0x7fc7cfab0ff0  sarq $0x1, %rax         
0x7fc7cfab0ff3  lea 0x1(%rax), %rsi     
0x7fc7cfab0ff7  mov $0x4000000000000000, %rcx
0x7fc7cfab1001  add %rcx, %rax          
0x7fc7cfab1004  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfab100e  cmp %rcx, %rax          
0x7fc7cfab1011  ja 0x4b11                ; 0x7fc7cfab1021
0x7fc7cfab1017  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfab101c  jmp 0x4b20               ; 0x7fc7cfab1030
0x7fc7cfab1021  mov %r15, %rdi          
0x7fc7cfab1024  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfab102e  callq *%rax             
0x7fc7cfab1030  mov %rax, -0xe0(%rbp)   
0x7fc7cfab1037  mov %rax, -0x170(%rbp)  
0x7fc7cfab103e  mov 0x8(%r15), %rax     
0x7fc7cfab1042  mov 0x158251e, %cl      
0x7fc7cfab1049  or 0x16(%rax), %cl      
0x7fc7cfab104c  jz 0x4f55                ; 0x7fc7cfab1465
0x7fc7cfab1052  mov $0x10f, -0x104(%rbp)
0x7fc7cfab105c  mov %r15, %rdi          
0x7fc7cfab105f  mov %r14, %rsi          
0x7fc7cfab1062  mov $0x763000, %rax      ; rbx_check_interrupts
0x7fc7cfab106c  callq *%rax             
0x7fc7cfab106e  test %rax, %rax         
0x7fc7cfab1071  jnz 0x4f55               ; 0x7fc7cfab1465
0x7fc7cfab1077  jmp 0x652a               ; 0x7fc7cfab2a3a
0x7fc7cfab107c  sarq $0x1, %r13         
0x7fc7cfab107f  invalid                 
0x7fc7cfab1080  sar $0x2a, %ebx         
0x7fc7cfab1083  invalid                 
0x7fc7cfab1084  invalid                 
0x7fc7cfab1085  sti                     
0x7fc7cfab1086  pop %rcx                
0x7fc7cfab1087  sbb %al, %bpl           
0x7fc7cfab108a  sti                     
0x7fc7cfab108b  adc %eax, -0x368(%rbp)  
0x7fc7cfab1091  mov %r15, %rdi          
0x7fc7cfab1094  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab109e  callq *%rax             
0x7fc7cfab10a0  invalid                 
0x7fc7cfab10a1  sti                     
0x7fc7cfab10a2  adc %al, -0x368(%rbp)   
0x7fc7cfab10a8  invalid                 
0x7fc7cfab10a9  sti                     
0x7fc7cfab10aa  adc %eax, 0x18(%rax)    
0x7fc7cfab10ad  jmp 0x3c8e               ; 0x7fc7cfab019e
0x7fc7cfab10b2  sarq $0x1, %rax         
0x7fc7cfab10b5  invalid                 
0x7fc7cfab10b6  loope 0x4ba3             ; 0x7fc7cfab11b3
0x7fc7cfab10b8  sub %al, %al            
0x7fc7cfab10ba  invalid                 
0x7fc7cfab10bb  sti                     
0x7fc7cfab10bc  adc %cl, 0x18(%rbx)     
0x7fc7cfab10bf  invalid                 
0x7fc7cfab10c0  rep pop %rsp            
0x7fc7cfab10c2  rolb $0xfb, %ch         
0x7fc7cfab10c5  adc %eax, -0x368(%rbp)  
0x7fc7cfab10cb  mov %r15, %rdi          
0x7fc7cfab10ce  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab10d8  callq *%rax             
0x7fc7cfab10da  invalid                 
0x7fc7cfab10db  sti                     
0x7fc7cfab10dc  adc %al, -0x368(%rbp)   
0x7fc7cfab10e2  invalid                 
0x7fc7cfab10e3  sti                     
0x7fc7cfab10e4  adc %eax, 0x18(%rax)    
0x7fc7cfab10e7  jmp 0x3d35               ; 0x7fc7cfab0245
0x7fc7cfab10ec  sarq $0x1, %rcx         
0x7fc7cfab10ef  invalid                 
0x7fc7cfab10f0  loope 0x4bdd             ; 0x7fc7cfab11ed
0x7fc7cfab10f2  sub %cl, %al            
0x7fc7cfab10f4  invalid                 
0x7fc7cfab10f5  sti                     
0x7fc7cfab10f6  pop %rcx                
0x7fc7cfab10f7  sbb %al, %bpl           
0x7fc7cfab10fa  sti                     
0x7fc7cfab10fb  adc %eax, -0x368(%rbp)  
0x7fc7cfab1101  mov %r15, %rdi          
0x7fc7cfab1104  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab110e  callq *%rax             
0x7fc7cfab1110  invalid                 
0x7fc7cfab1111  sti                     
0x7fc7cfab1112  adc %al, -0x368(%rbp)   
0x7fc7cfab1118  invalid                 
0x7fc7cfab1119  sti                     
0x7fc7cfab111a  adc %eax, 0x18(%rax)    
0x7fc7cfab111d  jmp 0x3f09               ; 0x7fc7cfab0419
0x7fc7cfab1122  sarq $0x1, %rax         
0x7fc7cfab1125  invalid                 
0x7fc7cfab1126  loope 0x4c13             ; 0x7fc7cfab1223
0x7fc7cfab1128  sub %al, %al            
0x7fc7cfab112a  invalid                 
0x7fc7cfab112b  sti                     
0x7fc7cfab112c  adc %cl, 0x18(%rbx)     
0x7fc7cfab112f  invalid                 
0x7fc7cfab1130  rep pop %rsp            
0x7fc7cfab1132  rolb $0xfb, %ch         
0x7fc7cfab1135  adc %eax, -0x368(%rbp)  
0x7fc7cfab113b  mov %r15, %rdi          
0x7fc7cfab113e  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab1148  callq *%rax             
0x7fc7cfab114a  invalid                 
0x7fc7cfab114b  sti                     
0x7fc7cfab114c  adc %al, -0x368(%rbp)   
0x7fc7cfab1152  invalid                 
0x7fc7cfab1153  sti                     
0x7fc7cfab1154  adc %eax, 0x18(%rax)    
0x7fc7cfab1157  jmp 0x3fb0               ; 0x7fc7cfab04c0
0x7fc7cfab115c  sarq $0x1, %rcx         
0x7fc7cfab115f  invalid                 
0x7fc7cfab1160  loope 0x4c4d             ; 0x7fc7cfab125d
0x7fc7cfab1162  sub %cl, %al            
0x7fc7cfab1164  invalid                 
0x7fc7cfab1165  sti                     
0x7fc7cfab1166  pop %rcx                
0x7fc7cfab1167  sbb %al, %bpl           
0x7fc7cfab116a  sti                     
0x7fc7cfab116b  adc %eax, -0x368(%rbp)  
0x7fc7cfab1171  mov %r15, %rdi          
0x7fc7cfab1174  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab117e  callq *%rax             
0x7fc7cfab1180  invalid                 
0x7fc7cfab1181  sti                     
0x7fc7cfab1182  adc %al, -0x368(%rbp)   
0x7fc7cfab1188  invalid                 
0x7fc7cfab1189  sti                     
0x7fc7cfab118a  adc %eax, 0x18(%rax)    
0x7fc7cfab118d  jmp 0x4184               ; 0x7fc7cfab0694
0x7fc7cfab1192  sarq $0x1, %rax         
0x7fc7cfab1195  invalid                 
0x7fc7cfab1196  loope 0x4c83             ; 0x7fc7cfab1293
0x7fc7cfab1198  sub %al, %al            
0x7fc7cfab119a  invalid                 
0x7fc7cfab119b  sti                     
0x7fc7cfab119c  adc %cl, 0x18(%rbx)     
0x7fc7cfab119f  invalid                 
0x7fc7cfab11a0  rep pop %rsp            
0x7fc7cfab11a2  rolb $0xfb, %ch         
0x7fc7cfab11a5  adc %eax, -0x368(%rbp)  
0x7fc7cfab11ab  mov %r15, %rdi          
0x7fc7cfab11ae  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab11b8  callq *%rax             
0x7fc7cfab11ba  invalid                 
0x7fc7cfab11bb  sti                     
0x7fc7cfab11bc  adc %al, -0x368(%rbp)   
0x7fc7cfab11c2  invalid                 
0x7fc7cfab11c3  sti                     
0x7fc7cfab11c4  adc %eax, 0x18(%rax)    
0x7fc7cfab11c7  jmp 0x422b               ; 0x7fc7cfab073b
0x7fc7cfab11cc  sarq $0x1, %rcx         
0x7fc7cfab11cf  invalid                 
0x7fc7cfab11d0  loope 0x4cbd             ; 0x7fc7cfab12cd
0x7fc7cfab11d2  sub %cl, %al            
0x7fc7cfab11d4  invalid                 
0x7fc7cfab11d5  sti                     
0x7fc7cfab11d6  pop %rcx                
0x7fc7cfab11d7  sbb %al, %bpl           
0x7fc7cfab11da  sti                     
0x7fc7cfab11db  adc %eax, -0x368(%rbp)  
0x7fc7cfab11e1  mov %r15, %rdi          
0x7fc7cfab11e4  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab11ee  callq *%rax             
0x7fc7cfab11f0  invalid                 
0x7fc7cfab11f1  sti                     
0x7fc7cfab11f2  adc %al, -0x368(%rbp)   
0x7fc7cfab11f8  invalid                 
0x7fc7cfab11f9  sti                     
0x7fc7cfab11fa  adc %eax, 0x18(%rax)    
0x7fc7cfab11fd  jmp 0x43cb               ; 0x7fc7cfab08db
0x7fc7cfab1202  sarq $0x1, %rax         
0x7fc7cfab1205  invalid                 
0x7fc7cfab1206  loope 0x4cf3             ; 0x7fc7cfab1303
0x7fc7cfab1208  sub %al, %al            
0x7fc7cfab120a  invalid                 
0x7fc7cfab120b  sti                     
0x7fc7cfab120c  pop %rax                
0x7fc7cfab120d  sbb %al, %r13b          
0x7fc7cfab1210  sti                     
0x7fc7cfab1211  adc %eax, -0x368(%rbp)  
0x7fc7cfab1217  mov %r15, %rdi          
0x7fc7cfab121a  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab1224  callq *%rax             
0x7fc7cfab1226  invalid                 
0x7fc7cfab1227  sti                     
0x7fc7cfab1228  adc %al, -0x368(%rbp)   
0x7fc7cfab122e  invalid                 
0x7fc7cfab122f  sti                     
0x7fc7cfab1230  adc %eax, 0x18(%rax)    
0x7fc7cfab1233  jmp 0x4479               ; 0x7fc7cfab0989
0x7fc7cfab1238  sarq $0x1, %rcx         
0x7fc7cfab123b  invalid                 
0x7fc7cfab123c  loope 0x4d29             ; 0x7fc7cfab1339
0x7fc7cfab123e  sub %cl, %al            
0x7fc7cfab1240  invalid                 
0x7fc7cfab1241  sti                     
0x7fc7cfab1242  pop %rcx                
0x7fc7cfab1243  sbb %al, %bpl           
0x7fc7cfab1246  sti                     
0x7fc7cfab1247  adc %eax, -0x368(%rbp)  
0x7fc7cfab124d  mov %r15, %rdi          
0x7fc7cfab1250  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab125a  callq *%rax             
0x7fc7cfab125c  invalid                 
0x7fc7cfab125d  sti                     
0x7fc7cfab125e  adc %al, -0x368(%rbp)   
0x7fc7cfab1264  invalid                 
0x7fc7cfab1265  sti                     
0x7fc7cfab1266  adc %eax, 0x18(%rax)    
0x7fc7cfab1269  jmp 0x4600               ; 0x7fc7cfab0b10
0x7fc7cfab126e  sarq $0x1, %rax         
0x7fc7cfab1271  invalid                 
0x7fc7cfab1272  loope 0x4d5f             ; 0x7fc7cfab136f
0x7fc7cfab1274  sub %al, %al            
0x7fc7cfab1276  invalid                 
0x7fc7cfab1277  sti                     
0x7fc7cfab1278  pop %rax                
0x7fc7cfab1279  sbb %al, %r13b          
0x7fc7cfab127c  sti                     
0x7fc7cfab127d  adc %eax, -0x368(%rbp)  
0x7fc7cfab1283  mov %r15, %rdi          
0x7fc7cfab1286  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab1290  callq *%rax             
0x7fc7cfab1292  invalid                 
0x7fc7cfab1293  sti                     
0x7fc7cfab1294  adc %al, -0x368(%rbp)   
0x7fc7cfab129a  invalid                 
0x7fc7cfab129b  sti                     
0x7fc7cfab129c  adc %eax, 0x18(%rax)    
0x7fc7cfab129f  jmp 0x46ae               ; 0x7fc7cfab0bbe
0x7fc7cfab12a4  sarq $0x1, %rcx         
0x7fc7cfab12a7  invalid                 
0x7fc7cfab12a8  loope 0x4d95             ; 0x7fc7cfab13a5
0x7fc7cfab12aa  sub %cl, %al            
0x7fc7cfab12ac  invalid                 
0x7fc7cfab12ad  sti                     
0x7fc7cfab12ae  pop %rcx                
0x7fc7cfab12af  sbb %al, %bpl           
0x7fc7cfab12b2  sti                     
0x7fc7cfab12b3  adc %eax, -0x368(%rbp)  
0x7fc7cfab12b9  mov %r15, %rdi          
0x7fc7cfab12bc  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab12c6  callq *%rax             
0x7fc7cfab12c8  invalid                 
0x7fc7cfab12c9  sti                     
0x7fc7cfab12ca  adc %al, -0x368(%rbp)   
0x7fc7cfab12d0  invalid                 
0x7fc7cfab12d1  sti                     
0x7fc7cfab12d2  adc %eax, 0x18(%rax)    
0x7fc7cfab12d5  jmp 0x48ec               ; 0x7fc7cfab0dfc
0x7fc7cfab12da  sarq $0x1, %rax         
0x7fc7cfab12dd  invalid                 
0x7fc7cfab12de  loope 0x4dcb             ; 0x7fc7cfab13db
0x7fc7cfab12e0  sub %al, %al            
0x7fc7cfab12e2  invalid                 
0x7fc7cfab12e3  sti                     
0x7fc7cfab12e4  pop %rax                
0x7fc7cfab12e5  sbb %al, %r13b          
0x7fc7cfab12e8  sti                     
0x7fc7cfab12e9  adc %eax, -0x368(%rbp)  
0x7fc7cfab12ef  mov %r15, %rdi          
0x7fc7cfab12f2  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab12fc  callq *%rax             
0x7fc7cfab12fe  invalid                 
0x7fc7cfab12ff  sti                     
0x7fc7cfab1300  adc %al, -0x368(%rbp)   
0x7fc7cfab1306  invalid                 
0x7fc7cfab1307  sti                     
0x7fc7cfab1308  adc %eax, 0x18(%rax)    
0x7fc7cfab130b  jmp 0x49d0               ; 0x7fc7cfab0ee0
0x7fc7cfab1310  mov %rax, -0x2e0(%rbp)  
0x7fc7cfab1317  mov -0x330(%rbp), %rsi  
0x7fc7cfab131e  mov %rsi, -0x2d8(%rbp)  
0x7fc7cfab1325  testb $0x3, %al         
0x7fc7cfab1328  jnz 0x4ec8               ; 0x7fc7cfab13d8
0x7fc7cfab132e  mov 0x8(%rax), %rax     
0x7fc7cfab1332  cmp $0x1fb, 0x70(%rax)  
0x7fc7cfab1339  jnz 0x4ec8               ; 0x7fc7cfab13d8
0x7fc7cfab133f  cmp $0xd2, 0x74(%rax)   
0x7fc7cfab1346  jnz 0x4f1a               ; 0x7fc7cfab142a
0x7fc7cfab134c  mov %r15, %rdi          
0x7fc7cfab134f  lea -0x59(%rbp), %rdx   
0x7fc7cfab1353  mov $0x763f90, %rax      ; rbx_ffi_to_double
0x7fc7cfab135d  callq *%rax             
0x7fc7cfab135f  invalid                 
0x7fc7cfab1360  sti                     
0x7fc7cfab1361  adc %eax, -0x368(%rbp)  
0x7fc7cfab1367  mov -0x59(%rbp), %al    
0x7fc7cfab136a  test %al, %al           
0x7fc7cfab136c  jz 0x4ec8                ; 0x7fc7cfab13d8
0x7fc7cfab1372  mov %r15, %rdi          
0x7fc7cfab1375  mov %r13, %rsi          
0x7fc7cfab1378  mov $0x763090, %rax      ; rbx_enter_unmanaged
0x7fc7cfab1382  callq *%rax             
0x7fc7cfab1384  invalid                 
0x7fc7cfab1385  sti                     
0x7fc7cfab1386  adc %al, -0x368(%rbp)   
0x7fc7cfab138c  mov $0x7fc7cf6b68a0, %rax ; sqrt
0x7fc7cfab1396  callq *%rax             
0x7fc7cfab1398  invalid                 
0x7fc7cfab1399  sti                     
0x7fc7cfab139a  adc %eax, -0x368(%rbp)  
0x7fc7cfab13a0  mov %r15, %rdi          
0x7fc7cfab13a3  mov %r13, %rsi          
0x7fc7cfab13a6  mov $0x7630b0, %rax      ; rbx_exit_unmanaged
0x7fc7cfab13b0  callq *%rax             
0x7fc7cfab13b2  mov %r15, %rdi          
0x7fc7cfab13b5  invalid                 
0x7fc7cfab13b6  sti                     
0x7fc7cfab13b7  adc %al, -0x368(%rbp)   
0x7fc7cfab13bd  mov $0x764180, %rax      ; rbx_ffi_from_double
0x7fc7cfab13c7  callq *%rax             
0x7fc7cfab13c9  mov %rax, %rbx          
0x7fc7cfab13cc  mov %rbx, -0x2e0(%rbp)  
0x7fc7cfab13d3  jmp 0x36ce               ; 0x7fc7cfaafbde
0x7fc7cfab13d8  mov $0x43, -0x304(%rbp) 
0x7fc7cfab13e2  mov $0x7fc7b4004290, %rax
0x7fc7cfab13ec  mov %rax, (%rsp)        
0x7fc7cfab13f0  mov $0x0, 0x10(%rsp)    
0x7fc7cfab13f8  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1400  mov $0x43, %edx         
0x7fc7cfab1405  mov $0x1, %ecx          
0x7fc7cfab140a  xor %r9d, %r9d          
0x7fc7cfab140d  mov %r15, %rdi          
0x7fc7cfab1410  mov %r13, %rsi          
0x7fc7cfab1413  mov %r14, %r8           
0x7fc7cfab1416  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1420  callq *%rax             
0x7fc7cfab1422  mov %rax, %rbx          
0x7fc7cfab1425  jmp 0x36ce               ; 0x7fc7cfaafbde
0x7fc7cfab142a  mov $0x43, -0x304(%rbp) 
0x7fc7cfab1434  mov $0x7fc7b4004290, %rax
0x7fc7cfab143e  mov %rax, (%rsp)        
0x7fc7cfab1442  mov $0x1, 0x10(%rsp)    
0x7fc7cfab144a  jmp 0x4ee8               ; 0x7fc7cfab13f8
0x7fc7cfab144f  mov %rbx, -0x220(%rbp)  
0x7fc7cfab1456  lea -0xd8(%rbp), %rax   
0x7fc7cfab145d  mov %rax, %r12          
0x7fc7cfab1460  jmp 0x2665               ; 0x7fc7cfaaeb75
0x7fc7cfab1465  mov -0x170(%rbp), %rax  
0x7fc7cfab146c  mov %rax, -0xe0(%rbp)   
0x7fc7cfab1473  mov -0x180(%rbp), %rcx  
0x7fc7cfab147a  mov %rcx, -0xd8(%rbp)   
0x7fc7cfab1481  mov %ecx, %edx          
0x7fc7cfab1483  and %eax, %edx          
0x7fc7cfab1485  testb $0x1, %dl         
0x7fc7cfab1488  jnz 0x4fd5               ; 0x7fc7cfab14e5
0x7fc7cfab148e  mov %rax, -0x50(%rbp)   
0x7fc7cfab1492  movq $0x586, -0x58(%rbp)
0x7fc7cfab149a  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab14a2  mov $0x1, -0x40(%rbp)   
0x7fc7cfab14a9  movq $0x0, -0x30(%rbp)  
0x7fc7cfab14b1  mov %r12, -0x38(%rbp)   
0x7fc7cfab14b5  mov 0x19518d8, %rsi     
0x7fc7cfab14bd  mov 0x20(%rsi), %rax    
0x7fc7cfab14c1  mov $0x4, -0x104(%rbp)  
0x7fc7cfab14cb  mov %r15, %rdi          
0x7fc7cfab14ce  mov %r14, %rdx          
0x7fc7cfab14d1  lea -0x58(%rbp), %rcx   
0x7fc7cfab14d5  callq *%rax             
0x7fc7cfab14d7  test %rax, %rax         
0x7fc7cfab14da  jnz 0x4fe6               ; 0x7fc7cfab14f6
0x7fc7cfab14e0  jmp 0x652a               ; 0x7fc7cfab2a3a
0x7fc7cfab14e5  cmp %rcx, %rax          
0x7fc7cfab14e8  setl %al                
0x7fc7cfab14eb  movzxb %al, %eax        
0x7fc7cfab14ee  lea 0xa(%rax,8), %rax   
0x7fc7cfab14f6  mov %rax, -0xe0(%rbp)   
0x7fc7cfab14fd  andq $0xf, %rax         
0x7fc7cfab1501  cmpq $0xa, %rax         
0x7fc7cfab1505  jnz 0x1a5                ; 0x7fc7cfaac6b5
0x7fc7cfab150b  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab1516  mov -0x1a8(%rbp), %r13  
0x7fc7cfab151d  mov %r13, %rbx          
0x7fc7cfab1520  andq $0x3, %rbx         
0x7fc7cfab1524  jnz 0x50f4               ; 0x7fc7cfab1604
0x7fc7cfab152a  mov 0x8(%r13), %rax     
0x7fc7cfab152e  cmp $0x505, 0x70(%rax)  
0x7fc7cfab1535  jnz 0x50f4               ; 0x7fc7cfab1604
0x7fc7cfab153b  mov 0x18(%r13), %rax    
0x7fc7cfab153f  cmpq $0x22, %rax        
0x7fc7cfab1543  mov $0x1a, %r14d        
0x7fc7cfab1549  cmovnz %rax, %r14       
0x7fc7cfab154d  jmp 0x510e               ; 0x7fc7cfab161e
0x7fc7cfab1552  mov $0xd, -0x104(%rbp)  
0x7fc7cfab155c  mov $0x7fc7b4004290, %rax
0x7fc7cfab1566  mov %rax, (%rsp)        
0x7fc7cfab156a  mov $0x0, 0x10(%rsp)    
0x7fc7cfab1572  jmp 0x50d1               ; 0x7fc7cfab15e1
0x7fc7cfab1577  mov $0x17, -0x104(%rbp) 
0x7fc7cfab1581  mov $0x7fc7b4004290, %rax
0x7fc7cfab158b  mov %rax, (%rsp)        
0x7fc7cfab158f  mov $0x0, 0x10(%rsp)    
0x7fc7cfab1597  jmp 0x51e3               ; 0x7fc7cfab16f3
0x7fc7cfab159c  mov $0x57, -0x104(%rbp) 
0x7fc7cfab15a6  mov $0x7fc7b4004290, %rax
0x7fc7cfab15b0  mov %rax, (%rsp)        
0x7fc7cfab15b4  mov $0x0, 0x10(%rsp)    
0x7fc7cfab15bc  jmp 0x524b               ; 0x7fc7cfab175b
0x7fc7cfab15c1  mov $0xd, -0x104(%rbp)  
0x7fc7cfab15cb  mov $0x7fc7b4004290, %rax
0x7fc7cfab15d5  mov %rax, (%rsp)        
0x7fc7cfab15d9  mov $0x1, 0x10(%rsp)    
0x7fc7cfab15e1  mov $0x0, 0x8(%rsp)     
0x7fc7cfab15e9  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab15f3  lea -0x128(%rbp), %rsi  
0x7fc7cfab15fa  mov $0xd, %edx          
0x7fc7cfab15ff  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1604  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab160e  mov $0x10056, %edx      
0x7fc7cfab1613  mov %r15, %rdi          
0x7fc7cfab1616  mov %r13, %rsi          
0x7fc7cfab1619  callq *%rax             
0x7fc7cfab161b  mov %rax, %r14          
0x7fc7cfab161e  mov %r14, -0xe0(%rbp)   
0x7fc7cfab1625  mov -0x178(%rbp), %r12  
0x7fc7cfab162c  mov %r12, -0xd8(%rbp)   
0x7fc7cfab1633  movq $0x1a, -0xd0(%rbp) 
0x7fc7cfab163e  test %rbx, %rbx         
0x7fc7cfab1641  jnz 0x515e               ; 0x7fc7cfab166e
0x7fc7cfab1647  mov 0x8(%r13), %rax     
0x7fc7cfab164b  cmp $0x505, 0x70(%rax)  
0x7fc7cfab1652  jnz 0x515e               ; 0x7fc7cfab166e
0x7fc7cfab1658  mov 0x30(%r13), %rcx    
0x7fc7cfab165c  cmpq $0x22, %rcx        
0x7fc7cfab1660  mov $0x1a, %eax         
0x7fc7cfab1665  cmovnz %rcx, %rax       
0x7fc7cfab1669  jmp 0x5175               ; 0x7fc7cfab1685
0x7fc7cfab166e  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab1678  mov $0x1006e, %edx      
0x7fc7cfab167d  mov %r15, %rdi          
0x7fc7cfab1680  mov %r13, %rsi          
0x7fc7cfab1683  callq *%rax             
0x7fc7cfab1685  mov %rax, -0xd0(%rbp)   
0x7fc7cfab168c  testb $0x3, %r12b       
0x7fc7cfab1690  jnz 0x59f3               ; 0x7fc7cfab1f03
0x7fc7cfab1696  mov 0x8(%r12), %rcx     
0x7fc7cfab169b  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab169f  jnz 0x59f3               ; 0x7fc7cfab1f03
0x7fc7cfab16a5  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab16ac  jnz 0x5845               ; 0x7fc7cfab1d55
0x7fc7cfab16b2  testb $0x3, %al         
0x7fc7cfab16b5  jnz 0x59a8               ; 0x7fc7cfab1eb8
0x7fc7cfab16bb  mov 0x8(%rax), %rcx     
0x7fc7cfab16bf  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab16c3  jnz 0x59a8               ; 0x7fc7cfab1eb8
0x7fc7cfab16c9  invalid                 
0x7fc7cfab16ca  sti                     
0x7fc7cfab16cb  adc %al, 0x18(%rax)     
0x7fc7cfab16ce  jmp 0x59b9               ; 0x7fc7cfab1ec9
0x7fc7cfab16d3  mov $0x17, -0x104(%rbp) 
0x7fc7cfab16dd  mov $0x7fc7b4004290, %rax
0x7fc7cfab16e7  mov %rax, (%rsp)        
0x7fc7cfab16eb  mov $0x1, 0x10(%rsp)    
0x7fc7cfab16f3  mov $0x0, 0x8(%rsp)     
0x7fc7cfab16fb  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1705  lea -0x128(%rbp), %rsi  
0x7fc7cfab170c  mov $0x17, %edx         
0x7fc7cfab1711  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1716  mov $0xd1, -0x104(%rbp) 
0x7fc7cfab1720  mov $0x7fc7b4004290, %rax
0x7fc7cfab172a  mov %rax, (%rsp)        
0x7fc7cfab172e  mov $0x0, 0x10(%rsp)    
0x7fc7cfab1736  jmp 0x52e8               ; 0x7fc7cfab17f8
0x7fc7cfab173b  mov $0x57, -0x104(%rbp) 
0x7fc7cfab1745  mov $0x7fc7b4004290, %rax
0x7fc7cfab174f  mov %rax, (%rsp)        
0x7fc7cfab1753  mov $0x1, 0x10(%rsp)    
0x7fc7cfab175b  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1763  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab176d  lea -0x128(%rbp), %rsi  
0x7fc7cfab1774  mov $0x57, %edx         
0x7fc7cfab1779  mov $0x1, %ecx          
0x7fc7cfab177e  xor %r9d, %r9d          
0x7fc7cfab1781  mov %r15, %rdi          
0x7fc7cfab1784  mov %rsi, %r8           
0x7fc7cfab1787  callq *%rax             
0x7fc7cfab1789  jmp 0x655c               ; 0x7fc7cfab2a6c
0x7fc7cfab178e  mov $0xe9, -0x104(%rbp) 
0x7fc7cfab1798  mov $0x7fc7b4004290, %rax
0x7fc7cfab17a2  mov %rax, (%rsp)        
0x7fc7cfab17a6  mov $0x0, 0x10(%rsp)    
0x7fc7cfab17ae  jmp 0x5330               ; 0x7fc7cfab1840
0x7fc7cfab17b3  mov $0x101, -0x104(%rbp)
0x7fc7cfab17bd  mov $0x7fc7b4004290, %rax
0x7fc7cfab17c7  mov %rax, (%rsp)        
0x7fc7cfab17cb  mov $0x0, 0x10(%rsp)    
0x7fc7cfab17d3  jmp 0x5378               ; 0x7fc7cfab1888
0x7fc7cfab17d8  mov $0xd1, -0x104(%rbp) 
0x7fc7cfab17e2  mov $0x7fc7b4004290, %rax
0x7fc7cfab17ec  mov %rax, (%rsp)        
0x7fc7cfab17f0  mov $0x1, 0x10(%rsp)    
0x7fc7cfab17f8  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1800  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab180a  lea -0x128(%rbp), %rsi  
0x7fc7cfab1811  mov $0xd1, %edx         
0x7fc7cfab1816  mov $0x2, %ecx          
0x7fc7cfab181b  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1820  mov $0xe9, -0x104(%rbp) 
0x7fc7cfab182a  mov $0x7fc7b4004290, %rax
0x7fc7cfab1834  mov %rax, (%rsp)        
0x7fc7cfab1838  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1840  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1848  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1852  lea -0x128(%rbp), %rsi  
0x7fc7cfab1859  mov $0xe9, %edx         
0x7fc7cfab185e  mov $0x2, %ecx          
0x7fc7cfab1863  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1868  mov $0x101, -0x104(%rbp)
0x7fc7cfab1872  mov $0x7fc7b4004290, %rax
0x7fc7cfab187c  mov %rax, (%rsp)        
0x7fc7cfab1880  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1888  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1890  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab189a  lea -0x128(%rbp), %rsi  
0x7fc7cfab18a1  mov $0x101, %edx        
0x7fc7cfab18a6  mov $0x2, %ecx          
0x7fc7cfab18ab  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab18b0  mov $0x1a, -0x104(%rbp) 
0x7fc7cfab18ba  mov $0x7fc7b4004290, %rax
0x7fc7cfab18c4  mov %rax, (%rsp)        
0x7fc7cfab18c8  mov $0x1, 0x10(%rsp)    
0x7fc7cfab18d0  mov $0x0, 0x8(%rsp)     
0x7fc7cfab18d8  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab18e2  lea -0x128(%rbp), %rsi  
0x7fc7cfab18e9  mov $0x1a, %edx         
0x7fc7cfab18ee  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab18f3  mov $0x27, -0x104(%rbp) 
0x7fc7cfab18fd  mov $0x7fc7b4004290, %rax
0x7fc7cfab1907  mov %rax, (%rsp)        
0x7fc7cfab190b  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1913  mov $0x0, 0x8(%rsp)     
0x7fc7cfab191b  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1925  lea -0x128(%rbp), %rsi  
0x7fc7cfab192c  mov $0x27, %edx         
0x7fc7cfab1931  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1936  mov $0x34, -0x104(%rbp) 
0x7fc7cfab1940  mov $0x7fc7b4004290, %rax
0x7fc7cfab194a  mov %rax, (%rsp)        
0x7fc7cfab194e  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1956  mov $0x0, 0x8(%rsp)     
0x7fc7cfab195e  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1968  lea -0x128(%rbp), %rsi  
0x7fc7cfab196f  mov $0x34, %edx         
0x7fc7cfab1974  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1979  mov $0x40, -0x104(%rbp) 
0x7fc7cfab1983  mov $0x7fc7b4004290, %rax
0x7fc7cfab198d  mov %rax, (%rsp)        
0x7fc7cfab1991  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1999  mov $0x0, 0x8(%rsp)     
0x7fc7cfab19a1  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab19ab  lea -0x128(%rbp), %rsi  
0x7fc7cfab19b2  mov $0x40, %edx         
0x7fc7cfab19b7  mov $0x2, %ecx          
0x7fc7cfab19bc  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab19c1  mov $0x47, -0x104(%rbp) 
0x7fc7cfab19cb  mov $0x7fc7b4004290, %rax
0x7fc7cfab19d5  mov %rax, (%rsp)        
0x7fc7cfab19d9  mov $0x1, 0x10(%rsp)    
0x7fc7cfab19e1  mov $0x0, 0x8(%rsp)     
0x7fc7cfab19e9  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab19f3  lea -0x128(%rbp), %rsi  
0x7fc7cfab19fa  mov $0x47, %edx         
0x7fc7cfab19ff  mov $0x3, %ecx          
0x7fc7cfab1a04  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1a09  mov $0x4a, -0x104(%rbp) 
0x7fc7cfab1a13  mov $0x7fc7b4004290, %rax
0x7fc7cfab1a1d  mov %rax, (%rsp)        
0x7fc7cfab1a21  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1a29  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1a31  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1a3b  lea -0x128(%rbp), %rsi  
0x7fc7cfab1a42  mov $0x4a, %edx         
0x7fc7cfab1a47  mov $0x2, %ecx          
0x7fc7cfab1a4c  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1a51  mov $0x51, -0x104(%rbp) 
0x7fc7cfab1a5b  mov $0x7fc7b4004290, %rax
0x7fc7cfab1a65  mov %rax, (%rsp)        
0x7fc7cfab1a69  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1a71  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1a79  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1a83  lea -0x128(%rbp), %rsi  
0x7fc7cfab1a8a  mov $0x51, %edx         
0x7fc7cfab1a8f  mov $0x3, %ecx          
0x7fc7cfab1a94  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1a99  mov $0x54, -0x104(%rbp) 
0x7fc7cfab1aa3  mov $0x7fc7b4004290, %rax
0x7fc7cfab1aad  mov %rax, (%rsp)        
0x7fc7cfab1ab1  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1ab9  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1ac1  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1acb  lea -0x128(%rbp), %rsi  
0x7fc7cfab1ad2  mov $0x54, %edx         
0x7fc7cfab1ad7  mov $0x2, %ecx          
0x7fc7cfab1adc  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1ae1  mov $0x63, -0x104(%rbp) 
0x7fc7cfab1aeb  mov $0x7fc7b4004290, %rax
0x7fc7cfab1af5  mov %rax, (%rsp)        
0x7fc7cfab1af9  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1b01  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1b09  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1b13  lea -0x128(%rbp), %rsi  
0x7fc7cfab1b1a  mov $0x63, %edx         
0x7fc7cfab1b1f  mov $0x2, %ecx          
0x7fc7cfab1b24  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1b29  mov $0x68, -0x104(%rbp) 
0x7fc7cfab1b33  mov $0x7fc7b4004290, %rax
0x7fc7cfab1b3d  mov %rax, (%rsp)        
0x7fc7cfab1b41  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1b49  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1b51  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1b5b  lea -0x128(%rbp), %rsi  
0x7fc7cfab1b62  mov $0x68, %edx         
0x7fc7cfab1b67  mov $0x2, %ecx          
0x7fc7cfab1b6c  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1b71  mov $0x6b, -0x104(%rbp) 
0x7fc7cfab1b7b  mov $0x7fc7b4004290, %rax
0x7fc7cfab1b85  mov %rax, (%rsp)        
0x7fc7cfab1b89  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1b91  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1b99  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1ba3  lea -0x128(%rbp), %rsi  
0x7fc7cfab1baa  mov $0x6b, %edx         
0x7fc7cfab1baf  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1bb4  mov $0x75, -0x104(%rbp) 
0x7fc7cfab1bbe  mov $0x7fc7b4004290, %rax
0x7fc7cfab1bc8  mov %rax, (%rsp)        
0x7fc7cfab1bcc  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1bd4  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1bdc  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1be6  lea -0x128(%rbp), %rsi  
0x7fc7cfab1bed  mov $0x75, %edx         
0x7fc7cfab1bf2  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1bf7  mov $0x7f, -0x104(%rbp) 
0x7fc7cfab1c01  mov $0x7fc7b4004290, %rax
0x7fc7cfab1c0b  mov %rax, (%rsp)        
0x7fc7cfab1c0f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1c17  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1c1f  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1c29  lea -0x128(%rbp), %rsi  
0x7fc7cfab1c30  mov $0x7f, %edx         
0x7fc7cfab1c35  mov $0x2, %ecx          
0x7fc7cfab1c3a  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1c3f  mov $0x97, -0x104(%rbp) 
0x7fc7cfab1c49  mov $0x7fc7b4004290, %rax
0x7fc7cfab1c53  mov %rax, (%rsp)        
0x7fc7cfab1c57  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1c5f  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1c67  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1c71  lea -0x128(%rbp), %rsi  
0x7fc7cfab1c78  mov $0x97, %edx         
0x7fc7cfab1c7d  mov $0x2, %ecx          
0x7fc7cfab1c82  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1c87  mov $0x9a, -0x104(%rbp) 
0x7fc7cfab1c91  mov $0x7fc7b4004290, %rax
0x7fc7cfab1c9b  mov %rax, (%rsp)        
0x7fc7cfab1c9f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1ca7  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1caf  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1cb9  lea -0x128(%rbp), %rsi  
0x7fc7cfab1cc0  mov $0x9a, %edx         
0x7fc7cfab1cc5  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1cca  mov $0xa6, -0x104(%rbp) 
0x7fc7cfab1cd4  mov $0x7fc7b4004290, %rax
0x7fc7cfab1cde  mov %rax, (%rsp)        
0x7fc7cfab1ce2  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1cea  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1cf2  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1cfc  lea -0x128(%rbp), %rsi  
0x7fc7cfab1d03  mov $0xa6, %edx         
0x7fc7cfab1d08  mov $0x2, %ecx          
0x7fc7cfab1d0d  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1d12  mov $0xa9, -0x104(%rbp) 
0x7fc7cfab1d1c  mov $0x7fc7b4004290, %rax
0x7fc7cfab1d26  mov %rax, (%rsp)        
0x7fc7cfab1d2a  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1d32  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1d3a  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1d44  lea -0x128(%rbp), %rsi  
0x7fc7cfab1d4b  mov $0xa9, %edx         
0x7fc7cfab1d50  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1d55  mov $0x11a, -0x104(%rbp)
0x7fc7cfab1d5f  mov $0x7fc7b4004290, %rax
0x7fc7cfab1d69  mov %rax, (%rsp)        
0x7fc7cfab1d6d  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1d75  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1d7d  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1d87  lea -0x128(%rbp), %rsi  
0x7fc7cfab1d8e  mov $0x11a, %edx        
0x7fc7cfab1d93  mov $0x2, %ecx          
0x7fc7cfab1d98  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1d9d  mov $0xb5, -0x104(%rbp) 
0x7fc7cfab1da7  mov $0x7fc7b4004290, %rax
0x7fc7cfab1db1  mov %rax, (%rsp)        
0x7fc7cfab1db5  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1dbd  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1dc5  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1dcf  lea -0x128(%rbp), %rsi  
0x7fc7cfab1dd6  mov $0xb5, %edx         
0x7fc7cfab1ddb  mov $0x2, %ecx          
0x7fc7cfab1de0  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1de5  mov $0xb8, -0x104(%rbp) 
0x7fc7cfab1def  mov $0x7fc7b4004290, %rax
0x7fc7cfab1df9  mov %rax, (%rsp)        
0x7fc7cfab1dfd  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1e05  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1e0d  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1e17  lea -0x128(%rbp), %rsi  
0x7fc7cfab1e1e  mov $0xb8, %edx         
0x7fc7cfab1e23  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab1e28  mov $0xc8, -0x104(%rbp) 
0x7fc7cfab1e32  mov $0x7fc7b4004290, %rax
0x7fc7cfab1e3c  mov %rax, (%rsp)        
0x7fc7cfab1e40  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1e48  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1e50  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1e5a  lea -0x128(%rbp), %rsi  
0x7fc7cfab1e61  mov $0xc8, %edx         
0x7fc7cfab1e66  mov $0x3, %ecx          
0x7fc7cfab1e6b  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1e70  mov $0xcb, -0x104(%rbp) 
0x7fc7cfab1e7a  mov $0x7fc7b4004290, %rax
0x7fc7cfab1e84  mov %rax, (%rsp)        
0x7fc7cfab1e88  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1e90  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1e98  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1ea2  lea -0x128(%rbp), %rsi  
0x7fc7cfab1ea9  mov $0xcb, %edx         
0x7fc7cfab1eae  mov $0x2, %ecx          
0x7fc7cfab1eb3  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab1eb8  testb $0x1, %al         
0x7fc7cfab1ebb  jz 0x59f3                ; 0x7fc7cfab1f03
0x7fc7cfab1ec1  sarq $0x1, %rax         
0x7fc7cfab1ec4  invalid                 
0x7fc7cfab1ec5  loope 0x59b2             ; 0x7fc7cfab1fc2
0x7fc7cfab1ec7  sub %al, %al            
0x7fc7cfab1ec9  invalid                 
0x7fc7cfab1eca  sar $0x44, 0x59(%rbx)   
0x7fc7cfab1ece  and $0x18, %al          
0x7fc7cfab1ed0  invalid                 
0x7fc7cfab1ed1  sti                     
0x7fc7cfab1ed2  adc %eax, -0x368(%rbp)  
0x7fc7cfab1ed8  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab1ee2  mov %r15, %rdi          
0x7fc7cfab1ee5  callq *%rax             
0x7fc7cfab1ee7  invalid                 
0x7fc7cfab1ee8  sti                     
0x7fc7cfab1ee9  adc %al, -0x368(%rbp)   
0x7fc7cfab1eef  invalid                 
0x7fc7cfab1ef0  sti                     
0x7fc7cfab1ef1  adc %eax, 0x18(%rax)    
0x7fc7cfab1ef4  lea -0xd8(%rbp), %r12   
0x7fc7cfab1efb  mov %r12, %rdx          
0x7fc7cfab1efe  jmp 0x5a61               ; 0x7fc7cfab1f71
0x7fc7cfab1f03  mov %r12, -0x50(%rbp)   
0x7fc7cfab1f07  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab1f0f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab1f17  mov $0x1, -0x40(%rbp)   
0x7fc7cfab1f1e  movq $0x0, -0x30(%rbp)  
0x7fc7cfab1f26  lea -0xd0(%rbp), %rax   
0x7fc7cfab1f2d  mov %rax, -0x38(%rbp)   
0x7fc7cfab1f31  mov 0x1952188, %rsi     
0x7fc7cfab1f39  mov 0x20(%rsi), %rax    
0x7fc7cfab1f3d  mov $0x11a, -0x104(%rbp)
0x7fc7cfab1f47  lea -0x128(%rbp), %rdx  
0x7fc7cfab1f4e  lea -0x58(%rbp), %rcx   
0x7fc7cfab1f52  mov %r15, %rdi          
0x7fc7cfab1f55  callq *%rax             
0x7fc7cfab1f57  test %rax, %rax         
0x7fc7cfab1f5a  lea -0xd8(%rbp), %r12   
0x7fc7cfab1f61  mov %r12, %rdx          
0x7fc7cfab1f64  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab1f6a  mov -0xe0(%rbp), %r14   
0x7fc7cfab1f71  mov %rax, -0xd8(%rbp)   
0x7fc7cfab1f78  testb $0x3, %r14b       
0x7fc7cfab1f7c  jnz 0x5c51               ; 0x7fc7cfab2161
0x7fc7cfab1f82  mov 0x8(%r14), %rcx     
0x7fc7cfab1f86  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab1f8a  jnz 0x5c51               ; 0x7fc7cfab2161
0x7fc7cfab1f90  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab1f97  jnz 0x5bce               ; 0x7fc7cfab20de
0x7fc7cfab1f9d  testb $0x3, %al         
0x7fc7cfab1fa0  jnz 0x5c11               ; 0x7fc7cfab2121
0x7fc7cfab1fa6  mov 0x8(%rax), %rcx     
0x7fc7cfab1faa  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab1fae  jnz 0x5c11               ; 0x7fc7cfab2121
0x7fc7cfab1fb4  invalid                 
0x7fc7cfab1fb5  sti                     
0x7fc7cfab1fb6  adc %al, 0x18(%rax)     
0x7fc7cfab1fb9  jmp 0x5c22               ; 0x7fc7cfab2132
0x7fc7cfab1fbe  mov $0xe0, -0x104(%rbp) 
0x7fc7cfab1fc8  mov $0x7fc7b4004290, %rax
0x7fc7cfab1fd2  mov %rax, (%rsp)        
0x7fc7cfab1fd6  mov $0x1, 0x10(%rsp)    
0x7fc7cfab1fde  mov $0x0, 0x8(%rsp)     
0x7fc7cfab1fe6  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab1ff0  lea -0x128(%rbp), %rsi  
0x7fc7cfab1ff7  mov $0xe0, %edx         
0x7fc7cfab1ffc  mov $0x3, %ecx          
0x7fc7cfab2001  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab2006  mov $0xe3, -0x104(%rbp) 
0x7fc7cfab2010  mov $0x7fc7b4004290, %rax
0x7fc7cfab201a  mov %rax, (%rsp)        
0x7fc7cfab201e  mov $0x1, 0x10(%rsp)    
0x7fc7cfab2026  mov $0x0, 0x8(%rsp)     
0x7fc7cfab202e  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab2038  lea -0x128(%rbp), %rsi  
0x7fc7cfab203f  mov $0xe3, %edx         
0x7fc7cfab2044  mov $0x2, %ecx          
0x7fc7cfab2049  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab204e  mov $0xf8, -0x104(%rbp) 
0x7fc7cfab2058  mov $0x7fc7b4004290, %rax
0x7fc7cfab2062  mov %rax, (%rsp)        
0x7fc7cfab2066  mov $0x1, 0x10(%rsp)    
0x7fc7cfab206e  mov $0x0, 0x8(%rsp)     
0x7fc7cfab2076  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab2080  lea -0x128(%rbp), %rsi  
0x7fc7cfab2087  mov $0xf8, %edx         
0x7fc7cfab208c  mov $0x3, %ecx          
0x7fc7cfab2091  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab2096  mov $0xfb, -0x104(%rbp) 
0x7fc7cfab20a0  mov $0x7fc7b4004290, %rax
0x7fc7cfab20aa  mov %rax, (%rsp)        
0x7fc7cfab20ae  mov $0x1, 0x10(%rsp)    
0x7fc7cfab20b6  mov $0x0, 0x8(%rsp)     
0x7fc7cfab20be  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab20c8  lea -0x128(%rbp), %rsi  
0x7fc7cfab20cf  mov $0xfb, %edx         
0x7fc7cfab20d4  mov $0x2, %ecx          
0x7fc7cfab20d9  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab20de  mov $0x11d, -0x104(%rbp)
0x7fc7cfab20e8  mov $0x7fc7b4004290, %rax
0x7fc7cfab20f2  mov %rax, (%rsp)        
0x7fc7cfab20f6  mov $0x1, 0x10(%rsp)    
0x7fc7cfab20fe  mov $0x0, 0x8(%rsp)     
0x7fc7cfab2106  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab2110  lea -0x128(%rbp), %rsi  
0x7fc7cfab2117  mov $0x11d, %edx        
0x7fc7cfab211c  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab2121  testb $0x1, %al         
0x7fc7cfab2124  jz 0x5c51                ; 0x7fc7cfab2161
0x7fc7cfab212a  sarq $0x1, %rax         
0x7fc7cfab212d  invalid                 
0x7fc7cfab212e  loope 0x5c1b             ; 0x7fc7cfab222b
0x7fc7cfab2130  sub %al, %al            
0x7fc7cfab2132  invalid                 
0x7fc7cfab2133  sar $0x46, 0x58(%rbx)   
0x7fc7cfab2137  sbb %al, %ch            
0x7fc7cfab2139  sti                     
0x7fc7cfab213a  adc %eax, -0x368(%rbp)  
0x7fc7cfab2140  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab214a  mov %r15, %rdi          
0x7fc7cfab214d  callq *%rax             
0x7fc7cfab214f  invalid                 
0x7fc7cfab2150  sti                     
0x7fc7cfab2151  adc %al, -0x368(%rbp)   
0x7fc7cfab2157  invalid                 
0x7fc7cfab2158  sti                     
0x7fc7cfab2159  adc %eax, 0x18(%rax)    
0x7fc7cfab215c  jmp 0x5ca7               ; 0x7fc7cfab21b7
0x7fc7cfab2161  mov %r14, -0x50(%rbp)   
0x7fc7cfab2165  movq $0x55e, -0x58(%rbp)
0x7fc7cfab216d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab2175  mov $0x1, -0x40(%rbp)   
0x7fc7cfab217c  movq $0x0, -0x30(%rbp)  
0x7fc7cfab2184  mov %rdx, -0x38(%rbp)   
0x7fc7cfab2188  mov 0x19521a0, %rsi     
0x7fc7cfab2190  mov 0x20(%rsi), %rax    
0x7fc7cfab2194  mov $0x11d, -0x104(%rbp)
0x7fc7cfab219e  lea -0x128(%rbp), %rdx  
0x7fc7cfab21a5  lea -0x58(%rbp), %rcx   
0x7fc7cfab21a9  mov %r15, %rdi          
0x7fc7cfab21ac  callq *%rax             
0x7fc7cfab21ae  test %rax, %rax         
0x7fc7cfab21b1  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab21b7  mov %rax, -0xe0(%rbp)   
0x7fc7cfab21be  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab21c5  testb $0x3, %dl         
0x7fc7cfab21c8  jnz 0x5d2d               ; 0x7fc7cfab223d
0x7fc7cfab21ce  mov 0x8(%rdx), %rcx     
0x7fc7cfab21d2  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab21d9  jnz 0x5d2d               ; 0x7fc7cfab223d
0x7fc7cfab21df  mov %rax, 0x18(%rdx)    
0x7fc7cfab21e3  testb $0x3, %al         
0x7fc7cfab21e6  jnz 0x5d54               ; 0x7fc7cfab2264
0x7fc7cfab21ec  mov 0x15853f8, %esi     
0x7fc7cfab21f3  mov (%rdx), %rcx        
0x7fc7cfab21f6  mov %rcx, %rdi          
0x7fc7cfab21f9  andq $0x380000, %rdi    
0x7fc7cfab2200  inc %esi                
0x7fc7cfab2202  shlq $0x13, %rsi        
0x7fc7cfab2206  cmp %rsi, %rdi          
0x7fc7cfab2209  jz 0x5d13                ; 0x7fc7cfab2223
0x7fc7cfab220f  andq $0x300, %rcx       
0x7fc7cfab2216  cmpq $0x200, %rcx       
0x7fc7cfab221d  jz 0x5d54                ; 0x7fc7cfab2264
0x7fc7cfab2223  mov $0x760710, %rcx      ; rbx_write_barrier
0x7fc7cfab222d  mov %r15, %rdi          
0x7fc7cfab2230  mov %rdx, %rsi          
0x7fc7cfab2233  mov %rax, %rdx          
0x7fc7cfab2236  callq *%rcx             
0x7fc7cfab2238  jmp 0x5d54               ; 0x7fc7cfab2264
0x7fc7cfab223d  mov $0x763250, %rbx      ; rbx_set_ivar
0x7fc7cfab2247  lea -0x128(%rbp), %rsi  
0x7fc7cfab224e  mov $0x10056, %ecx      
0x7fc7cfab2253  mov %r15, %rdi          
0x7fc7cfab2256  mov %rax, %r8           
0x7fc7cfab2259  callq *%rbx             
0x7fc7cfab225b  test %rax, %rax         
0x7fc7cfab225e  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab2264  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab226f  mov -0x1a8(%rbp), %r13  
0x7fc7cfab2276  mov %r13, %rbx          
0x7fc7cfab2279  andq $0x3, %rbx         
0x7fc7cfab227d  jnz 0x5d9b               ; 0x7fc7cfab22ab
0x7fc7cfab2283  mov 0x8(%r13), %rax     
0x7fc7cfab2287  cmp $0x505, 0x70(%rax)  
0x7fc7cfab228e  jnz 0x5d9b               ; 0x7fc7cfab22ab
0x7fc7cfab2294  mov 0x20(%r13), %rax    
0x7fc7cfab2298  cmpq $0x22, %rax        
0x7fc7cfab229c  mov $0x1a, %r14d        
0x7fc7cfab22a2  cmovnz %rax, %r14       
0x7fc7cfab22a6  jmp 0x5db5               ; 0x7fc7cfab22c5
0x7fc7cfab22ab  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab22b5  mov $0x1005e, %edx      
0x7fc7cfab22ba  mov %r15, %rdi          
0x7fc7cfab22bd  mov %r13, %rsi          
0x7fc7cfab22c0  callq *%rax             
0x7fc7cfab22c2  mov %rax, %r14          
0x7fc7cfab22c5  mov %r14, -0xe0(%rbp)   
0x7fc7cfab22cc  mov -0x178(%rbp), %r12  
0x7fc7cfab22d3  mov %r12, -0xd8(%rbp)   
0x7fc7cfab22da  movq $0x1a, -0xd0(%rbp) 
0x7fc7cfab22e5  test %rbx, %rbx         
0x7fc7cfab22e8  jnz 0x5e05               ; 0x7fc7cfab2315
0x7fc7cfab22ee  mov 0x8(%r13), %rax     
0x7fc7cfab22f2  cmp $0x505, 0x70(%rax)  
0x7fc7cfab22f9  jnz 0x5e05               ; 0x7fc7cfab2315
0x7fc7cfab22ff  mov 0x38(%r13), %rcx    
0x7fc7cfab2303  cmpq $0x22, %rcx        
0x7fc7cfab2307  mov $0x1a, %eax         
0x7fc7cfab230c  cmovnz %rcx, %rax       
0x7fc7cfab2310  jmp 0x5e1c               ; 0x7fc7cfab232c
0x7fc7cfab2315  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab231f  mov $0x10076, %edx      
0x7fc7cfab2324  mov %r15, %rdi          
0x7fc7cfab2327  mov %r13, %rsi          
0x7fc7cfab232a  callq *%rax             
0x7fc7cfab232c  mov %rax, -0xd0(%rbp)   
0x7fc7cfab2333  testb $0x3, %r12b       
0x7fc7cfab2337  jnz 0x5efa               ; 0x7fc7cfab240a
0x7fc7cfab233d  mov 0x8(%r12), %rcx     
0x7fc7cfab2342  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab2346  jnz 0x5efa               ; 0x7fc7cfab240a
0x7fc7cfab234c  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab2353  jnz 0x5e6a               ; 0x7fc7cfab237a
0x7fc7cfab2359  testb $0x3, %al         
0x7fc7cfab235c  jnz 0x5eb2               ; 0x7fc7cfab23c2
0x7fc7cfab2362  mov 0x8(%rax), %rcx     
0x7fc7cfab2366  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab236a  jnz 0x5eb2               ; 0x7fc7cfab23c2
0x7fc7cfab2370  invalid                 
0x7fc7cfab2371  sti                     
0x7fc7cfab2372  adc %al, 0x18(%rax)     
0x7fc7cfab2375  jmp 0x5ec3               ; 0x7fc7cfab23d3
0x7fc7cfab237a  mov $0x129, -0x104(%rbp)
0x7fc7cfab2384  mov $0x7fc7b4004290, %rax
0x7fc7cfab238e  mov %rax, (%rsp)        
0x7fc7cfab2392  mov $0x1, 0x10(%rsp)    
0x7fc7cfab239a  mov $0x0, 0x8(%rsp)     
0x7fc7cfab23a2  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab23ac  lea -0x128(%rbp), %rsi  
0x7fc7cfab23b3  mov $0x129, %edx        
0x7fc7cfab23b8  mov $0x2, %ecx          
0x7fc7cfab23bd  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab23c2  testb $0x1, %al         
0x7fc7cfab23c5  jz 0x5efa                ; 0x7fc7cfab240a
0x7fc7cfab23cb  sarq $0x1, %rax         
0x7fc7cfab23ce  invalid                 
0x7fc7cfab23cf  loope 0x5ebc             ; 0x7fc7cfab24cc
0x7fc7cfab23d1  sub %al, %al            
0x7fc7cfab23d3  invalid                 
0x7fc7cfab23d4  sar $0x44, 0x59(%rbx)   
0x7fc7cfab23d8  and $0x18, %al          
0x7fc7cfab23da  invalid                 
0x7fc7cfab23db  sti                     
0x7fc7cfab23dc  adc %eax, -0x368(%rbp)  
0x7fc7cfab23e2  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab23ec  mov %r15, %rdi          
0x7fc7cfab23ef  callq *%rax             
0x7fc7cfab23f1  invalid                 
0x7fc7cfab23f2  sti                     
0x7fc7cfab23f3  adc %al, -0x368(%rbp)   
0x7fc7cfab23f9  invalid                 
0x7fc7cfab23fa  sti                     
0x7fc7cfab23fb  adc %eax, 0x18(%rax)    
0x7fc7cfab23fe  lea -0xd8(%rbp), %rdx   
0x7fc7cfab2405  jmp 0x5f65               ; 0x7fc7cfab2475
0x7fc7cfab240a  mov %r12, -0x50(%rbp)   
0x7fc7cfab240e  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab2416  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab241e  mov $0x1, -0x40(%rbp)   
0x7fc7cfab2425  movq $0x0, -0x30(%rbp)  
0x7fc7cfab242d  lea -0xd0(%rbp), %rax   
0x7fc7cfab2434  mov %rax, -0x38(%rbp)   
0x7fc7cfab2438  mov 0x1952200, %rsi     
0x7fc7cfab2440  mov 0x20(%rsi), %rax    
0x7fc7cfab2444  mov $0x129, -0x104(%rbp)
0x7fc7cfab244e  lea -0x128(%rbp), %rdx  
0x7fc7cfab2455  lea -0x58(%rbp), %rcx   
0x7fc7cfab2459  mov %r15, %rdi          
0x7fc7cfab245c  callq *%rax             
0x7fc7cfab245e  test %rax, %rax         
0x7fc7cfab2461  lea -0xd8(%rbp), %rdx   
0x7fc7cfab2468  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab246e  mov -0xe0(%rbp), %r14   
0x7fc7cfab2475  mov %rax, -0xd8(%rbp)   
0x7fc7cfab247c  testb $0x3, %r14b       
0x7fc7cfab2480  jnz 0x6035               ; 0x7fc7cfab2545
0x7fc7cfab2486  mov 0x8(%r14), %rcx     
0x7fc7cfab248a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab248e  jnz 0x6035               ; 0x7fc7cfab2545
0x7fc7cfab2494  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab249b  jnz 0x5fb2               ; 0x7fc7cfab24c2
0x7fc7cfab24a1  testb $0x3, %al         
0x7fc7cfab24a4  jnz 0x5ff5               ; 0x7fc7cfab2505
0x7fc7cfab24aa  mov 0x8(%rax), %rcx     
0x7fc7cfab24ae  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab24b2  jnz 0x5ff5               ; 0x7fc7cfab2505
0x7fc7cfab24b8  invalid                 
0x7fc7cfab24b9  sti                     
0x7fc7cfab24ba  adc %al, 0x18(%rax)     
0x7fc7cfab24bd  jmp 0x6006               ; 0x7fc7cfab2516
0x7fc7cfab24c2  mov $0x12c, -0x104(%rbp)
0x7fc7cfab24cc  mov $0x7fc7b4004290, %rax
0x7fc7cfab24d6  mov %rax, (%rsp)        
0x7fc7cfab24da  mov $0x1, 0x10(%rsp)    
0x7fc7cfab24e2  mov $0x0, 0x8(%rsp)     
0x7fc7cfab24ea  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab24f4  lea -0x128(%rbp), %rsi  
0x7fc7cfab24fb  mov $0x12c, %edx        
0x7fc7cfab2500  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab2505  testb $0x1, %al         
0x7fc7cfab2508  jz 0x6035                ; 0x7fc7cfab2545
0x7fc7cfab250e  sarq $0x1, %rax         
0x7fc7cfab2511  invalid                 
0x7fc7cfab2512  loope 0x5fff             ; 0x7fc7cfab260f
0x7fc7cfab2514  sub %al, %al            
0x7fc7cfab2516  invalid                 
0x7fc7cfab2517  sar $0x46, 0x58(%rbx)   
0x7fc7cfab251b  sbb %al, %ch            
0x7fc7cfab251d  sti                     
0x7fc7cfab251e  adc %eax, -0x368(%rbp)  
0x7fc7cfab2524  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab252e  mov %r15, %rdi          
0x7fc7cfab2531  callq *%rax             
0x7fc7cfab2533  invalid                 
0x7fc7cfab2534  sti                     
0x7fc7cfab2535  adc %al, -0x368(%rbp)   
0x7fc7cfab253b  invalid                 
0x7fc7cfab253c  sti                     
0x7fc7cfab253d  adc %eax, 0x18(%rax)    
0x7fc7cfab2540  jmp 0x608b               ; 0x7fc7cfab259b
0x7fc7cfab2545  mov %r14, -0x50(%rbp)   
0x7fc7cfab2549  movq $0x55e, -0x58(%rbp)
0x7fc7cfab2551  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab2559  mov $0x1, -0x40(%rbp)   
0x7fc7cfab2560  movq $0x0, -0x30(%rbp)  
0x7fc7cfab2568  mov %rdx, -0x38(%rbp)   
0x7fc7cfab256c  mov 0x1952218, %rsi     
0x7fc7cfab2574  mov 0x20(%rsi), %rax    
0x7fc7cfab2578  mov $0x12c, -0x104(%rbp)
0x7fc7cfab2582  lea -0x128(%rbp), %rdx  
0x7fc7cfab2589  lea -0x58(%rbp), %rcx   
0x7fc7cfab258d  mov %r15, %rdi          
0x7fc7cfab2590  callq *%rax             
0x7fc7cfab2592  test %rax, %rax         
0x7fc7cfab2595  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab259b  mov %rax, -0xe0(%rbp)   
0x7fc7cfab25a2  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab25a9  testb $0x3, %dl         
0x7fc7cfab25ac  jnz 0x6111               ; 0x7fc7cfab2621
0x7fc7cfab25b2  mov 0x8(%rdx), %rcx     
0x7fc7cfab25b6  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab25bd  jnz 0x6111               ; 0x7fc7cfab2621
0x7fc7cfab25c3  mov %rax, 0x20(%rdx)    
0x7fc7cfab25c7  testb $0x3, %al         
0x7fc7cfab25ca  jnz 0x6138               ; 0x7fc7cfab2648
0x7fc7cfab25d0  mov 0x15853f8, %esi     
0x7fc7cfab25d7  mov (%rdx), %rcx        
0x7fc7cfab25da  mov %rcx, %rdi          
0x7fc7cfab25dd  andq $0x380000, %rdi    
0x7fc7cfab25e4  inc %esi                
0x7fc7cfab25e6  shlq $0x13, %rsi        
0x7fc7cfab25ea  cmp %rsi, %rdi          
0x7fc7cfab25ed  jz 0x60f7                ; 0x7fc7cfab2607
0x7fc7cfab25f3  andq $0x300, %rcx       
0x7fc7cfab25fa  cmpq $0x200, %rcx       
0x7fc7cfab2601  jz 0x6138                ; 0x7fc7cfab2648
0x7fc7cfab2607  mov $0x760710, %rcx      ; rbx_write_barrier
0x7fc7cfab2611  mov %r15, %rdi          
0x7fc7cfab2614  mov %rdx, %rsi          
0x7fc7cfab2617  mov %rax, %rdx          
0x7fc7cfab261a  callq *%rcx             
0x7fc7cfab261c  jmp 0x6138               ; 0x7fc7cfab2648
0x7fc7cfab2621  mov $0x763250, %rbx      ; rbx_set_ivar
0x7fc7cfab262b  lea -0x128(%rbp), %rsi  
0x7fc7cfab2632  mov $0x1005e, %ecx      
0x7fc7cfab2637  mov %r15, %rdi          
0x7fc7cfab263a  mov %rax, %r8           
0x7fc7cfab263d  callq *%rbx             
0x7fc7cfab263f  test %rax, %rax         
0x7fc7cfab2642  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab2648  movq $0x1a, -0xe0(%rbp) 
0x7fc7cfab2653  mov -0x1a8(%rbp), %r13  
0x7fc7cfab265a  mov %r13, %rbx          
0x7fc7cfab265d  andq $0x3, %rbx         
0x7fc7cfab2661  jnz 0x617f               ; 0x7fc7cfab268f
0x7fc7cfab2667  mov 0x8(%r13), %rax     
0x7fc7cfab266b  cmp $0x505, 0x70(%rax)  
0x7fc7cfab2672  jnz 0x617f               ; 0x7fc7cfab268f
0x7fc7cfab2678  mov 0x28(%r13), %rax    
0x7fc7cfab267c  cmpq $0x22, %rax        
0x7fc7cfab2680  mov $0x1a, %r14d        
0x7fc7cfab2686  cmovnz %rax, %r14       
0x7fc7cfab268a  jmp 0x6199               ; 0x7fc7cfab26a9
0x7fc7cfab268f  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab2699  mov $0x10066, %edx      
0x7fc7cfab269e  mov %r15, %rdi          
0x7fc7cfab26a1  mov %r13, %rsi          
0x7fc7cfab26a4  callq *%rax             
0x7fc7cfab26a6  mov %rax, %r14          
0x7fc7cfab26a9  mov %r14, -0xe0(%rbp)   
0x7fc7cfab26b0  mov -0x178(%rbp), %r12  
0x7fc7cfab26b7  mov %r12, -0xd8(%rbp)   
0x7fc7cfab26be  movq $0x1a, -0xd0(%rbp) 
0x7fc7cfab26c9  test %rbx, %rbx         
0x7fc7cfab26cc  jnz 0x61e9               ; 0x7fc7cfab26f9
0x7fc7cfab26d2  mov 0x8(%r13), %rax     
0x7fc7cfab26d6  cmp $0x505, 0x70(%rax)  
0x7fc7cfab26dd  jnz 0x61e9               ; 0x7fc7cfab26f9
0x7fc7cfab26e3  mov 0x40(%r13), %rcx    
0x7fc7cfab26e7  cmpq $0x22, %rcx        
0x7fc7cfab26eb  mov $0x1a, %eax         
0x7fc7cfab26f0  cmovnz %rcx, %rax       
0x7fc7cfab26f4  jmp 0x6200               ; 0x7fc7cfab2710
0x7fc7cfab26f9  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab2703  mov $0x1007e, %edx      
0x7fc7cfab2708  mov %r15, %rdi          
0x7fc7cfab270b  mov %r13, %rsi          
0x7fc7cfab270e  callq *%rax             
0x7fc7cfab2710  mov %rax, -0xd0(%rbp)   
0x7fc7cfab2717  testb $0x3, %r12b       
0x7fc7cfab271b  jnz 0x62d7               ; 0x7fc7cfab27e7
0x7fc7cfab2721  mov 0x8(%r12), %rcx     
0x7fc7cfab2726  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab272a  jnz 0x62d7               ; 0x7fc7cfab27e7
0x7fc7cfab2730  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab2737  jnz 0x624e               ; 0x7fc7cfab275e
0x7fc7cfab273d  testb $0x3, %al         
0x7fc7cfab2740  jnz 0x6296               ; 0x7fc7cfab27a6
0x7fc7cfab2746  mov 0x8(%rax), %rcx     
0x7fc7cfab274a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab274e  jnz 0x6296               ; 0x7fc7cfab27a6
0x7fc7cfab2754  invalid                 
0x7fc7cfab2755  sti                     
0x7fc7cfab2756  adc %al, 0x18(%rax)     
0x7fc7cfab2759  jmp 0x62a7               ; 0x7fc7cfab27b7
0x7fc7cfab275e  mov $0x138, -0x104(%rbp)
0x7fc7cfab2768  mov $0x7fc7b4004290, %rax
0x7fc7cfab2772  mov %rax, (%rsp)        
0x7fc7cfab2776  mov $0x1, 0x10(%rsp)    
0x7fc7cfab277e  mov $0x0, 0x8(%rsp)     
0x7fc7cfab2786  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab2790  lea -0x128(%rbp), %rsi  
0x7fc7cfab2797  mov $0x138, %edx        
0x7fc7cfab279c  mov $0x2, %ecx          
0x7fc7cfab27a1  jmp 0x526e               ; 0x7fc7cfab177e
0x7fc7cfab27a6  testb $0x1, %al         
0x7fc7cfab27a9  jz 0x62d7                ; 0x7fc7cfab27e7
0x7fc7cfab27af  sarq $0x1, %rax         
0x7fc7cfab27b2  invalid                 
0x7fc7cfab27b3  loope 0x62a0             ; 0x7fc7cfab28b0
0x7fc7cfab27b5  sub %al, %al            
0x7fc7cfab27b7  invalid                 
0x7fc7cfab27b8  sar $0x44, 0x59(%rbx)   
0x7fc7cfab27bc  and $0x18, %al          
0x7fc7cfab27be  invalid                 
0x7fc7cfab27bf  sti                     
0x7fc7cfab27c0  adc %eax, -0x368(%rbp)  
0x7fc7cfab27c6  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab27d0  mov %r15, %rdi          
0x7fc7cfab27d3  callq *%rax             
0x7fc7cfab27d5  invalid                 
0x7fc7cfab27d6  sti                     
0x7fc7cfab27d7  adc %al, -0x368(%rbp)   
0x7fc7cfab27dd  invalid                 
0x7fc7cfab27de  sti                     
0x7fc7cfab27df  adc %eax, 0x18(%rax)    
0x7fc7cfab27e2  jmp 0x633b               ; 0x7fc7cfab284b
0x7fc7cfab27e7  mov %r12, -0x50(%rbp)   
0x7fc7cfab27eb  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab27f3  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab27fb  mov $0x1, -0x40(%rbp)   
0x7fc7cfab2802  movq $0x0, -0x30(%rbp)  
0x7fc7cfab280a  lea -0xd0(%rbp), %rax   
0x7fc7cfab2811  mov %rax, -0x38(%rbp)   
0x7fc7cfab2815  mov 0x1952278, %rsi     
0x7fc7cfab281d  mov 0x20(%rsi), %rax    
0x7fc7cfab2821  mov $0x138, -0x104(%rbp)
0x7fc7cfab282b  lea -0x128(%rbp), %rdx  
0x7fc7cfab2832  lea -0x58(%rbp), %rcx   
0x7fc7cfab2836  mov %r15, %rdi          
0x7fc7cfab2839  callq *%rax             
0x7fc7cfab283b  test %rax, %rax         
0x7fc7cfab283e  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab2844  mov -0xe0(%rbp), %r14   
0x7fc7cfab284b  mov %rax, -0xd8(%rbp)   
0x7fc7cfab2852  testb $0x3, %r14b       
0x7fc7cfab2856  jnz 0x640b               ; 0x7fc7cfab291b
0x7fc7cfab285c  mov 0x8(%r14), %rcx     
0x7fc7cfab2860  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab2864  jnz 0x640b               ; 0x7fc7cfab291b
0x7fc7cfab286a  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab2871  jnz 0x6388               ; 0x7fc7cfab2898
0x7fc7cfab2877  testb $0x3, %al         
0x7fc7cfab287a  jnz 0x63cb               ; 0x7fc7cfab28db
0x7fc7cfab2880  mov 0x8(%rax), %rcx     
0x7fc7cfab2884  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab2888  jnz 0x63cb               ; 0x7fc7cfab28db
0x7fc7cfab288e  invalid                 
0x7fc7cfab288f  sti                     
0x7fc7cfab2890  adc %al, 0x18(%rax)     
0x7fc7cfab2893  jmp 0x63dc               ; 0x7fc7cfab28ec
0x7fc7cfab2898  mov $0x13b, -0x104(%rbp)
0x7fc7cfab28a2  mov $0x7fc7b4004290, %rax
0x7fc7cfab28ac  mov %rax, (%rsp)        
0x7fc7cfab28b0  mov $0x1, 0x10(%rsp)    
0x7fc7cfab28b8  mov $0x0, 0x8(%rsp)     
0x7fc7cfab28c0  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab28ca  lea -0x128(%rbp), %rsi  
0x7fc7cfab28d1  mov $0x13b, %edx        
0x7fc7cfab28d6  jmp 0x5269               ; 0x7fc7cfab1779
0x7fc7cfab28db  testb $0x1, %al         
0x7fc7cfab28de  jz 0x640b                ; 0x7fc7cfab291b
0x7fc7cfab28e4  sarq $0x1, %rax         
0x7fc7cfab28e7  invalid                 
0x7fc7cfab28e8  loope 0x63d5             ; 0x7fc7cfab29e5
0x7fc7cfab28ea  sub %al, %al            
0x7fc7cfab28ec  invalid                 
0x7fc7cfab28ed  sar $0x46, 0x58(%rbx)   
0x7fc7cfab28f1  sbb %al, %ch            
0x7fc7cfab28f3  sti                     
0x7fc7cfab28f4  adc %eax, -0x368(%rbp)  
0x7fc7cfab28fa  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab2904  mov %r15, %rdi          
0x7fc7cfab2907  callq *%rax             
0x7fc7cfab2909  invalid                 
0x7fc7cfab290a  sti                     
0x7fc7cfab290b  adc %al, -0x368(%rbp)   
0x7fc7cfab2911  invalid                 
0x7fc7cfab2912  sti                     
0x7fc7cfab2913  adc %eax, 0x18(%rax)    
0x7fc7cfab2916  jmp 0x6471               ; 0x7fc7cfab2981
0x7fc7cfab291b  mov %r14, -0x50(%rbp)   
0x7fc7cfab291f  movq $0x55e, -0x58(%rbp)
0x7fc7cfab2927  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab292f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab2936  movq $0x0, -0x30(%rbp)  
0x7fc7cfab293e  lea -0xd8(%rbp), %rax   
0x7fc7cfab2945  mov %rax, -0x38(%rbp)   
0x7fc7cfab2949  mov 0x1952290, %rax     
0x7fc7cfab2951  mov 0x20(%rax), %rbx    
0x7fc7cfab2955  mov $0x13b, -0x104(%rbp)
0x7fc7cfab295f  lea -0x128(%rbp), %rcx  
0x7fc7cfab2966  lea -0x58(%rbp), %r8    
0x7fc7cfab296a  mov %r15, %rdi          
0x7fc7cfab296d  mov %rax, %rsi          
0x7fc7cfab2970  mov %rcx, %rdx          
0x7fc7cfab2973  mov %r8, %rcx           
0x7fc7cfab2976  callq *%rbx             
0x7fc7cfab2978  test %rax, %rax         
0x7fc7cfab297b  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab2981  mov %rax, -0xe0(%rbp)   
0x7fc7cfab2988  mov -0x1a8(%rbp), %rdx  
0x7fc7cfab298f  testb $0x3, %dl         
0x7fc7cfab2992  jnz 0x64f7               ; 0x7fc7cfab2a07
0x7fc7cfab2998  mov 0x8(%rdx), %rcx     
0x7fc7cfab299c  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab29a3  jnz 0x64f7               ; 0x7fc7cfab2a07
0x7fc7cfab29a9  mov %rax, 0x28(%rdx)    
0x7fc7cfab29ad  testb $0x3, %al         
0x7fc7cfab29b0  jnz 0x651e               ; 0x7fc7cfab2a2e
0x7fc7cfab29b6  mov 0x15853f8, %esi     
0x7fc7cfab29bd  mov (%rdx), %rcx        
0x7fc7cfab29c0  mov %rcx, %rdi          
0x7fc7cfab29c3  andq $0x380000, %rdi    
0x7fc7cfab29ca  inc %esi                
0x7fc7cfab29cc  shlq $0x13, %rsi        
0x7fc7cfab29d0  cmp %rsi, %rdi          
0x7fc7cfab29d3  jz 0x64dd                ; 0x7fc7cfab29ed
0x7fc7cfab29d9  andq $0x300, %rcx       
0x7fc7cfab29e0  cmpq $0x200, %rcx       
0x7fc7cfab29e7  jz 0x651e                ; 0x7fc7cfab2a2e
0x7fc7cfab29ed  mov $0x760710, %rcx      ; rbx_write_barrier
0x7fc7cfab29f7  mov %r15, %rdi          
0x7fc7cfab29fa  mov %rdx, %rsi          
0x7fc7cfab29fd  mov %rax, %rdx          
0x7fc7cfab2a00  callq *%rcx             
0x7fc7cfab2a02  jmp 0x651e               ; 0x7fc7cfab2a2e
0x7fc7cfab2a07  mov $0x763250, %rbx      ; rbx_set_ivar
0x7fc7cfab2a11  lea -0x128(%rbp), %rsi  
0x7fc7cfab2a18  mov $0x10066, %ecx      
0x7fc7cfab2a1d  mov %r15, %rdi          
0x7fc7cfab2a20  mov %rax, %r8           
0x7fc7cfab2a23  callq *%rbx             
0x7fc7cfab2a25  test %rax, %rax         
0x7fc7cfab2a28  jz 0x652a                ; 0x7fc7cfab2a3a
0x7fc7cfab2a2e  mov -0xe0(%rbp), %rax   
0x7fc7cfab2a35  jmp 0x655c               ; 0x7fc7cfab2a6c
0x7fc7cfab2a3a  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab2a44  lea -0x128(%rbp), %rsi  
0x7fc7cfab2a4b  mov %r15, %rdi          
0x7fc7cfab2a4e  callq *%rax             
0x7fc7cfab2a50  mov %al, %cl            
0x7fc7cfab2a52  xor %eax, %eax          
0x7fc7cfab2a54  testb $0x1, %cl         
0x7fc7cfab2a57  jz 0x655c                ; 0x7fc7cfab2a6c
0x7fc7cfab2a5d  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab2a67  mov %r15, %rdi          
0x7fc7cfab2a6a  callq *%rax             
0x7fc7cfab2a6c  addq $0x368, %rsp       
0x7fc7cfab2a73  pop %rbx                
0x7fc7cfab2a74  pop %r12                
0x7fc7cfab2a76  pop %r13                
0x7fc7cfab2a78  pop %r14                
0x7fc7cfab2a7a  pop %r15                
0x7fc7cfab2a7c  pop %rbp                
0x7fc7cfab2a7d  ret                     
[[[ LLVM Simple IR: _X_BasicObject#!@3 ]]]

define %"struct.rubinius::Object"* @"_X_BasicObject#!@3"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !9
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !9
  %counter2 = alloca i32, !dbg !9
  %valid_flag = alloca i1, !dbg !9
  %cfstk = alloca %"struct.rubinius::Object"*, i32 12, !dbg !9
  %var_mem = alloca %"struct.rubinius::Object"*, i32 6, !dbg !9
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !9
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, !dbg !9
  %arg_cmp = icmp ne i32 %arg.total, 0, !dbg !9
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 0), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !9
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !9
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !9
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !9
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !9
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !9
  store i8* null, i8** %3, !dbg !9
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !9
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !9
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !9
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !9
  store i32 40, i32* %5, !dbg !9
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  store i32 0, i32* %6, !dbg !9
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !9
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !9
  store i8* inttoptr (i64 140495695287552 to i8*), i8** %8, !dbg !9
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !9
  %stack_pos1 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1, !dbg !9
  %stack_pos2 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, !dbg !9
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !9
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !9, !rbx-classid !10
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !9
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !9
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !9
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !9
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !9
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !9
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !11
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !11
  %stack_limit = load i64* %18, !dbg !11
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !11
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !11
  %check_interrupts = load i8* %20, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !11
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %19, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; No predecessors!
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %import_args
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !9
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !12
  %stack_pos3 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !12
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos3, !dbg !12
  %21 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !12
  %self = load %"struct.rubinius::Object"** %21, !dbg !12
  %stack_pos4 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !12
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos4, !dbg !12
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !12
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos5, !dbg !12
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !12
  %stack_load = load %"struct.rubinius::Object"** %stack_pos6, !dbg !12
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !12
  %stack_load8 = load %"struct.rubinius::Object"** %stack_pos7, !dbg !12, !rbx-classid !13
  %identity_equal = icmp eq %"struct.rubinius::Object"* %stack_load, %stack_load8, !dbg !12
  %select_bool = select i1 %identity_equal, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos9 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !12
  store %"struct.rubinius::Object"* %select_bool, %"struct.rubinius::Object"** %stack_pos9, !dbg !12
  br label %continue, !dbg !12

class_fallback:                                   ; No predecessors!
  store i32 3, i32* %ip_pos, !dbg !12
  %22 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695287552 to i8*), i32 0, i8 0), !dbg !12
  br label %return_pad, !dbg !12

serial_fallback:                                  ; No predecessors!
  store i32 3, i32* %ip_pos, !dbg !12
  %23 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695287552 to i8*), i32 0, i8 1), !dbg !12
  br label %return_pad, !dbg !12

continue:                                         ; preds = %method_body
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !12
  %stack_load11 = load %"struct.rubinius::Object"** %stack_pos10, !dbg !12
  %stack_pos12 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !12
  store %"struct.rubinius::Object"* %stack_load11, %"struct.rubinius::Object"** %stack_pos12, !dbg !12
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !12
  %stack_load14 = load %"struct.rubinius::Object"** %stack_pos13, !dbg !12
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load14 to i64, !dbg !12
  %and = and i64 %as_int, 15, !dbg !12
  %is_true = icmp ne i64 %and, 10, !dbg !12
  br i1 %is_true, label %ip16, label %continue15, !dbg !12

continue15:                                       ; preds = %continue
  br label %ip9, !dbg !12

ip9:                                              ; preds = %continue15
  %system_object16 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !11
  %stack_pos17 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %system_object16, %"struct.rubinius::Object"** %stack_pos17, !dbg !11
  %24 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !11
  %self18 = load %"struct.rubinius::Object"** %24, !dbg !11
  %stack_pos19 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %self18, %"struct.rubinius::Object"** %stack_pos19, !dbg !11
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos20, !dbg !11
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !11
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load27 = load %"struct.rubinius::Object"** %stack_pos26, !dbg !11, !rbx-classid !14
  %identity_equal28 = icmp eq %"struct.rubinius::Object"* %stack_load25, %stack_load27, !dbg !11
  %select_bool29 = select i1 %identity_equal28, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos30 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %select_bool29, %"struct.rubinius::Object"** %stack_pos30, !dbg !11
  br label %continue23, !dbg !11

class_fallback21:                                 ; No predecessors!
  store i32 13, i32* %ip_pos, !dbg !11
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695287552 to i8*), i32 0, i8 0), !dbg !11
  br label %return_pad, !dbg !11

serial_fallback22:                                ; No predecessors!
  store i32 13, i32* %ip_pos, !dbg !11
  %26 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695287552 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue23:                                       ; preds = %ip9
  br label %ip16, !dbg !11

ip16:                                             ; preds = %continue23, %continue
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !11
  %as_int33 = ptrtoint %"struct.rubinius::Object"* %stack_load32 to i64, !dbg !11
  %and34 = and i64 %as_int33, 15, !dbg !11
  %is_true35 = icmp eq i64 %and34, 10, !dbg !11
  br i1 %is_true35, label %ip21, label %continue36, !dbg !11

continue36:                                       ; preds = %ip16
  br label %ip18, !dbg !11

ip18:                                             ; preds = %continue36
  %stack_pos37 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos37, !dbg !11
  br label %ip22, !dbg !11

continue38:                                       ; No predecessors!
  br label %ip21, !dbg !11

ip22:                                             ; preds = %ip21, %ip18
  %stack_pos39 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !15
  %stack_load40 = load %"struct.rubinius::Object"** %stack_pos39, !dbg !15
  br label %return_pad, !dbg !15

ip21:                                             ; preds = %continue38, %ip16
  %stack_pos41 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos41, !dbg !11
  br label %ip22, !dbg !11

return_pad:                                       ; preds = %ip22, %serial_fallback22, %class_fallback21, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %22, %class_fallback ], [ %23, %serial_fallback ], [ %25, %class_fallback21 ], [ %26, %serial_fallback22 ], [ %stack_load40, %ip22 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

ret_null42:                                       ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !11

prologue_check:                                   ; preds = %import_args
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %27 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %27, label %ret_null42, label %method_body, !dbg !11
}

[[[ LLVM Optimized IR: _X_BasicObject#!@3 ]]]

define %"struct.rubinius::Object"* @"_X_BasicObject#!@3"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %cfstk43 = alloca [12 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %var_mem44 = alloca [6 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %call_frame = bitcast [12 x %"struct.rubinius::Object"*]* %cfstk43 to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 9, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, align 4, !dbg !9
  %arg_cmp = icmp eq i32 %arg.total, 0, !dbg !9
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 0), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 3, !dbg !9
  %1 = getelementptr inbounds [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 0, !dbg !9
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !9
  %2 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 8, !dbg !9
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !9
  %3 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !9
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !9
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !9
  %5 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 1, !dbg !9
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !9
  %6 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 4, !dbg !9
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !9
  store i32 40, i32* %7, align 8, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !9
  store i32 0, i32* %8, align 4, !dbg !9
  %9 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 7, !dbg !9
  %vars.c = bitcast [6 x %"struct.rubinius::Object"*]* %var_mem44 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !9
  %10 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 140495695287552 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !9
  %stack_pos1 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 10, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !9
  %stack_pos2 = getelementptr [12 x %"struct.rubinius::Object"*]* %cfstk43, i64 0, i64 11, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !9
  %11 = getelementptr inbounds [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 0, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %11, align 8, !dbg !9
  %12 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %12, align 8, !dbg !9, !rbx-classid !10
  %13 = getelementptr [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %13, align 8, !dbg !9
  %14 = getelementptr [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 4, !dbg !9
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %14, align 8, !dbg !9
  %15 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %15, align 8, !dbg !9
  %16 = getelementptr [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %16, align 8, !dbg !9
  %17 = getelementptr [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 1, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %17, align 8, !dbg !9
  %18 = getelementptr [6 x %"struct.rubinius::Object"*]* %var_mem44, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %18, align 8, !dbg !9
  %19 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %19, align 8, !dbg !11
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !11
  %stack_limit = load i64* %20, align 8, !dbg !11
  %stack_end = ptrtoint [12 x %"struct.rubinius::Object"*]* %cfstk43 to i64, !dbg !11
  %21 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %22 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !11
  %check_interrupts = load i8* %22, align 1, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !11
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %21, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

method_body:                                      ; preds = %prologue_check.method_body_crit_edge, %import_args
  %self18 = phi %"struct.rubinius::Object"* [ %self.pre, %prologue_check.method_body_crit_edge ], [ %args.recv, %import_args ]
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !12
  %identity_equal = icmp eq %"struct.rubinius::Object"* %self18, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !12
  %select_bool = select i1 %identity_equal, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  store %"struct.rubinius::Object"* %select_bool, %"struct.rubinius::Object"** %stack, align 8, !dbg !12
  store %"struct.rubinius::Object"* %select_bool, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !12
  %as_int = ptrtoint %"struct.rubinius::Object"* %select_bool to i64, !dbg !12
  %and = and i64 %as_int, 10, !dbg !12
  %is_true = icmp eq i64 %and, 10, !dbg !12
  br i1 %is_true, label %ip9, label %ip16, !dbg !12

ip9:                                              ; preds = %method_body
  store %"struct.rubinius::Object"* %self18, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !11
  %identity_equal28 = icmp eq %"struct.rubinius::Object"* %self18, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !11
  %select_bool29 = select i1 %identity_equal28, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  store %"struct.rubinius::Object"* %select_bool29, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  br label %ip16, !dbg !11

ip16:                                             ; preds = %method_body, %ip9
  %stack_load32 = phi %"struct.rubinius::Object"* [ %select_bool, %method_body ], [ %select_bool29, %ip9 ]
  %as_int33 = ptrtoint %"struct.rubinius::Object"* %stack_load32 to i64, !dbg !11
  %and34 = and i64 %as_int33, 15, !dbg !11
  %is_true35 = icmp eq i64 %and34, 10, !dbg !11
  %. = select i1 %is_true35, %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !11
  store %"struct.rubinius::Object"* %., %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  br label %return_pad, !dbg !13

return_pad:                                       ; preds = %prologue_check, %ip16, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %., %ip16 ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

prologue_check:                                   ; preds = %import_args
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %23 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %23, label %return_pad, label %prologue_check.method_body_crit_edge, !dbg !11

prologue_check.method_body_crit_edge:             ; preds = %prologue_check
  %self.pre = load %"struct.rubinius::Object"** %13, align 8, !dbg !12
  br label %method_body, !dbg !11
}

[[[ JIT Machine Code: _X_BasicObject#!@3 ]]]
0x7fc7cfab2a90  push %rbp               
0x7fc7cfab2a91  mov %rsp, %rbp          
0x7fc7cfab2a94  subq $0x90, %rsp        
0x7fc7cfab2a9b  cmp $0x0, 0x18(%r8)     
0x7fc7cfab2aa0  jz 0x2c                  ; 0x7fc7cfab2abc
0x7fc7cfab2aa6  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfab2ab0  xor %ecx, %ecx          
0x7fc7cfab2ab2  mov %r8, %rdx           
0x7fc7cfab2ab5  callq *%rax             
0x7fc7cfab2ab7  jmp 0x16f                ; 0x7fc7cfab2bff
0x7fc7cfab2abc  mov %rsi, -0x60(%rbp)   
0x7fc7cfab2ac0  mov %r8, -0x20(%rbp)    
0x7fc7cfab2ac4  movq $0x0, -0x50(%rbp)  
0x7fc7cfab2acc  mov %rdx, -0x48(%rbp)   
0x7fc7cfab2ad0  mov 0xa0(%rdx), %rax    
0x7fc7cfab2ad7  mov %rax, -0x58(%rbp)   
0x7fc7cfab2adb  mov $0x28, -0x40(%rbp)  
0x7fc7cfab2ae2  mov $0x0, -0x3c(%rbp)   
0x7fc7cfab2ae9  lea -0x90(%rbp), %rax   
0x7fc7cfab2af0  mov %rax, -0x28(%rbp)   
0x7fc7cfab2af4  mov $0x7fc7b4029500, %rax
0x7fc7cfab2afe  mov %rax, -0x38(%rbp)   
0x7fc7cfab2b02  movq $0x1a, -0x18(%rbp) 
0x7fc7cfab2b0a  movq $0x1a, -0x10(%rbp) 
0x7fc7cfab2b12  movq $0x1a, -0x8(%rbp)  
0x7fc7cfab2b1a  movq $0x0, -0x90(%rbp)  
0x7fc7cfab2b25  mov 0x8(%r8), %rax      
0x7fc7cfab2b29  mov %rax, -0x80(%rbp)   
0x7fc7cfab2b2d  mov %rcx, -0x70(%rbp)   
0x7fc7cfab2b31  mov 0x10(%r8), %rcx     
0x7fc7cfab2b35  mov %rcx, -0x78(%rbp)   
0x7fc7cfab2b39  movq $0x0, -0x88(%rbp)  
0x7fc7cfab2b44  movq $0x1a, -0x68(%rbp) 
0x7fc7cfab2b4c  mov 0x8(%rdi), %rcx     
0x7fc7cfab2b50  mov 0x158251e, %dl      
0x7fc7cfab2b57  or 0x16(%rcx), %dl      
0x7fc7cfab2b5a  jnz 0xde                 ; 0x7fc7cfab2b6e
0x7fc7cfab2b60  lea -0x60(%rbp), %rdx   
0x7fc7cfab2b64  cmp 0x8(%rcx), %rdx     
0x7fc7cfab2b68  jae 0x100                ; 0x7fc7cfab2b90
0x7fc7cfab2b6e  mov $0x762f80, %rax      ; rbx_prologue_check
0x7fc7cfab2b78  lea -0x60(%rbp), %rsi   
0x7fc7cfab2b7c  callq *%rax             
0x7fc7cfab2b7e  mov %rax, %rcx          
0x7fc7cfab2b81  xor %eax, %eax          
0x7fc7cfab2b83  test %rcx, %rcx         
0x7fc7cfab2b86  jz 0x16f                 ; 0x7fc7cfab2bff
0x7fc7cfab2b8c  mov -0x80(%rbp), %rax   
0x7fc7cfab2b90  movq $0xa, -0x8(%rbp)   
0x7fc7cfab2b98  cmpq $0xa, %rax         
0x7fc7cfab2b9c  setz %cl                
0x7fc7cfab2b9f  movzxb %cl, %ecx        
0x7fc7cfab2ba2  lea 0xa(%rcx,8), %rcx   
0x7fc7cfab2baa  mov %rcx, -0x18(%rbp)   
0x7fc7cfab2bae  mov %rcx, -0x10(%rbp)   
0x7fc7cfab2bb2  mov %rcx, %rdx          
0x7fc7cfab2bb5  andq $0xa, %rdx         
0x7fc7cfab2bb9  cmpq $0xa, %rdx         
0x7fc7cfab2bbd  jnz 0x155                ; 0x7fc7cfab2be5
0x7fc7cfab2bc3  mov %rax, -0x10(%rbp)   
0x7fc7cfab2bc7  cmpq $0x1a, %rax        
0x7fc7cfab2bcb  movq $0x1a, -0x8(%rbp)  
0x7fc7cfab2bd3  setz %al                
0x7fc7cfab2bd6  movzxb %al, %eax        
0x7fc7cfab2bd9  lea 0xa(%rax,8), %rcx   
0x7fc7cfab2be1  mov %rcx, -0x18(%rbp)   
0x7fc7cfab2be5  andq $0xf, %rcx         
0x7fc7cfab2be9  cmpq $0xa, %rcx         
0x7fc7cfab2bed  setnz %al               
0x7fc7cfab2bf0  movzxb %al, %eax        
0x7fc7cfab2bf3  lea 0xa(%rax,8), %rax   
0x7fc7cfab2bfb  mov %rax, -0x18(%rbp)   
0x7fc7cfab2bff  addq $0x90, %rsp        
0x7fc7cfab2c06  pop %rbp                
0x7fc7cfab2c07  ret                     
[[[ LLVM Simple IR: _X_Module#===@4 ]]]

define %"struct.rubinius::Object"* @"_X_Module#===@4"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !9
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !9
  %counter2 = alloca i32, !dbg !9
  %valid_flag = alloca i1, !dbg !9
  %cfstk = alloca %"struct.rubinius::Object"*, i32 13, !dbg !9
  %var_mem = alloca %"struct.rubinius::Object"*, i32 7, !dbg !9
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !9
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, !dbg !9
  %arg_cmp = icmp ne i32 %arg.total, 1, !dbg !9
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !9
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !9
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !9
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !9
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !9
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !9
  store i8* null, i8** %3, !dbg !9
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !9
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !9
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !9
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !9
  store i32 40, i32* %5, !dbg !9
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  store i32 0, i32* %6, !dbg !9
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !9
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !9
  store i8* inttoptr (i64 140495695134144 to i8*), i8** %8, !dbg !9
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !9
  %stack_pos1 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1, !dbg !9
  %stack_pos2 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, !dbg !9
  %stack_pos3 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3, !dbg !9
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !9
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !9, !rbx-classid !10
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !9
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !9
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !9
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !9
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !9
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !9
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !9
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !9
  br label %method_body, !dbg !9

bail_out:                                         ; No predecessors!
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %import_args
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !9
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !11
  %stack_pos4 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos4, !dbg !11
  %local_pos5 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !11
  %local = load %"struct.rubinius::Object"** %local_pos5, !dbg !11, !rbx-classid !12
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos6, !dbg !11
  %17 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !11
  %self = load %"struct.rubinius::Object"** %17, !dbg !11
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos7, !dbg !11
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load = load %"struct.rubinius::Object"** %stack_pos8, !dbg !11, !rbx-classid !12
  %stack_pos9 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load10 = load %"struct.rubinius::Object"** %stack_pos9, !dbg !11
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !11
  %masked = and i64 %cast, 3, !dbg !11
  %is_reference = icmp eq i64 %masked, 0, !dbg !11
  br i1 %is_reference, label %reference_block, label %class_verified_block, !dbg !11

class_fallback:                                   ; No predecessors!
  store i32 4, i32* %ip_pos, !dbg !11
  %18 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134144 to i8*), i32 0, i8 0), !dbg !11
  br label %return_pad, !dbg !11

serial_fallback:                                  ; No predecessors!
  store i32 4, i32* %ip_pos, !dbg !11
  %19 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134144 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue:                                         ; preds = %continue11
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !11
  br label %return_pad, !dbg !11

return_pad:                                       ; preds = %continue, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %18, %class_fallback ], [ %19, %serial_fallback ], [ %stack_load25, %continue ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

continue11:                                       ; preds = %use_call, %negative, %positive
  %constant = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call ], !dbg !11
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos23, !dbg !11
  br label %continue, !dbg !11

use_call:                                         ; preds = %is_false_block, %check_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load, %"struct.rubinius::Object"* %stack_load10) #0, !dbg !11
  br label %continue11, !dbg !11

positive:                                         ; preds = %is_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_fixnum_block, %is_symbol_block, %reference_block
  br label %continue11, !dbg !11

negative:                                         ; No predecessors!
  br label %continue11, !dbg !11

class_verified_block:                             ; preds = %method_body
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load10, i32 0, i32 0, i32 0, i32 0, !dbg !11
  %flags = load i64* %word_pos, !dbg !11
  %mask = and i64 %flags, 255, !dbg !11
  %is_type = icmp eq i64 %mask, 20, !dbg !11
  br i1 %is_type, label %check_symbol_block, label %use_call, !dbg !11

reference_block:                                  ; preds = %method_body
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load, i32 0, i32 0, i32 1, !dbg !11
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !11
  %downcast = bitcast %"struct.rubinius::Class"* %ref_class to %"struct.rubinius::Object"*, !dbg !11
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load10, !dbg !11
  br i1 %check_class, label %positive, label %use_call, !dbg !11

check_symbol_block:                               ; preds = %class_verified_block
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load10 to %"struct.rubinius::Class"*, !dbg !11
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %upcast, i32 0, i32 4, !dbg !11
  %class_id = load i32* %class_id_pos, !dbg !11
  %cast12 = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !11
  %masked13 = and i64 %cast12, 7, !dbg !11
  %is_symbol = icmp eq i64 %masked13, 6, !dbg !11
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !11

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id = icmp eq i32 %class_id, 39, !dbg !11
  br i1 %check_class_id, label %positive, label %use_call, !dbg !11

check_fixnum_block:                               ; preds = %check_symbol_block
  %cast14 = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !11
  %masked15 = and i64 %cast14, 1, !dbg !11
  %is_fixnum = icmp eq i64 %masked15, 1, !dbg !11
  br i1 %is_fixnum, label %is_fixnum_block, label %check_nil_block, !dbg !11

is_fixnum_block:                                  ; preds = %check_fixnum_block
  %check_class_id16 = icmp eq i32 %class_id, 37, !dbg !11
  br i1 %check_class_id16, label %positive, label %is_integer_block, !dbg !11

is_integer_block:                                 ; preds = %is_fixnum_block
  %check_class_id17 = icmp eq i32 %class_id, 35, !dbg !11
  br i1 %check_class_id17, label %positive, label %use_call, !dbg !11

check_nil_block:                                  ; preds = %check_fixnum_block
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !11
  br i1 %is_immediate, label %is_nil_block, label %check_true_block, !dbg !11

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id18 = icmp eq i32 %class_id, 27, !dbg !11
  br i1 %check_class_id18, label %positive, label %use_call, !dbg !11

check_true_block:                                 ; preds = %check_nil_block
  %is_immediate19 = icmp eq %"struct.rubinius::Object"* %stack_load, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !11
  br i1 %is_immediate19, label %is_true_block, label %check_false_block, !dbg !11

is_true_block:                                    ; preds = %check_true_block
  %check_class_id20 = icmp eq i32 %class_id, 29, !dbg !11
  br i1 %check_class_id20, label %positive, label %use_call, !dbg !11

check_false_block:                                ; preds = %check_true_block
  %is_immediate21 = icmp eq %"struct.rubinius::Object"* %stack_load, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !11
  br i1 %is_immediate21, label %is_false_block, label %use_call, !dbg !11

is_false_block:                                   ; preds = %check_false_block
  %check_class_id22 = icmp eq i32 %class_id, 31, !dbg !11
  br i1 %check_class_id22, label %positive, label %use_call, !dbg !11
}

[[[ LLVM Optimized IR: _X_Module#===@4 ]]]

define %"struct.rubinius::Object"* @"_X_Module#===@4"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, align 4, !dbg !9
  %arg_cmp = icmp eq i32 %arg.total, 1, !dbg !9
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %0, align 8, !dbg !9, !rbx-classid !10
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !9
  %cast = ptrtoint %"struct.rubinius::Object"* %arg_val to i64, !dbg !11
  %masked = and i64 %cast, 3, !dbg !11
  %is_reference = icmp eq i64 %masked, 0, !dbg !11
  br i1 %is_reference, label %reference_block, label %class_verified_block, !dbg !11

return_pad:                                       ; preds = %use_call, %is_false_block, %is_true_block, %is_nil_block, %is_symbol_block, %reference_block, %is_fixnum_block, %is_fixnum_block, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %kind_of, %use_call ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

use_call:                                         ; preds = %check_nil_block, %is_fixnum_block, %is_false_block, %is_true_block, %is_nil_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"* %args.recv) #0, !dbg !11
  br label %return_pad, !dbg !11

class_verified_block:                             ; preds = %import_args
  %word_pos = getelementptr %"struct.rubinius::Object"* %args.recv, i64 0, i32 0, i32 0, i32 0, !dbg !11
  %flags = load i64* %word_pos, align 8, !dbg !11
  %mask = and i64 %flags, 255, !dbg !11
  %is_type = icmp eq i64 %mask, 20, !dbg !11
  br i1 %is_type, label %check_symbol_block, label %use_call, !dbg !11

reference_block:                                  ; preds = %import_args
  %class_pos = getelementptr %"struct.rubinius::Object"* %arg_val, i64 0, i32 0, i32 1, !dbg !11
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !11
  %downcast = getelementptr inbounds %"struct.rubinius::Class"* %ref_class, i64 0, i32 0, i32 0, !dbg !11
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast, %args.recv, !dbg !11
  br i1 %check_class, label %return_pad, label %use_call, !dbg !11

check_symbol_block:                               ; preds = %class_verified_block
  %class_id_pos = getelementptr %"struct.rubinius::Object"* %args.recv, i64 4, i32 0, i32 2, !dbg !11
  %1 = bitcast %"struct.rubinius::Object"** %class_id_pos to i32*, !dbg !11
  %class_id = load i32* %1, align 4, !dbg !11
  %masked13 = and i64 %cast, 7, !dbg !11
  %is_symbol = icmp eq i64 %masked13, 6, !dbg !11
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !11

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id = icmp eq i32 %class_id, 39, !dbg !11
  br i1 %check_class_id, label %return_pad, label %use_call, !dbg !11

check_fixnum_block:                               ; preds = %check_symbol_block
  %masked15 = and i64 %cast, 1, !dbg !11
  %is_fixnum = icmp eq i64 %masked15, 0, !dbg !11
  br i1 %is_fixnum, label %check_nil_block, label %is_fixnum_block, !dbg !11

is_fixnum_block:                                  ; preds = %check_fixnum_block
  switch i32 %class_id, label %use_call [
    i32 37, label %return_pad
    i32 35, label %return_pad
  ], !dbg !11

check_nil_block:                                  ; preds = %check_fixnum_block
  switch i64 %cast, label %use_call [
    i64 26, label %is_nil_block
    i64 18, label %is_true_block
    i64 10, label %is_false_block
  ], !dbg !11

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id18 = icmp eq i32 %class_id, 27, !dbg !11
  br i1 %check_class_id18, label %return_pad, label %use_call, !dbg !11

is_true_block:                                    ; preds = %check_nil_block
  %check_class_id20 = icmp eq i32 %class_id, 29, !dbg !11
  br i1 %check_class_id20, label %return_pad, label %use_call, !dbg !11

is_false_block:                                   ; preds = %check_nil_block
  %check_class_id22 = icmp eq i32 %class_id, 31, !dbg !11
  br i1 %check_class_id22, label %return_pad, label %use_call, !dbg !11
}

[[[ JIT Machine Code: _X_Module#===@4 ]]]
0x7fc7cfab2c10  push %rbp               
0x7fc7cfab2c11  mov %rsp, %rbp          
0x7fc7cfab2c14  cmp $0x1, 0x18(%r8)     
0x7fc7cfab2c19  jnz 0x54                 ; 0x7fc7cfab2c64
0x7fc7cfab2c1f  mov 0x8(%r8), %rdx      
0x7fc7cfab2c23  mov 0x20(%r8), %rax     
0x7fc7cfab2c27  mov (%rax), %rsi        
0x7fc7cfab2c2a  testb $0x3, %sil        
0x7fc7cfab2c2e  jz 0x6a                  ; 0x7fc7cfab2c7a
0x7fc7cfab2c34  cmpb $0x14, (%rdx)      
0x7fc7cfab2c37  jnz 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2c3d  mov 0x70(%rdx), %ecx    
0x7fc7cfab2c40  mov %rsi, %rax          
0x7fc7cfab2c43  andq $0x7, %rax         
0x7fc7cfab2c47  cmpq $0x6, %rax         
0x7fc7cfab2c4b  jnz 0x7e                 ; 0x7fc7cfab2c8e
0x7fc7cfab2c51  mov $0x12, %eax         
0x7fc7cfab2c56  cmp $0x27, %ecx         
0x7fc7cfab2c59  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2c5f  jmp 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2c64  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfab2c6e  mov $0x1, %ecx          
0x7fc7cfab2c73  mov %r8, %rdx           
0x7fc7cfab2c76  callq *%rax             
0x7fc7cfab2c78  pop %rbp                
0x7fc7cfab2c79  ret                     
0x7fc7cfab2c7a  cmp %rdx, 0x8(%rsi)     
0x7fc7cfab2c7e  mov $0x12, %eax         
0x7fc7cfab2c83  jnz 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2c89  jmp 0x68                 ; 0x7fc7cfab2c78
0x7fc7cfab2c8e  testb $0x1, %sil        
0x7fc7cfab2c92  jz 0xa4                  ; 0x7fc7cfab2cb4
0x7fc7cfab2c98  mov $0x12, %eax         
0x7fc7cfab2c9d  cmp $0x23, %ecx         
0x7fc7cfab2ca0  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2ca6  cmp $0x25, %ecx         
0x7fc7cfab2ca9  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2caf  jmp 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2cb4  cmpq $0xa, %rsi         
0x7fc7cfab2cb8  jz 0xcb                  ; 0x7fc7cfab2cdb
0x7fc7cfab2cbe  cmpq $0x12, %rsi        
0x7fc7cfab2cc2  jnz 0xde                 ; 0x7fc7cfab2cee
0x7fc7cfab2cc8  mov $0x12, %eax         
0x7fc7cfab2ccd  cmp $0x1d, %ecx         
0x7fc7cfab2cd0  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2cd6  jmp 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2cdb  mov $0x12, %eax         
0x7fc7cfab2ce0  cmp $0x1f, %ecx         
0x7fc7cfab2ce3  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2ce9  jmp 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2cee  cmpq $0x1a, %rsi        
0x7fc7cfab2cf2  jnz 0xf6                 ; 0x7fc7cfab2d06
0x7fc7cfab2cf8  mov $0x12, %eax         
0x7fc7cfab2cfd  cmp $0x1b, %ecx         
0x7fc7cfab2d00  jz 0x68                  ; 0x7fc7cfab2c78
0x7fc7cfab2d06  mov $0x7626f0, %rax      ; rbx_kind_of
0x7fc7cfab2d10  callq *%rax             
0x7fc7cfab2d12  pop %rbp                
0x7fc7cfab2d13  ret                     
[[[ LLVM Simple IR: _X_Math#sqrt@5 ]]]

define %"struct.rubinius::Object"* @"_X_Math#sqrt@5"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !24
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !24
  %counter2 = alloca i32, !dbg !24
  %valid_flag = alloca i1, !dbg !24
  %cfstk = alloca %"struct.rubinius::Object"*, i32 13, !dbg !24
  %var_mem = alloca %"struct.rubinius::Object"*, i32 7, !dbg !24
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !24
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !24
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !24
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !24
  %arg.total = load i32* %total_pos, !dbg !24
  %arg_cmp = icmp ne i32 %arg.total, 1, !dbg !24
  %cfstk136 = alloca %"struct.rubinius::Object"*, i32 17
  %var_mem139 = alloca %"struct.rubinius::Object"*, i32 9
  %cfstk199 = alloca %"struct.rubinius::Object"*, i32 12
  %var_mem202 = alloca %"struct.rubinius::Object"*, i32 6
  %cfstk410 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem413 = alloca %"struct.rubinius::Object"*, i32 7
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !24

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !24
  br label %return_pad, !dbg !24

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !24
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !24
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !24
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !24
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !24
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !24
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !24
  store i8* null, i8** %3, !dbg !24
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !24
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !24
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !24
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !24
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !24
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !24
  store i32 40, i32* %5, !dbg !24
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !24
  store i32 0, i32* %6, !dbg !24
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !24
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !24
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !24
  store i8* inttoptr (i64 140495695135296 to i8*), i8** %8, !dbg !24
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !24
  %stack_pos1 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1, !dbg !24
  %stack_pos2 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, !dbg !24
  %stack_pos3 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3, !dbg !24
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !24
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !24
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !24
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !24, !rbx-classid !25
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !24
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !24
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !24
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !24
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !24
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !24
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !24
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !24
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !24
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !24
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !24
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !24
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !24
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !24
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !24
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !24
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !24
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !24
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !26
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !26
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !26
  %stack_limit = load i64* %18, !dbg !26
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !26
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !26
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !26
  %check_interrupts = load i8* %20, !dbg !26
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !26
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !26
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !26
  %needs_check = or i1 %needs_interrupts, %19, !dbg !26
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !26

bail_out:                                         ; preds = %continue1003, %continue982, %use_call981, %use_call925, %use_call896, %use_call871, %class_fallback815, %return_pad127, %use_call87, %use_call63, %class_fallback28, %continue39, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !24
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !24

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !24
  br label %return_pad, !dbg !24

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !24

method_body:                                      ; preds = %prologue_check, %import_args
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !24
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !24
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !24
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !24
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !24
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !24
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !24
  %local_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !27
  %local = load %"struct.rubinius::Object"** %local_pos4, !dbg !27, !rbx-classid !28
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos5, !dbg !27
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), !dbg !27
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), !dbg !27
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !27
  %constant_scope6 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !27
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !27
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !27
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope6, %frame_scope, !dbg !27
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !27

check_serial:                                     ; preds = %method_body
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !27
  %serial = load i32* %serial_pos, !dbg !27
  %use_cache7 = icmp eq i32 %global_serial, %serial, !dbg !27
  br i1 %use_cache7, label %use_cache, label %use_call, !dbg !27

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !27
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !27
  br label %continue, !dbg !27

use_call:                                         ; preds = %check_serial, %method_body
  store i32 2, i32* %ip_pos, !dbg !27
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !27
  br i1 %null_check, label %bail_out, label %check_active, !dbg !27

continue:                                         ; preds = %continue8, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue8 ], !dbg !27, !rbx-classid !29
  %stack_pos9 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos9, !dbg !27
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load = load %"struct.rubinius::Object"** %stack_pos11, !dbg !27, !rbx-classid !28
  %stack_pos12 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load13 = load %"struct.rubinius::Object"** %stack_pos12, !dbg !27, !rbx-classid !29
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !27
  %masked = and i64 %cast, 3, !dbg !27
  %is_reference = icmp eq i64 %masked, 0, !dbg !27
  br i1 %is_reference, label %use_cache16, label %negative, !dbg !27

continue8:                                        ; preds = %check_active
  br label %continue, !dbg !27

check_active:                                     ; preds = %use_call
  br label %continue8, !dbg !27

class_fallback:                                   ; No predecessors!
  store i32 4, i32* %ip_pos, !dbg !27
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !27
  br label %return_pad, !dbg !27

serial_fallback:                                  ; No predecessors!
  store i32 4, i32* %ip_pos, !dbg !27
  %22 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue10:                                       ; preds = %continue14
  %stack_pos19 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load20 = load %"struct.rubinius::Object"** %stack_pos19, !dbg !27
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %stack_load20, %"struct.rubinius::Object"** %stack_pos21, !dbg !27
  %stack_pos22 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load23 = load %"struct.rubinius::Object"** %stack_pos22, !dbg !27
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load23 to i64, !dbg !27
  %and = and i64 %as_int, 15, !dbg !27
  %is_true = icmp eq i64 %and, 10, !dbg !27
  br i1 %is_true, label %ip16, label %continue24, !dbg !27

continue14:                                       ; preds = %use_call15, %negative, %positive
  %constant17 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call15 ], !dbg !27
  %stack_pos18 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %constant17, %"struct.rubinius::Object"** %stack_pos18, !dbg !27
  br label %continue10, !dbg !27

use_call15:                                       ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load, %"struct.rubinius::Object"* %stack_load13) #0, !dbg !27
  br label %continue14, !dbg !27

positive:                                         ; preds = %use_cache16
  br label %continue14, !dbg !27

negative:                                         ; preds = %use_cache16, %continue
  br label %continue14, !dbg !27

use_cache16:                                      ; preds = %continue
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load, i32 0, i32 0, i32 0, i32 0, !dbg !27
  %flags = load i64* %word_pos, !dbg !27
  %mask = and i64 %flags, 255, !dbg !27
  %is_type = icmp eq i64 %mask, 35, !dbg !27
  br i1 %is_type, label %positive, label %negative, !dbg !27

continue24:                                       ; preds = %continue10
  br label %ip10, !dbg !27

ip10:                                             ; preds = %continue24
  %local_pos25 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !27
  %local26 = load %"struct.rubinius::Object"** %local_pos25, !dbg !27, !rbx-classid !28
  %stack_pos27 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local26, %"struct.rubinius::Object"** %stack_pos27, !dbg !27
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !27, !rbx-classid !28
  %cast33 = ptrtoint %"struct.rubinius::Object"* %stack_load32 to i64, !dbg !27
  %masked34 = and i64 %cast33, 3, !dbg !27
  %is_reference35 = icmp eq i64 %masked34, 0, !dbg !27
  br i1 %is_reference35, label %check_class_id, label %class_fallback28, !dbg !27

continue30:                                       ; preds = %check_active45, %continue40
  %send_result = phi %"struct.rubinius::Object"* [ %prim_value, %continue40 ], [ %call_site_execute, %check_active45 ], !dbg !27
  %stack_pos47 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos47, !dbg !27
  br label %ip16, !dbg !27

ip16:                                             ; preds = %continue30, %continue10
  %stack_pos48 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load49 = load %"struct.rubinius::Object"** %stack_pos48, !dbg !27
  %as_int50 = ptrtoint %"struct.rubinius::Object"* %stack_load49 to i64, !dbg !27
  %and51 = and i64 %as_int50, 15, !dbg !27
  %is_true52 = icmp eq i64 %and51, 10, !dbg !27
  br i1 %is_true52, label %ip25, label %continue53, !dbg !27

check_class_id:                                   ; preds = %ip10
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load32, i32 0, i32 0, i32 1, !dbg !27
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !27
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !27
  %class_id = load i32* %class_id_pos, !dbg !27
  %check_class_id36 = icmp eq i32 %class_id, 77, !dbg !27
  br i1 %check_class_id36, label %correct_class, label %class_fallback28, !dbg !27

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !27
  %serial_id = load i32* %serial_id_pos, !dbg !27
  %check_serial_id = icmp eq i32 %serial_id, 224, !dbg !27
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback29, !dbg !27

class_fallback28:                                 ; preds = %correct_serial, %check_class_id, %ip10
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load44 = load %"struct.rubinius::Object"** %stack_pos43, !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load44, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 0, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !27
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !27
  store i32 13, i32* %ip_pos, !dbg !27
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check46 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !27
  br i1 %null_check46, label %bail_out, label %check_active45, !dbg !27

correct_serial:                                   ; preds = %correct_class
  %stack_pos37 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load38 = load %"struct.rubinius::Object"** %stack_pos37, !dbg !27, !rbx-classid !28
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load38) #1, !dbg !27
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !27
  %23 = icmp eq i64 %ptr2int, 34, !dbg !27
  br i1 %23, label %class_fallback28, label %continue39, !dbg !27

serial_fallback29:                                ; preds = %correct_class
  store i32 13, i32* %ip_pos, !dbg !27
  %24 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue39:                                       ; preds = %correct_serial
  %null_check42 = icmp eq %"struct.rubinius::Object"* %prim_value, null, !dbg !27
  br i1 %null_check42, label %bail_out, label %check_active41, !dbg !27

continue40:                                       ; preds = %check_active41
  br label %continue30, !dbg !27

check_active41:                                   ; preds = %continue39
  br label %continue40, !dbg !27

check_active45:                                   ; preds = %class_fallback28
  br label %continue30, !dbg !27

continue53:                                       ; preds = %ip16
  br label %ip18, !dbg !27

ip18:                                             ; preds = %continue53
  %global_serial54 = load i32* inttoptr (i64 22553876 to i32*), !dbg !27
  %constant_cache55 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), !dbg !27
  %constant_cache_pos56 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i32 0, i32 4, !dbg !27
  %constant_scope57 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos56, !dbg !27
  %scope_pos58 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !27
  %frame_scope59 = load %"struct.rubinius::ConstantScope"** %scope_pos58, !dbg !27
  %same_scope60 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope57, %frame_scope59, !dbg !27
  br i1 %same_scope60, label %check_serial61, label %use_call63, !dbg !27

check_serial61:                                   ; preds = %ip18
  %serial_pos65 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i32 0, i32 7, !dbg !27
  %serial66 = load i32* %serial_pos65, !dbg !27
  %use_cache67 = icmp eq i32 %global_serial54, %serial66, !dbg !27
  br i1 %use_cache67, label %use_cache62, label %use_call63, !dbg !27

use_cache62:                                      ; preds = %check_serial61
  %value_pos68 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i32 0, i32 2, !dbg !27
  %cached_value69 = load %"struct.rubinius::Object"** %value_pos68, !dbg !27
  br label %continue64, !dbg !27

use_call63:                                       ; preds = %check_serial61, %ip18
  store i32 18, i32* %ip_pos, !dbg !27
  %push_const_fast70 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check73 = icmp eq %"struct.rubinius::Object"* %push_const_fast70, null, !dbg !27
  br i1 %null_check73, label %bail_out, label %check_active72, !dbg !27

continue64:                                       ; preds = %continue71, %use_cache62
  %constant74 = phi %"struct.rubinius::Object"* [ %cached_value69, %use_cache62 ], [ %push_const_fast70, %continue71 ], !dbg !27, !rbx-classid !30
  %stack_pos75 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %constant74, %"struct.rubinius::Object"** %stack_pos75, !dbg !27
  %stack_pos76 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load77 = load %"struct.rubinius::Object"** %stack_pos76, !dbg !27, !rbx-classid !30
  %global_serial78 = load i32* inttoptr (i64 22553876 to i32*), !dbg !27
  %constant_cache79 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), !dbg !27
  %constant_cache_pos80 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i32 0, i32 4, !dbg !27
  %constant_scope81 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos80, !dbg !27
  %scope_pos82 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !27
  %frame_scope83 = load %"struct.rubinius::ConstantScope"** %scope_pos82, !dbg !27
  %same_scope84 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope81, %frame_scope83, !dbg !27
  br i1 %same_scope84, label %check_serial85, label %use_call87, !dbg !27

continue71:                                       ; preds = %check_active72
  br label %continue64, !dbg !27

check_active72:                                   ; preds = %use_call63
  br label %continue71, !dbg !27

check_serial85:                                   ; preds = %continue64
  %serial_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i32 0, i32 7, !dbg !27
  %serial90 = load i32* %serial_pos89, !dbg !27
  %use_under = icmp eq i32 %global_serial78, %serial90, !dbg !27
  br i1 %use_under, label %check_under, label %use_call87, !dbg !27

check_under:                                      ; preds = %check_serial85
  %value_pos91 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i32 0, i32 3, !dbg !27
  %cached_under = load %"struct.rubinius::Module"** %value_pos91, !dbg !27
  %downcast = bitcast %"struct.rubinius::Module"* %cached_under to %"struct.rubinius::Object"*, !dbg !27
  %use_cache92 = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load77, !dbg !27
  br i1 %use_cache92, label %use_cache86, label %use_call87, !dbg !27

use_cache86:                                      ; preds = %check_under
  %value_pos93 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i32 0, i32 2, !dbg !27
  %cached_value94 = load %"struct.rubinius::Object"** %value_pos93, !dbg !27
  br label %continue88, !dbg !27

use_call87:                                       ; preds = %check_under, %check_serial85, %continue64
  store i32 20, i32* %ip_pos, !dbg !27
  %constant95 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load77) #0, !dbg !27
  %null_check98 = icmp eq %"struct.rubinius::Object"* %constant95, null, !dbg !27
  br i1 %null_check98, label %bail_out, label %check_active97, !dbg !27

continue88:                                       ; preds = %continue96, %use_cache86
  %constant99 = phi %"struct.rubinius::Object"* [ %cached_value94, %use_cache86 ], [ %constant95, %continue96 ], !dbg !27, !rbx-classid !31
  %stack_pos100 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %constant99, %"struct.rubinius::Object"** %stack_pos100, !dbg !27
  %stack_pos101 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load102 = load %"struct.rubinius::Object"** %stack_pos101, !dbg !27, !rbx-classid !31
  br label %return_pad, !dbg !27

ip25:                                             ; preds = %ip16
  %stack_pos103 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos103, !dbg !27
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !32
  %stack_pos104 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos104, !dbg !32
  %local_pos105 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !32
  %local106 = load %"struct.rubinius::Object"** %local_pos105, !dbg !32, !rbx-classid !28
  %stack_pos107 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos107, !dbg !32
  %stack_pos111 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load112 = load %"struct.rubinius::Object"** %stack_pos111, !dbg !32
  %cast113 = ptrtoint %"struct.rubinius::Object"* %stack_load112 to i64, !dbg !32
  %masked114 = and i64 %cast113, 3, !dbg !32
  %is_reference115 = icmp eq i64 %masked114, 0, !dbg !32
  br i1 %is_reference115, label %check_class_id116, label %class_fallback108, !dbg !32

continue96:                                       ; preds = %check_active97
  br label %continue88, !dbg !27

check_active97:                                   ; preds = %use_call87
  br label %continue96, !dbg !27

continue110:                                      ; preds = %continue798
  %local_pos802 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !32
  %stack_pos803 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load804 = load %"struct.rubinius::Object"** %stack_pos803, !dbg !32
  store %"struct.rubinius::Object"* %stack_load804, %"struct.rubinius::Object"** %local_pos802, !dbg !32
  %local_pos805 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !26
  %local806 = load %"struct.rubinius::Object"** %local_pos805, !dbg !26, !rbx-classid !28
  %stack_pos807 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %local806, %"struct.rubinius::Object"** %stack_pos807, !dbg !26
  %code_pos808 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !26
  %code809 = load %"struct.rubinius::CompiledCode"** %code_pos808, !dbg !26
  %literals_pos810 = getelementptr %"struct.rubinius::CompiledCode"* %code809, i32 0, i32 17, !dbg !26
  %literals811 = load %"struct.rubinius::Tuple"** %literals_pos810, !dbg !26
  %literal_pos812 = getelementptr %"struct.rubinius::Tuple"* %literals811, i32 0, i32 2, i32 5, !dbg !26
  %literal813 = load %"struct.rubinius::Object"** %literal_pos812, !dbg !26, !rbx-classid !33
  %stack_pos814 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %literal813, %"struct.rubinius::Object"** %stack_pos814, !dbg !26
  %stack_pos818 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load819 = load %"struct.rubinius::Object"** %stack_pos818, !dbg !26, !rbx-classid !28
  %cast820 = ptrtoint %"struct.rubinius::Object"* %stack_load819 to i64, !dbg !26
  %masked821 = and i64 %cast820, 3, !dbg !26
  %is_reference822 = icmp eq i64 %masked821, 0, !dbg !26
  br i1 %is_reference822, label %check_class_id823, label %class_fallback815, !dbg !26

check_class_id116:                                ; preds = %ip25
  %class_pos119 = getelementptr %"struct.rubinius::Object"* %stack_load112, i32 0, i32 0, i32 1, !dbg !32
  %ref_class120 = load %"struct.rubinius::Class"** %class_pos119, !dbg !32
  %class_id_pos121 = getelementptr %"struct.rubinius::Class"* %ref_class120, i32 0, i32 4, !dbg !32
  %class_id122 = load i32* %class_id_pos121, !dbg !32
  %check_class_id123 = icmp eq i32 %class_id122, 451, !dbg !32
  br i1 %check_class_id123, label %correct_class117, label %class_fallback108, !dbg !32

correct_class117:                                 ; preds = %check_class_id116
  %serial_id_pos124 = getelementptr %"struct.rubinius::Class"* %ref_class120, i32 0, i32 5, !dbg !32
  %serial_id125 = load i32* %serial_id_pos124, !dbg !32
  %check_serial_id126 = icmp eq i32 %serial_id125, 314, !dbg !32
  br i1 %check_serial_id126, label %correct_serial118, label %serial_fallback109, !dbg !32

class_fallback108:                                ; preds = %check_class_id116, %ip25
  store i32 30, i32* %ip_pos, !dbg !32
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 30, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !32
  br label %return_pad, !dbg !32

correct_serial118:                                ; preds = %correct_class117
  %stack_pos129 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  %stack_load130 = load %"struct.rubinius::Object"** %stack_pos129, !dbg !32, !rbx-classid !28
  %stack_pos131 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load132 = load %"struct.rubinius::Object"** %stack_pos131, !dbg !32
  br label %inline_entry, !dbg !32

serial_fallback109:                               ; preds = %correct_class117
  store i32 30, i32* %ip_pos, !dbg !32
  %26 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 30, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !32
  br label %return_pad, !dbg !32

inline_entry:                                     ; preds = %correct_serial118
  %call_frame137 = bitcast %"struct.rubinius::Object"** %cfstk136 to %"struct.rubinius::CallFrame"*, !dbg !34
  %stack138 = getelementptr %"struct.rubinius::Object"** %cfstk136, i32 9, !dbg !34
  %vars140 = bitcast %"struct.rubinius::Object"** %var_mem139 to %"struct.rubinius::StackVariables"*, !dbg !34
  %27 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 0, !dbg !34
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %27, !dbg !34
  %28 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 2, !dbg !34
  store i8* inttoptr (i64 140495703223408 to i8*), i8** %28, !dbg !34
  %compiled_code141 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495703223408 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !34
  %29 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 3, !dbg !34
  store %"struct.rubinius::CompiledCode"* %compiled_code141, %"struct.rubinius::CompiledCode"** %29, !dbg !34
  %constant_scope_pos142 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code141, i32 0, i32 13, !dbg !34
  %constant_scope143 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos142, !dbg !34
  %30 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !34
  store %"struct.rubinius::ConstantScope"* %constant_scope143, %"struct.rubinius::ConstantScope"** %30, !dbg !34
  %31 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 4, !dbg !34
  store i32 12, i32* %31, !dbg !34
  %32 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 5, !dbg !34
  store i32 0, i32* %32, !dbg !34
  %33 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 8, !dbg !34
  store %"struct.rubinius::StackVariables"* %vars140, %"struct.rubinius::StackVariables"** %33, !dbg !34
  store i32 0, i32* %counter_alloca, !dbg !34
  br label %stack_nil, !dbg !34

stack_nil:                                        ; preds = %stack_nil, %inline_entry
  %counter = load i32* %counter_alloca, !dbg !34
  %stack_pos144 = getelementptr %"struct.rubinius::Object"** %stack138, i32 %counter, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos144, !dbg !34
  %added = add i32 %counter, 1, !dbg !34
  store i32 %added, i32* %counter_alloca, !dbg !34
  %loop_check = icmp eq i32 %added, 8, !dbg !34
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !34

bottom:                                           ; preds = %stack_nil
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495703223408 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !34
  %34 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 0, !dbg !34
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %34, !dbg !34
  %35 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %stack_load132, %"struct.rubinius::Object"** %35, !dbg !34
  %36 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 4, !dbg !34
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %36, !dbg !34
  %37 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 3, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %37, !dbg !34
  %38 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 1, !dbg !34
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %38, !dbg !34
  %39 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 5, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %39, !dbg !34
  %local_pos145 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos145, !dbg !34
  %local_pos146 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 1, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos146, !dbg !34
  %local_pos147 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 2, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos147, !dbg !34
  %local_pos148 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %stack_load130, %"struct.rubinius::Object"** %local_pos148, !dbg !34
  br label %method_body133, !dbg !34

bail_out149:                                      ; preds = %continue782, %continue769, %continue762, %continue734, %use_call733, %continue707, %continue695, %continue688, %continue666, %use_call665, %ip105, %ip97, %ip89, %continue547, %use_call546, %continue497, %use_call496, %return_pad402, %use_call364, %ip36, %continue298, %use_call297, %return_pad191
  %rth150 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137), !dbg !34
  br i1 %rth150, label %ret_raise_val151, label %ret_null152, !dbg !34

ret_raise_val151:                                 ; preds = %bail_out149
  %crv153 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !34
  br label %return_pad127, !dbg !34

ret_null152:                                      ; preds = %bail_out149
  br label %return_pad127, !dbg !34

method_body133:                                   ; preds = %bottom
  %ip_pos154 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 5, !dbg !34
  %out_args_name155 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !34
  %out_args_recv156 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !34
  %out_args_block157 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !34
  %out_args_total158 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !34
  %out_args_arguments159 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !34
  %out_args_container160 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !34
  %stack_pos161 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos161, !dbg !34
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  %stack_load163 = load %"struct.rubinius::Object"** %stack_pos162, !dbg !34
  %as_int164 = ptrtoint %"struct.rubinius::Object"* %stack_load163 to i64, !dbg !34
  %and165 = and i64 %as_int164, 15, !dbg !34
  %is_true166 = icmp ne i64 %and165, 10, !dbg !34
  br i1 %is_true166, label %ip8, label %continue167, !dbg !34

continue167:                                      ; preds = %method_body133
  br label %ip4, !dbg !34

ip4:                                              ; preds = %continue167
  %stack_pos168 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos168, !dbg !34
  %local_pos169 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 1, !dbg !34
  %stack_pos170 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  %stack_load171 = load %"struct.rubinius::Object"** %stack_pos170, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load171, %"struct.rubinius::Object"** %local_pos169, !dbg !34
  br label %ip8, !dbg !34

ip8:                                              ; preds = %ip4, %method_body133
  %stack_pos172 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos172, !dbg !34
  %stack_pos173 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  %stack_load174 = load %"struct.rubinius::Object"** %stack_pos173, !dbg !34
  %as_int175 = ptrtoint %"struct.rubinius::Object"* %stack_load174 to i64, !dbg !34
  %and176 = and i64 %as_int175, 15, !dbg !34
  %is_true177 = icmp ne i64 %and176, 10, !dbg !34
  br i1 %is_true177, label %ip16134, label %continue178, !dbg !34

continue178:                                      ; preds = %ip8
  br label %ip12, !dbg !34

ip12:                                             ; preds = %continue178
  %stack_pos179 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos179, !dbg !34
  %local_pos180 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 2, !dbg !34
  %stack_pos181 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !34
  %stack_load182 = load %"struct.rubinius::Object"** %stack_pos181, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load182, %"struct.rubinius::Object"** %local_pos180, !dbg !34
  br label %ip16134, !dbg !34

ip16134:                                          ; preds = %ip12, %ip8
  %local_pos183 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 2, !dbg !36
  %local184 = load %"struct.rubinius::Object"** %local_pos183, !dbg !36, !rbx-classid !37
  %stack_pos185 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %local184, %"struct.rubinius::Object"** %stack_pos185, !dbg !36
  %stack_pos189 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  %stack_load190 = load %"struct.rubinius::Object"** %stack_pos189, !dbg !36, !rbx-classid !37
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load190, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !36
  br i1 %is_immediate, label %guarded_body, label %class_fallback186, !dbg !36

serial_fallback187:                               ; No predecessors!
  store i32 18, i32* %ip_pos154, !dbg !36
  %40 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 18, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad127, !dbg !36

continue188:                                      ; preds = %continue270
  %stack_pos274 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  %stack_load275 = load %"struct.rubinius::Object"** %stack_pos274, !dbg !36
  %stack_pos276 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %stack_load275, %"struct.rubinius::Object"** %stack_pos276, !dbg !36
  %stack_pos277 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !36
  %stack_load278 = load %"struct.rubinius::Object"** %stack_pos277, !dbg !36
  %as_int279 = ptrtoint %"struct.rubinius::Object"* %stack_load278 to i64, !dbg !36
  %and280 = and i64 %as_int279, 15, !dbg !36
  %is_true281 = icmp eq i64 %and280, 10, !dbg !36
  br i1 %is_true281, label %ip34, label %continue282, !dbg !36

guarded_body:                                     ; preds = %ip16134
  %stack_pos193 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  %stack_load194 = load %"struct.rubinius::Object"** %stack_pos193, !dbg !36, !rbx-classid !37
  br label %inline_entry195, !dbg !36

class_fallback186:                                ; preds = %ip16134
  store i32 18, i32* %ip_pos154, !dbg !36
  %41 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 18, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !36
  br label %return_pad127, !dbg !36

inline_entry195:                                  ; preds = %guarded_body
  %call_frame200 = bitcast %"struct.rubinius::Object"** %cfstk199 to %"struct.rubinius::CallFrame"*, !dbg !38
  %stack201 = getelementptr %"struct.rubinius::Object"** %cfstk199, i32 9, !dbg !38
  %vars203 = bitcast %"struct.rubinius::Object"** %var_mem202 to %"struct.rubinius::StackVariables"*, !dbg !38
  %42 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 0, !dbg !38
  store %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallFrame"** %42, !dbg !38
  %43 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 2, !dbg !38
  store i8* inttoptr (i64 140495696681232 to i8*), i8** %43, !dbg !38
  %compiled_code204 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495696681232 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !38
  %44 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 3, !dbg !38
  store %"struct.rubinius::CompiledCode"* %compiled_code204, %"struct.rubinius::CompiledCode"** %44, !dbg !38
  %constant_scope_pos205 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code204, i32 0, i32 13, !dbg !38
  %constant_scope206 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos205, !dbg !38
  %45 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 1, !dbg !38
  store %"struct.rubinius::ConstantScope"* %constant_scope206, %"struct.rubinius::ConstantScope"** %45, !dbg !38
  %46 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 4, !dbg !38
  store i32 12, i32* %46, !dbg !38
  %47 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 5, !dbg !38
  store i32 0, i32* %47, !dbg !38
  %48 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 8, !dbg !38
  store %"struct.rubinius::StackVariables"* %vars203, %"struct.rubinius::StackVariables"** %48, !dbg !38
  %stack_pos207 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos207, !dbg !38
  %stack_pos208 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos208, !dbg !38
  %stack_pos209 = getelementptr %"struct.rubinius::Object"** %stack201, i32 2, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos209, !dbg !38
  %module210 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495696681232 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !38
  %49 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 0, !dbg !38
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %49, !dbg !38
  %50 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %stack_load194, %"struct.rubinius::Object"** %50, !dbg !38
  %51 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 4, !dbg !38
  store %"struct.rubinius::Module"* %module210, %"struct.rubinius::Module"** %51, !dbg !38
  %52 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 3, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %52, !dbg !38
  %53 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 1, !dbg !38
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %53, !dbg !38
  %54 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 5, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %54, !dbg !38
  br label %method_body196, !dbg !38

bail_out211:                                      ; No predecessors!
  %rth212 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame200), !dbg !38
  br i1 %rth212, label %ret_raise_val213, label %ret_null214, !dbg !38

ret_raise_val213:                                 ; preds = %bail_out211
  %crv215 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !38
  br label %return_pad191, !dbg !38

ret_null214:                                      ; preds = %bail_out211
  br label %return_pad191, !dbg !38

method_body196:                                   ; preds = %inline_entry195
  %ip_pos216 = getelementptr %"struct.rubinius::CallFrame"* %call_frame200, i32 0, i32 5, !dbg !38
  %out_args_name217 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !38
  %out_args_recv218 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !38
  %out_args_block219 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !38
  %out_args_total220 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !38
  %out_args_arguments221 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !38
  %out_args_container222 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !38
  %system_object223 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !39
  %stack_pos224 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %system_object223, %"struct.rubinius::Object"** %stack_pos224, !dbg !39
  %55 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 2, !dbg !39
  %self = load %"struct.rubinius::Object"** %55, !dbg !39, !rbx-classid !40
  %stack_pos225 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos225, !dbg !39
  %stack_pos226 = getelementptr %"struct.rubinius::Object"** %stack201, i32 2, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos226, !dbg !39
  %stack_pos230 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !39
  %stack_load231 = load %"struct.rubinius::Object"** %stack_pos230, !dbg !39, !rbx-classid !40
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack201, i32 2, !dbg !39
  %stack_load233 = load %"struct.rubinius::Object"** %stack_pos232, !dbg !39, !rbx-classid !41
  %identity_equal = icmp eq %"struct.rubinius::Object"* %stack_load231, %stack_load233, !dbg !39
  %select_bool = select i1 %identity_equal, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos234 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %select_bool, %"struct.rubinius::Object"** %stack_pos234, !dbg !39
  br label %continue229, !dbg !39

class_fallback227:                                ; No predecessors!
  store i32 3, i32* %ip_pos216, !dbg !39
  %56 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame200, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !39
  br label %return_pad191, !dbg !39

serial_fallback228:                               ; No predecessors!
  store i32 3, i32* %ip_pos216, !dbg !39
  %57 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame200, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad191, !dbg !39

continue229:                                      ; preds = %method_body196
  %stack_pos235 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !39
  %stack_load236 = load %"struct.rubinius::Object"** %stack_pos235, !dbg !39
  %stack_pos237 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %stack_load236, %"struct.rubinius::Object"** %stack_pos237, !dbg !39
  %stack_pos238 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !39
  %stack_load239 = load %"struct.rubinius::Object"** %stack_pos238, !dbg !39
  %as_int240 = ptrtoint %"struct.rubinius::Object"* %stack_load239 to i64, !dbg !39
  %and241 = and i64 %as_int240, 15, !dbg !39
  %is_true242 = icmp ne i64 %and241, 10, !dbg !39
  br i1 %is_true242, label %ip16197, label %continue243, !dbg !39

continue243:                                      ; preds = %continue229
  br label %ip9, !dbg !39

ip9:                                              ; preds = %continue243
  %system_object244 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !42
  %stack_pos245 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %system_object244, %"struct.rubinius::Object"** %stack_pos245, !dbg !42
  %58 = getelementptr %"struct.rubinius::StackVariables"* %vars203, i32 0, i32 2, !dbg !42
  %self246 = load %"struct.rubinius::Object"** %58, !dbg !42, !rbx-classid !40
  %stack_pos247 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !42
  store %"struct.rubinius::Object"* %self246, %"struct.rubinius::Object"** %stack_pos247, !dbg !42
  %stack_pos248 = getelementptr %"struct.rubinius::Object"** %stack201, i32 2, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos248, !dbg !42
  %stack_pos252 = getelementptr %"struct.rubinius::Object"** %stack201, i32 1, !dbg !42
  %stack_load253 = load %"struct.rubinius::Object"** %stack_pos252, !dbg !42, !rbx-classid !40
  %stack_pos254 = getelementptr %"struct.rubinius::Object"** %stack201, i32 2, !dbg !42
  %stack_load255 = load %"struct.rubinius::Object"** %stack_pos254, !dbg !42, !rbx-classid !43
  %identity_equal256 = icmp eq %"struct.rubinius::Object"* %stack_load253, %stack_load255, !dbg !42
  %select_bool257 = select i1 %identity_equal256, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos258 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %select_bool257, %"struct.rubinius::Object"** %stack_pos258, !dbg !42
  br label %continue251, !dbg !42

class_fallback249:                                ; No predecessors!
  store i32 13, i32* %ip_pos216, !dbg !42
  %59 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame200, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !42
  br label %return_pad191, !dbg !42

serial_fallback250:                               ; No predecessors!
  store i32 13, i32* %ip_pos216, !dbg !42
  %60 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame200, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !42
  br label %return_pad191, !dbg !42

continue251:                                      ; preds = %ip9
  br label %ip16197, !dbg !42

ip16197:                                          ; preds = %continue251, %continue229
  %stack_pos259 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !42
  %stack_load260 = load %"struct.rubinius::Object"** %stack_pos259, !dbg !42
  %as_int261 = ptrtoint %"struct.rubinius::Object"* %stack_load260 to i64, !dbg !42
  %and262 = and i64 %as_int261, 15, !dbg !42
  %is_true263 = icmp eq i64 %and262, 10, !dbg !42
  br i1 %is_true263, label %ip21, label %continue264, !dbg !42

continue264:                                      ; preds = %ip16197
  br label %ip18198, !dbg !42

ip18198:                                          ; preds = %continue264
  %stack_pos265 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos265, !dbg !42
  br label %ip22, !dbg !42

continue266:                                      ; No predecessors!
  br label %ip21, !dbg !42

ip22:                                             ; preds = %ip21, %ip18198
  %stack_pos267 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !44
  %stack_load268 = load %"struct.rubinius::Object"** %stack_pos267, !dbg !44
  br label %return_pad191, !dbg !44

ip21:                                             ; preds = %continue266, %ip16197
  %stack_pos269 = getelementptr %"struct.rubinius::Object"** %stack201, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos269, !dbg !42
  br label %ip22, !dbg !42

return_pad191:                                    ; preds = %ip22, %serial_fallback250, %class_fallback249, %serial_fallback228, %class_fallback227, %ret_raise_val213, %ret_null214
  %return_phi192 = phi %"struct.rubinius::Object"* [ null, %ret_null214 ], [ %crv215, %ret_raise_val213 ], [ %56, %class_fallback227 ], [ %57, %serial_fallback228 ], [ %59, %class_fallback249 ], [ %60, %serial_fallback250 ], [ %stack_load268, %ip22 ]
  %null_check272 = icmp eq %"struct.rubinius::Object"* %return_phi192, null, !dbg !36
  br i1 %null_check272, label %bail_out149, label %check_active271, !dbg !36

continue270:                                      ; preds = %check_active271
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %return_phi192, %"struct.rubinius::Object"** %stack_pos273, !dbg !36
  br label %continue188, !dbg !36

check_active271:                                  ; preds = %return_pad191
  br label %continue270, !dbg !36

continue282:                                      ; preds = %continue188
  br label %ip24, !dbg !36

ip24:                                             ; preds = %continue282
  %61 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !36
  %self283 = load %"struct.rubinius::Object"** %61, !dbg !36, !rbx-classid !45
  %stack_pos284 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %self283, %"struct.rubinius::Object"** %stack_pos284, !dbg !36
  %local_pos285 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !36
  %local286 = load %"struct.rubinius::Object"** %local_pos285, !dbg !36, !rbx-classid !28
  %stack_pos287 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %local286, %"struct.rubinius::Object"** %stack_pos287, !dbg !36
  %global_serial288 = load i32* inttoptr (i64 22553876 to i32*), !dbg !36
  %constant_cache289 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473592 to %"struct.rubinius::ConstantCache"**), !dbg !36
  %constant_cache_pos290 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache289, i32 0, i32 4, !dbg !36
  %constant_scope291 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos290, !dbg !36
  %scope_pos292 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !36
  %frame_scope293 = load %"struct.rubinius::ConstantScope"** %scope_pos292, !dbg !36
  %same_scope294 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope291, %frame_scope293, !dbg !36
  br i1 %same_scope294, label %check_serial295, label %use_call297, !dbg !36

check_serial295:                                  ; preds = %ip24
  %serial_pos299 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache289, i32 0, i32 7, !dbg !36
  %serial300 = load i32* %serial_pos299, !dbg !36
  %use_cache301 = icmp eq i32 %global_serial288, %serial300, !dbg !36
  br i1 %use_cache301, label %use_cache296, label %use_call297, !dbg !36

use_cache296:                                     ; preds = %check_serial295
  %value_pos302 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache289, i32 0, i32 2, !dbg !36
  %cached_value303 = load %"struct.rubinius::Object"** %value_pos302, !dbg !36
  br label %continue298, !dbg !36

use_call297:                                      ; preds = %check_serial295, %ip24
  store i32 28, i32* %ip_pos154, !dbg !36
  %push_const_fast304 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !36
  %null_check307 = icmp eq %"struct.rubinius::Object"* %push_const_fast304, null, !dbg !36
  br i1 %null_check307, label %bail_out149, label %check_active306, !dbg !36

continue298:                                      ; preds = %continue305, %use_cache296
  %constant308 = phi %"struct.rubinius::Object"* [ %cached_value303, %use_cache296 ], [ %push_const_fast304, %continue305 ], !dbg !36, !rbx-classid !46
  %stack_pos309 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !36
  store %"struct.rubinius::Object"* %constant308, %"struct.rubinius::Object"** %stack_pos309, !dbg !36
  %stack_pos310 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  %stack_load311 = load %"struct.rubinius::Object"** %stack_pos310, !dbg !36, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load311, %"struct.rubinius::Object"** %out_args_recv156, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 19758 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !36
  store i32 2, i32* %out_args_total158, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !36
  %stack_pos312 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos312, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !36
  %cache_const313 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473616 to %"struct.rubinius::CallSite"**), !dbg !36
  %execute_pos314 = getelementptr %"struct.rubinius::CallSite"* %cache_const313, i32 0, i32 2, !dbg !36
  %execute315 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos314, !dbg !36
  store i32 31, i32* %ip_pos154, !dbg !36
  %call_site_execute316 = call %"struct.rubinius::Object"* %execute315(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const313, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check319 = icmp eq %"struct.rubinius::Object"* %call_site_execute316, null, !dbg !36
  br i1 %null_check319, label %bail_out149, label %check_active318, !dbg !36

continue305:                                      ; preds = %check_active306
  br label %continue298, !dbg !36

check_active306:                                  ; preds = %use_call297
  br label %continue305, !dbg !36

continue317:                                      ; preds = %check_active318
  %stack_pos320 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %call_site_execute316, %"struct.rubinius::Object"** %stack_pos320, !dbg !36
  br label %ip34, !dbg !36

ip34:                                             ; preds = %continue317, %continue188
  %stack_pos321 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  %stack_load322 = load %"struct.rubinius::Object"** %stack_pos321, !dbg !36
  %as_int323 = ptrtoint %"struct.rubinius::Object"* %stack_load322 to i64, !dbg !36
  %and324 = and i64 %as_int323, 15, !dbg !36
  %is_true325 = icmp eq i64 %and324, 10, !dbg !36
  br i1 %is_true325, label %ip48135, label %continue326, !dbg !36

check_active318:                                  ; preds = %continue298
  br label %continue317, !dbg !36

continue326:                                      ; preds = %ip34
  br label %ip36, !dbg !36

ip36:                                             ; preds = %continue326
  %62 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !47
  %self327 = load %"struct.rubinius::Object"** %62, !dbg !47, !rbx-classid !45
  %stack_pos328 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %self327, %"struct.rubinius::Object"** %stack_pos328, !dbg !47
  %local_pos329 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !47
  %local330 = load %"struct.rubinius::Object"** %local_pos329, !dbg !47, !rbx-classid !28
  %stack_pos331 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !47
  store %"struct.rubinius::Object"* %local330, %"struct.rubinius::Object"** %stack_pos331, !dbg !47
  %local_pos332 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 1, !dbg !47
  %local333 = load %"struct.rubinius::Object"** %local_pos332, !dbg !47, !rbx-classid !48
  %stack_pos334 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !47
  store %"struct.rubinius::Object"* %local333, %"struct.rubinius::Object"** %stack_pos334, !dbg !47
  %stack_pos335 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !47
  %stack_load336 = load %"struct.rubinius::Object"** %stack_pos335, !dbg !47, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load336, %"struct.rubinius::Object"** %out_args_recv156, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 19838 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !47
  store i32 2, i32* %out_args_total158, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !47
  %stack_pos337 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos337, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !47
  %cache_const338 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473704 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos339 = getelementptr %"struct.rubinius::CallSite"* %cache_const338, i32 0, i32 2, !dbg !47
  %execute340 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos339, !dbg !47
  store i32 42, i32* %ip_pos154, !dbg !47
  %call_site_execute341 = call %"struct.rubinius::Object"* %execute340(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const338, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check344 = icmp eq %"struct.rubinius::Object"* %call_site_execute341, null, !dbg !47
  br i1 %null_check344, label %bail_out149, label %check_active343, !dbg !47

continue342:                                      ; preds = %check_active343
  %stack_pos345 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %call_site_execute341, %"struct.rubinius::Object"** %stack_pos345, !dbg !47
  %stack_pos346 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !47
  %stack_load347 = load %"struct.rubinius::Object"** %stack_pos346, !dbg !47
  br label %return_pad127, !dbg !47

ip48135:                                          ; preds = %ip34
  %stack_pos348 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos348, !dbg !36
  %local_pos349 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !49
  %local350 = load %"struct.rubinius::Object"** %local_pos349, !dbg !49, !rbx-classid !28
  %stack_pos351 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %local350, %"struct.rubinius::Object"** %stack_pos351, !dbg !49
  %stack_pos352 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !50
  %stack_load353 = load %"struct.rubinius::Object"** %stack_pos352, !dbg !50, !rbx-classid !28
  %stack_pos354 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  store %"struct.rubinius::Object"* %stack_load353, %"struct.rubinius::Object"** %stack_pos354, !dbg !50
  %global_serial355 = load i32* inttoptr (i64 22553876 to i32*), !dbg !50
  %constant_cache356 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**), !dbg !50
  %constant_cache_pos357 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i32 0, i32 4, !dbg !50
  %constant_scope358 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos357, !dbg !50
  %scope_pos359 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !50
  %frame_scope360 = load %"struct.rubinius::ConstantScope"** %scope_pos359, !dbg !50
  %same_scope361 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope358, %frame_scope360, !dbg !50
  br i1 %same_scope361, label %check_serial362, label %use_call364, !dbg !50

check_active343:                                  ; preds = %ip36
  br label %continue342, !dbg !47

check_serial362:                                  ; preds = %ip48135
  %serial_pos366 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i32 0, i32 7, !dbg !50
  %serial367 = load i32* %serial_pos366, !dbg !50
  %use_cache368 = icmp eq i32 %global_serial355, %serial367, !dbg !50
  br i1 %use_cache368, label %use_cache363, label %use_call364, !dbg !50

use_cache363:                                     ; preds = %check_serial362
  %value_pos369 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i32 0, i32 2, !dbg !50
  %cached_value370 = load %"struct.rubinius::Object"** %value_pos369, !dbg !50
  br label %continue365, !dbg !50

use_call364:                                      ; preds = %check_serial362, %ip48135
  store i32 53, i32* %ip_pos154, !dbg !50
  %push_const_fast371 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !50
  %null_check374 = icmp eq %"struct.rubinius::Object"* %push_const_fast371, null, !dbg !50
  br i1 %null_check374, label %bail_out149, label %check_active373, !dbg !50

continue365:                                      ; preds = %continue372, %use_cache363
  %constant375 = phi %"struct.rubinius::Object"* [ %cached_value370, %use_cache363 ], [ %push_const_fast371, %continue372 ], !dbg !50, !rbx-classid !51
  %stack_pos376 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !50
  store %"struct.rubinius::Object"* %constant375, %"struct.rubinius::Object"** %stack_pos376, !dbg !50
  %stack_pos377 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !50
  %stack_load378 = load %"struct.rubinius::Object"** %stack_pos377, !dbg !50, !rbx-classid !51
  %stack_pos379 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  %stack_load380 = load %"struct.rubinius::Object"** %stack_pos379, !dbg !50, !rbx-classid !28
  %stack_pos381 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  store %"struct.rubinius::Object"* %stack_load378, %"struct.rubinius::Object"** %stack_pos381, !dbg !50
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !50
  store %"struct.rubinius::Object"* %stack_load380, %"struct.rubinius::Object"** %stack_pos382, !dbg !50
  %stack_pos386 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  %stack_load387 = load %"struct.rubinius::Object"** %stack_pos386, !dbg !50, !rbx-classid !51
  %cast388 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !50
  %masked389 = and i64 %cast388, 3, !dbg !50
  %is_reference390 = icmp eq i64 %masked389, 0, !dbg !50
  br i1 %is_reference390, label %check_class_id391, label %class_fallback383, !dbg !50

continue372:                                      ; preds = %check_active373
  br label %continue365, !dbg !50

check_active373:                                  ; preds = %use_call364
  br label %continue372, !dbg !50

continue385:                                      ; preds = %continue468
  %stack_pos472 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  %stack_load473 = load %"struct.rubinius::Object"** %stack_pos472, !dbg !50
  %as_int474 = ptrtoint %"struct.rubinius::Object"* %stack_load473 to i64, !dbg !50
  %and475 = and i64 %as_int474, 15, !dbg !50
  %is_true476 = icmp eq i64 %and475, 10, !dbg !50
  br i1 %is_true476, label %ip66, label %continue477, !dbg !50

check_class_id391:                                ; preds = %continue365
  %class_pos394 = getelementptr %"struct.rubinius::Object"* %stack_load387, i32 0, i32 0, i32 1, !dbg !50
  %ref_class395 = load %"struct.rubinius::Class"** %class_pos394, !dbg !50
  %class_id_pos396 = getelementptr %"struct.rubinius::Class"* %ref_class395, i32 0, i32 4, !dbg !50
  %class_id397 = load i32* %class_id_pos396, !dbg !50
  %check_class_id398 = icmp eq i32 %class_id397, 78, !dbg !50
  br i1 %check_class_id398, label %correct_class392, label %class_fallback383, !dbg !50

correct_class392:                                 ; preds = %check_class_id391
  %serial_id_pos399 = getelementptr %"struct.rubinius::Class"* %ref_class395, i32 0, i32 5, !dbg !50
  %serial_id400 = load i32* %serial_id_pos399, !dbg !50
  %check_serial_id401 = icmp eq i32 %serial_id400, 267, !dbg !50
  br i1 %check_serial_id401, label %correct_serial393, label %serial_fallback384, !dbg !50

class_fallback383:                                ; preds = %check_class_id391, %continue365
  store i32 56, i32* %ip_pos154, !dbg !50
  %63 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !50
  br label %return_pad127, !dbg !50

correct_serial393:                                ; preds = %correct_class392
  %stack_pos404 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !50
  %stack_load405 = load %"struct.rubinius::Object"** %stack_pos404, !dbg !50, !rbx-classid !28
  %stack_pos406 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  %stack_load407 = load %"struct.rubinius::Object"** %stack_pos406, !dbg !50, !rbx-classid !51
  br label %inline_entry408, !dbg !50

serial_fallback384:                               ; preds = %correct_class392
  store i32 56, i32* %ip_pos154, !dbg !50
  %64 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !50
  br label %return_pad127, !dbg !50

inline_entry408:                                  ; preds = %correct_serial393
  %call_frame411 = bitcast %"struct.rubinius::Object"** %cfstk410 to %"struct.rubinius::CallFrame"*, !dbg !52
  %stack412 = getelementptr %"struct.rubinius::Object"** %cfstk410, i32 9, !dbg !52
  %vars414 = bitcast %"struct.rubinius::Object"** %var_mem413 to %"struct.rubinius::StackVariables"*, !dbg !52
  %65 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 0, !dbg !52
  store %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallFrame"** %65, !dbg !52
  %66 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 2, !dbg !52
  store i8* inttoptr (i64 140495697305264 to i8*), i8** %66, !dbg !52
  %compiled_code415 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495697305264 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !52
  %67 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 3, !dbg !52
  store %"struct.rubinius::CompiledCode"* %compiled_code415, %"struct.rubinius::CompiledCode"** %67, !dbg !52
  %constant_scope_pos416 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code415, i32 0, i32 13, !dbg !52
  %constant_scope417 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos416, !dbg !52
  %68 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 1, !dbg !52
  store %"struct.rubinius::ConstantScope"* %constant_scope417, %"struct.rubinius::ConstantScope"** %68, !dbg !52
  %69 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 4, !dbg !52
  store i32 12, i32* %69, !dbg !52
  %70 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 5, !dbg !52
  store i32 0, i32* %70, !dbg !52
  %71 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 8, !dbg !52
  store %"struct.rubinius::StackVariables"* %vars414, %"struct.rubinius::StackVariables"** %71, !dbg !52
  %stack_pos418 = getelementptr %"struct.rubinius::Object"** %stack412, i32 0, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos418, !dbg !52
  %stack_pos419 = getelementptr %"struct.rubinius::Object"** %stack412, i32 1, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos419, !dbg !52
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack412, i32 2, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos420, !dbg !52
  %stack_pos421 = getelementptr %"struct.rubinius::Object"** %stack412, i32 3, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos421, !dbg !52
  %module422 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495697305264 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !52
  %72 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 0, !dbg !52
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %72, !dbg !52
  %73 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 2, !dbg !52
  store %"struct.rubinius::Object"* %stack_load407, %"struct.rubinius::Object"** %73, !dbg !52
  %74 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 4, !dbg !52
  store %"struct.rubinius::Module"* %module422, %"struct.rubinius::Module"** %74, !dbg !52
  %75 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 3, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %75, !dbg !52
  %76 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 1, !dbg !52
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %76, !dbg !52
  %77 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 5, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %77, !dbg !52
  %local_pos423 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 6, i32 0, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos423, !dbg !52
  %local_pos424 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 6, i32 0, !dbg !52
  store %"struct.rubinius::Object"* %stack_load405, %"struct.rubinius::Object"** %local_pos424, !dbg !52
  br label %method_body409, !dbg !52

bail_out425:                                      ; No predecessors!
  %rth426 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame411), !dbg !52
  br i1 %rth426, label %ret_raise_val427, label %ret_null428, !dbg !52

ret_raise_val427:                                 ; preds = %bail_out425
  %crv429 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !52
  br label %return_pad402, !dbg !52

ret_null428:                                      ; preds = %bail_out425
  br label %return_pad402, !dbg !52

method_body409:                                   ; preds = %inline_entry408
  %ip_pos430 = getelementptr %"struct.rubinius::CallFrame"* %call_frame411, i32 0, i32 5, !dbg !52
  %out_args_name431 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !52
  %out_args_recv432 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !52
  %out_args_block433 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !52
  %out_args_total434 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !52
  %out_args_arguments435 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !52
  %out_args_container436 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !52
  %system_object437 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !53
  %stack_pos438 = getelementptr %"struct.rubinius::Object"** %stack412, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %system_object437, %"struct.rubinius::Object"** %stack_pos438, !dbg !53
  %local_pos439 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 6, i32 0, !dbg !53
  %local440 = load %"struct.rubinius::Object"** %local_pos439, !dbg !53, !rbx-classid !28
  %stack_pos441 = getelementptr %"struct.rubinius::Object"** %stack412, i32 1, !dbg !53
  store %"struct.rubinius::Object"* %local440, %"struct.rubinius::Object"** %stack_pos441, !dbg !53
  %78 = getelementptr %"struct.rubinius::StackVariables"* %vars414, i32 0, i32 2, !dbg !53
  %self442 = load %"struct.rubinius::Object"** %78, !dbg !53, !rbx-classid !54
  %stack_pos443 = getelementptr %"struct.rubinius::Object"** %stack412, i32 2, !dbg !53
  store %"struct.rubinius::Object"* %self442, %"struct.rubinius::Object"** %stack_pos443, !dbg !53
  %stack_pos447 = getelementptr %"struct.rubinius::Object"** %stack412, i32 1, !dbg !53
  %stack_load448 = load %"struct.rubinius::Object"** %stack_pos447, !dbg !53, !rbx-classid !28
  %stack_pos449 = getelementptr %"struct.rubinius::Object"** %stack412, i32 2, !dbg !53
  %stack_load450 = load %"struct.rubinius::Object"** %stack_pos449, !dbg !53, !rbx-classid !54
  %cast456 = ptrtoint %"struct.rubinius::Object"* %stack_load448 to i64, !dbg !53
  %masked457 = and i64 %cast456, 3, !dbg !53
  %is_reference458 = icmp eq i64 %masked457, 0, !dbg !53
  br i1 %is_reference458, label %use_cache455, label %negative454, !dbg !53

class_fallback444:                                ; No predecessors!
  store i32 4, i32* %ip_pos430, !dbg !53
  %79 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame411, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !53
  br label %return_pad402, !dbg !53

serial_fallback445:                               ; No predecessors!
  store i32 4, i32* %ip_pos430, !dbg !53
  %80 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame411, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !53
  br label %return_pad402, !dbg !53

continue446:                                      ; preds = %continue451
  %stack_pos466 = getelementptr %"struct.rubinius::Object"** %stack412, i32 0, !dbg !53
  %stack_load467 = load %"struct.rubinius::Object"** %stack_pos466, !dbg !53
  br label %return_pad402, !dbg !53

return_pad402:                                    ; preds = %continue446, %serial_fallback445, %class_fallback444, %ret_raise_val427, %ret_null428
  %return_phi403 = phi %"struct.rubinius::Object"* [ null, %ret_null428 ], [ %crv429, %ret_raise_val427 ], [ %79, %class_fallback444 ], [ %80, %serial_fallback445 ], [ %stack_load467, %continue446 ]
  %null_check470 = icmp eq %"struct.rubinius::Object"* %return_phi403, null, !dbg !50
  br i1 %null_check470, label %bail_out149, label %check_active469, !dbg !50

continue451:                                      ; preds = %use_call452, %negative454, %positive453
  %constant464 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive453 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative454 ], [ %kind_of463, %use_call452 ], !dbg !53
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack412, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %constant464, %"struct.rubinius::Object"** %stack_pos465, !dbg !53
  br label %continue446, !dbg !53

use_call452:                                      ; No predecessors!
  %kind_of463 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load448, %"struct.rubinius::Object"* %stack_load450) #0, !dbg !53
  br label %continue451, !dbg !53

positive453:                                      ; preds = %use_cache455
  br label %continue451, !dbg !53

negative454:                                      ; preds = %use_cache455, %method_body409
  br label %continue451, !dbg !53

use_cache455:                                     ; preds = %method_body409
  %word_pos459 = getelementptr %"struct.rubinius::Object"* %stack_load448, i32 0, i32 0, i32 0, i32 0, !dbg !53
  %flags460 = load i64* %word_pos459, !dbg !53
  %mask461 = and i64 %flags460, 255, !dbg !53
  %is_type462 = icmp eq i64 %mask461, 35, !dbg !53
  br i1 %is_type462, label %positive453, label %negative454, !dbg !53

continue468:                                      ; preds = %check_active469
  %stack_pos471 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !50
  store %"struct.rubinius::Object"* %return_phi403, %"struct.rubinius::Object"** %stack_pos471, !dbg !50
  br label %continue385, !dbg !50

check_active469:                                  ; preds = %return_pad402
  br label %continue468, !dbg !50

continue477:                                      ; preds = %continue385
  br label %ip61, !dbg !50

ip61:                                             ; preds = %continue477
  %local_pos478 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !55
  %local479 = load %"struct.rubinius::Object"** %local_pos478, !dbg !55, !rbx-classid !28
  %stack_pos480 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %local479, %"struct.rubinius::Object"** %stack_pos480, !dbg !55
  br label %ip161, !dbg !55

continue481:                                      ; No predecessors!
  br label %ip66, !dbg !55

ip161:                                            ; preds = %continue793, %continue718, %continue567, %ip61
  %stack_pos482 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !56
  %stack_load483 = load %"struct.rubinius::Object"** %stack_pos482, !dbg !56
  br label %return_pad127, !dbg !56

ip66:                                             ; preds = %continue481, %continue385
  %stack_pos484 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !57
  %stack_load485 = load %"struct.rubinius::Object"** %stack_pos484, !dbg !57
  %stack_pos486 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  store %"struct.rubinius::Object"* %stack_load485, %"struct.rubinius::Object"** %stack_pos486, !dbg !57
  %global_serial487 = load i32* inttoptr (i64 22553876 to i32*), !dbg !57
  %constant_cache488 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**), !dbg !57
  %constant_cache_pos489 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i32 0, i32 4, !dbg !57
  %constant_scope490 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos489, !dbg !57
  %scope_pos491 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !57
  %frame_scope492 = load %"struct.rubinius::ConstantScope"** %scope_pos491, !dbg !57
  %same_scope493 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope490, %frame_scope492, !dbg !57
  br i1 %same_scope493, label %check_serial494, label %use_call496, !dbg !57

check_serial494:                                  ; preds = %ip66
  %serial_pos498 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i32 0, i32 7, !dbg !57
  %serial499 = load i32* %serial_pos498, !dbg !57
  %use_cache500 = icmp eq i32 %global_serial487, %serial499, !dbg !57
  br i1 %use_cache500, label %use_cache495, label %use_call496, !dbg !57

use_cache495:                                     ; preds = %check_serial494
  %value_pos501 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i32 0, i32 2, !dbg !57
  %cached_value502 = load %"struct.rubinius::Object"** %value_pos501, !dbg !57
  br label %continue497, !dbg !57

use_call496:                                      ; preds = %check_serial494, %ip66
  store i32 67, i32* %ip_pos154, !dbg !57
  %push_const_fast503 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !57
  %null_check506 = icmp eq %"struct.rubinius::Object"* %push_const_fast503, null, !dbg !57
  br i1 %null_check506, label %bail_out149, label %check_active505, !dbg !57

continue497:                                      ; preds = %continue504, %use_cache495
  %constant507 = phi %"struct.rubinius::Object"* [ %cached_value502, %use_cache495 ], [ %push_const_fast503, %continue504 ], !dbg !57, !rbx-classid !58
  %stack_pos508 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !57
  store %"struct.rubinius::Object"* %constant507, %"struct.rubinius::Object"** %stack_pos508, !dbg !57
  %stack_pos509 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !57
  %stack_load510 = load %"struct.rubinius::Object"** %stack_pos509, !dbg !57, !rbx-classid !58
  %stack_pos511 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  %stack_load512 = load %"struct.rubinius::Object"** %stack_pos511, !dbg !57
  %stack_pos513 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  store %"struct.rubinius::Object"* %stack_load510, %"struct.rubinius::Object"** %stack_pos513, !dbg !57
  %stack_pos514 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !57
  store %"struct.rubinius::Object"* %stack_load512, %"struct.rubinius::Object"** %stack_pos514, !dbg !57
  %stack_pos515 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  %stack_load516 = load %"struct.rubinius::Object"** %stack_pos515, !dbg !57, !rbx-classid !58
  store %"struct.rubinius::Object"* %stack_load516, %"struct.rubinius::Object"** %out_args_recv156, !dbg !57
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !57
  store i32 1, i32* %out_args_total158, !dbg !57
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !57
  %stack_pos517 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !57
  store %"struct.rubinius::Object"** %stack_pos517, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !57
  %cache_const518 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473928 to %"struct.rubinius::CallSite"**), !dbg !57
  %execute_pos519 = getelementptr %"struct.rubinius::CallSite"* %cache_const518, i32 0, i32 2, !dbg !57
  %execute520 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos519, !dbg !57
  store i32 70, i32* %ip_pos154, !dbg !57
  %call_site_execute521 = call %"struct.rubinius::Object"* %execute520(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const518, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !57
  %null_check524 = icmp eq %"struct.rubinius::Object"* %call_site_execute521, null, !dbg !57
  br i1 %null_check524, label %bail_out149, label %check_active523, !dbg !57

continue504:                                      ; preds = %check_active505
  br label %continue497, !dbg !57

check_active505:                                  ; preds = %use_call496
  br label %continue504, !dbg !57

continue522:                                      ; preds = %check_active523
  %stack_pos525 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  store %"struct.rubinius::Object"* %call_site_execute521, %"struct.rubinius::Object"** %stack_pos525, !dbg !57
  %stack_pos526 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !57
  %stack_load527 = load %"struct.rubinius::Object"** %stack_pos526, !dbg !57
  %as_int528 = ptrtoint %"struct.rubinius::Object"* %stack_load527 to i64, !dbg !57
  %and529 = and i64 %as_int528, 15, !dbg !57
  %is_true530 = icmp eq i64 %and529, 10, !dbg !57
  br i1 %is_true530, label %ip89, label %continue531, !dbg !57

check_active523:                                  ; preds = %continue497
  br label %continue522, !dbg !57

continue531:                                      ; preds = %continue522
  br label %ip75, !dbg !57

ip75:                                             ; preds = %continue531
  %81 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !59
  %self532 = load %"struct.rubinius::Object"** %81, !dbg !59, !rbx-classid !45
  %stack_pos533 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !59
  store %"struct.rubinius::Object"* %self532, %"struct.rubinius::Object"** %stack_pos533, !dbg !59
  %local_pos534 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !59
  %local535 = load %"struct.rubinius::Object"** %local_pos534, !dbg !59, !rbx-classid !28
  %stack_pos536 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !59
  store %"struct.rubinius::Object"* %local535, %"struct.rubinius::Object"** %stack_pos536, !dbg !59
  %global_serial537 = load i32* inttoptr (i64 22553876 to i32*), !dbg !59
  %constant_cache538 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**), !dbg !59
  %constant_cache_pos539 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 4, !dbg !59
  %constant_scope540 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos539, !dbg !59
  %scope_pos541 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !59
  %frame_scope542 = load %"struct.rubinius::ConstantScope"** %scope_pos541, !dbg !59
  %same_scope543 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope540, %frame_scope542, !dbg !59
  br i1 %same_scope543, label %check_serial544, label %use_call546, !dbg !59

check_serial544:                                  ; preds = %ip75
  %serial_pos548 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 7, !dbg !59
  %serial549 = load i32* %serial_pos548, !dbg !59
  %use_cache550 = icmp eq i32 %global_serial537, %serial549, !dbg !59
  br i1 %use_cache550, label %use_cache545, label %use_call546, !dbg !59

use_cache545:                                     ; preds = %check_serial544
  %value_pos551 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 2, !dbg !59
  %cached_value552 = load %"struct.rubinius::Object"** %value_pos551, !dbg !59
  br label %continue547, !dbg !59

use_call546:                                      ; preds = %check_serial544, %ip75
  store i32 79, i32* %ip_pos154, !dbg !59
  %push_const_fast553 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !59
  %null_check556 = icmp eq %"struct.rubinius::Object"* %push_const_fast553, null, !dbg !59
  br i1 %null_check556, label %bail_out149, label %check_active555, !dbg !59

continue547:                                      ; preds = %continue554, %use_cache545
  %constant557 = phi %"struct.rubinius::Object"* [ %cached_value552, %use_cache545 ], [ %push_const_fast553, %continue554 ], !dbg !59, !rbx-classid !60
  %stack_pos558 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !59
  store %"struct.rubinius::Object"* %constant557, %"struct.rubinius::Object"** %stack_pos558, !dbg !59
  %stack_pos559 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 15694 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos559, !dbg !59
  %stack_pos560 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !59
  %stack_load561 = load %"struct.rubinius::Object"** %stack_pos560, !dbg !59, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load561, %"struct.rubinius::Object"** %out_args_recv156, !dbg !59
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !59
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !59
  store i32 3, i32* %out_args_total158, !dbg !59
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !59
  %stack_pos562 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !59
  store %"struct.rubinius::Object"** %stack_pos562, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !59
  %cache_const563 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474040 to %"struct.rubinius::CallSite"**), !dbg !59
  %execute_pos564 = getelementptr %"struct.rubinius::CallSite"* %cache_const563, i32 0, i32 2, !dbg !59
  %execute565 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos564, !dbg !59
  store i32 84, i32* %ip_pos154, !dbg !59
  %call_site_execute566 = call %"struct.rubinius::Object"* %execute565(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const563, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !59
  %null_check569 = icmp eq %"struct.rubinius::Object"* %call_site_execute566, null, !dbg !59
  br i1 %null_check569, label %bail_out149, label %check_active568, !dbg !59

continue554:                                      ; preds = %check_active555
  br label %continue547, !dbg !59

check_active555:                                  ; preds = %use_call546
  br label %continue554, !dbg !59

continue567:                                      ; preds = %check_active568
  %stack_pos570 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !59
  store %"struct.rubinius::Object"* %call_site_execute566, %"struct.rubinius::Object"** %stack_pos570, !dbg !59
  br label %ip161, !dbg !59

check_active568:                                  ; preds = %continue547
  br label %continue567, !dbg !59

continue571:                                      ; No predecessors!
  br label %ip89, !dbg !59

ip89:                                             ; preds = %continue571, %continue522
  %stack_pos572 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !61
  %stack_load573 = load %"struct.rubinius::Object"** %stack_pos572, !dbg !61
  %stack_pos574 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load573, %"struct.rubinius::Object"** %stack_pos574, !dbg !61
  %stack_pos575 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos575, !dbg !61
  %stack_pos576 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  %stack_load577 = load %"struct.rubinius::Object"** %stack_pos576, !dbg !61, !rbx-classid !43
  %stack_pos578 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load579 = load %"struct.rubinius::Object"** %stack_pos578, !dbg !61
  %stack_pos580 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load577, %"struct.rubinius::Object"** %stack_pos580, !dbg !61
  %stack_pos581 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* %stack_load579, %"struct.rubinius::Object"** %stack_pos581, !dbg !61
  %stack_pos582 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load583 = load %"struct.rubinius::Object"** %stack_pos582, !dbg !61, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load583, %"struct.rubinius::Object"** %out_args_recv156, !dbg !61
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !61
  store i32 1, i32* %out_args_total158, !dbg !61
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !61
  %stack_pos584 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"** %stack_pos584, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !61
  %cache_const585 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474104 to %"struct.rubinius::CallSite"**), !dbg !61
  %execute_pos586 = getelementptr %"struct.rubinius::CallSite"* %cache_const585, i32 0, i32 2, !dbg !61
  %execute587 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos586, !dbg !61
  store i32 92, i32* %ip_pos154, !dbg !61
  %call_site_execute588 = call %"struct.rubinius::Object"* %execute587(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const585, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !61
  %null_check591 = icmp eq %"struct.rubinius::Object"* %call_site_execute588, null, !dbg !61
  br i1 %null_check591, label %bail_out149, label %check_active590, !dbg !61

continue589:                                      ; preds = %check_active590
  %stack_pos592 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %call_site_execute588, %"struct.rubinius::Object"** %stack_pos592, !dbg !61
  %stack_pos593 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load594 = load %"struct.rubinius::Object"** %stack_pos593, !dbg !61
  %as_int595 = ptrtoint %"struct.rubinius::Object"* %stack_load594 to i64, !dbg !61
  %and596 = and i64 %as_int595, 15, !dbg !61
  %is_true597 = icmp ne i64 %and596, 10, !dbg !61
  br i1 %is_true597, label %ip115, label %continue598, !dbg !61

check_active590:                                  ; preds = %ip89
  br label %continue589, !dbg !61

continue598:                                      ; preds = %continue589
  br label %ip97, !dbg !61

ip97:                                             ; preds = %continue598
  %stack_pos599 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !61
  %stack_load600 = load %"struct.rubinius::Object"** %stack_pos599, !dbg !61
  %stack_pos601 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load600, %"struct.rubinius::Object"** %stack_pos601, !dbg !61
  %stack_pos602 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos602, !dbg !61
  %stack_pos603 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  %stack_load604 = load %"struct.rubinius::Object"** %stack_pos603, !dbg !61, !rbx-classid !35
  %stack_pos605 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load606 = load %"struct.rubinius::Object"** %stack_pos605, !dbg !61
  %stack_pos607 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load604, %"struct.rubinius::Object"** %stack_pos607, !dbg !61
  %stack_pos608 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* %stack_load606, %"struct.rubinius::Object"** %stack_pos608, !dbg !61
  %stack_pos609 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load610 = load %"struct.rubinius::Object"** %stack_pos609, !dbg !61, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load610, %"struct.rubinius::Object"** %out_args_recv156, !dbg !61
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !61
  store i32 1, i32* %out_args_total158, !dbg !61
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !61
  %stack_pos611 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"** %stack_pos611, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !61
  %cache_const612 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474168 to %"struct.rubinius::CallSite"**), !dbg !61
  %execute_pos613 = getelementptr %"struct.rubinius::CallSite"* %cache_const612, i32 0, i32 2, !dbg !61
  %execute614 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos613, !dbg !61
  store i32 100, i32* %ip_pos154, !dbg !61
  %call_site_execute615 = call %"struct.rubinius::Object"* %execute614(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const612, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !61
  %null_check618 = icmp eq %"struct.rubinius::Object"* %call_site_execute615, null, !dbg !61
  br i1 %null_check618, label %bail_out149, label %check_active617, !dbg !61

continue616:                                      ; preds = %check_active617
  %stack_pos619 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %call_site_execute615, %"struct.rubinius::Object"** %stack_pos619, !dbg !61
  %stack_pos620 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load621 = load %"struct.rubinius::Object"** %stack_pos620, !dbg !61
  %as_int622 = ptrtoint %"struct.rubinius::Object"* %stack_load621 to i64, !dbg !61
  %and623 = and i64 %as_int622, 15, !dbg !61
  %is_true624 = icmp ne i64 %and623, 10, !dbg !61
  br i1 %is_true624, label %ip115, label %continue625, !dbg !61

check_active617:                                  ; preds = %ip97
  br label %continue616, !dbg !61

continue625:                                      ; preds = %continue616
  br label %ip105, !dbg !61

ip105:                                            ; preds = %continue625
  %stack_pos626 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !61
  %stack_load627 = load %"struct.rubinius::Object"** %stack_pos626, !dbg !61
  %stack_pos628 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load627, %"struct.rubinius::Object"** %stack_pos628, !dbg !61
  %stack_pos629 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos629, !dbg !61
  %stack_pos630 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  %stack_load631 = load %"struct.rubinius::Object"** %stack_pos630, !dbg !61, !rbx-classid !41
  %stack_pos632 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load633 = load %"struct.rubinius::Object"** %stack_pos632, !dbg !61
  %stack_pos634 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %stack_load631, %"struct.rubinius::Object"** %stack_pos634, !dbg !61
  %stack_pos635 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"* %stack_load633, %"struct.rubinius::Object"** %stack_pos635, !dbg !61
  %stack_pos636 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load637 = load %"struct.rubinius::Object"** %stack_pos636, !dbg !61, !rbx-classid !41
  store %"struct.rubinius::Object"* %stack_load637, %"struct.rubinius::Object"** %out_args_recv156, !dbg !61
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !61
  store i32 1, i32* %out_args_total158, !dbg !61
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !61
  %stack_pos638 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !61
  store %"struct.rubinius::Object"** %stack_pos638, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !61
  %cache_const639 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474232 to %"struct.rubinius::CallSite"**), !dbg !61
  %execute_pos640 = getelementptr %"struct.rubinius::CallSite"* %cache_const639, i32 0, i32 2, !dbg !61
  %execute641 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos640, !dbg !61
  store i32 108, i32* %ip_pos154, !dbg !61
  %call_site_execute642 = call %"struct.rubinius::Object"* %execute641(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const639, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !61
  %null_check645 = icmp eq %"struct.rubinius::Object"* %call_site_execute642, null, !dbg !61
  br i1 %null_check645, label %bail_out149, label %check_active644, !dbg !61

continue643:                                      ; preds = %check_active644
  %stack_pos646 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  store %"struct.rubinius::Object"* %call_site_execute642, %"struct.rubinius::Object"** %stack_pos646, !dbg !61
  %stack_pos647 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !61
  %stack_load648 = load %"struct.rubinius::Object"** %stack_pos647, !dbg !61
  %as_int649 = ptrtoint %"struct.rubinius::Object"* %stack_load648 to i64, !dbg !61
  %and650 = and i64 %as_int649, 15, !dbg !61
  %is_true651 = icmp ne i64 %and650, 10, !dbg !61
  br i1 %is_true651, label %ip115, label %continue652, !dbg !61

check_active644:                                  ; preds = %ip105
  br label %continue643, !dbg !61

continue652:                                      ; preds = %continue643
  br label %ip113, !dbg !61

ip113:                                            ; preds = %continue652
  br label %ip139, !dbg !61

continue653:                                      ; No predecessors!
  br label %ip115, !dbg !61

ip139:                                            ; preds = %continue797, %ip113
  %82 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !62
  %self654 = load %"struct.rubinius::Object"** %82, !dbg !62, !rbx-classid !45
  %stack_pos655 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %self654, %"struct.rubinius::Object"** %stack_pos655, !dbg !62
  %global_serial656 = load i32* inttoptr (i64 22553876 to i32*), !dbg !62
  %constant_cache657 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**), !dbg !62
  %constant_cache_pos658 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i32 0, i32 4, !dbg !62
  %constant_scope659 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos658, !dbg !62
  %scope_pos660 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !62
  %frame_scope661 = load %"struct.rubinius::ConstantScope"** %scope_pos660, !dbg !62
  %same_scope662 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope659, %frame_scope661, !dbg !62
  br i1 %same_scope662, label %check_serial663, label %use_call665, !dbg !62

check_serial663:                                  ; preds = %ip139
  %serial_pos667 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i32 0, i32 7, !dbg !62
  %serial668 = load i32* %serial_pos667, !dbg !62
  %use_cache669 = icmp eq i32 %global_serial656, %serial668, !dbg !62
  br i1 %use_cache669, label %use_cache664, label %use_call665, !dbg !62

use_cache664:                                     ; preds = %check_serial663
  %value_pos670 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i32 0, i32 2, !dbg !62
  %cached_value671 = load %"struct.rubinius::Object"** %value_pos670, !dbg !62
  br label %continue666, !dbg !62

use_call665:                                      ; preds = %check_serial663, %ip139
  store i32 141, i32* %ip_pos154, !dbg !62
  %push_const_fast672 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !62
  %null_check675 = icmp eq %"struct.rubinius::Object"* %push_const_fast672, null, !dbg !62
  br i1 %null_check675, label %bail_out149, label %check_active674, !dbg !62

continue666:                                      ; preds = %continue673, %use_cache664
  %constant676 = phi %"struct.rubinius::Object"* [ %cached_value671, %use_cache664 ], [ %push_const_fast672, %continue673 ], !dbg !62, !rbx-classid !63
  %stack_pos677 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %constant676, %"struct.rubinius::Object"** %stack_pos677, !dbg !62
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 3, !dbg !62
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !62
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !62
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !62
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 10, !dbg !62
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !62, !rbx-classid !64
  %stack_pos678 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos678, !dbg !62
  %local_pos679 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !62
  %local680 = load %"struct.rubinius::Object"** %local_pos679, !dbg !62, !rbx-classid !28
  %stack_pos681 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !62
  store %"struct.rubinius::Object"* %local680, %"struct.rubinius::Object"** %stack_pos681, !dbg !62
  %stack_pos682 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !62
  %stack_load683 = load %"struct.rubinius::Object"** %stack_pos682, !dbg !62, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load683, %"struct.rubinius::Object"** %out_args_recv156, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 14438 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !62
  store i32 0, i32* %out_args_total158, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !62
  %cache_const684 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474544 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos685 = getelementptr %"struct.rubinius::CallSite"* %cache_const684, i32 0, i32 2, !dbg !62
  %execute686 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos685, !dbg !62
  store i32 147, i32* %ip_pos154, !dbg !62
  %call_site_execute687 = call %"struct.rubinius::Object"* %execute686(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const684, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check690 = icmp eq %"struct.rubinius::Object"* %call_site_execute687, null, !dbg !62
  br i1 %null_check690, label %bail_out149, label %check_active689, !dbg !62

continue673:                                      ; preds = %check_active674
  br label %continue666, !dbg !62

check_active674:                                  ; preds = %use_call665
  br label %continue673, !dbg !62

continue688:                                      ; preds = %check_active689
  %stack_pos691 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute687, %"struct.rubinius::Object"** %stack_pos691, !dbg !62
  %stack_pos692 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !62
  %stack_load693 = load %"struct.rubinius::Object"** %stack_pos692, !dbg !62
  %cache_const694 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474576 to %"struct.rubinius::CallSite"**), !dbg !62
  %83 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallSite"* %cache_const694, %"struct.rubinius::Object"* %stack_load693), !dbg !62
  %null_check697 = icmp eq %"struct.rubinius::Object"* %83, null, !dbg !62
  br i1 %null_check697, label %bail_out149, label %check_active696, !dbg !62

check_active689:                                  ; preds = %continue666
  br label %continue688, !dbg !62

continue695:                                      ; preds = %check_active696
  %stack_pos698 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !62
  store %"struct.rubinius::Object"* %83, %"struct.rubinius::Object"** %stack_pos698, !dbg !62
  %code_pos699 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 3, !dbg !62
  %code700 = load %"struct.rubinius::CompiledCode"** %code_pos699, !dbg !62
  %literals_pos701 = getelementptr %"struct.rubinius::CompiledCode"* %code700, i32 0, i32 17, !dbg !62
  %literals702 = load %"struct.rubinius::Tuple"** %literals_pos701, !dbg !62
  %literal_pos703 = getelementptr %"struct.rubinius::Tuple"* %literals702, i32 0, i32 2, i32 13, !dbg !62
  %literal704 = load %"struct.rubinius::Object"** %literal_pos703, !dbg !62, !rbx-classid !64
  %stack_pos705 = getelementptr %"struct.rubinius::Object"** %stack138, i32 4, !dbg !62
  store %"struct.rubinius::Object"* %literal704, %"struct.rubinius::Object"** %stack_pos705, !dbg !62
  %stack_pos706 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !62
  %string = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 3, %"struct.rubinius::Object"** %stack_pos706), !dbg !62
  %null_check709 = icmp eq %"struct.rubinius::Object"* %string, null, !dbg !62
  br i1 %null_check709, label %bail_out149, label %check_active708, !dbg !62

check_active696:                                  ; preds = %continue688
  br label %continue695, !dbg !62

continue707:                                      ; preds = %check_active708
  %stack_pos710 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %string, %"struct.rubinius::Object"** %stack_pos710, !dbg !62
  %stack_pos711 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !62
  %stack_load712 = load %"struct.rubinius::Object"** %stack_pos711, !dbg !62, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load712, %"struct.rubinius::Object"** %out_args_recv156, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !62
  store i32 2, i32* %out_args_total158, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !62
  %stack_pos713 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos713, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !62
  %cache_const714 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474632 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos715 = getelementptr %"struct.rubinius::CallSite"* %cache_const714, i32 0, i32 2, !dbg !62
  %execute716 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos715, !dbg !62
  store i32 158, i32* %ip_pos154, !dbg !62
  %call_site_execute717 = call %"struct.rubinius::Object"* %execute716(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const714, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check720 = icmp eq %"struct.rubinius::Object"* %call_site_execute717, null, !dbg !62
  br i1 %null_check720, label %bail_out149, label %check_active719, !dbg !62

check_active708:                                  ; preds = %continue695
  br label %continue707, !dbg !62

continue718:                                      ; preds = %check_active719
  %stack_pos721 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %call_site_execute717, %"struct.rubinius::Object"** %stack_pos721, !dbg !62
  br label %ip161, !dbg !62

ip115:                                            ; preds = %continue653, %continue643, %continue616, %continue589
  %84 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 2, !dbg !65
  %self722 = load %"struct.rubinius::Object"** %84, !dbg !65, !rbx-classid !45
  %stack_pos723 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %self722, %"struct.rubinius::Object"** %stack_pos723, !dbg !65
  %global_serial724 = load i32* inttoptr (i64 22553876 to i32*), !dbg !65
  %constant_cache725 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**), !dbg !65
  %constant_cache_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i32 0, i32 4, !dbg !65
  %constant_scope727 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos726, !dbg !65
  %scope_pos728 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 1, !dbg !65
  %frame_scope729 = load %"struct.rubinius::ConstantScope"** %scope_pos728, !dbg !65
  %same_scope730 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope727, %frame_scope729, !dbg !65
  br i1 %same_scope730, label %check_serial731, label %use_call733, !dbg !65

check_active719:                                  ; preds = %continue707
  br label %continue718, !dbg !62

check_serial731:                                  ; preds = %ip115
  %serial_pos735 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i32 0, i32 7, !dbg !65
  %serial736 = load i32* %serial_pos735, !dbg !65
  %use_cache737 = icmp eq i32 %global_serial724, %serial736, !dbg !65
  br i1 %use_cache737, label %use_cache732, label %use_call733, !dbg !65

use_cache732:                                     ; preds = %check_serial731
  %value_pos738 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i32 0, i32 2, !dbg !65
  %cached_value739 = load %"struct.rubinius::Object"** %value_pos738, !dbg !65
  br label %continue734, !dbg !65

use_call733:                                      ; preds = %check_serial731, %ip115
  store i32 117, i32* %ip_pos154, !dbg !65
  %push_const_fast740 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !65
  %null_check743 = icmp eq %"struct.rubinius::Object"* %push_const_fast740, null, !dbg !65
  br i1 %null_check743, label %bail_out149, label %check_active742, !dbg !65

continue734:                                      ; preds = %continue741, %use_cache732
  %constant744 = phi %"struct.rubinius::Object"* [ %cached_value739, %use_cache732 ], [ %push_const_fast740, %continue741 ], !dbg !65, !rbx-classid !66
  %stack_pos745 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %constant744, %"struct.rubinius::Object"** %stack_pos745, !dbg !65
  %code_pos746 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 3, !dbg !65
  %code747 = load %"struct.rubinius::CompiledCode"** %code_pos746, !dbg !65
  %literals_pos748 = getelementptr %"struct.rubinius::CompiledCode"* %code747, i32 0, i32 17, !dbg !65
  %literals749 = load %"struct.rubinius::Tuple"** %literals_pos748, !dbg !65
  %literal_pos750 = getelementptr %"struct.rubinius::Tuple"* %literals749, i32 0, i32 2, i32 10, !dbg !65
  %literal751 = load %"struct.rubinius::Object"** %literal_pos750, !dbg !65, !rbx-classid !64
  %stack_pos752 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !65
  store %"struct.rubinius::Object"* %literal751, %"struct.rubinius::Object"** %stack_pos752, !dbg !65
  %local_pos753 = getelementptr %"struct.rubinius::StackVariables"* %vars140, i32 0, i32 6, i32 0, !dbg !65
  %local754 = load %"struct.rubinius::Object"** %local_pos753, !dbg !65, !rbx-classid !28
  %stack_pos755 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !65
  store %"struct.rubinius::Object"* %local754, %"struct.rubinius::Object"** %stack_pos755, !dbg !65
  %stack_pos756 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !65
  %stack_load757 = load %"struct.rubinius::Object"** %stack_pos756, !dbg !65, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load757, %"struct.rubinius::Object"** %out_args_recv156, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 14374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !65
  store i32 0, i32* %out_args_total158, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !65
  %cache_const758 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474352 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos759 = getelementptr %"struct.rubinius::CallSite"* %cache_const758, i32 0, i32 2, !dbg !65
  %execute760 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos759, !dbg !65
  store i32 123, i32* %ip_pos154, !dbg !65
  %call_site_execute761 = call %"struct.rubinius::Object"* %execute760(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const758, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check764 = icmp eq %"struct.rubinius::Object"* %call_site_execute761, null, !dbg !65
  br i1 %null_check764, label %bail_out149, label %check_active763, !dbg !65

continue741:                                      ; preds = %check_active742
  br label %continue734, !dbg !65

check_active742:                                  ; preds = %use_call733
  br label %continue741, !dbg !65

continue762:                                      ; preds = %check_active763
  %stack_pos765 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute761, %"struct.rubinius::Object"** %stack_pos765, !dbg !65
  %stack_pos766 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !65
  %stack_load767 = load %"struct.rubinius::Object"** %stack_pos766, !dbg !65
  %cache_const768 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474384 to %"struct.rubinius::CallSite"**), !dbg !65
  %85 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallSite"* %cache_const768, %"struct.rubinius::Object"* %stack_load767), !dbg !65
  %null_check771 = icmp eq %"struct.rubinius::Object"* %85, null, !dbg !65
  br i1 %null_check771, label %bail_out149, label %check_active770, !dbg !65

check_active763:                                  ; preds = %continue734
  br label %continue762, !dbg !65

continue769:                                      ; preds = %check_active770
  %stack_pos772 = getelementptr %"struct.rubinius::Object"** %stack138, i32 3, !dbg !65
  store %"struct.rubinius::Object"* %85, %"struct.rubinius::Object"** %stack_pos772, !dbg !65
  %code_pos773 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i32 0, i32 3, !dbg !65
  %code774 = load %"struct.rubinius::CompiledCode"** %code_pos773, !dbg !65
  %literals_pos775 = getelementptr %"struct.rubinius::CompiledCode"* %code774, i32 0, i32 17, !dbg !65
  %literals776 = load %"struct.rubinius::Tuple"** %literals_pos775, !dbg !65
  %literal_pos777 = getelementptr %"struct.rubinius::Tuple"* %literals776, i32 0, i32 2, i32 13, !dbg !65
  %literal778 = load %"struct.rubinius::Object"** %literal_pos777, !dbg !65, !rbx-classid !64
  %stack_pos779 = getelementptr %"struct.rubinius::Object"** %stack138, i32 4, !dbg !65
  store %"struct.rubinius::Object"* %literal778, %"struct.rubinius::Object"** %stack_pos779, !dbg !65
  %stack_pos780 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !65
  %string781 = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 3, %"struct.rubinius::Object"** %stack_pos780), !dbg !65
  %null_check784 = icmp eq %"struct.rubinius::Object"* %string781, null, !dbg !65
  br i1 %null_check784, label %bail_out149, label %check_active783, !dbg !65

check_active770:                                  ; preds = %continue762
  br label %continue769, !dbg !65

continue782:                                      ; preds = %check_active783
  %stack_pos785 = getelementptr %"struct.rubinius::Object"** %stack138, i32 2, !dbg !65
  store %"struct.rubinius::Object"* %string781, %"struct.rubinius::Object"** %stack_pos785, !dbg !65
  %stack_pos786 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !65
  %stack_load787 = load %"struct.rubinius::Object"** %stack_pos786, !dbg !65, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load787, %"struct.rubinius::Object"** %out_args_recv156, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name155, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block157, !dbg !65
  store i32 2, i32* %out_args_total158, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container160, !dbg !65
  %stack_pos788 = getelementptr %"struct.rubinius::Object"** %stack138, i32 1, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos788, %"struct.rubinius::Object"*** %out_args_arguments159, !dbg !65
  %cache_const789 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474440 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos790 = getelementptr %"struct.rubinius::CallSite"* %cache_const789, i32 0, i32 2, !dbg !65
  %execute791 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos790, !dbg !65
  store i32 134, i32* %ip_pos154, !dbg !65
  %call_site_execute792 = call %"struct.rubinius::Object"* %execute791(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const789, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check795 = icmp eq %"struct.rubinius::Object"* %call_site_execute792, null, !dbg !65
  br i1 %null_check795, label %bail_out149, label %check_active794, !dbg !65

check_active783:                                  ; preds = %continue769
  br label %continue782, !dbg !65

continue793:                                      ; preds = %check_active794
  %stack_pos796 = getelementptr %"struct.rubinius::Object"** %stack138, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute792, %"struct.rubinius::Object"** %stack_pos796, !dbg !65
  br label %ip161, !dbg !65

check_active794:                                  ; preds = %continue782
  br label %continue793, !dbg !65

continue797:                                      ; No predecessors!
  br label %ip139, !dbg !65

return_pad127:                                    ; preds = %ip161, %serial_fallback384, %class_fallback383, %continue342, %serial_fallback187, %class_fallback186, %ret_raise_val151, %ret_null152
  %return_phi128 = phi %"struct.rubinius::Object"* [ null, %ret_null152 ], [ %crv153, %ret_raise_val151 ], [ %41, %class_fallback186 ], [ %40, %serial_fallback187 ], [ %stack_load347, %continue342 ], [ %63, %class_fallback383 ], [ %64, %serial_fallback384 ], [ %stack_load483, %ip161 ]
  %null_check800 = icmp eq %"struct.rubinius::Object"* %return_phi128, null, !dbg !32
  br i1 %null_check800, label %bail_out, label %check_active799, !dbg !32

continue798:                                      ; preds = %check_active799
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %return_phi128, %"struct.rubinius::Object"** %stack_pos801, !dbg !32
  br label %continue110, !dbg !32

check_active799:                                  ; preds = %return_pad127
  br label %continue798, !dbg !32

continue817:                                      ; preds = %check_active850, %float_compare_operation
  %send_result852 = phi %"struct.rubinius::Object"* [ %select_bool842, %float_compare_operation ], [ %call_site_execute849, %check_active850 ], !dbg !26
  %stack_pos853 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %send_result852, %"struct.rubinius::Object"** %stack_pos853, !dbg !26
  %stack_pos854 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load855 = load %"struct.rubinius::Object"** %stack_pos854, !dbg !26
  %as_int856 = ptrtoint %"struct.rubinius::Object"* %stack_load855 to i64, !dbg !26
  %and857 = and i64 %as_int856, 15, !dbg !26
  %is_true858 = icmp eq i64 %and857, 10, !dbg !26
  br i1 %is_true858, label %ip48, label %continue859, !dbg !26

check_class_id823:                                ; preds = %continue110
  %class_pos826 = getelementptr %"struct.rubinius::Object"* %stack_load819, i32 0, i32 0, i32 1, !dbg !26
  %ref_class827 = load %"struct.rubinius::Class"** %class_pos826, !dbg !26
  %class_id_pos828 = getelementptr %"struct.rubinius::Class"* %ref_class827, i32 0, i32 4, !dbg !26
  %class_id829 = load i32* %class_id_pos828, !dbg !26
  %check_class_id830 = icmp eq i32 %class_id829, 77, !dbg !26
  br i1 %check_class_id830, label %correct_class824, label %class_fallback815, !dbg !26

correct_class824:                                 ; preds = %check_class_id823
  %serial_id_pos831 = getelementptr %"struct.rubinius::Class"* %ref_class827, i32 0, i32 5, !dbg !26
  %serial_id832 = load i32* %serial_id_pos831, !dbg !26
  %check_serial_id833 = icmp eq i32 %serial_id832, 224, !dbg !26
  br i1 %check_serial_id833, label %correct_serial825, label %serial_fallback816, !dbg !26

correct_serial825:                                ; preds = %correct_class824
  %stack_pos834 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_load835 = load %"struct.rubinius::Object"** %stack_pos834, !dbg !26, !rbx-classid !33
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load835 to %"struct.rubinius::Float"*, !dbg !26
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !26
  %farg = load double* %arg.value_pos, !dbg !26
  br label %float_compare_operation, !dbg !26

serial_fallback816:                               ; preds = %correct_class824
  store i32 40, i32* %ip_pos, !dbg !26
  %86 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !26
  br label %return_pad, !dbg !26

check_fixnum:                                     ; No predecessors!
  %cast836 = ptrtoint %"struct.rubinius::Object"* %stack_load835 to i64, !dbg !26
  %masked837 = and i64 %cast836, 1, !dbg !26
  %is_fixnum = icmp eq i64 %masked837, 1, !dbg !26
  br i1 %is_fixnum, label %guarded_body838, label %class_fallback815, !dbg !26

guarded_body838:                                  ; preds = %check_fixnum
  %as_int839 = ptrtoint %"struct.rubinius::Object"* %stack_load835 to i64, !dbg !26
  %ashr = ashr i64 %as_int839, 1, !dbg !26
  %87 = uitofp i64 %ashr to double, !dbg !26
  br label %float_compare_operation, !dbg !26

float_compare_operation:                          ; preds = %guarded_body838, %correct_serial825
  %float_rhs = phi double [ %farg, %correct_serial825 ], [ %87, %guarded_body838 ], !dbg !26
  %stack_pos840 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load841 = load %"struct.rubinius::Object"** %stack_pos840, !dbg !26, !rbx-classid !28
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load841 to %"struct.rubinius::Float"*, !dbg !26
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !26
  %fself = load double* %self.value_pos, !dbg !26
  %float.ge = fcmp uge double %fself, %float_rhs, !dbg !26
  %select_bool842 = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !26
  br label %continue817, !dbg !26

class_fallback815:                                ; preds = %check_fixnum, %check_class_id823, %continue110
  %stack_pos843 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load844 = load %"struct.rubinius::Object"** %stack_pos843, !dbg !26, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load844, %"struct.rubinius::Object"** %out_args_recv, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !26
  store i32 1, i32* %out_args_total, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !26
  %stack_pos845 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos845, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !26
  %cache_const846 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), !dbg !26
  %execute_pos847 = getelementptr %"struct.rubinius::CallSite"* %cache_const846, i32 0, i32 2, !dbg !26
  %execute848 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos847, !dbg !26
  store i32 40, i32* %ip_pos, !dbg !26
  %call_site_execute849 = call %"struct.rubinius::Object"* %execute848(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const846, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check851 = icmp eq %"struct.rubinius::Object"* %call_site_execute849, null, !dbg !26
  br i1 %null_check851, label %bail_out, label %check_active850, !dbg !26

check_active850:                                  ; preds = %class_fallback815
  br label %continue817, !dbg !26

continue859:                                      ; preds = %continue817
  br label %ip45, !dbg !26

ip45:                                             ; preds = %continue859
  %stack_pos860 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos860, !dbg !26
  br label %ip58, !dbg !26

continue861:                                      ; No predecessors!
  br label %ip48, !dbg !26

ip58:                                             ; preds = %continue1014, %ip45
  %global_serial862 = load i32* inttoptr (i64 22553876 to i32*), !dbg !67
  %constant_cache863 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), !dbg !67
  %constant_cache_pos864 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i32 0, i32 4, !dbg !67
  %constant_scope865 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos864, !dbg !67
  %scope_pos866 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !67
  %frame_scope867 = load %"struct.rubinius::ConstantScope"** %scope_pos866, !dbg !67
  %same_scope868 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope865, %frame_scope867, !dbg !67
  br i1 %same_scope868, label %check_serial869, label %use_call871, !dbg !67

check_serial869:                                  ; preds = %ip58
  %serial_pos873 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i32 0, i32 7, !dbg !67
  %serial874 = load i32* %serial_pos873, !dbg !67
  %use_cache875 = icmp eq i32 %global_serial862, %serial874, !dbg !67
  br i1 %use_cache875, label %use_cache870, label %use_call871, !dbg !67

use_cache870:                                     ; preds = %check_serial869
  %value_pos876 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i32 0, i32 2, !dbg !67
  %cached_value877 = load %"struct.rubinius::Object"** %value_pos876, !dbg !67
  br label %continue872, !dbg !67

use_call871:                                      ; preds = %check_serial869, %ip58
  store i32 59, i32* %ip_pos, !dbg !67
  %push_const_fast878 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !67
  %null_check881 = icmp eq %"struct.rubinius::Object"* %push_const_fast878, null, !dbg !67
  br i1 %null_check881, label %bail_out, label %check_active880, !dbg !67

continue872:                                      ; preds = %continue879, %use_cache870
  %constant882 = phi %"struct.rubinius::Object"* [ %cached_value877, %use_cache870 ], [ %push_const_fast878, %continue879 ], !dbg !67, !rbx-classid !68
  %stack_pos883 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %constant882, %"struct.rubinius::Object"** %stack_pos883, !dbg !67
  %stack_pos884 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  %stack_load885 = load %"struct.rubinius::Object"** %stack_pos884, !dbg !67, !rbx-classid !68
  %global_serial886 = load i32* inttoptr (i64 22553876 to i32*), !dbg !67
  %constant_cache887 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), !dbg !67
  %constant_cache_pos888 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i32 0, i32 4, !dbg !67
  %constant_scope889 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos888, !dbg !67
  %scope_pos890 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !67
  %frame_scope891 = load %"struct.rubinius::ConstantScope"** %scope_pos890, !dbg !67
  %same_scope892 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope889, %frame_scope891, !dbg !67
  br i1 %same_scope892, label %check_serial893, label %use_call896, !dbg !67

continue879:                                      ; preds = %check_active880
  br label %continue872, !dbg !67

check_active880:                                  ; preds = %use_call871
  br label %continue879, !dbg !67

check_serial893:                                  ; preds = %continue872
  %serial_pos898 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i32 0, i32 7, !dbg !67
  %serial899 = load i32* %serial_pos898, !dbg !67
  %use_under900 = icmp eq i32 %global_serial886, %serial899, !dbg !67
  br i1 %use_under900, label %check_under894, label %use_call896, !dbg !67

check_under894:                                   ; preds = %check_serial893
  %value_pos901 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i32 0, i32 3, !dbg !67
  %cached_under902 = load %"struct.rubinius::Module"** %value_pos901, !dbg !67
  %downcast903 = bitcast %"struct.rubinius::Module"* %cached_under902 to %"struct.rubinius::Object"*, !dbg !67
  %use_cache904 = icmp eq %"struct.rubinius::Object"* %downcast903, %stack_load885, !dbg !67
  br i1 %use_cache904, label %use_cache895, label %use_call896, !dbg !67

use_cache895:                                     ; preds = %check_under894
  %value_pos905 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i32 0, i32 2, !dbg !67
  %cached_value906 = load %"struct.rubinius::Object"** %value_pos905, !dbg !67
  br label %continue897, !dbg !67

use_call896:                                      ; preds = %check_under894, %check_serial893, %continue872
  store i32 61, i32* %ip_pos, !dbg !67
  %constant907 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load885) #0, !dbg !67
  %null_check910 = icmp eq %"struct.rubinius::Object"* %constant907, null, !dbg !67
  br i1 %null_check910, label %bail_out, label %check_active909, !dbg !67

continue897:                                      ; preds = %continue908, %use_cache895
  %constant911 = phi %"struct.rubinius::Object"* [ %cached_value906, %use_cache895 ], [ %constant907, %continue908 ], !dbg !67, !rbx-classid !69
  %stack_pos912 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %constant911, %"struct.rubinius::Object"** %stack_pos912, !dbg !67
  %stack_pos913 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  %stack_load914 = load %"struct.rubinius::Object"** %stack_pos913, !dbg !67, !rbx-classid !69
  %global_serial915 = load i32* inttoptr (i64 22553876 to i32*), !dbg !67
  %constant_cache916 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), !dbg !67
  %constant_cache_pos917 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i32 0, i32 4, !dbg !67
  %constant_scope918 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos917, !dbg !67
  %scope_pos919 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !67
  %frame_scope920 = load %"struct.rubinius::ConstantScope"** %scope_pos919, !dbg !67
  %same_scope921 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope918, %frame_scope920, !dbg !67
  br i1 %same_scope921, label %check_serial922, label %use_call925, !dbg !67

continue908:                                      ; preds = %check_active909
  br label %continue897, !dbg !67

check_active909:                                  ; preds = %use_call896
  br label %continue908, !dbg !67

check_serial922:                                  ; preds = %continue897
  %serial_pos927 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i32 0, i32 7, !dbg !67
  %serial928 = load i32* %serial_pos927, !dbg !67
  %use_under929 = icmp eq i32 %global_serial915, %serial928, !dbg !67
  br i1 %use_under929, label %check_under923, label %use_call925, !dbg !67

check_under923:                                   ; preds = %check_serial922
  %value_pos930 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i32 0, i32 3, !dbg !67
  %cached_under931 = load %"struct.rubinius::Module"** %value_pos930, !dbg !67
  %downcast932 = bitcast %"struct.rubinius::Module"* %cached_under931 to %"struct.rubinius::Object"*, !dbg !67
  %use_cache933 = icmp eq %"struct.rubinius::Object"* %downcast932, %stack_load914, !dbg !67
  br i1 %use_cache933, label %use_cache924, label %use_call925, !dbg !67

use_cache924:                                     ; preds = %check_under923
  %value_pos934 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i32 0, i32 2, !dbg !67
  %cached_value935 = load %"struct.rubinius::Object"** %value_pos934, !dbg !67
  br label %continue926, !dbg !67

use_call925:                                      ; preds = %check_under923, %check_serial922, %continue897
  store i32 63, i32* %ip_pos, !dbg !67
  %constant936 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load914) #0, !dbg !67
  %null_check939 = icmp eq %"struct.rubinius::Object"* %constant936, null, !dbg !67
  br i1 %null_check939, label %bail_out, label %check_active938, !dbg !67

continue926:                                      ; preds = %continue937, %use_cache924
  %constant940 = phi %"struct.rubinius::Object"* [ %cached_value935, %use_cache924 ], [ %constant936, %continue937 ], !dbg !67, !rbx-classid !70
  %stack_pos941 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %constant940, %"struct.rubinius::Object"** %stack_pos941, !dbg !67
  %local_pos942 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !67
  %local943 = load %"struct.rubinius::Object"** %local_pos942, !dbg !67, !rbx-classid !28
  %stack_pos944 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !67
  store %"struct.rubinius::Object"* %local943, %"struct.rubinius::Object"** %stack_pos944, !dbg !67
  %stack_pos948 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  %stack_load949 = load %"struct.rubinius::Object"** %stack_pos948, !dbg !67, !rbx-classid !70
  %cast950 = ptrtoint %"struct.rubinius::Object"* %stack_load949 to i64, !dbg !67
  %masked951 = and i64 %cast950, 3, !dbg !67
  %is_reference952 = icmp eq i64 %masked951, 0, !dbg !67
  br i1 %is_reference952, label %check_class_id953, label %class_fallback945, !dbg !67

continue937:                                      ; preds = %check_active938
  br label %continue926, !dbg !67

check_active938:                                  ; preds = %use_call925
  br label %continue937, !dbg !67

continue947:                                      ; preds = %ffi_continue
  %stack_pos968 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  %stack_load969 = load %"struct.rubinius::Object"** %stack_pos968, !dbg !67
  br label %return_pad, !dbg !67

ip48:                                             ; preds = %continue861, %continue817
  %88 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !26
  %self970 = load %"struct.rubinius::Object"** %88, !dbg !26
  %stack_pos971 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %self970, %"struct.rubinius::Object"** %stack_pos971, !dbg !26
  %global_serial972 = load i32* inttoptr (i64 22553876 to i32*), !dbg !26
  %constant_cache973 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), !dbg !26
  %constant_cache_pos974 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i32 0, i32 4, !dbg !26
  %constant_scope975 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos974, !dbg !26
  %scope_pos976 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !26
  %frame_scope977 = load %"struct.rubinius::ConstantScope"** %scope_pos976, !dbg !26
  %same_scope978 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope975, %frame_scope977, !dbg !26
  br i1 %same_scope978, label %check_serial979, label %use_call981, !dbg !26

check_class_id953:                                ; preds = %continue926
  %class_pos956 = getelementptr %"struct.rubinius::Object"* %stack_load949, i32 0, i32 0, i32 1, !dbg !67
  %ref_class957 = load %"struct.rubinius::Class"** %class_pos956, !dbg !67
  %class_id_pos958 = getelementptr %"struct.rubinius::Class"* %ref_class957, i32 0, i32 4, !dbg !67
  %class_id959 = load i32* %class_id_pos958, !dbg !67
  %check_class_id960 = icmp eq i32 %class_id959, 507, !dbg !67
  br i1 %check_class_id960, label %correct_class954, label %class_fallback945, !dbg !67

correct_class954:                                 ; preds = %check_class_id953
  %serial_id_pos961 = getelementptr %"struct.rubinius::Class"* %ref_class957, i32 0, i32 5, !dbg !67
  %serial_id962 = load i32* %serial_id_pos961, !dbg !67
  %check_serial_id963 = icmp eq i32 %serial_id962, 210, !dbg !67
  br i1 %check_serial_id963, label %correct_serial955, label %serial_fallback946, !dbg !67

class_fallback945:                                ; preds = %correct_serial955, %check_class_id953, %continue926
  store i32 67, i32* %ip_pos, !dbg !67
  %89 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !67
  br label %return_pad, !dbg !67

correct_serial955:                                ; preds = %correct_class954
  %stack_pos964 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !67
  %stack_load965 = load %"struct.rubinius::Object"** %stack_pos964, !dbg !67, !rbx-classid !28
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load965, i1* %valid_flag), !dbg !67
  %90 = load i1* %valid_flag, !dbg !67
  br i1 %90, label %ffi_continue, label %class_fallback945, !dbg !67

serial_fallback946:                               ; preds = %correct_class954
  store i32 67, i32* %ip_pos, !dbg !67
  %91 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !67
  br label %return_pad, !dbg !67

ffi_continue:                                     ; preds = %correct_serial955
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !67
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !67
  %unused966 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !67
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !67
  %stack_pos967 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack_pos967, !dbg !67
  br label %continue947, !dbg !67

check_serial979:                                  ; preds = %ip48
  %serial_pos983 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i32 0, i32 7, !dbg !26
  %serial984 = load i32* %serial_pos983, !dbg !26
  %use_cache985 = icmp eq i32 %global_serial972, %serial984, !dbg !26
  br i1 %use_cache985, label %use_cache980, label %use_call981, !dbg !26

use_cache980:                                     ; preds = %check_serial979
  %value_pos986 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i32 0, i32 2, !dbg !26
  %cached_value987 = load %"struct.rubinius::Object"** %value_pos986, !dbg !26
  br label %continue982, !dbg !26

use_call981:                                      ; preds = %check_serial979, %ip48
  store i32 49, i32* %ip_pos, !dbg !26
  %push_const_fast988 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !26
  %null_check991 = icmp eq %"struct.rubinius::Object"* %push_const_fast988, null, !dbg !26
  br i1 %null_check991, label %bail_out, label %check_active990, !dbg !26

continue982:                                      ; preds = %continue989, %use_cache980
  %constant992 = phi %"struct.rubinius::Object"* [ %cached_value987, %use_cache980 ], [ %push_const_fast988, %continue989 ], !dbg !26, !rbx-classid !71
  %stack_pos993 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %constant992, %"struct.rubinius::Object"** %stack_pos993, !dbg !26
  %code_pos994 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !26
  %code995 = load %"struct.rubinius::CompiledCode"** %code_pos994, !dbg !26
  %literals_pos996 = getelementptr %"struct.rubinius::CompiledCode"* %code995, i32 0, i32 17, !dbg !26
  %literals997 = load %"struct.rubinius::Tuple"** %literals_pos996, !dbg !26
  %literal_pos998 = getelementptr %"struct.rubinius::Tuple"* %literals997, i32 0, i32 2, i32 8, !dbg !26
  %literal999 = load %"struct.rubinius::Object"** %literal_pos998, !dbg !26, !rbx-classid !64
  %stack_pos1000 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %literal999, %"struct.rubinius::Object"** %stack_pos1000, !dbg !26
  %stack_pos1001 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %stack_load1002 = load %"struct.rubinius::Object"** %stack_pos1001, !dbg !26, !rbx-classid !64
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load1002), !dbg !26, !rbx-classid !64
  %null_check1005 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !26
  br i1 %null_check1005, label %bail_out, label %check_active1004, !dbg !26

continue989:                                      ; preds = %check_active990
  br label %continue982, !dbg !26

check_active990:                                  ; preds = %use_call981
  br label %continue989, !dbg !26

continue1003:                                     ; preds = %check_active1004
  %stack_pos1006 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos1006, !dbg !26
  %stack_pos1007 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load1008 = load %"struct.rubinius::Object"** %stack_pos1007, !dbg !26
  store %"struct.rubinius::Object"* %stack_load1008, %"struct.rubinius::Object"** %out_args_recv, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !26
  store i32 2, i32* %out_args_total, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !26
  %stack_pos1009 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos1009, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !26
  %cache_const1010 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), !dbg !26
  %execute_pos1011 = getelementptr %"struct.rubinius::CallSite"* %cache_const1010, i32 0, i32 2, !dbg !26
  %execute1012 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1011, !dbg !26
  store i32 55, i32* %ip_pos, !dbg !26
  %call_site_execute1013 = call %"struct.rubinius::Object"* %execute1012(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1010, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check1016 = icmp eq %"struct.rubinius::Object"* %call_site_execute1013, null, !dbg !26
  br i1 %null_check1016, label %bail_out, label %check_active1015, !dbg !26

check_active1004:                                 ; preds = %continue982
  br label %continue1003, !dbg !26

continue1014:                                     ; preds = %check_active1015
  %stack_pos1017 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %call_site_execute1013, %"struct.rubinius::Object"** %stack_pos1017, !dbg !26
  br label %ip58, !dbg !26

return_pad:                                       ; preds = %continue947, %serial_fallback946, %class_fallback945, %serial_fallback816, %serial_fallback109, %class_fallback108, %continue88, %serial_fallback29, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %21, %class_fallback ], [ %22, %serial_fallback ], [ %24, %serial_fallback29 ], [ %stack_load102, %continue88 ], [ %25, %class_fallback108 ], [ %26, %serial_fallback109 ], [ %86, %serial_fallback816 ], [ %89, %class_fallback945 ], [ %91, %serial_fallback946 ], [ %stack_load969, %continue947 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !26

check_active1015:                                 ; preds = %continue1003
  br label %continue1014, !dbg !26

ret_null1018:                                     ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !26

prologue_check:                                   ; preds = %import_args
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !26
  %92 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !26
  br i1 %92, label %ret_null1018, label %method_body, !dbg !26
}

[[[ LLVM Optimized IR: _X_Math#sqrt@5 ]]]

define %"struct.rubinius::Object"* @"_X_Math#sqrt@5"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !24
  %valid_flag = alloca i1, align 1, !dbg !24
  %cfstk1019 = alloca [13 x %"struct.rubinius::Object"*], align 8, !dbg !24
  %var_mem1020 = alloca [7 x %"struct.rubinius::Object"*], align 8, !dbg !24
  %call_frame = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk1019 to %"struct.rubinius::CallFrame"*, !dbg !24
  %stack = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 9, !dbg !24
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !24
  %arg.total = load i32* %total_pos, align 4, !dbg !24
  %arg_cmp = icmp eq i32 %arg.total, 1, !dbg !24
  %cfstk1361021 = alloca [17 x %"struct.rubinius::Object"*], align 8
  %var_mem1391022 = alloca [9 x %"struct.rubinius::Object"*], align 8
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !24

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !24
  br label %return_pad, !dbg !24

import_args:                                      ; preds = %entry
  %0 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 3, !dbg !24
  %1 = getelementptr inbounds [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 0, !dbg !24
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !24
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !24
  %2 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 8, !dbg !24
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !24
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !24
  %3 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 2, !dbg !24
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !24
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !24
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !24
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !24
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !24
  %5 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 1, !dbg !24
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !24
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !24
  %6 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 4, !dbg !24
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !24
  store i32 40, i32* %7, align 8, !dbg !24
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !24
  store i32 0, i32* %8, align 4, !dbg !24
  %9 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 7, !dbg !24
  %vars.c = bitcast [7 x %"struct.rubinius::Object"*]* %var_mem1020 to %"struct.rubinius::Object"*, !dbg !24
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !24
  %10 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 5, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 140495695135296 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !24
  %stack_pos1 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 10, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !24
  %stack_pos2 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 11, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !24
  %stack_pos3 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk1019, i64 0, i64 12, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3, align 8, !dbg !24
  %11 = getelementptr inbounds [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 0, !dbg !24
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %11, align 8, !dbg !24
  %12 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !24
  %args.recv = load %"struct.rubinius::Object"** %12, align 8, !dbg !24, !rbx-classid !25
  %13 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 2, !dbg !24
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %13, align 8, !dbg !24
  %14 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 4, !dbg !24
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !24
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %14, align 8, !dbg !24
  %15 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !24
  %args.block = load %"struct.rubinius::Object"** %15, align 8, !dbg !24
  %16 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 3, !dbg !24
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %16, align 8, !dbg !24
  %17 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 1, !dbg !24
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %17, align 8, !dbg !24
  %18 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 5, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %18, align 8, !dbg !24
  %19 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem1020, i64 0, i64 6, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %19, align 8, !dbg !24
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !24
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !24
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !24
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %19, align 8, !dbg !24
  %20 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !26
  %vm_jit = load %"struct.rubinius::VMJIT"** %20, align 8, !dbg !26
  %21 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !26
  %stack_limit = load i64* %21, align 8, !dbg !26
  %stack_end = ptrtoint [13 x %"struct.rubinius::Object"*]* %cfstk1019 to i64, !dbg !26
  %22 = icmp ult i64 %stack_end, %stack_limit, !dbg !26
  %23 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !26
  %check_interrupts = load i8* %23, align 1, !dbg !26
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !26
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !26
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !26
  %needs_check = or i1 %needs_interrupts, %22, !dbg !26
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !26

bail_out:                                         ; preds = %correct_serial, %check_active1004, %continue982, %use_call981, %use_call925, %use_call896, %use_call871, %class_fallback815, %return_pad127, %use_call87, %use_call63, %class_fallback28, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !24
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !24

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !24
  br label %return_pad, !dbg !24

method_body:                                      ; preds = %prologue_check.method_body_crit_edge, %import_args
  %24 = phi %"struct.rubinius::Object"* [ %.pre, %prologue_check.method_body_crit_edge ], [ %constant_scope.c, %import_args ]
  %local26 = phi %"struct.rubinius::Object"* [ %local.pre, %prologue_check.method_body_crit_edge ], [ %arg_val, %import_args ]
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !24
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !24
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !24
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !24
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !24
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !24
  store %"struct.rubinius::Object"* %local26, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !27
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !27
  %constant_scope6 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !27
  %frame_scope = bitcast %"struct.rubinius::Object"* %24 to %"struct.rubinius::ConstantScope"*, !dbg !27
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope6, %frame_scope, !dbg !27
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !27

check_serial:                                     ; preds = %method_body
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !27
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !27
  %serial = load i32* %serial_pos, align 4, !dbg !27
  %use_cache7 = icmp eq i32 %global_serial, %serial, !dbg !27
  br i1 %use_cache7, label %use_cache, label %use_call, !dbg !27

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 2, !dbg !27
  %cached_value = load %"struct.rubinius::Object"** %value_pos, align 8, !dbg !27
  br label %continue, !dbg !27

use_call:                                         ; preds = %check_serial, %method_body
  store i32 2, i32* %8, align 4, !dbg !27
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !27
  br i1 %null_check, label %bail_out, label %continue, !dbg !27

continue:                                         ; preds = %use_call, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %use_call ], !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !27
  %cast = ptrtoint %"struct.rubinius::Object"* %local26 to i64, !dbg !27
  %masked = and i64 %cast, 3, !dbg !27
  %is_reference = icmp eq i64 %masked, 0, !dbg !27
  br i1 %is_reference, label %use_cache16, label %negative, !dbg !27

continue14:                                       ; preds = %use_cache16, %negative
  %constant17 = phi %"struct.rubinius::Object"* [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %use_cache16 ], !dbg !27
  store %"struct.rubinius::Object"* %constant17, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  store %"struct.rubinius::Object"* %constant17, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !27
  %as_int = ptrtoint %"struct.rubinius::Object"* %constant17 to i64, !dbg !27
  %and = and i64 %as_int, 10, !dbg !27
  %is_true = icmp eq i64 %and, 10, !dbg !27
  br i1 %is_true, label %ip16, label %ip10, !dbg !27

negative:                                         ; preds = %use_cache16, %continue
  br label %continue14, !dbg !27

use_cache16:                                      ; preds = %continue
  %word_pos = getelementptr %"struct.rubinius::Object"* %local26, i64 0, i32 0, i32 0, i32 0, !dbg !27
  %flags = load i64* %word_pos, align 8, !dbg !27
  %mask = and i64 %flags, 255, !dbg !27
  %is_type = icmp eq i64 %mask, 35, !dbg !27
  br i1 %is_type, label %continue14, label %negative, !dbg !27

ip10:                                             ; preds = %continue14
  store %"struct.rubinius::Object"* %local26, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br i1 %is_reference, label %check_class_id, label %class_fallback28, !dbg !27

continue30:                                       ; preds = %class_fallback28, %correct_serial
  %send_result = phi %"struct.rubinius::Object"* [ %prim_value, %correct_serial ], [ %call_site_execute, %class_fallback28 ], !dbg !27
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br label %ip16, !dbg !27

ip16:                                             ; preds = %continue30, %continue14
  %stack_load49 = phi %"struct.rubinius::Object"* [ %send_result, %continue30 ], [ %constant17, %continue14 ]
  %as_int50 = ptrtoint %"struct.rubinius::Object"* %stack_load49 to i64, !dbg !27
  %and51 = and i64 %as_int50, 15, !dbg !27
  %is_true52 = icmp eq i64 %and51, 10, !dbg !27
  br i1 %is_true52, label %ip25, label %ip18, !dbg !27

check_class_id:                                   ; preds = %ip10
  %class_pos = getelementptr %"struct.rubinius::Object"* %local26, i64 0, i32 0, i32 1, !dbg !27
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !27
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !27
  %class_id = load i32* %class_id_pos, align 4, !dbg !27
  %check_class_id36 = icmp eq i32 %class_id, 77, !dbg !27
  br i1 %check_class_id36, label %correct_class, label %class_fallback28, !dbg !27

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !27
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !27
  %check_serial_id = icmp eq i32 %serial_id, 224, !dbg !27
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback29, !dbg !27

class_fallback28:                                 ; preds = %correct_serial.class_fallback28_crit_edge, %check_class_id, %ip10
  %stack_load44 = phi %"struct.rubinius::Object"* [ %stack_load44.pre, %correct_serial.class_fallback28_crit_edge ], [ %local26, %check_class_id ], [ %local26, %ip10 ]
  store %"struct.rubinius::Object"* %stack_load44, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !27
  store i32 0, i32* %out_args_total, align 8, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !27
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), align 64, !dbg !27
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !27
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !27
  store i32 13, i32* %8, align 4, !dbg !27
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check46 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !27
  br i1 %null_check46, label %bail_out, label %continue30, !dbg !27

correct_serial:                                   ; preds = %correct_class
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local26) #1, !dbg !27
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !27
  switch i64 %magicptr, label %continue30 [
    i64 34, label %correct_serial.class_fallback28_crit_edge
    i64 0, label %bail_out
  ], !dbg !27

correct_serial.class_fallback28_crit_edge:        ; preds = %correct_serial
  %stack_load44.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br label %class_fallback28, !dbg !27

serial_fallback29:                                ; preds = %correct_class
  store i32 13, i32* %8, align 4, !dbg !27
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

ip18:                                             ; preds = %ip16
  %constant_cache55 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !27
  %constant_cache_pos56 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i64 0, i32 4, !dbg !27
  %constant_scope57 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos56, align 8, !dbg !27
  %26 = load %"struct.rubinius::Object"** %5, align 8, !dbg !27
  %frame_scope59 = bitcast %"struct.rubinius::Object"* %26 to %"struct.rubinius::ConstantScope"*, !dbg !27
  %same_scope60 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope57, %frame_scope59, !dbg !27
  br i1 %same_scope60, label %check_serial61, label %use_call63, !dbg !27

check_serial61:                                   ; preds = %ip18
  %global_serial54 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !27
  %serial_pos65 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i64 0, i32 7, !dbg !27
  %serial66 = load i32* %serial_pos65, align 4, !dbg !27
  %use_cache67 = icmp eq i32 %global_serial54, %serial66, !dbg !27
  br i1 %use_cache67, label %use_cache62, label %use_call63, !dbg !27

use_cache62:                                      ; preds = %check_serial61
  %value_pos68 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache55, i64 0, i32 2, !dbg !27
  %cached_value69 = load %"struct.rubinius::Object"** %value_pos68, align 8, !dbg !27
  br label %continue64, !dbg !27

use_call63:                                       ; preds = %check_serial61, %ip18
  store i32 18, i32* %8, align 4, !dbg !27
  %push_const_fast70 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check73 = icmp eq %"struct.rubinius::Object"* %push_const_fast70, null, !dbg !27
  br i1 %null_check73, label %bail_out, label %continue64, !dbg !27

continue64:                                       ; preds = %use_call63, %use_cache62
  %constant74 = phi %"struct.rubinius::Object"* [ %cached_value69, %use_cache62 ], [ %push_const_fast70, %use_call63 ], !dbg !27, !rbx-classid !29
  store %"struct.rubinius::Object"* %constant74, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  %constant_cache79 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !27
  %constant_cache_pos80 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i64 0, i32 4, !dbg !27
  %constant_scope81 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos80, align 8, !dbg !27
  %same_scope84 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope81, %frame_scope59, !dbg !27
  br i1 %same_scope84, label %check_serial85, label %use_call87, !dbg !27

check_serial85:                                   ; preds = %continue64
  %global_serial78 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !27
  %serial_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i64 0, i32 7, !dbg !27
  %serial90 = load i32* %serial_pos89, align 4, !dbg !27
  %use_under = icmp eq i32 %global_serial78, %serial90, !dbg !27
  br i1 %use_under, label %check_under, label %use_call87, !dbg !27

check_under:                                      ; preds = %check_serial85
  %value_pos91 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i64 0, i32 3, !dbg !27
  %cached_under = load %"struct.rubinius::Module"** %value_pos91, align 8, !dbg !27
  %downcast = getelementptr inbounds %"struct.rubinius::Module"* %cached_under, i64 0, i32 0, !dbg !27
  %use_cache92 = icmp eq %"struct.rubinius::Object"* %downcast, %constant74, !dbg !27
  br i1 %use_cache92, label %use_cache86, label %use_call87, !dbg !27

use_cache86:                                      ; preds = %check_under
  %value_pos93 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache79, i64 0, i32 2, !dbg !27
  %cached_value94 = load %"struct.rubinius::Object"** %value_pos93, align 8, !dbg !27
  br label %continue88, !dbg !27

use_call87:                                       ; preds = %check_under, %check_serial85, %continue64
  store i32 20, i32* %8, align 4, !dbg !27
  %constant95 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant74) #0, !dbg !27
  %null_check98 = icmp eq %"struct.rubinius::Object"* %constant95, null, !dbg !27
  br i1 %null_check98, label %bail_out, label %continue88, !dbg !27

continue88:                                       ; preds = %use_call87, %use_cache86
  %constant99 = phi %"struct.rubinius::Object"* [ %cached_value94, %use_cache86 ], [ %constant95, %use_call87 ], !dbg !27, !rbx-classid !30
  store %"struct.rubinius::Object"* %constant99, %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br label %return_pad, !dbg !27

ip25:                                             ; preds = %ip16
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !31
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %local106 = load %"struct.rubinius::Object"** %19, align 8, !dbg !31, !rbx-classid !32
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !31
  %cast113 = ptrtoint %"struct.rubinius::Object"* %system_object to i64, !dbg !31
  %masked114 = and i64 %cast113, 3, !dbg !31
  %is_reference115 = icmp eq i64 %masked114, 0, !dbg !31
  br i1 %is_reference115, label %check_class_id116, label %class_fallback108, !dbg !31

check_class_id116:                                ; preds = %ip25
  %class_pos119 = getelementptr %"struct.rubinius::Object"* %system_object, i64 0, i32 0, i32 1, !dbg !31
  %ref_class120 = load %"struct.rubinius::Class"** %class_pos119, align 8, !dbg !31
  %class_id_pos121 = getelementptr %"struct.rubinius::Class"* %ref_class120, i64 0, i32 4, !dbg !31
  %class_id122 = load i32* %class_id_pos121, align 4, !dbg !31
  %check_class_id123 = icmp eq i32 %class_id122, 451, !dbg !31
  br i1 %check_class_id123, label %correct_class117, label %class_fallback108, !dbg !31

correct_class117:                                 ; preds = %check_class_id116
  %serial_id_pos124 = getelementptr %"struct.rubinius::Class"* %ref_class120, i64 0, i32 5, !dbg !31
  %serial_id125 = load i32* %serial_id_pos124, align 4, !dbg !31
  %check_serial_id126 = icmp eq i32 %serial_id125, 314, !dbg !31
  br i1 %check_serial_id126, label %correct_serial118, label %serial_fallback109, !dbg !31

class_fallback108:                                ; preds = %check_class_id116, %ip25
  store i32 30, i32* %8, align 4, !dbg !31
  %27 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 30, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !31
  br label %return_pad, !dbg !31

correct_serial118:                                ; preds = %correct_class117
  %call_frame137 = bitcast [17 x %"struct.rubinius::Object"*]* %cfstk1361021 to %"struct.rubinius::CallFrame"*, !dbg !33
  %stack138 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 9, !dbg !33
  %28 = getelementptr inbounds [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 0, !dbg !33
  %call_frame.c = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk1019 to %"struct.rubinius::Object"*, !dbg !33
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %28, align 8, !dbg !33
  %29 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 2, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 140495703223408 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %29, align 8, !dbg !33
  %compiled_code141 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140495703223408 to %"struct.rubinius::CompiledCode"**), align 16, !dbg !33
  %30 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 3, !dbg !33
  %compiled_code141.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code141, i64 0, i32 0, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %compiled_code141.c, %"struct.rubinius::Object"** %30, align 8, !dbg !33
  %constant_scope_pos142 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code141, i64 0, i32 13, !dbg !33
  %constant_scope143 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos142, align 8, !dbg !33
  %31 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 1, !dbg !33
  %constant_scope143.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope143 to %"struct.rubinius::Object"*, !dbg !33
  store %"struct.rubinius::Object"* %constant_scope143.c, %"struct.rubinius::Object"** %31, align 8, !dbg !33
  %32 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 4, !dbg !33
  %33 = bitcast %"struct.rubinius::Object"** %32 to i32*, !dbg !33
  store i32 12, i32* %33, align 8, !dbg !33
  %34 = getelementptr %"struct.rubinius::CallFrame"* %call_frame137, i64 0, i32 5, !dbg !33
  store i32 0, i32* %34, align 4, !dbg !33
  %35 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 7, !dbg !33
  %vars140.c = bitcast [9 x %"struct.rubinius::Object"*]* %var_mem1391022 to %"struct.rubinius::Object"*, !dbg !33
  store %"struct.rubinius::Object"* %vars140.c, %"struct.rubinius::Object"** %35, align 8, !dbg !33
  br label %stack_nil, !dbg !33

serial_fallback109:                               ; preds = %correct_class117
  store i32 30, i32* %8, align 4, !dbg !31
  %36 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 30, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad, !dbg !31

stack_nil:                                        ; preds = %stack_nil, %correct_serial118
  %counter_alloca.0 = phi i32 [ 0, %correct_serial118 ], [ %added, %stack_nil ]
  %37 = sext i32 %counter_alloca.0 to i64, !dbg !33
  %stack138.sum = add i64 %37, 9, !dbg !33
  %stack_pos144 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 %stack138.sum, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos144, align 8, !dbg !33
  %added = add i32 %counter_alloca.0, 1, !dbg !33
  %loop_check = icmp eq i32 %added, 8, !dbg !33
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !33

bottom:                                           ; preds = %stack_nil
  %module = load %"struct.rubinius::Module"** inttoptr (i64 140495703223424 to %"struct.rubinius::Module"**), align 128, !dbg !33
  %38 = getelementptr inbounds [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 0, !dbg !33
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %38, align 8, !dbg !33
  %39 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 2, !dbg !33
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %39, align 8, !dbg !33
  %40 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 4, !dbg !33
  %module.c = getelementptr inbounds %"struct.rubinius::Module"* %module, i64 0, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %module.c, %"struct.rubinius::Object"** %40, align 8, !dbg !33
  %41 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 3, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %41, align 8, !dbg !33
  %42 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 1, !dbg !33
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %42, align 8, !dbg !33
  %43 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 5, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %43, align 8, !dbg !33
  %44 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 6, !dbg !33
  %45 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 7, !dbg !33
  %46 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem1391022, i64 0, i64 8, !dbg !33
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %44, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %45, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %46, align 8, !dbg !33
  %stack_pos276 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 10, !dbg !34
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack138, align 8, !dbg !35
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !36
  %constant_cache356 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !36
  %constant_cache_pos357 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i64 0, i32 4, !dbg !36
  %constant_scope358 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos357, align 8, !dbg !36
  %47 = load %"struct.rubinius::Object"** %31, align 8, !dbg !36
  %frame_scope360 = bitcast %"struct.rubinius::Object"* %47 to %"struct.rubinius::ConstantScope"*, !dbg !36
  %same_scope361 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope358, %frame_scope360, !dbg !36
  br i1 %same_scope361, label %check_serial362, label %use_call364, !dbg !36

bail_out149:                                      ; preds = %check_active783, %check_active770, %check_active763, %continue734, %use_call733, %check_active708, %check_active696, %check_active689, %continue666, %use_call665, %ip105, %ip97, %ip89, %continue547, %use_call546, %continue497, %use_call496, %use_call364
  %rth150 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137), !dbg !33
  br i1 %rth150, label %ret_raise_val151, label %return_pad127, !dbg !33

ret_raise_val151:                                 ; preds = %bail_out149
  %crv153 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !33
  br label %return_pad127, !dbg !33

check_serial362:                                  ; preds = %bottom
  %global_serial355 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !36
  %serial_pos366 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i64 0, i32 7, !dbg !36
  %serial367 = load i32* %serial_pos366, align 4, !dbg !36
  %use_cache368 = icmp eq i32 %global_serial355, %serial367, !dbg !36
  br i1 %use_cache368, label %use_cache363, label %use_call364, !dbg !36

use_cache363:                                     ; preds = %check_serial362
  %value_pos369 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache356, i64 0, i32 2, !dbg !36
  %cached_value370 = load %"struct.rubinius::Object"** %value_pos369, align 8, !dbg !36
  br label %continue365, !dbg !36

use_call364:                                      ; preds = %check_serial362, %bottom
  store i32 53, i32* %34, align 4, !dbg !36
  %push_const_fast371 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !36
  %null_check374 = icmp eq %"struct.rubinius::Object"* %push_const_fast371, null, !dbg !36
  br i1 %null_check374, label %bail_out149, label %continue365, !dbg !36

continue365:                                      ; preds = %use_call364, %use_cache363
  %constant375 = phi %"struct.rubinius::Object"* [ %cached_value370, %use_cache363 ], [ %push_const_fast371, %use_call364 ], !dbg !36, !rbx-classid !37
  %stack_pos376 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 11, !dbg !36
  store %"struct.rubinius::Object"* %constant375, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !36
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !36
  %cast388 = ptrtoint %"struct.rubinius::Object"* %constant375 to i64, !dbg !36
  %masked389 = and i64 %cast388, 3, !dbg !36
  %is_reference390 = icmp eq i64 %masked389, 0, !dbg !36
  br i1 %is_reference390, label %check_class_id391, label %class_fallback383, !dbg !36

check_class_id391:                                ; preds = %continue365
  %class_pos394 = getelementptr %"struct.rubinius::Object"* %constant375, i64 0, i32 0, i32 1, !dbg !36
  %ref_class395 = load %"struct.rubinius::Class"** %class_pos394, align 8, !dbg !36
  %class_id_pos396 = getelementptr %"struct.rubinius::Class"* %ref_class395, i64 0, i32 4, !dbg !36
  %class_id397 = load i32* %class_id_pos396, align 4, !dbg !36
  %check_class_id398 = icmp eq i32 %class_id397, 78, !dbg !36
  br i1 %check_class_id398, label %correct_class392, label %class_fallback383, !dbg !36

correct_class392:                                 ; preds = %check_class_id391
  %serial_id_pos399 = getelementptr %"struct.rubinius::Class"* %ref_class395, i64 0, i32 5, !dbg !36
  %serial_id400 = load i32* %serial_id_pos399, align 4, !dbg !36
  %check_serial_id401 = icmp eq i32 %serial_id400, 267, !dbg !36
  br i1 %check_serial_id401, label %correct_serial393, label %serial_fallback384, !dbg !36

class_fallback383:                                ; preds = %check_class_id391, %continue365
  store i32 56, i32* %34, align 4, !dbg !36
  %48 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !36
  br label %return_pad127, !dbg !36

correct_serial393:                                ; preds = %correct_class392
  %cast456 = ptrtoint %"struct.rubinius::Object"* %local106 to i64, !dbg !38
  %masked457 = and i64 %cast456, 3, !dbg !38
  %is_reference458 = icmp eq i64 %masked457, 0, !dbg !38
  br i1 %is_reference458, label %use_cache455, label %negative454, !dbg !38

serial_fallback384:                               ; preds = %correct_class392
  store i32 56, i32* %34, align 4, !dbg !36
  %49 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad127, !dbg !36

negative454:                                      ; preds = %use_cache455, %correct_serial393
  br label %check_active469, !dbg !38

use_cache455:                                     ; preds = %correct_serial393
  %word_pos459 = getelementptr %"struct.rubinius::Object"* %local106, i64 0, i32 0, i32 0, i32 0, !dbg !38
  %flags460 = load i64* %word_pos459, align 8, !dbg !38
  %mask461 = and i64 %flags460, 255, !dbg !38
  %is_type462 = icmp eq i64 %mask461, 35, !dbg !38
  br i1 %is_type462, label %check_active469, label %negative454, !dbg !38

check_active469:                                  ; preds = %negative454, %use_cache455
  %constant464 = phi %"struct.rubinius::Object"* [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative454 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %use_cache455 ], !dbg !38
  store %"struct.rubinius::Object"* %constant464, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !36
  %as_int474 = ptrtoint %"struct.rubinius::Object"* %constant464 to i64, !dbg !36
  %and475 = and i64 %as_int474, 10, !dbg !36
  %is_true476 = icmp eq i64 %and475, 10, !dbg !36
  br i1 %is_true476, label %ip66, label %ip61, !dbg !36

ip61:                                             ; preds = %check_active469
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack138, align 8, !dbg !39
  br label %return_pad127, !dbg !39

ip66:                                             ; preds = %check_active469
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !40
  %constant_cache488 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !40
  %constant_cache_pos489 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i64 0, i32 4, !dbg !40
  %constant_scope490 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos489, align 8, !dbg !40
  %same_scope493 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope490, %frame_scope360, !dbg !40
  br i1 %same_scope493, label %check_serial494, label %use_call496, !dbg !40

check_serial494:                                  ; preds = %ip66
  %global_serial487 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !40
  %serial_pos498 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i64 0, i32 7, !dbg !40
  %serial499 = load i32* %serial_pos498, align 4, !dbg !40
  %use_cache500 = icmp eq i32 %global_serial487, %serial499, !dbg !40
  br i1 %use_cache500, label %use_cache495, label %use_call496, !dbg !40

use_cache495:                                     ; preds = %check_serial494
  %value_pos501 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache488, i64 0, i32 2, !dbg !40
  %cached_value502 = load %"struct.rubinius::Object"** %value_pos501, align 8, !dbg !40
  br label %continue497, !dbg !40

use_call496:                                      ; preds = %check_serial494, %ip66
  store i32 67, i32* %34, align 4, !dbg !40
  %push_const_fast503 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !40
  %null_check506 = icmp eq %"struct.rubinius::Object"* %push_const_fast503, null, !dbg !40
  br i1 %null_check506, label %bail_out149, label %continue497, !dbg !40

continue497:                                      ; preds = %use_call496, %use_cache495
  %constant507 = phi %"struct.rubinius::Object"* [ %cached_value502, %use_cache495 ], [ %push_const_fast503, %use_call496 ], !dbg !40, !rbx-classid !41
  store %"struct.rubinius::Object"* %constant507, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local106, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !40
  store %"struct.rubinius::Object"* %constant507, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 1, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos376, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const518 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473928 to %"struct.rubinius::CallSite"**), align 8, !dbg !40
  %execute_pos519 = getelementptr %"struct.rubinius::CallSite"* %cache_const518, i64 0, i32 2, !dbg !40
  %execute520 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos519, align 8, !dbg !40
  store i32 70, i32* %34, align 4, !dbg !40
  %call_site_execute521 = call %"struct.rubinius::Object"* %execute520(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const518, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check524 = icmp eq %"struct.rubinius::Object"* %call_site_execute521, null, !dbg !40
  br i1 %null_check524, label %bail_out149, label %check_active523, !dbg !40

check_active523:                                  ; preds = %continue497
  store %"struct.rubinius::Object"* %call_site_execute521, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !40
  %as_int528 = ptrtoint %"struct.rubinius::Object"* %call_site_execute521 to i64, !dbg !40
  %and529 = and i64 %as_int528, 15, !dbg !40
  %is_true530 = icmp eq i64 %and529, 10, !dbg !40
  br i1 %is_true530, label %ip89, label %ip75, !dbg !40

ip75:                                             ; preds = %check_active523
  %self532 = load %"struct.rubinius::Object"** %39, align 8, !dbg !42, !rbx-classid !43
  store %"struct.rubinius::Object"* %self532, %"struct.rubinius::Object"** %stack138, align 8, !dbg !42
  %local535 = load %"struct.rubinius::Object"** %44, align 8, !dbg !42, !rbx-classid !32
  store %"struct.rubinius::Object"* %local535, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !42
  %constant_cache538 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !42
  %constant_cache_pos539 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 4, !dbg !42
  %constant_scope540 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos539, align 8, !dbg !42
  %50 = load %"struct.rubinius::Object"** %31, align 8, !dbg !42
  %frame_scope542 = bitcast %"struct.rubinius::Object"* %50 to %"struct.rubinius::ConstantScope"*, !dbg !42
  %same_scope543 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope540, %frame_scope542, !dbg !42
  br i1 %same_scope543, label %check_serial544, label %use_call546, !dbg !42

check_serial544:                                  ; preds = %ip75
  %global_serial537 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !42
  %serial_pos548 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 7, !dbg !42
  %serial549 = load i32* %serial_pos548, align 4, !dbg !42
  %use_cache550 = icmp eq i32 %global_serial537, %serial549, !dbg !42
  br i1 %use_cache550, label %use_cache545, label %use_call546, !dbg !42

use_cache545:                                     ; preds = %check_serial544
  %value_pos551 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 2, !dbg !42
  %cached_value552 = load %"struct.rubinius::Object"** %value_pos551, align 8, !dbg !42
  br label %continue547, !dbg !42

use_call546:                                      ; preds = %check_serial544, %ip75
  store i32 79, i32* %34, align 4, !dbg !42
  %push_const_fast553 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !42
  %null_check556 = icmp eq %"struct.rubinius::Object"* %push_const_fast553, null, !dbg !42
  br i1 %null_check556, label %bail_out149, label %continue547, !dbg !42

continue547:                                      ; preds = %use_call546, %use_cache545
  %constant557 = phi %"struct.rubinius::Object"* [ %cached_value552, %use_cache545 ], [ %push_const_fast553, %use_call546 ], !dbg !42, !rbx-classid !44
  store %"struct.rubinius::Object"* %constant557, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !42
  %stack_pos559 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 12, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 15694 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos559, align 8, !dbg !42
  store %"struct.rubinius::Object"* %self532, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !42
  store i32 3, i32* %out_args_total, align 8, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos276, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !42
  %cache_const563 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474040 to %"struct.rubinius::CallSite"**), align 8, !dbg !42
  %execute_pos564 = getelementptr %"struct.rubinius::CallSite"* %cache_const563, i64 0, i32 2, !dbg !42
  %execute565 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos564, align 8, !dbg !42
  store i32 84, i32* %34, align 4, !dbg !42
  %call_site_execute566 = call %"struct.rubinius::Object"* %execute565(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const563, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check569 = icmp eq %"struct.rubinius::Object"* %call_site_execute566, null, !dbg !42
  br i1 %null_check569, label %bail_out149, label %check_active568, !dbg !42

check_active568:                                  ; preds = %continue547
  store %"struct.rubinius::Object"* %call_site_execute566, %"struct.rubinius::Object"** %stack138, align 8, !dbg !42
  br label %return_pad127, !dbg !42

ip89:                                             ; preds = %check_active523
  %stack_load573 = load %"struct.rubinius::Object"** %stack138, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  store %"struct.rubinius::Object"* %stack_load573, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos376, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const585 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474104 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos586 = getelementptr %"struct.rubinius::CallSite"* %cache_const585, i64 0, i32 2, !dbg !45
  %execute587 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos586, align 8, !dbg !45
  store i32 92, i32* %34, align 4, !dbg !45
  %call_site_execute588 = call %"struct.rubinius::Object"* %execute587(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const585, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check591 = icmp eq %"struct.rubinius::Object"* %call_site_execute588, null, !dbg !45
  br i1 %null_check591, label %bail_out149, label %check_active590, !dbg !45

check_active590:                                  ; preds = %ip89
  store %"struct.rubinius::Object"* %call_site_execute588, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  %as_int595 = ptrtoint %"struct.rubinius::Object"* %call_site_execute588 to i64, !dbg !45
  %and596 = and i64 %as_int595, 15, !dbg !45
  %is_true597 = icmp eq i64 %and596, 10, !dbg !45
  br i1 %is_true597, label %ip97, label %ip115, !dbg !45

ip97:                                             ; preds = %check_active590
  %stack_load600 = load %"struct.rubinius::Object"** %stack138, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  store %"struct.rubinius::Object"* %stack_load600, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos376, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const612 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474168 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos613 = getelementptr %"struct.rubinius::CallSite"* %cache_const612, i64 0, i32 2, !dbg !45
  %execute614 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos613, align 8, !dbg !45
  store i32 100, i32* %34, align 4, !dbg !45
  %call_site_execute615 = call %"struct.rubinius::Object"* %execute614(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const612, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check618 = icmp eq %"struct.rubinius::Object"* %call_site_execute615, null, !dbg !45
  br i1 %null_check618, label %bail_out149, label %check_active617, !dbg !45

check_active617:                                  ; preds = %ip97
  store %"struct.rubinius::Object"* %call_site_execute615, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  %as_int622 = ptrtoint %"struct.rubinius::Object"* %call_site_execute615 to i64, !dbg !45
  %and623 = and i64 %as_int622, 15, !dbg !45
  %is_true624 = icmp eq i64 %and623, 10, !dbg !45
  br i1 %is_true624, label %ip105, label %ip115, !dbg !45

ip105:                                            ; preds = %check_active617
  %stack_load627 = load %"struct.rubinius::Object"** %stack138, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  store %"struct.rubinius::Object"* %stack_load627, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos376, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const639 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474232 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos640 = getelementptr %"struct.rubinius::CallSite"* %cache_const639, i64 0, i32 2, !dbg !45
  %execute641 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos640, align 8, !dbg !45
  store i32 108, i32* %34, align 4, !dbg !45
  %call_site_execute642 = call %"struct.rubinius::Object"* %execute641(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const639, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check645 = icmp eq %"struct.rubinius::Object"* %call_site_execute642, null, !dbg !45
  br i1 %null_check645, label %bail_out149, label %check_active644, !dbg !45

check_active644:                                  ; preds = %ip105
  store %"struct.rubinius::Object"* %call_site_execute642, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !45
  %as_int649 = ptrtoint %"struct.rubinius::Object"* %call_site_execute642 to i64, !dbg !45
  %and650 = and i64 %as_int649, 15, !dbg !45
  %is_true651 = icmp eq i64 %and650, 10, !dbg !45
  br i1 %is_true651, label %ip139, label %ip115, !dbg !45

ip139:                                            ; preds = %check_active644
  %self654 = load %"struct.rubinius::Object"** %39, align 8, !dbg !46, !rbx-classid !43
  store %"struct.rubinius::Object"* %self654, %"struct.rubinius::Object"** %stack138, align 8, !dbg !46
  %constant_cache657 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**), align 2048, !dbg !46
  %constant_cache_pos658 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i64 0, i32 4, !dbg !46
  %constant_scope659 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos658, align 8, !dbg !46
  %51 = load %"struct.rubinius::Object"** %31, align 8, !dbg !46
  %frame_scope661 = bitcast %"struct.rubinius::Object"* %51 to %"struct.rubinius::ConstantScope"*, !dbg !46
  %same_scope662 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope659, %frame_scope661, !dbg !46
  br i1 %same_scope662, label %check_serial663, label %use_call665, !dbg !46

check_serial663:                                  ; preds = %ip139
  %global_serial656 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !46
  %serial_pos667 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i64 0, i32 7, !dbg !46
  %serial668 = load i32* %serial_pos667, align 4, !dbg !46
  %use_cache669 = icmp eq i32 %global_serial656, %serial668, !dbg !46
  br i1 %use_cache669, label %use_cache664, label %use_call665, !dbg !46

use_cache664:                                     ; preds = %check_serial663
  %value_pos670 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache657, i64 0, i32 2, !dbg !46
  %cached_value671 = load %"struct.rubinius::Object"** %value_pos670, align 8, !dbg !46
  br label %continue666, !dbg !46

use_call665:                                      ; preds = %check_serial663, %ip139
  store i32 141, i32* %34, align 4, !dbg !46
  %push_const_fast672 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !46
  %null_check675 = icmp eq %"struct.rubinius::Object"* %push_const_fast672, null, !dbg !46
  br i1 %null_check675, label %bail_out149, label %continue666, !dbg !46

continue666:                                      ; preds = %use_call665, %use_cache664
  %constant676 = phi %"struct.rubinius::Object"* [ %cached_value671, %use_cache664 ], [ %push_const_fast672, %use_call665 ], !dbg !46, !rbx-classid !47
  store %"struct.rubinius::Object"* %constant676, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !46
  %52 = load %"struct.rubinius::Object"** %30, align 8, !dbg !46
  %literals_pos = getelementptr %"struct.rubinius::Object"* %52, i64 8, !dbg !46
  %53 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !46
  %literals = load %"struct.rubinius::Tuple"** %53, align 8, !dbg !46
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 10, !dbg !46
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !46, !rbx-classid !48
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !46
  %local680 = load %"struct.rubinius::Object"** %44, align 8, !dbg !46, !rbx-classid !32
  %stack_pos681 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 12, !dbg !46
  store %"struct.rubinius::Object"* %local680, %"struct.rubinius::Object"** %stack_pos681, align 8, !dbg !46
  store %"struct.rubinius::Object"* %local680, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 14438 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 0, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  %cache_const684 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474544 to %"struct.rubinius::CallSite"**), align 16, !dbg !46
  %execute_pos685 = getelementptr %"struct.rubinius::CallSite"* %cache_const684, i64 0, i32 2, !dbg !46
  %execute686 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos685, align 8, !dbg !46
  store i32 147, i32* %34, align 4, !dbg !46
  %call_site_execute687 = call %"struct.rubinius::Object"* %execute686(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const684, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check690 = icmp eq %"struct.rubinius::Object"* %call_site_execute687, null, !dbg !46
  br i1 %null_check690, label %bail_out149, label %check_active689, !dbg !46

check_active689:                                  ; preds = %continue666
  store %"struct.rubinius::Object"* %call_site_execute687, %"struct.rubinius::Object"** %stack_pos681, align 8, !dbg !46
  %cache_const694 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474576 to %"struct.rubinius::CallSite"**), align 16, !dbg !46
  %54 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallSite"* %cache_const694, %"struct.rubinius::Object"* %call_site_execute687), !dbg !46
  %null_check697 = icmp eq %"struct.rubinius::Object"* %54, null, !dbg !46
  br i1 %null_check697, label %bail_out149, label %check_active696, !dbg !46

check_active696:                                  ; preds = %check_active689
  store %"struct.rubinius::Object"* %54, %"struct.rubinius::Object"** %stack_pos681, align 8, !dbg !46
  %55 = load %"struct.rubinius::Object"** %30, align 8, !dbg !46
  %literals_pos701 = getelementptr %"struct.rubinius::Object"* %55, i64 8, !dbg !46
  %56 = bitcast %"struct.rubinius::Object"* %literals_pos701 to %"struct.rubinius::Tuple"**, !dbg !46
  %literals702 = load %"struct.rubinius::Tuple"** %56, align 8, !dbg !46
  %literal_pos703 = getelementptr %"struct.rubinius::Tuple"* %literals702, i64 0, i32 2, i64 13, !dbg !46
  %literal704 = load %"struct.rubinius::Object"** %literal_pos703, align 8, !dbg !46, !rbx-classid !48
  %stack_pos705 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 13, !dbg !46
  store %"struct.rubinius::Object"* %literal704, %"struct.rubinius::Object"** %stack_pos705, align 8, !dbg !46
  %string = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 3, %"struct.rubinius::Object"** %stack_pos376), !dbg !46
  %null_check709 = icmp eq %"struct.rubinius::Object"* %string, null, !dbg !46
  br i1 %null_check709, label %bail_out149, label %check_active708, !dbg !46

check_active708:                                  ; preds = %check_active696
  store %"struct.rubinius::Object"* %string, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !46
  %stack_load712 = load %"struct.rubinius::Object"** %stack138, align 8, !dbg !46, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load712, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 2, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  store %"struct.rubinius::Object"** %stack_pos276, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !46
  %cache_const714 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474632 to %"struct.rubinius::CallSite"**), align 8, !dbg !46
  %execute_pos715 = getelementptr %"struct.rubinius::CallSite"* %cache_const714, i64 0, i32 2, !dbg !46
  %execute716 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos715, align 8, !dbg !46
  store i32 158, i32* %34, align 4, !dbg !46
  %call_site_execute717 = call %"struct.rubinius::Object"* %execute716(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const714, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check720 = icmp eq %"struct.rubinius::Object"* %call_site_execute717, null, !dbg !46
  br i1 %null_check720, label %bail_out149, label %check_active719, !dbg !46

ip115:                                            ; preds = %check_active644, %check_active617, %check_active590
  %self722 = load %"struct.rubinius::Object"** %39, align 8, !dbg !49, !rbx-classid !43
  store %"struct.rubinius::Object"* %self722, %"struct.rubinius::Object"** %stack138, align 8, !dbg !49
  %constant_cache725 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !49
  %constant_cache_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i64 0, i32 4, !dbg !49
  %constant_scope727 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos726, align 8, !dbg !49
  %57 = load %"struct.rubinius::Object"** %31, align 8, !dbg !49
  %frame_scope729 = bitcast %"struct.rubinius::Object"* %57 to %"struct.rubinius::ConstantScope"*, !dbg !49
  %same_scope730 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope727, %frame_scope729, !dbg !49
  br i1 %same_scope730, label %check_serial731, label %use_call733, !dbg !49

check_active719:                                  ; preds = %check_active708
  store %"struct.rubinius::Object"* %call_site_execute717, %"struct.rubinius::Object"** %stack138, align 8, !dbg !46
  br label %return_pad127, !dbg !46

check_serial731:                                  ; preds = %ip115
  %global_serial724 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !49
  %serial_pos735 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i64 0, i32 7, !dbg !49
  %serial736 = load i32* %serial_pos735, align 4, !dbg !49
  %use_cache737 = icmp eq i32 %global_serial724, %serial736, !dbg !49
  br i1 %use_cache737, label %use_cache732, label %use_call733, !dbg !49

use_cache732:                                     ; preds = %check_serial731
  %value_pos738 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache725, i64 0, i32 2, !dbg !49
  %cached_value739 = load %"struct.rubinius::Object"** %value_pos738, align 8, !dbg !49
  br label %continue734, !dbg !49

use_call733:                                      ; preds = %check_serial731, %ip115
  store i32 117, i32* %34, align 4, !dbg !49
  %push_const_fast740 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check743 = icmp eq %"struct.rubinius::Object"* %push_const_fast740, null, !dbg !49
  br i1 %null_check743, label %bail_out149, label %continue734, !dbg !49

continue734:                                      ; preds = %use_call733, %use_cache732
  %constant744 = phi %"struct.rubinius::Object"* [ %cached_value739, %use_cache732 ], [ %push_const_fast740, %use_call733 ], !dbg !49, !rbx-classid !50
  store %"struct.rubinius::Object"* %constant744, %"struct.rubinius::Object"** %stack_pos276, align 8, !dbg !49
  %58 = load %"struct.rubinius::Object"** %30, align 8, !dbg !49
  %literals_pos748 = getelementptr %"struct.rubinius::Object"* %58, i64 8, !dbg !49
  %59 = bitcast %"struct.rubinius::Object"* %literals_pos748 to %"struct.rubinius::Tuple"**, !dbg !49
  %literals749 = load %"struct.rubinius::Tuple"** %59, align 8, !dbg !49
  %literal_pos750 = getelementptr %"struct.rubinius::Tuple"* %literals749, i64 0, i32 2, i64 10, !dbg !49
  %literal751 = load %"struct.rubinius::Object"** %literal_pos750, align 8, !dbg !49, !rbx-classid !48
  store %"struct.rubinius::Object"* %literal751, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !49
  %local754 = load %"struct.rubinius::Object"** %44, align 8, !dbg !49, !rbx-classid !32
  %stack_pos755 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 12, !dbg !49
  store %"struct.rubinius::Object"* %local754, %"struct.rubinius::Object"** %stack_pos755, align 8, !dbg !49
  store %"struct.rubinius::Object"* %local754, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !49
  store i32 0, i32* %out_args_total, align 8, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !49
  %cache_const758 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474352 to %"struct.rubinius::CallSite"**), align 16, !dbg !49
  %execute_pos759 = getelementptr %"struct.rubinius::CallSite"* %cache_const758, i64 0, i32 2, !dbg !49
  %execute760 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos759, align 8, !dbg !49
  store i32 123, i32* %34, align 4, !dbg !49
  %call_site_execute761 = call %"struct.rubinius::Object"* %execute760(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const758, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check764 = icmp eq %"struct.rubinius::Object"* %call_site_execute761, null, !dbg !49
  br i1 %null_check764, label %bail_out149, label %check_active763, !dbg !49

check_active763:                                  ; preds = %continue734
  store %"struct.rubinius::Object"* %call_site_execute761, %"struct.rubinius::Object"** %stack_pos755, align 8, !dbg !49
  %cache_const768 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474384 to %"struct.rubinius::CallSite"**), align 16, !dbg !49
  %60 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::CallSite"* %cache_const768, %"struct.rubinius::Object"* %call_site_execute761), !dbg !49
  %null_check771 = icmp eq %"struct.rubinius::Object"* %60, null, !dbg !49
  br i1 %null_check771, label %bail_out149, label %check_active770, !dbg !49

check_active770:                                  ; preds = %check_active763
  store %"struct.rubinius::Object"* %60, %"struct.rubinius::Object"** %stack_pos755, align 8, !dbg !49
  %61 = load %"struct.rubinius::Object"** %30, align 8, !dbg !49
  %literals_pos775 = getelementptr %"struct.rubinius::Object"* %61, i64 8, !dbg !49
  %62 = bitcast %"struct.rubinius::Object"* %literals_pos775 to %"struct.rubinius::Tuple"**, !dbg !49
  %literals776 = load %"struct.rubinius::Tuple"** %62, align 8, !dbg !49
  %literal_pos777 = getelementptr %"struct.rubinius::Tuple"* %literals776, i64 0, i32 2, i64 13, !dbg !49
  %literal778 = load %"struct.rubinius::Object"** %literal_pos777, align 8, !dbg !49, !rbx-classid !48
  %stack_pos779 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk1361021, i64 0, i64 13, !dbg !49
  store %"struct.rubinius::Object"* %literal778, %"struct.rubinius::Object"** %stack_pos779, align 8, !dbg !49
  %string781 = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame137, i32 3, %"struct.rubinius::Object"** %stack_pos376), !dbg !49
  %null_check784 = icmp eq %"struct.rubinius::Object"* %string781, null, !dbg !49
  br i1 %null_check784, label %bail_out149, label %check_active783, !dbg !49

check_active783:                                  ; preds = %check_active770
  store %"struct.rubinius::Object"* %string781, %"struct.rubinius::Object"** %stack_pos376, align 8, !dbg !49
  %stack_load787 = load %"struct.rubinius::Object"** %stack138, align 8, !dbg !49, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load787, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !49
  store i32 2, i32* %out_args_total, align 8, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos276, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !49
  %cache_const789 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474440 to %"struct.rubinius::CallSite"**), align 8, !dbg !49
  %execute_pos790 = getelementptr %"struct.rubinius::CallSite"* %cache_const789, i64 0, i32 2, !dbg !49
  %execute791 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos790, align 8, !dbg !49
  store i32 134, i32* %34, align 4, !dbg !49
  %call_site_execute792 = call %"struct.rubinius::Object"* %execute791(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const789, %"struct.rubinius::CallFrame"* %call_frame137, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check795 = icmp eq %"struct.rubinius::Object"* %call_site_execute792, null, !dbg !49
  br i1 %null_check795, label %bail_out149, label %check_active794, !dbg !49

check_active794:                                  ; preds = %check_active783
  store %"struct.rubinius::Object"* %call_site_execute792, %"struct.rubinius::Object"** %stack138, align 8, !dbg !49
  br label %return_pad127, !dbg !49

return_pad127:                                    ; preds = %ip61, %check_active568, %check_active719, %check_active794, %bail_out149, %serial_fallback384, %class_fallback383, %ret_raise_val151
  %stack_load844 = phi %"struct.rubinius::Object"* [ %crv153, %ret_raise_val151 ], [ %48, %class_fallback383 ], [ %49, %serial_fallback384 ], [ null, %bail_out149 ], [ %call_site_execute792, %check_active794 ], [ %call_site_execute717, %check_active719 ], [ %call_site_execute566, %check_active568 ], [ %local106, %ip61 ]
  %null_check800 = icmp eq %"struct.rubinius::Object"* %stack_load844, null, !dbg !31
  br i1 %null_check800, label %bail_out, label %check_active799, !dbg !31

check_active799:                                  ; preds = %return_pad127
  store %"struct.rubinius::Object"* %stack_load844, %"struct.rubinius::Object"** %19, align 8, !dbg !31
  store %"struct.rubinius::Object"* %stack_load844, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %63 = load %"struct.rubinius::Object"** %0, align 8, !dbg !26
  %literals_pos810 = getelementptr %"struct.rubinius::Object"* %63, i64 8, !dbg !26
  %64 = bitcast %"struct.rubinius::Object"* %literals_pos810 to %"struct.rubinius::Tuple"**, !dbg !26
  %literals811 = load %"struct.rubinius::Tuple"** %64, align 8, !dbg !26
  %literal_pos812 = getelementptr %"struct.rubinius::Tuple"* %literals811, i64 0, i32 2, i64 5, !dbg !26
  %literal813 = load %"struct.rubinius::Object"** %literal_pos812, align 8, !dbg !26, !rbx-classid !51
  store %"struct.rubinius::Object"* %literal813, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !26
  %cast820 = ptrtoint %"struct.rubinius::Object"* %stack_load844 to i64, !dbg !26
  %masked821 = and i64 %cast820, 3, !dbg !26
  %is_reference822 = icmp eq i64 %masked821, 0, !dbg !26
  br i1 %is_reference822, label %check_class_id823, label %class_fallback815, !dbg !26

continue817:                                      ; preds = %class_fallback815, %correct_serial825
  %send_result852 = phi %"struct.rubinius::Object"* [ %select_bool842, %correct_serial825 ], [ %call_site_execute849, %class_fallback815 ], !dbg !26
  store %"struct.rubinius::Object"* %send_result852, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %as_int856 = ptrtoint %"struct.rubinius::Object"* %send_result852 to i64, !dbg !26
  %and857 = and i64 %as_int856, 15, !dbg !26
  %is_true858 = icmp eq i64 %and857, 10, !dbg !26
  br i1 %is_true858, label %ip48, label %ip58, !dbg !26

check_class_id823:                                ; preds = %check_active799
  %class_pos826 = getelementptr %"struct.rubinius::Object"* %stack_load844, i64 0, i32 0, i32 1, !dbg !26
  %ref_class827 = load %"struct.rubinius::Class"** %class_pos826, align 8, !dbg !26
  %class_id_pos828 = getelementptr %"struct.rubinius::Class"* %ref_class827, i64 0, i32 4, !dbg !26
  %class_id829 = load i32* %class_id_pos828, align 4, !dbg !26
  %check_class_id830 = icmp eq i32 %class_id829, 77, !dbg !26
  br i1 %check_class_id830, label %correct_class824, label %class_fallback815, !dbg !26

correct_class824:                                 ; preds = %check_class_id823
  %serial_id_pos831 = getelementptr %"struct.rubinius::Class"* %ref_class827, i64 0, i32 5, !dbg !26
  %serial_id832 = load i32* %serial_id_pos831, align 4, !dbg !26
  %check_serial_id833 = icmp eq i32 %serial_id832, 224, !dbg !26
  br i1 %check_serial_id833, label %correct_serial825, label %serial_fallback816, !dbg !26

correct_serial825:                                ; preds = %correct_class824
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %literal813, i64 1, !dbg !26
  %65 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !26
  %farg = load double* %65, align 8, !dbg !26
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load844, i64 1, !dbg !26
  %66 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !26
  %fself = load double* %66, align 8, !dbg !26
  %float.ge = fcmp uge double %fself, %farg, !dbg !26
  %select_bool842 = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !26
  br label %continue817, !dbg !26

serial_fallback816:                               ; preds = %correct_class824
  store i32 40, i32* %8, align 4, !dbg !26
  %67 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !26
  br label %return_pad, !dbg !26

class_fallback815:                                ; preds = %check_class_id823, %check_active799
  store %"struct.rubinius::Object"* %stack_load844, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 1, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos1, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const846 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), align 8, !dbg !26
  %execute_pos847 = getelementptr %"struct.rubinius::CallSite"* %cache_const846, i64 0, i32 2, !dbg !26
  %execute848 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos847, align 8, !dbg !26
  store i32 40, i32* %8, align 4, !dbg !26
  %call_site_execute849 = call %"struct.rubinius::Object"* %execute848(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const846, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check851 = icmp eq %"struct.rubinius::Object"* %call_site_execute849, null, !dbg !26
  br i1 %null_check851, label %bail_out, label %continue817, !dbg !26

ip58:                                             ; preds = %check_active1004, %continue817
  %storemerge = phi %"struct.rubinius::Object"* [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue817 ], [ %call_site_execute1013, %check_active1004 ]
  store %"struct.rubinius::Object"* %storemerge, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %constant_cache863 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !52
  %constant_cache_pos864 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i64 0, i32 4, !dbg !52
  %constant_scope865 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos864, align 8, !dbg !52
  %68 = load %"struct.rubinius::Object"** %5, align 8, !dbg !52
  %frame_scope867 = bitcast %"struct.rubinius::Object"* %68 to %"struct.rubinius::ConstantScope"*, !dbg !52
  %same_scope868 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope865, %frame_scope867, !dbg !52
  br i1 %same_scope868, label %check_serial869, label %use_call871, !dbg !52

check_serial869:                                  ; preds = %ip58
  %global_serial862 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !52
  %serial_pos873 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i64 0, i32 7, !dbg !52
  %serial874 = load i32* %serial_pos873, align 4, !dbg !52
  %use_cache875 = icmp eq i32 %global_serial862, %serial874, !dbg !52
  br i1 %use_cache875, label %use_cache870, label %use_call871, !dbg !52

use_cache870:                                     ; preds = %check_serial869
  %value_pos876 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache863, i64 0, i32 2, !dbg !52
  %cached_value877 = load %"struct.rubinius::Object"** %value_pos876, align 8, !dbg !52
  br label %continue872, !dbg !52

use_call871:                                      ; preds = %check_serial869, %ip58
  store i32 59, i32* %8, align 4, !dbg !52
  %push_const_fast878 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !52
  %null_check881 = icmp eq %"struct.rubinius::Object"* %push_const_fast878, null, !dbg !52
  br i1 %null_check881, label %bail_out, label %continue872, !dbg !52

continue872:                                      ; preds = %use_call871, %use_cache870
  %constant882 = phi %"struct.rubinius::Object"* [ %cached_value877, %use_cache870 ], [ %push_const_fast878, %use_call871 ], !dbg !52, !rbx-classid !53
  store %"struct.rubinius::Object"* %constant882, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  %constant_cache887 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !52
  %constant_cache_pos888 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i64 0, i32 4, !dbg !52
  %constant_scope889 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos888, align 8, !dbg !52
  %same_scope892 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope889, %frame_scope867, !dbg !52
  br i1 %same_scope892, label %check_serial893, label %use_call896, !dbg !52

check_serial893:                                  ; preds = %continue872
  %global_serial886 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !52
  %serial_pos898 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i64 0, i32 7, !dbg !52
  %serial899 = load i32* %serial_pos898, align 4, !dbg !52
  %use_under900 = icmp eq i32 %global_serial886, %serial899, !dbg !52
  br i1 %use_under900, label %check_under894, label %use_call896, !dbg !52

check_under894:                                   ; preds = %check_serial893
  %value_pos901 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i64 0, i32 3, !dbg !52
  %cached_under902 = load %"struct.rubinius::Module"** %value_pos901, align 8, !dbg !52
  %downcast903 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under902, i64 0, i32 0, !dbg !52
  %use_cache904 = icmp eq %"struct.rubinius::Object"* %downcast903, %constant882, !dbg !52
  br i1 %use_cache904, label %use_cache895, label %use_call896, !dbg !52

use_cache895:                                     ; preds = %check_under894
  %value_pos905 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache887, i64 0, i32 2, !dbg !52
  %cached_value906 = load %"struct.rubinius::Object"** %value_pos905, align 8, !dbg !52
  br label %continue897, !dbg !52

use_call896:                                      ; preds = %check_under894, %check_serial893, %continue872
  store i32 61, i32* %8, align 4, !dbg !52
  %constant907 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant882) #0, !dbg !52
  %null_check910 = icmp eq %"struct.rubinius::Object"* %constant907, null, !dbg !52
  br i1 %null_check910, label %bail_out, label %continue897, !dbg !52

continue897:                                      ; preds = %use_call896, %use_cache895
  %constant911 = phi %"struct.rubinius::Object"* [ %cached_value906, %use_cache895 ], [ %constant907, %use_call896 ], !dbg !52, !rbx-classid !54
  store %"struct.rubinius::Object"* %constant911, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  %constant_cache916 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !52
  %constant_cache_pos917 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i64 0, i32 4, !dbg !52
  %constant_scope918 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos917, align 8, !dbg !52
  %same_scope921 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope918, %frame_scope867, !dbg !52
  br i1 %same_scope921, label %check_serial922, label %use_call925, !dbg !52

check_serial922:                                  ; preds = %continue897
  %global_serial915 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !52
  %serial_pos927 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i64 0, i32 7, !dbg !52
  %serial928 = load i32* %serial_pos927, align 4, !dbg !52
  %use_under929 = icmp eq i32 %global_serial915, %serial928, !dbg !52
  br i1 %use_under929, label %check_under923, label %use_call925, !dbg !52

check_under923:                                   ; preds = %check_serial922
  %value_pos930 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i64 0, i32 3, !dbg !52
  %cached_under931 = load %"struct.rubinius::Module"** %value_pos930, align 8, !dbg !52
  %downcast932 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under931, i64 0, i32 0, !dbg !52
  %use_cache933 = icmp eq %"struct.rubinius::Object"* %downcast932, %constant911, !dbg !52
  br i1 %use_cache933, label %use_cache924, label %use_call925, !dbg !52

use_cache924:                                     ; preds = %check_under923
  %value_pos934 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache916, i64 0, i32 2, !dbg !52
  %cached_value935 = load %"struct.rubinius::Object"** %value_pos934, align 8, !dbg !52
  br label %continue926, !dbg !52

use_call925:                                      ; preds = %check_under923, %check_serial922, %continue897
  store i32 63, i32* %8, align 4, !dbg !52
  %constant936 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant911) #0, !dbg !52
  %null_check939 = icmp eq %"struct.rubinius::Object"* %constant936, null, !dbg !52
  br i1 %null_check939, label %bail_out, label %continue926, !dbg !52

continue926:                                      ; preds = %use_call925, %use_cache924
  %constant940 = phi %"struct.rubinius::Object"* [ %cached_value935, %use_cache924 ], [ %constant936, %use_call925 ], !dbg !52, !rbx-classid !55
  store %"struct.rubinius::Object"* %constant940, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  %local943 = load %"struct.rubinius::Object"** %19, align 8, !dbg !52, !rbx-classid !32
  store %"struct.rubinius::Object"* %local943, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !52
  %cast950 = ptrtoint %"struct.rubinius::Object"* %constant940 to i64, !dbg !52
  %masked951 = and i64 %cast950, 3, !dbg !52
  %is_reference952 = icmp eq i64 %masked951, 0, !dbg !52
  br i1 %is_reference952, label %check_class_id953, label %class_fallback945, !dbg !52

ip48:                                             ; preds = %continue817
  %self970 = load %"struct.rubinius::Object"** %13, align 8, !dbg !26
  store %"struct.rubinius::Object"* %self970, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %constant_cache973 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !26
  %constant_cache_pos974 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i64 0, i32 4, !dbg !26
  %constant_scope975 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos974, align 8, !dbg !26
  %69 = load %"struct.rubinius::Object"** %5, align 8, !dbg !26
  %frame_scope977 = bitcast %"struct.rubinius::Object"* %69 to %"struct.rubinius::ConstantScope"*, !dbg !26
  %same_scope978 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope975, %frame_scope977, !dbg !26
  br i1 %same_scope978, label %check_serial979, label %use_call981, !dbg !26

check_class_id953:                                ; preds = %continue926
  %class_pos956 = getelementptr %"struct.rubinius::Object"* %constant940, i64 0, i32 0, i32 1, !dbg !52
  %ref_class957 = load %"struct.rubinius::Class"** %class_pos956, align 8, !dbg !52
  %class_id_pos958 = getelementptr %"struct.rubinius::Class"* %ref_class957, i64 0, i32 4, !dbg !52
  %class_id959 = load i32* %class_id_pos958, align 4, !dbg !52
  %check_class_id960 = icmp eq i32 %class_id959, 507, !dbg !52
  br i1 %check_class_id960, label %correct_class954, label %class_fallback945, !dbg !52

correct_class954:                                 ; preds = %check_class_id953
  %serial_id_pos961 = getelementptr %"struct.rubinius::Class"* %ref_class957, i64 0, i32 5, !dbg !52
  %serial_id962 = load i32* %serial_id_pos961, align 4, !dbg !52
  %check_serial_id963 = icmp eq i32 %serial_id962, 210, !dbg !52
  br i1 %check_serial_id963, label %correct_serial955, label %serial_fallback946, !dbg !52

class_fallback945:                                ; preds = %correct_serial955, %check_class_id953, %continue926
  store i32 67, i32* %8, align 4, !dbg !52
  %70 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 0), !dbg !52
  br label %return_pad, !dbg !52

correct_serial955:                                ; preds = %correct_class954
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local943, i1* %valid_flag), !dbg !52
  %71 = load i1* %valid_flag, align 1, !dbg !52
  br i1 %71, label %ffi_continue, label %class_fallback945, !dbg !52

serial_fallback946:                               ; preds = %correct_class954
  store i32 67, i32* %8, align 4, !dbg !52
  %72 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695135296 to i8*), i32 0, i8 1), !dbg !52
  br label %return_pad, !dbg !52

ffi_continue:                                     ; preds = %correct_serial955
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !52
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !52
  %unused966 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !52
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !52
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  br label %return_pad, !dbg !52

check_serial979:                                  ; preds = %ip48
  %global_serial972 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !26
  %serial_pos983 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i64 0, i32 7, !dbg !26
  %serial984 = load i32* %serial_pos983, align 4, !dbg !26
  %use_cache985 = icmp eq i32 %global_serial972, %serial984, !dbg !26
  br i1 %use_cache985, label %use_cache980, label %use_call981, !dbg !26

use_cache980:                                     ; preds = %check_serial979
  %value_pos986 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache973, i64 0, i32 2, !dbg !26
  %cached_value987 = load %"struct.rubinius::Object"** %value_pos986, align 8, !dbg !26
  br label %continue982, !dbg !26

use_call981:                                      ; preds = %check_serial979, %ip48
  store i32 49, i32* %8, align 4, !dbg !26
  %push_const_fast988 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !26
  %null_check991 = icmp eq %"struct.rubinius::Object"* %push_const_fast988, null, !dbg !26
  br i1 %null_check991, label %bail_out, label %continue982, !dbg !26

continue982:                                      ; preds = %use_call981, %use_cache980
  %constant992 = phi %"struct.rubinius::Object"* [ %cached_value987, %use_cache980 ], [ %push_const_fast988, %use_call981 ], !dbg !26, !rbx-classid !56
  store %"struct.rubinius::Object"* %constant992, %"struct.rubinius::Object"** %stack_pos1, align 8, !dbg !26
  %73 = load %"struct.rubinius::Object"** %0, align 8, !dbg !26
  %literals_pos996 = getelementptr %"struct.rubinius::Object"* %73, i64 8, !dbg !26
  %74 = bitcast %"struct.rubinius::Object"* %literals_pos996 to %"struct.rubinius::Tuple"**, !dbg !26
  %literals997 = load %"struct.rubinius::Tuple"** %74, align 8, !dbg !26
  %literal_pos998 = getelementptr %"struct.rubinius::Tuple"* %literals997, i64 0, i32 2, i64 8, !dbg !26
  %literal999 = load %"struct.rubinius::Object"** %literal_pos998, align 8, !dbg !26, !rbx-classid !48
  store %"struct.rubinius::Object"* %literal999, %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !26
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %literal999), !dbg !26, !rbx-classid !48
  %null_check1005 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !26
  br i1 %null_check1005, label %bail_out, label %check_active1004, !dbg !26

check_active1004:                                 ; preds = %continue982
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos2, align 8, !dbg !26
  %stack_load1008 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  store %"struct.rubinius::Object"* %stack_load1008, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 2, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos1, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const1010 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), align 16, !dbg !26
  %execute_pos1011 = getelementptr %"struct.rubinius::CallSite"* %cache_const1010, i64 0, i32 2, !dbg !26
  %execute1012 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1011, align 8, !dbg !26
  store i32 55, i32* %8, align 4, !dbg !26
  %call_site_execute1013 = call %"struct.rubinius::Object"* %execute1012(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1010, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check1016 = icmp eq %"struct.rubinius::Object"* %call_site_execute1013, null, !dbg !26
  br i1 %null_check1016, label %bail_out, label %ip58, !dbg !26

return_pad:                                       ; preds = %prologue_check, %bail_out, %ffi_continue, %serial_fallback946, %class_fallback945, %serial_fallback816, %serial_fallback109, %class_fallback108, %continue88, %serial_fallback29, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %25, %serial_fallback29 ], [ %constant99, %continue88 ], [ %27, %class_fallback108 ], [ %36, %serial_fallback109 ], [ %67, %serial_fallback816 ], [ %70, %class_fallback945 ], [ %72, %serial_fallback946 ], [ %to_obj, %ffi_continue ], [ null, %bail_out ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !26

prologue_check:                                   ; preds = %import_args
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !26
  %75 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !26
  br i1 %75, label %return_pad, label %prologue_check.method_body_crit_edge, !dbg !26

prologue_check.method_body_crit_edge:             ; preds = %prologue_check
  %local.pre = load %"struct.rubinius::Object"** %19, align 8, !dbg !27
  %.pre = load %"struct.rubinius::Object"** %5, align 8, !dbg !27
  br label %method_body, !dbg !26
}

[[[ JIT Machine Code: _X_Math#sqrt@5 ]]]
0x7fc7cfab2d20  push %rbp               
0x7fc7cfab2d21  mov %rsp, %rbp          
0x7fc7cfab2d24  push %r15               
0x7fc7cfab2d26  push %r14               
0x7fc7cfab2d28  push %r13               
0x7fc7cfab2d2a  push %r12               
0x7fc7cfab2d2c  push %rbx               
0x7fc7cfab2d2d  subq $0x1c8, %rsp       
0x7fc7cfab2d34  mov %rdi, %r15          
0x7fc7cfab2d37  cmp $0x1, 0x18(%r8)     
0x7fc7cfab2d3c  jnz 0x184                ; 0x7fc7cfab2ea4
0x7fc7cfab2d42  mov %rsi, -0xc8(%rbp)   
0x7fc7cfab2d49  mov %r8, -0x88(%rbp)    
0x7fc7cfab2d50  movq $0x0, -0xb8(%rbp)  
0x7fc7cfab2d5b  mov %rdx, -0xb0(%rbp)   
0x7fc7cfab2d62  mov 0xa0(%rdx), %rax    
0x7fc7cfab2d69  mov %rax, -0xc0(%rbp)   
0x7fc7cfab2d70  mov $0x28, -0xa8(%rbp)  
0x7fc7cfab2d7a  mov $0x0, -0xa4(%rbp)   
0x7fc7cfab2d84  lea -0x100(%rbp), %rdx  
0x7fc7cfab2d8b  mov %rdx, -0x90(%rbp)   
0x7fc7cfab2d92  mov $0x7fc7b4004240, %rdx
0x7fc7cfab2d9c  mov %rdx, -0xa0(%rbp)   
0x7fc7cfab2da3  movq $0x1a, -0x80(%rbp) 
0x7fc7cfab2dab  lea -0x78(%rbp), %r12   
0x7fc7cfab2daf  movq $0x1a, -0x78(%rbp) 
0x7fc7cfab2db7  movq $0x1a, -0x70(%rbp) 
0x7fc7cfab2dbf  movq $0x1a, -0x68(%rbp) 
0x7fc7cfab2dc7  movq $0x0, -0x100(%rbp) 
0x7fc7cfab2dd2  mov 0x8(%r8), %rdx      
0x7fc7cfab2dd6  mov %rdx, -0xf0(%rbp)   
0x7fc7cfab2ddd  mov %rcx, -0xe0(%rbp)   
0x7fc7cfab2de4  mov 0x10(%r8), %rcx     
0x7fc7cfab2de8  mov %rcx, -0xe8(%rbp)   
0x7fc7cfab2def  movq $0x0, -0xf8(%rbp)  
0x7fc7cfab2dfa  movq $0x1a, -0xd8(%rbp) 
0x7fc7cfab2e05  movq $0x1a, -0xd0(%rbp) 
0x7fc7cfab2e10  mov 0x20(%r8), %rcx     
0x7fc7cfab2e14  mov (%rcx), %rbx        
0x7fc7cfab2e17  mov %rbx, -0xd0(%rbp)   
0x7fc7cfab2e1e  mov 0x8(%r15), %rcx     
0x7fc7cfab2e22  mov 0x158251e, %dl      
0x7fc7cfab2e29  or 0x16(%rcx), %dl      
0x7fc7cfab2e2c  lea -0xc8(%rbp), %r13   
0x7fc7cfab2e33  jnz 0x123                ; 0x7fc7cfab2e43
0x7fc7cfab2e39  cmp 0x8(%rcx), %r13     
0x7fc7cfab2e3d  jae 0x155                ; 0x7fc7cfab2e75
0x7fc7cfab2e43  mov $0x762f80, %rax      ; rbx_prologue_check
0x7fc7cfab2e4d  lea -0xc8(%rbp), %rsi   
0x7fc7cfab2e54  mov %r15, %rdi          
0x7fc7cfab2e57  callq *%rax             
0x7fc7cfab2e59  mov %rax, %rcx          
0x7fc7cfab2e5c  xor %eax, %eax          
0x7fc7cfab2e5e  test %rcx, %rcx         
0x7fc7cfab2e61  jz 0x11db                ; 0x7fc7cfab3efb
0x7fc7cfab2e67  mov -0xd0(%rbp), %rbx   
0x7fc7cfab2e6e  mov -0xc0(%rbp), %rax   
0x7fc7cfab2e75  mov %rbx, -0x80(%rbp)   
0x7fc7cfab2e79  mov 0x1653b68, %rcx     
0x7fc7cfab2e81  cmp %rax, 0x30(%rcx)    
0x7fc7cfab2e85  jnz 0x1a0                ; 0x7fc7cfab2ec0
0x7fc7cfab2e8b  mov 0x1582514, %eax     
0x7fc7cfab2e92  cmp 0x44(%rcx), %eax    
0x7fc7cfab2e95  jnz 0x1a0                ; 0x7fc7cfab2ec0
0x7fc7cfab2e9b  mov 0x20(%rcx), %rax    
0x7fc7cfab2e9f  jmp 0x1ce                ; 0x7fc7cfab2eee
0x7fc7cfab2ea4  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfab2eae  mov $0x1, %ecx          
0x7fc7cfab2eb3  mov %r15, %rdi          
0x7fc7cfab2eb6  mov %r8, %rdx           
0x7fc7cfab2eb9  callq *%rax             
0x7fc7cfab2ebb  jmp 0x11db               ; 0x7fc7cfab3efb
0x7fc7cfab2ec0  mov $0x2, -0xa4(%rbp)   
0x7fc7cfab2eca  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab2ed4  lea -0xc8(%rbp), %rsi   
0x7fc7cfab2edb  mov $0x1653b68, %edx    
0x7fc7cfab2ee0  mov %r15, %rdi          
0x7fc7cfab2ee3  callq *%rax             
0x7fc7cfab2ee5  test %rax, %rax         
0x7fc7cfab2ee8  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab2eee  mov %rax, -0x78(%rbp)   
0x7fc7cfab2ef2  mov %rbx, %rcx          
0x7fc7cfab2ef5  andq $0x3, %rcx         
0x7fc7cfab2ef9  jnz 0x1ed                ; 0x7fc7cfab2f0d
0x7fc7cfab2eff  cmpb $0x23, (%rbx)      
0x7fc7cfab2f02  mov $0x12, %eax         
0x7fc7cfab2f07  jz 0x1f2                 ; 0x7fc7cfab2f12
0x7fc7cfab2f0d  mov $0xa, %eax          
0x7fc7cfab2f12  mov %rax, -0x80(%rbp)   
0x7fc7cfab2f16  mov %rax, -0x78(%rbp)   
0x7fc7cfab2f1a  mov %rax, %rdx          
0x7fc7cfab2f1d  andq $0xa, %rdx         
0x7fc7cfab2f21  cmpq $0xa, %rdx         
0x7fc7cfab2f25  jz 0x2b2                 ; 0x7fc7cfab2fd2
0x7fc7cfab2f2b  mov %rbx, -0x80(%rbp)   
0x7fc7cfab2f2f  test %rcx, %rcx         
0x7fc7cfab2f32  jnz 0x25c                ; 0x7fc7cfab2f7c
0x7fc7cfab2f38  mov 0x8(%rbx), %rax     
0x7fc7cfab2f3c  cmp $0x4d, 0x70(%rax)   
0x7fc7cfab2f40  jnz 0x25c                ; 0x7fc7cfab2f7c
0x7fc7cfab2f46  cmp $0xe0, 0x74(%rax)   
0x7fc7cfab2f4d  jnz 0x539                ; 0x7fc7cfab3259
0x7fc7cfab2f53  mov $0x5db1e0, %rax      ; jit_stub_float_isnan
0x7fc7cfab2f5d  mov %r15, %rdi          
0x7fc7cfab2f60  mov %rbx, %rsi          
0x7fc7cfab2f63  callq *%rax             
0x7fc7cfab2f65  test %rax, %rax         
0x7fc7cfab2f68  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab2f6e  cmpq $0x22, %rax        
0x7fc7cfab2f72  jnz 0x2ae                ; 0x7fc7cfab2fce
0x7fc7cfab2f78  mov -0x80(%rbp), %rbx   
0x7fc7cfab2f7c  mov %rbx, -0x50(%rbp)   
0x7fc7cfab2f80  movq $0x7c56, -0x58(%rbp)
0x7fc7cfab2f88  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab2f90  mov $0x0, -0x40(%rbp)   
0x7fc7cfab2f97  movq $0x0, -0x30(%rbp)  
0x7fc7cfab2f9f  mov 0x1653bc0, %rsi     
0x7fc7cfab2fa7  mov 0x20(%rsi), %rax    
0x7fc7cfab2fab  mov $0xd, -0xa4(%rbp)   
0x7fc7cfab2fb5  lea -0xc8(%rbp), %rdx   
0x7fc7cfab2fbc  lea -0x58(%rbp), %rcx   
0x7fc7cfab2fc0  mov %r15, %rdi          
0x7fc7cfab2fc3  callq *%rax             
0x7fc7cfab2fc5  test %rax, %rax         
0x7fc7cfab2fc8  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab2fce  mov %rax, -0x80(%rbp)   
0x7fc7cfab2fd2  andq $0xf, %rax         
0x7fc7cfab2fd6  cmpq $0xa, %rax         
0x7fc7cfab2fda  jnz 0x41d                ; 0x7fc7cfab313d
0x7fc7cfab2fe0  mov 0x1584100, %rax     
0x7fc7cfab2fe8  mov %rax, -0x80(%rbp)   
0x7fc7cfab2fec  mov -0xd0(%rbp), %r14   
0x7fc7cfab2ff3  mov %r14, -0x78(%rbp)   
0x7fc7cfab2ff7  testb $0x3, %al         
0x7fc7cfab2ffa  jnz 0x452                ; 0x7fc7cfab3172
0x7fc7cfab3000  mov 0x8(%rax), %rcx     
0x7fc7cfab3004  cmp $0x1c3, 0x70(%rcx)  
0x7fc7cfab300b  jnz 0x452                ; 0x7fc7cfab3172
0x7fc7cfab3011  cmp $0x13a, 0x74(%rcx)  
0x7fc7cfab3018  jnz 0x57e                ; 0x7fc7cfab329e
0x7fc7cfab301e  mov %r13, -0x188(%rbp)  
0x7fc7cfab3025  mov $0x7fc7b47bac70, %rcx
0x7fc7cfab302f  mov %rcx, -0x178(%rbp)  
0x7fc7cfab3036  mov (%rcx), %rcx        
0x7fc7cfab3039  mov %rcx, -0x170(%rbp)  
0x7fc7cfab3040  mov 0xa0(%rcx), %rcx    
0x7fc7cfab3047  mov %rcx, -0x180(%rbp)  
0x7fc7cfab304e  mov $0xc, -0x168(%rbp)  
0x7fc7cfab3058  mov $0x0, -0x164(%rbp)  
0x7fc7cfab3062  lea -0x1d0(%rbp), %rcx  
0x7fc7cfab3069  mov %rcx, -0x150(%rbp)  
0x7fc7cfab3070  lea -0x140(%rbp), %rcx  
0x7fc7cfab3077  mov $0x8, %edx          
0x7fc7cfab307c  movq $0x1a, (%rcx)      
0x7fc7cfab3083  addq $0x8, %rcx         
0x7fc7cfab3087  dec %edx                
0x7fc7cfab3089  jnz 0x35c                ; 0x7fc7cfab307c
0x7fc7cfab308f  mov $0x7fc7b47bac80, %rcx
0x7fc7cfab3099  mov (%rcx), %rcx        
0x7fc7cfab309c  movq $0x0, -0x1d0(%rbp) 
0x7fc7cfab30a7  mov %rax, -0x1c0(%rbp)  
0x7fc7cfab30ae  mov %rcx, -0x1b0(%rbp)  
0x7fc7cfab30b5  movq $0x1a, -0x1b8(%rbp)
0x7fc7cfab30c0  movq $0x0, -0x1c8(%rbp) 
0x7fc7cfab30cb  movq $0x1a, -0x1a8(%rbp)
0x7fc7cfab30d6  mov %r14, -0x1a0(%rbp)  
0x7fc7cfab30dd  movq $0x12, -0x198(%rbp)
0x7fc7cfab30e8  movq $0x12, -0x190(%rbp)
0x7fc7cfab30f3  lea -0x138(%rbp), %rbx  
0x7fc7cfab30fa  mov %r14, -0x140(%rbp)  
0x7fc7cfab3101  mov %r14, -0x138(%rbp)  
0x7fc7cfab3108  mov 0x193f540, %rax     
0x7fc7cfab3110  mov 0x30(%rax), %rcx    
0x7fc7cfab3114  mov -0x180(%rbp), %r13  
0x7fc7cfab311b  cmp %r13, %rcx          
0x7fc7cfab311e  jnz 0x5a3                ; 0x7fc7cfab32c3
0x7fc7cfab3124  mov 0x1582514, %ecx     
0x7fc7cfab312b  cmp 0x44(%rax), %ecx    
0x7fc7cfab312e  jnz 0x5a3                ; 0x7fc7cfab32c3
0x7fc7cfab3134  mov 0x20(%rax), %rax    
0x7fc7cfab3138  jmp 0x5d1                ; 0x7fc7cfab32f1
0x7fc7cfab313d  mov 0x1653be8, %rax     
0x7fc7cfab3145  mov 0x30(%rax), %rcx    
0x7fc7cfab3149  mov -0xc0(%rbp), %rbx   
0x7fc7cfab3150  cmp %rbx, %rcx          
0x7fc7cfab3153  jnz 0x4a5                ; 0x7fc7cfab31c5
0x7fc7cfab3159  mov 0x1582514, %ecx     
0x7fc7cfab3160  cmp 0x44(%rax), %ecx    
0x7fc7cfab3163  jnz 0x4a5                ; 0x7fc7cfab31c5
0x7fc7cfab3169  mov 0x20(%rax), %rax    
0x7fc7cfab316d  jmp 0x4d3                ; 0x7fc7cfab31f3
0x7fc7cfab3172  mov $0x1e, -0xa4(%rbp)  
0x7fc7cfab317c  mov $0x7fc7b4004240, %rax
0x7fc7cfab3186  mov %rax, (%rsp)        
0x7fc7cfab318a  mov $0x0, 0x10(%rsp)    
0x7fc7cfab3192  mov $0x0, 0x8(%rsp)     
0x7fc7cfab319a  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab31a4  lea -0xc8(%rbp), %rsi   
0x7fc7cfab31ab  mov $0x1e, %edx         
0x7fc7cfab31b0  mov $0x1, %ecx          
0x7fc7cfab31b5  xor %r9d, %r9d          
0x7fc7cfab31b8  mov %r15, %rdi          
0x7fc7cfab31bb  mov %rsi, %r8           
0x7fc7cfab31be  callq *%rax             
0x7fc7cfab31c0  jmp 0x11db               ; 0x7fc7cfab3efb
0x7fc7cfab31c5  mov $0x12, -0xa4(%rbp)  
0x7fc7cfab31cf  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab31d9  lea -0xc8(%rbp), %rsi   
0x7fc7cfab31e0  mov $0x1653be8, %edx    
0x7fc7cfab31e5  mov %r15, %rdi          
0x7fc7cfab31e8  callq *%rax             
0x7fc7cfab31ea  test %rax, %rax         
0x7fc7cfab31ed  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab31f3  mov %rax, -0x80(%rbp)   
0x7fc7cfab31f7  mov 0x1653bf8, %rcx     
0x7fc7cfab31ff  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab3203  jnz 0x503                ; 0x7fc7cfab3223
0x7fc7cfab3209  mov 0x1582514, %edx     
0x7fc7cfab3210  cmp 0x44(%rcx), %edx    
0x7fc7cfab3213  jnz 0x503                ; 0x7fc7cfab3223
0x7fc7cfab3219  cmp %rax, 0x28(%rcx)    
0x7fc7cfab321d  jz 0x6c2                 ; 0x7fc7cfab33e2
0x7fc7cfab3223  mov $0x14, -0xa4(%rbp)  
0x7fc7cfab322d  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7fc7cfab3237  lea -0xc8(%rbp), %rsi   
0x7fc7cfab323e  mov $0x1653bf8, %edx    
0x7fc7cfab3243  mov %r15, %rdi          
0x7fc7cfab3246  mov %rax, %rcx          
0x7fc7cfab3249  callq *%rbx             
0x7fc7cfab324b  test %rax, %rax         
0x7fc7cfab324e  jnz 0x6c6                ; 0x7fc7cfab33e6
0x7fc7cfab3254  jmp 0x11a9               ; 0x7fc7cfab3ec9
0x7fc7cfab3259  mov $0xd, -0xa4(%rbp)   
0x7fc7cfab3263  mov $0x7fc7b4004240, %rax
0x7fc7cfab326d  mov %rax, (%rsp)        
0x7fc7cfab3271  mov $0x1, 0x10(%rsp)    
0x7fc7cfab3279  mov $0x0, 0x8(%rsp)     
0x7fc7cfab3281  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab328b  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3292  mov $0xd, %edx          
0x7fc7cfab3297  xor %ecx, %ecx          
0x7fc7cfab3299  jmp 0x495                ; 0x7fc7cfab31b5
0x7fc7cfab329e  mov $0x1e, -0xa4(%rbp)  
0x7fc7cfab32a8  mov $0x7fc7b4004240, %rax
0x7fc7cfab32b2  mov %rax, (%rsp)        
0x7fc7cfab32b6  mov $0x1, 0x10(%rsp)    
0x7fc7cfab32be  jmp 0x472                ; 0x7fc7cfab3192
0x7fc7cfab32c3  mov $0x35, -0x164(%rbp) 
0x7fc7cfab32cd  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab32d7  lea -0x188(%rbp), %rsi  
0x7fc7cfab32de  mov $0x193f540, %edx    
0x7fc7cfab32e3  mov %r15, %rdi          
0x7fc7cfab32e6  callq *%rax             
0x7fc7cfab32e8  test %rax, %rax         
0x7fc7cfab32eb  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab32f1  mov %rax, -0x138(%rbp)  
0x7fc7cfab32f8  mov %r14, -0x130(%rbp)  
0x7fc7cfab32ff  testb $0x3, %al         
0x7fc7cfab3302  jnz 0x668                ; 0x7fc7cfab3388
0x7fc7cfab3308  mov 0x8(%rax), %rax     
0x7fc7cfab330c  cmp $0x4e, 0x70(%rax)   
0x7fc7cfab3310  jnz 0x668                ; 0x7fc7cfab3388
0x7fc7cfab3316  cmp $0x10b, 0x74(%rax)  
0x7fc7cfab331d  jnz 0x6cf                ; 0x7fc7cfab33ef
0x7fc7cfab3323  testb $0x3, %r14b       
0x7fc7cfab3327  jnz 0x61c                ; 0x7fc7cfab333c
0x7fc7cfab332d  cmpb $0x23, (%r14)      
0x7fc7cfab3331  mov $0x12, %eax         
0x7fc7cfab3336  jz 0x621                 ; 0x7fc7cfab3341
0x7fc7cfab333c  mov $0xa, %eax          
0x7fc7cfab3341  mov %rax, -0x138(%rbp)  
0x7fc7cfab3348  andq $0xa, %rax         
0x7fc7cfab334c  cmpq $0xa, %rax         
0x7fc7cfab3350  jnz 0xe12                ; 0x7fc7cfab3b32
0x7fc7cfab3356  mov %r14, -0x138(%rbp)  
0x7fc7cfab335d  mov 0x193f5b0, %rax     
0x7fc7cfab3365  cmp %r13, 0x30(%rax)    
0x7fc7cfab3369  jnz 0x6f4                ; 0x7fc7cfab3414
0x7fc7cfab336f  mov 0x1582514, %ecx     
0x7fc7cfab3376  cmp 0x44(%rax), %ecx    
0x7fc7cfab3379  jnz 0x6f4                ; 0x7fc7cfab3414
0x7fc7cfab337f  mov 0x20(%rax), %rax    
0x7fc7cfab3383  jmp 0x722                ; 0x7fc7cfab3442
0x7fc7cfab3388  mov $0x38, -0x164(%rbp) 
0x7fc7cfab3392  mov $0x7fc7b4004240, %rax
0x7fc7cfab339c  mov %rax, (%rsp)        
0x7fc7cfab33a0  mov $0x0, 0x10(%rsp)    
0x7fc7cfab33a8  mov $0x0, 0x8(%rsp)     
0x7fc7cfab33b0  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab33ba  lea -0x188(%rbp), %rsi  
0x7fc7cfab33c1  lea -0xc8(%rbp), %r8    
0x7fc7cfab33c8  mov $0x38, %edx         
0x7fc7cfab33cd  mov $0x2, %ecx          
0x7fc7cfab33d2  xor %r9d, %r9d          
0x7fc7cfab33d5  mov %r15, %rdi          
0x7fc7cfab33d8  callq *%rax             
0x7fc7cfab33da  mov %rax, %r14          
0x7fc7cfab33dd  jmp 0xe52                ; 0x7fc7cfab3b72
0x7fc7cfab33e2  mov 0x20(%rcx), %rax    
0x7fc7cfab33e6  mov %rax, -0x80(%rbp)   
0x7fc7cfab33ea  jmp 0x11db               ; 0x7fc7cfab3efb
0x7fc7cfab33ef  mov $0x38, -0x164(%rbp) 
0x7fc7cfab33f9  mov $0x7fc7b4004240, %rax
0x7fc7cfab3403  mov %rax, (%rsp)        
0x7fc7cfab3407  mov $0x1, 0x10(%rsp)    
0x7fc7cfab340f  jmp 0x688                ; 0x7fc7cfab33a8
0x7fc7cfab3414  mov $0x43, -0x164(%rbp) 
0x7fc7cfab341e  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab3428  lea -0x188(%rbp), %rsi  
0x7fc7cfab342f  mov $0x193f5b0, %edx    
0x7fc7cfab3434  mov %r15, %rdi          
0x7fc7cfab3437  callq *%rax             
0x7fc7cfab3439  test %rax, %rax         
0x7fc7cfab343c  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3442  mov %rax, -0x138(%rbp)  
0x7fc7cfab3449  mov %r14, -0x130(%rbp)  
0x7fc7cfab3450  mov %rax, -0x50(%rbp)   
0x7fc7cfab3454  movq $0x57e, -0x58(%rbp)
0x7fc7cfab345c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3464  mov $0x1, -0x40(%rbp)   
0x7fc7cfab346b  movq $0x0, -0x30(%rbp)  
0x7fc7cfab3473  lea -0x130(%rbp), %rax  
0x7fc7cfab347a  mov %rax, -0x38(%rbp)   
0x7fc7cfab347e  mov 0x193f5c8, %rax     
0x7fc7cfab3486  mov 0x20(%rax), %r8     
0x7fc7cfab348a  mov $0x46, -0x164(%rbp) 
0x7fc7cfab3494  lea -0x188(%rbp), %rcx  
0x7fc7cfab349b  lea -0x58(%rbp), %r9    
0x7fc7cfab349f  mov %r15, %rdi          
0x7fc7cfab34a2  mov %rax, %rsi          
0x7fc7cfab34a5  mov %rcx, %rdx          
0x7fc7cfab34a8  mov %r9, %rcx           
0x7fc7cfab34ab  callq *%r8              
0x7fc7cfab34ae  test %rax, %rax         
0x7fc7cfab34b1  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab34b7  mov %rax, -0x138(%rbp)  
0x7fc7cfab34be  andq $0xf, %rax         
0x7fc7cfab34c2  cmpq $0xa, %rax         
0x7fc7cfab34c6  jnz 0x9b7                ; 0x7fc7cfab36d7
0x7fc7cfab34cc  mov -0x140(%rbp), %rax  
0x7fc7cfab34d3  movq $0x1a, -0x138(%rbp)
0x7fc7cfab34de  mov %rax, -0x130(%rbp)  
0x7fc7cfab34e5  movq $0x1a, -0x50(%rbp) 
0x7fc7cfab34ed  movq $0x57e, -0x58(%rbp)
0x7fc7cfab34f5  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab34fd  mov $0x1, -0x40(%rbp)   
0x7fc7cfab3504  movq $0x0, -0x30(%rbp)  
0x7fc7cfab350c  lea -0x130(%rbp), %rax  
0x7fc7cfab3513  mov %rax, -0x38(%rbp)   
0x7fc7cfab3517  mov 0x193f678, %rax     
0x7fc7cfab351f  mov 0x20(%rax), %r8     
0x7fc7cfab3523  mov $0x5c, -0x164(%rbp) 
0x7fc7cfab352d  lea -0x188(%rbp), %rcx  
0x7fc7cfab3534  lea -0x58(%rbp), %r9    
0x7fc7cfab3538  mov %r15, %rdi          
0x7fc7cfab353b  mov %rax, %rsi          
0x7fc7cfab353e  mov %rcx, %rdx          
0x7fc7cfab3541  mov %r9, %rcx           
0x7fc7cfab3544  callq *%r8              
0x7fc7cfab3547  test %rax, %rax         
0x7fc7cfab354a  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3550  mov %rax, -0x138(%rbp)  
0x7fc7cfab3557  andq $0xf, %rax         
0x7fc7cfab355b  cmpq $0xa, %rax         
0x7fc7cfab355f  jnz 0xa05                ; 0x7fc7cfab3725
0x7fc7cfab3565  mov -0x140(%rbp), %rax  
0x7fc7cfab356c  movq $0x12, -0x138(%rbp)
0x7fc7cfab3577  mov %rax, -0x130(%rbp)  
0x7fc7cfab357e  movq $0x12, -0x50(%rbp) 
0x7fc7cfab3586  movq $0x57e, -0x58(%rbp)
0x7fc7cfab358e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3596  mov $0x1, -0x40(%rbp)   
0x7fc7cfab359d  movq $0x0, -0x30(%rbp)  
0x7fc7cfab35a5  lea -0x130(%rbp), %rax  
0x7fc7cfab35ac  mov %rax, -0x38(%rbp)   
0x7fc7cfab35b0  mov 0x193f6b8, %rax     
0x7fc7cfab35b8  mov 0x20(%rax), %r8     
0x7fc7cfab35bc  mov $0x64, -0x164(%rbp) 
0x7fc7cfab35c6  lea -0x188(%rbp), %rcx  
0x7fc7cfab35cd  lea -0x58(%rbp), %r9    
0x7fc7cfab35d1  mov %r15, %rdi          
0x7fc7cfab35d4  mov %rax, %rsi          
0x7fc7cfab35d7  mov %rcx, %rdx          
0x7fc7cfab35da  mov %r9, %rcx           
0x7fc7cfab35dd  callq *%r8              
0x7fc7cfab35e0  test %rax, %rax         
0x7fc7cfab35e3  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab35e9  mov %rax, -0x138(%rbp)  
0x7fc7cfab35f0  andq $0xf, %rax         
0x7fc7cfab35f4  cmpq $0xa, %rax         
0x7fc7cfab35f8  jnz 0xa05                ; 0x7fc7cfab3725
0x7fc7cfab35fe  mov -0x140(%rbp), %rax  
0x7fc7cfab3605  movq $0xa, -0x138(%rbp) 
0x7fc7cfab3610  mov %rax, -0x130(%rbp)  
0x7fc7cfab3617  movq $0xa, -0x50(%rbp)  
0x7fc7cfab361f  movq $0x57e, -0x58(%rbp)
0x7fc7cfab3627  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab362f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab3636  movq $0x0, -0x30(%rbp)  
0x7fc7cfab363e  lea -0x130(%rbp), %rax  
0x7fc7cfab3645  mov %rax, -0x38(%rbp)   
0x7fc7cfab3649  mov 0x193f6f8, %rax     
0x7fc7cfab3651  mov 0x20(%rax), %r8     
0x7fc7cfab3655  mov $0x6c, -0x164(%rbp) 
0x7fc7cfab365f  lea -0x188(%rbp), %rcx  
0x7fc7cfab3666  lea -0x58(%rbp), %r9    
0x7fc7cfab366a  mov %r15, %rdi          
0x7fc7cfab366d  mov %rax, %rsi          
0x7fc7cfab3670  mov %rcx, %rdx          
0x7fc7cfab3673  mov %r9, %rcx           
0x7fc7cfab3676  callq *%r8              
0x7fc7cfab3679  test %rax, %rax         
0x7fc7cfab367c  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3682  mov %rax, -0x138(%rbp)  
0x7fc7cfab3689  andq $0xf, %rax         
0x7fc7cfab368d  cmpq $0xa, %rax         
0x7fc7cfab3691  jnz 0xa05                ; 0x7fc7cfab3725
0x7fc7cfab3697  mov -0x1c0(%rbp), %rax  
0x7fc7cfab369e  mov %rax, -0x140(%rbp)  
0x7fc7cfab36a5  mov 0x193f800, %rax     
0x7fc7cfab36ad  mov 0x30(%rax), %rcx    
0x7fc7cfab36b1  cmp -0x180(%rbp), %rcx  
0x7fc7cfab36b8  jnz 0xa45                ; 0x7fc7cfab3765
0x7fc7cfab36be  mov 0x1582514, %ecx     
0x7fc7cfab36c5  cmp 0x44(%rax), %ecx    
0x7fc7cfab36c8  jnz 0xa45                ; 0x7fc7cfab3765
0x7fc7cfab36ce  mov 0x20(%rax), %rax    
0x7fc7cfab36d2  jmp 0xa76                ; 0x7fc7cfab3796
0x7fc7cfab36d7  mov -0x1c0(%rbp), %r14  
0x7fc7cfab36de  mov %r14, -0x140(%rbp)  
0x7fc7cfab36e5  mov -0x1a0(%rbp), %rax  
0x7fc7cfab36ec  mov %rax, -0x138(%rbp)  
0x7fc7cfab36f3  mov 0x193f610, %rax     
0x7fc7cfab36fb  mov 0x30(%rax), %rcx    
0x7fc7cfab36ff  cmp -0x180(%rbp), %rcx  
0x7fc7cfab3706  jnz 0xbd9                ; 0x7fc7cfab38f9
0x7fc7cfab370c  mov 0x1582514, %ecx     
0x7fc7cfab3713  cmp 0x44(%rax), %ecx    
0x7fc7cfab3716  jnz 0xbd9                ; 0x7fc7cfab38f9
0x7fc7cfab371c  mov 0x20(%rax), %rax    
0x7fc7cfab3720  jmp 0xc0a                ; 0x7fc7cfab392a
0x7fc7cfab3725  mov -0x1c0(%rbp), %rax  
0x7fc7cfab372c  mov %rax, -0x140(%rbp)  
0x7fc7cfab3733  mov 0x193f740, %rax     
0x7fc7cfab373b  mov 0x30(%rax), %rcx    
0x7fc7cfab373f  cmp -0x180(%rbp), %rcx  
0x7fc7cfab3746  jnz 0xc5e                ; 0x7fc7cfab397e
0x7fc7cfab374c  mov 0x1582514, %ecx     
0x7fc7cfab3753  cmp 0x44(%rax), %ecx    
0x7fc7cfab3756  jnz 0xc5e                ; 0x7fc7cfab397e
0x7fc7cfab375c  mov 0x20(%rax), %rax    
0x7fc7cfab3760  jmp 0xc8f                ; 0x7fc7cfab39af
0x7fc7cfab3765  mov $0x8d, -0x164(%rbp) 
0x7fc7cfab376f  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab3779  lea -0x188(%rbp), %rcx  
0x7fc7cfab3780  mov $0x193f800, %edx    
0x7fc7cfab3785  mov %r15, %rdi          
0x7fc7cfab3788  mov %rcx, %rsi          
0x7fc7cfab378b  callq *%rax             
0x7fc7cfab378d  test %rax, %rax         
0x7fc7cfab3790  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3796  mov %rax, -0x138(%rbp)  
0x7fc7cfab379d  mov -0x170(%rbp), %rax  
0x7fc7cfab37a4  mov 0xc0(%rax), %rax    
0x7fc7cfab37ab  mov 0x70(%rax), %rax    
0x7fc7cfab37af  mov %rax, -0x130(%rbp)  
0x7fc7cfab37b6  mov -0x1a0(%rbp), %rax  
0x7fc7cfab37bd  mov %rax, -0x128(%rbp)  
0x7fc7cfab37c4  mov %rax, -0x50(%rbp)   
0x7fc7cfab37c8  movq $0x3866, -0x58(%rbp)
0x7fc7cfab37d0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab37d8  mov $0x0, -0x40(%rbp)   
0x7fc7cfab37df  movq $0x0, -0x30(%rbp)  
0x7fc7cfab37e7  mov 0x193f830, %rax     
0x7fc7cfab37ef  mov 0x20(%rax), %r8     
0x7fc7cfab37f3  mov $0x93, -0x164(%rbp) 
0x7fc7cfab37fd  lea -0x188(%rbp), %rcx  
0x7fc7cfab3804  lea -0x58(%rbp), %r9    
0x7fc7cfab3808  mov %r15, %rdi          
0x7fc7cfab380b  mov %rax, %rsi          
0x7fc7cfab380e  mov %rcx, %rdx          
0x7fc7cfab3811  mov %r9, %rcx           
0x7fc7cfab3814  callq *%r8              
0x7fc7cfab3817  test %rax, %rax         
0x7fc7cfab381a  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3820  mov %rax, -0x128(%rbp)  
0x7fc7cfab3827  mov 0x193f850, %rcx     
0x7fc7cfab382f  mov $0x760ee0, %r8       ; rbx_meta_to_s
0x7fc7cfab3839  lea -0x188(%rbp), %rdx  
0x7fc7cfab3840  mov %r15, %rdi          
0x7fc7cfab3843  mov %rdx, %rsi          
0x7fc7cfab3846  mov %rcx, %rdx          
0x7fc7cfab3849  mov %rax, %rcx          
0x7fc7cfab384c  callq *%r8              
0x7fc7cfab384f  test %rax, %rax         
0x7fc7cfab3852  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3858  mov %rax, -0x128(%rbp)  
0x7fc7cfab385f  mov -0x170(%rbp), %rax  
0x7fc7cfab3866  mov 0xc0(%rax), %rax    
0x7fc7cfab386d  mov 0x88(%rax), %rax    
0x7fc7cfab3874  mov %rax, -0x120(%rbp)  
0x7fc7cfab387b  mov $0x7636b0, %rax      ; rbx_string_build
0x7fc7cfab3885  lea -0x188(%rbp), %rcx  
0x7fc7cfab388c  mov $0x3, %edx          
0x7fc7cfab3891  mov %r15, %rdi          
0x7fc7cfab3894  mov %rcx, %rsi          
0x7fc7cfab3897  lea -0x130(%rbp), %rcx  
0x7fc7cfab389e  callq *%rax             
0x7fc7cfab38a0  test %rax, %rax         
0x7fc7cfab38a3  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab38a9  mov %rax, -0x130(%rbp)  
0x7fc7cfab38b0  mov -0x140(%rbp), %rax  
0x7fc7cfab38b7  mov %rax, -0x50(%rbp)   
0x7fc7cfab38bb  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab38c3  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab38cb  mov $0x2, -0x40(%rbp)   
0x7fc7cfab38d2  movq $0x0, -0x30(%rbp)  
0x7fc7cfab38da  mov %rbx, -0x38(%rbp)   
0x7fc7cfab38de  mov 0x193f888, %rax     
0x7fc7cfab38e6  mov 0x20(%rax), %rbx    
0x7fc7cfab38ea  mov $0x9e, -0x164(%rbp) 
0x7fc7cfab38f4  jmp 0xded                ; 0x7fc7cfab3b0d
0x7fc7cfab38f9  mov $0x4f, -0x164(%rbp) 
0x7fc7cfab3903  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab390d  lea -0x188(%rbp), %rcx  
0x7fc7cfab3914  mov $0x193f610, %edx    
0x7fc7cfab3919  mov %r15, %rdi          
0x7fc7cfab391c  mov %rcx, %rsi          
0x7fc7cfab391f  callq *%rax             
0x7fc7cfab3921  test %rax, %rax         
0x7fc7cfab3924  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab392a  mov %rax, -0x130(%rbp)  
0x7fc7cfab3931  movq $0x3d4e, -0x128(%rbp)
0x7fc7cfab393c  mov %r14, -0x50(%rbp)   
0x7fc7cfab3940  movq $0x3996, -0x58(%rbp)
0x7fc7cfab3948  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3950  mov $0x3, -0x40(%rbp)   
0x7fc7cfab3957  movq $0x0, -0x30(%rbp)  
0x7fc7cfab395f  mov %rbx, -0x38(%rbp)   
0x7fc7cfab3963  mov 0x193f638, %rax     
0x7fc7cfab396b  mov 0x20(%rax), %rbx    
0x7fc7cfab396f  mov $0x54, -0x164(%rbp) 
0x7fc7cfab3979  jmp 0xded                ; 0x7fc7cfab3b0d
0x7fc7cfab397e  mov $0x75, -0x164(%rbp) 
0x7fc7cfab3988  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab3992  lea -0x188(%rbp), %rcx  
0x7fc7cfab3999  mov $0x193f740, %edx    
0x7fc7cfab399e  mov %r15, %rdi          
0x7fc7cfab39a1  mov %rcx, %rsi          
0x7fc7cfab39a4  callq *%rax             
0x7fc7cfab39a6  test %rax, %rax         
0x7fc7cfab39a9  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab39af  mov %rax, -0x138(%rbp)  
0x7fc7cfab39b6  mov -0x170(%rbp), %rax  
0x7fc7cfab39bd  mov 0xc0(%rax), %rax    
0x7fc7cfab39c4  mov 0x70(%rax), %rax    
0x7fc7cfab39c8  mov %rax, -0x130(%rbp)  
0x7fc7cfab39cf  mov -0x1a0(%rbp), %rax  
0x7fc7cfab39d6  mov %rax, -0x128(%rbp)  
0x7fc7cfab39dd  mov %rax, -0x50(%rbp)   
0x7fc7cfab39e1  movq $0x3826, -0x58(%rbp)
0x7fc7cfab39e9  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab39f1  mov $0x0, -0x40(%rbp)   
0x7fc7cfab39f8  movq $0x0, -0x30(%rbp)  
0x7fc7cfab3a00  mov 0x193f770, %rax     
0x7fc7cfab3a08  mov 0x20(%rax), %r8     
0x7fc7cfab3a0c  mov $0x7b, -0x164(%rbp) 
0x7fc7cfab3a16  lea -0x188(%rbp), %rcx  
0x7fc7cfab3a1d  lea -0x58(%rbp), %r9    
0x7fc7cfab3a21  mov %r15, %rdi          
0x7fc7cfab3a24  mov %rax, %rsi          
0x7fc7cfab3a27  mov %rcx, %rdx          
0x7fc7cfab3a2a  mov %r9, %rcx           
0x7fc7cfab3a2d  callq *%r8              
0x7fc7cfab3a30  test %rax, %rax         
0x7fc7cfab3a33  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3a39  mov %rax, -0x128(%rbp)  
0x7fc7cfab3a40  mov 0x193f790, %rcx     
0x7fc7cfab3a48  mov $0x760ee0, %r8       ; rbx_meta_to_s
0x7fc7cfab3a52  lea -0x188(%rbp), %rdx  
0x7fc7cfab3a59  mov %r15, %rdi          
0x7fc7cfab3a5c  mov %rdx, %rsi          
0x7fc7cfab3a5f  mov %rcx, %rdx          
0x7fc7cfab3a62  mov %rax, %rcx          
0x7fc7cfab3a65  callq *%r8              
0x7fc7cfab3a68  test %rax, %rax         
0x7fc7cfab3a6b  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3a71  mov %rax, -0x128(%rbp)  
0x7fc7cfab3a78  mov -0x170(%rbp), %rax  
0x7fc7cfab3a7f  mov 0xc0(%rax), %rax    
0x7fc7cfab3a86  mov 0x88(%rax), %rax    
0x7fc7cfab3a8d  mov %rax, -0x120(%rbp)  
0x7fc7cfab3a94  mov $0x7636b0, %rax      ; rbx_string_build
0x7fc7cfab3a9e  lea -0x188(%rbp), %rcx  
0x7fc7cfab3aa5  mov $0x3, %edx          
0x7fc7cfab3aaa  mov %r15, %rdi          
0x7fc7cfab3aad  mov %rcx, %rsi          
0x7fc7cfab3ab0  lea -0x130(%rbp), %rcx  
0x7fc7cfab3ab7  callq *%rax             
0x7fc7cfab3ab9  test %rax, %rax         
0x7fc7cfab3abc  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3ac2  mov %rax, -0x130(%rbp)  
0x7fc7cfab3ac9  mov -0x140(%rbp), %rax  
0x7fc7cfab3ad0  mov %rax, -0x50(%rbp)   
0x7fc7cfab3ad4  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab3adc  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3ae4  mov $0x2, -0x40(%rbp)   
0x7fc7cfab3aeb  movq $0x0, -0x30(%rbp)  
0x7fc7cfab3af3  mov %rbx, -0x38(%rbp)   
0x7fc7cfab3af7  mov 0x193f7c8, %rax     
0x7fc7cfab3aff  mov 0x20(%rax), %rbx    
0x7fc7cfab3b03  mov $0x86, -0x164(%rbp) 
0x7fc7cfab3b0d  lea -0x188(%rbp), %rcx  
0x7fc7cfab3b14  lea -0x58(%rbp), %r8    
0x7fc7cfab3b18  mov %r15, %rdi          
0x7fc7cfab3b1b  mov %rax, %rsi          
0x7fc7cfab3b1e  mov %rcx, %rdx          
0x7fc7cfab3b21  mov %r8, %rcx           
0x7fc7cfab3b24  callq *%rbx             
0x7fc7cfab3b26  mov %rax, %r14          
0x7fc7cfab3b29  test %r14, %r14         
0x7fc7cfab3b2c  jz 0xe1e                 ; 0x7fc7cfab3b3e
0x7fc7cfab3b32  mov %r14, -0x140(%rbp)  
0x7fc7cfab3b39  jmp 0xe52                ; 0x7fc7cfab3b72
0x7fc7cfab3b3e  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab3b48  lea -0x188(%rbp), %rsi  
0x7fc7cfab3b4f  mov %r15, %rdi          
0x7fc7cfab3b52  callq *%rax             
0x7fc7cfab3b54  xor %r14d, %r14d        
0x7fc7cfab3b57  testb $0x1, %al         
0x7fc7cfab3b5a  jz 0xe52                 ; 0x7fc7cfab3b72
0x7fc7cfab3b60  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab3b6a  mov %r15, %rdi          
0x7fc7cfab3b6d  callq *%rax             
0x7fc7cfab3b6f  mov %rax, %r14          
0x7fc7cfab3b72  test %r14, %r14         
0x7fc7cfab3b75  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3b7b  mov %r14, -0xd0(%rbp)   
0x7fc7cfab3b82  mov %r14, -0x80(%rbp)   
0x7fc7cfab3b86  mov -0xb0(%rbp), %rax   
0x7fc7cfab3b8d  mov 0xc0(%rax), %rax    
0x7fc7cfab3b94  mov 0x48(%rax), %rax    
0x7fc7cfab3b98  mov %rax, -0x78(%rbp)   
0x7fc7cfab3b9c  testb $0x3, %r14b       
0x7fc7cfab3ba0  jnz 0xec1                ; 0x7fc7cfab3be1
0x7fc7cfab3ba6  mov 0x8(%r14), %rcx     
0x7fc7cfab3baa  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab3bae  jnz 0xec1                ; 0x7fc7cfab3be1
0x7fc7cfab3bb4  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab3bbb  jnz 0x1101               ; 0x7fc7cfab3e21
0x7fc7cfab3bc1  invalid                 
0x7fc7cfab3bc2  sti                     
0x7fc7cfab3bc3  adc %al, 0x18(%rax)     
0x7fc7cfab3bc6  invalid                 
0x7fc7cfab3bc7  sar $0x46, 0x2e(%rcx)   
0x7fc7cfab3bcb  sbb %bh, 0x12(%rax)     
0x7fc7cfab3bd1  jbe 0xf17                ; 0x7fc7cfab3c37
0x7fc7cfab3bd7  mov $0xa, %eax          
0x7fc7cfab3bdc  jmp 0xf17                ; 0x7fc7cfab3c37
0x7fc7cfab3be1  mov %r14, -0x50(%rbp)   
0x7fc7cfab3be5  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfab3bed  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3bf5  mov $0x1, -0x40(%rbp)   
0x7fc7cfab3bfc  movq $0x0, -0x30(%rbp)  
0x7fc7cfab3c04  mov %r12, -0x38(%rbp)   
0x7fc7cfab3c08  mov 0x1653c98, %rsi     
0x7fc7cfab3c10  mov 0x20(%rsi), %rax    
0x7fc7cfab3c14  mov $0x28, -0xa4(%rbp)  
0x7fc7cfab3c1e  lea -0xc8(%rbp), %rdx   
0x7fc7cfab3c25  lea -0x58(%rbp), %rcx   
0x7fc7cfab3c29  mov %r15, %rdi          
0x7fc7cfab3c2c  callq *%rax             
0x7fc7cfab3c2e  test %rax, %rax         
0x7fc7cfab3c31  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3c37  mov %rax, -0x80(%rbp)   
0x7fc7cfab3c3b  andq $0xf, %rax         
0x7fc7cfab3c3f  mov $0x1a, %ecx         
0x7fc7cfab3c44  cmpq $0xa, %rax         
0x7fc7cfab3c48  jnz 0x1033               ; 0x7fc7cfab3d53
0x7fc7cfab3c4e  mov -0xf0(%rbp), %rax   
0x7fc7cfab3c55  mov %rax, -0x80(%rbp)   
0x7fc7cfab3c59  mov 0x1653ce0, %rax     
0x7fc7cfab3c61  mov 0x30(%rax), %rcx    
0x7fc7cfab3c65  cmp -0xc0(%rbp), %rcx   
0x7fc7cfab3c6c  jnz 0xf6b                ; 0x7fc7cfab3c8b
0x7fc7cfab3c72  mov 0x1582514, %ecx     
0x7fc7cfab3c79  cmp 0x44(%rax), %ecx    
0x7fc7cfab3c7c  jnz 0xf6b                ; 0x7fc7cfab3c8b
0x7fc7cfab3c82  mov 0x20(%rax), %rax    
0x7fc7cfab3c86  jmp 0xf99                ; 0x7fc7cfab3cb9
0x7fc7cfab3c8b  mov $0x31, -0xa4(%rbp)  
0x7fc7cfab3c95  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab3c9f  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3ca6  mov $0x1653ce0, %edx    
0x7fc7cfab3cab  mov %r15, %rdi          
0x7fc7cfab3cae  callq *%rax             
0x7fc7cfab3cb0  test %rax, %rax         
0x7fc7cfab3cb3  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3cb9  mov %rax, -0x78(%rbp)   
0x7fc7cfab3cbd  mov -0xb0(%rbp), %rax   
0x7fc7cfab3cc4  mov 0xc0(%rax), %rax    
0x7fc7cfab3ccb  mov 0x60(%rax), %rdx    
0x7fc7cfab3ccf  mov %rdx, -0x70(%rbp)   
0x7fc7cfab3cd3  mov $0x760dc0, %rax      ; rbx_string_dup
0x7fc7cfab3cdd  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3ce4  mov %r15, %rdi          
0x7fc7cfab3ce7  callq *%rax             
0x7fc7cfab3ce9  test %rax, %rax         
0x7fc7cfab3cec  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3cf2  mov %rax, -0x70(%rbp)   
0x7fc7cfab3cf6  mov -0x80(%rbp), %rax   
0x7fc7cfab3cfa  mov %rax, -0x50(%rbp)   
0x7fc7cfab3cfe  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab3d06  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab3d0e  mov $0x2, -0x40(%rbp)   
0x7fc7cfab3d15  movq $0x0, -0x30(%rbp)  
0x7fc7cfab3d1d  mov %r12, -0x38(%rbp)   
0x7fc7cfab3d21  mov 0x1653d10, %rsi     
0x7fc7cfab3d29  mov 0x20(%rsi), %rax    
0x7fc7cfab3d2d  mov $0x37, -0xa4(%rbp)  
0x7fc7cfab3d37  lea -0xc8(%rbp), %rdx   
0x7fc7cfab3d3e  lea -0x58(%rbp), %rcx   
0x7fc7cfab3d42  mov %r15, %rdi          
0x7fc7cfab3d45  callq *%rax             
0x7fc7cfab3d47  mov %rax, %rcx          
0x7fc7cfab3d4a  test %rcx, %rcx         
0x7fc7cfab3d4d  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3d53  mov %rcx, -0x80(%rbp)   
0x7fc7cfab3d57  mov 0x1653d30, %rax     
0x7fc7cfab3d5f  mov 0x30(%rax), %rcx    
0x7fc7cfab3d63  mov -0xc0(%rbp), %rbx   
0x7fc7cfab3d6a  cmp %rbx, %rcx          
0x7fc7cfab3d6d  jnz 0x106c               ; 0x7fc7cfab3d8c
0x7fc7cfab3d73  mov 0x1582514, %ecx     
0x7fc7cfab3d7a  cmp 0x44(%rax), %ecx    
0x7fc7cfab3d7d  jnz 0x106c               ; 0x7fc7cfab3d8c
0x7fc7cfab3d83  mov 0x20(%rax), %rax    
0x7fc7cfab3d87  jmp 0x109a               ; 0x7fc7cfab3dba
0x7fc7cfab3d8c  mov $0x3b, -0xa4(%rbp)  
0x7fc7cfab3d96  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab3da0  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3da7  mov $0x1653d30, %edx    
0x7fc7cfab3dac  mov %r15, %rdi          
0x7fc7cfab3daf  callq *%rax             
0x7fc7cfab3db1  test %rax, %rax         
0x7fc7cfab3db4  jz 0x11a9                ; 0x7fc7cfab3ec9
0x7fc7cfab3dba  mov %rax, -0x80(%rbp)   
0x7fc7cfab3dbe  mov 0x1653d40, %rcx     
0x7fc7cfab3dc6  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab3dca  jnz 0x10ca               ; 0x7fc7cfab3dea
0x7fc7cfab3dd0  mov 0x1582514, %edx     
0x7fc7cfab3dd7  cmp 0x44(%rcx), %edx    
0x7fc7cfab3dda  jnz 0x10ca               ; 0x7fc7cfab3dea
0x7fc7cfab3de0  cmp %rax, 0x28(%rcx)    
0x7fc7cfab3de4  jz 0x1144                ; 0x7fc7cfab3e64
0x7fc7cfab3dea  mov $0x3d, -0xa4(%rbp)  
0x7fc7cfab3df4  mov $0x7622f0, %r8       ; rbx_find_const_fast
0x7fc7cfab3dfe  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3e05  mov $0x1653d40, %edx    
0x7fc7cfab3e0a  mov %r15, %rdi          
0x7fc7cfab3e0d  mov %rax, %rcx          
0x7fc7cfab3e10  callq *%r8              
0x7fc7cfab3e13  test %rax, %rax         
0x7fc7cfab3e16  jnz 0x1148               ; 0x7fc7cfab3e68
0x7fc7cfab3e1c  jmp 0x11a9               ; 0x7fc7cfab3ec9
0x7fc7cfab3e21  mov $0x28, -0xa4(%rbp)  
0x7fc7cfab3e2b  mov $0x7fc7b4004240, %rax
0x7fc7cfab3e35  mov %rax, (%rsp)        
0x7fc7cfab3e39  mov $0x1, 0x10(%rsp)    
0x7fc7cfab3e41  mov $0x0, 0x8(%rsp)     
0x7fc7cfab3e49  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab3e53  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3e5a  mov $0x28, %edx         
0x7fc7cfab3e5f  jmp 0x490                ; 0x7fc7cfab31b0
0x7fc7cfab3e64  mov 0x20(%rcx), %rax    
0x7fc7cfab3e68  mov %rax, -0x80(%rbp)   
0x7fc7cfab3e6c  mov 0x1653d50, %rcx     
0x7fc7cfab3e74  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab3e78  jnz 0x1178               ; 0x7fc7cfab3e98
0x7fc7cfab3e7e  mov 0x1582514, %edx     
0x7fc7cfab3e85  cmp 0x44(%rcx), %edx    
0x7fc7cfab3e88  jnz 0x1178               ; 0x7fc7cfab3e98
0x7fc7cfab3e8e  cmp %rax, 0x28(%rcx)    
0x7fc7cfab3e92  jz 0x11ed                ; 0x7fc7cfab3f0d
0x7fc7cfab3e98  mov $0x3f, -0xa4(%rbp)  
0x7fc7cfab3ea2  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7fc7cfab3eac  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3eb3  mov $0x1653d50, %edx    
0x7fc7cfab3eb8  mov %r15, %rdi          
0x7fc7cfab3ebb  mov %rax, %rcx          
0x7fc7cfab3ebe  callq *%rbx             
0x7fc7cfab3ec0  test %rax, %rax         
0x7fc7cfab3ec3  jnz 0x11f1               ; 0x7fc7cfab3f11
0x7fc7cfab3ec9  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab3ed3  lea -0xc8(%rbp), %rsi   
0x7fc7cfab3eda  mov %r15, %rdi          
0x7fc7cfab3edd  callq *%rax             
0x7fc7cfab3edf  mov %al, %cl            
0x7fc7cfab3ee1  xor %eax, %eax          
0x7fc7cfab3ee3  testb $0x1, %cl         
0x7fc7cfab3ee6  jz 0x11db                ; 0x7fc7cfab3efb
0x7fc7cfab3eec  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab3ef6  mov %r15, %rdi          
0x7fc7cfab3ef9  callq *%rax             
0x7fc7cfab3efb  addq $0x1c8, %rsp       
0x7fc7cfab3f02  pop %rbx                
0x7fc7cfab3f03  pop %r12                
0x7fc7cfab3f05  pop %r13                
0x7fc7cfab3f07  pop %r14                
0x7fc7cfab3f09  pop %r15                
0x7fc7cfab3f0b  pop %rbp                
0x7fc7cfab3f0c  ret                     
0x7fc7cfab3f0d  mov 0x20(%rcx), %rax    
0x7fc7cfab3f11  mov %rax, -0x80(%rbp)   
0x7fc7cfab3f15  mov -0xd0(%rbp), %rcx   
0x7fc7cfab3f1c  mov %rcx, -0x78(%rbp)   
0x7fc7cfab3f20  testb $0x3, %al         
0x7fc7cfab3f23  jnz 0x12b3               ; 0x7fc7cfab3fd3
0x7fc7cfab3f29  mov 0x8(%rax), %rax     
0x7fc7cfab3f2d  cmp $0x1fb, 0x70(%rax)  
0x7fc7cfab3f34  jnz 0x12b3               ; 0x7fc7cfab3fd3
0x7fc7cfab3f3a  cmp $0xd2, 0x74(%rax)   
0x7fc7cfab3f41  jnz 0x12d8               ; 0x7fc7cfab3ff8
0x7fc7cfab3f47  mov $0x763f90, %rax      ; rbx_ffi_to_double
0x7fc7cfab3f51  lea -0x59(%rbp), %rdx   
0x7fc7cfab3f55  mov %r15, %rdi          
0x7fc7cfab3f58  mov %rcx, %rsi          
0x7fc7cfab3f5b  callq *%rax             
0x7fc7cfab3f5d  invalid                 
0x7fc7cfab3f5e  sti                     
0x7fc7cfab3f5f  adc %eax, -0x1d8(%rbp)  
0x7fc7cfab3f65  mov -0x59(%rbp), %al    
0x7fc7cfab3f68  test %al, %al           
0x7fc7cfab3f6a  jz 0x12b3                ; 0x7fc7cfab3fd3
0x7fc7cfab3f70  mov $0x763090, %rax      ; rbx_enter_unmanaged
0x7fc7cfab3f7a  lea -0xc8(%rbp), %rbx   
0x7fc7cfab3f81  mov %r15, %rdi          
0x7fc7cfab3f84  mov %rbx, %rsi          
0x7fc7cfab3f87  callq *%rax             
0x7fc7cfab3f89  mov $0x7fc7cf6b68a0, %rax ; sqrt
0x7fc7cfab3f93  invalid                 
0x7fc7cfab3f94  sti                     
0x7fc7cfab3f95  adc %al, -0x1d8(%rbp)   
0x7fc7cfab3f9b  callq *%rax             
0x7fc7cfab3f9d  invalid                 
0x7fc7cfab3f9e  sti                     
0x7fc7cfab3f9f  adc %eax, -0x1d8(%rbp)  
0x7fc7cfab3fa5  mov $0x7630b0, %rax      ; rbx_exit_unmanaged
0x7fc7cfab3faf  mov %r15, %rdi          
0x7fc7cfab3fb2  mov %rbx, %rsi          
0x7fc7cfab3fb5  callq *%rax             
0x7fc7cfab3fb7  mov $0x764180, %rax      ; rbx_ffi_from_double
0x7fc7cfab3fc1  mov %r15, %rdi          
0x7fc7cfab3fc4  invalid                 
0x7fc7cfab3fc5  sti                     
0x7fc7cfab3fc6  adc %al, -0x1d8(%rbp)   
0x7fc7cfab3fcc  callq *%rax             
0x7fc7cfab3fce  jmp 0x6c6                ; 0x7fc7cfab33e6
0x7fc7cfab3fd3  mov $0x43, -0xa4(%rbp)  
0x7fc7cfab3fdd  mov $0x7fc7b4004240, %rax
0x7fc7cfab3fe7  mov %rax, (%rsp)        
0x7fc7cfab3feb  mov $0x0, 0x10(%rsp)    
0x7fc7cfab3ff3  jmp 0x12f8               ; 0x7fc7cfab4018
0x7fc7cfab3ff8  mov $0x43, -0xa4(%rbp)  
0x7fc7cfab4002  mov $0x7fc7b4004240, %rax
0x7fc7cfab400c  mov %rax, (%rsp)        
0x7fc7cfab4010  mov $0x1, 0x10(%rsp)    
0x7fc7cfab4018  mov $0x0, 0x8(%rsp)     
0x7fc7cfab4020  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab402a  lea -0xc8(%rbp), %rsi   
0x7fc7cfab4031  mov $0x43, %edx         
0x7fc7cfab4036  jmp 0x490                ; 0x7fc7cfab31b0
[[[ LLVM Simple IR: _X_Rubinius::Type#coerce_to_float@6 ]]]

define %"struct.rubinius::Object"* @"_X_Rubinius::Type#coerce_to_float@6"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !19
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !19
  %counter2 = alloca i32, !dbg !19
  %valid_flag = alloca i1, !dbg !19
  %cfstk = alloca %"struct.rubinius::Object"*, i32 17, !dbg !19
  %var_mem = alloca %"struct.rubinius::Object"*, i32 9, !dbg !19
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !19
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !19
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !19
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !19
  %arg.total = load i32* %total_pos, !dbg !19
  %arg_cmp = icmp slt i32 %arg.total, 1, !dbg !19
  %arg_cmp1 = icmp sgt i32 %arg.total, 3, !dbg !19
  %arg_combine = or i1 %arg_cmp, %arg_cmp1, !dbg !19
  %cfstk33 = alloca %"struct.rubinius::Object"*, i32 12
  %var_mem36 = alloca %"struct.rubinius::Object"*, i32 6
  %cfstk208 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem211 = alloca %"struct.rubinius::Object"*, i32 7
  br i1 %arg_combine, label %arg_error, label %import_args, !dbg !19

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 3), !dbg !19
  br label %return_pad, !dbg !19

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !19
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !19
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !19
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !19
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !19
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !19
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !19
  store i8* null, i8** %3, !dbg !19
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !19
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !19
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !19
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !19
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !19
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !19
  store i32 40, i32* %5, !dbg !19
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !19
  store i32 0, i32* %6, !dbg !19
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !19
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !19
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !19
  store i8* inttoptr (i64 140495697445360 to i8*), i8** %8, !dbg !19
  store i32 0, i32* %counter_alloca, !dbg !19
  br label %stack_nil, !dbg !19

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !19
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !19
  %added = add i32 %counter, 1, !dbg !19
  store i32 %added, i32* %counter_alloca, !dbg !19
  %loop_check = icmp eq i32 %added, 8, !dbg !19
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !19

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !19
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !19
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !19
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !19, !rbx-classid !20
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !19
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !19
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !19
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !19
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !19
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !19
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !19
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !19
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !19
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !19
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !19
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !19
  %local_pos2 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2, !dbg !19
  %local_pos3 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos3, !dbg !19
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !19
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !19
  store i32 0, i32* %counter_alloca, !dbg !19
  br label %arg_loop_top, !dbg !19

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %loop_val = load i32* %counter_alloca, !dbg !19
  %loop_test = icmp slt i32 %loop_val, %arg.total, !dbg !19
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !19

arg_loop_body:                                    ; preds = %arg_loop_top
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val, !dbg !19
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !19
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %loop_val, !dbg !19
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !19
  %add = add i32 %loop_val, 1, !dbg !19
  store i32 %add, i32* %counter_alloca, !dbg !19
  br label %arg_loop_top, !dbg !19

arg_loop_cont:                                    ; preds = %arg_loop_top
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !21
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !21
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !21
  %stack_limit = load i64* %18, !dbg !21
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !21
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !21
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !21
  %check_interrupts = load i8* %20, !dbg !21
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !21
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !21
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !21
  %needs_check = or i1 %needs_interrupts, %19, !dbg !21
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !21

bail_out:                                         ; preds = %continue573, %continue560, %continue553, %continue525, %use_call524, %continue498, %continue486, %continue479, %continue457, %use_call456, %ip105, %ip97, %ip89, %continue338, %use_call337, %continue288, %use_call287, %return_pad200, %use_call175, %ip36, %continue119, %use_call, %return_pad27
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !19

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !19
  br label %return_pad, !dbg !19

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !19

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !19
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !19
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !19
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !19
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !19
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !19
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !19
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !19
  %stack_pos4 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack_pos4, !dbg !19
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load = load %"struct.rubinius::Object"** %stack_pos5, !dbg !19
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !19
  %and = and i64 %as_int, 15, !dbg !19
  %is_true = icmp ne i64 %and, 10, !dbg !19
  br i1 %is_true, label %ip8, label %continue, !dbg !19

continue:                                         ; preds = %method_body
  br label %ip4, !dbg !19

ip4:                                              ; preds = %continue
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos6, !dbg !19
  %local_pos7 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !19
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load9 = load %"struct.rubinius::Object"** %stack_pos8, !dbg !19, !rbx-classid !22
  store %"struct.rubinius::Object"* %stack_load9, %"struct.rubinius::Object"** %local_pos7, !dbg !19
  br label %ip8, !dbg !19

ip8:                                              ; preds = %ip4, %method_body
  %pa10 = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !19
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %pa10, %"struct.rubinius::Object"** %stack_pos11, !dbg !19
  %stack_pos12 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load13 = load %"struct.rubinius::Object"** %stack_pos12, !dbg !19
  %as_int14 = ptrtoint %"struct.rubinius::Object"* %stack_load13 to i64, !dbg !19
  %and15 = and i64 %as_int14, 15, !dbg !19
  %is_true16 = icmp ne i64 %and15, 10, !dbg !19
  br i1 %is_true16, label %ip16, label %continue17, !dbg !19

continue17:                                       ; preds = %ip8
  br label %ip12, !dbg !19

ip12:                                             ; preds = %continue17
  %stack_pos18 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos18, !dbg !19
  %local_pos19 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !19
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load21 = load %"struct.rubinius::Object"** %stack_pos20, !dbg !19, !rbx-classid !22
  store %"struct.rubinius::Object"* %stack_load21, %"struct.rubinius::Object"** %local_pos19, !dbg !19
  br label %ip16, !dbg !19

ip16:                                             ; preds = %ip12, %ip8
  %local_pos22 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !23
  %local = load %"struct.rubinius::Object"** %local_pos22, !dbg !23, !rbx-classid !24
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos23, !dbg !23
  %stack_pos25 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load26 = load %"struct.rubinius::Object"** %stack_pos25, !dbg !23, !rbx-classid !24
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load26, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !23
  br i1 %is_immediate, label %guarded_body, label %class_fallback, !dbg !23

serial_fallback:                                  ; No predecessors!
  store i32 18, i32* %ip_pos, !dbg !23
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 18, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !23
  br label %return_pad, !dbg !23

continue24:                                       ; preds = %continue102
  %stack_pos104 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load105 = load %"struct.rubinius::Object"** %stack_pos104, !dbg !23
  %stack_pos106 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %stack_load105, %"struct.rubinius::Object"** %stack_pos106, !dbg !23
  %stack_pos107 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load108 = load %"struct.rubinius::Object"** %stack_pos107, !dbg !23
  %as_int109 = ptrtoint %"struct.rubinius::Object"* %stack_load108 to i64, !dbg !23
  %and110 = and i64 %as_int109, 15, !dbg !23
  %is_true111 = icmp eq i64 %and110, 10, !dbg !23
  br i1 %is_true111, label %ip34, label %continue112, !dbg !23

guarded_body:                                     ; preds = %ip16
  %stack_pos29 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load30 = load %"struct.rubinius::Object"** %stack_pos29, !dbg !23, !rbx-classid !24
  br label %inline_entry, !dbg !23

class_fallback:                                   ; preds = %ip16
  store i32 18, i32* %ip_pos, !dbg !23
  %22 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 18, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !23
  br label %return_pad, !dbg !23

inline_entry:                                     ; preds = %guarded_body
  %call_frame34 = bitcast %"struct.rubinius::Object"** %cfstk33 to %"struct.rubinius::CallFrame"*, !dbg !25
  %stack35 = getelementptr %"struct.rubinius::Object"** %cfstk33, i32 9, !dbg !25
  %vars37 = bitcast %"struct.rubinius::Object"** %var_mem36 to %"struct.rubinius::StackVariables"*, !dbg !25
  %23 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 0, !dbg !25
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %23, !dbg !25
  %24 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 2, !dbg !25
  store i8* inttoptr (i64 140495697180320 to i8*), i8** %24, !dbg !25
  %compiled_code38 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495697180320 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !25
  %25 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 3, !dbg !25
  store %"struct.rubinius::CompiledCode"* %compiled_code38, %"struct.rubinius::CompiledCode"** %25, !dbg !25
  %constant_scope_pos39 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code38, i32 0, i32 13, !dbg !25
  %constant_scope40 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos39, !dbg !25
  %26 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 1, !dbg !25
  store %"struct.rubinius::ConstantScope"* %constant_scope40, %"struct.rubinius::ConstantScope"** %26, !dbg !25
  %27 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 4, !dbg !25
  store i32 12, i32* %27, !dbg !25
  %28 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 5, !dbg !25
  store i32 0, i32* %28, !dbg !25
  %29 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 8, !dbg !25
  store %"struct.rubinius::StackVariables"* %vars37, %"struct.rubinius::StackVariables"** %29, !dbg !25
  %stack_pos41 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos41, !dbg !25
  %stack_pos42 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos42, !dbg !25
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack35, i32 2, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos43, !dbg !25
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495697180320 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !25
  %30 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 0, !dbg !25
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %30, !dbg !25
  %31 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 2, !dbg !25
  store %"struct.rubinius::Object"* %stack_load30, %"struct.rubinius::Object"** %31, !dbg !25
  %32 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 4, !dbg !25
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %32, !dbg !25
  %33 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 3, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %33, !dbg !25
  %34 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 1, !dbg !25
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %34, !dbg !25
  %35 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 5, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %35, !dbg !25
  br label %method_body31, !dbg !25

bail_out44:                                       ; No predecessors!
  %rth45 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame34), !dbg !25
  br i1 %rth45, label %ret_raise_val46, label %ret_null47, !dbg !25

ret_raise_val46:                                  ; preds = %bail_out44
  %crv48 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !25
  br label %return_pad27, !dbg !25

ret_null47:                                       ; preds = %bail_out44
  br label %return_pad27, !dbg !25

method_body31:                                    ; preds = %inline_entry
  %ip_pos49 = getelementptr %"struct.rubinius::CallFrame"* %call_frame34, i32 0, i32 5, !dbg !25
  %out_args_name50 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !25
  %out_args_recv51 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !25
  %out_args_block52 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !25
  %out_args_total53 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !25
  %out_args_arguments54 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !25
  %out_args_container55 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !25
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !26
  %stack_pos56 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos56, !dbg !26
  %36 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 2, !dbg !26
  %self = load %"struct.rubinius::Object"** %36, !dbg !26, !rbx-classid !27
  %stack_pos57 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos57, !dbg !26
  %stack_pos58 = getelementptr %"struct.rubinius::Object"** %stack35, i32 2, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos58, !dbg !26
  %stack_pos62 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !26
  %stack_load63 = load %"struct.rubinius::Object"** %stack_pos62, !dbg !26, !rbx-classid !27
  %stack_pos64 = getelementptr %"struct.rubinius::Object"** %stack35, i32 2, !dbg !26
  %stack_load65 = load %"struct.rubinius::Object"** %stack_pos64, !dbg !26, !rbx-classid !28
  %identity_equal = icmp eq %"struct.rubinius::Object"* %stack_load63, %stack_load65, !dbg !26
  %select_bool = select i1 %identity_equal, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos66 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %select_bool, %"struct.rubinius::Object"** %stack_pos66, !dbg !26
  br label %continue61, !dbg !26

class_fallback59:                                 ; No predecessors!
  store i32 3, i32* %ip_pos49, !dbg !26
  %37 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame34, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !26
  br label %return_pad27, !dbg !26

serial_fallback60:                                ; No predecessors!
  store i32 3, i32* %ip_pos49, !dbg !26
  %38 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame34, i32 3, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !26
  br label %return_pad27, !dbg !26

continue61:                                       ; preds = %method_body31
  %stack_pos67 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !26
  %stack_load68 = load %"struct.rubinius::Object"** %stack_pos67, !dbg !26
  %stack_pos69 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %stack_load68, %"struct.rubinius::Object"** %stack_pos69, !dbg !26
  %stack_pos70 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !26
  %stack_load71 = load %"struct.rubinius::Object"** %stack_pos70, !dbg !26
  %as_int72 = ptrtoint %"struct.rubinius::Object"* %stack_load71 to i64, !dbg !26
  %and73 = and i64 %as_int72, 15, !dbg !26
  %is_true74 = icmp ne i64 %and73, 10, !dbg !26
  br i1 %is_true74, label %ip1632, label %continue75, !dbg !26

continue75:                                       ; preds = %continue61
  br label %ip9, !dbg !26

ip9:                                              ; preds = %continue75
  %system_object76 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !29
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %system_object76, %"struct.rubinius::Object"** %stack_pos77, !dbg !29
  %39 = getelementptr %"struct.rubinius::StackVariables"* %vars37, i32 0, i32 2, !dbg !29
  %self78 = load %"struct.rubinius::Object"** %39, !dbg !29, !rbx-classid !27
  %stack_pos79 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !29
  store %"struct.rubinius::Object"* %self78, %"struct.rubinius::Object"** %stack_pos79, !dbg !29
  %stack_pos80 = getelementptr %"struct.rubinius::Object"** %stack35, i32 2, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos80, !dbg !29
  %stack_pos84 = getelementptr %"struct.rubinius::Object"** %stack35, i32 1, !dbg !29
  %stack_load85 = load %"struct.rubinius::Object"** %stack_pos84, !dbg !29, !rbx-classid !27
  %stack_pos86 = getelementptr %"struct.rubinius::Object"** %stack35, i32 2, !dbg !29
  %stack_load87 = load %"struct.rubinius::Object"** %stack_pos86, !dbg !29, !rbx-classid !30
  %identity_equal88 = icmp eq %"struct.rubinius::Object"* %stack_load85, %stack_load87, !dbg !29
  %select_bool89 = select i1 %identity_equal88, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*)
  %stack_pos90 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %select_bool89, %"struct.rubinius::Object"** %stack_pos90, !dbg !29
  br label %continue83, !dbg !29

class_fallback81:                                 ; No predecessors!
  store i32 13, i32* %ip_pos49, !dbg !29
  %40 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame34, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !29
  br label %return_pad27, !dbg !29

serial_fallback82:                                ; No predecessors!
  store i32 13, i32* %ip_pos49, !dbg !29
  %41 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame34, i32 13, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !29
  br label %return_pad27, !dbg !29

continue83:                                       ; preds = %ip9
  br label %ip1632, !dbg !29

ip1632:                                           ; preds = %continue83, %continue61
  %stack_pos91 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !29
  %stack_load92 = load %"struct.rubinius::Object"** %stack_pos91, !dbg !29
  %as_int93 = ptrtoint %"struct.rubinius::Object"* %stack_load92 to i64, !dbg !29
  %and94 = and i64 %as_int93, 15, !dbg !29
  %is_true95 = icmp eq i64 %and94, 10, !dbg !29
  br i1 %is_true95, label %ip21, label %continue96, !dbg !29

continue96:                                       ; preds = %ip1632
  br label %ip18, !dbg !29

ip18:                                             ; preds = %continue96
  %stack_pos97 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos97, !dbg !29
  br label %ip22, !dbg !29

continue98:                                       ; No predecessors!
  br label %ip21, !dbg !29

ip22:                                             ; preds = %ip21, %ip18
  %stack_pos99 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !31
  %stack_load100 = load %"struct.rubinius::Object"** %stack_pos99, !dbg !31
  br label %return_pad27, !dbg !31

ip21:                                             ; preds = %continue98, %ip1632
  %stack_pos101 = getelementptr %"struct.rubinius::Object"** %stack35, i32 0, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos101, !dbg !29
  br label %ip22, !dbg !29

return_pad27:                                     ; preds = %ip22, %serial_fallback82, %class_fallback81, %serial_fallback60, %class_fallback59, %ret_raise_val46, %ret_null47
  %return_phi28 = phi %"struct.rubinius::Object"* [ null, %ret_null47 ], [ %crv48, %ret_raise_val46 ], [ %37, %class_fallback59 ], [ %38, %serial_fallback60 ], [ %40, %class_fallback81 ], [ %41, %serial_fallback82 ], [ %stack_load100, %ip22 ]
  %null_check = icmp eq %"struct.rubinius::Object"* %return_phi28, null, !dbg !23
  br i1 %null_check, label %bail_out, label %check_active, !dbg !23

continue102:                                      ; preds = %check_active
  %stack_pos103 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %return_phi28, %"struct.rubinius::Object"** %stack_pos103, !dbg !23
  br label %continue24, !dbg !23

check_active:                                     ; preds = %return_pad27
  br label %continue102, !dbg !23

continue112:                                      ; preds = %continue24
  br label %ip24, !dbg !23

ip24:                                             ; preds = %continue112
  %42 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !23
  %self113 = load %"struct.rubinius::Object"** %42, !dbg !23
  %stack_pos114 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %self113, %"struct.rubinius::Object"** %stack_pos114, !dbg !23
  %local_pos115 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !23
  %local116 = load %"struct.rubinius::Object"** %local_pos115, !dbg !23, !rbx-classid !32
  %stack_pos117 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %local116, %"struct.rubinius::Object"** %stack_pos117, !dbg !23
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), !dbg !23
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473592 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !23
  %constant_scope118 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !23
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !23
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope118, %frame_scope, !dbg !23
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !23

check_serial:                                     ; preds = %ip24
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !23
  %serial = load i32* %serial_pos, !dbg !23
  %use_cache120 = icmp eq i32 %global_serial, %serial, !dbg !23
  br i1 %use_cache120, label %use_cache, label %use_call, !dbg !23

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !23
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !23
  br label %continue119, !dbg !23

use_call:                                         ; preds = %check_serial, %ip24
  store i32 28, i32* %ip_pos, !dbg !23
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check123 = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !23
  br i1 %null_check123, label %bail_out, label %check_active122, !dbg !23

continue119:                                      ; preds = %continue121, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue121 ], !dbg !23, !rbx-classid !33
  %stack_pos124 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos124, !dbg !23
  %stack_pos125 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load126 = load %"struct.rubinius::Object"** %stack_pos125, !dbg !23
  store %"struct.rubinius::Object"* %stack_load126, %"struct.rubinius::Object"** %out_args_recv, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 19758 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !23
  store i32 2, i32* %out_args_total, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !23
  %stack_pos127 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos127, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !23
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 26473616 to %"struct.rubinius::CallSite"**), !dbg !23
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !23
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !23
  store i32 31, i32* %ip_pos, !dbg !23
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check130 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !23
  br i1 %null_check130, label %bail_out, label %check_active129, !dbg !23

continue121:                                      ; preds = %check_active122
  br label %continue119, !dbg !23

check_active122:                                  ; preds = %use_call
  br label %continue121, !dbg !23

continue128:                                      ; preds = %check_active129
  %stack_pos131 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %call_site_execute, %"struct.rubinius::Object"** %stack_pos131, !dbg !23
  br label %ip34, !dbg !23

ip34:                                             ; preds = %continue128, %continue24
  %stack_pos132 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load133 = load %"struct.rubinius::Object"** %stack_pos132, !dbg !23
  %as_int134 = ptrtoint %"struct.rubinius::Object"* %stack_load133 to i64, !dbg !23
  %and135 = and i64 %as_int134, 15, !dbg !23
  %is_true136 = icmp eq i64 %and135, 10, !dbg !23
  br i1 %is_true136, label %ip48, label %continue137, !dbg !23

check_active129:                                  ; preds = %continue119
  br label %continue128, !dbg !23

continue137:                                      ; preds = %ip34
  br label %ip36, !dbg !23

ip36:                                             ; preds = %continue137
  %43 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !34
  %self138 = load %"struct.rubinius::Object"** %43, !dbg !34
  %stack_pos139 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %self138, %"struct.rubinius::Object"** %stack_pos139, !dbg !34
  %local_pos140 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !34
  %local141 = load %"struct.rubinius::Object"** %local_pos140, !dbg !34, !rbx-classid !32
  %stack_pos142 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local141, %"struct.rubinius::Object"** %stack_pos142, !dbg !34
  %local_pos143 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !34
  %local144 = load %"struct.rubinius::Object"** %local_pos143, !dbg !34, !rbx-classid !35
  %stack_pos145 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local144, %"struct.rubinius::Object"** %stack_pos145, !dbg !34
  %stack_pos146 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load147 = load %"struct.rubinius::Object"** %stack_pos146, !dbg !34
  store %"struct.rubinius::Object"* %stack_load147, %"struct.rubinius::Object"** %out_args_recv, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 19838 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !34
  store i32 2, i32* %out_args_total, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !34
  %stack_pos148 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos148, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !34
  %cache_const149 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473704 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos150 = getelementptr %"struct.rubinius::CallSite"* %cache_const149, i32 0, i32 2, !dbg !34
  %execute151 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos150, !dbg !34
  store i32 42, i32* %ip_pos, !dbg !34
  %call_site_execute152 = call %"struct.rubinius::Object"* %execute151(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const149, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check155 = icmp eq %"struct.rubinius::Object"* %call_site_execute152, null, !dbg !34
  br i1 %null_check155, label %bail_out, label %check_active154, !dbg !34

continue153:                                      ; preds = %check_active154
  %stack_pos156 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %call_site_execute152, %"struct.rubinius::Object"** %stack_pos156, !dbg !34
  %stack_pos157 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load158 = load %"struct.rubinius::Object"** %stack_pos157, !dbg !34
  br label %return_pad, !dbg !34

ip48:                                             ; preds = %ip34
  %stack_pos159 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos159, !dbg !23
  %local_pos160 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !36
  %local161 = load %"struct.rubinius::Object"** %local_pos160, !dbg !36, !rbx-classid !32
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack_pos162, !dbg !36
  %stack_pos163 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !37
  %stack_load164 = load %"struct.rubinius::Object"** %stack_pos163, !dbg !37, !rbx-classid !32
  %stack_pos165 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  store %"struct.rubinius::Object"* %stack_load164, %"struct.rubinius::Object"** %stack_pos165, !dbg !37
  %global_serial166 = load i32* inttoptr (i64 22553876 to i32*), !dbg !37
  %constant_cache167 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**), !dbg !37
  %constant_cache_pos168 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i32 0, i32 4, !dbg !37
  %constant_scope169 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos168, !dbg !37
  %scope_pos170 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !37
  %frame_scope171 = load %"struct.rubinius::ConstantScope"** %scope_pos170, !dbg !37
  %same_scope172 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope169, %frame_scope171, !dbg !37
  br i1 %same_scope172, label %check_serial173, label %use_call175, !dbg !37

check_active154:                                  ; preds = %ip36
  br label %continue153, !dbg !34

check_serial173:                                  ; preds = %ip48
  %serial_pos177 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i32 0, i32 7, !dbg !37
  %serial178 = load i32* %serial_pos177, !dbg !37
  %use_cache179 = icmp eq i32 %global_serial166, %serial178, !dbg !37
  br i1 %use_cache179, label %use_cache174, label %use_call175, !dbg !37

use_cache174:                                     ; preds = %check_serial173
  %value_pos180 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i32 0, i32 2, !dbg !37
  %cached_value181 = load %"struct.rubinius::Object"** %value_pos180, !dbg !37
  br label %continue176, !dbg !37

use_call175:                                      ; preds = %check_serial173, %ip48
  store i32 53, i32* %ip_pos, !dbg !37
  %push_const_fast182 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !37
  %null_check185 = icmp eq %"struct.rubinius::Object"* %push_const_fast182, null, !dbg !37
  br i1 %null_check185, label %bail_out, label %check_active184, !dbg !37

continue176:                                      ; preds = %continue183, %use_cache174
  %constant186 = phi %"struct.rubinius::Object"* [ %cached_value181, %use_cache174 ], [ %push_const_fast182, %continue183 ], !dbg !37, !rbx-classid !38
  %stack_pos187 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !37
  store %"struct.rubinius::Object"* %constant186, %"struct.rubinius::Object"** %stack_pos187, !dbg !37
  %stack_pos188 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !37
  %stack_load189 = load %"struct.rubinius::Object"** %stack_pos188, !dbg !37, !rbx-classid !38
  %stack_pos190 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  %stack_load191 = load %"struct.rubinius::Object"** %stack_pos190, !dbg !37, !rbx-classid !32
  %stack_pos192 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  store %"struct.rubinius::Object"* %stack_load189, %"struct.rubinius::Object"** %stack_pos192, !dbg !37
  %stack_pos193 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !37
  store %"struct.rubinius::Object"* %stack_load191, %"struct.rubinius::Object"** %stack_pos193, !dbg !37
  %stack_pos197 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  %stack_load198 = load %"struct.rubinius::Object"** %stack_pos197, !dbg !37, !rbx-classid !38
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load198 to i64, !dbg !37
  %masked = and i64 %cast, 3, !dbg !37
  %is_reference = icmp eq i64 %masked, 0, !dbg !37
  br i1 %is_reference, label %check_class_id, label %class_fallback194, !dbg !37

continue183:                                      ; preds = %check_active184
  br label %continue176, !dbg !37

check_active184:                                  ; preds = %use_call175
  br label %continue183, !dbg !37

continue196:                                      ; preds = %continue259
  %stack_pos263 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  %stack_load264 = load %"struct.rubinius::Object"** %stack_pos263, !dbg !37
  %as_int265 = ptrtoint %"struct.rubinius::Object"* %stack_load264 to i64, !dbg !37
  %and266 = and i64 %as_int265, 15, !dbg !37
  %is_true267 = icmp eq i64 %and266, 10, !dbg !37
  br i1 %is_true267, label %ip66, label %continue268, !dbg !37

check_class_id:                                   ; preds = %continue176
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load198, i32 0, i32 0, i32 1, !dbg !37
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !37
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !37
  %class_id = load i32* %class_id_pos, !dbg !37
  %check_class_id199 = icmp eq i32 %class_id, 78, !dbg !37
  br i1 %check_class_id199, label %correct_class, label %class_fallback194, !dbg !37

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !37
  %serial_id = load i32* %serial_id_pos, !dbg !37
  %check_serial_id = icmp eq i32 %serial_id, 267, !dbg !37
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback195, !dbg !37

class_fallback194:                                ; preds = %check_class_id, %continue176
  store i32 56, i32* %ip_pos, !dbg !37
  %44 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !37
  br label %return_pad, !dbg !37

correct_serial:                                   ; preds = %correct_class
  %stack_pos202 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !37
  %stack_load203 = load %"struct.rubinius::Object"** %stack_pos202, !dbg !37, !rbx-classid !32
  %stack_pos204 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  %stack_load205 = load %"struct.rubinius::Object"** %stack_pos204, !dbg !37, !rbx-classid !38
  br label %inline_entry206, !dbg !37

serial_fallback195:                               ; preds = %correct_class
  store i32 56, i32* %ip_pos, !dbg !37
  %45 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !37
  br label %return_pad, !dbg !37

inline_entry206:                                  ; preds = %correct_serial
  %call_frame209 = bitcast %"struct.rubinius::Object"** %cfstk208 to %"struct.rubinius::CallFrame"*, !dbg !39
  %stack210 = getelementptr %"struct.rubinius::Object"** %cfstk208, i32 9, !dbg !39
  %vars212 = bitcast %"struct.rubinius::Object"** %var_mem211 to %"struct.rubinius::StackVariables"*, !dbg !39
  %46 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 0, !dbg !39
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %46, !dbg !39
  %47 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 2, !dbg !39
  store i8* inttoptr (i64 140495695783520 to i8*), i8** %47, !dbg !39
  %compiled_code213 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695783520 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !39
  %48 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 3, !dbg !39
  store %"struct.rubinius::CompiledCode"* %compiled_code213, %"struct.rubinius::CompiledCode"** %48, !dbg !39
  %constant_scope_pos214 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code213, i32 0, i32 13, !dbg !39
  %constant_scope215 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos214, !dbg !39
  %49 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 1, !dbg !39
  store %"struct.rubinius::ConstantScope"* %constant_scope215, %"struct.rubinius::ConstantScope"** %49, !dbg !39
  %50 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 4, !dbg !39
  store i32 12, i32* %50, !dbg !39
  %51 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 5, !dbg !39
  store i32 0, i32* %51, !dbg !39
  %52 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 8, !dbg !39
  store %"struct.rubinius::StackVariables"* %vars212, %"struct.rubinius::StackVariables"** %52, !dbg !39
  %stack_pos216 = getelementptr %"struct.rubinius::Object"** %stack210, i32 0, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos216, !dbg !39
  %stack_pos217 = getelementptr %"struct.rubinius::Object"** %stack210, i32 1, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos217, !dbg !39
  %stack_pos218 = getelementptr %"struct.rubinius::Object"** %stack210, i32 2, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos218, !dbg !39
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack210, i32 3, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos219, !dbg !39
  %module220 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695783520 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !39
  %53 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 0, !dbg !39
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %53, !dbg !39
  %54 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %stack_load205, %"struct.rubinius::Object"** %54, !dbg !39
  %55 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 4, !dbg !39
  store %"struct.rubinius::Module"* %module220, %"struct.rubinius::Module"** %55, !dbg !39
  %56 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 3, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %56, !dbg !39
  %57 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 1, !dbg !39
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %57, !dbg !39
  %58 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 5, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %58, !dbg !39
  %local_pos221 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 6, i32 0, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos221, !dbg !39
  %local_pos222 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 6, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %stack_load203, %"struct.rubinius::Object"** %local_pos222, !dbg !39
  br label %method_body207, !dbg !39

bail_out223:                                      ; No predecessors!
  %rth224 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame209), !dbg !39
  br i1 %rth224, label %ret_raise_val225, label %ret_null226, !dbg !39

ret_raise_val225:                                 ; preds = %bail_out223
  %crv227 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !39
  br label %return_pad200, !dbg !39

ret_null226:                                      ; preds = %bail_out223
  br label %return_pad200, !dbg !39

method_body207:                                   ; preds = %inline_entry206
  %ip_pos228 = getelementptr %"struct.rubinius::CallFrame"* %call_frame209, i32 0, i32 5, !dbg !39
  %out_args_name229 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !39
  %out_args_recv230 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !39
  %out_args_block231 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !39
  %out_args_total232 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !39
  %out_args_arguments233 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !39
  %out_args_container234 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !39
  %system_object235 = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !40
  %stack_pos236 = getelementptr %"struct.rubinius::Object"** %stack210, i32 0, !dbg !40
  store %"struct.rubinius::Object"* %system_object235, %"struct.rubinius::Object"** %stack_pos236, !dbg !40
  %local_pos237 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 6, i32 0, !dbg !40
  %local238 = load %"struct.rubinius::Object"** %local_pos237, !dbg !40, !rbx-classid !32
  %stack_pos239 = getelementptr %"struct.rubinius::Object"** %stack210, i32 1, !dbg !40
  store %"struct.rubinius::Object"* %local238, %"struct.rubinius::Object"** %stack_pos239, !dbg !40
  %59 = getelementptr %"struct.rubinius::StackVariables"* %vars212, i32 0, i32 2, !dbg !40
  %self240 = load %"struct.rubinius::Object"** %59, !dbg !40, !rbx-classid !41
  %stack_pos241 = getelementptr %"struct.rubinius::Object"** %stack210, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %self240, %"struct.rubinius::Object"** %stack_pos241, !dbg !40
  %stack_pos245 = getelementptr %"struct.rubinius::Object"** %stack210, i32 1, !dbg !40
  %stack_load246 = load %"struct.rubinius::Object"** %stack_pos245, !dbg !40, !rbx-classid !32
  %stack_pos247 = getelementptr %"struct.rubinius::Object"** %stack210, i32 2, !dbg !40
  %stack_load248 = load %"struct.rubinius::Object"** %stack_pos247, !dbg !40, !rbx-classid !41
  %cast252 = ptrtoint %"struct.rubinius::Object"* %stack_load246 to i64, !dbg !40
  %masked253 = and i64 %cast252, 3, !dbg !40
  %is_reference254 = icmp eq i64 %masked253, 0, !dbg !40
  br i1 %is_reference254, label %use_cache251, label %negative, !dbg !40

class_fallback242:                                ; No predecessors!
  store i32 4, i32* %ip_pos228, !dbg !40
  %60 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame209, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !40
  br label %return_pad200, !dbg !40

serial_fallback243:                               ; No predecessors!
  store i32 4, i32* %ip_pos228, !dbg !40
  %61 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame209, i32 4, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad200, !dbg !40

continue244:                                      ; preds = %continue249
  %stack_pos257 = getelementptr %"struct.rubinius::Object"** %stack210, i32 0, !dbg !40
  %stack_load258 = load %"struct.rubinius::Object"** %stack_pos257, !dbg !40
  br label %return_pad200, !dbg !40

return_pad200:                                    ; preds = %continue244, %serial_fallback243, %class_fallback242, %ret_raise_val225, %ret_null226
  %return_phi201 = phi %"struct.rubinius::Object"* [ null, %ret_null226 ], [ %crv227, %ret_raise_val225 ], [ %60, %class_fallback242 ], [ %61, %serial_fallback243 ], [ %stack_load258, %continue244 ]
  %null_check261 = icmp eq %"struct.rubinius::Object"* %return_phi201, null, !dbg !37
  br i1 %null_check261, label %bail_out, label %check_active260, !dbg !37

continue249:                                      ; preds = %use_call250, %negative, %positive
  %constant255 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call250 ], !dbg !40
  %stack_pos256 = getelementptr %"struct.rubinius::Object"** %stack210, i32 0, !dbg !40
  store %"struct.rubinius::Object"* %constant255, %"struct.rubinius::Object"** %stack_pos256, !dbg !40
  br label %continue244, !dbg !40

use_call250:                                      ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load246, %"struct.rubinius::Object"* %stack_load248) #0, !dbg !40
  br label %continue249, !dbg !40

positive:                                         ; preds = %use_cache251
  br label %continue249, !dbg !40

negative:                                         ; preds = %use_cache251, %method_body207
  br label %continue249, !dbg !40

use_cache251:                                     ; preds = %method_body207
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load246, i32 0, i32 0, i32 0, i32 0, !dbg !40
  %flags = load i64* %word_pos, !dbg !40
  %mask = and i64 %flags, 255, !dbg !40
  %is_type = icmp eq i64 %mask, 35, !dbg !40
  br i1 %is_type, label %positive, label %negative, !dbg !40

continue259:                                      ; preds = %check_active260
  %stack_pos262 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !37
  store %"struct.rubinius::Object"* %return_phi201, %"struct.rubinius::Object"** %stack_pos262, !dbg !37
  br label %continue196, !dbg !37

check_active260:                                  ; preds = %return_pad200
  br label %continue259, !dbg !37

continue268:                                      ; preds = %continue196
  br label %ip61, !dbg !37

ip61:                                             ; preds = %continue268
  %local_pos269 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !42
  %local270 = load %"struct.rubinius::Object"** %local_pos269, !dbg !42, !rbx-classid !32
  %stack_pos271 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %local270, %"struct.rubinius::Object"** %stack_pos271, !dbg !42
  br label %ip161, !dbg !42

continue272:                                      ; No predecessors!
  br label %ip66, !dbg !42

ip161:                                            ; preds = %continue584, %continue509, %continue358, %ip61
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !43
  %stack_load274 = load %"struct.rubinius::Object"** %stack_pos273, !dbg !43
  br label %return_pad, !dbg !43

ip66:                                             ; preds = %continue272, %continue196
  %stack_pos275 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !44
  %stack_load276 = load %"struct.rubinius::Object"** %stack_pos275, !dbg !44
  %stack_pos277 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %stack_load276, %"struct.rubinius::Object"** %stack_pos277, !dbg !44
  %global_serial278 = load i32* inttoptr (i64 22553876 to i32*), !dbg !44
  %constant_cache279 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**), !dbg !44
  %constant_cache_pos280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i32 0, i32 4, !dbg !44
  %constant_scope281 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos280, !dbg !44
  %scope_pos282 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !44
  %frame_scope283 = load %"struct.rubinius::ConstantScope"** %scope_pos282, !dbg !44
  %same_scope284 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope281, %frame_scope283, !dbg !44
  br i1 %same_scope284, label %check_serial285, label %use_call287, !dbg !44

check_serial285:                                  ; preds = %ip66
  %serial_pos289 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i32 0, i32 7, !dbg !44
  %serial290 = load i32* %serial_pos289, !dbg !44
  %use_cache291 = icmp eq i32 %global_serial278, %serial290, !dbg !44
  br i1 %use_cache291, label %use_cache286, label %use_call287, !dbg !44

use_cache286:                                     ; preds = %check_serial285
  %value_pos292 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i32 0, i32 2, !dbg !44
  %cached_value293 = load %"struct.rubinius::Object"** %value_pos292, !dbg !44
  br label %continue288, !dbg !44

use_call287:                                      ; preds = %check_serial285, %ip66
  store i32 67, i32* %ip_pos, !dbg !44
  %push_const_fast294 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !44
  %null_check297 = icmp eq %"struct.rubinius::Object"* %push_const_fast294, null, !dbg !44
  br i1 %null_check297, label %bail_out, label %check_active296, !dbg !44

continue288:                                      ; preds = %continue295, %use_cache286
  %constant298 = phi %"struct.rubinius::Object"* [ %cached_value293, %use_cache286 ], [ %push_const_fast294, %continue295 ], !dbg !44, !rbx-classid !45
  %stack_pos299 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !44
  store %"struct.rubinius::Object"* %constant298, %"struct.rubinius::Object"** %stack_pos299, !dbg !44
  %stack_pos300 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !44
  %stack_load301 = load %"struct.rubinius::Object"** %stack_pos300, !dbg !44, !rbx-classid !45
  %stack_pos302 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  %stack_load303 = load %"struct.rubinius::Object"** %stack_pos302, !dbg !44
  %stack_pos304 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %stack_load301, %"struct.rubinius::Object"** %stack_pos304, !dbg !44
  %stack_pos305 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !44
  store %"struct.rubinius::Object"* %stack_load303, %"struct.rubinius::Object"** %stack_pos305, !dbg !44
  %stack_pos306 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  %stack_load307 = load %"struct.rubinius::Object"** %stack_pos306, !dbg !44, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load307, %"struct.rubinius::Object"** %out_args_recv, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !44
  store i32 1, i32* %out_args_total, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !44
  %stack_pos308 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos308, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !44
  %cache_const309 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473928 to %"struct.rubinius::CallSite"**), !dbg !44
  %execute_pos310 = getelementptr %"struct.rubinius::CallSite"* %cache_const309, i32 0, i32 2, !dbg !44
  %execute311 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos310, !dbg !44
  store i32 70, i32* %ip_pos, !dbg !44
  %call_site_execute312 = call %"struct.rubinius::Object"* %execute311(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const309, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check315 = icmp eq %"struct.rubinius::Object"* %call_site_execute312, null, !dbg !44
  br i1 %null_check315, label %bail_out, label %check_active314, !dbg !44

continue295:                                      ; preds = %check_active296
  br label %continue288, !dbg !44

check_active296:                                  ; preds = %use_call287
  br label %continue295, !dbg !44

continue313:                                      ; preds = %check_active314
  %stack_pos316 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute312, %"struct.rubinius::Object"** %stack_pos316, !dbg !44
  %stack_pos317 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !44
  %stack_load318 = load %"struct.rubinius::Object"** %stack_pos317, !dbg !44
  %as_int319 = ptrtoint %"struct.rubinius::Object"* %stack_load318 to i64, !dbg !44
  %and320 = and i64 %as_int319, 15, !dbg !44
  %is_true321 = icmp eq i64 %and320, 10, !dbg !44
  br i1 %is_true321, label %ip89, label %continue322, !dbg !44

check_active314:                                  ; preds = %continue288
  br label %continue313, !dbg !44

continue322:                                      ; preds = %continue313
  br label %ip75, !dbg !44

ip75:                                             ; preds = %continue322
  %62 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !46
  %self323 = load %"struct.rubinius::Object"** %62, !dbg !46
  %stack_pos324 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !46
  store %"struct.rubinius::Object"* %self323, %"struct.rubinius::Object"** %stack_pos324, !dbg !46
  %local_pos325 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !46
  %local326 = load %"struct.rubinius::Object"** %local_pos325, !dbg !46, !rbx-classid !32
  %stack_pos327 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !46
  store %"struct.rubinius::Object"* %local326, %"struct.rubinius::Object"** %stack_pos327, !dbg !46
  %global_serial328 = load i32* inttoptr (i64 22553876 to i32*), !dbg !46
  %constant_cache329 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**), !dbg !46
  %constant_cache_pos330 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i32 0, i32 4, !dbg !46
  %constant_scope331 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos330, !dbg !46
  %scope_pos332 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !46
  %frame_scope333 = load %"struct.rubinius::ConstantScope"** %scope_pos332, !dbg !46
  %same_scope334 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope331, %frame_scope333, !dbg !46
  br i1 %same_scope334, label %check_serial335, label %use_call337, !dbg !46

check_serial335:                                  ; preds = %ip75
  %serial_pos339 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i32 0, i32 7, !dbg !46
  %serial340 = load i32* %serial_pos339, !dbg !46
  %use_cache341 = icmp eq i32 %global_serial328, %serial340, !dbg !46
  br i1 %use_cache341, label %use_cache336, label %use_call337, !dbg !46

use_cache336:                                     ; preds = %check_serial335
  %value_pos342 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i32 0, i32 2, !dbg !46
  %cached_value343 = load %"struct.rubinius::Object"** %value_pos342, !dbg !46
  br label %continue338, !dbg !46

use_call337:                                      ; preds = %check_serial335, %ip75
  store i32 79, i32* %ip_pos, !dbg !46
  %push_const_fast344 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !46
  %null_check347 = icmp eq %"struct.rubinius::Object"* %push_const_fast344, null, !dbg !46
  br i1 %null_check347, label %bail_out, label %check_active346, !dbg !46

continue338:                                      ; preds = %continue345, %use_cache336
  %constant348 = phi %"struct.rubinius::Object"* [ %cached_value343, %use_cache336 ], [ %push_const_fast344, %continue345 ], !dbg !46, !rbx-classid !47
  %stack_pos349 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !46
  store %"struct.rubinius::Object"* %constant348, %"struct.rubinius::Object"** %stack_pos349, !dbg !46
  %stack_pos350 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 15694 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos350, !dbg !46
  %stack_pos351 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !46
  %stack_load352 = load %"struct.rubinius::Object"** %stack_pos351, !dbg !46
  store %"struct.rubinius::Object"* %stack_load352, %"struct.rubinius::Object"** %out_args_recv, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !46
  store i32 3, i32* %out_args_total, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !46
  %stack_pos353 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !46
  store %"struct.rubinius::Object"** %stack_pos353, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !46
  %cache_const354 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474040 to %"struct.rubinius::CallSite"**), !dbg !46
  %execute_pos355 = getelementptr %"struct.rubinius::CallSite"* %cache_const354, i32 0, i32 2, !dbg !46
  %execute356 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos355, !dbg !46
  store i32 84, i32* %ip_pos, !dbg !46
  %call_site_execute357 = call %"struct.rubinius::Object"* %execute356(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const354, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check360 = icmp eq %"struct.rubinius::Object"* %call_site_execute357, null, !dbg !46
  br i1 %null_check360, label %bail_out, label %check_active359, !dbg !46

continue345:                                      ; preds = %check_active346
  br label %continue338, !dbg !46

check_active346:                                  ; preds = %use_call337
  br label %continue345, !dbg !46

continue358:                                      ; preds = %check_active359
  %stack_pos361 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !46
  store %"struct.rubinius::Object"* %call_site_execute357, %"struct.rubinius::Object"** %stack_pos361, !dbg !46
  br label %ip161, !dbg !46

check_active359:                                  ; preds = %continue338
  br label %continue358, !dbg !46

continue362:                                      ; No predecessors!
  br label %ip89, !dbg !46

ip89:                                             ; preds = %continue362, %continue313
  %stack_pos363 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load364 = load %"struct.rubinius::Object"** %stack_pos363, !dbg !48
  %stack_pos365 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load364, %"struct.rubinius::Object"** %stack_pos365, !dbg !48
  %stack_pos366 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos366, !dbg !48
  %stack_pos367 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  %stack_load368 = load %"struct.rubinius::Object"** %stack_pos367, !dbg !48, !rbx-classid !30
  %stack_pos369 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load370 = load %"struct.rubinius::Object"** %stack_pos369, !dbg !48
  %stack_pos371 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load368, %"struct.rubinius::Object"** %stack_pos371, !dbg !48
  %stack_pos372 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* %stack_load370, %"struct.rubinius::Object"** %stack_pos372, !dbg !48
  %stack_pos373 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load374 = load %"struct.rubinius::Object"** %stack_pos373, !dbg !48, !rbx-classid !30
  store %"struct.rubinius::Object"* %stack_load374, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos375 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos375, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const376 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474104 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos377 = getelementptr %"struct.rubinius::CallSite"* %cache_const376, i32 0, i32 2, !dbg !48
  %execute378 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos377, !dbg !48
  store i32 92, i32* %ip_pos, !dbg !48
  %call_site_execute379 = call %"struct.rubinius::Object"* %execute378(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const376, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check382 = icmp eq %"struct.rubinius::Object"* %call_site_execute379, null, !dbg !48
  br i1 %null_check382, label %bail_out, label %check_active381, !dbg !48

continue380:                                      ; preds = %check_active381
  %stack_pos383 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute379, %"struct.rubinius::Object"** %stack_pos383, !dbg !48
  %stack_pos384 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load385 = load %"struct.rubinius::Object"** %stack_pos384, !dbg !48
  %as_int386 = ptrtoint %"struct.rubinius::Object"* %stack_load385 to i64, !dbg !48
  %and387 = and i64 %as_int386, 15, !dbg !48
  %is_true388 = icmp ne i64 %and387, 10, !dbg !48
  br i1 %is_true388, label %ip115, label %continue389, !dbg !48

check_active381:                                  ; preds = %ip89
  br label %continue380, !dbg !48

continue389:                                      ; preds = %continue380
  br label %ip97, !dbg !48

ip97:                                             ; preds = %continue389
  %stack_pos390 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load391 = load %"struct.rubinius::Object"** %stack_pos390, !dbg !48
  %stack_pos392 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load391, %"struct.rubinius::Object"** %stack_pos392, !dbg !48
  %stack_pos393 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos393, !dbg !48
  %stack_pos394 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  %stack_load395 = load %"struct.rubinius::Object"** %stack_pos394, !dbg !48, !rbx-classid !22
  %stack_pos396 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load397 = load %"struct.rubinius::Object"** %stack_pos396, !dbg !48
  %stack_pos398 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load395, %"struct.rubinius::Object"** %stack_pos398, !dbg !48
  %stack_pos399 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* %stack_load397, %"struct.rubinius::Object"** %stack_pos399, !dbg !48
  %stack_pos400 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load401 = load %"struct.rubinius::Object"** %stack_pos400, !dbg !48, !rbx-classid !22
  store %"struct.rubinius::Object"* %stack_load401, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos402 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos402, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const403 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474168 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos404 = getelementptr %"struct.rubinius::CallSite"* %cache_const403, i32 0, i32 2, !dbg !48
  %execute405 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos404, !dbg !48
  store i32 100, i32* %ip_pos, !dbg !48
  %call_site_execute406 = call %"struct.rubinius::Object"* %execute405(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const403, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check409 = icmp eq %"struct.rubinius::Object"* %call_site_execute406, null, !dbg !48
  br i1 %null_check409, label %bail_out, label %check_active408, !dbg !48

continue407:                                      ; preds = %check_active408
  %stack_pos410 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute406, %"struct.rubinius::Object"** %stack_pos410, !dbg !48
  %stack_pos411 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load412 = load %"struct.rubinius::Object"** %stack_pos411, !dbg !48
  %as_int413 = ptrtoint %"struct.rubinius::Object"* %stack_load412 to i64, !dbg !48
  %and414 = and i64 %as_int413, 15, !dbg !48
  %is_true415 = icmp ne i64 %and414, 10, !dbg !48
  br i1 %is_true415, label %ip115, label %continue416, !dbg !48

check_active408:                                  ; preds = %ip97
  br label %continue407, !dbg !48

continue416:                                      ; preds = %continue407
  br label %ip105, !dbg !48

ip105:                                            ; preds = %continue416
  %stack_pos417 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load418 = load %"struct.rubinius::Object"** %stack_pos417, !dbg !48
  %stack_pos419 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load418, %"struct.rubinius::Object"** %stack_pos419, !dbg !48
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos420, !dbg !48
  %stack_pos421 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  %stack_load422 = load %"struct.rubinius::Object"** %stack_pos421, !dbg !48, !rbx-classid !28
  %stack_pos423 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load424 = load %"struct.rubinius::Object"** %stack_pos423, !dbg !48
  %stack_pos425 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load422, %"struct.rubinius::Object"** %stack_pos425, !dbg !48
  %stack_pos426 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"* %stack_load424, %"struct.rubinius::Object"** %stack_pos426, !dbg !48
  %stack_pos427 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load428 = load %"struct.rubinius::Object"** %stack_pos427, !dbg !48, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load428, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos429 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos429, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const430 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474232 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos431 = getelementptr %"struct.rubinius::CallSite"* %cache_const430, i32 0, i32 2, !dbg !48
  %execute432 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos431, !dbg !48
  store i32 108, i32* %ip_pos, !dbg !48
  %call_site_execute433 = call %"struct.rubinius::Object"* %execute432(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const430, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check436 = icmp eq %"struct.rubinius::Object"* %call_site_execute433, null, !dbg !48
  br i1 %null_check436, label %bail_out, label %check_active435, !dbg !48

continue434:                                      ; preds = %check_active435
  %stack_pos437 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute433, %"struct.rubinius::Object"** %stack_pos437, !dbg !48
  %stack_pos438 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load439 = load %"struct.rubinius::Object"** %stack_pos438, !dbg !48
  %as_int440 = ptrtoint %"struct.rubinius::Object"* %stack_load439 to i64, !dbg !48
  %and441 = and i64 %as_int440, 15, !dbg !48
  %is_true442 = icmp ne i64 %and441, 10, !dbg !48
  br i1 %is_true442, label %ip115, label %continue443, !dbg !48

check_active435:                                  ; preds = %ip105
  br label %continue434, !dbg !48

continue443:                                      ; preds = %continue434
  br label %ip113, !dbg !48

ip113:                                            ; preds = %continue443
  br label %ip139, !dbg !48

continue444:                                      ; No predecessors!
  br label %ip115, !dbg !48

ip139:                                            ; preds = %continue588, %ip113
  %63 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !49
  %self445 = load %"struct.rubinius::Object"** %63, !dbg !49
  %stack_pos446 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %self445, %"struct.rubinius::Object"** %stack_pos446, !dbg !49
  %global_serial447 = load i32* inttoptr (i64 22553876 to i32*), !dbg !49
  %constant_cache448 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos449 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i32 0, i32 4, !dbg !49
  %constant_scope450 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos449, !dbg !49
  %scope_pos451 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !49
  %frame_scope452 = load %"struct.rubinius::ConstantScope"** %scope_pos451, !dbg !49
  %same_scope453 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope450, %frame_scope452, !dbg !49
  br i1 %same_scope453, label %check_serial454, label %use_call456, !dbg !49

check_serial454:                                  ; preds = %ip139
  %serial_pos458 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i32 0, i32 7, !dbg !49
  %serial459 = load i32* %serial_pos458, !dbg !49
  %use_cache460 = icmp eq i32 %global_serial447, %serial459, !dbg !49
  br i1 %use_cache460, label %use_cache455, label %use_call456, !dbg !49

use_cache455:                                     ; preds = %check_serial454
  %value_pos461 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i32 0, i32 2, !dbg !49
  %cached_value462 = load %"struct.rubinius::Object"** %value_pos461, !dbg !49
  br label %continue457, !dbg !49

use_call456:                                      ; preds = %check_serial454, %ip139
  store i32 141, i32* %ip_pos, !dbg !49
  %push_const_fast463 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check466 = icmp eq %"struct.rubinius::Object"* %push_const_fast463, null, !dbg !49
  br i1 %null_check466, label %bail_out, label %check_active465, !dbg !49

continue457:                                      ; preds = %continue464, %use_cache455
  %constant467 = phi %"struct.rubinius::Object"* [ %cached_value462, %use_cache455 ], [ %push_const_fast463, %continue464 ], !dbg !49, !rbx-classid !50
  %stack_pos468 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %constant467, %"struct.rubinius::Object"** %stack_pos468, !dbg !49
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !49
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !49
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !49
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !49
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 10, !dbg !49
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !49, !rbx-classid !51
  %stack_pos469 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !49
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos469, !dbg !49
  %local_pos470 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !49
  %local471 = load %"struct.rubinius::Object"** %local_pos470, !dbg !49, !rbx-classid !32
  %stack_pos472 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  store %"struct.rubinius::Object"* %local471, %"struct.rubinius::Object"** %stack_pos472, !dbg !49
  %stack_pos473 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  %stack_load474 = load %"struct.rubinius::Object"** %stack_pos473, !dbg !49, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load474, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14438 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 0, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %cache_const475 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474544 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos476 = getelementptr %"struct.rubinius::CallSite"* %cache_const475, i32 0, i32 2, !dbg !49
  %execute477 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos476, !dbg !49
  store i32 147, i32* %ip_pos, !dbg !49
  %call_site_execute478 = call %"struct.rubinius::Object"* %execute477(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const475, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check481 = icmp eq %"struct.rubinius::Object"* %call_site_execute478, null, !dbg !49
  br i1 %null_check481, label %bail_out, label %check_active480, !dbg !49

continue464:                                      ; preds = %check_active465
  br label %continue457, !dbg !49

check_active465:                                  ; preds = %use_call456
  br label %continue464, !dbg !49

continue479:                                      ; preds = %check_active480
  %stack_pos482 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute478, %"struct.rubinius::Object"** %stack_pos482, !dbg !49
  %stack_pos483 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  %stack_load484 = load %"struct.rubinius::Object"** %stack_pos483, !dbg !49
  %cache_const485 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474576 to %"struct.rubinius::CallSite"**), !dbg !49
  %64 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallSite"* %cache_const485, %"struct.rubinius::Object"* %stack_load484), !dbg !49
  %null_check488 = icmp eq %"struct.rubinius::Object"* %64, null, !dbg !49
  br i1 %null_check488, label %bail_out, label %check_active487, !dbg !49

check_active480:                                  ; preds = %continue457
  br label %continue479, !dbg !49

continue486:                                      ; preds = %check_active487
  %stack_pos489 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  store %"struct.rubinius::Object"* %64, %"struct.rubinius::Object"** %stack_pos489, !dbg !49
  %code_pos490 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !49
  %code491 = load %"struct.rubinius::CompiledCode"** %code_pos490, !dbg !49
  %literals_pos492 = getelementptr %"struct.rubinius::CompiledCode"* %code491, i32 0, i32 17, !dbg !49
  %literals493 = load %"struct.rubinius::Tuple"** %literals_pos492, !dbg !49
  %literal_pos494 = getelementptr %"struct.rubinius::Tuple"* %literals493, i32 0, i32 2, i32 13, !dbg !49
  %literal495 = load %"struct.rubinius::Object"** %literal_pos494, !dbg !49, !rbx-classid !51
  %stack_pos496 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !49
  store %"struct.rubinius::Object"* %literal495, %"struct.rubinius::Object"** %stack_pos496, !dbg !49
  %stack_pos497 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !49
  %string = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, %"struct.rubinius::Object"** %stack_pos497), !dbg !49
  %null_check500 = icmp eq %"struct.rubinius::Object"* %string, null, !dbg !49
  br i1 %null_check500, label %bail_out, label %check_active499, !dbg !49

check_active487:                                  ; preds = %continue479
  br label %continue486, !dbg !49

continue498:                                      ; preds = %check_active499
  %stack_pos501 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !49
  store %"struct.rubinius::Object"* %string, %"struct.rubinius::Object"** %stack_pos501, !dbg !49
  %stack_pos502 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  %stack_load503 = load %"struct.rubinius::Object"** %stack_pos502, !dbg !49
  store %"struct.rubinius::Object"* %stack_load503, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 2, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %stack_pos504 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos504, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !49
  %cache_const505 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474632 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos506 = getelementptr %"struct.rubinius::CallSite"* %cache_const505, i32 0, i32 2, !dbg !49
  %execute507 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos506, !dbg !49
  store i32 158, i32* %ip_pos, !dbg !49
  %call_site_execute508 = call %"struct.rubinius::Object"* %execute507(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const505, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check511 = icmp eq %"struct.rubinius::Object"* %call_site_execute508, null, !dbg !49
  br i1 %null_check511, label %bail_out, label %check_active510, !dbg !49

check_active499:                                  ; preds = %continue486
  br label %continue498, !dbg !49

continue509:                                      ; preds = %check_active510
  %stack_pos512 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute508, %"struct.rubinius::Object"** %stack_pos512, !dbg !49
  br label %ip161, !dbg !49

ip115:                                            ; preds = %continue444, %continue434, %continue407, %continue380
  %65 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !21
  %self513 = load %"struct.rubinius::Object"** %65, !dbg !21
  %stack_pos514 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %self513, %"struct.rubinius::Object"** %stack_pos514, !dbg !21
  %global_serial515 = load i32* inttoptr (i64 22553876 to i32*), !dbg !21
  %constant_cache516 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**), !dbg !21
  %constant_cache_pos517 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i32 0, i32 4, !dbg !21
  %constant_scope518 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos517, !dbg !21
  %scope_pos519 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !21
  %frame_scope520 = load %"struct.rubinius::ConstantScope"** %scope_pos519, !dbg !21
  %same_scope521 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope518, %frame_scope520, !dbg !21
  br i1 %same_scope521, label %check_serial522, label %use_call524, !dbg !21

check_active510:                                  ; preds = %continue498
  br label %continue509, !dbg !49

check_serial522:                                  ; preds = %ip115
  %serial_pos526 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i32 0, i32 7, !dbg !21
  %serial527 = load i32* %serial_pos526, !dbg !21
  %use_cache528 = icmp eq i32 %global_serial515, %serial527, !dbg !21
  br i1 %use_cache528, label %use_cache523, label %use_call524, !dbg !21

use_cache523:                                     ; preds = %check_serial522
  %value_pos529 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i32 0, i32 2, !dbg !21
  %cached_value530 = load %"struct.rubinius::Object"** %value_pos529, !dbg !21
  br label %continue525, !dbg !21

use_call524:                                      ; preds = %check_serial522, %ip115
  store i32 117, i32* %ip_pos, !dbg !21
  %push_const_fast531 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !21
  %null_check534 = icmp eq %"struct.rubinius::Object"* %push_const_fast531, null, !dbg !21
  br i1 %null_check534, label %bail_out, label %check_active533, !dbg !21

continue525:                                      ; preds = %continue532, %use_cache523
  %constant535 = phi %"struct.rubinius::Object"* [ %cached_value530, %use_cache523 ], [ %push_const_fast531, %continue532 ], !dbg !21, !rbx-classid !52
  %stack_pos536 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  store %"struct.rubinius::Object"* %constant535, %"struct.rubinius::Object"** %stack_pos536, !dbg !21
  %code_pos537 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !21
  %code538 = load %"struct.rubinius::CompiledCode"** %code_pos537, !dbg !21
  %literals_pos539 = getelementptr %"struct.rubinius::CompiledCode"* %code538, i32 0, i32 17, !dbg !21
  %literals540 = load %"struct.rubinius::Tuple"** %literals_pos539, !dbg !21
  %literal_pos541 = getelementptr %"struct.rubinius::Tuple"* %literals540, i32 0, i32 2, i32 10, !dbg !21
  %literal542 = load %"struct.rubinius::Object"** %literal_pos541, !dbg !21, !rbx-classid !51
  %stack_pos543 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"* %literal542, %"struct.rubinius::Object"** %stack_pos543, !dbg !21
  %local_pos544 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !21
  %local545 = load %"struct.rubinius::Object"** %local_pos544, !dbg !21, !rbx-classid !32
  %stack_pos546 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !21
  store %"struct.rubinius::Object"* %local545, %"struct.rubinius::Object"** %stack_pos546, !dbg !21
  %stack_pos547 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !21
  %stack_load548 = load %"struct.rubinius::Object"** %stack_pos547, !dbg !21, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load548, %"struct.rubinius::Object"** %out_args_recv, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 14374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !21
  store i32 0, i32* %out_args_total, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !21
  %cache_const549 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474352 to %"struct.rubinius::CallSite"**), !dbg !21
  %execute_pos550 = getelementptr %"struct.rubinius::CallSite"* %cache_const549, i32 0, i32 2, !dbg !21
  %execute551 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos550, !dbg !21
  store i32 123, i32* %ip_pos, !dbg !21
  %call_site_execute552 = call %"struct.rubinius::Object"* %execute551(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const549, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check555 = icmp eq %"struct.rubinius::Object"* %call_site_execute552, null, !dbg !21
  br i1 %null_check555, label %bail_out, label %check_active554, !dbg !21

continue532:                                      ; preds = %check_active533
  br label %continue525, !dbg !21

check_active533:                                  ; preds = %use_call524
  br label %continue532, !dbg !21

continue553:                                      ; preds = %check_active554
  %stack_pos556 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !21
  store %"struct.rubinius::Object"* %call_site_execute552, %"struct.rubinius::Object"** %stack_pos556, !dbg !21
  %stack_pos557 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !21
  %stack_load558 = load %"struct.rubinius::Object"** %stack_pos557, !dbg !21
  %cache_const559 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474384 to %"struct.rubinius::CallSite"**), !dbg !21
  %66 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallSite"* %cache_const559, %"struct.rubinius::Object"* %stack_load558), !dbg !21
  %null_check562 = icmp eq %"struct.rubinius::Object"* %66, null, !dbg !21
  br i1 %null_check562, label %bail_out, label %check_active561, !dbg !21

check_active554:                                  ; preds = %continue525
  br label %continue553, !dbg !21

continue560:                                      ; preds = %check_active561
  %stack_pos563 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !21
  store %"struct.rubinius::Object"* %66, %"struct.rubinius::Object"** %stack_pos563, !dbg !21
  %code_pos564 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !21
  %code565 = load %"struct.rubinius::CompiledCode"** %code_pos564, !dbg !21
  %literals_pos566 = getelementptr %"struct.rubinius::CompiledCode"* %code565, i32 0, i32 17, !dbg !21
  %literals567 = load %"struct.rubinius::Tuple"** %literals_pos566, !dbg !21
  %literal_pos568 = getelementptr %"struct.rubinius::Tuple"* %literals567, i32 0, i32 2, i32 13, !dbg !21
  %literal569 = load %"struct.rubinius::Object"** %literal_pos568, !dbg !21, !rbx-classid !51
  %stack_pos570 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !21
  store %"struct.rubinius::Object"* %literal569, %"struct.rubinius::Object"** %stack_pos570, !dbg !21
  %stack_pos571 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  %string572 = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, %"struct.rubinius::Object"** %stack_pos571), !dbg !21
  %null_check575 = icmp eq %"struct.rubinius::Object"* %string572, null, !dbg !21
  br i1 %null_check575, label %bail_out, label %check_active574, !dbg !21

check_active561:                                  ; preds = %continue553
  br label %continue560, !dbg !21

continue573:                                      ; preds = %check_active574
  %stack_pos576 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !21
  store %"struct.rubinius::Object"* %string572, %"struct.rubinius::Object"** %stack_pos576, !dbg !21
  %stack_pos577 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load578 = load %"struct.rubinius::Object"** %stack_pos577, !dbg !21
  store %"struct.rubinius::Object"* %stack_load578, %"struct.rubinius::Object"** %out_args_recv, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !21
  store i32 2, i32* %out_args_total, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !21
  %stack_pos579 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos579, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !21
  %cache_const580 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474440 to %"struct.rubinius::CallSite"**), !dbg !21
  %execute_pos581 = getelementptr %"struct.rubinius::CallSite"* %cache_const580, i32 0, i32 2, !dbg !21
  %execute582 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos581, !dbg !21
  store i32 134, i32* %ip_pos, !dbg !21
  %call_site_execute583 = call %"struct.rubinius::Object"* %execute582(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const580, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check586 = icmp eq %"struct.rubinius::Object"* %call_site_execute583, null, !dbg !21
  br i1 %null_check586, label %bail_out, label %check_active585, !dbg !21

check_active574:                                  ; preds = %continue560
  br label %continue573, !dbg !21

continue584:                                      ; preds = %check_active585
  %stack_pos587 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %call_site_execute583, %"struct.rubinius::Object"** %stack_pos587, !dbg !21
  br label %ip161, !dbg !21

check_active585:                                  ; preds = %continue573
  br label %continue584, !dbg !21

continue588:                                      ; No predecessors!
  br label %ip139, !dbg !21

return_pad:                                       ; preds = %ip161, %serial_fallback195, %class_fallback194, %continue153, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %22, %class_fallback ], [ %21, %serial_fallback ], [ %stack_load158, %continue153 ], [ %44, %class_fallback194 ], [ %45, %serial_fallback195 ], [ %stack_load274, %ip161 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !21

ret_null589:                                      ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !21

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !21
  %67 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !21
  br i1 %67, label %ret_null589, label %method_body, !dbg !21
}

[[[ LLVM Optimized IR: _X_Rubinius::Type#coerce_to_float@6 ]]]

define %"struct.rubinius::Object"* @"_X_Rubinius::Type#coerce_to_float@6"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !19
  %cfstk590 = alloca [17 x %"struct.rubinius::Object"*], align 8, !dbg !19
  %var_mem591 = alloca [9 x %"struct.rubinius::Object"*], align 8, !dbg !19
  %call_frame = bitcast [17 x %"struct.rubinius::Object"*]* %cfstk590 to %"struct.rubinius::CallFrame"*, !dbg !19
  %stack = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 9, !dbg !19
  %vars = bitcast [9 x %"struct.rubinius::Object"*]* %var_mem591 to %"struct.rubinius::StackVariables"*, !dbg !19
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !19
  %arg.total = load i32* %total_pos, align 4, !dbg !19
  %arg.total.off = add i32 %arg.total, -1, !dbg !19
  %0 = icmp ugt i32 %arg.total.off, 2, !dbg !19
  br i1 %0, label %arg_error, label %import_args, !dbg !19

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 3), !dbg !19
  br label %return_pad, !dbg !19

import_args:                                      ; preds = %entry
  %1 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 3, !dbg !19
  %2 = getelementptr inbounds [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 0, !dbg !19
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %2, align 8, !dbg !19
  %3 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 8, !dbg !19
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %3, align 8, !dbg !19
  %4 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 2, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %4, align 8, !dbg !19
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %1, align 8, !dbg !19
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !19
  %5 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !19
  %6 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 1, !dbg !19
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %5 to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %6, align 8, !dbg !19
  %7 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 4, !dbg !19
  %8 = bitcast %"struct.rubinius::Object"** %7 to i32*, !dbg !19
  store i32 40, i32* %8, align 8, !dbg !19
  %9 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !19
  store i32 0, i32* %9, align 4, !dbg !19
  %10 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 7, !dbg !19
  %vars.c = bitcast [9 x %"struct.rubinius::Object"*]* %var_mem591 to %"struct.rubinius::Object"*, !dbg !19
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %10, align 8, !dbg !19
  %11 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 140495697445360 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %11, align 8, !dbg !19
  br label %stack_nil, !dbg !19

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %12 = sext i32 %counter_alloca.0 to i64, !dbg !19
  %stack.sum = add i64 %12, 9, !dbg !19
  %stack_pos = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 %stack.sum, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !19
  %added = add i32 %counter_alloca.0, 1, !dbg !19
  %loop_check = icmp eq i32 %added, 8, !dbg !19
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !19

bottom:                                           ; preds = %stack_nil
  %13 = getelementptr inbounds [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 0, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %13, align 8, !dbg !19
  %14 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !19
  %args.recv = load %"struct.rubinius::Object"** %14, align 8, !dbg !19, !rbx-classid !20
  %15 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 2, !dbg !19
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %15, align 8, !dbg !19
  %16 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 4, !dbg !19
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %16, align 8, !dbg !19
  %17 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !19
  %args.block = load %"struct.rubinius::Object"** %17, align 8, !dbg !19
  %18 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 3, !dbg !19
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %18, align 8, !dbg !19
  %19 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 1, !dbg !19
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %19, align 8, !dbg !19
  %20 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 5, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !19
  %21 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 6, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !19
  %22 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 7, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !19
  %23 = getelementptr [9 x %"struct.rubinius::Object"*]* %var_mem591, i64 0, i64 8, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !19
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !19
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !19
  br label %arg_loop_top, !dbg !19

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %counter_alloca.1 = phi i32 [ 0, %bottom ], [ %add, %arg_loop_body ]
  %loop_test = icmp slt i32 %counter_alloca.1, %arg.total, !dbg !19
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !19

arg_loop_body:                                    ; preds = %arg_loop_top
  %24 = sext i32 %counter_alloca.1 to i64, !dbg !19
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %24, !dbg !19
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, align 8, !dbg !19
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %24, !dbg !19
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, align 8, !dbg !19
  %add = add i32 %counter_alloca.1, 1, !dbg !19
  br label %arg_loop_top, !dbg !19

arg_loop_cont:                                    ; preds = %arg_loop_top
  %25 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !21
  %vm_jit = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !21
  %26 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !21
  %stack_limit = load i64* %26, align 8, !dbg !21
  %stack_end = ptrtoint [17 x %"struct.rubinius::Object"*]* %cfstk590 to i64, !dbg !21
  %27 = icmp ult i64 %stack_end, %stack_limit, !dbg !21
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !21
  %check_interrupts = load i8* %28, align 1, !dbg !21
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !21
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !21
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !21
  %needs_check = or i1 %needs_interrupts, %27, !dbg !21
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !21

bail_out:                                         ; preds = %check_active574, %check_active561, %check_active554, %continue525, %use_call524, %check_active499, %check_active487, %check_active480, %continue457, %use_call456, %ip105, %ip97, %ip89, %continue338, %use_call337, %continue288, %use_call287, %use_call175
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !19

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !19
  br label %return_pad, !dbg !19

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !19
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !19
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !19
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !19
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !19
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !19
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !19
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  %as_int = ptrtoint %"struct.rubinius::Object"* %pa to i64, !dbg !19
  %and = and i64 %as_int, 15, !dbg !19
  %is_true = icmp eq i64 %and, 10, !dbg !19
  br i1 %is_true, label %ip4, label %ip8, !dbg !19

ip4:                                              ; preds = %method_body
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !19
  br label %ip8, !dbg !19

ip8:                                              ; preds = %method_body, %ip4
  %pa10 = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !19
  store %"struct.rubinius::Object"* %pa10, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  %as_int14 = ptrtoint %"struct.rubinius::Object"* %pa10 to i64, !dbg !19
  %and15 = and i64 %as_int14, 15, !dbg !19
  %is_true16 = icmp eq i64 %and15, 10, !dbg !19
  br i1 %is_true16, label %ip12, label %ip8.ip16_crit_edge, !dbg !19

ip8.ip16_crit_edge:                               ; preds = %ip8
  %local.pre = load %"struct.rubinius::Object"** %23, align 8, !dbg !22
  br label %ip16, !dbg !19

ip12:                                             ; preds = %ip8
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !19
  br label %ip16, !dbg !19

ip16:                                             ; preds = %ip8.ip16_crit_edge, %ip12
  %local = phi %"struct.rubinius::Object"* [ %local.pre, %ip8.ip16_crit_edge ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %ip12 ]
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %is_immediate = icmp eq %"struct.rubinius::Object"* %local, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !22
  br i1 %is_immediate, label %check_active, label %class_fallback, !dbg !22

class_fallback:                                   ; preds = %ip16
  store i32 18, i32* %9, align 4, !dbg !22
  %29 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 18, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !22
  br label %return_pad, !dbg !22

check_active:                                     ; preds = %ip16
  %stack_pos106 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 10, !dbg !22
  %local161 = load %"struct.rubinius::Object"** %21, align 8, !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !25
  %constant_cache167 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !25
  %constant_cache_pos168 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i64 0, i32 4, !dbg !25
  %constant_scope169 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos168, align 8, !dbg !25
  %30 = load %"struct.rubinius::Object"** %6, align 8, !dbg !25
  %frame_scope171 = bitcast %"struct.rubinius::Object"* %30 to %"struct.rubinius::ConstantScope"*, !dbg !25
  %same_scope172 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope169, %frame_scope171, !dbg !25
  br i1 %same_scope172, label %check_serial173, label %use_call175, !dbg !25

check_serial173:                                  ; preds = %check_active
  %global_serial166 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !25
  %serial_pos177 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i64 0, i32 7, !dbg !25
  %serial178 = load i32* %serial_pos177, align 4, !dbg !25
  %use_cache179 = icmp eq i32 %global_serial166, %serial178, !dbg !25
  br i1 %use_cache179, label %use_cache174, label %use_call175, !dbg !25

use_cache174:                                     ; preds = %check_serial173
  %value_pos180 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache167, i64 0, i32 2, !dbg !25
  %cached_value181 = load %"struct.rubinius::Object"** %value_pos180, align 8, !dbg !25
  br label %continue176, !dbg !25

use_call175:                                      ; preds = %check_serial173, %check_active
  store i32 53, i32* %9, align 4, !dbg !25
  %push_const_fast182 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473792 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !25
  %null_check185 = icmp eq %"struct.rubinius::Object"* %push_const_fast182, null, !dbg !25
  br i1 %null_check185, label %bail_out, label %continue176, !dbg !25

continue176:                                      ; preds = %use_call175, %use_cache174
  %constant186 = phi %"struct.rubinius::Object"* [ %cached_value181, %use_cache174 ], [ %push_const_fast182, %use_call175 ], !dbg !25, !rbx-classid !26
  %stack_pos187 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 11, !dbg !25
  store %"struct.rubinius::Object"* %constant186, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !25
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !25
  %cast = ptrtoint %"struct.rubinius::Object"* %constant186 to i64, !dbg !25
  %masked = and i64 %cast, 3, !dbg !25
  %is_reference = icmp eq i64 %masked, 0, !dbg !25
  br i1 %is_reference, label %check_class_id, label %class_fallback194, !dbg !25

check_class_id:                                   ; preds = %continue176
  %class_pos = getelementptr %"struct.rubinius::Object"* %constant186, i64 0, i32 0, i32 1, !dbg !25
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !25
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !25
  %class_id = load i32* %class_id_pos, align 4, !dbg !25
  %check_class_id199 = icmp eq i32 %class_id, 78, !dbg !25
  br i1 %check_class_id199, label %correct_class, label %class_fallback194, !dbg !25

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !25
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !25
  %check_serial_id = icmp eq i32 %serial_id, 267, !dbg !25
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback195, !dbg !25

class_fallback194:                                ; preds = %check_class_id, %continue176
  store i32 56, i32* %9, align 4, !dbg !25
  %31 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 0), !dbg !25
  br label %return_pad, !dbg !25

correct_serial:                                   ; preds = %correct_class
  %cast252 = ptrtoint %"struct.rubinius::Object"* %local161 to i64, !dbg !27
  %masked253 = and i64 %cast252, 3, !dbg !27
  %is_reference254 = icmp eq i64 %masked253, 0, !dbg !27
  br i1 %is_reference254, label %use_cache251, label %negative, !dbg !27

serial_fallback195:                               ; preds = %correct_class
  store i32 56, i32* %9, align 4, !dbg !25
  %32 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 56, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495697445360 to i8*), i32 0, i8 1), !dbg !25
  br label %return_pad, !dbg !25

negative:                                         ; preds = %use_cache251, %correct_serial
  br label %check_active260, !dbg !27

use_cache251:                                     ; preds = %correct_serial
  %word_pos = getelementptr %"struct.rubinius::Object"* %local161, i64 0, i32 0, i32 0, i32 0, !dbg !27
  %flags = load i64* %word_pos, align 8, !dbg !27
  %mask = and i64 %flags, 255, !dbg !27
  %is_type = icmp eq i64 %mask, 35, !dbg !27
  br i1 %is_type, label %check_active260, label %negative, !dbg !27

check_active260:                                  ; preds = %negative, %use_cache251
  %constant255 = phi %"struct.rubinius::Object"* [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %use_cache251 ], !dbg !27
  store %"struct.rubinius::Object"* %constant255, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !25
  %as_int265 = ptrtoint %"struct.rubinius::Object"* %constant255 to i64, !dbg !25
  %and266 = and i64 %as_int265, 10, !dbg !25
  %is_true267 = icmp eq i64 %and266, 10, !dbg !25
  br i1 %is_true267, label %ip66, label %ip61, !dbg !25

ip61:                                             ; preds = %check_active260
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  br label %return_pad, !dbg !28

ip66:                                             ; preds = %check_active260
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !29
  %constant_cache279 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !29
  %constant_cache_pos280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i64 0, i32 4, !dbg !29
  %constant_scope281 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos280, align 8, !dbg !29
  %same_scope284 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope281, %frame_scope171, !dbg !29
  br i1 %same_scope284, label %check_serial285, label %use_call287, !dbg !29

check_serial285:                                  ; preds = %ip66
  %global_serial278 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !29
  %serial_pos289 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i64 0, i32 7, !dbg !29
  %serial290 = load i32* %serial_pos289, align 4, !dbg !29
  %use_cache291 = icmp eq i32 %global_serial278, %serial290, !dbg !29
  br i1 %use_cache291, label %use_cache286, label %use_call287, !dbg !29

use_cache286:                                     ; preds = %check_serial285
  %value_pos292 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache279, i64 0, i32 2, !dbg !29
  %cached_value293 = load %"struct.rubinius::Object"** %value_pos292, align 8, !dbg !29
  br label %continue288, !dbg !29

use_call287:                                      ; preds = %check_serial285, %ip66
  store i32 67, i32* %9, align 4, !dbg !29
  %push_const_fast294 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26473904 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !29
  %null_check297 = icmp eq %"struct.rubinius::Object"* %push_const_fast294, null, !dbg !29
  br i1 %null_check297, label %bail_out, label %continue288, !dbg !29

continue288:                                      ; preds = %use_call287, %use_cache286
  %constant298 = phi %"struct.rubinius::Object"* [ %cached_value293, %use_cache286 ], [ %push_const_fast294, %use_call287 ], !dbg !29, !rbx-classid !30
  store %"struct.rubinius::Object"* %constant298, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !29
  store %"struct.rubinius::Object"* %local161, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !29
  store %"struct.rubinius::Object"* %constant298, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !29
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !29
  store i32 1, i32* %out_args_total, align 8, !dbg !29
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !29
  store %"struct.rubinius::Object"** %stack_pos187, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !29
  %cache_const309 = load %"struct.rubinius::CallSite"** inttoptr (i64 26473928 to %"struct.rubinius::CallSite"**), align 8, !dbg !29
  %execute_pos310 = getelementptr %"struct.rubinius::CallSite"* %cache_const309, i64 0, i32 2, !dbg !29
  %execute311 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos310, align 8, !dbg !29
  store i32 70, i32* %9, align 4, !dbg !29
  %call_site_execute312 = call %"struct.rubinius::Object"* %execute311(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const309, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !29
  %null_check315 = icmp eq %"struct.rubinius::Object"* %call_site_execute312, null, !dbg !29
  br i1 %null_check315, label %bail_out, label %check_active314, !dbg !29

check_active314:                                  ; preds = %continue288
  store %"struct.rubinius::Object"* %call_site_execute312, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !29
  %as_int319 = ptrtoint %"struct.rubinius::Object"* %call_site_execute312 to i64, !dbg !29
  %and320 = and i64 %as_int319, 15, !dbg !29
  %is_true321 = icmp eq i64 %and320, 10, !dbg !29
  br i1 %is_true321, label %ip89, label %ip75, !dbg !29

ip75:                                             ; preds = %check_active314
  %self323 = load %"struct.rubinius::Object"** %15, align 8, !dbg !31
  store %"struct.rubinius::Object"* %self323, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %local326 = load %"struct.rubinius::Object"** %21, align 8, !dbg !31, !rbx-classid !24
  store %"struct.rubinius::Object"* %local326, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !31
  %constant_cache329 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !31
  %constant_cache_pos330 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i64 0, i32 4, !dbg !31
  %constant_scope331 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos330, align 8, !dbg !31
  %33 = load %"struct.rubinius::Object"** %6, align 8, !dbg !31
  %frame_scope333 = bitcast %"struct.rubinius::Object"* %33 to %"struct.rubinius::ConstantScope"*, !dbg !31
  %same_scope334 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope331, %frame_scope333, !dbg !31
  br i1 %same_scope334, label %check_serial335, label %use_call337, !dbg !31

check_serial335:                                  ; preds = %ip75
  %global_serial328 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !31
  %serial_pos339 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i64 0, i32 7, !dbg !31
  %serial340 = load i32* %serial_pos339, align 4, !dbg !31
  %use_cache341 = icmp eq i32 %global_serial328, %serial340, !dbg !31
  br i1 %use_cache341, label %use_cache336, label %use_call337, !dbg !31

use_cache336:                                     ; preds = %check_serial335
  %value_pos342 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache329, i64 0, i32 2, !dbg !31
  %cached_value343 = load %"struct.rubinius::Object"** %value_pos342, align 8, !dbg !31
  br label %continue338, !dbg !31

use_call337:                                      ; preds = %check_serial335, %ip75
  store i32 79, i32* %9, align 4, !dbg !31
  %push_const_fast344 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474000 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !31
  %null_check347 = icmp eq %"struct.rubinius::Object"* %push_const_fast344, null, !dbg !31
  br i1 %null_check347, label %bail_out, label %continue338, !dbg !31

continue338:                                      ; preds = %use_call337, %use_cache336
  %constant348 = phi %"struct.rubinius::Object"* [ %cached_value343, %use_cache336 ], [ %push_const_fast344, %use_call337 ], !dbg !31, !rbx-classid !32
  store %"struct.rubinius::Object"* %constant348, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !31
  %stack_pos350 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 12, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 15694 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos350, align 8, !dbg !31
  store %"struct.rubinius::Object"* %self323, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 3, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos106, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const354 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474040 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos355 = getelementptr %"struct.rubinius::CallSite"* %cache_const354, i64 0, i32 2, !dbg !31
  %execute356 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos355, align 8, !dbg !31
  store i32 84, i32* %9, align 4, !dbg !31
  %call_site_execute357 = call %"struct.rubinius::Object"* %execute356(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const354, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check360 = icmp eq %"struct.rubinius::Object"* %call_site_execute357, null, !dbg !31
  br i1 %null_check360, label %bail_out, label %check_active359, !dbg !31

check_active359:                                  ; preds = %continue338
  store %"struct.rubinius::Object"* %call_site_execute357, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  br label %return_pad, !dbg !31

ip89:                                             ; preds = %check_active314
  %stack_load364 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  store %"struct.rubinius::Object"* %stack_load364, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos187, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const376 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474104 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos377 = getelementptr %"struct.rubinius::CallSite"* %cache_const376, i64 0, i32 2, !dbg !33
  %execute378 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos377, align 8, !dbg !33
  store i32 92, i32* %9, align 4, !dbg !33
  %call_site_execute379 = call %"struct.rubinius::Object"* %execute378(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const376, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check382 = icmp eq %"struct.rubinius::Object"* %call_site_execute379, null, !dbg !33
  br i1 %null_check382, label %bail_out, label %check_active381, !dbg !33

check_active381:                                  ; preds = %ip89
  store %"struct.rubinius::Object"* %call_site_execute379, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  %as_int386 = ptrtoint %"struct.rubinius::Object"* %call_site_execute379 to i64, !dbg !33
  %and387 = and i64 %as_int386, 15, !dbg !33
  %is_true388 = icmp eq i64 %and387, 10, !dbg !33
  br i1 %is_true388, label %ip97, label %ip115, !dbg !33

ip97:                                             ; preds = %check_active381
  %stack_load391 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  store %"struct.rubinius::Object"* %stack_load391, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos187, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const403 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474168 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos404 = getelementptr %"struct.rubinius::CallSite"* %cache_const403, i64 0, i32 2, !dbg !33
  %execute405 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos404, align 8, !dbg !33
  store i32 100, i32* %9, align 4, !dbg !33
  %call_site_execute406 = call %"struct.rubinius::Object"* %execute405(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const403, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check409 = icmp eq %"struct.rubinius::Object"* %call_site_execute406, null, !dbg !33
  br i1 %null_check409, label %bail_out, label %check_active408, !dbg !33

check_active408:                                  ; preds = %ip97
  store %"struct.rubinius::Object"* %call_site_execute406, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  %as_int413 = ptrtoint %"struct.rubinius::Object"* %call_site_execute406 to i64, !dbg !33
  %and414 = and i64 %as_int413, 15, !dbg !33
  %is_true415 = icmp eq i64 %and414, 10, !dbg !33
  br i1 %is_true415, label %ip105, label %ip115, !dbg !33

ip105:                                            ; preds = %check_active408
  %stack_load418 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  store %"struct.rubinius::Object"* %stack_load418, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos187, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const430 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474232 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos431 = getelementptr %"struct.rubinius::CallSite"* %cache_const430, i64 0, i32 2, !dbg !33
  %execute432 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos431, align 8, !dbg !33
  store i32 108, i32* %9, align 4, !dbg !33
  %call_site_execute433 = call %"struct.rubinius::Object"* %execute432(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const430, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check436 = icmp eq %"struct.rubinius::Object"* %call_site_execute433, null, !dbg !33
  br i1 %null_check436, label %bail_out, label %check_active435, !dbg !33

check_active435:                                  ; preds = %ip105
  store %"struct.rubinius::Object"* %call_site_execute433, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !33
  %as_int440 = ptrtoint %"struct.rubinius::Object"* %call_site_execute433 to i64, !dbg !33
  %and441 = and i64 %as_int440, 15, !dbg !33
  %is_true442 = icmp eq i64 %and441, 10, !dbg !33
  br i1 %is_true442, label %ip139, label %ip115, !dbg !33

ip139:                                            ; preds = %check_active435
  %self445 = load %"struct.rubinius::Object"** %15, align 8, !dbg !34
  store %"struct.rubinius::Object"* %self445, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  %constant_cache448 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**), align 2048, !dbg !34
  %constant_cache_pos449 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i64 0, i32 4, !dbg !34
  %constant_scope450 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos449, align 8, !dbg !34
  %34 = load %"struct.rubinius::Object"** %6, align 8, !dbg !34
  %frame_scope452 = bitcast %"struct.rubinius::Object"* %34 to %"struct.rubinius::ConstantScope"*, !dbg !34
  %same_scope453 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope450, %frame_scope452, !dbg !34
  br i1 %same_scope453, label %check_serial454, label %use_call456, !dbg !34

check_serial454:                                  ; preds = %ip139
  %global_serial447 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !34
  %serial_pos458 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i64 0, i32 7, !dbg !34
  %serial459 = load i32* %serial_pos458, align 4, !dbg !34
  %use_cache460 = icmp eq i32 %global_serial447, %serial459, !dbg !34
  br i1 %use_cache460, label %use_cache455, label %use_call456, !dbg !34

use_cache455:                                     ; preds = %check_serial454
  %value_pos461 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache448, i64 0, i32 2, !dbg !34
  %cached_value462 = load %"struct.rubinius::Object"** %value_pos461, align 8, !dbg !34
  br label %continue457, !dbg !34

use_call456:                                      ; preds = %check_serial454, %ip139
  store i32 141, i32* %9, align 4, !dbg !34
  %push_const_fast463 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474496 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !34
  %null_check466 = icmp eq %"struct.rubinius::Object"* %push_const_fast463, null, !dbg !34
  br i1 %null_check466, label %bail_out, label %continue457, !dbg !34

continue457:                                      ; preds = %use_call456, %use_cache455
  %constant467 = phi %"struct.rubinius::Object"* [ %cached_value462, %use_cache455 ], [ %push_const_fast463, %use_call456 ], !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %constant467, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !34
  %35 = load %"struct.rubinius::Object"** %1, align 8, !dbg !34
  %literals_pos = getelementptr %"struct.rubinius::Object"* %35, i64 8, !dbg !34
  %36 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !34
  %literals = load %"struct.rubinius::Tuple"** %36, align 8, !dbg !34
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 10, !dbg !34
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !34, !rbx-classid !36
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !34
  %local471 = load %"struct.rubinius::Object"** %21, align 8, !dbg !34, !rbx-classid !24
  %stack_pos472 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 12, !dbg !34
  store %"struct.rubinius::Object"* %local471, %"struct.rubinius::Object"** %stack_pos472, align 8, !dbg !34
  store %"struct.rubinius::Object"* %local471, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 14438 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !34
  store i32 0, i32* %out_args_total, align 8, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !34
  %cache_const475 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474544 to %"struct.rubinius::CallSite"**), align 16, !dbg !34
  %execute_pos476 = getelementptr %"struct.rubinius::CallSite"* %cache_const475, i64 0, i32 2, !dbg !34
  %execute477 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos476, align 8, !dbg !34
  store i32 147, i32* %9, align 4, !dbg !34
  %call_site_execute478 = call %"struct.rubinius::Object"* %execute477(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const475, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check481 = icmp eq %"struct.rubinius::Object"* %call_site_execute478, null, !dbg !34
  br i1 %null_check481, label %bail_out, label %check_active480, !dbg !34

check_active480:                                  ; preds = %continue457
  store %"struct.rubinius::Object"* %call_site_execute478, %"struct.rubinius::Object"** %stack_pos472, align 8, !dbg !34
  %cache_const485 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474576 to %"struct.rubinius::CallSite"**), align 16, !dbg !34
  %37 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallSite"* %cache_const485, %"struct.rubinius::Object"* %call_site_execute478), !dbg !34
  %null_check488 = icmp eq %"struct.rubinius::Object"* %37, null, !dbg !34
  br i1 %null_check488, label %bail_out, label %check_active487, !dbg !34

check_active487:                                  ; preds = %check_active480
  store %"struct.rubinius::Object"* %37, %"struct.rubinius::Object"** %stack_pos472, align 8, !dbg !34
  %38 = load %"struct.rubinius::Object"** %1, align 8, !dbg !34
  %literals_pos492 = getelementptr %"struct.rubinius::Object"* %38, i64 8, !dbg !34
  %39 = bitcast %"struct.rubinius::Object"* %literals_pos492 to %"struct.rubinius::Tuple"**, !dbg !34
  %literals493 = load %"struct.rubinius::Tuple"** %39, align 8, !dbg !34
  %literal_pos494 = getelementptr %"struct.rubinius::Tuple"* %literals493, i64 0, i32 2, i64 13, !dbg !34
  %literal495 = load %"struct.rubinius::Object"** %literal_pos494, align 8, !dbg !34, !rbx-classid !36
  %stack_pos496 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 13, !dbg !34
  store %"struct.rubinius::Object"* %literal495, %"struct.rubinius::Object"** %stack_pos496, align 8, !dbg !34
  %string = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, %"struct.rubinius::Object"** %stack_pos187), !dbg !34
  %null_check500 = icmp eq %"struct.rubinius::Object"* %string, null, !dbg !34
  br i1 %null_check500, label %bail_out, label %check_active499, !dbg !34

check_active499:                                  ; preds = %check_active487
  store %"struct.rubinius::Object"* %string, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !34
  %stack_load503 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  store %"struct.rubinius::Object"* %stack_load503, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !34
  store i32 2, i32* %out_args_total, align 8, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos106, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !34
  %cache_const505 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474632 to %"struct.rubinius::CallSite"**), align 8, !dbg !34
  %execute_pos506 = getelementptr %"struct.rubinius::CallSite"* %cache_const505, i64 0, i32 2, !dbg !34
  %execute507 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos506, align 8, !dbg !34
  store i32 158, i32* %9, align 4, !dbg !34
  %call_site_execute508 = call %"struct.rubinius::Object"* %execute507(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const505, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check511 = icmp eq %"struct.rubinius::Object"* %call_site_execute508, null, !dbg !34
  br i1 %null_check511, label %bail_out, label %check_active510, !dbg !34

ip115:                                            ; preds = %check_active435, %check_active408, %check_active381
  %self513 = load %"struct.rubinius::Object"** %15, align 8, !dbg !21
  store %"struct.rubinius::Object"* %self513, %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  %constant_cache516 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !21
  %constant_cache_pos517 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i64 0, i32 4, !dbg !21
  %constant_scope518 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos517, align 8, !dbg !21
  %40 = load %"struct.rubinius::Object"** %6, align 8, !dbg !21
  %frame_scope520 = bitcast %"struct.rubinius::Object"* %40 to %"struct.rubinius::ConstantScope"*, !dbg !21
  %same_scope521 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope518, %frame_scope520, !dbg !21
  br i1 %same_scope521, label %check_serial522, label %use_call524, !dbg !21

check_active510:                                  ; preds = %check_active499
  store %"struct.rubinius::Object"* %call_site_execute508, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  br label %return_pad, !dbg !34

check_serial522:                                  ; preds = %ip115
  %global_serial515 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !21
  %serial_pos526 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i64 0, i32 7, !dbg !21
  %serial527 = load i32* %serial_pos526, align 4, !dbg !21
  %use_cache528 = icmp eq i32 %global_serial515, %serial527, !dbg !21
  br i1 %use_cache528, label %use_cache523, label %use_call524, !dbg !21

use_cache523:                                     ; preds = %check_serial522
  %value_pos529 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache516, i64 0, i32 2, !dbg !21
  %cached_value530 = load %"struct.rubinius::Object"** %value_pos529, align 8, !dbg !21
  br label %continue525, !dbg !21

use_call524:                                      ; preds = %check_serial522, %ip115
  store i32 117, i32* %9, align 4, !dbg !21
  %push_const_fast531 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 26474304 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !21
  %null_check534 = icmp eq %"struct.rubinius::Object"* %push_const_fast531, null, !dbg !21
  br i1 %null_check534, label %bail_out, label %continue525, !dbg !21

continue525:                                      ; preds = %use_call524, %use_cache523
  %constant535 = phi %"struct.rubinius::Object"* [ %cached_value530, %use_cache523 ], [ %push_const_fast531, %use_call524 ], !dbg !21, !rbx-classid !37
  store %"struct.rubinius::Object"* %constant535, %"struct.rubinius::Object"** %stack_pos106, align 8, !dbg !21
  %41 = load %"struct.rubinius::Object"** %1, align 8, !dbg !21
  %literals_pos539 = getelementptr %"struct.rubinius::Object"* %41, i64 8, !dbg !21
  %42 = bitcast %"struct.rubinius::Object"* %literals_pos539 to %"struct.rubinius::Tuple"**, !dbg !21
  %literals540 = load %"struct.rubinius::Tuple"** %42, align 8, !dbg !21
  %literal_pos541 = getelementptr %"struct.rubinius::Tuple"* %literals540, i64 0, i32 2, i64 10, !dbg !21
  %literal542 = load %"struct.rubinius::Object"** %literal_pos541, align 8, !dbg !21, !rbx-classid !36
  store %"struct.rubinius::Object"* %literal542, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !21
  %local545 = load %"struct.rubinius::Object"** %21, align 8, !dbg !21, !rbx-classid !24
  %stack_pos546 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 12, !dbg !21
  store %"struct.rubinius::Object"* %local545, %"struct.rubinius::Object"** %stack_pos546, align 8, !dbg !21
  store %"struct.rubinius::Object"* %local545, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 14374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !21
  store i32 0, i32* %out_args_total, align 8, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !21
  %cache_const549 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474352 to %"struct.rubinius::CallSite"**), align 16, !dbg !21
  %execute_pos550 = getelementptr %"struct.rubinius::CallSite"* %cache_const549, i64 0, i32 2, !dbg !21
  %execute551 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos550, align 8, !dbg !21
  store i32 123, i32* %9, align 4, !dbg !21
  %call_site_execute552 = call %"struct.rubinius::Object"* %execute551(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const549, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check555 = icmp eq %"struct.rubinius::Object"* %call_site_execute552, null, !dbg !21
  br i1 %null_check555, label %bail_out, label %check_active554, !dbg !21

check_active554:                                  ; preds = %continue525
  store %"struct.rubinius::Object"* %call_site_execute552, %"struct.rubinius::Object"** %stack_pos546, align 8, !dbg !21
  %cache_const559 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474384 to %"struct.rubinius::CallSite"**), align 16, !dbg !21
  %43 = call %"struct.rubinius::Object"* @rbx_meta_to_s(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallSite"* %cache_const559, %"struct.rubinius::Object"* %call_site_execute552), !dbg !21
  %null_check562 = icmp eq %"struct.rubinius::Object"* %43, null, !dbg !21
  br i1 %null_check562, label %bail_out, label %check_active561, !dbg !21

check_active561:                                  ; preds = %check_active554
  store %"struct.rubinius::Object"* %43, %"struct.rubinius::Object"** %stack_pos546, align 8, !dbg !21
  %44 = load %"struct.rubinius::Object"** %1, align 8, !dbg !21
  %literals_pos566 = getelementptr %"struct.rubinius::Object"* %44, i64 8, !dbg !21
  %45 = bitcast %"struct.rubinius::Object"* %literals_pos566 to %"struct.rubinius::Tuple"**, !dbg !21
  %literals567 = load %"struct.rubinius::Tuple"** %45, align 8, !dbg !21
  %literal_pos568 = getelementptr %"struct.rubinius::Tuple"* %literals567, i64 0, i32 2, i64 13, !dbg !21
  %literal569 = load %"struct.rubinius::Object"** %literal_pos568, align 8, !dbg !21, !rbx-classid !36
  %stack_pos570 = getelementptr [17 x %"struct.rubinius::Object"*]* %cfstk590, i64 0, i64 13, !dbg !21
  store %"struct.rubinius::Object"* %literal569, %"struct.rubinius::Object"** %stack_pos570, align 8, !dbg !21
  %string572 = call %"struct.rubinius::Object"* @rbx_string_build(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 3, %"struct.rubinius::Object"** %stack_pos187), !dbg !21
  %null_check575 = icmp eq %"struct.rubinius::Object"* %string572, null, !dbg !21
  br i1 %null_check575, label %bail_out, label %check_active574, !dbg !21

check_active574:                                  ; preds = %check_active561
  store %"struct.rubinius::Object"* %string572, %"struct.rubinius::Object"** %stack_pos187, align 8, !dbg !21
  %stack_load578 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  store %"struct.rubinius::Object"* %stack_load578, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !21
  store i32 2, i32* %out_args_total, align 8, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos106, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !21
  %cache_const580 = load %"struct.rubinius::CallSite"** inttoptr (i64 26474440 to %"struct.rubinius::CallSite"**), align 8, !dbg !21
  %execute_pos581 = getelementptr %"struct.rubinius::CallSite"* %cache_const580, i64 0, i32 2, !dbg !21
  %execute582 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos581, align 8, !dbg !21
  store i32 134, i32* %9, align 4, !dbg !21
  %call_site_execute583 = call %"struct.rubinius::Object"* %execute582(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const580, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check586 = icmp eq %"struct.rubinius::Object"* %call_site_execute583, null, !dbg !21
  br i1 %null_check586, label %bail_out, label %check_active585, !dbg !21

check_active585:                                  ; preds = %check_active574
  store %"struct.rubinius::Object"* %call_site_execute583, %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  br label %return_pad, !dbg !21

return_pad:                                       ; preds = %ip61, %check_active359, %check_active510, %check_active585, %prologue_check, %bail_out, %serial_fallback195, %class_fallback194, %class_fallback, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %29, %class_fallback ], [ %31, %class_fallback194 ], [ %32, %serial_fallback195 ], [ null, %bail_out ], [ null, %prologue_check ], [ %call_site_execute583, %check_active585 ], [ %call_site_execute508, %check_active510 ], [ %call_site_execute357, %check_active359 ], [ %local161, %ip61 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !21

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !21
  %46 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !21
  br i1 %46, label %return_pad, label %method_body, !dbg !21
}

[[[ JIT Machine Code: _X_Rubinius::Type#coerce_to_float@6 ]]]
0x7fc7cfab4050  push %rbp               
0x7fc7cfab4051  mov %rsp, %rbp          
0x7fc7cfab4054  push %r15               
0x7fc7cfab4056  push %r14               
0x7fc7cfab4058  push %r13               
0x7fc7cfab405a  push %r12               
0x7fc7cfab405c  push %rbx               
0x7fc7cfab405d  subq $0x118, %rsp       
0x7fc7cfab4064  mov %r8, %r12           
0x7fc7cfab4067  mov %rdi, %r14          
0x7fc7cfab406a  mov 0x18(%r12), %eax    
0x7fc7cfab406f  lea -0x1(%rax), %edi    
0x7fc7cfab4072  cmp $0x3, %edi          
0x7fc7cfab4075  jb 0x4a                  ; 0x7fc7cfab409a
0x7fc7cfab407b  mov $0x760d50, %rax      ; rbx_arg_error
0x7fc7cfab4085  mov $0x3, %ecx          
0x7fc7cfab408a  mov %r14, %rdi          
0x7fc7cfab408d  mov %r12, %rdx          
0x7fc7cfab4090  callq *%rax             
0x7fc7cfab4092  mov %rax, %r15          
0x7fc7cfab4095  jmp 0x3f4                ; 0x7fc7cfab4444
0x7fc7cfab409a  mov %rsi, -0xe0(%rbp)   
0x7fc7cfab40a1  mov %r12, -0xa0(%rbp)   
0x7fc7cfab40a8  movq $0x0, -0xd0(%rbp)  
0x7fc7cfab40b3  mov %rdx, -0xc8(%rbp)   
0x7fc7cfab40ba  mov 0xa0(%rdx), %rdx    
0x7fc7cfab40c1  mov %rdx, -0xd8(%rbp)   
0x7fc7cfab40c8  mov $0x28, -0xc0(%rbp)  
0x7fc7cfab40d2  mov $0x0, -0xbc(%rbp)   
0x7fc7cfab40dc  lea -0x128(%rbp), %rdx  
0x7fc7cfab40e3  mov %rdx, -0xa8(%rbp)   
0x7fc7cfab40ea  mov $0x7fc7b42381f0, %rdx
0x7fc7cfab40f4  mov %rdx, -0xb8(%rbp)   
0x7fc7cfab40fb  movq $0xffffffb8, %rsi  
0x7fc7cfab4102  mov $0x8, %edi          
0x7fc7cfab4107  lea -0xe0(%rbp), %rbx   
0x7fc7cfab410e  mov %rbx, %rdx          
0x7fc7cfab4111  sub %rsi, %rdx          
0x7fc7cfab4114  movq $0x1a, (%rdx)      
0x7fc7cfab411b  addq $0xf8, %rsi        
0x7fc7cfab411f  dec %edi                
0x7fc7cfab4121  jnz 0xbe                 ; 0x7fc7cfab410e
0x7fc7cfab4127  movq $0x0, -0x128(%rbp) 
0x7fc7cfab4132  mov 0x8(%r12), %rdx     
0x7fc7cfab4137  mov %rdx, -0x118(%rbp)  
0x7fc7cfab413e  mov %rcx, -0x108(%rbp)  
0x7fc7cfab4145  mov 0x10(%r12), %rcx    
0x7fc7cfab414a  mov %rcx, -0x110(%rbp)  
0x7fc7cfab4151  movq $0x0, -0x120(%rbp) 
0x7fc7cfab415c  movq $0x1a, -0x100(%rbp)
0x7fc7cfab4167  lea -0xf8(%rbp), %rcx   
0x7fc7cfab416e  movq $0x1a, -0xf8(%rbp) 
0x7fc7cfab4179  movq $0x1a, -0xf0(%rbp) 
0x7fc7cfab4184  movq $0x1a, -0xe8(%rbp) 
0x7fc7cfab418f  mov 0x20(%r12), %rsi    
0x7fc7cfab4194  xor %edi, %edi          
0x7fc7cfab4196  jmp 0x15b                ; 0x7fc7cfab41ab
0x7fc7cfab419b  mov (%rsi), %rdx        
0x7fc7cfab419e  mov %rdx, (%rcx)        
0x7fc7cfab41a1  inc %edi                
0x7fc7cfab41a3  addq $0x8, %rcx         
0x7fc7cfab41a7  addq $0x8, %rsi         
0x7fc7cfab41ab  cmp %eax, %edi          
0x7fc7cfab41ad  jl 0x14b                 ; 0x7fc7cfab419b
0x7fc7cfab41b3  mov 0x8(%r14), %rax     
0x7fc7cfab41b7  mov 0x158251e, %cl      
0x7fc7cfab41be  or 0x16(%rax), %cl      
0x7fc7cfab41c1  jnz 0x181                ; 0x7fc7cfab41d1
0x7fc7cfab41c7  cmp 0x8(%rax), %rbx     
0x7fc7cfab41cb  jae 0x1a3                ; 0x7fc7cfab41f3
0x7fc7cfab41d1  mov $0x762f80, %rax      ; rbx_prologue_check
0x7fc7cfab41db  lea -0xe0(%rbp), %rsi   
0x7fc7cfab41e2  mov %r14, %rdi          
0x7fc7cfab41e5  callq *%rax             
0x7fc7cfab41e7  xor %r15d, %r15d        
0x7fc7cfab41ea  test %rax, %rax         
0x7fc7cfab41ed  jz 0x3f4                 ; 0x7fc7cfab4444
0x7fc7cfab41f3  mov $0x762b40, %r15      ; rbx_passed_arg
0x7fc7cfab41fd  mov $0x1, %edx          
0x7fc7cfab4202  mov %r14, %rdi          
0x7fc7cfab4205  mov %r12, %rsi          
0x7fc7cfab4208  callq *%r15             
0x7fc7cfab420b  mov %rax, -0x98(%rbp)   
0x7fc7cfab4212  andq $0xf, %rax         
0x7fc7cfab4216  cmpq $0xa, %rax         
0x7fc7cfab421a  jnz 0x1e6                ; 0x7fc7cfab4236
0x7fc7cfab4220  movq $0x12, -0x98(%rbp) 
0x7fc7cfab422b  movq $0x12, -0xf0(%rbp) 
0x7fc7cfab4236  mov $0x2, %edx          
0x7fc7cfab423b  mov %r14, %rdi          
0x7fc7cfab423e  mov %r12, %rsi          
0x7fc7cfab4241  callq *%r15             
0x7fc7cfab4244  mov %rax, -0x98(%rbp)   
0x7fc7cfab424b  andq $0xf, %rax         
0x7fc7cfab424f  cmpq $0xa, %rax         
0x7fc7cfab4253  jnz 0x229                ; 0x7fc7cfab4279
0x7fc7cfab4259  movq $0x12, -0x98(%rbp) 
0x7fc7cfab4264  movq $0x12, -0xe8(%rbp) 
0x7fc7cfab426f  mov $0x12, %eax         
0x7fc7cfab4274  jmp 0x230                ; 0x7fc7cfab4280
0x7fc7cfab4279  mov -0xe8(%rbp), %rax   
0x7fc7cfab4280  mov %rax, -0x98(%rbp)   
0x7fc7cfab4287  cmpq $0x12, %rax        
0x7fc7cfab428b  jz 0x286                 ; 0x7fc7cfab42d6
0x7fc7cfab4291  mov $0x12, -0xbc(%rbp)  
0x7fc7cfab429b  mov $0x7fc7b42381f0, %rax
0x7fc7cfab42a5  mov %rax, (%rsp)        
0x7fc7cfab42a9  mov $0x0, 0x10(%rsp)    
0x7fc7cfab42b1  mov $0x0, 0x8(%rsp)     
0x7fc7cfab42b9  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab42c3  lea -0xe0(%rbp), %rsi   
0x7fc7cfab42ca  mov $0x12, %edx         
0x7fc7cfab42cf  xor %ecx, %ecx          
0x7fc7cfab42d1  jmp 0x3e6                ; 0x7fc7cfab4436
0x7fc7cfab42d6  lea -0x90(%rbp), %r13   
0x7fc7cfab42dd  mov -0xf8(%rbp), %r15   
0x7fc7cfab42e4  mov %r15, -0x98(%rbp)   
0x7fc7cfab42eb  mov %r15, -0x90(%rbp)   
0x7fc7cfab42f2  mov 0x193f540, %rax     
0x7fc7cfab42fa  mov 0x30(%rax), %rcx    
0x7fc7cfab42fe  mov -0xd8(%rbp), %rbx   
0x7fc7cfab4305  cmp %rbx, %rcx          
0x7fc7cfab4308  jnz 0x2d7                ; 0x7fc7cfab4327
0x7fc7cfab430e  mov 0x1582514, %ecx     
0x7fc7cfab4315  cmp 0x44(%rax), %ecx    
0x7fc7cfab4318  jnz 0x2d7                ; 0x7fc7cfab4327
0x7fc7cfab431e  mov 0x20(%rax), %rax    
0x7fc7cfab4322  jmp 0x305                ; 0x7fc7cfab4355
0x7fc7cfab4327  mov $0x35, -0xbc(%rbp)  
0x7fc7cfab4331  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab433b  lea -0xe0(%rbp), %rsi   
0x7fc7cfab4342  mov $0x193f540, %edx    
0x7fc7cfab4347  mov %r14, %rdi          
0x7fc7cfab434a  callq *%rax             
0x7fc7cfab434c  test %rax, %rax         
0x7fc7cfab434f  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4355  mov %rax, -0x90(%rbp)   
0x7fc7cfab435c  mov %r15, -0x88(%rbp)   
0x7fc7cfab4363  testb $0x3, %al         
0x7fc7cfab4366  jnz 0x3a3                ; 0x7fc7cfab43f3
0x7fc7cfab436c  mov 0x8(%rax), %rax     
0x7fc7cfab4370  cmp $0x4e, 0x70(%rax)   
0x7fc7cfab4374  jnz 0x3a3                ; 0x7fc7cfab43f3
0x7fc7cfab437a  cmp $0x10b, 0x74(%rax)  
0x7fc7cfab4381  jnz 0x409                ; 0x7fc7cfab4459
0x7fc7cfab4387  lea -0x88(%rbp), %r12   
0x7fc7cfab438e  testb $0x3, %r15b       
0x7fc7cfab4392  jnz 0x357                ; 0x7fc7cfab43a7
0x7fc7cfab4398  cmpb $0x23, (%r15)      
0x7fc7cfab439c  mov $0x12, %eax         
0x7fc7cfab43a1  jz 0x35c                 ; 0x7fc7cfab43ac
0x7fc7cfab43a7  mov $0xa, %eax          
0x7fc7cfab43ac  mov %rax, -0x90(%rbp)   
0x7fc7cfab43b3  andq $0xa, %rax         
0x7fc7cfab43b7  cmpq $0xa, %rax         
0x7fc7cfab43bb  jnz 0x791                ; 0x7fc7cfab47e1
0x7fc7cfab43c1  mov %r15, -0x90(%rbp)   
0x7fc7cfab43c8  mov 0x193f5b0, %rax     
0x7fc7cfab43d0  cmp %rbx, 0x30(%rax)    
0x7fc7cfab43d4  jnz 0x42e                ; 0x7fc7cfab447e
0x7fc7cfab43da  mov 0x1582514, %ecx     
0x7fc7cfab43e1  cmp 0x44(%rax), %ecx    
0x7fc7cfab43e4  jnz 0x42e                ; 0x7fc7cfab447e
0x7fc7cfab43ea  mov 0x20(%rax), %rax    
0x7fc7cfab43ee  jmp 0x45c                ; 0x7fc7cfab44ac
0x7fc7cfab43f3  mov $0x38, -0xbc(%rbp)  
0x7fc7cfab43fd  mov $0x7fc7b42381f0, %rax
0x7fc7cfab4407  mov %rax, (%rsp)        
0x7fc7cfab440b  mov $0x0, 0x10(%rsp)    
0x7fc7cfab4413  mov $0x0, 0x8(%rsp)     
0x7fc7cfab441b  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab4425  lea -0xe0(%rbp), %rsi   
0x7fc7cfab442c  mov $0x38, %edx         
0x7fc7cfab4431  mov $0x2, %ecx          
0x7fc7cfab4436  xor %r9d, %r9d          
0x7fc7cfab4439  mov %r14, %rdi          
0x7fc7cfab443c  mov %rsi, %r8           
0x7fc7cfab443f  callq *%rax             
0x7fc7cfab4441  mov %rax, %r15          
0x7fc7cfab4444  mov %r15, %rax          
0x7fc7cfab4447  addq $0x118, %rsp       
0x7fc7cfab444e  pop %rbx                
0x7fc7cfab444f  pop %r12                
0x7fc7cfab4451  pop %r13                
0x7fc7cfab4453  pop %r14                
0x7fc7cfab4455  pop %r15                
0x7fc7cfab4457  pop %rbp                
0x7fc7cfab4458  ret                     
0x7fc7cfab4459  mov $0x38, -0xbc(%rbp)  
0x7fc7cfab4463  mov $0x7fc7b42381f0, %rax
0x7fc7cfab446d  mov %rax, (%rsp)        
0x7fc7cfab4471  mov $0x1, 0x10(%rsp)    
0x7fc7cfab4479  jmp 0x3c3                ; 0x7fc7cfab4413
0x7fc7cfab447e  mov $0x43, -0xbc(%rbp)  
0x7fc7cfab4488  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab4492  lea -0xe0(%rbp), %rsi   
0x7fc7cfab4499  mov $0x193f5b0, %edx    
0x7fc7cfab449e  mov %r14, %rdi          
0x7fc7cfab44a1  callq *%rax             
0x7fc7cfab44a3  test %rax, %rax         
0x7fc7cfab44a6  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab44ac  mov %rax, -0x90(%rbp)   
0x7fc7cfab44b3  mov %r15, -0x88(%rbp)   
0x7fc7cfab44ba  mov %rax, -0x50(%rbp)   
0x7fc7cfab44be  movq $0x57e, -0x58(%rbp)
0x7fc7cfab44c6  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab44ce  mov $0x1, -0x40(%rbp)   
0x7fc7cfab44d5  movq $0x0, -0x30(%rbp)  
0x7fc7cfab44dd  mov %r12, -0x38(%rbp)   
0x7fc7cfab44e1  mov 0x193f5c8, %rsi     
0x7fc7cfab44e9  mov 0x20(%rsi), %rax    
0x7fc7cfab44ed  mov $0x46, -0xbc(%rbp)  
0x7fc7cfab44f7  lea -0xe0(%rbp), %rdx   
0x7fc7cfab44fe  lea -0x58(%rbp), %rcx   
0x7fc7cfab4502  mov %r14, %rdi          
0x7fc7cfab4505  callq *%rax             
0x7fc7cfab4507  test %rax, %rax         
0x7fc7cfab450a  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4510  mov %rax, -0x90(%rbp)   
0x7fc7cfab4517  andq $0xf, %rax         
0x7fc7cfab451b  cmpq $0xa, %rax         
0x7fc7cfab451f  jnz 0x6ad                ; 0x7fc7cfab46fd
0x7fc7cfab4525  mov -0x98(%rbp), %rax   
0x7fc7cfab452c  movq $0x1a, -0x90(%rbp) 
0x7fc7cfab4537  mov %rax, -0x88(%rbp)   
0x7fc7cfab453e  movq $0x1a, -0x50(%rbp) 
0x7fc7cfab4546  movq $0x57e, -0x58(%rbp)
0x7fc7cfab454e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4556  mov $0x1, -0x40(%rbp)   
0x7fc7cfab455d  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4565  mov %r12, -0x38(%rbp)   
0x7fc7cfab4569  mov 0x193f678, %rsi     
0x7fc7cfab4571  mov 0x20(%rsi), %rax    
0x7fc7cfab4575  mov $0x5c, -0xbc(%rbp)  
0x7fc7cfab457f  lea -0xe0(%rbp), %rdx   
0x7fc7cfab4586  lea -0x58(%rbp), %rcx   
0x7fc7cfab458a  mov %r14, %rdi          
0x7fc7cfab458d  callq *%rax             
0x7fc7cfab458f  test %rax, %rax         
0x7fc7cfab4592  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4598  mov %rax, -0x90(%rbp)   
0x7fc7cfab459f  andq $0xf, %rax         
0x7fc7cfab45a3  cmpq $0xa, %rax         
0x7fc7cfab45a7  jnz 0x79d                ; 0x7fc7cfab47ed
0x7fc7cfab45ad  mov -0x98(%rbp), %rax   
0x7fc7cfab45b4  movq $0x12, -0x90(%rbp) 
0x7fc7cfab45bf  mov %rax, -0x88(%rbp)   
0x7fc7cfab45c6  movq $0x12, -0x50(%rbp) 
0x7fc7cfab45ce  movq $0x57e, -0x58(%rbp)
0x7fc7cfab45d6  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab45de  mov $0x1, -0x40(%rbp)   
0x7fc7cfab45e5  movq $0x0, -0x30(%rbp)  
0x7fc7cfab45ed  mov %r12, -0x38(%rbp)   
0x7fc7cfab45f1  mov 0x193f6b8, %rsi     
0x7fc7cfab45f9  mov 0x20(%rsi), %rax    
0x7fc7cfab45fd  mov $0x64, -0xbc(%rbp)  
0x7fc7cfab4607  lea -0xe0(%rbp), %rdx   
0x7fc7cfab460e  lea -0x58(%rbp), %rcx   
0x7fc7cfab4612  mov %r14, %rdi          
0x7fc7cfab4615  callq *%rax             
0x7fc7cfab4617  test %rax, %rax         
0x7fc7cfab461a  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4620  mov %rax, -0x90(%rbp)   
0x7fc7cfab4627  andq $0xf, %rax         
0x7fc7cfab462b  cmpq $0xa, %rax         
0x7fc7cfab462f  jnz 0x79d                ; 0x7fc7cfab47ed
0x7fc7cfab4635  mov -0x98(%rbp), %rax   
0x7fc7cfab463c  movq $0xa, -0x90(%rbp)  
0x7fc7cfab4647  mov %rax, -0x88(%rbp)   
0x7fc7cfab464e  movq $0xa, -0x50(%rbp)  
0x7fc7cfab4656  movq $0x57e, -0x58(%rbp)
0x7fc7cfab465e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4666  mov $0x1, -0x40(%rbp)   
0x7fc7cfab466d  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4675  mov %r12, -0x38(%rbp)   
0x7fc7cfab4679  mov 0x193f6f8, %rsi     
0x7fc7cfab4681  mov 0x20(%rsi), %rax    
0x7fc7cfab4685  mov $0x6c, -0xbc(%rbp)  
0x7fc7cfab468f  lea -0xe0(%rbp), %rdx   
0x7fc7cfab4696  lea -0x58(%rbp), %rcx   
0x7fc7cfab469a  mov %r14, %rdi          
0x7fc7cfab469d  callq *%rax             
0x7fc7cfab469f  test %rax, %rax         
0x7fc7cfab46a2  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab46a8  mov %rax, -0x90(%rbp)   
0x7fc7cfab46af  andq $0xf, %rax         
0x7fc7cfab46b3  cmpq $0xa, %rax         
0x7fc7cfab46b7  jnz 0x79d                ; 0x7fc7cfab47ed
0x7fc7cfab46bd  mov -0x118(%rbp), %rax  
0x7fc7cfab46c4  mov %rax, -0x98(%rbp)   
0x7fc7cfab46cb  mov 0x193f800, %rax     
0x7fc7cfab46d3  mov 0x30(%rax), %rcx    
0x7fc7cfab46d7  cmp -0xd8(%rbp), %rcx   
0x7fc7cfab46de  jnz 0x953                ; 0x7fc7cfab49a3
0x7fc7cfab46e4  mov 0x1582514, %ecx     
0x7fc7cfab46eb  cmp 0x44(%rax), %ecx    
0x7fc7cfab46ee  jnz 0x953                ; 0x7fc7cfab49a3
0x7fc7cfab46f4  mov 0x20(%rax), %rax    
0x7fc7cfab46f8  jmp 0x984                ; 0x7fc7cfab49d4
0x7fc7cfab46fd  mov -0x118(%rbp), %rbx  
0x7fc7cfab4704  mov %rbx, -0x98(%rbp)   
0x7fc7cfab470b  mov -0xf8(%rbp), %rax   
0x7fc7cfab4712  mov %rax, -0x90(%rbp)   
0x7fc7cfab4719  mov 0x193f610, %rax     
0x7fc7cfab4721  mov 0x30(%rax), %rcx    
0x7fc7cfab4725  cmp -0xd8(%rbp), %rcx   
0x7fc7cfab472c  jnz 0x6fb                ; 0x7fc7cfab474b
0x7fc7cfab4732  mov 0x1582514, %ecx     
0x7fc7cfab4739  cmp 0x44(%rax), %ecx    
0x7fc7cfab473c  jnz 0x6fb                ; 0x7fc7cfab474b
0x7fc7cfab4742  mov 0x20(%rax), %rax    
0x7fc7cfab4746  jmp 0x729                ; 0x7fc7cfab4779
0x7fc7cfab474b  mov $0x4f, -0xbc(%rbp)  
0x7fc7cfab4755  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab475f  lea -0xe0(%rbp), %rsi   
0x7fc7cfab4766  mov $0x193f610, %edx    
0x7fc7cfab476b  mov %r14, %rdi          
0x7fc7cfab476e  callq *%rax             
0x7fc7cfab4770  test %rax, %rax         
0x7fc7cfab4773  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4779  mov %rax, -0x88(%rbp)   
0x7fc7cfab4780  movq $0x3d4e, -0x80(%rbp)
0x7fc7cfab4788  mov %rbx, -0x50(%rbp)   
0x7fc7cfab478c  movq $0x3996, -0x58(%rbp)
0x7fc7cfab4794  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab479c  mov $0x3, -0x40(%rbp)   
0x7fc7cfab47a3  movq $0x0, -0x30(%rbp)  
0x7fc7cfab47ab  mov %r13, -0x38(%rbp)   
0x7fc7cfab47af  mov 0x193f638, %rsi     
0x7fc7cfab47b7  mov 0x20(%rsi), %rax    
0x7fc7cfab47bb  mov $0x54, -0xbc(%rbp)  
0x7fc7cfab47c5  lea -0xe0(%rbp), %rdx   
0x7fc7cfab47cc  lea -0x58(%rbp), %rcx   
0x7fc7cfab47d0  mov %r14, %rdi          
0x7fc7cfab47d3  callq *%rax             
0x7fc7cfab47d5  mov %rax, %r15          
0x7fc7cfab47d8  test %r15, %r15         
0x7fc7cfab47db  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab47e1  mov %r15, -0x98(%rbp)   
0x7fc7cfab47e8  jmp 0x3f4                ; 0x7fc7cfab4444
0x7fc7cfab47ed  mov -0x118(%rbp), %rax  
0x7fc7cfab47f4  mov %rax, -0x98(%rbp)   
0x7fc7cfab47fb  mov 0x193f740, %rax     
0x7fc7cfab4803  mov 0x30(%rax), %rcx    
0x7fc7cfab4807  cmp -0xd8(%rbp), %rcx   
0x7fc7cfab480e  jnz 0x7dd                ; 0x7fc7cfab482d
0x7fc7cfab4814  mov 0x1582514, %ecx     
0x7fc7cfab481b  cmp 0x44(%rax), %ecx    
0x7fc7cfab481e  jnz 0x7dd                ; 0x7fc7cfab482d
0x7fc7cfab4824  mov 0x20(%rax), %rax    
0x7fc7cfab4828  jmp 0x80b                ; 0x7fc7cfab485b
0x7fc7cfab482d  mov $0x75, -0xbc(%rbp)  
0x7fc7cfab4837  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab4841  lea -0xe0(%rbp), %rsi   
0x7fc7cfab4848  mov $0x193f740, %edx    
0x7fc7cfab484d  mov %r14, %rdi          
0x7fc7cfab4850  callq *%rax             
0x7fc7cfab4852  test %rax, %rax         
0x7fc7cfab4855  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab485b  mov %rax, -0x90(%rbp)   
0x7fc7cfab4862  mov -0xc8(%rbp), %rax   
0x7fc7cfab4869  mov 0xc0(%rax), %rax    
0x7fc7cfab4870  mov 0x70(%rax), %rax    
0x7fc7cfab4874  mov %rax, -0x88(%rbp)   
0x7fc7cfab487b  mov -0xf8(%rbp), %rax   
0x7fc7cfab4882  mov %rax, -0x80(%rbp)   
0x7fc7cfab4886  mov %rax, -0x50(%rbp)   
0x7fc7cfab488a  movq $0x3826, -0x58(%rbp)
0x7fc7cfab4892  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab489a  mov $0x0, -0x40(%rbp)   
0x7fc7cfab48a1  movq $0x0, -0x30(%rbp)  
0x7fc7cfab48a9  mov 0x193f770, %rsi     
0x7fc7cfab48b1  mov 0x20(%rsi), %rax    
0x7fc7cfab48b5  mov $0x7b, -0xbc(%rbp)  
0x7fc7cfab48bf  lea -0xe0(%rbp), %rdx   
0x7fc7cfab48c6  lea -0x58(%rbp), %rcx   
0x7fc7cfab48ca  mov %r14, %rdi          
0x7fc7cfab48cd  callq *%rax             
0x7fc7cfab48cf  test %rax, %rax         
0x7fc7cfab48d2  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab48d8  mov %rax, -0x80(%rbp)   
0x7fc7cfab48dc  mov 0x193f790, %rcx     
0x7fc7cfab48e4  mov $0x760ee0, %rbx      ; rbx_meta_to_s
0x7fc7cfab48ee  lea -0xe0(%rbp), %rdx   
0x7fc7cfab48f5  mov %r14, %rdi          
0x7fc7cfab48f8  mov %rdx, %rsi          
0x7fc7cfab48fb  mov %rcx, %rdx          
0x7fc7cfab48fe  mov %rax, %rcx          
0x7fc7cfab4901  callq *%rbx             
0x7fc7cfab4903  test %rax, %rax         
0x7fc7cfab4906  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab490c  mov %rax, -0x80(%rbp)   
0x7fc7cfab4910  mov -0xc8(%rbp), %rax   
0x7fc7cfab4917  mov 0xc0(%rax), %rax    
0x7fc7cfab491e  mov 0x88(%rax), %rax    
0x7fc7cfab4925  mov %rax, -0x78(%rbp)   
0x7fc7cfab4929  mov $0x7636b0, %rax      ; rbx_string_build
0x7fc7cfab4933  lea -0xe0(%rbp), %rcx   
0x7fc7cfab493a  mov $0x3, %edx          
0x7fc7cfab493f  mov %r14, %rdi          
0x7fc7cfab4942  mov %rcx, %rsi          
0x7fc7cfab4945  mov %r12, %rcx          
0x7fc7cfab4948  callq *%rax             
0x7fc7cfab494a  test %rax, %rax         
0x7fc7cfab494d  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4953  mov %rax, -0x88(%rbp)   
0x7fc7cfab495a  mov -0x98(%rbp), %rax   
0x7fc7cfab4961  mov %rax, -0x50(%rbp)   
0x7fc7cfab4965  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab496d  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4975  mov $0x2, -0x40(%rbp)   
0x7fc7cfab497c  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4984  mov %r13, -0x38(%rbp)   
0x7fc7cfab4988  mov 0x193f7c8, %rax     
0x7fc7cfab4990  mov 0x20(%rax), %rbx    
0x7fc7cfab4994  mov $0x86, -0xbc(%rbp)  
0x7fc7cfab499e  jmp 0xad0                ; 0x7fc7cfab4b20
0x7fc7cfab49a3  mov $0x8d, -0xbc(%rbp)  
0x7fc7cfab49ad  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab49b7  lea -0xe0(%rbp), %rcx   
0x7fc7cfab49be  mov $0x193f800, %edx    
0x7fc7cfab49c3  mov %r14, %rdi          
0x7fc7cfab49c6  mov %rcx, %rsi          
0x7fc7cfab49c9  callq *%rax             
0x7fc7cfab49cb  test %rax, %rax         
0x7fc7cfab49ce  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab49d4  mov %rax, -0x90(%rbp)   
0x7fc7cfab49db  mov -0xc8(%rbp), %rax   
0x7fc7cfab49e2  mov 0xc0(%rax), %rax    
0x7fc7cfab49e9  mov 0x70(%rax), %rax    
0x7fc7cfab49ed  mov %rax, -0x88(%rbp)   
0x7fc7cfab49f4  mov -0xf8(%rbp), %rax   
0x7fc7cfab49fb  mov %rax, -0x80(%rbp)   
0x7fc7cfab49ff  mov %rax, -0x50(%rbp)   
0x7fc7cfab4a03  movq $0x3866, -0x58(%rbp)
0x7fc7cfab4a0b  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4a13  mov $0x0, -0x40(%rbp)   
0x7fc7cfab4a1a  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4a22  mov 0x193f830, %rax     
0x7fc7cfab4a2a  mov 0x20(%rax), %rbx    
0x7fc7cfab4a2e  mov $0x93, -0xbc(%rbp)  
0x7fc7cfab4a38  lea -0xe0(%rbp), %rcx   
0x7fc7cfab4a3f  lea -0x58(%rbp), %r8    
0x7fc7cfab4a43  mov %r14, %rdi          
0x7fc7cfab4a46  mov %rax, %rsi          
0x7fc7cfab4a49  mov %rcx, %rdx          
0x7fc7cfab4a4c  mov %r8, %rcx           
0x7fc7cfab4a4f  callq *%rbx             
0x7fc7cfab4a51  test %rax, %rax         
0x7fc7cfab4a54  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4a5a  mov %rax, -0x80(%rbp)   
0x7fc7cfab4a5e  mov 0x193f850, %rcx     
0x7fc7cfab4a66  mov $0x760ee0, %rbx      ; rbx_meta_to_s
0x7fc7cfab4a70  lea -0xe0(%rbp), %rdx   
0x7fc7cfab4a77  mov %r14, %rdi          
0x7fc7cfab4a7a  mov %rdx, %rsi          
0x7fc7cfab4a7d  mov %rcx, %rdx          
0x7fc7cfab4a80  mov %rax, %rcx          
0x7fc7cfab4a83  callq *%rbx             
0x7fc7cfab4a85  test %rax, %rax         
0x7fc7cfab4a88  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4a8e  mov %rax, -0x80(%rbp)   
0x7fc7cfab4a92  mov -0xc8(%rbp), %rax   
0x7fc7cfab4a99  mov 0xc0(%rax), %rax    
0x7fc7cfab4aa0  mov 0x88(%rax), %rax    
0x7fc7cfab4aa7  mov %rax, -0x78(%rbp)   
0x7fc7cfab4aab  mov $0x7636b0, %rax      ; rbx_string_build
0x7fc7cfab4ab5  lea -0xe0(%rbp), %rcx   
0x7fc7cfab4abc  mov $0x3, %edx          
0x7fc7cfab4ac1  mov %r14, %rdi          
0x7fc7cfab4ac4  mov %rcx, %rsi          
0x7fc7cfab4ac7  mov %r12, %rcx          
0x7fc7cfab4aca  callq *%rax             
0x7fc7cfab4acc  test %rax, %rax         
0x7fc7cfab4acf  jz 0xaee                 ; 0x7fc7cfab4b3e
0x7fc7cfab4ad5  mov %rax, -0x88(%rbp)   
0x7fc7cfab4adc  mov -0x98(%rbp), %rax   
0x7fc7cfab4ae3  mov %rax, -0x50(%rbp)   
0x7fc7cfab4ae7  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab4aef  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4af7  mov $0x2, -0x40(%rbp)   
0x7fc7cfab4afe  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4b06  mov %r13, -0x38(%rbp)   
0x7fc7cfab4b0a  mov 0x193f888, %rax     
0x7fc7cfab4b12  mov 0x20(%rax), %rbx    
0x7fc7cfab4b16  mov $0x9e, -0xbc(%rbp)  
0x7fc7cfab4b20  lea -0xe0(%rbp), %rcx   
0x7fc7cfab4b27  lea -0x58(%rbp), %r8    
0x7fc7cfab4b2b  mov %r14, %rdi          
0x7fc7cfab4b2e  mov %rax, %rsi          
0x7fc7cfab4b31  mov %rcx, %rdx          
0x7fc7cfab4b34  mov %r8, %rcx           
0x7fc7cfab4b37  callq *%rbx             
0x7fc7cfab4b39  jmp 0x785                ; 0x7fc7cfab47d5
0x7fc7cfab4b3e  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab4b48  lea -0xe0(%rbp), %rsi   
0x7fc7cfab4b4f  mov %r14, %rdi          
0x7fc7cfab4b52  callq *%rax             
0x7fc7cfab4b54  xor %r15d, %r15d        
0x7fc7cfab4b57  testb $0x1, %al         
0x7fc7cfab4b5a  jz 0x3f4                 ; 0x7fc7cfab4444
0x7fc7cfab4b60  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab4b6a  mov %r14, %rdi          
0x7fc7cfab4b6d  callq *%rax             
0x7fc7cfab4b6f  mov %rax, %r15          
0x7fc7cfab4b72  jmp 0x3f4                ; 0x7fc7cfab4444
[[[ LLVM Simple IR: _X_ANONYMOUS#__block__$block@7 ]]]

define %"struct.rubinius::Object"* @"_X_ANONYMOUS#__block__$block@7"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::BlockEnvironment"* %env, %"struct.rubinius::Arguments"* %args, %"struct.rubinius::BlockInvocation"* %invocation) {
entry:
  %counter_alloca = alloca i32, !dbg !17
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !17
  %counter2 = alloca i32, !dbg !17
  %valid_flag = alloca i1, !dbg !17
  %cfstk = alloca %"struct.rubinius::Object"*, i32 18, !dbg !17
  %var_mem = alloca %"struct.rubinius::Object"*, i32 8, !dbg !17
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !17
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !17
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !17
  %1 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i32 0, i32 3, !dbg !17
  %env.code = load %"struct.rubinius::CompiledCode"** %1, !dbg !17
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %2, !dbg !17
  %3 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i32 0, i32 2, !dbg !17
  %invocation.constant_scope = load %"struct.rubinius::ConstantScope"** %3, !dbg !17
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::ConstantScope"* %invocation.constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !17
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !17
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %5, !dbg !17
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !17
  store i8* null, i8** %6, !dbg !17
  store %"struct.rubinius::CompiledCode"* %env.code, %"struct.rubinius::CompiledCode"** %0, !dbg !17
  %7 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i32 0, i32 0, !dbg !17
  %invocation.flags = load i32* %7, !dbg !17
  %flags = or i32 %invocation.flags, 106, !dbg !17
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !17
  store i32 %flags, i32* %8, !dbg !17
  %9 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  store i32 0, i32* %9, !dbg !17
  %10 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !17
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %10, !dbg !17
  %11 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i32 0, i32 2, !dbg !17
  %env.top_scope = load %"struct.rubinius::VariableScope"** %11, !dbg !17
  %12 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 7, !dbg !17
  store %"struct.rubinius::VariableScope"* %env.top_scope, %"struct.rubinius::VariableScope"** %12, !dbg !17
  %13 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !17
  store i8* inttoptr (i64 140495695134064 to i8*), i8** %13, !dbg !17
  store i32 0, i32* %counter_alloca, !dbg !17
  %cfstk138 = alloca %"struct.rubinius::Object"*, i32 25
  %var_mem141 = alloca %"struct.rubinius::Object"*, i32 18
  %cfstk907 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem910 = alloca %"struct.rubinius::Object"*, i32 7
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %entry
  %counter = load i32* %counter_alloca, !dbg !17
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !17
  %added = add i32 %counter, 1, !dbg !17
  store i32 %added, i32* %counter_alloca, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %14, !dbg !17
  %15 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i32 0, i32 1, !dbg !17
  %invocation.self = load %"struct.rubinius::Object"** %15, !dbg !17
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !17
  store %"struct.rubinius::Object"* %invocation.self, %"struct.rubinius::Object"** %16, !dbg !17
  %17 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i32 0, i32 3, !dbg !17
  %invocation.module = load %"struct.rubinius::Module"** %17, !dbg !17
  %18 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i32 0, i32 5, !dbg !17
  %env.module = load %"struct.rubinius::Module"** %18, !dbg !17
  %19 = icmp ne %"struct.rubinius::Module"* %invocation.module, null, !dbg !17
  %20 = select i1 %19, %"struct.rubinius::Module"* %invocation.module, %"struct.rubinius::Module"* %env.module, !dbg !17
  %21 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !17
  store %"struct.rubinius::Module"* %20, %"struct.rubinius::Module"** %21, !dbg !17
  %22 = getelementptr %"struct.rubinius::VariableScope"* %env.top_scope, i32 0, i32 1, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %22, !dbg !17
  %23 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %23, !dbg !17
  %24 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i32 0, i32 1, !dbg !17
  %env.scope = load %"struct.rubinius::VariableScope"** %24, !dbg !17
  %25 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::VariableScope"* %env.scope, %"struct.rubinius::VariableScope"** %25, !dbg !17
  %26 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %26, !dbg !17
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !17
  %local_pos1 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos1, !dbg !17
  %27 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %27, !dbg !17
  %28 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !17
  %args.total = load i32* %28, !dbg !17
  %29 = icmp slt i32 %args.total, 0, !dbg !17
  %30 = select i1 %29, i32 %args.total, i32 0, !dbg !17
  %31 = sub i32 %30, 0, !dbg !17
  %32 = sub i32 %31, 0, !dbg !17
  %33 = icmp slt i32 0, %args.total, !dbg !17
  %34 = select i1 %33, i32 0, i32 %args.total, !dbg !17
  store i32 0, i32* %counter_alloca, !dbg !17
  br label %mand_loop_top, !dbg !17

mand_loop_top:                                    ; preds = %mand_loop_body, %bottom
  %loop_val = load i32* %counter_alloca, !dbg !17
  %loop_test = icmp slt i32 %loop_val, %34, !dbg !17
  br i1 %loop_test, label %mand_loop_body, label %mand_loop_cont, !dbg !17

mand_loop_body:                                   ; preds = %mand_loop_top
  %35 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val, !dbg !17
  %36 = load %"struct.rubinius::Object"** %35, !dbg !17
  %37 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %loop_val, !dbg !17
  store %"struct.rubinius::Object"* %36, %"struct.rubinius::Object"** %37, !dbg !17
  %38 = add i32 %loop_val, 1, !dbg !17
  store i32 %38, i32* %counter_alloca, !dbg !17
  br label %mand_loop_top, !dbg !17

mand_loop_cont:                                   ; preds = %mand_loop_top
  %39 = icmp slt i32 %31, 0, !dbg !17
  %40 = select i1 %39, i32 %31, i32 0, !dbg !17
  %41 = sub i32 %30, %40, !dbg !17
  store i32 %41, i32* %counter_alloca, !dbg !17
  store i32 0, i32* %counter2, !dbg !17
  br label %post_loop_top, !dbg !17

post_loop_top:                                    ; preds = %post_loop_body, %mand_loop_cont
  %loop_val2 = load i32* %counter_alloca, !dbg !17
  %loop_test3 = icmp slt i32 %loop_val2, %30, !dbg !17
  br i1 %loop_test3, label %post_loop_body, label %post_loop_cont, !dbg !17

post_loop_body:                                   ; preds = %post_loop_top
  %local_val = load i32* %counter2, !dbg !17
  %42 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val2, !dbg !17
  %43 = load %"struct.rubinius::Object"** %42, !dbg !17
  %44 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %local_val, !dbg !17
  store %"struct.rubinius::Object"* %43, %"struct.rubinius::Object"** %44, !dbg !17
  %45 = add i32 %loop_val2, 1, !dbg !17
  store i32 %45, i32* %counter_alloca, !dbg !17
  %46 = add i32 %local_val, 1, !dbg !17
  store i32 %46, i32* %counter2, !dbg !17
  br label %post_loop_top, !dbg !17

post_loop_cont:                                   ; preds = %post_loop_top
  %47 = icmp slt i32 0, %32, !dbg !17
  %48 = select i1 %47, i32 0, i32 %32, !dbg !17
  %49 = add i32 0, %48, !dbg !17
  store i32 0, i32* %counter_alloca, !dbg !17
  br label %opt_arg_loop_top, !dbg !17

opt_arg_loop_top:                                 ; preds = %opt_arg_loop_body, %post_loop_cont
  %loop_val4 = load i32* %counter_alloca, !dbg !17
  %loop_test5 = icmp slt i32 %loop_val4, %49, !dbg !17
  br i1 %loop_test5, label %opt_arg_loop_body, label %opt_arg_loop_cont, !dbg !17

opt_arg_loop_body:                                ; preds = %opt_arg_loop_top
  %50 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val4, !dbg !17
  %51 = load %"struct.rubinius::Object"** %50, !dbg !17
  %52 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %loop_val4, !dbg !17
  store %"struct.rubinius::Object"* %51, %"struct.rubinius::Object"** %52, !dbg !17
  %53 = add i32 %loop_val4, 1, !dbg !17
  store i32 %53, i32* %counter_alloca, !dbg !17
  br label %opt_arg_loop_top, !dbg !17

opt_arg_loop_cont:                                ; preds = %opt_arg_loop_top
  br label %block_body, !dbg !17

bail_out:                                         ; preds = %interrupts3595, %class_fallback3553, %return_pad126, %class_fallback92, %continue79, %continue66, %use_call65, %continue27, %use_call, %class_fallback, %ip4
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !17

block_body:                                       ; preds = %opt_arg_loop_cont
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !17
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos6, !dbg !18
  %local_pos7 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !18
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load = load %"struct.rubinius::Object"** %stack_pos8, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load, %"struct.rubinius::Object"** %local_pos7, !dbg !18
  br label %ip4, !dbg !18

ip4:                                              ; preds = %done3596, %block_body
  %local_pos9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !20
  %local = load %"struct.rubinius::Object"** %local_pos9, !dbg !20, !rbx-classid !21
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos10, !dbg !20
  %pld = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 2), !dbg !20
  %null_check = icmp eq %"struct.rubinius::Object"* %pld, null, !dbg !20
  br i1 %null_check, label %bail_out, label %check_active, !dbg !20

continue:                                         ; preds = %check_active
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* %pld, %"struct.rubinius::Object"** %stack_pos11, !dbg !20
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %stack_load14 = load %"struct.rubinius::Object"** %stack_pos13, !dbg !20, !rbx-classid !21
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load14 to i64, !dbg !20
  %stack_pos15 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_load16 = load %"struct.rubinius::Object"** %stack_pos15, !dbg !20
  %cast17 = ptrtoint %"struct.rubinius::Object"* %stack_load16 to i64, !dbg !20
  %fixnums_anded = and i64 %cast, %cast17
  %masked = and i64 %fixnums_anded, 1
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !20
  br i1 %is_fixnum, label %push_le, label %class_fallback, !dbg !20

check_active:                                     ; preds = %ip4
  br label %continue, !dbg !20

class_fallback:                                   ; preds = %continue
  %stack_pos18 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %stack_load19 = load %"struct.rubinius::Object"** %stack_pos18, !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %out_args_recv, !dbg !20
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !20
  store i32 1, i32* %out_args_total, !dbg !20
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !20
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"** %stack_pos20, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !20
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23016064 to %"struct.rubinius::CallSite"**), !dbg !20
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !20
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !20
  store i32 9, i32* %ip_pos, !dbg !20
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !20
  %null_check22 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !20
  br i1 %null_check22, label %bail_out, label %check_active21, !dbg !20

serial_fallback:                                  ; No predecessors!
  store i32 9, i32* %ip_pos, !dbg !20
  %54 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 9, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !20
  br label %return_pad, !dbg !20

continue12:                                       ; preds = %check_active21, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %55, %push_le ], [ %call_site_execute, %check_active21 ], !dbg !20
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos23, !dbg !20
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !20
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load25 to i64, !dbg !20
  %and = and i64 %as_int, 15, !dbg !20
  %is_true = icmp eq i64 %and, 10, !dbg !20
  br i1 %is_true, label %ip56, label %continue26, !dbg !20

push_le:                                          ; preds = %continue
  %fixnum.lt = icmp slt i64 %cast, %cast17, !dbg !20
  %55 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !20
  br label %continue12, !dbg !20

check_active21:                                   ; preds = %class_fallback
  br label %continue12, !dbg !20

continue26:                                       ; preds = %continue12
  br label %ip14, !dbg !20

ip14:                                             ; preds = %continue26
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), !dbg !22
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23016104 to %"struct.rubinius::ConstantCache"**), !dbg !22
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !22
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !22
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !22
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !22
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope, %frame_scope, !dbg !22
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !22

check_serial:                                     ; preds = %ip14
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !22
  %serial = load i32* %serial_pos, !dbg !22
  %use_cache28 = icmp eq i32 %global_serial, %serial, !dbg !22
  br i1 %use_cache28, label %use_cache, label %use_call, !dbg !22

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !22
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !22
  br label %continue27, !dbg !22

use_call:                                         ; preds = %check_serial, %ip14
  store i32 14, i32* %ip_pos, !dbg !22
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23016104 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !22
  %null_check31 = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !22
  br i1 %null_check31, label %bail_out, label %check_active30, !dbg !22

continue27:                                       ; preds = %continue29, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue29 ], !dbg !22, !rbx-classid !23
  %stack_pos32 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos32, !dbg !22
  %local_pos33 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !22
  %local34 = load %"struct.rubinius::Object"** %local_pos33, !dbg !22, !rbx-classid !21
  %stack_pos35 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !22
  store %"struct.rubinius::Object"* %local34, %"struct.rubinius::Object"** %stack_pos35, !dbg !22
  %stack_pos39 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  %stack_load40 = load %"struct.rubinius::Object"** %stack_pos39, !dbg !22, !rbx-classid !23
  store %"struct.rubinius::Object"* %stack_load40, %"struct.rubinius::Object"** %out_args_recv, !dbg !22
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !22
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !22
  store i32 1, i32* %out_args_total, !dbg !22
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !22
  %stack_pos41 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !22
  store %"struct.rubinius::Object"** %stack_pos41, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !22
  %cache_const42 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016136 to %"struct.rubinius::CallSite"**), !dbg !22
  %execute_pos43 = getelementptr %"struct.rubinius::CallSite"* %cache_const42, i32 0, i32 2, !dbg !22
  %execute44 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos43, !dbg !22
  store i32 18, i32* %ip_pos, !dbg !22
  %call_site_execute45 = call %"struct.rubinius::Object"* %execute44(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const42, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !22
  %null_check48 = icmp eq %"struct.rubinius::Object"* %call_site_execute45, null, !dbg !22
  br i1 %null_check48, label %bail_out, label %check_active47, !dbg !22

continue29:                                       ; preds = %check_active30
  br label %continue27, !dbg !22

check_active30:                                   ; preds = %use_call
  br label %continue29, !dbg !22

class_fallback36:                                 ; No predecessors!

serial_fallback37:                                ; No predecessors!

continue38:                                       ; No predecessors!

continue46:                                       ; preds = %check_active47
  %stack_pos49 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  store %"struct.rubinius::Object"* %call_site_execute45, %"struct.rubinius::Object"** %stack_pos49, !dbg !22
  %local_pos50 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !22
  %stack_pos51 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !22
  %stack_load52 = load %"struct.rubinius::Object"** %stack_pos51, !dbg !22
  store %"struct.rubinius::Object"* %stack_load52, %"struct.rubinius::Object"** %local_pos50, !dbg !22
  %local_pos53 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !24
  %local54 = load %"struct.rubinius::Object"** %local_pos53, !dbg !24, !rbx-classid !25
  %stack_pos55 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !24
  store %"struct.rubinius::Object"* %local54, %"struct.rubinius::Object"** %stack_pos55, !dbg !24
  %global_serial56 = load i32* inttoptr (i64 22553876 to i32*), !dbg !24
  %constant_cache57 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23016200 to %"struct.rubinius::ConstantCache"**), !dbg !24
  %constant_cache_pos58 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i32 0, i32 4, !dbg !24
  %constant_scope59 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos58, !dbg !24
  %scope_pos60 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !24
  %frame_scope61 = load %"struct.rubinius::ConstantScope"** %scope_pos60, !dbg !24
  %same_scope62 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope59, %frame_scope61, !dbg !24
  br i1 %same_scope62, label %check_serial63, label %use_call65, !dbg !24

check_active47:                                   ; preds = %continue27
  br label %continue46, !dbg !22

check_serial63:                                   ; preds = %continue46
  %serial_pos67 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i32 0, i32 7, !dbg !24
  %serial68 = load i32* %serial_pos67, !dbg !24
  %use_cache69 = icmp eq i32 %global_serial56, %serial68, !dbg !24
  br i1 %use_cache69, label %use_cache64, label %use_call65, !dbg !24

use_cache64:                                      ; preds = %check_serial63
  %value_pos70 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i32 0, i32 2, !dbg !24
  %cached_value71 = load %"struct.rubinius::Object"** %value_pos70, !dbg !24
  br label %continue66, !dbg !24

use_call65:                                       ; preds = %check_serial63, %continue46
  store i32 26, i32* %ip_pos, !dbg !24
  %push_const_fast72 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23016200 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !24
  %null_check75 = icmp eq %"struct.rubinius::Object"* %push_const_fast72, null, !dbg !24
  br i1 %null_check75, label %bail_out, label %check_active74, !dbg !24

continue66:                                       ; preds = %continue73, %use_cache64
  %constant76 = phi %"struct.rubinius::Object"* [ %cached_value71, %use_cache64 ], [ %push_const_fast72, %continue73 ], !dbg !24, !rbx-classid !26
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !24
  store %"struct.rubinius::Object"* %constant76, %"struct.rubinius::Object"** %stack_pos77, !dbg !24
  %pld78 = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 2), !dbg !24
  %null_check81 = icmp eq %"struct.rubinius::Object"* %pld78, null, !dbg !24
  br i1 %null_check81, label %bail_out, label %check_active80, !dbg !24

continue73:                                       ; preds = %check_active74
  br label %continue66, !dbg !24

check_active74:                                   ; preds = %use_call65
  br label %continue73, !dbg !24

continue79:                                       ; preds = %check_active80
  %stack_pos82 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !24
  store %"struct.rubinius::Object"* %pld78, %"struct.rubinius::Object"** %stack_pos82, !dbg !24
  %pld83 = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 3), !dbg !24
  %null_check86 = icmp eq %"struct.rubinius::Object"* %pld83, null, !dbg !24
  br i1 %null_check86, label %bail_out, label %check_active85, !dbg !24

check_active80:                                   ; preds = %continue66
  br label %continue79, !dbg !24

continue84:                                       ; preds = %check_active85
  %stack_pos87 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !24
  store %"struct.rubinius::Object"* %pld83, %"struct.rubinius::Object"** %stack_pos87, !dbg !24
  %local_pos88 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !24
  %local89 = load %"struct.rubinius::Object"** %local_pos88, !dbg !24, !rbx-classid !21
  %stack_pos90 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !24
  store %"struct.rubinius::Object"* %local89, %"struct.rubinius::Object"** %stack_pos90, !dbg !24
  %stack_pos91 = getelementptr %"struct.rubinius::Object"** %stack, i32 5, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos91, !dbg !24
  %stack_pos95 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !24
  %stack_load96 = load %"struct.rubinius::Object"** %stack_pos95, !dbg !24, !rbx-classid !21
  %stack_pos97 = getelementptr %"struct.rubinius::Object"** %stack, i32 5, !dbg !24
  %stack_load98 = load %"struct.rubinius::Object"** %stack_pos97, !dbg !24, !rbx-classid !27
  %cast99 = ptrtoint %"struct.rubinius::Object"* %stack_load96 to i64, !dbg !24
  %cast100 = ptrtoint %"struct.rubinius::Object"* %stack_load98 to i64, !dbg !24
  %fixnums_anded101 = and i64 %cast99, %cast100, !dbg !24
  %masked102 = and i64 %fixnums_anded101, 1, !dbg !24
  %is_fixnum103 = icmp eq i64 %masked102, 1, !dbg !24
  br i1 %is_fixnum103, label %push_add, label %class_fallback92, !dbg !24

check_active85:                                   ; preds = %continue79
  br label %continue84, !dbg !24

class_fallback92:                                 ; preds = %continue84
  %stack_pos107 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !24
  %stack_load108 = load %"struct.rubinius::Object"** %stack_pos107, !dbg !24, !rbx-classid !21
  store %"struct.rubinius::Object"* %stack_load108, %"struct.rubinius::Object"** %out_args_recv, !dbg !24
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !24
  store i32 1, i32* %out_args_total, !dbg !24
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !24
  %stack_pos109 = getelementptr %"struct.rubinius::Object"** %stack, i32 5, !dbg !24
  store %"struct.rubinius::Object"** %stack_pos109, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !24
  %cache_const110 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016288 to %"struct.rubinius::CallSite"**), !dbg !24
  %execute_pos111 = getelementptr %"struct.rubinius::CallSite"* %cache_const110, i32 0, i32 2, !dbg !24
  %execute112 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos111, !dbg !24
  store i32 37, i32* %ip_pos, !dbg !24
  %call_site_execute113 = call %"struct.rubinius::Object"* %execute112(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const110, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !24
  %null_check115 = icmp eq %"struct.rubinius::Object"* %call_site_execute113, null, !dbg !24
  br i1 %null_check115, label %bail_out, label %check_active114, !dbg !24

serial_fallback93:                                ; No predecessors!
  store i32 37, i32* %ip_pos, !dbg !24
  %56 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 37, i64 5, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !24
  br label %return_pad, !dbg !24

continue94:                                       ; preds = %check_active114, %cont
  %send_result116 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute113, %check_active114 ], !dbg !24
  %stack_pos117 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !24
  store %"struct.rubinius::Object"* %send_result116, %"struct.rubinius::Object"** %stack_pos117, !dbg !24
  %stack_pos121 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !24
  %stack_load122 = load %"struct.rubinius::Object"** %stack_pos121, !dbg !24, !rbx-classid !25
  %cast123 = ptrtoint %"struct.rubinius::Object"* %stack_load122 to i64, !dbg !24
  %masked124 = and i64 %cast123, 3, !dbg !24
  %is_reference = icmp eq i64 %masked124, 0, !dbg !24
  br i1 %is_reference, label %check_class_id, label %class_fallback118, !dbg !24

push_add:                                         ; preds = %continue84
  %as_int104 = ptrtoint %"struct.rubinius::Object"* %stack_load96 to i64, !dbg !24
  %ashr = ashr i64 %as_int104, 1, !dbg !24
  %as_int105 = ptrtoint %"struct.rubinius::Object"* %stack_load98 to i64, !dbg !24
  %ashr106 = ashr i64 %as_int105, 1, !dbg !24
  %fixnum.add = add i64 %ashr, %ashr106, !dbg !24
  %57 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !24
  %58 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !24
  %fits_fixnum = and i1 %57, %58, !dbg !24
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !24

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !24
  %or = or i64 %shl, 1, !dbg !24
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !24
  br label %cont, !dbg !24

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !24
  br label %cont, !dbg !24

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !24
  br label %continue94, !dbg !24

check_active114:                                  ; preds = %class_fallback92
  br label %continue94, !dbg !24

continue120:                                      ; preds = %continue3545
  %local_pos3549 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !28
  %local3550 = load %"struct.rubinius::Object"** %local_pos3549, !dbg !28, !rbx-classid !21
  %stack_pos3551 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !28
  store %"struct.rubinius::Object"* %local3550, %"struct.rubinius::Object"** %stack_pos3551, !dbg !28
  %stack_pos3552 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3552, !dbg !28
  %stack_pos3556 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !28
  %stack_load3557 = load %"struct.rubinius::Object"** %stack_pos3556, !dbg !28, !rbx-classid !21
  %stack_pos3558 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !28
  %stack_load3559 = load %"struct.rubinius::Object"** %stack_pos3558, !dbg !28, !rbx-classid !27
  %cast3564 = ptrtoint %"struct.rubinius::Object"* %stack_load3557 to i64, !dbg !28
  %cast3565 = ptrtoint %"struct.rubinius::Object"* %stack_load3559 to i64, !dbg !28
  %fixnums_anded3566 = and i64 %cast3564, %cast3565, !dbg !28
  %masked3567 = and i64 %fixnums_anded3566, 1, !dbg !28
  %is_fixnum3568 = icmp eq i64 %masked3567, 1, !dbg !28
  br i1 %is_fixnum3568, label %push_add3560, label %class_fallback3553, !dbg !28

check_class_id:                                   ; preds = %continue94
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load122, i32 0, i32 0, i32 1, !dbg !24
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !24
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !24
  %class_id = load i32* %class_id_pos, !dbg !24
  %check_class_id125 = icmp eq i32 %class_id, 1285, !dbg !24
  br i1 %check_class_id125, label %correct_class, label %class_fallback118, !dbg !24

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !24
  %serial_id = load i32* %serial_id_pos, !dbg !24
  %check_serial_id = icmp eq i32 %serial_id, 2, !dbg !24
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback119, !dbg !24

class_fallback118:                                ; preds = %check_class_id, %continue94
  store i32 40, i32* %ip_pos, !dbg !24
  %59 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 4, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !24
  br label %return_pad, !dbg !24

correct_serial:                                   ; preds = %correct_class
  %stack_pos128 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !24
  %stack_load129 = load %"struct.rubinius::Object"** %stack_pos128, !dbg !24, !rbx-classid !26
  %stack_pos130 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !24
  %stack_load131 = load %"struct.rubinius::Object"** %stack_pos130, !dbg !24
  %stack_pos132 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !24
  %stack_load133 = load %"struct.rubinius::Object"** %stack_pos132, !dbg !24
  %stack_pos134 = getelementptr %"struct.rubinius::Object"** %stack, i32 4, !dbg !24
  %stack_load135 = load %"struct.rubinius::Object"** %stack_pos134, !dbg !24
  %stack_pos136 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !24
  %stack_load137 = load %"struct.rubinius::Object"** %stack_pos136, !dbg !24, !rbx-classid !25
  br label %inline_entry, !dbg !24

serial_fallback119:                               ; preds = %correct_class
  store i32 40, i32* %ip_pos, !dbg !24
  %60 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 4, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !24
  br label %return_pad, !dbg !24

inline_entry:                                     ; preds = %correct_serial
  %call_frame139 = bitcast %"struct.rubinius::Object"** %cfstk138 to %"struct.rubinius::CallFrame"*, !dbg !29
  %stack140 = getelementptr %"struct.rubinius::Object"** %cfstk138, i32 9, !dbg !29
  %vars142 = bitcast %"struct.rubinius::Object"** %var_mem141 to %"struct.rubinius::StackVariables"*, !dbg !29
  %61 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 0, !dbg !29
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %61, !dbg !29
  %62 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 2, !dbg !29
  store i8* inttoptr (i64 140495695463232 to i8*), i8** %62, !dbg !29
  %compiled_code = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695463232 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !29
  %63 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 3, !dbg !29
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %63, !dbg !29
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !29
  %constant_scope143 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !29
  %64 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 1, !dbg !29
  store %"struct.rubinius::ConstantScope"* %constant_scope143, %"struct.rubinius::ConstantScope"** %64, !dbg !29
  %65 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 4, !dbg !29
  store i32 12, i32* %65, !dbg !29
  %66 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 5, !dbg !29
  store i32 0, i32* %66, !dbg !29
  %67 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 8, !dbg !29
  store %"struct.rubinius::StackVariables"* %vars142, %"struct.rubinius::StackVariables"** %67, !dbg !29
  store i32 0, i32* %counter_alloca, !dbg !29
  br label %stack_nil144, !dbg !29

stack_nil144:                                     ; preds = %stack_nil144, %inline_entry
  %counter146 = load i32* %counter_alloca, !dbg !29
  %stack_pos147 = getelementptr %"struct.rubinius::Object"** %stack140, i32 %counter146, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos147, !dbg !29
  %added148 = add i32 %counter146, 1, !dbg !29
  store i32 %added148, i32* %counter_alloca, !dbg !29
  %loop_check149 = icmp eq i32 %added148, 16, !dbg !29
  br i1 %loop_check149, label %bottom145, label %stack_nil144, !dbg !29

bottom145:                                        ; preds = %stack_nil144
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495695463232 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !29
  %68 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 0, !dbg !29
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %68, !dbg !29
  %69 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !29
  store %"struct.rubinius::Object"* %stack_load137, %"struct.rubinius::Object"** %69, !dbg !29
  %70 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 4, !dbg !29
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %70, !dbg !29
  %71 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 3, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %71, !dbg !29
  %72 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 1, !dbg !29
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %72, !dbg !29
  %73 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 5, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %73, !dbg !29
  store i32 0, i32* %counter_alloca, !dbg !29
  br label %locactx_nil, !dbg !29

locactx_nil:                                      ; preds = %locactx_nil, %bottom145
  %counter151 = load i32* %counter_alloca, !dbg !29
  %local_pos152 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 %counter151, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos152, !dbg !29
  %added153 = add i32 %counter151, 1, !dbg !29
  store i32 %added153, i32* %counter_alloca, !dbg !29
  %loop_check154 = icmp eq i32 %added153, 12, !dbg !29
  br i1 %loop_check154, label %bottom150, label %locactx_nil, !dbg !29

bottom150:                                        ; preds = %locactx_nil
  %local_pos155 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %stack_load129, %"struct.rubinius::Object"** %local_pos155, !dbg !29
  %local_pos156 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 1, !dbg !29
  store %"struct.rubinius::Object"* %stack_load131, %"struct.rubinius::Object"** %local_pos156, !dbg !29
  %local_pos157 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 2, !dbg !29
  store %"struct.rubinius::Object"* %stack_load133, %"struct.rubinius::Object"** %local_pos157, !dbg !29
  %local_pos158 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 3, !dbg !29
  store %"struct.rubinius::Object"* %stack_load135, %"struct.rubinius::Object"** %local_pos158, !dbg !29
  br label %method_body, !dbg !29

bail_out159:                                      ; preds = %visit_push_ivar_fallback3509, %class_fallback3445, %class_fallback3384, %visit_push_ivar_fallback3301, %class_fallback3237, %class_fallback3176, %visit_push_ivar_fallback3093, %class_fallback3029, %class_fallback2968, %interrupts, %class_fallback2870, %class_fallback2751, %class_fallback2690, %class_fallback2550, %class_fallback2489, %class_fallback2349, %class_fallback2288, %visit_push_ivar_fallback2229, %class_fallback2165, %class_fallback2104, %visit_push_ivar_fallback2041, %class_fallback1977, %class_fallback1916, %visit_push_ivar_fallback1864, %class_fallback1800, %class_fallback1739, %class_fallback1623, %class_fallback1543, %class_fallback1454, %class_fallback1393, %class_fallback1329, %return_pad899, %class_fallback819, %class_fallback758, %class_fallback692, %class_fallback631, %class_fallback565, %use_call546, %class_fallback473, %class_fallback370, %class_fallback276, %ip9, %class_fallback177
  %rth160 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139), !dbg !29
  br i1 %rth160, label %ret_raise_val161, label %ret_null162, !dbg !29

ret_raise_val161:                                 ; preds = %bail_out159
  %crv163 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !29
  br label %return_pad126, !dbg !29

ret_null162:                                      ; preds = %bail_out159
  br label %return_pad126, !dbg !29

method_body:                                      ; preds = %done2912, %bottom150
  %ip_pos164 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 5, !dbg !29
  %out_args_name165 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !29
  %out_args_recv166 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !29
  %out_args_block167 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !29
  %out_args_total168 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !29
  %out_args_arguments169 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !29
  %out_args_container170 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !29
  %local_pos171 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 3, !dbg !30
  %local172 = load %"struct.rubinius::Object"** %local_pos171, !dbg !30, !rbx-classid !31
  %stack_pos173 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local172, %"struct.rubinius::Object"** %stack_pos173, !dbg !30
  %local_pos174 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 1, !dbg !30
  %local175 = load %"struct.rubinius::Object"** %local_pos174, !dbg !30, !rbx-classid !25
  %stack_pos176 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %local175, %"struct.rubinius::Object"** %stack_pos176, !dbg !30
  %stack_pos180 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !30
  %stack_load181 = load %"struct.rubinius::Object"** %stack_pos180, !dbg !30, !rbx-classid !31
  %cast182 = ptrtoint %"struct.rubinius::Object"* %stack_load181 to i64, !dbg !30
  %stack_pos183 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !30
  %stack_load184 = load %"struct.rubinius::Object"** %stack_pos183, !dbg !30, !rbx-classid !25
  %cast185 = ptrtoint %"struct.rubinius::Object"* %stack_load184 to i64, !dbg !30
  %fixnums_anded186 = and i64 %cast182, %cast185
  %masked187 = and i64 %fixnums_anded186, 1
  %is_fixnum188 = icmp eq i64 %masked187, 1, !dbg !30
  br i1 %is_fixnum188, label %push_le189, label %class_fallback177, !dbg !30

class_fallback177:                                ; preds = %method_body
  %stack_pos191 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !30
  %stack_load192 = load %"struct.rubinius::Object"** %stack_pos191, !dbg !30, !rbx-classid !31
  store %"struct.rubinius::Object"* %stack_load192, %"struct.rubinius::Object"** %out_args_recv166, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !30
  store i32 1, i32* %out_args_total168, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !30
  %stack_pos193 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos193, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !30
  %cache_const194 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548440 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos195 = getelementptr %"struct.rubinius::CallSite"* %cache_const194, i32 0, i32 2, !dbg !30
  %execute196 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos195, !dbg !30
  store i32 4, i32* %ip_pos164, !dbg !30
  %call_site_execute197 = call %"struct.rubinius::Object"* %execute196(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const194, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check199 = icmp eq %"struct.rubinius::Object"* %call_site_execute197, null, !dbg !30
  br i1 %null_check199, label %bail_out159, label %check_active198, !dbg !30

serial_fallback178:                               ; No predecessors!
  store i32 4, i32* %ip_pos164, !dbg !30
  %74 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad126, !dbg !30

continue179:                                      ; preds = %check_active198, %push_le189
  %send_result200 = phi %"struct.rubinius::Object"* [ %75, %push_le189 ], [ %call_site_execute197, %check_active198 ], !dbg !30
  %stack_pos201 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %send_result200, %"struct.rubinius::Object"** %stack_pos201, !dbg !30
  %stack_pos202 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !30
  %stack_load203 = load %"struct.rubinius::Object"** %stack_pos202, !dbg !30
  %as_int204 = ptrtoint %"struct.rubinius::Object"* %stack_load203 to i64, !dbg !30
  %and205 = and i64 %as_int204, 15, !dbg !30
  %is_true206 = icmp eq i64 %and205, 10, !dbg !30
  br i1 %is_true206, label %ip274, label %continue207, !dbg !30

push_le189:                                       ; preds = %method_body
  %fixnum.lt190 = icmp slt i64 %cast182, %cast185, !dbg !30
  %75 = select i1 %fixnum.lt190, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !30
  br label %continue179, !dbg !30

check_active198:                                  ; preds = %class_fallback177
  br label %continue179, !dbg !30

continue207:                                      ; preds = %continue179
  br label %ip9, !dbg !30

ip9:                                              ; preds = %continue207
  %local_pos208 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 0, !dbg !32
  %local209 = load %"struct.rubinius::Object"** %local_pos208, !dbg !32, !rbx-classid !33
  %stack_pos210 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %local209, %"struct.rubinius::Object"** %stack_pos210, !dbg !32
  %local_pos211 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 3, !dbg !32
  %local212 = load %"struct.rubinius::Object"** %local_pos211, !dbg !32, !rbx-classid !31
  %stack_pos213 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !32
  store %"struct.rubinius::Object"* %local212, %"struct.rubinius::Object"** %stack_pos213, !dbg !32
  %stack_pos217 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !32
  %stack_load218 = load %"struct.rubinius::Object"** %stack_pos217, !dbg !32, !rbx-classid !33
  store %"struct.rubinius::Object"* %stack_load218, %"struct.rubinius::Object"** %out_args_recv166, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !32
  store i32 1, i32* %out_args_total168, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !32
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos219, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !32
  %cache_const220 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548512 to %"struct.rubinius::CallSite"**), !dbg !32
  %execute_pos221 = getelementptr %"struct.rubinius::CallSite"* %cache_const220, i32 0, i32 2, !dbg !32
  %execute222 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos221, !dbg !32
  store i32 13, i32* %ip_pos164, !dbg !32
  %call_site_execute223 = call %"struct.rubinius::Object"* %execute222(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const220, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check226 = icmp eq %"struct.rubinius::Object"* %call_site_execute223, null, !dbg !32
  br i1 %null_check226, label %bail_out159, label %check_active225, !dbg !32

class_fallback214:                                ; No predecessors!

serial_fallback215:                               ; No predecessors!

continue216:                                      ; No predecessors!

continue224:                                      ; preds = %check_active225
  %stack_pos227 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %call_site_execute223, %"struct.rubinius::Object"** %stack_pos227, !dbg !32
  %local_pos228 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !32
  %stack_pos229 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !32
  %stack_load230 = load %"struct.rubinius::Object"** %stack_pos229, !dbg !32
  store %"struct.rubinius::Object"* %stack_load230, %"struct.rubinius::Object"** %local_pos228, !dbg !32
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos232, !dbg !34
  %76 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !34
  %self = load %"struct.rubinius::Object"** %76, !dbg !34
  %cast233 = ptrtoint %"struct.rubinius::Object"* %self to i64, !dbg !34
  %masked234 = and i64 %cast233, 3, !dbg !34
  %is_reference235 = icmp eq i64 %masked234, 0, !dbg !34
  br i1 %is_reference235, label %check_class_id236, label %visit_push_ivar_fallback, !dbg !34

check_active225:                                  ; preds = %ip9
  br label %continue224, !dbg !32

continue231:                                      ; preds = %visit_push_ivar_fallback, %correct_class237
  %local_pos246 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !34
  %local247 = load %"struct.rubinius::Object"** %local_pos246, !dbg !34, !rbx-classid !35
  %stack_pos248 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local247, %"struct.rubinius::Object"** %stack_pos248, !dbg !34
  %stack_pos252 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  %stack_load253 = load %"struct.rubinius::Object"** %stack_pos252, !dbg !34, !rbx-classid !35
  %cast254 = ptrtoint %"struct.rubinius::Object"* %stack_load253 to i64, !dbg !34
  %masked255 = and i64 %cast254, 3, !dbg !34
  %is_reference256 = icmp eq i64 %masked255, 0, !dbg !34
  br i1 %is_reference256, label %check_class_id257, label %class_fallback249, !dbg !34

check_class_id236:                                ; preds = %continue224
  %class_pos238 = getelementptr %"struct.rubinius::Object"* %self, i32 0, i32 0, i32 1, !dbg !34
  %ref_class239 = load %"struct.rubinius::Class"** %class_pos238, !dbg !34
  %class_id_pos240 = getelementptr %"struct.rubinius::Class"* %ref_class239, i32 0, i32 4, !dbg !34
  %class_id241 = load i32* %class_id_pos240, !dbg !34
  %check_class_id242 = icmp eq i32 %class_id241, 1285, !dbg !34
  br i1 %check_class_id242, label %correct_class237, label %visit_push_ivar_fallback, !dbg !34

correct_class237:                                 ; preds = %check_class_id236
  %obj_array = bitcast %"struct.rubinius::Object"* %self to %"struct.rubinius::Object"**, !dbg !34
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !34
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !34
  %prune_undef = icmp eq %"struct.rubinius::Object"* %field, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !34
  %"select ivar" = select i1 %prune_undef, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field, !dbg !34
  %stack_pos243 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %"select ivar", %"struct.rubinius::Object"** %stack_pos243, !dbg !34
  br label %continue231, !dbg !34

visit_push_ivar_fallback:                         ; preds = %check_class_id236, %continue224
  %77 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !34
  %self244 = load %"struct.rubinius::Object"** %77, !dbg !34
  %ivar = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self244, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !34
  %stack_pos245 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %ivar, %"struct.rubinius::Object"** %stack_pos245, !dbg !34
  br label %continue231, !dbg !34

continue251:                                      ; preds = %correct_serial259
  %stack_pos279 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  %stack_load280 = load %"struct.rubinius::Object"** %stack_pos279, !dbg !34
  %cast281 = ptrtoint %"struct.rubinius::Object"* %stack_load280 to i64, !dbg !34
  %masked282 = and i64 %cast281, 3, !dbg !34
  %is_reference283 = icmp eq i64 %masked282, 0, !dbg !34
  br i1 %is_reference283, label %check_class_id284, label %class_fallback276, !dbg !34

check_class_id257:                                ; preds = %continue231
  %class_pos260 = getelementptr %"struct.rubinius::Object"* %stack_load253, i32 0, i32 0, i32 1, !dbg !34
  %ref_class261 = load %"struct.rubinius::Class"** %class_pos260, !dbg !34
  %class_id_pos262 = getelementptr %"struct.rubinius::Class"* %ref_class261, i32 0, i32 4, !dbg !34
  %class_id263 = load i32* %class_id_pos262, !dbg !34
  %check_class_id264 = icmp eq i32 %class_id263, 1285, !dbg !34
  br i1 %check_class_id264, label %correct_class258, label %class_fallback249, !dbg !34

correct_class258:                                 ; preds = %check_class_id257
  %serial_id_pos265 = getelementptr %"struct.rubinius::Class"* %ref_class261, i32 0, i32 5, !dbg !34
  %serial_id266 = load i32* %serial_id_pos265, !dbg !34
  %check_serial_id267 = icmp eq i32 %serial_id266, 2, !dbg !34
  br i1 %check_serial_id267, label %correct_serial259, label %serial_fallback250, !dbg !34

class_fallback249:                                ; preds = %check_class_id257, %continue231
  store i32 23, i32* %ip_pos164, !dbg !34
  %78 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !34
  br label %return_pad126, !dbg !34

correct_serial259:                                ; preds = %correct_class258
  %stack_pos268 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  %stack_load269 = load %"struct.rubinius::Object"** %stack_pos268, !dbg !34, !rbx-classid !35
  %obj_array270 = bitcast %"struct.rubinius::Object"* %stack_load269 to %"struct.rubinius::Object"**, !dbg !34
  %field_pos271 = getelementptr %"struct.rubinius::Object"** %obj_array270, i32 3, !dbg !34
  %field272 = load %"struct.rubinius::Object"** %field_pos271, !dbg !34
  %prune_undef273 = icmp eq %"struct.rubinius::Object"* %field272, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !34
  %"select ivar274" = select i1 %prune_undef273, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field272, !dbg !34
  %stack_pos275 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %"select ivar274", %"struct.rubinius::Object"** %stack_pos275, !dbg !34
  br label %continue251, !dbg !34

serial_fallback250:                               ; preds = %correct_class258
  store i32 23, i32* %ip_pos164, !dbg !34
  %79 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad126, !dbg !34

continue278:                                      ; preds = %check_active324, %continue308
  %send_result326 = phi %"struct.rubinius::Object"* [ %84, %continue308 ], [ %call_site_execute323, %check_active324 ], !dbg !34
  %stack_pos327 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %send_result326, %"struct.rubinius::Object"** %stack_pos327, !dbg !34
  %local_pos328 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 5, !dbg !34
  %stack_pos329 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  %stack_load330 = load %"struct.rubinius::Object"** %stack_pos329, !dbg !34
  store %"struct.rubinius::Object"* %stack_load330, %"struct.rubinius::Object"** %local_pos328, !dbg !34
  %stack_pos333 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos333, !dbg !36
  %80 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !36
  %self334 = load %"struct.rubinius::Object"** %80, !dbg !36
  %cast335 = ptrtoint %"struct.rubinius::Object"* %self334 to i64, !dbg !36
  %masked336 = and i64 %cast335, 3, !dbg !36
  %is_reference337 = icmp eq i64 %masked336, 0, !dbg !36
  br i1 %is_reference337, label %check_class_id338, label %visit_push_ivar_fallback331, !dbg !36

check_class_id284:                                ; preds = %continue251
  %class_pos287 = getelementptr %"struct.rubinius::Object"* %stack_load280, i32 0, i32 0, i32 1, !dbg !34
  %ref_class288 = load %"struct.rubinius::Class"** %class_pos287, !dbg !34
  %class_id_pos289 = getelementptr %"struct.rubinius::Class"* %ref_class288, i32 0, i32 4, !dbg !34
  %class_id290 = load i32* %class_id_pos289, !dbg !34
  %check_class_id291 = icmp eq i32 %class_id290, 77, !dbg !34
  br i1 %check_class_id291, label %correct_class285, label %class_fallback276, !dbg !34

correct_class285:                                 ; preds = %check_class_id284
  %serial_id_pos292 = getelementptr %"struct.rubinius::Class"* %ref_class288, i32 0, i32 5, !dbg !34
  %serial_id293 = load i32* %serial_id_pos292, !dbg !34
  %check_serial_id294 = icmp eq i32 %serial_id293, 224, !dbg !34
  br i1 %check_serial_id294, label %correct_serial286, label %serial_fallback277, !dbg !34

correct_serial286:                                ; preds = %correct_class285
  %stack_pos295 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  %stack_load296 = load %"struct.rubinius::Object"** %stack_pos295, !dbg !34
  %cast298 = ptrtoint %"struct.rubinius::Object"* %stack_load296 to i64, !dbg !34
  %masked299 = and i64 %cast298, 3, !dbg !34
  %is_reference300 = icmp eq i64 %masked299, 0, !dbg !34
  br i1 %is_reference300, label %check_class_id301, label %continue297, !dbg !34

serial_fallback277:                               ; preds = %correct_class285
  store i32 26, i32* %ip_pos164, !dbg !34
  %81 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 26, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad126, !dbg !34

check_class_id301:                                ; preds = %correct_serial286
  %class_pos303 = getelementptr %"struct.rubinius::Object"* %stack_load296, i32 0, i32 0, i32 1, !dbg !34
  %ref_class304 = load %"struct.rubinius::Class"** %class_pos303, !dbg !34
  %class_id_pos305 = getelementptr %"struct.rubinius::Class"* %ref_class304, i32 0, i32 4, !dbg !34
  %class_id306 = load i32* %class_id_pos305, !dbg !34
  %check_class_id307 = icmp eq i32 %class_id306, 77, !dbg !34
  br i1 %check_class_id307, label %correct_class302, label %continue297, !dbg !34

correct_class302:                                 ; preds = %check_class_id301
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load296 to %"struct.rubinius::Float"*, !dbg !34
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !34
  %farg = load double* %arg.value_pos, !dbg !34
  br label %continue308, !dbg !34

continue297:                                      ; preds = %check_class_id301, %correct_serial286
  %cast309 = ptrtoint %"struct.rubinius::Object"* %stack_load296 to i64, !dbg !34
  %masked310 = and i64 %cast309, 1, !dbg !34
  %is_fixnum311 = icmp eq i64 %masked310, 1, !dbg !34
  br i1 %is_fixnum311, label %guarded_body, label %class_fallback276, !dbg !34

guarded_body:                                     ; preds = %continue297
  %as_int312 = ptrtoint %"struct.rubinius::Object"* %stack_load296 to i64, !dbg !34
  %ashr313 = ashr i64 %as_int312, 1, !dbg !34
  %82 = sitofp i64 %ashr313 to double, !dbg !34
  br label %continue308, !dbg !34

continue308:                                      ; preds = %guarded_body, %correct_class302
  %rhs = phi double [ %farg, %correct_class302 ], [ %82, %guarded_body ], !dbg !34
  %stack_pos314 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  %stack_load315 = load %"struct.rubinius::Object"** %stack_pos314, !dbg !34
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load315 to %"struct.rubinius::Float"*, !dbg !34
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !34
  %fself = load double* %self.value_pos, !dbg !34
  %float.sub = fsub double %fself, %rhs, !dbg !34
  %result316 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !34, !rbx-classid !37
  %83 = getelementptr %"struct.rubinius::Float"* %result316, i32 0, i32 1, !dbg !34
  store double %float.sub, double* %83, !dbg !34
  %84 = bitcast %"struct.rubinius::Float"* %result316 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue278, !dbg !34

class_fallback276:                                ; preds = %continue297, %check_class_id284, %continue251
  %stack_pos317 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !34
  %stack_load318 = load %"struct.rubinius::Object"** %stack_pos317, !dbg !34
  store %"struct.rubinius::Object"* %stack_load318, %"struct.rubinius::Object"** %out_args_recv166, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !34
  store i32 1, i32* %out_args_total168, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !34
  %stack_pos319 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos319, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !34
  %cache_const320 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548616 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos321 = getelementptr %"struct.rubinius::CallSite"* %cache_const320, i32 0, i32 2, !dbg !34
  %execute322 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos321, !dbg !34
  store i32 26, i32* %ip_pos164, !dbg !34
  %call_site_execute323 = call %"struct.rubinius::Object"* %execute322(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const320, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check325 = icmp eq %"struct.rubinius::Object"* %call_site_execute323, null, !dbg !34
  br i1 %null_check325, label %bail_out159, label %check_active324, !dbg !34

check_active324:                                  ; preds = %class_fallback276
  br label %continue278, !dbg !34

continue332:                                      ; preds = %visit_push_ivar_fallback331, %correct_class339
  %local_pos354 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !36
  %local355 = load %"struct.rubinius::Object"** %local_pos354, !dbg !36, !rbx-classid !38
  %stack_pos356 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %local355, %"struct.rubinius::Object"** %stack_pos356, !dbg !36
  %stack_pos360 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  %stack_load361 = load %"struct.rubinius::Object"** %stack_pos360, !dbg !36, !rbx-classid !38
  %stack_pos362 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  %stack_load363 = load %"struct.rubinius::Object"** %stack_pos362, !dbg !36, !rbx-classid !38
  %obj_array364 = bitcast %"struct.rubinius::Object"* %stack_load363 to %"struct.rubinius::Object"**, !dbg !36
  %field_pos365 = getelementptr %"struct.rubinius::Object"** %obj_array364, i32 4, !dbg !36
  %field366 = load %"struct.rubinius::Object"** %field_pos365, !dbg !36
  %prune_undef367 = icmp eq %"struct.rubinius::Object"* %field366, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !36
  %"select ivar368" = select i1 %prune_undef367, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field366, !dbg !36
  %stack_pos369 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %"select ivar368", %"struct.rubinius::Object"** %stack_pos369, !dbg !36
  br label %continue359, !dbg !36

check_class_id338:                                ; preds = %continue278
  %class_pos340 = getelementptr %"struct.rubinius::Object"* %self334, i32 0, i32 0, i32 1, !dbg !36
  %ref_class341 = load %"struct.rubinius::Class"** %class_pos340, !dbg !36
  %class_id_pos342 = getelementptr %"struct.rubinius::Class"* %ref_class341, i32 0, i32 4, !dbg !36
  %class_id343 = load i32* %class_id_pos342, !dbg !36
  %check_class_id344 = icmp eq i32 %class_id343, 1285, !dbg !36
  br i1 %check_class_id344, label %correct_class339, label %visit_push_ivar_fallback331, !dbg !36

correct_class339:                                 ; preds = %check_class_id338
  %obj_array345 = bitcast %"struct.rubinius::Object"* %self334 to %"struct.rubinius::Object"**, !dbg !36
  %field_pos346 = getelementptr %"struct.rubinius::Object"** %obj_array345, i32 4, !dbg !36
  %field347 = load %"struct.rubinius::Object"** %field_pos346, !dbg !36
  %prune_undef348 = icmp eq %"struct.rubinius::Object"* %field347, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !36
  %"select ivar349" = select i1 %prune_undef348, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field347, !dbg !36
  %stack_pos350 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %"select ivar349", %"struct.rubinius::Object"** %stack_pos350, !dbg !36
  br label %continue332, !dbg !36

visit_push_ivar_fallback331:                      ; preds = %check_class_id338, %continue278
  %85 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !36
  %self351 = load %"struct.rubinius::Object"** %85, !dbg !36
  %ivar352 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self351, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !36
  %stack_pos353 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %ivar352, %"struct.rubinius::Object"** %stack_pos353, !dbg !36
  br label %continue332, !dbg !36

class_fallback357:                                ; No predecessors!
  store i32 36, i32* %ip_pos164, !dbg !36
  %86 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !36
  br label %return_pad126, !dbg !36

serial_fallback358:                               ; No predecessors!
  store i32 36, i32* %ip_pos164, !dbg !36
  %87 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

continue359:                                      ; preds = %continue332
  %stack_pos373 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  %stack_load374 = load %"struct.rubinius::Object"** %stack_pos373, !dbg !36
  %cast375 = ptrtoint %"struct.rubinius::Object"* %stack_load374 to i64, !dbg !36
  %masked376 = and i64 %cast375, 3, !dbg !36
  %is_reference377 = icmp eq i64 %masked376, 0, !dbg !36
  br i1 %is_reference377, label %check_class_id378, label %class_fallback370, !dbg !36

continue372:                                      ; preds = %check_active427, %continue405
  %send_result429 = phi %"struct.rubinius::Object"* [ %92, %continue405 ], [ %call_site_execute426, %check_active427 ], !dbg !36
  %stack_pos430 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %send_result429, %"struct.rubinius::Object"** %stack_pos430, !dbg !36
  %local_pos431 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 6, !dbg !36
  %stack_pos432 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  %stack_load433 = load %"struct.rubinius::Object"** %stack_pos432, !dbg !36
  store %"struct.rubinius::Object"* %stack_load433, %"struct.rubinius::Object"** %local_pos431, !dbg !36
  %stack_pos436 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos436, !dbg !39
  %88 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !39
  %self437 = load %"struct.rubinius::Object"** %88, !dbg !39
  %cast438 = ptrtoint %"struct.rubinius::Object"* %self437 to i64, !dbg !39
  %masked439 = and i64 %cast438, 3, !dbg !39
  %is_reference440 = icmp eq i64 %masked439, 0, !dbg !39
  br i1 %is_reference440, label %check_class_id441, label %visit_push_ivar_fallback434, !dbg !39

check_class_id378:                                ; preds = %continue359
  %class_pos381 = getelementptr %"struct.rubinius::Object"* %stack_load374, i32 0, i32 0, i32 1, !dbg !36
  %ref_class382 = load %"struct.rubinius::Class"** %class_pos381, !dbg !36
  %class_id_pos383 = getelementptr %"struct.rubinius::Class"* %ref_class382, i32 0, i32 4, !dbg !36
  %class_id384 = load i32* %class_id_pos383, !dbg !36
  %check_class_id385 = icmp eq i32 %class_id384, 77, !dbg !36
  br i1 %check_class_id385, label %correct_class379, label %class_fallback370, !dbg !36

correct_class379:                                 ; preds = %check_class_id378
  %serial_id_pos386 = getelementptr %"struct.rubinius::Class"* %ref_class382, i32 0, i32 5, !dbg !36
  %serial_id387 = load i32* %serial_id_pos386, !dbg !36
  %check_serial_id388 = icmp eq i32 %serial_id387, 224, !dbg !36
  br i1 %check_serial_id388, label %correct_serial380, label %serial_fallback371, !dbg !36

correct_serial380:                                ; preds = %correct_class379
  %stack_pos389 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  %stack_load390 = load %"struct.rubinius::Object"** %stack_pos389, !dbg !36
  %cast392 = ptrtoint %"struct.rubinius::Object"* %stack_load390 to i64, !dbg !36
  %masked393 = and i64 %cast392, 3, !dbg !36
  %is_reference394 = icmp eq i64 %masked393, 0, !dbg !36
  br i1 %is_reference394, label %check_class_id395, label %continue391, !dbg !36

serial_fallback371:                               ; preds = %correct_class379
  store i32 39, i32* %ip_pos164, !dbg !36
  %89 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 39, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

check_class_id395:                                ; preds = %correct_serial380
  %class_pos397 = getelementptr %"struct.rubinius::Object"* %stack_load390, i32 0, i32 0, i32 1, !dbg !36
  %ref_class398 = load %"struct.rubinius::Class"** %class_pos397, !dbg !36
  %class_id_pos399 = getelementptr %"struct.rubinius::Class"* %ref_class398, i32 0, i32 4, !dbg !36
  %class_id400 = load i32* %class_id_pos399, !dbg !36
  %check_class_id401 = icmp eq i32 %class_id400, 77, !dbg !36
  br i1 %check_class_id401, label %correct_class396, label %continue391, !dbg !36

correct_class396:                                 ; preds = %check_class_id395
  %arg_float402 = bitcast %"struct.rubinius::Object"* %stack_load390 to %"struct.rubinius::Float"*, !dbg !36
  %arg.value_pos403 = getelementptr %"struct.rubinius::Float"* %arg_float402, i32 0, i32 1, !dbg !36
  %farg404 = load double* %arg.value_pos403, !dbg !36
  br label %continue405, !dbg !36

continue391:                                      ; preds = %check_class_id395, %correct_serial380
  %cast406 = ptrtoint %"struct.rubinius::Object"* %stack_load390 to i64, !dbg !36
  %masked407 = and i64 %cast406, 1, !dbg !36
  %is_fixnum408 = icmp eq i64 %masked407, 1, !dbg !36
  br i1 %is_fixnum408, label %guarded_body409, label %class_fallback370, !dbg !36

guarded_body409:                                  ; preds = %continue391
  %as_int410 = ptrtoint %"struct.rubinius::Object"* %stack_load390 to i64, !dbg !36
  %ashr411 = ashr i64 %as_int410, 1, !dbg !36
  %90 = sitofp i64 %ashr411 to double, !dbg !36
  br label %continue405, !dbg !36

continue405:                                      ; preds = %guarded_body409, %correct_class396
  %rhs412 = phi double [ %farg404, %correct_class396 ], [ %90, %guarded_body409 ], !dbg !36
  %stack_pos413 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  %stack_load414 = load %"struct.rubinius::Object"** %stack_pos413, !dbg !36
  %self_float415 = bitcast %"struct.rubinius::Object"* %stack_load414 to %"struct.rubinius::Float"*, !dbg !36
  %self.value_pos416 = getelementptr %"struct.rubinius::Float"* %self_float415, i32 0, i32 1, !dbg !36
  %fself417 = load double* %self.value_pos416, !dbg !36
  %float.sub418 = fsub double %fself417, %rhs412, !dbg !36
  %result419 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !37
  %91 = getelementptr %"struct.rubinius::Float"* %result419, i32 0, i32 1, !dbg !36
  store double %float.sub418, double* %91, !dbg !36
  %92 = bitcast %"struct.rubinius::Float"* %result419 to %"struct.rubinius::Object"*, !dbg !36
  br label %continue372, !dbg !36

class_fallback370:                                ; preds = %continue391, %check_class_id378, %continue359
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !36
  %stack_load421 = load %"struct.rubinius::Object"** %stack_pos420, !dbg !36
  store %"struct.rubinius::Object"* %stack_load421, %"struct.rubinius::Object"** %out_args_recv166, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !36
  store i32 1, i32* %out_args_total168, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !36
  %stack_pos422 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos422, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !36
  %cache_const423 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548720 to %"struct.rubinius::CallSite"**), !dbg !36
  %execute_pos424 = getelementptr %"struct.rubinius::CallSite"* %cache_const423, i32 0, i32 2, !dbg !36
  %execute425 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos424, !dbg !36
  store i32 39, i32* %ip_pos164, !dbg !36
  %call_site_execute426 = call %"struct.rubinius::Object"* %execute425(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const423, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check428 = icmp eq %"struct.rubinius::Object"* %call_site_execute426, null, !dbg !36
  br i1 %null_check428, label %bail_out159, label %check_active427, !dbg !36

check_active427:                                  ; preds = %class_fallback370
  br label %continue372, !dbg !36

continue435:                                      ; preds = %visit_push_ivar_fallback434, %correct_class442
  %local_pos457 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !39
  %local458 = load %"struct.rubinius::Object"** %local_pos457, !dbg !39, !rbx-classid !38
  %stack_pos459 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %local458, %"struct.rubinius::Object"** %stack_pos459, !dbg !39
  %stack_pos463 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  %stack_load464 = load %"struct.rubinius::Object"** %stack_pos463, !dbg !39, !rbx-classid !38
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  %stack_load466 = load %"struct.rubinius::Object"** %stack_pos465, !dbg !39, !rbx-classid !38
  %obj_array467 = bitcast %"struct.rubinius::Object"* %stack_load466 to %"struct.rubinius::Object"**, !dbg !39
  %field_pos468 = getelementptr %"struct.rubinius::Object"** %obj_array467, i32 5, !dbg !39
  %field469 = load %"struct.rubinius::Object"** %field_pos468, !dbg !39
  %prune_undef470 = icmp eq %"struct.rubinius::Object"* %field469, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !39
  %"select ivar471" = select i1 %prune_undef470, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field469, !dbg !39
  %stack_pos472 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %"select ivar471", %"struct.rubinius::Object"** %stack_pos472, !dbg !39
  br label %continue462, !dbg !39

check_class_id441:                                ; preds = %continue372
  %class_pos443 = getelementptr %"struct.rubinius::Object"* %self437, i32 0, i32 0, i32 1, !dbg !39
  %ref_class444 = load %"struct.rubinius::Class"** %class_pos443, !dbg !39
  %class_id_pos445 = getelementptr %"struct.rubinius::Class"* %ref_class444, i32 0, i32 4, !dbg !39
  %class_id446 = load i32* %class_id_pos445, !dbg !39
  %check_class_id447 = icmp eq i32 %class_id446, 1285, !dbg !39
  br i1 %check_class_id447, label %correct_class442, label %visit_push_ivar_fallback434, !dbg !39

correct_class442:                                 ; preds = %check_class_id441
  %obj_array448 = bitcast %"struct.rubinius::Object"* %self437 to %"struct.rubinius::Object"**, !dbg !39
  %field_pos449 = getelementptr %"struct.rubinius::Object"** %obj_array448, i32 5, !dbg !39
  %field450 = load %"struct.rubinius::Object"** %field_pos449, !dbg !39
  %prune_undef451 = icmp eq %"struct.rubinius::Object"* %field450, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !39
  %"select ivar452" = select i1 %prune_undef451, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field450, !dbg !39
  %stack_pos453 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %"select ivar452", %"struct.rubinius::Object"** %stack_pos453, !dbg !39
  br label %continue435, !dbg !39

visit_push_ivar_fallback434:                      ; preds = %check_class_id441, %continue372
  %93 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !39
  %self454 = load %"struct.rubinius::Object"** %93, !dbg !39
  %ivar455 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self454, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !39
  %stack_pos456 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %ivar455, %"struct.rubinius::Object"** %stack_pos456, !dbg !39
  br label %continue435, !dbg !39

class_fallback460:                                ; No predecessors!
  store i32 49, i32* %ip_pos164, !dbg !39
  %94 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 49, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !39
  br label %return_pad126, !dbg !39

serial_fallback461:                               ; No predecessors!
  store i32 49, i32* %ip_pos164, !dbg !39
  %95 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 49, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad126, !dbg !39

continue462:                                      ; preds = %continue435
  %stack_pos476 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  %stack_load477 = load %"struct.rubinius::Object"** %stack_pos476, !dbg !39
  %cast478 = ptrtoint %"struct.rubinius::Object"* %stack_load477 to i64, !dbg !39
  %masked479 = and i64 %cast478, 3, !dbg !39
  %is_reference480 = icmp eq i64 %masked479, 0, !dbg !39
  br i1 %is_reference480, label %check_class_id481, label %class_fallback473, !dbg !39

continue475:                                      ; preds = %check_active530, %continue508
  %send_result532 = phi %"struct.rubinius::Object"* [ %99, %continue508 ], [ %call_site_execute529, %check_active530 ], !dbg !39
  %stack_pos533 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %send_result532, %"struct.rubinius::Object"** %stack_pos533, !dbg !39
  %local_pos534 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 7, !dbg !39
  %stack_pos535 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  %stack_load536 = load %"struct.rubinius::Object"** %stack_pos535, !dbg !39
  store %"struct.rubinius::Object"* %stack_load536, %"struct.rubinius::Object"** %local_pos534, !dbg !39
  %global_serial537 = load i32* inttoptr (i64 22553876 to i32*), !dbg !40
  %constant_cache538 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**), !dbg !40
  %constant_cache_pos539 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 4, !dbg !40
  %constant_scope540 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos539, !dbg !40
  %scope_pos541 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i32 0, i32 1, !dbg !40
  %frame_scope542 = load %"struct.rubinius::ConstantScope"** %scope_pos541, !dbg !40
  %same_scope543 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope540, %frame_scope542, !dbg !40
  br i1 %same_scope543, label %check_serial544, label %use_call546, !dbg !40

check_class_id481:                                ; preds = %continue462
  %class_pos484 = getelementptr %"struct.rubinius::Object"* %stack_load477, i32 0, i32 0, i32 1, !dbg !39
  %ref_class485 = load %"struct.rubinius::Class"** %class_pos484, !dbg !39
  %class_id_pos486 = getelementptr %"struct.rubinius::Class"* %ref_class485, i32 0, i32 4, !dbg !39
  %class_id487 = load i32* %class_id_pos486, !dbg !39
  %check_class_id488 = icmp eq i32 %class_id487, 77, !dbg !39
  br i1 %check_class_id488, label %correct_class482, label %class_fallback473, !dbg !39

correct_class482:                                 ; preds = %check_class_id481
  %serial_id_pos489 = getelementptr %"struct.rubinius::Class"* %ref_class485, i32 0, i32 5, !dbg !39
  %serial_id490 = load i32* %serial_id_pos489, !dbg !39
  %check_serial_id491 = icmp eq i32 %serial_id490, 224, !dbg !39
  br i1 %check_serial_id491, label %correct_serial483, label %serial_fallback474, !dbg !39

correct_serial483:                                ; preds = %correct_class482
  %stack_pos492 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  %stack_load493 = load %"struct.rubinius::Object"** %stack_pos492, !dbg !39
  %cast495 = ptrtoint %"struct.rubinius::Object"* %stack_load493 to i64, !dbg !39
  %masked496 = and i64 %cast495, 3, !dbg !39
  %is_reference497 = icmp eq i64 %masked496, 0, !dbg !39
  br i1 %is_reference497, label %check_class_id498, label %continue494, !dbg !39

serial_fallback474:                               ; preds = %correct_class482
  store i32 52, i32* %ip_pos164, !dbg !39
  %96 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 52, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad126, !dbg !39

check_class_id498:                                ; preds = %correct_serial483
  %class_pos500 = getelementptr %"struct.rubinius::Object"* %stack_load493, i32 0, i32 0, i32 1, !dbg !39
  %ref_class501 = load %"struct.rubinius::Class"** %class_pos500, !dbg !39
  %class_id_pos502 = getelementptr %"struct.rubinius::Class"* %ref_class501, i32 0, i32 4, !dbg !39
  %class_id503 = load i32* %class_id_pos502, !dbg !39
  %check_class_id504 = icmp eq i32 %class_id503, 77, !dbg !39
  br i1 %check_class_id504, label %correct_class499, label %continue494, !dbg !39

correct_class499:                                 ; preds = %check_class_id498
  %arg_float505 = bitcast %"struct.rubinius::Object"* %stack_load493 to %"struct.rubinius::Float"*, !dbg !39
  %arg.value_pos506 = getelementptr %"struct.rubinius::Float"* %arg_float505, i32 0, i32 1, !dbg !39
  %farg507 = load double* %arg.value_pos506, !dbg !39
  br label %continue508, !dbg !39

continue494:                                      ; preds = %check_class_id498, %correct_serial483
  %cast509 = ptrtoint %"struct.rubinius::Object"* %stack_load493 to i64, !dbg !39
  %masked510 = and i64 %cast509, 1, !dbg !39
  %is_fixnum511 = icmp eq i64 %masked510, 1, !dbg !39
  br i1 %is_fixnum511, label %guarded_body512, label %class_fallback473, !dbg !39

guarded_body512:                                  ; preds = %continue494
  %as_int513 = ptrtoint %"struct.rubinius::Object"* %stack_load493 to i64, !dbg !39
  %ashr514 = ashr i64 %as_int513, 1, !dbg !39
  %97 = sitofp i64 %ashr514 to double, !dbg !39
  br label %continue508, !dbg !39

continue508:                                      ; preds = %guarded_body512, %correct_class499
  %rhs515 = phi double [ %farg507, %correct_class499 ], [ %97, %guarded_body512 ], !dbg !39
  %stack_pos516 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  %stack_load517 = load %"struct.rubinius::Object"** %stack_pos516, !dbg !39
  %self_float518 = bitcast %"struct.rubinius::Object"* %stack_load517 to %"struct.rubinius::Float"*, !dbg !39
  %self.value_pos519 = getelementptr %"struct.rubinius::Float"* %self_float518, i32 0, i32 1, !dbg !39
  %fself520 = load double* %self.value_pos519, !dbg !39
  %float.sub521 = fsub double %fself520, %rhs515, !dbg !39
  %result522 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !39, !rbx-classid !37
  %98 = getelementptr %"struct.rubinius::Float"* %result522, i32 0, i32 1, !dbg !39
  store double %float.sub521, double* %98, !dbg !39
  %99 = bitcast %"struct.rubinius::Float"* %result522 to %"struct.rubinius::Object"*, !dbg !39
  br label %continue475, !dbg !39

class_fallback473:                                ; preds = %continue494, %check_class_id481, %continue462
  %stack_pos523 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !39
  %stack_load524 = load %"struct.rubinius::Object"** %stack_pos523, !dbg !39
  store %"struct.rubinius::Object"* %stack_load524, %"struct.rubinius::Object"** %out_args_recv166, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !39
  store i32 1, i32* %out_args_total168, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !39
  %stack_pos525 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos525, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !39
  %cache_const526 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548824 to %"struct.rubinius::CallSite"**), !dbg !39
  %execute_pos527 = getelementptr %"struct.rubinius::CallSite"* %cache_const526, i32 0, i32 2, !dbg !39
  %execute528 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos527, !dbg !39
  store i32 52, i32* %ip_pos164, !dbg !39
  %call_site_execute529 = call %"struct.rubinius::Object"* %execute528(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const526, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check531 = icmp eq %"struct.rubinius::Object"* %call_site_execute529, null, !dbg !39
  br i1 %null_check531, label %bail_out159, label %check_active530, !dbg !39

check_active530:                                  ; preds = %class_fallback473
  br label %continue475, !dbg !39

check_serial544:                                  ; preds = %continue475
  %serial_pos548 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 7, !dbg !40
  %serial549 = load i32* %serial_pos548, !dbg !40
  %use_cache550 = icmp eq i32 %global_serial537, %serial549, !dbg !40
  br i1 %use_cache550, label %use_cache545, label %use_call546, !dbg !40

use_cache545:                                     ; preds = %check_serial544
  %value_pos551 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i32 0, i32 2, !dbg !40
  %cached_value552 = load %"struct.rubinius::Object"** %value_pos551, !dbg !40
  br label %continue547, !dbg !40

use_call546:                                      ; preds = %check_serial544, %continue475
  store i32 58, i32* %ip_pos164, !dbg !40
  %push_const_fast553 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !40
  %null_check556 = icmp eq %"struct.rubinius::Object"* %push_const_fast553, null, !dbg !40
  br i1 %null_check556, label %bail_out159, label %check_active555, !dbg !40

continue547:                                      ; preds = %continue554, %use_cache545
  %constant557 = phi %"struct.rubinius::Object"* [ %cached_value552, %use_cache545 ], [ %push_const_fast553, %continue554 ], !dbg !40, !rbx-classid !41
  %stack_pos558 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !40
  store %"struct.rubinius::Object"* %constant557, %"struct.rubinius::Object"** %stack_pos558, !dbg !40
  %local_pos559 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 5, !dbg !40
  %local560 = load %"struct.rubinius::Object"** %local_pos559, !dbg !40, !rbx-classid !42
  %stack_pos561 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  store %"struct.rubinius::Object"* %local560, %"struct.rubinius::Object"** %stack_pos561, !dbg !40
  %local_pos562 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 5, !dbg !40
  %local563 = load %"struct.rubinius::Object"** %local_pos562, !dbg !40, !rbx-classid !42
  %stack_pos564 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %local563, %"struct.rubinius::Object"** %stack_pos564, !dbg !40
  %stack_pos568 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load569 = load %"struct.rubinius::Object"** %stack_pos568, !dbg !40, !rbx-classid !42
  %cast570 = ptrtoint %"struct.rubinius::Object"* %stack_load569 to i64, !dbg !40
  %masked571 = and i64 %cast570, 3, !dbg !40
  %is_reference572 = icmp eq i64 %masked571, 0, !dbg !40
  br i1 %is_reference572, label %check_class_id573, label %class_fallback565, !dbg !40

continue554:                                      ; preds = %check_active555
  br label %continue547, !dbg !40

check_active555:                                  ; preds = %use_call546
  br label %continue554, !dbg !40

continue567:                                      ; preds = %check_active621, %continue600
  %send_result623 = phi %"struct.rubinius::Object"* [ %103, %continue600 ], [ %call_site_execute620, %check_active621 ], !dbg !40
  %stack_pos624 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  store %"struct.rubinius::Object"* %send_result623, %"struct.rubinius::Object"** %stack_pos624, !dbg !40
  %local_pos625 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 6, !dbg !40
  %local626 = load %"struct.rubinius::Object"** %local_pos625, !dbg !40, !rbx-classid !43
  %stack_pos627 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos627, !dbg !40
  %local_pos628 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 6, !dbg !40
  %local629 = load %"struct.rubinius::Object"** %local_pos628, !dbg !40, !rbx-classid !43
  %stack_pos630 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  store %"struct.rubinius::Object"* %local629, %"struct.rubinius::Object"** %stack_pos630, !dbg !40
  %stack_pos634 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load635 = load %"struct.rubinius::Object"** %stack_pos634, !dbg !40, !rbx-classid !43
  %cast636 = ptrtoint %"struct.rubinius::Object"* %stack_load635 to i64, !dbg !40
  %masked637 = and i64 %cast636, 3, !dbg !40
  %is_reference638 = icmp eq i64 %masked637, 0, !dbg !40
  br i1 %is_reference638, label %check_class_id639, label %class_fallback631, !dbg !40

check_class_id573:                                ; preds = %continue547
  %class_pos576 = getelementptr %"struct.rubinius::Object"* %stack_load569, i32 0, i32 0, i32 1, !dbg !40
  %ref_class577 = load %"struct.rubinius::Class"** %class_pos576, !dbg !40
  %class_id_pos578 = getelementptr %"struct.rubinius::Class"* %ref_class577, i32 0, i32 4, !dbg !40
  %class_id579 = load i32* %class_id_pos578, !dbg !40
  %check_class_id580 = icmp eq i32 %class_id579, 77, !dbg !40
  br i1 %check_class_id580, label %correct_class574, label %class_fallback565, !dbg !40

correct_class574:                                 ; preds = %check_class_id573
  %serial_id_pos581 = getelementptr %"struct.rubinius::Class"* %ref_class577, i32 0, i32 5, !dbg !40
  %serial_id582 = load i32* %serial_id_pos581, !dbg !40
  %check_serial_id583 = icmp eq i32 %serial_id582, 224, !dbg !40
  br i1 %check_serial_id583, label %correct_serial575, label %serial_fallback566, !dbg !40

correct_serial575:                                ; preds = %correct_class574
  %stack_pos584 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load585 = load %"struct.rubinius::Object"** %stack_pos584, !dbg !40, !rbx-classid !42
  %cast587 = ptrtoint %"struct.rubinius::Object"* %stack_load585 to i64, !dbg !40
  %masked588 = and i64 %cast587, 3, !dbg !40
  %is_reference589 = icmp eq i64 %masked588, 0, !dbg !40
  br i1 %is_reference589, label %check_class_id590, label %continue586, !dbg !40

serial_fallback566:                               ; preds = %correct_class574
  store i32 64, i32* %ip_pos164, !dbg !40
  %100 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 64, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

check_class_id590:                                ; preds = %correct_serial575
  %class_pos592 = getelementptr %"struct.rubinius::Object"* %stack_load585, i32 0, i32 0, i32 1, !dbg !40
  %ref_class593 = load %"struct.rubinius::Class"** %class_pos592, !dbg !40
  %class_id_pos594 = getelementptr %"struct.rubinius::Class"* %ref_class593, i32 0, i32 4, !dbg !40
  %class_id595 = load i32* %class_id_pos594, !dbg !40
  %check_class_id596 = icmp eq i32 %class_id595, 77, !dbg !40
  br i1 %check_class_id596, label %correct_class591, label %continue586, !dbg !40

correct_class591:                                 ; preds = %check_class_id590
  %arg_float597 = bitcast %"struct.rubinius::Object"* %stack_load585 to %"struct.rubinius::Float"*, !dbg !40
  %arg.value_pos598 = getelementptr %"struct.rubinius::Float"* %arg_float597, i32 0, i32 1, !dbg !40
  %farg599 = load double* %arg.value_pos598, !dbg !40
  br label %continue600, !dbg !40

continue586:                                      ; preds = %check_class_id590, %correct_serial575
  %cast601 = ptrtoint %"struct.rubinius::Object"* %stack_load585 to i64, !dbg !40
  %masked602 = and i64 %cast601, 1, !dbg !40
  %is_fixnum603 = icmp eq i64 %masked602, 1, !dbg !40
  br i1 %is_fixnum603, label %guarded_body604, label %class_fallback565, !dbg !40

guarded_body604:                                  ; preds = %continue586
  %as_int605 = ptrtoint %"struct.rubinius::Object"* %stack_load585 to i64, !dbg !40
  %ashr606 = ashr i64 %as_int605, 1, !dbg !40
  %101 = sitofp i64 %ashr606 to double, !dbg !40
  br label %continue600, !dbg !40

continue600:                                      ; preds = %guarded_body604, %correct_class591
  %rhs607 = phi double [ %farg599, %correct_class591 ], [ %101, %guarded_body604 ], !dbg !40
  %stack_pos608 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load609 = load %"struct.rubinius::Object"** %stack_pos608, !dbg !40, !rbx-classid !42
  %self_float610 = bitcast %"struct.rubinius::Object"* %stack_load609 to %"struct.rubinius::Float"*, !dbg !40
  %self.value_pos611 = getelementptr %"struct.rubinius::Float"* %self_float610, i32 0, i32 1, !dbg !40
  %fself612 = load double* %self.value_pos611, !dbg !40
  %float.mul = fmul double %fself612, %rhs607, !dbg !40
  %result613 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !40, !rbx-classid !37
  %102 = getelementptr %"struct.rubinius::Float"* %result613, i32 0, i32 1, !dbg !40
  store double %float.mul, double* %102, !dbg !40
  %103 = bitcast %"struct.rubinius::Float"* %result613 to %"struct.rubinius::Object"*, !dbg !40
  br label %continue567, !dbg !40

class_fallback565:                                ; preds = %continue586, %check_class_id573, %continue547
  %stack_pos614 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load615 = load %"struct.rubinius::Object"** %stack_pos614, !dbg !40, !rbx-classid !42
  store %"struct.rubinius::Object"* %stack_load615, %"struct.rubinius::Object"** %out_args_recv166, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !40
  store i32 1, i32* %out_args_total168, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !40
  %stack_pos616 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos616, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !40
  %cache_const617 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548920 to %"struct.rubinius::CallSite"**), !dbg !40
  %execute_pos618 = getelementptr %"struct.rubinius::CallSite"* %cache_const617, i32 0, i32 2, !dbg !40
  %execute619 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos618, !dbg !40
  store i32 64, i32* %ip_pos164, !dbg !40
  %call_site_execute620 = call %"struct.rubinius::Object"* %execute619(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const617, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check622 = icmp eq %"struct.rubinius::Object"* %call_site_execute620, null, !dbg !40
  br i1 %null_check622, label %bail_out159, label %check_active621, !dbg !40

check_active621:                                  ; preds = %class_fallback565
  br label %continue567, !dbg !40

continue633:                                      ; preds = %check_active688, %continue666
  %send_result690 = phi %"struct.rubinius::Object"* [ %107, %continue666 ], [ %call_site_execute687, %check_active688 ], !dbg !40
  %stack_pos691 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %send_result690, %"struct.rubinius::Object"** %stack_pos691, !dbg !40
  %stack_pos695 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load696 = load %"struct.rubinius::Object"** %stack_pos695, !dbg !40
  %cast697 = ptrtoint %"struct.rubinius::Object"* %stack_load696 to i64, !dbg !40
  %masked698 = and i64 %cast697, 3, !dbg !40
  %is_reference699 = icmp eq i64 %masked698, 0, !dbg !40
  br i1 %is_reference699, label %check_class_id700, label %class_fallback692, !dbg !40

check_class_id639:                                ; preds = %continue567
  %class_pos642 = getelementptr %"struct.rubinius::Object"* %stack_load635, i32 0, i32 0, i32 1, !dbg !40
  %ref_class643 = load %"struct.rubinius::Class"** %class_pos642, !dbg !40
  %class_id_pos644 = getelementptr %"struct.rubinius::Class"* %ref_class643, i32 0, i32 4, !dbg !40
  %class_id645 = load i32* %class_id_pos644, !dbg !40
  %check_class_id646 = icmp eq i32 %class_id645, 77, !dbg !40
  br i1 %check_class_id646, label %correct_class640, label %class_fallback631, !dbg !40

correct_class640:                                 ; preds = %check_class_id639
  %serial_id_pos647 = getelementptr %"struct.rubinius::Class"* %ref_class643, i32 0, i32 5, !dbg !40
  %serial_id648 = load i32* %serial_id_pos647, !dbg !40
  %check_serial_id649 = icmp eq i32 %serial_id648, 224, !dbg !40
  br i1 %check_serial_id649, label %correct_serial641, label %serial_fallback632, !dbg !40

correct_serial641:                                ; preds = %correct_class640
  %stack_pos650 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  %stack_load651 = load %"struct.rubinius::Object"** %stack_pos650, !dbg !40, !rbx-classid !43
  %cast653 = ptrtoint %"struct.rubinius::Object"* %stack_load651 to i64, !dbg !40
  %masked654 = and i64 %cast653, 3, !dbg !40
  %is_reference655 = icmp eq i64 %masked654, 0, !dbg !40
  br i1 %is_reference655, label %check_class_id656, label %continue652, !dbg !40

serial_fallback632:                               ; preds = %correct_class640
  store i32 71, i32* %ip_pos164, !dbg !40
  %104 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 71, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

check_class_id656:                                ; preds = %correct_serial641
  %class_pos658 = getelementptr %"struct.rubinius::Object"* %stack_load651, i32 0, i32 0, i32 1, !dbg !40
  %ref_class659 = load %"struct.rubinius::Class"** %class_pos658, !dbg !40
  %class_id_pos660 = getelementptr %"struct.rubinius::Class"* %ref_class659, i32 0, i32 4, !dbg !40
  %class_id661 = load i32* %class_id_pos660, !dbg !40
  %check_class_id662 = icmp eq i32 %class_id661, 77, !dbg !40
  br i1 %check_class_id662, label %correct_class657, label %continue652, !dbg !40

correct_class657:                                 ; preds = %check_class_id656
  %arg_float663 = bitcast %"struct.rubinius::Object"* %stack_load651 to %"struct.rubinius::Float"*, !dbg !40
  %arg.value_pos664 = getelementptr %"struct.rubinius::Float"* %arg_float663, i32 0, i32 1, !dbg !40
  %farg665 = load double* %arg.value_pos664, !dbg !40
  br label %continue666, !dbg !40

continue652:                                      ; preds = %check_class_id656, %correct_serial641
  %cast667 = ptrtoint %"struct.rubinius::Object"* %stack_load651 to i64, !dbg !40
  %masked668 = and i64 %cast667, 1, !dbg !40
  %is_fixnum669 = icmp eq i64 %masked668, 1, !dbg !40
  br i1 %is_fixnum669, label %guarded_body670, label %class_fallback631, !dbg !40

guarded_body670:                                  ; preds = %continue652
  %as_int671 = ptrtoint %"struct.rubinius::Object"* %stack_load651 to i64, !dbg !40
  %ashr672 = ashr i64 %as_int671, 1, !dbg !40
  %105 = sitofp i64 %ashr672 to double, !dbg !40
  br label %continue666, !dbg !40

continue666:                                      ; preds = %guarded_body670, %correct_class657
  %rhs673 = phi double [ %farg665, %correct_class657 ], [ %105, %guarded_body670 ], !dbg !40
  %stack_pos674 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load675 = load %"struct.rubinius::Object"** %stack_pos674, !dbg !40, !rbx-classid !43
  %self_float676 = bitcast %"struct.rubinius::Object"* %stack_load675 to %"struct.rubinius::Float"*, !dbg !40
  %self.value_pos677 = getelementptr %"struct.rubinius::Float"* %self_float676, i32 0, i32 1, !dbg !40
  %fself678 = load double* %self.value_pos677, !dbg !40
  %float.mul679 = fmul double %fself678, %rhs673, !dbg !40
  %result680 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !40, !rbx-classid !37
  %106 = getelementptr %"struct.rubinius::Float"* %result680, i32 0, i32 1, !dbg !40
  store double %float.mul679, double* %106, !dbg !40
  %107 = bitcast %"struct.rubinius::Float"* %result680 to %"struct.rubinius::Object"*, !dbg !40
  br label %continue633, !dbg !40

class_fallback631:                                ; preds = %continue652, %check_class_id639, %continue567
  %stack_pos681 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load682 = load %"struct.rubinius::Object"** %stack_pos681, !dbg !40, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load682, %"struct.rubinius::Object"** %out_args_recv166, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !40
  store i32 1, i32* %out_args_total168, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !40
  %stack_pos683 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos683, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !40
  %cache_const684 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548976 to %"struct.rubinius::CallSite"**), !dbg !40
  %execute_pos685 = getelementptr %"struct.rubinius::CallSite"* %cache_const684, i32 0, i32 2, !dbg !40
  %execute686 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos685, !dbg !40
  store i32 71, i32* %ip_pos164, !dbg !40
  %call_site_execute687 = call %"struct.rubinius::Object"* %execute686(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const684, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check689 = icmp eq %"struct.rubinius::Object"* %call_site_execute687, null, !dbg !40
  br i1 %null_check689, label %bail_out159, label %check_active688, !dbg !40

check_active688:                                  ; preds = %class_fallback631
  br label %continue633, !dbg !40

continue694:                                      ; preds = %check_active748, %continue727
  %send_result750 = phi %"struct.rubinius::Object"* [ %111, %continue727 ], [ %call_site_execute747, %check_active748 ], !dbg !40
  %stack_pos751 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  store %"struct.rubinius::Object"* %send_result750, %"struct.rubinius::Object"** %stack_pos751, !dbg !40
  %local_pos752 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 7, !dbg !40
  %local753 = load %"struct.rubinius::Object"** %local_pos752, !dbg !40, !rbx-classid !44
  %stack_pos754 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %local753, %"struct.rubinius::Object"** %stack_pos754, !dbg !40
  %local_pos755 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 7, !dbg !40
  %local756 = load %"struct.rubinius::Object"** %local_pos755, !dbg !40, !rbx-classid !44
  %stack_pos757 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  store %"struct.rubinius::Object"* %local756, %"struct.rubinius::Object"** %stack_pos757, !dbg !40
  %stack_pos761 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load762 = load %"struct.rubinius::Object"** %stack_pos761, !dbg !40, !rbx-classid !44
  %cast763 = ptrtoint %"struct.rubinius::Object"* %stack_load762 to i64, !dbg !40
  %masked764 = and i64 %cast763, 3, !dbg !40
  %is_reference765 = icmp eq i64 %masked764, 0, !dbg !40
  br i1 %is_reference765, label %check_class_id766, label %class_fallback758, !dbg !40

check_class_id700:                                ; preds = %continue633
  %class_pos703 = getelementptr %"struct.rubinius::Object"* %stack_load696, i32 0, i32 0, i32 1, !dbg !40
  %ref_class704 = load %"struct.rubinius::Class"** %class_pos703, !dbg !40
  %class_id_pos705 = getelementptr %"struct.rubinius::Class"* %ref_class704, i32 0, i32 4, !dbg !40
  %class_id706 = load i32* %class_id_pos705, !dbg !40
  %check_class_id707 = icmp eq i32 %class_id706, 77, !dbg !40
  br i1 %check_class_id707, label %correct_class701, label %class_fallback692, !dbg !40

correct_class701:                                 ; preds = %check_class_id700
  %serial_id_pos708 = getelementptr %"struct.rubinius::Class"* %ref_class704, i32 0, i32 5, !dbg !40
  %serial_id709 = load i32* %serial_id_pos708, !dbg !40
  %check_serial_id710 = icmp eq i32 %serial_id709, 224, !dbg !40
  br i1 %check_serial_id710, label %correct_serial702, label %serial_fallback693, !dbg !40

correct_serial702:                                ; preds = %correct_class701
  %stack_pos711 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load712 = load %"struct.rubinius::Object"** %stack_pos711, !dbg !40
  %cast714 = ptrtoint %"struct.rubinius::Object"* %stack_load712 to i64, !dbg !40
  %masked715 = and i64 %cast714, 3, !dbg !40
  %is_reference716 = icmp eq i64 %masked715, 0, !dbg !40
  br i1 %is_reference716, label %check_class_id717, label %continue713, !dbg !40

serial_fallback693:                               ; preds = %correct_class701
  store i32 74, i32* %ip_pos164, !dbg !40
  %108 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 74, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

check_class_id717:                                ; preds = %correct_serial702
  %class_pos719 = getelementptr %"struct.rubinius::Object"* %stack_load712, i32 0, i32 0, i32 1, !dbg !40
  %ref_class720 = load %"struct.rubinius::Class"** %class_pos719, !dbg !40
  %class_id_pos721 = getelementptr %"struct.rubinius::Class"* %ref_class720, i32 0, i32 4, !dbg !40
  %class_id722 = load i32* %class_id_pos721, !dbg !40
  %check_class_id723 = icmp eq i32 %class_id722, 77, !dbg !40
  br i1 %check_class_id723, label %correct_class718, label %continue713, !dbg !40

correct_class718:                                 ; preds = %check_class_id717
  %arg_float724 = bitcast %"struct.rubinius::Object"* %stack_load712 to %"struct.rubinius::Float"*, !dbg !40
  %arg.value_pos725 = getelementptr %"struct.rubinius::Float"* %arg_float724, i32 0, i32 1, !dbg !40
  %farg726 = load double* %arg.value_pos725, !dbg !40
  br label %continue727, !dbg !40

continue713:                                      ; preds = %check_class_id717, %correct_serial702
  %cast728 = ptrtoint %"struct.rubinius::Object"* %stack_load712 to i64, !dbg !40
  %masked729 = and i64 %cast728, 1, !dbg !40
  %is_fixnum730 = icmp eq i64 %masked729, 1, !dbg !40
  br i1 %is_fixnum730, label %guarded_body731, label %class_fallback692, !dbg !40

guarded_body731:                                  ; preds = %continue713
  %as_int732 = ptrtoint %"struct.rubinius::Object"* %stack_load712 to i64, !dbg !40
  %ashr733 = ashr i64 %as_int732, 1, !dbg !40
  %109 = sitofp i64 %ashr733 to double, !dbg !40
  br label %continue727, !dbg !40

continue727:                                      ; preds = %guarded_body731, %correct_class718
  %rhs734 = phi double [ %farg726, %correct_class718 ], [ %109, %guarded_body731 ], !dbg !40
  %stack_pos735 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load736 = load %"struct.rubinius::Object"** %stack_pos735, !dbg !40
  %self_float737 = bitcast %"struct.rubinius::Object"* %stack_load736 to %"struct.rubinius::Float"*, !dbg !40
  %self.value_pos738 = getelementptr %"struct.rubinius::Float"* %self_float737, i32 0, i32 1, !dbg !40
  %fself739 = load double* %self.value_pos738, !dbg !40
  %float.add = fadd double %fself739, %rhs734, !dbg !40
  %result740 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !40, !rbx-classid !37
  %110 = getelementptr %"struct.rubinius::Float"* %result740, i32 0, i32 1, !dbg !40
  store double %float.add, double* %110, !dbg !40
  %111 = bitcast %"struct.rubinius::Float"* %result740 to %"struct.rubinius::Object"*, !dbg !40
  br label %continue694, !dbg !40

class_fallback692:                                ; preds = %continue713, %check_class_id700, %continue633
  %stack_pos741 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load742 = load %"struct.rubinius::Object"** %stack_pos741, !dbg !40
  store %"struct.rubinius::Object"* %stack_load742, %"struct.rubinius::Object"** %out_args_recv166, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !40
  store i32 1, i32* %out_args_total168, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !40
  %stack_pos743 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos743, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !40
  %cache_const744 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549000 to %"struct.rubinius::CallSite"**), !dbg !40
  %execute_pos745 = getelementptr %"struct.rubinius::CallSite"* %cache_const744, i32 0, i32 2, !dbg !40
  %execute746 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos745, !dbg !40
  store i32 74, i32* %ip_pos164, !dbg !40
  %call_site_execute747 = call %"struct.rubinius::Object"* %execute746(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const744, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check749 = icmp eq %"struct.rubinius::Object"* %call_site_execute747, null, !dbg !40
  br i1 %null_check749, label %bail_out159, label %check_active748, !dbg !40

check_active748:                                  ; preds = %class_fallback692
  br label %continue694, !dbg !40

continue760:                                      ; preds = %check_active815, %continue793
  %send_result817 = phi %"struct.rubinius::Object"* [ %115, %continue793 ], [ %call_site_execute814, %check_active815 ], !dbg !40
  %stack_pos818 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"* %send_result817, %"struct.rubinius::Object"** %stack_pos818, !dbg !40
  %stack_pos822 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load823 = load %"struct.rubinius::Object"** %stack_pos822, !dbg !40
  %cast824 = ptrtoint %"struct.rubinius::Object"* %stack_load823 to i64, !dbg !40
  %masked825 = and i64 %cast824, 3, !dbg !40
  %is_reference826 = icmp eq i64 %masked825, 0, !dbg !40
  br i1 %is_reference826, label %check_class_id827, label %class_fallback819, !dbg !40

check_class_id766:                                ; preds = %continue694
  %class_pos769 = getelementptr %"struct.rubinius::Object"* %stack_load762, i32 0, i32 0, i32 1, !dbg !40
  %ref_class770 = load %"struct.rubinius::Class"** %class_pos769, !dbg !40
  %class_id_pos771 = getelementptr %"struct.rubinius::Class"* %ref_class770, i32 0, i32 4, !dbg !40
  %class_id772 = load i32* %class_id_pos771, !dbg !40
  %check_class_id773 = icmp eq i32 %class_id772, 77, !dbg !40
  br i1 %check_class_id773, label %correct_class767, label %class_fallback758, !dbg !40

correct_class767:                                 ; preds = %check_class_id766
  %serial_id_pos774 = getelementptr %"struct.rubinius::Class"* %ref_class770, i32 0, i32 5, !dbg !40
  %serial_id775 = load i32* %serial_id_pos774, !dbg !40
  %check_serial_id776 = icmp eq i32 %serial_id775, 224, !dbg !40
  br i1 %check_serial_id776, label %correct_serial768, label %serial_fallback759, !dbg !40

correct_serial768:                                ; preds = %correct_class767
  %stack_pos777 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  %stack_load778 = load %"struct.rubinius::Object"** %stack_pos777, !dbg !40, !rbx-classid !44
  %cast780 = ptrtoint %"struct.rubinius::Object"* %stack_load778 to i64, !dbg !40
  %masked781 = and i64 %cast780, 3, !dbg !40
  %is_reference782 = icmp eq i64 %masked781, 0, !dbg !40
  br i1 %is_reference782, label %check_class_id783, label %continue779, !dbg !40

serial_fallback759:                               ; preds = %correct_class767
  store i32 81, i32* %ip_pos164, !dbg !40
  %112 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 81, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

check_class_id783:                                ; preds = %correct_serial768
  %class_pos785 = getelementptr %"struct.rubinius::Object"* %stack_load778, i32 0, i32 0, i32 1, !dbg !40
  %ref_class786 = load %"struct.rubinius::Class"** %class_pos785, !dbg !40
  %class_id_pos787 = getelementptr %"struct.rubinius::Class"* %ref_class786, i32 0, i32 4, !dbg !40
  %class_id788 = load i32* %class_id_pos787, !dbg !40
  %check_class_id789 = icmp eq i32 %class_id788, 77, !dbg !40
  br i1 %check_class_id789, label %correct_class784, label %continue779, !dbg !40

correct_class784:                                 ; preds = %check_class_id783
  %arg_float790 = bitcast %"struct.rubinius::Object"* %stack_load778 to %"struct.rubinius::Float"*, !dbg !40
  %arg.value_pos791 = getelementptr %"struct.rubinius::Float"* %arg_float790, i32 0, i32 1, !dbg !40
  %farg792 = load double* %arg.value_pos791, !dbg !40
  br label %continue793, !dbg !40

continue779:                                      ; preds = %check_class_id783, %correct_serial768
  %cast794 = ptrtoint %"struct.rubinius::Object"* %stack_load778 to i64, !dbg !40
  %masked795 = and i64 %cast794, 1, !dbg !40
  %is_fixnum796 = icmp eq i64 %masked795, 1, !dbg !40
  br i1 %is_fixnum796, label %guarded_body797, label %class_fallback758, !dbg !40

guarded_body797:                                  ; preds = %continue779
  %as_int798 = ptrtoint %"struct.rubinius::Object"* %stack_load778 to i64, !dbg !40
  %ashr799 = ashr i64 %as_int798, 1, !dbg !40
  %113 = sitofp i64 %ashr799 to double, !dbg !40
  br label %continue793, !dbg !40

continue793:                                      ; preds = %guarded_body797, %correct_class784
  %rhs800 = phi double [ %farg792, %correct_class784 ], [ %113, %guarded_body797 ], !dbg !40
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load802 = load %"struct.rubinius::Object"** %stack_pos801, !dbg !40, !rbx-classid !44
  %self_float803 = bitcast %"struct.rubinius::Object"* %stack_load802 to %"struct.rubinius::Float"*, !dbg !40
  %self.value_pos804 = getelementptr %"struct.rubinius::Float"* %self_float803, i32 0, i32 1, !dbg !40
  %fself805 = load double* %self.value_pos804, !dbg !40
  %float.mul806 = fmul double %fself805, %rhs800, !dbg !40
  %result807 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !40, !rbx-classid !37
  %114 = getelementptr %"struct.rubinius::Float"* %result807, i32 0, i32 1, !dbg !40
  store double %float.mul806, double* %114, !dbg !40
  %115 = bitcast %"struct.rubinius::Float"* %result807 to %"struct.rubinius::Object"*, !dbg !40
  br label %continue760, !dbg !40

class_fallback758:                                ; preds = %continue779, %check_class_id766, %continue694
  %stack_pos808 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load809 = load %"struct.rubinius::Object"** %stack_pos808, !dbg !40, !rbx-classid !44
  store %"struct.rubinius::Object"* %stack_load809, %"struct.rubinius::Object"** %out_args_recv166, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !40
  store i32 1, i32* %out_args_total168, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !40
  %stack_pos810 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos810, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !40
  %cache_const811 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549056 to %"struct.rubinius::CallSite"**), !dbg !40
  %execute_pos812 = getelementptr %"struct.rubinius::CallSite"* %cache_const811, i32 0, i32 2, !dbg !40
  %execute813 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos812, !dbg !40
  store i32 81, i32* %ip_pos164, !dbg !40
  %call_site_execute814 = call %"struct.rubinius::Object"* %execute813(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const811, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute814, null, !dbg !40
  br i1 %null_check816, label %bail_out159, label %check_active815, !dbg !40

check_active815:                                  ; preds = %class_fallback758
  br label %continue760, !dbg !40

continue821:                                      ; preds = %check_active876, %continue854
  %send_result878 = phi %"struct.rubinius::Object"* [ %119, %continue854 ], [ %call_site_execute875, %check_active876 ], !dbg !40
  %stack_pos879 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %stack_pos879, !dbg !40
  %stack_pos883 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !40
  %stack_load884 = load %"struct.rubinius::Object"** %stack_pos883, !dbg !40, !rbx-classid !41
  %cast885 = ptrtoint %"struct.rubinius::Object"* %stack_load884 to i64, !dbg !40
  %masked886 = and i64 %cast885, 3, !dbg !40
  %is_reference887 = icmp eq i64 %masked886, 0, !dbg !40
  br i1 %is_reference887, label %check_class_id888, label %class_fallback880, !dbg !40

check_class_id827:                                ; preds = %continue760
  %class_pos830 = getelementptr %"struct.rubinius::Object"* %stack_load823, i32 0, i32 0, i32 1, !dbg !40
  %ref_class831 = load %"struct.rubinius::Class"** %class_pos830, !dbg !40
  %class_id_pos832 = getelementptr %"struct.rubinius::Class"* %ref_class831, i32 0, i32 4, !dbg !40
  %class_id833 = load i32* %class_id_pos832, !dbg !40
  %check_class_id834 = icmp eq i32 %class_id833, 77, !dbg !40
  br i1 %check_class_id834, label %correct_class828, label %class_fallback819, !dbg !40

correct_class828:                                 ; preds = %check_class_id827
  %serial_id_pos835 = getelementptr %"struct.rubinius::Class"* %ref_class831, i32 0, i32 5, !dbg !40
  %serial_id836 = load i32* %serial_id_pos835, !dbg !40
  %check_serial_id837 = icmp eq i32 %serial_id836, 224, !dbg !40
  br i1 %check_serial_id837, label %correct_serial829, label %serial_fallback820, !dbg !40

correct_serial829:                                ; preds = %correct_class828
  %stack_pos838 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  %stack_load839 = load %"struct.rubinius::Object"** %stack_pos838, !dbg !40
  %cast841 = ptrtoint %"struct.rubinius::Object"* %stack_load839 to i64, !dbg !40
  %masked842 = and i64 %cast841, 3, !dbg !40
  %is_reference843 = icmp eq i64 %masked842, 0, !dbg !40
  br i1 %is_reference843, label %check_class_id844, label %continue840, !dbg !40

serial_fallback820:                               ; preds = %correct_class828
  store i32 84, i32* %ip_pos164, !dbg !40
  %116 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 84, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

check_class_id844:                                ; preds = %correct_serial829
  %class_pos846 = getelementptr %"struct.rubinius::Object"* %stack_load839, i32 0, i32 0, i32 1, !dbg !40
  %ref_class847 = load %"struct.rubinius::Class"** %class_pos846, !dbg !40
  %class_id_pos848 = getelementptr %"struct.rubinius::Class"* %ref_class847, i32 0, i32 4, !dbg !40
  %class_id849 = load i32* %class_id_pos848, !dbg !40
  %check_class_id850 = icmp eq i32 %class_id849, 77, !dbg !40
  br i1 %check_class_id850, label %correct_class845, label %continue840, !dbg !40

correct_class845:                                 ; preds = %check_class_id844
  %arg_float851 = bitcast %"struct.rubinius::Object"* %stack_load839 to %"struct.rubinius::Float"*, !dbg !40
  %arg.value_pos852 = getelementptr %"struct.rubinius::Float"* %arg_float851, i32 0, i32 1, !dbg !40
  %farg853 = load double* %arg.value_pos852, !dbg !40
  br label %continue854, !dbg !40

continue840:                                      ; preds = %check_class_id844, %correct_serial829
  %cast855 = ptrtoint %"struct.rubinius::Object"* %stack_load839 to i64, !dbg !40
  %masked856 = and i64 %cast855, 1, !dbg !40
  %is_fixnum857 = icmp eq i64 %masked856, 1, !dbg !40
  br i1 %is_fixnum857, label %guarded_body858, label %class_fallback819, !dbg !40

guarded_body858:                                  ; preds = %continue840
  %as_int859 = ptrtoint %"struct.rubinius::Object"* %stack_load839 to i64, !dbg !40
  %ashr860 = ashr i64 %as_int859, 1, !dbg !40
  %117 = sitofp i64 %ashr860 to double, !dbg !40
  br label %continue854, !dbg !40

continue854:                                      ; preds = %guarded_body858, %correct_class845
  %rhs861 = phi double [ %farg853, %correct_class845 ], [ %117, %guarded_body858 ], !dbg !40
  %stack_pos862 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load863 = load %"struct.rubinius::Object"** %stack_pos862, !dbg !40
  %self_float864 = bitcast %"struct.rubinius::Object"* %stack_load863 to %"struct.rubinius::Float"*, !dbg !40
  %self.value_pos865 = getelementptr %"struct.rubinius::Float"* %self_float864, i32 0, i32 1, !dbg !40
  %fself866 = load double* %self.value_pos865, !dbg !40
  %float.add867 = fadd double %fself866, %rhs861, !dbg !40
  %result868 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !40, !rbx-classid !37
  %118 = getelementptr %"struct.rubinius::Float"* %result868, i32 0, i32 1, !dbg !40
  store double %float.add867, double* %118, !dbg !40
  %119 = bitcast %"struct.rubinius::Float"* %result868 to %"struct.rubinius::Object"*, !dbg !40
  br label %continue821, !dbg !40

class_fallback819:                                ; preds = %continue840, %check_class_id827, %continue760
  %stack_pos869 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load870 = load %"struct.rubinius::Object"** %stack_pos869, !dbg !40
  store %"struct.rubinius::Object"* %stack_load870, %"struct.rubinius::Object"** %out_args_recv166, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !40
  store i32 1, i32* %out_args_total168, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !40
  %stack_pos871 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos871, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !40
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549080 to %"struct.rubinius::CallSite"**), !dbg !40
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i32 0, i32 2, !dbg !40
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, !dbg !40
  store i32 84, i32* %ip_pos164, !dbg !40
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !40
  br i1 %null_check877, label %bail_out159, label %check_active876, !dbg !40

check_active876:                                  ; preds = %class_fallback819
  br label %continue821, !dbg !40

continue882:                                      ; preds = %continue1313
  %local_pos1317 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 8, !dbg !40
  %stack_pos1318 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !40
  %stack_load1319 = load %"struct.rubinius::Object"** %stack_pos1318, !dbg !40
  store %"struct.rubinius::Object"* %stack_load1319, %"struct.rubinius::Object"** %local_pos1317, !dbg !40
  %local_pos1320 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 2, !dbg !45
  %local1321 = load %"struct.rubinius::Object"** %local_pos1320, !dbg !45, !rbx-classid !46
  %stack_pos1322 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %local1321, %"struct.rubinius::Object"** %stack_pos1322, !dbg !45
  %local_pos1323 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 8, !dbg !45
  %local1324 = load %"struct.rubinius::Object"** %local_pos1323, !dbg !45, !rbx-classid !47
  %stack_pos1325 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %local1324, %"struct.rubinius::Object"** %stack_pos1325, !dbg !45
  %local_pos1326 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 8, !dbg !45
  %local1327 = load %"struct.rubinius::Object"** %local_pos1326, !dbg !45, !rbx-classid !47
  %stack_pos1328 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  store %"struct.rubinius::Object"* %local1327, %"struct.rubinius::Object"** %stack_pos1328, !dbg !45
  %stack_pos1332 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1333 = load %"struct.rubinius::Object"** %stack_pos1332, !dbg !45, !rbx-classid !47
  %cast1334 = ptrtoint %"struct.rubinius::Object"* %stack_load1333 to i64, !dbg !45
  %masked1335 = and i64 %cast1334, 3, !dbg !45
  %is_reference1336 = icmp eq i64 %masked1335, 0, !dbg !45
  br i1 %is_reference1336, label %check_class_id1337, label %class_fallback1329, !dbg !45

check_class_id888:                                ; preds = %continue821
  %class_pos891 = getelementptr %"struct.rubinius::Object"* %stack_load884, i32 0, i32 0, i32 1, !dbg !40
  %ref_class892 = load %"struct.rubinius::Class"** %class_pos891, !dbg !40
  %class_id_pos893 = getelementptr %"struct.rubinius::Class"* %ref_class892, i32 0, i32 4, !dbg !40
  %class_id894 = load i32* %class_id_pos893, !dbg !40
  %check_class_id895 = icmp eq i32 %class_id894, 779, !dbg !40
  br i1 %check_class_id895, label %correct_class889, label %class_fallback880, !dbg !40

correct_class889:                                 ; preds = %check_class_id888
  %serial_id_pos896 = getelementptr %"struct.rubinius::Class"* %ref_class892, i32 0, i32 5, !dbg !40
  %serial_id897 = load i32* %serial_id_pos896, !dbg !40
  %check_serial_id898 = icmp eq i32 %serial_id897, 7, !dbg !40
  br i1 %check_serial_id898, label %correct_serial890, label %serial_fallback881, !dbg !40

class_fallback880:                                ; preds = %check_class_id888, %continue821
  store i32 87, i32* %ip_pos164, !dbg !40
  %120 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !40
  br label %return_pad126, !dbg !40

correct_serial890:                                ; preds = %correct_class889
  %stack_pos901 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !40
  %stack_load902 = load %"struct.rubinius::Object"** %stack_pos901, !dbg !40
  %stack_pos903 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !40
  %stack_load904 = load %"struct.rubinius::Object"** %stack_pos903, !dbg !40, !rbx-classid !41
  br label %inline_entry905, !dbg !40

serial_fallback881:                               ; preds = %correct_class889
  store i32 87, i32* %ip_pos164, !dbg !40
  %121 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !40
  br label %return_pad126, !dbg !40

inline_entry905:                                  ; preds = %correct_serial890
  %call_frame908 = bitcast %"struct.rubinius::Object"** %cfstk907 to %"struct.rubinius::CallFrame"*, !dbg !48
  %stack909 = getelementptr %"struct.rubinius::Object"** %cfstk907, i32 9, !dbg !48
  %vars911 = bitcast %"struct.rubinius::Object"** %var_mem910 to %"struct.rubinius::StackVariables"*, !dbg !48
  %122 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 0, !dbg !48
  store %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::CallFrame"** %122, !dbg !48
  %123 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 2, !dbg !48
  store i8* inttoptr (i64 140495703216576 to i8*), i8** %123, !dbg !48
  %compiled_code912 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495703216576 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !48
  %124 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 3, !dbg !48
  store %"struct.rubinius::CompiledCode"* %compiled_code912, %"struct.rubinius::CompiledCode"** %124, !dbg !48
  %constant_scope_pos913 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code912, i32 0, i32 13, !dbg !48
  %constant_scope914 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos913, !dbg !48
  %125 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !48
  store %"struct.rubinius::ConstantScope"* %constant_scope914, %"struct.rubinius::ConstantScope"** %125, !dbg !48
  %126 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 4, !dbg !48
  store i32 12, i32* %126, !dbg !48
  %127 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 5, !dbg !48
  store i32 0, i32* %127, !dbg !48
  %128 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 8, !dbg !48
  store %"struct.rubinius::StackVariables"* %vars911, %"struct.rubinius::StackVariables"** %128, !dbg !48
  %stack_pos915 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos915, !dbg !48
  %stack_pos916 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos916, !dbg !48
  %stack_pos917 = getelementptr %"struct.rubinius::Object"** %stack909, i32 2, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos917, !dbg !48
  %stack_pos918 = getelementptr %"struct.rubinius::Object"** %stack909, i32 3, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos918, !dbg !48
  %module919 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140495703216576 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !48
  %129 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 0, !dbg !48
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %129, !dbg !48
  %130 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 2, !dbg !48
  store %"struct.rubinius::Object"* %stack_load904, %"struct.rubinius::Object"** %130, !dbg !48
  %131 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 4, !dbg !48
  store %"struct.rubinius::Module"* %module919, %"struct.rubinius::Module"** %131, !dbg !48
  %132 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 3, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %132, !dbg !48
  %133 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 1, !dbg !48
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %133, !dbg !48
  %134 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 5, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %134, !dbg !48
  %local_pos920 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos920, !dbg !48
  %local_pos921 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %stack_load902, %"struct.rubinius::Object"** %local_pos921, !dbg !48
  br label %method_body906, !dbg !48

bail_out922:                                      ; preds = %continue1298, %continue1277, %use_call1276, %use_call1220, %use_call1191, %use_call1166, %class_fallback1103, %ip25, %use_call1061, %use_call1037, %class_fallback987, %continue1008, %use_call946
  %rth923 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !48
  br i1 %rth923, label %ret_raise_val924, label %ret_null925, !dbg !48

ret_raise_val924:                                 ; preds = %bail_out922
  %crv926 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !48
  br label %return_pad899, !dbg !48

ret_null925:                                      ; preds = %bail_out922
  br label %return_pad899, !dbg !48

method_body906:                                   ; preds = %inline_entry905
  %ip_pos927 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 5, !dbg !48
  %out_args_name928 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !48
  %out_args_recv929 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !48
  %out_args_block930 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !48
  %out_args_total931 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !48
  %out_args_arguments932 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !48
  %out_args_container933 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !48
  %local_pos934 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !49
  %local935 = load %"struct.rubinius::Object"** %local_pos934, !dbg !49, !rbx-classid !21
  %stack_pos936 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %local935, %"struct.rubinius::Object"** %stack_pos936, !dbg !49
  %global_serial937 = load i32* inttoptr (i64 22553876 to i32*), !dbg !49
  %constant_cache938 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos939 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i32 0, i32 4, !dbg !49
  %constant_scope940 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos939, !dbg !49
  %scope_pos941 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !49
  %frame_scope942 = load %"struct.rubinius::ConstantScope"** %scope_pos941, !dbg !49
  %same_scope943 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope940, %frame_scope942, !dbg !49
  br i1 %same_scope943, label %check_serial944, label %use_call946, !dbg !49

check_serial944:                                  ; preds = %method_body906
  %serial_pos948 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i32 0, i32 7, !dbg !49
  %serial949 = load i32* %serial_pos948, !dbg !49
  %use_cache950 = icmp eq i32 %global_serial937, %serial949, !dbg !49
  br i1 %use_cache950, label %use_cache945, label %use_call946, !dbg !49

use_cache945:                                     ; preds = %check_serial944
  %value_pos951 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i32 0, i32 2, !dbg !49
  %cached_value952 = load %"struct.rubinius::Object"** %value_pos951, !dbg !49
  br label %continue947, !dbg !49

use_call946:                                      ; preds = %check_serial944, %method_body906
  store i32 2, i32* %ip_pos927, !dbg !49
  %push_const_fast953 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check956 = icmp eq %"struct.rubinius::Object"* %push_const_fast953, null, !dbg !49
  br i1 %null_check956, label %bail_out922, label %check_active955, !dbg !49

continue947:                                      ; preds = %continue954, %use_cache945
  %constant957 = phi %"struct.rubinius::Object"* [ %cached_value952, %use_cache945 ], [ %push_const_fast953, %continue954 ], !dbg !49, !rbx-classid !50
  %stack_pos958 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %constant957, %"struct.rubinius::Object"** %stack_pos958, !dbg !49
  %stack_pos962 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load963 = load %"struct.rubinius::Object"** %stack_pos962, !dbg !49, !rbx-classid !21
  %stack_pos964 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !49
  %stack_load965 = load %"struct.rubinius::Object"** %stack_pos964, !dbg !49, !rbx-classid !50
  %cast969 = ptrtoint %"struct.rubinius::Object"* %stack_load963 to i64, !dbg !49
  %masked970 = and i64 %cast969, 3, !dbg !49
  %is_reference971 = icmp eq i64 %masked970, 0, !dbg !49
  br i1 %is_reference971, label %use_cache968, label %negative, !dbg !49

continue954:                                      ; preds = %check_active955
  br label %continue947, !dbg !49

check_active955:                                  ; preds = %use_call946
  br label %continue954, !dbg !49

class_fallback959:                                ; No predecessors!
  store i32 4, i32* %ip_pos927, !dbg !49
  %135 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !49
  br label %return_pad899, !dbg !49

serial_fallback960:                               ; No predecessors!
  store i32 4, i32* %ip_pos927, !dbg !49
  %136 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 4, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !49
  br label %return_pad899, !dbg !49

continue961:                                      ; preds = %continue966
  %stack_pos975 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load976 = load %"struct.rubinius::Object"** %stack_pos975, !dbg !49
  %stack_pos977 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %stack_load976, %"struct.rubinius::Object"** %stack_pos977, !dbg !49
  %stack_pos978 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !49
  %stack_load979 = load %"struct.rubinius::Object"** %stack_pos978, !dbg !49
  %as_int980 = ptrtoint %"struct.rubinius::Object"* %stack_load979 to i64, !dbg !49
  %and981 = and i64 %as_int980, 15, !dbg !49
  %is_true982 = icmp eq i64 %and981, 10, !dbg !49
  br i1 %is_true982, label %ip16, label %continue983, !dbg !49

continue966:                                      ; preds = %use_call967, %negative, %positive
  %constant973 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call967 ], !dbg !49
  %stack_pos974 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %constant973, %"struct.rubinius::Object"** %stack_pos974, !dbg !49
  br label %continue961, !dbg !49

use_call967:                                      ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load963, %"struct.rubinius::Object"* %stack_load965) #0, !dbg !49
  br label %continue966, !dbg !49

positive:                                         ; preds = %use_cache968
  br label %continue966, !dbg !49

negative:                                         ; preds = %use_cache968, %continue947
  br label %continue966, !dbg !49

use_cache968:                                     ; preds = %continue947
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load963, i32 0, i32 0, i32 0, i32 0, !dbg !49
  %flags972 = load i64* %word_pos, !dbg !49
  %mask = and i64 %flags972, 255, !dbg !49
  %is_type = icmp eq i64 %mask, 35, !dbg !49
  br i1 %is_type, label %positive, label %negative, !dbg !49

continue983:                                      ; preds = %continue961
  br label %ip10, !dbg !49

ip10:                                             ; preds = %continue983
  %local_pos984 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !49
  %local985 = load %"struct.rubinius::Object"** %local_pos984, !dbg !49, !rbx-classid !21
  %stack_pos986 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %local985, %"struct.rubinius::Object"** %stack_pos986, !dbg !49
  %stack_pos990 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load991 = load %"struct.rubinius::Object"** %stack_pos990, !dbg !49, !rbx-classid !21
  %cast992 = ptrtoint %"struct.rubinius::Object"* %stack_load991 to i64, !dbg !49
  %masked993 = and i64 %cast992, 3, !dbg !49
  %is_reference994 = icmp eq i64 %masked993, 0, !dbg !49
  br i1 %is_reference994, label %check_class_id995, label %class_fallback987, !dbg !49

continue989:                                      ; preds = %check_active1018, %continue1009
  %send_result1020 = phi %"struct.rubinius::Object"* [ %prim_value, %continue1009 ], [ %call_site_execute1017, %check_active1018 ], !dbg !49
  %stack_pos1021 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %send_result1020, %"struct.rubinius::Object"** %stack_pos1021, !dbg !49
  br label %ip16, !dbg !49

ip16:                                             ; preds = %continue989, %continue961
  %stack_pos1022 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load1023 = load %"struct.rubinius::Object"** %stack_pos1022, !dbg !49
  %as_int1024 = ptrtoint %"struct.rubinius::Object"* %stack_load1023 to i64, !dbg !49
  %and1025 = and i64 %as_int1024, 15, !dbg !49
  %is_true1026 = icmp eq i64 %and1025, 10, !dbg !49
  br i1 %is_true1026, label %ip25, label %continue1027, !dbg !49

check_class_id995:                                ; preds = %ip10
  %class_pos998 = getelementptr %"struct.rubinius::Object"* %stack_load991, i32 0, i32 0, i32 1, !dbg !49
  %ref_class999 = load %"struct.rubinius::Class"** %class_pos998, !dbg !49
  %class_id_pos1000 = getelementptr %"struct.rubinius::Class"* %ref_class999, i32 0, i32 4, !dbg !49
  %class_id1001 = load i32* %class_id_pos1000, !dbg !49
  %check_class_id1002 = icmp eq i32 %class_id1001, 77, !dbg !49
  br i1 %check_class_id1002, label %correct_class996, label %class_fallback987, !dbg !49

correct_class996:                                 ; preds = %check_class_id995
  %serial_id_pos1003 = getelementptr %"struct.rubinius::Class"* %ref_class999, i32 0, i32 5, !dbg !49
  %serial_id1004 = load i32* %serial_id_pos1003, !dbg !49
  %check_serial_id1005 = icmp eq i32 %serial_id1004, 224, !dbg !49
  br i1 %check_serial_id1005, label %correct_serial997, label %serial_fallback988, !dbg !49

class_fallback987:                                ; preds = %correct_serial997, %check_class_id995, %ip10
  %stack_pos1012 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load1013 = load %"struct.rubinius::Object"** %stack_pos1012, !dbg !49, !rbx-classid !21
  store %"struct.rubinius::Object"* %stack_load1013, %"struct.rubinius::Object"** %out_args_recv929, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name928, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block930, !dbg !49
  store i32 0, i32* %out_args_total931, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container933, !dbg !49
  %cache_const1014 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos1015 = getelementptr %"struct.rubinius::CallSite"* %cache_const1014, i32 0, i32 2, !dbg !49
  %execute1016 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1015, !dbg !49
  store i32 13, i32* %ip_pos927, !dbg !49
  %call_site_execute1017 = call %"struct.rubinius::Object"* %execute1016(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1014, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check1019 = icmp eq %"struct.rubinius::Object"* %call_site_execute1017, null, !dbg !49
  br i1 %null_check1019, label %bail_out922, label %check_active1018, !dbg !49

correct_serial997:                                ; preds = %correct_class996
  %stack_pos1006 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load1007 = load %"struct.rubinius::Object"** %stack_pos1006, !dbg !49, !rbx-classid !21
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1007) #1, !dbg !49
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !49
  %137 = icmp eq i64 %ptr2int, 34, !dbg !49
  br i1 %137, label %class_fallback987, label %continue1008, !dbg !49

serial_fallback988:                               ; preds = %correct_class996
  store i32 13, i32* %ip_pos927, !dbg !49
  %138 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !49
  br label %return_pad899, !dbg !49

continue1008:                                     ; preds = %correct_serial997
  %null_check1011 = icmp eq %"struct.rubinius::Object"* %prim_value, null, !dbg !49
  br i1 %null_check1011, label %bail_out922, label %check_active1010, !dbg !49

continue1009:                                     ; preds = %check_active1010
  br label %continue989, !dbg !49

check_active1010:                                 ; preds = %continue1008
  br label %continue1009, !dbg !49

check_active1018:                                 ; preds = %class_fallback987
  br label %continue989, !dbg !49

continue1027:                                     ; preds = %ip16
  br label %ip18, !dbg !49

ip18:                                             ; preds = %continue1027
  %global_serial1028 = load i32* inttoptr (i64 22553876 to i32*), !dbg !49
  %constant_cache1029 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos1030 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i32 0, i32 4, !dbg !49
  %constant_scope1031 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1030, !dbg !49
  %scope_pos1032 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !49
  %frame_scope1033 = load %"struct.rubinius::ConstantScope"** %scope_pos1032, !dbg !49
  %same_scope1034 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1031, %frame_scope1033, !dbg !49
  br i1 %same_scope1034, label %check_serial1035, label %use_call1037, !dbg !49

check_serial1035:                                 ; preds = %ip18
  %serial_pos1039 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i32 0, i32 7, !dbg !49
  %serial1040 = load i32* %serial_pos1039, !dbg !49
  %use_cache1041 = icmp eq i32 %global_serial1028, %serial1040, !dbg !49
  br i1 %use_cache1041, label %use_cache1036, label %use_call1037, !dbg !49

use_cache1036:                                    ; preds = %check_serial1035
  %value_pos1042 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i32 0, i32 2, !dbg !49
  %cached_value1043 = load %"struct.rubinius::Object"** %value_pos1042, !dbg !49
  br label %continue1038, !dbg !49

use_call1037:                                     ; preds = %check_serial1035, %ip18
  store i32 18, i32* %ip_pos927, !dbg !49
  %push_const_fast1044 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check1047 = icmp eq %"struct.rubinius::Object"* %push_const_fast1044, null, !dbg !49
  br i1 %null_check1047, label %bail_out922, label %check_active1046, !dbg !49

continue1038:                                     ; preds = %continue1045, %use_cache1036
  %constant1048 = phi %"struct.rubinius::Object"* [ %cached_value1043, %use_cache1036 ], [ %push_const_fast1044, %continue1045 ], !dbg !49, !rbx-classid !51
  %stack_pos1049 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %constant1048, %"struct.rubinius::Object"** %stack_pos1049, !dbg !49
  %stack_pos1050 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load1051 = load %"struct.rubinius::Object"** %stack_pos1050, !dbg !49, !rbx-classid !51
  %global_serial1052 = load i32* inttoptr (i64 22553876 to i32*), !dbg !49
  %constant_cache1053 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos1054 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i32 0, i32 4, !dbg !49
  %constant_scope1055 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1054, !dbg !49
  %scope_pos1056 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !49
  %frame_scope1057 = load %"struct.rubinius::ConstantScope"** %scope_pos1056, !dbg !49
  %same_scope1058 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1055, %frame_scope1057, !dbg !49
  br i1 %same_scope1058, label %check_serial1059, label %use_call1061, !dbg !49

continue1045:                                     ; preds = %check_active1046
  br label %continue1038, !dbg !49

check_active1046:                                 ; preds = %use_call1037
  br label %continue1045, !dbg !49

check_serial1059:                                 ; preds = %continue1038
  %serial_pos1063 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i32 0, i32 7, !dbg !49
  %serial1064 = load i32* %serial_pos1063, !dbg !49
  %use_under = icmp eq i32 %global_serial1052, %serial1064, !dbg !49
  br i1 %use_under, label %check_under, label %use_call1061, !dbg !49

check_under:                                      ; preds = %check_serial1059
  %value_pos1065 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i32 0, i32 3, !dbg !49
  %cached_under = load %"struct.rubinius::Module"** %value_pos1065, !dbg !49
  %downcast = bitcast %"struct.rubinius::Module"* %cached_under to %"struct.rubinius::Object"*, !dbg !49
  %use_cache1066 = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load1051, !dbg !49
  br i1 %use_cache1066, label %use_cache1060, label %use_call1061, !dbg !49

use_cache1060:                                    ; preds = %check_under
  %value_pos1067 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i32 0, i32 2, !dbg !49
  %cached_value1068 = load %"struct.rubinius::Object"** %value_pos1067, !dbg !49
  br label %continue1062, !dbg !49

use_call1061:                                     ; preds = %check_under, %check_serial1059, %continue1038
  store i32 20, i32* %ip_pos927, !dbg !49
  %constant1069 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1051) #0, !dbg !49
  %null_check1072 = icmp eq %"struct.rubinius::Object"* %constant1069, null, !dbg !49
  br i1 %null_check1072, label %bail_out922, label %check_active1071, !dbg !49

continue1062:                                     ; preds = %continue1070, %use_cache1060
  %constant1073 = phi %"struct.rubinius::Object"* [ %cached_value1068, %use_cache1060 ], [ %constant1069, %continue1070 ], !dbg !49, !rbx-classid !52
  %stack_pos1074 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %constant1073, %"struct.rubinius::Object"** %stack_pos1074, !dbg !49
  %stack_pos1075 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  %stack_load1076 = load %"struct.rubinius::Object"** %stack_pos1075, !dbg !49, !rbx-classid !52
  br label %return_pad899, !dbg !49

ip25:                                             ; preds = %ip16
  %stack_pos1077 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1077, !dbg !49
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), !dbg !53
  %stack_pos1078 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos1078, !dbg !53
  %local_pos1079 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !53
  %local1080 = load %"struct.rubinius::Object"** %local_pos1079, !dbg !53, !rbx-classid !21
  %stack_pos1081 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !53
  store %"struct.rubinius::Object"* %local1080, %"struct.rubinius::Object"** %stack_pos1081, !dbg !53
  %stack_pos1085 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !53
  %stack_load1086 = load %"struct.rubinius::Object"** %stack_pos1085, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1086, %"struct.rubinius::Object"** %out_args_recv929, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 18734 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name928, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block930, !dbg !53
  store i32 1, i32* %out_args_total931, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container933, !dbg !53
  %stack_pos1087 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos1087, %"struct.rubinius::Object"*** %out_args_arguments932, !dbg !53
  %cache_const1088 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411784 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos1089 = getelementptr %"struct.rubinius::CallSite"* %cache_const1088, i32 0, i32 2, !dbg !53
  %execute1090 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1089, !dbg !53
  store i32 30, i32* %ip_pos927, !dbg !53
  %call_site_execute1091 = call %"struct.rubinius::Object"* %execute1090(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1088, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1094 = icmp eq %"struct.rubinius::Object"* %call_site_execute1091, null, !dbg !53
  br i1 %null_check1094, label %bail_out922, label %check_active1093, !dbg !53

continue1070:                                     ; preds = %check_active1071
  br label %continue1062, !dbg !49

check_active1071:                                 ; preds = %use_call1061
  br label %continue1070, !dbg !49

class_fallback1082:                               ; No predecessors!

serial_fallback1083:                              ; No predecessors!

continue1084:                                     ; No predecessors!

continue1092:                                     ; preds = %check_active1093
  %stack_pos1095 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %call_site_execute1091, %"struct.rubinius::Object"** %stack_pos1095, !dbg !53
  %local_pos1096 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !53
  %stack_pos1097 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !53
  %stack_load1098 = load %"struct.rubinius::Object"** %stack_pos1097, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1098, %"struct.rubinius::Object"** %local_pos1096, !dbg !53
  %local_pos1099 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !54
  %local1100 = load %"struct.rubinius::Object"** %local_pos1099, !dbg !54, !rbx-classid !21
  %stack_pos1101 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %local1100, %"struct.rubinius::Object"** %stack_pos1101, !dbg !54
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 3, !dbg !54
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !54
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !54
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !54
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 5, !dbg !54
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !54, !rbx-classid !37
  %stack_pos1102 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos1102, !dbg !54
  %stack_pos1106 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  %stack_load1107 = load %"struct.rubinius::Object"** %stack_pos1106, !dbg !54, !rbx-classid !21
  %cast1108 = ptrtoint %"struct.rubinius::Object"* %stack_load1107 to i64, !dbg !54
  %masked1109 = and i64 %cast1108, 3, !dbg !54
  %is_reference1110 = icmp eq i64 %masked1109, 0, !dbg !54
  br i1 %is_reference1110, label %check_class_id1111, label %class_fallback1103, !dbg !54

check_active1093:                                 ; preds = %ip25
  br label %continue1092, !dbg !53

continue1105:                                     ; preds = %check_active1145, %float_compare_operation
  %send_result1147 = phi %"struct.rubinius::Object"* [ %select_bool, %float_compare_operation ], [ %call_site_execute1144, %check_active1145 ], !dbg !54
  %stack_pos1148 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %send_result1147, %"struct.rubinius::Object"** %stack_pos1148, !dbg !54
  %stack_pos1149 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  %stack_load1150 = load %"struct.rubinius::Object"** %stack_pos1149, !dbg !54
  %as_int1151 = ptrtoint %"struct.rubinius::Object"* %stack_load1150 to i64, !dbg !54
  %and1152 = and i64 %as_int1151, 15, !dbg !54
  %is_true1153 = icmp eq i64 %and1152, 10, !dbg !54
  br i1 %is_true1153, label %ip48, label %continue1154, !dbg !54

check_class_id1111:                               ; preds = %continue1092
  %class_pos1114 = getelementptr %"struct.rubinius::Object"* %stack_load1107, i32 0, i32 0, i32 1, !dbg !54
  %ref_class1115 = load %"struct.rubinius::Class"** %class_pos1114, !dbg !54
  %class_id_pos1116 = getelementptr %"struct.rubinius::Class"* %ref_class1115, i32 0, i32 4, !dbg !54
  %class_id1117 = load i32* %class_id_pos1116, !dbg !54
  %check_class_id1118 = icmp eq i32 %class_id1117, 77, !dbg !54
  br i1 %check_class_id1118, label %correct_class1112, label %class_fallback1103, !dbg !54

correct_class1112:                                ; preds = %check_class_id1111
  %serial_id_pos1119 = getelementptr %"struct.rubinius::Class"* %ref_class1115, i32 0, i32 5, !dbg !54
  %serial_id1120 = load i32* %serial_id_pos1119, !dbg !54
  %check_serial_id1121 = icmp eq i32 %serial_id1120, 224, !dbg !54
  br i1 %check_serial_id1121, label %correct_serial1113, label %serial_fallback1104, !dbg !54

correct_serial1113:                               ; preds = %correct_class1112
  %stack_pos1122 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !54
  %stack_load1123 = load %"struct.rubinius::Object"** %stack_pos1122, !dbg !54, !rbx-classid !37
  %arg_float1124 = bitcast %"struct.rubinius::Object"* %stack_load1123 to %"struct.rubinius::Float"*, !dbg !54
  %arg.value_pos1125 = getelementptr %"struct.rubinius::Float"* %arg_float1124, i32 0, i32 1, !dbg !54
  %farg1126 = load double* %arg.value_pos1125, !dbg !54
  br label %float_compare_operation, !dbg !54

serial_fallback1104:                              ; preds = %correct_class1112
  store i32 40, i32* %ip_pos927, !dbg !54
  %139 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !54
  br label %return_pad899, !dbg !54

check_fixnum:                                     ; No predecessors!
  %cast1127 = ptrtoint %"struct.rubinius::Object"* %stack_load1123 to i64, !dbg !54
  %masked1128 = and i64 %cast1127, 1, !dbg !54
  %is_fixnum1129 = icmp eq i64 %masked1128, 1, !dbg !54
  br i1 %is_fixnum1129, label %guarded_body1130, label %class_fallback1103, !dbg !54

guarded_body1130:                                 ; preds = %check_fixnum
  %as_int1131 = ptrtoint %"struct.rubinius::Object"* %stack_load1123 to i64, !dbg !54
  %ashr1132 = ashr i64 %as_int1131, 1, !dbg !54
  %140 = uitofp i64 %ashr1132 to double, !dbg !54
  br label %float_compare_operation, !dbg !54

float_compare_operation:                          ; preds = %guarded_body1130, %correct_serial1113
  %float_rhs = phi double [ %farg1126, %correct_serial1113 ], [ %140, %guarded_body1130 ], !dbg !54
  %stack_pos1133 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  %stack_load1134 = load %"struct.rubinius::Object"** %stack_pos1133, !dbg !54, !rbx-classid !21
  %self_float1135 = bitcast %"struct.rubinius::Object"* %stack_load1134 to %"struct.rubinius::Float"*, !dbg !54
  %self.value_pos1136 = getelementptr %"struct.rubinius::Float"* %self_float1135, i32 0, i32 1, !dbg !54
  %fself1137 = load double* %self.value_pos1136, !dbg !54
  %float.ge = fcmp uge double %fself1137, %float_rhs, !dbg !54
  %select_bool = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !54
  br label %continue1105, !dbg !54

class_fallback1103:                               ; preds = %check_fixnum, %check_class_id1111, %continue1092
  %stack_pos1138 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  %stack_load1139 = load %"struct.rubinius::Object"** %stack_pos1138, !dbg !54, !rbx-classid !21
  store %"struct.rubinius::Object"* %stack_load1139, %"struct.rubinius::Object"** %out_args_recv929, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name928, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block930, !dbg !54
  store i32 1, i32* %out_args_total931, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container933, !dbg !54
  %stack_pos1140 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1140, %"struct.rubinius::Object"*** %out_args_arguments932, !dbg !54
  %cache_const1141 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1142 = getelementptr %"struct.rubinius::CallSite"* %cache_const1141, i32 0, i32 2, !dbg !54
  %execute1143 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1142, !dbg !54
  store i32 40, i32* %ip_pos927, !dbg !54
  %call_site_execute1144 = call %"struct.rubinius::Object"* %execute1143(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1141, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1144, null, !dbg !54
  br i1 %null_check1146, label %bail_out922, label %check_active1145, !dbg !54

check_active1145:                                 ; preds = %class_fallback1103
  br label %continue1105, !dbg !54

continue1154:                                     ; preds = %continue1105
  br label %ip45, !dbg !54

ip45:                                             ; preds = %continue1154
  %stack_pos1155 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1155, !dbg !54
  br label %ip58, !dbg !54

continue1156:                                     ; No predecessors!
  br label %ip48, !dbg !54

ip58:                                             ; preds = %continue1309, %ip45
  %global_serial1157 = load i32* inttoptr (i64 22553876 to i32*), !dbg !55
  %constant_cache1158 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), !dbg !55
  %constant_cache_pos1159 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i32 0, i32 4, !dbg !55
  %constant_scope1160 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1159, !dbg !55
  %scope_pos1161 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !55
  %frame_scope1162 = load %"struct.rubinius::ConstantScope"** %scope_pos1161, !dbg !55
  %same_scope1163 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1160, %frame_scope1162, !dbg !55
  br i1 %same_scope1163, label %check_serial1164, label %use_call1166, !dbg !55

check_serial1164:                                 ; preds = %ip58
  %serial_pos1168 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i32 0, i32 7, !dbg !55
  %serial1169 = load i32* %serial_pos1168, !dbg !55
  %use_cache1170 = icmp eq i32 %global_serial1157, %serial1169, !dbg !55
  br i1 %use_cache1170, label %use_cache1165, label %use_call1166, !dbg !55

use_cache1165:                                    ; preds = %check_serial1164
  %value_pos1171 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i32 0, i32 2, !dbg !55
  %cached_value1172 = load %"struct.rubinius::Object"** %value_pos1171, !dbg !55
  br label %continue1167, !dbg !55

use_call1166:                                     ; preds = %check_serial1164, %ip58
  store i32 59, i32* %ip_pos927, !dbg !55
  %push_const_fast1173 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !55
  %null_check1176 = icmp eq %"struct.rubinius::Object"* %push_const_fast1173, null, !dbg !55
  br i1 %null_check1176, label %bail_out922, label %check_active1175, !dbg !55

continue1167:                                     ; preds = %continue1174, %use_cache1165
  %constant1177 = phi %"struct.rubinius::Object"* [ %cached_value1172, %use_cache1165 ], [ %push_const_fast1173, %continue1174 ], !dbg !55, !rbx-classid !56
  %stack_pos1178 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %constant1177, %"struct.rubinius::Object"** %stack_pos1178, !dbg !55
  %stack_pos1179 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  %stack_load1180 = load %"struct.rubinius::Object"** %stack_pos1179, !dbg !55, !rbx-classid !56
  %global_serial1181 = load i32* inttoptr (i64 22553876 to i32*), !dbg !55
  %constant_cache1182 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), !dbg !55
  %constant_cache_pos1183 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i32 0, i32 4, !dbg !55
  %constant_scope1184 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1183, !dbg !55
  %scope_pos1185 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !55
  %frame_scope1186 = load %"struct.rubinius::ConstantScope"** %scope_pos1185, !dbg !55
  %same_scope1187 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1184, %frame_scope1186, !dbg !55
  br i1 %same_scope1187, label %check_serial1188, label %use_call1191, !dbg !55

continue1174:                                     ; preds = %check_active1175
  br label %continue1167, !dbg !55

check_active1175:                                 ; preds = %use_call1166
  br label %continue1174, !dbg !55

check_serial1188:                                 ; preds = %continue1167
  %serial_pos1193 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i32 0, i32 7, !dbg !55
  %serial1194 = load i32* %serial_pos1193, !dbg !55
  %use_under1195 = icmp eq i32 %global_serial1181, %serial1194, !dbg !55
  br i1 %use_under1195, label %check_under1189, label %use_call1191, !dbg !55

check_under1189:                                  ; preds = %check_serial1188
  %value_pos1196 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i32 0, i32 3, !dbg !55
  %cached_under1197 = load %"struct.rubinius::Module"** %value_pos1196, !dbg !55
  %downcast1198 = bitcast %"struct.rubinius::Module"* %cached_under1197 to %"struct.rubinius::Object"*, !dbg !55
  %use_cache1199 = icmp eq %"struct.rubinius::Object"* %downcast1198, %stack_load1180, !dbg !55
  br i1 %use_cache1199, label %use_cache1190, label %use_call1191, !dbg !55

use_cache1190:                                    ; preds = %check_under1189
  %value_pos1200 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i32 0, i32 2, !dbg !55
  %cached_value1201 = load %"struct.rubinius::Object"** %value_pos1200, !dbg !55
  br label %continue1192, !dbg !55

use_call1191:                                     ; preds = %check_under1189, %check_serial1188, %continue1167
  store i32 61, i32* %ip_pos927, !dbg !55
  %constant1202 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1180) #0, !dbg !55
  %null_check1205 = icmp eq %"struct.rubinius::Object"* %constant1202, null, !dbg !55
  br i1 %null_check1205, label %bail_out922, label %check_active1204, !dbg !55

continue1192:                                     ; preds = %continue1203, %use_cache1190
  %constant1206 = phi %"struct.rubinius::Object"* [ %cached_value1201, %use_cache1190 ], [ %constant1202, %continue1203 ], !dbg !55, !rbx-classid !57
  %stack_pos1207 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %constant1206, %"struct.rubinius::Object"** %stack_pos1207, !dbg !55
  %stack_pos1208 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  %stack_load1209 = load %"struct.rubinius::Object"** %stack_pos1208, !dbg !55, !rbx-classid !57
  %global_serial1210 = load i32* inttoptr (i64 22553876 to i32*), !dbg !55
  %constant_cache1211 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), !dbg !55
  %constant_cache_pos1212 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i32 0, i32 4, !dbg !55
  %constant_scope1213 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1212, !dbg !55
  %scope_pos1214 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !55
  %frame_scope1215 = load %"struct.rubinius::ConstantScope"** %scope_pos1214, !dbg !55
  %same_scope1216 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1213, %frame_scope1215, !dbg !55
  br i1 %same_scope1216, label %check_serial1217, label %use_call1220, !dbg !55

continue1203:                                     ; preds = %check_active1204
  br label %continue1192, !dbg !55

check_active1204:                                 ; preds = %use_call1191
  br label %continue1203, !dbg !55

check_serial1217:                                 ; preds = %continue1192
  %serial_pos1222 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i32 0, i32 7, !dbg !55
  %serial1223 = load i32* %serial_pos1222, !dbg !55
  %use_under1224 = icmp eq i32 %global_serial1210, %serial1223, !dbg !55
  br i1 %use_under1224, label %check_under1218, label %use_call1220, !dbg !55

check_under1218:                                  ; preds = %check_serial1217
  %value_pos1225 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i32 0, i32 3, !dbg !55
  %cached_under1226 = load %"struct.rubinius::Module"** %value_pos1225, !dbg !55
  %downcast1227 = bitcast %"struct.rubinius::Module"* %cached_under1226 to %"struct.rubinius::Object"*, !dbg !55
  %use_cache1228 = icmp eq %"struct.rubinius::Object"* %downcast1227, %stack_load1209, !dbg !55
  br i1 %use_cache1228, label %use_cache1219, label %use_call1220, !dbg !55

use_cache1219:                                    ; preds = %check_under1218
  %value_pos1229 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i32 0, i32 2, !dbg !55
  %cached_value1230 = load %"struct.rubinius::Object"** %value_pos1229, !dbg !55
  br label %continue1221, !dbg !55

use_call1220:                                     ; preds = %check_under1218, %check_serial1217, %continue1192
  store i32 63, i32* %ip_pos927, !dbg !55
  %constant1231 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1209) #0, !dbg !55
  %null_check1234 = icmp eq %"struct.rubinius::Object"* %constant1231, null, !dbg !55
  br i1 %null_check1234, label %bail_out922, label %check_active1233, !dbg !55

continue1221:                                     ; preds = %continue1232, %use_cache1219
  %constant1235 = phi %"struct.rubinius::Object"* [ %cached_value1230, %use_cache1219 ], [ %constant1231, %continue1232 ], !dbg !55, !rbx-classid !58
  %stack_pos1236 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %constant1235, %"struct.rubinius::Object"** %stack_pos1236, !dbg !55
  %local_pos1237 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 6, i32 0, !dbg !55
  %local1238 = load %"struct.rubinius::Object"** %local_pos1237, !dbg !55, !rbx-classid !21
  %stack_pos1239 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !55
  store %"struct.rubinius::Object"* %local1238, %"struct.rubinius::Object"** %stack_pos1239, !dbg !55
  %stack_pos1243 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  %stack_load1244 = load %"struct.rubinius::Object"** %stack_pos1243, !dbg !55, !rbx-classid !58
  %cast1245 = ptrtoint %"struct.rubinius::Object"* %stack_load1244 to i64, !dbg !55
  %masked1246 = and i64 %cast1245, 3, !dbg !55
  %is_reference1247 = icmp eq i64 %masked1246, 0, !dbg !55
  br i1 %is_reference1247, label %check_class_id1248, label %class_fallback1240, !dbg !55

continue1232:                                     ; preds = %check_active1233
  br label %continue1221, !dbg !55

check_active1233:                                 ; preds = %use_call1220
  br label %continue1232, !dbg !55

continue1242:                                     ; preds = %ffi_continue
  %stack_pos1263 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  %stack_load1264 = load %"struct.rubinius::Object"** %stack_pos1263, !dbg !55
  br label %return_pad899, !dbg !55

ip48:                                             ; preds = %continue1156, %continue1105
  %141 = getelementptr %"struct.rubinius::StackVariables"* %vars911, i32 0, i32 2, !dbg !54
  %self1265 = load %"struct.rubinius::Object"** %141, !dbg !54, !rbx-classid !59
  %stack_pos1266 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %self1265, %"struct.rubinius::Object"** %stack_pos1266, !dbg !54
  %global_serial1267 = load i32* inttoptr (i64 22553876 to i32*), !dbg !54
  %constant_cache1268 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), !dbg !54
  %constant_cache_pos1269 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i32 0, i32 4, !dbg !54
  %constant_scope1270 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1269, !dbg !54
  %scope_pos1271 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 1, !dbg !54
  %frame_scope1272 = load %"struct.rubinius::ConstantScope"** %scope_pos1271, !dbg !54
  %same_scope1273 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1270, %frame_scope1272, !dbg !54
  br i1 %same_scope1273, label %check_serial1274, label %use_call1276, !dbg !54

check_class_id1248:                               ; preds = %continue1221
  %class_pos1251 = getelementptr %"struct.rubinius::Object"* %stack_load1244, i32 0, i32 0, i32 1, !dbg !55
  %ref_class1252 = load %"struct.rubinius::Class"** %class_pos1251, !dbg !55
  %class_id_pos1253 = getelementptr %"struct.rubinius::Class"* %ref_class1252, i32 0, i32 4, !dbg !55
  %class_id1254 = load i32* %class_id_pos1253, !dbg !55
  %check_class_id1255 = icmp eq i32 %class_id1254, 507, !dbg !55
  br i1 %check_class_id1255, label %correct_class1249, label %class_fallback1240, !dbg !55

correct_class1249:                                ; preds = %check_class_id1248
  %serial_id_pos1256 = getelementptr %"struct.rubinius::Class"* %ref_class1252, i32 0, i32 5, !dbg !55
  %serial_id1257 = load i32* %serial_id_pos1256, !dbg !55
  %check_serial_id1258 = icmp eq i32 %serial_id1257, 210, !dbg !55
  br i1 %check_serial_id1258, label %correct_serial1250, label %serial_fallback1241, !dbg !55

class_fallback1240:                               ; preds = %correct_serial1250, %check_class_id1248, %continue1221
  store i32 67, i32* %ip_pos927, !dbg !55
  %142 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !55
  br label %return_pad899, !dbg !55

correct_serial1250:                               ; preds = %correct_class1249
  %stack_pos1259 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !55
  %stack_load1260 = load %"struct.rubinius::Object"** %stack_pos1259, !dbg !55, !rbx-classid !21
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1260, i1* %valid_flag), !dbg !55
  %143 = load i1* %valid_flag, !dbg !55
  br i1 %143, label %ffi_continue, label %class_fallback1240, !dbg !55

serial_fallback1241:                              ; preds = %correct_class1249
  store i32 67, i32* %ip_pos927, !dbg !55
  %144 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !55
  br label %return_pad899, !dbg !55

ffi_continue:                                     ; preds = %correct_serial1250
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !55
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !55
  %unused1261 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !55
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !55
  %stack_pos1262 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack_pos1262, !dbg !55
  br label %continue1242, !dbg !55

check_serial1274:                                 ; preds = %ip48
  %serial_pos1278 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i32 0, i32 7, !dbg !54
  %serial1279 = load i32* %serial_pos1278, !dbg !54
  %use_cache1280 = icmp eq i32 %global_serial1267, %serial1279, !dbg !54
  br i1 %use_cache1280, label %use_cache1275, label %use_call1276, !dbg !54

use_cache1275:                                    ; preds = %check_serial1274
  %value_pos1281 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i32 0, i32 2, !dbg !54
  %cached_value1282 = load %"struct.rubinius::Object"** %value_pos1281, !dbg !54
  br label %continue1277, !dbg !54

use_call1276:                                     ; preds = %check_serial1274, %ip48
  store i32 49, i32* %ip_pos927, !dbg !54
  %push_const_fast1283 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !54
  %null_check1286 = icmp eq %"struct.rubinius::Object"* %push_const_fast1283, null, !dbg !54
  br i1 %null_check1286, label %bail_out922, label %check_active1285, !dbg !54

continue1277:                                     ; preds = %continue1284, %use_cache1275
  %constant1287 = phi %"struct.rubinius::Object"* [ %cached_value1282, %use_cache1275 ], [ %push_const_fast1283, %continue1284 ], !dbg !54, !rbx-classid !60
  %stack_pos1288 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %constant1287, %"struct.rubinius::Object"** %stack_pos1288, !dbg !54
  %code_pos1289 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i32 0, i32 3, !dbg !54
  %code1290 = load %"struct.rubinius::CompiledCode"** %code_pos1289, !dbg !54
  %literals_pos1291 = getelementptr %"struct.rubinius::CompiledCode"* %code1290, i32 0, i32 17, !dbg !54
  %literals1292 = load %"struct.rubinius::Tuple"** %literals_pos1291, !dbg !54
  %literal_pos1293 = getelementptr %"struct.rubinius::Tuple"* %literals1292, i32 0, i32 2, i32 8, !dbg !54
  %literal1294 = load %"struct.rubinius::Object"** %literal_pos1293, !dbg !54, !rbx-classid !61
  %stack_pos1295 = getelementptr %"struct.rubinius::Object"** %stack909, i32 2, !dbg !54
  store %"struct.rubinius::Object"* %literal1294, %"struct.rubinius::Object"** %stack_pos1295, !dbg !54
  %stack_pos1296 = getelementptr %"struct.rubinius::Object"** %stack909, i32 2, !dbg !54
  %stack_load1297 = load %"struct.rubinius::Object"** %stack_pos1296, !dbg !54, !rbx-classid !61
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Object"* %stack_load1297), !dbg !54, !rbx-classid !61
  %null_check1300 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !54
  br i1 %null_check1300, label %bail_out922, label %check_active1299, !dbg !54

continue1284:                                     ; preds = %check_active1285
  br label %continue1277, !dbg !54

check_active1285:                                 ; preds = %use_call1276
  br label %continue1284, !dbg !54

continue1298:                                     ; preds = %check_active1299
  %stack_pos1301 = getelementptr %"struct.rubinius::Object"** %stack909, i32 2, !dbg !54
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos1301, !dbg !54
  %stack_pos1302 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  %stack_load1303 = load %"struct.rubinius::Object"** %stack_pos1302, !dbg !54, !rbx-classid !59
  store %"struct.rubinius::Object"* %stack_load1303, %"struct.rubinius::Object"** %out_args_recv929, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name928, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block930, !dbg !54
  store i32 2, i32* %out_args_total931, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container933, !dbg !54
  %stack_pos1304 = getelementptr %"struct.rubinius::Object"** %stack909, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1304, %"struct.rubinius::Object"*** %out_args_arguments932, !dbg !54
  %cache_const1305 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1306 = getelementptr %"struct.rubinius::CallSite"* %cache_const1305, i32 0, i32 2, !dbg !54
  %execute1307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1306, !dbg !54
  store i32 55, i32* %ip_pos927, !dbg !54
  %call_site_execute1308 = call %"struct.rubinius::Object"* %execute1307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1305, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1311 = icmp eq %"struct.rubinius::Object"* %call_site_execute1308, null, !dbg !54
  br i1 %null_check1311, label %bail_out922, label %check_active1310, !dbg !54

check_active1299:                                 ; preds = %continue1277
  br label %continue1298, !dbg !54

continue1309:                                     ; preds = %check_active1310
  %stack_pos1312 = getelementptr %"struct.rubinius::Object"** %stack909, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute1308, %"struct.rubinius::Object"** %stack_pos1312, !dbg !54
  br label %ip58, !dbg !54

return_pad899:                                    ; preds = %continue1242, %serial_fallback1241, %class_fallback1240, %serial_fallback1104, %continue1062, %serial_fallback988, %serial_fallback960, %class_fallback959, %ret_raise_val924, %ret_null925
  %return_phi900 = phi %"struct.rubinius::Object"* [ null, %ret_null925 ], [ %crv926, %ret_raise_val924 ], [ %135, %class_fallback959 ], [ %136, %serial_fallback960 ], [ %138, %serial_fallback988 ], [ %stack_load1076, %continue1062 ], [ %139, %serial_fallback1104 ], [ %142, %class_fallback1240 ], [ %144, %serial_fallback1241 ], [ %stack_load1264, %continue1242 ]
  %null_check1315 = icmp eq %"struct.rubinius::Object"* %return_phi900, null, !dbg !40
  br i1 %null_check1315, label %bail_out159, label %check_active1314, !dbg !40

check_active1310:                                 ; preds = %continue1298
  br label %continue1309, !dbg !54

continue1313:                                     ; preds = %check_active1314
  %stack_pos1316 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !40
  store %"struct.rubinius::Object"* %return_phi900, %"struct.rubinius::Object"** %stack_pos1316, !dbg !40
  br label %continue882, !dbg !40

check_active1314:                                 ; preds = %return_pad899
  br label %continue1313, !dbg !40

continue1331:                                     ; preds = %check_active1386, %continue1364
  %send_result1388 = phi %"struct.rubinius::Object"* [ %148, %continue1364 ], [ %call_site_execute1385, %check_active1386 ], !dbg !45
  %stack_pos1389 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %send_result1388, %"struct.rubinius::Object"** %stack_pos1389, !dbg !45
  %local_pos1390 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 8, !dbg !45
  %local1391 = load %"struct.rubinius::Object"** %local_pos1390, !dbg !45, !rbx-classid !47
  %stack_pos1392 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  store %"struct.rubinius::Object"* %local1391, %"struct.rubinius::Object"** %stack_pos1392, !dbg !45
  %stack_pos1396 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1397 = load %"struct.rubinius::Object"** %stack_pos1396, !dbg !45
  %cast1398 = ptrtoint %"struct.rubinius::Object"* %stack_load1397 to i64, !dbg !45
  %masked1399 = and i64 %cast1398, 3, !dbg !45
  %is_reference1400 = icmp eq i64 %masked1399, 0, !dbg !45
  br i1 %is_reference1400, label %check_class_id1401, label %class_fallback1393, !dbg !45

check_class_id1337:                               ; preds = %continue882
  %class_pos1340 = getelementptr %"struct.rubinius::Object"* %stack_load1333, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1341 = load %"struct.rubinius::Class"** %class_pos1340, !dbg !45
  %class_id_pos1342 = getelementptr %"struct.rubinius::Class"* %ref_class1341, i32 0, i32 4, !dbg !45
  %class_id1343 = load i32* %class_id_pos1342, !dbg !45
  %check_class_id1344 = icmp eq i32 %class_id1343, 77, !dbg !45
  br i1 %check_class_id1344, label %correct_class1338, label %class_fallback1329, !dbg !45

correct_class1338:                                ; preds = %check_class_id1337
  %serial_id_pos1345 = getelementptr %"struct.rubinius::Class"* %ref_class1341, i32 0, i32 5, !dbg !45
  %serial_id1346 = load i32* %serial_id_pos1345, !dbg !45
  %check_serial_id1347 = icmp eq i32 %serial_id1346, 224, !dbg !45
  br i1 %check_serial_id1347, label %correct_serial1339, label %serial_fallback1330, !dbg !45

correct_serial1339:                               ; preds = %correct_class1338
  %stack_pos1348 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  %stack_load1349 = load %"struct.rubinius::Object"** %stack_pos1348, !dbg !45, !rbx-classid !47
  %cast1351 = ptrtoint %"struct.rubinius::Object"* %stack_load1349 to i64, !dbg !45
  %masked1352 = and i64 %cast1351, 3, !dbg !45
  %is_reference1353 = icmp eq i64 %masked1352, 0, !dbg !45
  br i1 %is_reference1353, label %check_class_id1354, label %continue1350, !dbg !45

serial_fallback1330:                              ; preds = %correct_class1338
  store i32 99, i32* %ip_pos164, !dbg !45
  %145 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 99, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !45
  br label %return_pad126, !dbg !45

check_class_id1354:                               ; preds = %correct_serial1339
  %class_pos1356 = getelementptr %"struct.rubinius::Object"* %stack_load1349, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1357 = load %"struct.rubinius::Class"** %class_pos1356, !dbg !45
  %class_id_pos1358 = getelementptr %"struct.rubinius::Class"* %ref_class1357, i32 0, i32 4, !dbg !45
  %class_id1359 = load i32* %class_id_pos1358, !dbg !45
  %check_class_id1360 = icmp eq i32 %class_id1359, 77, !dbg !45
  br i1 %check_class_id1360, label %correct_class1355, label %continue1350, !dbg !45

correct_class1355:                                ; preds = %check_class_id1354
  %arg_float1361 = bitcast %"struct.rubinius::Object"* %stack_load1349 to %"struct.rubinius::Float"*, !dbg !45
  %arg.value_pos1362 = getelementptr %"struct.rubinius::Float"* %arg_float1361, i32 0, i32 1, !dbg !45
  %farg1363 = load double* %arg.value_pos1362, !dbg !45
  br label %continue1364, !dbg !45

continue1350:                                     ; preds = %check_class_id1354, %correct_serial1339
  %cast1365 = ptrtoint %"struct.rubinius::Object"* %stack_load1349 to i64, !dbg !45
  %masked1366 = and i64 %cast1365, 1, !dbg !45
  %is_fixnum1367 = icmp eq i64 %masked1366, 1, !dbg !45
  br i1 %is_fixnum1367, label %guarded_body1368, label %class_fallback1329, !dbg !45

guarded_body1368:                                 ; preds = %continue1350
  %as_int1369 = ptrtoint %"struct.rubinius::Object"* %stack_load1349 to i64, !dbg !45
  %ashr1370 = ashr i64 %as_int1369, 1, !dbg !45
  %146 = sitofp i64 %ashr1370 to double, !dbg !45
  br label %continue1364, !dbg !45

continue1364:                                     ; preds = %guarded_body1368, %correct_class1355
  %rhs1371 = phi double [ %farg1363, %correct_class1355 ], [ %146, %guarded_body1368 ], !dbg !45
  %stack_pos1372 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1373 = load %"struct.rubinius::Object"** %stack_pos1372, !dbg !45, !rbx-classid !47
  %self_float1374 = bitcast %"struct.rubinius::Object"* %stack_load1373 to %"struct.rubinius::Float"*, !dbg !45
  %self.value_pos1375 = getelementptr %"struct.rubinius::Float"* %self_float1374, i32 0, i32 1, !dbg !45
  %fself1376 = load double* %self.value_pos1375, !dbg !45
  %float.mul1377 = fmul double %fself1376, %rhs1371, !dbg !45
  %result1378 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !45, !rbx-classid !37
  %147 = getelementptr %"struct.rubinius::Float"* %result1378, i32 0, i32 1, !dbg !45
  store double %float.mul1377, double* %147, !dbg !45
  %148 = bitcast %"struct.rubinius::Float"* %result1378 to %"struct.rubinius::Object"*, !dbg !45
  br label %continue1331, !dbg !45

class_fallback1329:                               ; preds = %continue1350, %check_class_id1337, %continue882
  %stack_pos1379 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1380 = load %"struct.rubinius::Object"** %stack_pos1379, !dbg !45, !rbx-classid !47
  store %"struct.rubinius::Object"* %stack_load1380, %"struct.rubinius::Object"** %out_args_recv166, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !45
  store i32 1, i32* %out_args_total168, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !45
  %stack_pos1381 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos1381, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !45
  %cache_const1382 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549200 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos1383 = getelementptr %"struct.rubinius::CallSite"* %cache_const1382, i32 0, i32 2, !dbg !45
  %execute1384 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1383, !dbg !45
  store i32 99, i32* %ip_pos164, !dbg !45
  %call_site_execute1385 = call %"struct.rubinius::Object"* %execute1384(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1382, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check1387 = icmp eq %"struct.rubinius::Object"* %call_site_execute1385, null, !dbg !45
  br i1 %null_check1387, label %bail_out159, label %check_active1386, !dbg !45

check_active1386:                                 ; preds = %class_fallback1329
  br label %continue1331, !dbg !45

continue1395:                                     ; preds = %check_active1450, %continue1428
  %send_result1452 = phi %"struct.rubinius::Object"* [ %152, %continue1428 ], [ %call_site_execute1449, %check_active1450 ], !dbg !45
  %stack_pos1453 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %send_result1452, %"struct.rubinius::Object"** %stack_pos1453, !dbg !45
  %stack_pos1457 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  %stack_load1458 = load %"struct.rubinius::Object"** %stack_pos1457, !dbg !45, !rbx-classid !46
  %cast1459 = ptrtoint %"struct.rubinius::Object"* %stack_load1458 to i64, !dbg !45
  %masked1460 = and i64 %cast1459, 3, !dbg !45
  %is_reference1461 = icmp eq i64 %masked1460, 0, !dbg !45
  br i1 %is_reference1461, label %check_class_id1462, label %class_fallback1454, !dbg !45

check_class_id1401:                               ; preds = %continue1331
  %class_pos1404 = getelementptr %"struct.rubinius::Object"* %stack_load1397, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1405 = load %"struct.rubinius::Class"** %class_pos1404, !dbg !45
  %class_id_pos1406 = getelementptr %"struct.rubinius::Class"* %ref_class1405, i32 0, i32 4, !dbg !45
  %class_id1407 = load i32* %class_id_pos1406, !dbg !45
  %check_class_id1408 = icmp eq i32 %class_id1407, 77, !dbg !45
  br i1 %check_class_id1408, label %correct_class1402, label %class_fallback1393, !dbg !45

correct_class1402:                                ; preds = %check_class_id1401
  %serial_id_pos1409 = getelementptr %"struct.rubinius::Class"* %ref_class1405, i32 0, i32 5, !dbg !45
  %serial_id1410 = load i32* %serial_id_pos1409, !dbg !45
  %check_serial_id1411 = icmp eq i32 %serial_id1410, 224, !dbg !45
  br i1 %check_serial_id1411, label %correct_serial1403, label %serial_fallback1394, !dbg !45

correct_serial1403:                               ; preds = %correct_class1402
  %stack_pos1412 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  %stack_load1413 = load %"struct.rubinius::Object"** %stack_pos1412, !dbg !45, !rbx-classid !47
  %cast1415 = ptrtoint %"struct.rubinius::Object"* %stack_load1413 to i64, !dbg !45
  %masked1416 = and i64 %cast1415, 3, !dbg !45
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !45
  br i1 %is_reference1417, label %check_class_id1418, label %continue1414, !dbg !45

serial_fallback1394:                              ; preds = %correct_class1402
  store i32 104, i32* %ip_pos164, !dbg !45
  %149 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 104, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !45
  br label %return_pad126, !dbg !45

check_class_id1418:                               ; preds = %correct_serial1403
  %class_pos1420 = getelementptr %"struct.rubinius::Object"* %stack_load1413, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1421 = load %"struct.rubinius::Class"** %class_pos1420, !dbg !45
  %class_id_pos1422 = getelementptr %"struct.rubinius::Class"* %ref_class1421, i32 0, i32 4, !dbg !45
  %class_id1423 = load i32* %class_id_pos1422, !dbg !45
  %check_class_id1424 = icmp eq i32 %class_id1423, 77, !dbg !45
  br i1 %check_class_id1424, label %correct_class1419, label %continue1414, !dbg !45

correct_class1419:                                ; preds = %check_class_id1418
  %arg_float1425 = bitcast %"struct.rubinius::Object"* %stack_load1413 to %"struct.rubinius::Float"*, !dbg !45
  %arg.value_pos1426 = getelementptr %"struct.rubinius::Float"* %arg_float1425, i32 0, i32 1, !dbg !45
  %farg1427 = load double* %arg.value_pos1426, !dbg !45
  br label %continue1428, !dbg !45

continue1414:                                     ; preds = %check_class_id1418, %correct_serial1403
  %cast1429 = ptrtoint %"struct.rubinius::Object"* %stack_load1413 to i64, !dbg !45
  %masked1430 = and i64 %cast1429, 1, !dbg !45
  %is_fixnum1431 = icmp eq i64 %masked1430, 1, !dbg !45
  br i1 %is_fixnum1431, label %guarded_body1432, label %class_fallback1393, !dbg !45

guarded_body1432:                                 ; preds = %continue1414
  %as_int1433 = ptrtoint %"struct.rubinius::Object"* %stack_load1413 to i64, !dbg !45
  %ashr1434 = ashr i64 %as_int1433, 1, !dbg !45
  %150 = sitofp i64 %ashr1434 to double, !dbg !45
  br label %continue1428, !dbg !45

continue1428:                                     ; preds = %guarded_body1432, %correct_class1419
  %rhs1435 = phi double [ %farg1427, %correct_class1419 ], [ %150, %guarded_body1432 ], !dbg !45
  %stack_pos1436 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1437 = load %"struct.rubinius::Object"** %stack_pos1436, !dbg !45
  %self_float1438 = bitcast %"struct.rubinius::Object"* %stack_load1437 to %"struct.rubinius::Float"*, !dbg !45
  %self.value_pos1439 = getelementptr %"struct.rubinius::Float"* %self_float1438, i32 0, i32 1, !dbg !45
  %fself1440 = load double* %self.value_pos1439, !dbg !45
  %float.mul1441 = fmul double %fself1440, %rhs1435, !dbg !45
  %result1442 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !45, !rbx-classid !37
  %151 = getelementptr %"struct.rubinius::Float"* %result1442, i32 0, i32 1, !dbg !45
  store double %float.mul1441, double* %151, !dbg !45
  %152 = bitcast %"struct.rubinius::Float"* %result1442 to %"struct.rubinius::Object"*, !dbg !45
  br label %continue1395, !dbg !45

class_fallback1393:                               ; preds = %continue1414, %check_class_id1401, %continue1331
  %stack_pos1443 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1444 = load %"struct.rubinius::Object"** %stack_pos1443, !dbg !45
  store %"struct.rubinius::Object"* %stack_load1444, %"struct.rubinius::Object"** %out_args_recv166, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !45
  store i32 1, i32* %out_args_total168, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !45
  %stack_pos1445 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos1445, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !45
  %cache_const1446 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549240 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos1447 = getelementptr %"struct.rubinius::CallSite"* %cache_const1446, i32 0, i32 2, !dbg !45
  %execute1448 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1447, !dbg !45
  store i32 104, i32* %ip_pos164, !dbg !45
  %call_site_execute1449 = call %"struct.rubinius::Object"* %execute1448(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1446, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check1451 = icmp eq %"struct.rubinius::Object"* %call_site_execute1449, null, !dbg !45
  br i1 %null_check1451, label %bail_out159, label %check_active1450, !dbg !45

check_active1450:                                 ; preds = %class_fallback1393
  br label %continue1395, !dbg !45

continue1456:                                     ; preds = %check_active1510, %continue1489
  %send_result1512 = phi %"struct.rubinius::Object"* [ %157, %continue1489 ], [ %call_site_execute1509, %check_active1510 ], !dbg !45
  %stack_pos1513 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %send_result1512, %"struct.rubinius::Object"** %stack_pos1513, !dbg !45
  %local_pos1514 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 9, !dbg !45
  %stack_pos1515 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  %stack_load1516 = load %"struct.rubinius::Object"** %stack_pos1515, !dbg !45
  store %"struct.rubinius::Object"* %stack_load1516, %"struct.rubinius::Object"** %local_pos1514, !dbg !45
  %stack_pos1519 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1519, !dbg !62
  %153 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !62
  %self1520 = load %"struct.rubinius::Object"** %153, !dbg !62
  %cast1521 = ptrtoint %"struct.rubinius::Object"* %self1520 to i64, !dbg !62
  %masked1522 = and i64 %cast1521, 3, !dbg !62
  %is_reference1523 = icmp eq i64 %masked1522, 0, !dbg !62
  br i1 %is_reference1523, label %check_class_id1524, label %visit_push_ivar_fallback1517, !dbg !62

check_class_id1462:                               ; preds = %continue1395
  %class_pos1465 = getelementptr %"struct.rubinius::Object"* %stack_load1458, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1466 = load %"struct.rubinius::Class"** %class_pos1465, !dbg !45
  %class_id_pos1467 = getelementptr %"struct.rubinius::Class"* %ref_class1466, i32 0, i32 4, !dbg !45
  %class_id1468 = load i32* %class_id_pos1467, !dbg !45
  %check_class_id1469 = icmp eq i32 %class_id1468, 77, !dbg !45
  br i1 %check_class_id1469, label %correct_class1463, label %class_fallback1454, !dbg !45

correct_class1463:                                ; preds = %check_class_id1462
  %serial_id_pos1470 = getelementptr %"struct.rubinius::Class"* %ref_class1466, i32 0, i32 5, !dbg !45
  %serial_id1471 = load i32* %serial_id_pos1470, !dbg !45
  %check_serial_id1472 = icmp eq i32 %serial_id1471, 224, !dbg !45
  br i1 %check_serial_id1472, label %correct_serial1464, label %serial_fallback1455, !dbg !45

correct_serial1464:                               ; preds = %correct_class1463
  %stack_pos1473 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  %stack_load1474 = load %"struct.rubinius::Object"** %stack_pos1473, !dbg !45
  %cast1476 = ptrtoint %"struct.rubinius::Object"* %stack_load1474 to i64, !dbg !45
  %masked1477 = and i64 %cast1476, 3, !dbg !45
  %is_reference1478 = icmp eq i64 %masked1477, 0, !dbg !45
  br i1 %is_reference1478, label %check_class_id1479, label %continue1475, !dbg !45

serial_fallback1455:                              ; preds = %correct_class1463
  store i32 107, i32* %ip_pos164, !dbg !45
  %154 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 107, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !45
  br label %return_pad126, !dbg !45

check_class_id1479:                               ; preds = %correct_serial1464
  %class_pos1481 = getelementptr %"struct.rubinius::Object"* %stack_load1474, i32 0, i32 0, i32 1, !dbg !45
  %ref_class1482 = load %"struct.rubinius::Class"** %class_pos1481, !dbg !45
  %class_id_pos1483 = getelementptr %"struct.rubinius::Class"* %ref_class1482, i32 0, i32 4, !dbg !45
  %class_id1484 = load i32* %class_id_pos1483, !dbg !45
  %check_class_id1485 = icmp eq i32 %class_id1484, 77, !dbg !45
  br i1 %check_class_id1485, label %correct_class1480, label %continue1475, !dbg !45

correct_class1480:                                ; preds = %check_class_id1479
  %arg_float1486 = bitcast %"struct.rubinius::Object"* %stack_load1474 to %"struct.rubinius::Float"*, !dbg !45
  %arg.value_pos1487 = getelementptr %"struct.rubinius::Float"* %arg_float1486, i32 0, i32 1, !dbg !45
  %farg1488 = load double* %arg.value_pos1487, !dbg !45
  br label %continue1489, !dbg !45

continue1475:                                     ; preds = %check_class_id1479, %correct_serial1464
  %cast1490 = ptrtoint %"struct.rubinius::Object"* %stack_load1474 to i64, !dbg !45
  %masked1491 = and i64 %cast1490, 1, !dbg !45
  %is_fixnum1492 = icmp eq i64 %masked1491, 1, !dbg !45
  br i1 %is_fixnum1492, label %guarded_body1493, label %class_fallback1454, !dbg !45

guarded_body1493:                                 ; preds = %continue1475
  %as_int1494 = ptrtoint %"struct.rubinius::Object"* %stack_load1474 to i64, !dbg !45
  %ashr1495 = ashr i64 %as_int1494, 1, !dbg !45
  %155 = sitofp i64 %ashr1495 to double, !dbg !45
  br label %continue1489, !dbg !45

continue1489:                                     ; preds = %guarded_body1493, %correct_class1480
  %rhs1496 = phi double [ %farg1488, %correct_class1480 ], [ %155, %guarded_body1493 ], !dbg !45
  %stack_pos1497 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  %stack_load1498 = load %"struct.rubinius::Object"** %stack_pos1497, !dbg !45, !rbx-classid !46
  %self_float1499 = bitcast %"struct.rubinius::Object"* %stack_load1498 to %"struct.rubinius::Float"*, !dbg !45
  %self.value_pos1500 = getelementptr %"struct.rubinius::Float"* %self_float1499, i32 0, i32 1, !dbg !45
  %fself1501 = load double* %self.value_pos1500, !dbg !45
  %float.div = fdiv double %fself1501, %rhs1496, !dbg !45
  %result1502 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !45, !rbx-classid !37
  %156 = getelementptr %"struct.rubinius::Float"* %result1502, i32 0, i32 1, !dbg !45
  store double %float.div, double* %156, !dbg !45
  %157 = bitcast %"struct.rubinius::Float"* %result1502 to %"struct.rubinius::Object"*, !dbg !45
  br label %continue1456, !dbg !45

class_fallback1454:                               ; preds = %continue1475, %check_class_id1462, %continue1395
  %stack_pos1503 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !45
  %stack_load1504 = load %"struct.rubinius::Object"** %stack_pos1503, !dbg !45, !rbx-classid !46
  store %"struct.rubinius::Object"* %stack_load1504, %"struct.rubinius::Object"** %out_args_recv166, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !45
  store i32 1, i32* %out_args_total168, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !45
  %stack_pos1505 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos1505, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !45
  %cache_const1506 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549264 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos1507 = getelementptr %"struct.rubinius::CallSite"* %cache_const1506, i32 0, i32 2, !dbg !45
  %execute1508 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1507, !dbg !45
  store i32 107, i32* %ip_pos164, !dbg !45
  %call_site_execute1509 = call %"struct.rubinius::Object"* %execute1508(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1506, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check1511 = icmp eq %"struct.rubinius::Object"* %call_site_execute1509, null, !dbg !45
  br i1 %null_check1511, label %bail_out159, label %check_active1510, !dbg !45

check_active1510:                                 ; preds = %class_fallback1454
  br label %continue1456, !dbg !45

continue1518:                                     ; preds = %visit_push_ivar_fallback1517, %correct_class1525
  %local_pos1540 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 9, !dbg !62
  %local1541 = load %"struct.rubinius::Object"** %local_pos1540, !dbg !62, !rbx-classid !63
  %stack_pos1542 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %local1541, %"struct.rubinius::Object"** %stack_pos1542, !dbg !62
  %stack_pos1546 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  %stack_load1547 = load %"struct.rubinius::Object"** %stack_pos1546, !dbg !62
  %cast1548 = ptrtoint %"struct.rubinius::Object"* %stack_load1547 to i64, !dbg !62
  %masked1549 = and i64 %cast1548, 3, !dbg !62
  %is_reference1550 = icmp eq i64 %masked1549, 0, !dbg !62
  br i1 %is_reference1550, label %check_class_id1551, label %class_fallback1543, !dbg !62

check_class_id1524:                               ; preds = %continue1456
  %class_pos1526 = getelementptr %"struct.rubinius::Object"* %self1520, i32 0, i32 0, i32 1, !dbg !62
  %ref_class1527 = load %"struct.rubinius::Class"** %class_pos1526, !dbg !62
  %class_id_pos1528 = getelementptr %"struct.rubinius::Class"* %ref_class1527, i32 0, i32 4, !dbg !62
  %class_id1529 = load i32* %class_id_pos1528, !dbg !62
  %check_class_id1530 = icmp eq i32 %class_id1529, 1285, !dbg !62
  br i1 %check_class_id1530, label %correct_class1525, label %visit_push_ivar_fallback1517, !dbg !62

correct_class1525:                                ; preds = %check_class_id1524
  %obj_array1531 = bitcast %"struct.rubinius::Object"* %self1520 to %"struct.rubinius::Object"**, !dbg !62
  %field_pos1532 = getelementptr %"struct.rubinius::Object"** %obj_array1531, i32 9, !dbg !62
  %field1533 = load %"struct.rubinius::Object"** %field_pos1532, !dbg !62
  %prune_undef1534 = icmp eq %"struct.rubinius::Object"* %field1533, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !62
  %"select ivar1535" = select i1 %prune_undef1534, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1533, !dbg !62
  %stack_pos1536 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %"select ivar1535", %"struct.rubinius::Object"** %stack_pos1536, !dbg !62
  br label %continue1518, !dbg !62

visit_push_ivar_fallback1517:                     ; preds = %check_class_id1524, %continue1456
  %158 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !62
  %self1537 = load %"struct.rubinius::Object"** %158, !dbg !62
  %ivar1538 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1537, %"struct.rubinius::Object"* inttoptr (i64 65670 to %"struct.rubinius::Object"*)) #0, !dbg !62
  %stack_pos1539 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %ivar1538, %"struct.rubinius::Object"** %stack_pos1539, !dbg !62
  br label %continue1518, !dbg !62

continue1545:                                     ; preds = %check_active1600, %continue1578
  %send_result1602 = phi %"struct.rubinius::Object"* [ %162, %continue1578 ], [ %call_site_execute1599, %check_active1600 ], !dbg !62
  %stack_pos1603 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %send_result1602, %"struct.rubinius::Object"** %stack_pos1603, !dbg !62
  %local_pos1604 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !62
  %local1605 = load %"struct.rubinius::Object"** %local_pos1604, !dbg !62, !rbx-classid !38
  %stack_pos1606 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %local1605, %"struct.rubinius::Object"** %stack_pos1606, !dbg !62
  %stack_pos1610 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1611 = load %"struct.rubinius::Object"** %stack_pos1610, !dbg !62, !rbx-classid !38
  %stack_pos1612 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1613 = load %"struct.rubinius::Object"** %stack_pos1612, !dbg !62, !rbx-classid !38
  %obj_array1614 = bitcast %"struct.rubinius::Object"* %stack_load1613 to %"struct.rubinius::Object"**, !dbg !62
  %field_pos1615 = getelementptr %"struct.rubinius::Object"** %obj_array1614, i32 9, !dbg !62
  %field1616 = load %"struct.rubinius::Object"** %field_pos1615, !dbg !62
  %prune_undef1617 = icmp eq %"struct.rubinius::Object"* %field1616, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !62
  %"select ivar1618" = select i1 %prune_undef1617, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1616, !dbg !62
  %stack_pos1619 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %"select ivar1618", %"struct.rubinius::Object"** %stack_pos1619, !dbg !62
  br label %continue1609, !dbg !62

check_class_id1551:                               ; preds = %continue1518
  %class_pos1554 = getelementptr %"struct.rubinius::Object"* %stack_load1547, i32 0, i32 0, i32 1, !dbg !62
  %ref_class1555 = load %"struct.rubinius::Class"** %class_pos1554, !dbg !62
  %class_id_pos1556 = getelementptr %"struct.rubinius::Class"* %ref_class1555, i32 0, i32 4, !dbg !62
  %class_id1557 = load i32* %class_id_pos1556, !dbg !62
  %check_class_id1558 = icmp eq i32 %class_id1557, 77, !dbg !62
  br i1 %check_class_id1558, label %correct_class1552, label %class_fallback1543, !dbg !62

correct_class1552:                                ; preds = %check_class_id1551
  %serial_id_pos1559 = getelementptr %"struct.rubinius::Class"* %ref_class1555, i32 0, i32 5, !dbg !62
  %serial_id1560 = load i32* %serial_id_pos1559, !dbg !62
  %check_serial_id1561 = icmp eq i32 %serial_id1560, 224, !dbg !62
  br i1 %check_serial_id1561, label %correct_serial1553, label %serial_fallback1544, !dbg !62

correct_serial1553:                               ; preds = %correct_class1552
  %stack_pos1562 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1563 = load %"struct.rubinius::Object"** %stack_pos1562, !dbg !62, !rbx-classid !63
  %cast1565 = ptrtoint %"struct.rubinius::Object"* %stack_load1563 to i64, !dbg !62
  %masked1566 = and i64 %cast1565, 3, !dbg !62
  %is_reference1567 = icmp eq i64 %masked1566, 0, !dbg !62
  br i1 %is_reference1567, label %check_class_id1568, label %continue1564, !dbg !62

serial_fallback1544:                              ; preds = %correct_class1552
  store i32 117, i32* %ip_pos164, !dbg !62
  %159 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 117, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !62
  br label %return_pad126, !dbg !62

check_class_id1568:                               ; preds = %correct_serial1553
  %class_pos1570 = getelementptr %"struct.rubinius::Object"* %stack_load1563, i32 0, i32 0, i32 1, !dbg !62
  %ref_class1571 = load %"struct.rubinius::Class"** %class_pos1570, !dbg !62
  %class_id_pos1572 = getelementptr %"struct.rubinius::Class"* %ref_class1571, i32 0, i32 4, !dbg !62
  %class_id1573 = load i32* %class_id_pos1572, !dbg !62
  %check_class_id1574 = icmp eq i32 %class_id1573, 77, !dbg !62
  br i1 %check_class_id1574, label %correct_class1569, label %continue1564, !dbg !62

correct_class1569:                                ; preds = %check_class_id1568
  %arg_float1575 = bitcast %"struct.rubinius::Object"* %stack_load1563 to %"struct.rubinius::Float"*, !dbg !62
  %arg.value_pos1576 = getelementptr %"struct.rubinius::Float"* %arg_float1575, i32 0, i32 1, !dbg !62
  %farg1577 = load double* %arg.value_pos1576, !dbg !62
  br label %continue1578, !dbg !62

continue1564:                                     ; preds = %check_class_id1568, %correct_serial1553
  %cast1579 = ptrtoint %"struct.rubinius::Object"* %stack_load1563 to i64, !dbg !62
  %masked1580 = and i64 %cast1579, 1, !dbg !62
  %is_fixnum1581 = icmp eq i64 %masked1580, 1, !dbg !62
  br i1 %is_fixnum1581, label %guarded_body1582, label %class_fallback1543, !dbg !62

guarded_body1582:                                 ; preds = %continue1564
  %as_int1583 = ptrtoint %"struct.rubinius::Object"* %stack_load1563 to i64, !dbg !62
  %ashr1584 = ashr i64 %as_int1583, 1, !dbg !62
  %160 = sitofp i64 %ashr1584 to double, !dbg !62
  br label %continue1578, !dbg !62

continue1578:                                     ; preds = %guarded_body1582, %correct_class1569
  %rhs1585 = phi double [ %farg1577, %correct_class1569 ], [ %160, %guarded_body1582 ], !dbg !62
  %stack_pos1586 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  %stack_load1587 = load %"struct.rubinius::Object"** %stack_pos1586, !dbg !62
  %self_float1588 = bitcast %"struct.rubinius::Object"* %stack_load1587 to %"struct.rubinius::Float"*, !dbg !62
  %self.value_pos1589 = getelementptr %"struct.rubinius::Float"* %self_float1588, i32 0, i32 1, !dbg !62
  %fself1590 = load double* %self.value_pos1589, !dbg !62
  %float.mul1591 = fmul double %fself1590, %rhs1585, !dbg !62
  %result1592 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !62, !rbx-classid !37
  %161 = getelementptr %"struct.rubinius::Float"* %result1592, i32 0, i32 1, !dbg !62
  store double %float.mul1591, double* %161, !dbg !62
  %162 = bitcast %"struct.rubinius::Float"* %result1592 to %"struct.rubinius::Object"*, !dbg !62
  br label %continue1545, !dbg !62

class_fallback1543:                               ; preds = %continue1564, %check_class_id1551, %continue1518
  %stack_pos1593 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  %stack_load1594 = load %"struct.rubinius::Object"** %stack_pos1593, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1594, %"struct.rubinius::Object"** %out_args_recv166, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !62
  store i32 1, i32* %out_args_total168, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !62
  %stack_pos1595 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos1595, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !62
  %cache_const1596 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549344 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos1597 = getelementptr %"struct.rubinius::CallSite"* %cache_const1596, i32 0, i32 2, !dbg !62
  %execute1598 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1597, !dbg !62
  store i32 117, i32* %ip_pos164, !dbg !62
  %call_site_execute1599 = call %"struct.rubinius::Object"* %execute1598(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1596, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1601 = icmp eq %"struct.rubinius::Object"* %call_site_execute1599, null, !dbg !62
  br i1 %null_check1601, label %bail_out159, label %check_active1600, !dbg !62

check_active1600:                                 ; preds = %class_fallback1543
  br label %continue1545, !dbg !62

class_fallback1607:                               ; No predecessors!
  store i32 122, i32* %ip_pos164, !dbg !62
  %163 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 122, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !62
  br label %return_pad126, !dbg !62

serial_fallback1608:                              ; No predecessors!
  store i32 122, i32* %ip_pos164, !dbg !62
  %164 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 122, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !62
  br label %return_pad126, !dbg !62

continue1609:                                     ; preds = %continue1545
  %local_pos1620 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 9, !dbg !62
  %local1621 = load %"struct.rubinius::Object"** %local_pos1620, !dbg !62, !rbx-classid !63
  %stack_pos1622 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %local1621, %"struct.rubinius::Object"** %stack_pos1622, !dbg !62
  %stack_pos1626 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1627 = load %"struct.rubinius::Object"** %stack_pos1626, !dbg !62
  %cast1628 = ptrtoint %"struct.rubinius::Object"* %stack_load1627 to i64, !dbg !62
  %masked1629 = and i64 %cast1628, 3, !dbg !62
  %is_reference1630 = icmp eq i64 %masked1629, 0, !dbg !62
  br i1 %is_reference1630, label %check_class_id1631, label %class_fallback1623, !dbg !62

continue1625:                                     ; preds = %check_active1680, %continue1658
  %send_result1682 = phi %"struct.rubinius::Object"* [ %173, %continue1658 ], [ %call_site_execute1679, %check_active1680 ], !dbg !62
  %stack_pos1683 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %send_result1682, %"struct.rubinius::Object"** %stack_pos1683, !dbg !62
  %stack_pos1684 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  %165 = getelementptr %"struct.rubinius::Object"** %stack_pos1684, i32 0, !dbg !62
  %166 = load %"struct.rubinius::Object"** %165, !dbg !62
  %stack_pos1685 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %166, %"struct.rubinius::Object"** %stack_pos1685, !dbg !62
  %167 = getelementptr %"struct.rubinius::Object"** %stack_pos1684, i32 1, !dbg !62
  %168 = load %"struct.rubinius::Object"** %167, !dbg !62
  %stack_pos1686 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !62
  store %"struct.rubinius::Object"* %168, %"struct.rubinius::Object"** %stack_pos1686, !dbg !62
  %stack_pos1687 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  %constant1688 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos1687), !dbg !62, !rbx-classid !64
  %stack_pos1689 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %constant1688, %"struct.rubinius::Object"** %stack_pos1689, !dbg !62
  %stack_pos1690 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  %stack_load1691 = load %"struct.rubinius::Object"** %stack_pos1690, !dbg !62, !rbx-classid !64
  %stack_pos1692 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1693 = load %"struct.rubinius::Object"** %stack_pos1692, !dbg !62
  %stack_pos1694 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1693, %"struct.rubinius::Object"** %stack_pos1694, !dbg !62
  %stack_pos1695 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  %stack_load1696 = load %"struct.rubinius::Object"** %stack_pos1695, !dbg !62
  %stack_pos1697 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1696, %"struct.rubinius::Object"** %stack_pos1697, !dbg !62
  %stack_pos1698 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1691, %"struct.rubinius::Object"** %stack_pos1698, !dbg !62
  %stack_pos1699 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_pos1700 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  %rotate = load %"struct.rubinius::Object"** %stack_pos1699, !dbg !62
  %rotate1701 = load %"struct.rubinius::Object"** %stack_pos1700, !dbg !62
  %stack_pos1702 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  store %"struct.rubinius::Object"* %rotate1701, %"struct.rubinius::Object"** %stack_pos1702, !dbg !62
  %stack_pos1703 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"* %rotate, %"struct.rubinius::Object"** %stack_pos1703, !dbg !62
  %local_pos1704 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 10, !dbg !62
  %stack_pos1705 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  %stack_load1706 = load %"struct.rubinius::Object"** %stack_pos1705, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1706, %"struct.rubinius::Object"** %local_pos1704, !dbg !62
  %local_pos1707 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 11, !dbg !62
  %stack_pos1708 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1709 = load %"struct.rubinius::Object"** %stack_pos1708, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1709, %"struct.rubinius::Object"** %local_pos1707, !dbg !62
  %stack_pos1712 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1712, !dbg !65
  %169 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !65
  %self1713 = load %"struct.rubinius::Object"** %169, !dbg !65
  %cast1714 = ptrtoint %"struct.rubinius::Object"* %self1713 to i64, !dbg !65
  %masked1715 = and i64 %cast1714, 3, !dbg !65
  %is_reference1716 = icmp eq i64 %masked1715, 0, !dbg !65
  br i1 %is_reference1716, label %check_class_id1717, label %visit_push_ivar_fallback1710, !dbg !65

check_class_id1631:                               ; preds = %continue1609
  %class_pos1634 = getelementptr %"struct.rubinius::Object"* %stack_load1627, i32 0, i32 0, i32 1, !dbg !62
  %ref_class1635 = load %"struct.rubinius::Class"** %class_pos1634, !dbg !62
  %class_id_pos1636 = getelementptr %"struct.rubinius::Class"* %ref_class1635, i32 0, i32 4, !dbg !62
  %class_id1637 = load i32* %class_id_pos1636, !dbg !62
  %check_class_id1638 = icmp eq i32 %class_id1637, 77, !dbg !62
  br i1 %check_class_id1638, label %correct_class1632, label %class_fallback1623, !dbg !62

correct_class1632:                                ; preds = %check_class_id1631
  %serial_id_pos1639 = getelementptr %"struct.rubinius::Class"* %ref_class1635, i32 0, i32 5, !dbg !62
  %serial_id1640 = load i32* %serial_id_pos1639, !dbg !62
  %check_serial_id1641 = icmp eq i32 %serial_id1640, 224, !dbg !62
  br i1 %check_serial_id1641, label %correct_serial1633, label %serial_fallback1624, !dbg !62

correct_serial1633:                               ; preds = %correct_class1632
  %stack_pos1642 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  %stack_load1643 = load %"struct.rubinius::Object"** %stack_pos1642, !dbg !62, !rbx-classid !63
  %cast1645 = ptrtoint %"struct.rubinius::Object"* %stack_load1643 to i64, !dbg !62
  %masked1646 = and i64 %cast1645, 3, !dbg !62
  %is_reference1647 = icmp eq i64 %masked1646, 0, !dbg !62
  br i1 %is_reference1647, label %check_class_id1648, label %continue1644, !dbg !62

serial_fallback1624:                              ; preds = %correct_class1632
  store i32 127, i32* %ip_pos164, !dbg !62
  %170 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 127, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !62
  br label %return_pad126, !dbg !62

check_class_id1648:                               ; preds = %correct_serial1633
  %class_pos1650 = getelementptr %"struct.rubinius::Object"* %stack_load1643, i32 0, i32 0, i32 1, !dbg !62
  %ref_class1651 = load %"struct.rubinius::Class"** %class_pos1650, !dbg !62
  %class_id_pos1652 = getelementptr %"struct.rubinius::Class"* %ref_class1651, i32 0, i32 4, !dbg !62
  %class_id1653 = load i32* %class_id_pos1652, !dbg !62
  %check_class_id1654 = icmp eq i32 %class_id1653, 77, !dbg !62
  br i1 %check_class_id1654, label %correct_class1649, label %continue1644, !dbg !62

correct_class1649:                                ; preds = %check_class_id1648
  %arg_float1655 = bitcast %"struct.rubinius::Object"* %stack_load1643 to %"struct.rubinius::Float"*, !dbg !62
  %arg.value_pos1656 = getelementptr %"struct.rubinius::Float"* %arg_float1655, i32 0, i32 1, !dbg !62
  %farg1657 = load double* %arg.value_pos1656, !dbg !62
  br label %continue1658, !dbg !62

continue1644:                                     ; preds = %check_class_id1648, %correct_serial1633
  %cast1659 = ptrtoint %"struct.rubinius::Object"* %stack_load1643 to i64, !dbg !62
  %masked1660 = and i64 %cast1659, 1, !dbg !62
  %is_fixnum1661 = icmp eq i64 %masked1660, 1, !dbg !62
  br i1 %is_fixnum1661, label %guarded_body1662, label %class_fallback1623, !dbg !62

guarded_body1662:                                 ; preds = %continue1644
  %as_int1663 = ptrtoint %"struct.rubinius::Object"* %stack_load1643 to i64, !dbg !62
  %ashr1664 = ashr i64 %as_int1663, 1, !dbg !62
  %171 = sitofp i64 %ashr1664 to double, !dbg !62
  br label %continue1658, !dbg !62

continue1658:                                     ; preds = %guarded_body1662, %correct_class1649
  %rhs1665 = phi double [ %farg1657, %correct_class1649 ], [ %171, %guarded_body1662 ], !dbg !62
  %stack_pos1666 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1667 = load %"struct.rubinius::Object"** %stack_pos1666, !dbg !62
  %self_float1668 = bitcast %"struct.rubinius::Object"* %stack_load1667 to %"struct.rubinius::Float"*, !dbg !62
  %self.value_pos1669 = getelementptr %"struct.rubinius::Float"* %self_float1668, i32 0, i32 1, !dbg !62
  %fself1670 = load double* %self.value_pos1669, !dbg !62
  %float.mul1671 = fmul double %fself1670, %rhs1665, !dbg !62
  %result1672 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !62, !rbx-classid !37
  %172 = getelementptr %"struct.rubinius::Float"* %result1672, i32 0, i32 1, !dbg !62
  store double %float.mul1671, double* %172, !dbg !62
  %173 = bitcast %"struct.rubinius::Float"* %result1672 to %"struct.rubinius::Object"*, !dbg !62
  br label %continue1625, !dbg !62

class_fallback1623:                               ; preds = %continue1644, %check_class_id1631, %continue1609
  %stack_pos1673 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !62
  %stack_load1674 = load %"struct.rubinius::Object"** %stack_pos1673, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1674, %"struct.rubinius::Object"** %out_args_recv166, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !62
  store i32 1, i32* %out_args_total168, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !62
  %stack_pos1675 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos1675, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !62
  %cache_const1676 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549424 to %"struct.rubinius::CallSite"**), !dbg !62
  %execute_pos1677 = getelementptr %"struct.rubinius::CallSite"* %cache_const1676, i32 0, i32 2, !dbg !62
  %execute1678 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1677, !dbg !62
  store i32 127, i32* %ip_pos164, !dbg !62
  %call_site_execute1679 = call %"struct.rubinius::Object"* %execute1678(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1676, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1681 = icmp eq %"struct.rubinius::Object"* %call_site_execute1679, null, !dbg !62
  br i1 %null_check1681, label %bail_out159, label %check_active1680, !dbg !62

check_active1680:                                 ; preds = %class_fallback1623
  br label %continue1625, !dbg !62

continue1711:                                     ; preds = %visit_push_ivar_fallback1710, %correct_class1718
  %local_pos1733 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 5, !dbg !65
  %local1734 = load %"struct.rubinius::Object"** %local_pos1733, !dbg !65, !rbx-classid !42
  %stack_pos1735 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %local1734, %"struct.rubinius::Object"** %stack_pos1735, !dbg !65
  %local_pos1736 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 11, !dbg !65
  %local1737 = load %"struct.rubinius::Object"** %local_pos1736, !dbg !65, !rbx-classid !66
  %stack_pos1738 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !65
  store %"struct.rubinius::Object"* %local1737, %"struct.rubinius::Object"** %stack_pos1738, !dbg !65
  %stack_pos1742 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  %stack_load1743 = load %"struct.rubinius::Object"** %stack_pos1742, !dbg !65, !rbx-classid !42
  %cast1744 = ptrtoint %"struct.rubinius::Object"* %stack_load1743 to i64, !dbg !65
  %masked1745 = and i64 %cast1744, 3, !dbg !65
  %is_reference1746 = icmp eq i64 %masked1745, 0, !dbg !65
  br i1 %is_reference1746, label %check_class_id1747, label %class_fallback1739, !dbg !65

check_class_id1717:                               ; preds = %continue1625
  %class_pos1719 = getelementptr %"struct.rubinius::Object"* %self1713, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1720 = load %"struct.rubinius::Class"** %class_pos1719, !dbg !65
  %class_id_pos1721 = getelementptr %"struct.rubinius::Class"* %ref_class1720, i32 0, i32 4, !dbg !65
  %class_id1722 = load i32* %class_id_pos1721, !dbg !65
  %check_class_id1723 = icmp eq i32 %class_id1722, 1285, !dbg !65
  br i1 %check_class_id1723, label %correct_class1718, label %visit_push_ivar_fallback1710, !dbg !65

correct_class1718:                                ; preds = %check_class_id1717
  %obj_array1724 = bitcast %"struct.rubinius::Object"* %self1713 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1725 = getelementptr %"struct.rubinius::Object"** %obj_array1724, i32 6, !dbg !65
  %field1726 = load %"struct.rubinius::Object"** %field_pos1725, !dbg !65
  %prune_undef1727 = icmp eq %"struct.rubinius::Object"* %field1726, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !65
  %"select ivar1728" = select i1 %prune_undef1727, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1726, !dbg !65
  %stack_pos1729 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %"select ivar1728", %"struct.rubinius::Object"** %stack_pos1729, !dbg !65
  br label %continue1711, !dbg !65

visit_push_ivar_fallback1710:                     ; preds = %check_class_id1717, %continue1625
  %174 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !65
  %self1730 = load %"struct.rubinius::Object"** %174, !dbg !65
  %ivar1731 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1730, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !65
  %stack_pos1732 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %ivar1731, %"struct.rubinius::Object"** %stack_pos1732, !dbg !65
  br label %continue1711, !dbg !65

continue1741:                                     ; preds = %check_active1796, %continue1774
  %send_result1798 = phi %"struct.rubinius::Object"* [ %178, %continue1774 ], [ %call_site_execute1795, %check_active1796 ], !dbg !65
  %stack_pos1799 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %send_result1798, %"struct.rubinius::Object"** %stack_pos1799, !dbg !65
  %stack_pos1803 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  %stack_load1804 = load %"struct.rubinius::Object"** %stack_pos1803, !dbg !65
  %cast1805 = ptrtoint %"struct.rubinius::Object"* %stack_load1804 to i64, !dbg !65
  %masked1806 = and i64 %cast1805, 3, !dbg !65
  %is_reference1807 = icmp eq i64 %masked1806, 0, !dbg !65
  br i1 %is_reference1807, label %check_class_id1808, label %class_fallback1800, !dbg !65

check_class_id1747:                               ; preds = %continue1711
  %class_pos1750 = getelementptr %"struct.rubinius::Object"* %stack_load1743, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1751 = load %"struct.rubinius::Class"** %class_pos1750, !dbg !65
  %class_id_pos1752 = getelementptr %"struct.rubinius::Class"* %ref_class1751, i32 0, i32 4, !dbg !65
  %class_id1753 = load i32* %class_id_pos1752, !dbg !65
  %check_class_id1754 = icmp eq i32 %class_id1753, 77, !dbg !65
  br i1 %check_class_id1754, label %correct_class1748, label %class_fallback1739, !dbg !65

correct_class1748:                                ; preds = %check_class_id1747
  %serial_id_pos1755 = getelementptr %"struct.rubinius::Class"* %ref_class1751, i32 0, i32 5, !dbg !65
  %serial_id1756 = load i32* %serial_id_pos1755, !dbg !65
  %check_serial_id1757 = icmp eq i32 %serial_id1756, 224, !dbg !65
  br i1 %check_serial_id1757, label %correct_serial1749, label %serial_fallback1740, !dbg !65

correct_serial1749:                               ; preds = %correct_class1748
  %stack_pos1758 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !65
  %stack_load1759 = load %"struct.rubinius::Object"** %stack_pos1758, !dbg !65, !rbx-classid !66
  %cast1761 = ptrtoint %"struct.rubinius::Object"* %stack_load1759 to i64, !dbg !65
  %masked1762 = and i64 %cast1761, 3, !dbg !65
  %is_reference1763 = icmp eq i64 %masked1762, 0, !dbg !65
  br i1 %is_reference1763, label %check_class_id1764, label %continue1760, !dbg !65

serial_fallback1740:                              ; preds = %correct_class1748
  store i32 151, i32* %ip_pos164, !dbg !65
  %175 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 151, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !65
  br label %return_pad126, !dbg !65

check_class_id1764:                               ; preds = %correct_serial1749
  %class_pos1766 = getelementptr %"struct.rubinius::Object"* %stack_load1759, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1767 = load %"struct.rubinius::Class"** %class_pos1766, !dbg !65
  %class_id_pos1768 = getelementptr %"struct.rubinius::Class"* %ref_class1767, i32 0, i32 4, !dbg !65
  %class_id1769 = load i32* %class_id_pos1768, !dbg !65
  %check_class_id1770 = icmp eq i32 %class_id1769, 77, !dbg !65
  br i1 %check_class_id1770, label %correct_class1765, label %continue1760, !dbg !65

correct_class1765:                                ; preds = %check_class_id1764
  %arg_float1771 = bitcast %"struct.rubinius::Object"* %stack_load1759 to %"struct.rubinius::Float"*, !dbg !65
  %arg.value_pos1772 = getelementptr %"struct.rubinius::Float"* %arg_float1771, i32 0, i32 1, !dbg !65
  %farg1773 = load double* %arg.value_pos1772, !dbg !65
  br label %continue1774, !dbg !65

continue1760:                                     ; preds = %check_class_id1764, %correct_serial1749
  %cast1775 = ptrtoint %"struct.rubinius::Object"* %stack_load1759 to i64, !dbg !65
  %masked1776 = and i64 %cast1775, 1, !dbg !65
  %is_fixnum1777 = icmp eq i64 %masked1776, 1, !dbg !65
  br i1 %is_fixnum1777, label %guarded_body1778, label %class_fallback1739, !dbg !65

guarded_body1778:                                 ; preds = %continue1760
  %as_int1779 = ptrtoint %"struct.rubinius::Object"* %stack_load1759 to i64, !dbg !65
  %ashr1780 = ashr i64 %as_int1779, 1, !dbg !65
  %176 = sitofp i64 %ashr1780 to double, !dbg !65
  br label %continue1774, !dbg !65

continue1774:                                     ; preds = %guarded_body1778, %correct_class1765
  %rhs1781 = phi double [ %farg1773, %correct_class1765 ], [ %176, %guarded_body1778 ], !dbg !65
  %stack_pos1782 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  %stack_load1783 = load %"struct.rubinius::Object"** %stack_pos1782, !dbg !65, !rbx-classid !42
  %self_float1784 = bitcast %"struct.rubinius::Object"* %stack_load1783 to %"struct.rubinius::Float"*, !dbg !65
  %self.value_pos1785 = getelementptr %"struct.rubinius::Float"* %self_float1784, i32 0, i32 1, !dbg !65
  %fself1786 = load double* %self.value_pos1785, !dbg !65
  %float.mul1787 = fmul double %fself1786, %rhs1781, !dbg !65
  %result1788 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !65, !rbx-classid !37
  %177 = getelementptr %"struct.rubinius::Float"* %result1788, i32 0, i32 1, !dbg !65
  store double %float.mul1787, double* %177, !dbg !65
  %178 = bitcast %"struct.rubinius::Float"* %result1788 to %"struct.rubinius::Object"*, !dbg !65
  br label %continue1741, !dbg !65

class_fallback1739:                               ; preds = %continue1760, %check_class_id1747, %continue1711
  %stack_pos1789 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  %stack_load1790 = load %"struct.rubinius::Object"** %stack_pos1789, !dbg !65, !rbx-classid !42
  store %"struct.rubinius::Object"* %stack_load1790, %"struct.rubinius::Object"** %out_args_recv166, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !65
  store i32 1, i32* %out_args_total168, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !65
  %stack_pos1791 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1791, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !65
  %cache_const1792 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549616 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1793 = getelementptr %"struct.rubinius::CallSite"* %cache_const1792, i32 0, i32 2, !dbg !65
  %execute1794 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1793, !dbg !65
  store i32 151, i32* %ip_pos164, !dbg !65
  %call_site_execute1795 = call %"struct.rubinius::Object"* %execute1794(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1792, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1797 = icmp eq %"struct.rubinius::Object"* %call_site_execute1795, null, !dbg !65
  br i1 %null_check1797, label %bail_out159, label %check_active1796, !dbg !65

check_active1796:                                 ; preds = %class_fallback1739
  br label %continue1741, !dbg !65

continue1802:                                     ; preds = %check_active1857, %continue1835
  %send_result1859 = phi %"struct.rubinius::Object"* [ %183, %continue1835 ], [ %call_site_execute1856, %check_active1857 ], !dbg !65
  %stack_pos1860 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %send_result1859, %"struct.rubinius::Object"** %stack_pos1860, !dbg !65
  %179 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !65
  %self1861 = load %"struct.rubinius::Object"** %179, !dbg !65
  %stack_pos1862 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  %stack_load1863 = load %"struct.rubinius::Object"** %stack_pos1862, !dbg !65
  %cast1866 = ptrtoint %"struct.rubinius::Object"* %self1861 to i64, !dbg !65
  %masked1867 = and i64 %cast1866, 3, !dbg !65
  %is_reference1868 = icmp eq i64 %masked1867, 0, !dbg !65
  br i1 %is_reference1868, label %check_class_id1869, label %visit_push_ivar_fallback1864, !dbg !65

check_class_id1808:                               ; preds = %continue1741
  %class_pos1811 = getelementptr %"struct.rubinius::Object"* %stack_load1804, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1812 = load %"struct.rubinius::Class"** %class_pos1811, !dbg !65
  %class_id_pos1813 = getelementptr %"struct.rubinius::Class"* %ref_class1812, i32 0, i32 4, !dbg !65
  %class_id1814 = load i32* %class_id_pos1813, !dbg !65
  %check_class_id1815 = icmp eq i32 %class_id1814, 77, !dbg !65
  br i1 %check_class_id1815, label %correct_class1809, label %class_fallback1800, !dbg !65

correct_class1809:                                ; preds = %check_class_id1808
  %serial_id_pos1816 = getelementptr %"struct.rubinius::Class"* %ref_class1812, i32 0, i32 5, !dbg !65
  %serial_id1817 = load i32* %serial_id_pos1816, !dbg !65
  %check_serial_id1818 = icmp eq i32 %serial_id1817, 224, !dbg !65
  br i1 %check_serial_id1818, label %correct_serial1810, label %serial_fallback1801, !dbg !65

correct_serial1810:                               ; preds = %correct_class1809
  %stack_pos1819 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  %stack_load1820 = load %"struct.rubinius::Object"** %stack_pos1819, !dbg !65
  %cast1822 = ptrtoint %"struct.rubinius::Object"* %stack_load1820 to i64, !dbg !65
  %masked1823 = and i64 %cast1822, 3, !dbg !65
  %is_reference1824 = icmp eq i64 %masked1823, 0, !dbg !65
  br i1 %is_reference1824, label %check_class_id1825, label %continue1821, !dbg !65

serial_fallback1801:                              ; preds = %correct_class1809
  store i32 154, i32* %ip_pos164, !dbg !65
  %180 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 154, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !65
  br label %return_pad126, !dbg !65

check_class_id1825:                               ; preds = %correct_serial1810
  %class_pos1827 = getelementptr %"struct.rubinius::Object"* %stack_load1820, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1828 = load %"struct.rubinius::Class"** %class_pos1827, !dbg !65
  %class_id_pos1829 = getelementptr %"struct.rubinius::Class"* %ref_class1828, i32 0, i32 4, !dbg !65
  %class_id1830 = load i32* %class_id_pos1829, !dbg !65
  %check_class_id1831 = icmp eq i32 %class_id1830, 77, !dbg !65
  br i1 %check_class_id1831, label %correct_class1826, label %continue1821, !dbg !65

correct_class1826:                                ; preds = %check_class_id1825
  %arg_float1832 = bitcast %"struct.rubinius::Object"* %stack_load1820 to %"struct.rubinius::Float"*, !dbg !65
  %arg.value_pos1833 = getelementptr %"struct.rubinius::Float"* %arg_float1832, i32 0, i32 1, !dbg !65
  %farg1834 = load double* %arg.value_pos1833, !dbg !65
  br label %continue1835, !dbg !65

continue1821:                                     ; preds = %check_class_id1825, %correct_serial1810
  %cast1836 = ptrtoint %"struct.rubinius::Object"* %stack_load1820 to i64, !dbg !65
  %masked1837 = and i64 %cast1836, 1, !dbg !65
  %is_fixnum1838 = icmp eq i64 %masked1837, 1, !dbg !65
  br i1 %is_fixnum1838, label %guarded_body1839, label %class_fallback1800, !dbg !65

guarded_body1839:                                 ; preds = %continue1821
  %as_int1840 = ptrtoint %"struct.rubinius::Object"* %stack_load1820 to i64, !dbg !65
  %ashr1841 = ashr i64 %as_int1840, 1, !dbg !65
  %181 = sitofp i64 %ashr1841 to double, !dbg !65
  br label %continue1835, !dbg !65

continue1835:                                     ; preds = %guarded_body1839, %correct_class1826
  %rhs1842 = phi double [ %farg1834, %correct_class1826 ], [ %181, %guarded_body1839 ], !dbg !65
  %stack_pos1843 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  %stack_load1844 = load %"struct.rubinius::Object"** %stack_pos1843, !dbg !65
  %self_float1845 = bitcast %"struct.rubinius::Object"* %stack_load1844 to %"struct.rubinius::Float"*, !dbg !65
  %self.value_pos1846 = getelementptr %"struct.rubinius::Float"* %self_float1845, i32 0, i32 1, !dbg !65
  %fself1847 = load double* %self.value_pos1846, !dbg !65
  %float.sub1848 = fsub double %fself1847, %rhs1842, !dbg !65
  %result1849 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !65, !rbx-classid !37
  %182 = getelementptr %"struct.rubinius::Float"* %result1849, i32 0, i32 1, !dbg !65
  store double %float.sub1848, double* %182, !dbg !65
  %183 = bitcast %"struct.rubinius::Float"* %result1849 to %"struct.rubinius::Object"*, !dbg !65
  br label %continue1802, !dbg !65

class_fallback1800:                               ; preds = %continue1821, %check_class_id1808, %continue1741
  %stack_pos1850 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !65
  %stack_load1851 = load %"struct.rubinius::Object"** %stack_pos1850, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1851, %"struct.rubinius::Object"** %out_args_recv166, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !65
  store i32 1, i32* %out_args_total168, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !65
  %stack_pos1852 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1852, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !65
  %cache_const1853 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549640 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1854 = getelementptr %"struct.rubinius::CallSite"* %cache_const1853, i32 0, i32 2, !dbg !65
  %execute1855 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1854, !dbg !65
  store i32 154, i32* %ip_pos164, !dbg !65
  %call_site_execute1856 = call %"struct.rubinius::Object"* %execute1855(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1853, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1858 = icmp eq %"struct.rubinius::Object"* %call_site_execute1856, null, !dbg !65
  br i1 %null_check1858, label %bail_out159, label %check_active1857, !dbg !65

check_active1857:                                 ; preds = %class_fallback1800
  br label %continue1802, !dbg !65

continue1865:                                     ; preds = %continue1884, %done
  %stack_pos1889 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1889, !dbg !67
  %184 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !67
  %self1890 = load %"struct.rubinius::Object"** %184, !dbg !67
  %cast1891 = ptrtoint %"struct.rubinius::Object"* %self1890 to i64, !dbg !67
  %masked1892 = and i64 %cast1891, 3, !dbg !67
  %is_reference1893 = icmp eq i64 %masked1892, 0, !dbg !67
  br i1 %is_reference1893, label %check_class_id1894, label %visit_push_ivar_fallback1887, !dbg !67

check_class_id1869:                               ; preds = %continue1802
  %class_pos1871 = getelementptr %"struct.rubinius::Object"* %self1861, i32 0, i32 0, i32 1, !dbg !65
  %ref_class1872 = load %"struct.rubinius::Class"** %class_pos1871, !dbg !65
  %class_id_pos1873 = getelementptr %"struct.rubinius::Class"* %ref_class1872, i32 0, i32 4, !dbg !65
  %class_id1874 = load i32* %class_id_pos1873, !dbg !65
  %check_class_id1875 = icmp eq i32 %class_id1874, 1285, !dbg !65
  br i1 %check_class_id1875, label %correct_class1870, label %visit_push_ivar_fallback1864, !dbg !65

correct_class1870:                                ; preds = %check_class_id1869
  %obj_array1876 = bitcast %"struct.rubinius::Object"* %self1861 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1877 = getelementptr %"struct.rubinius::Object"** %obj_array1876, i32 6, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1863, %"struct.rubinius::Object"** %field_pos1877, !dbg !65
  %cast1878 = ptrtoint %"struct.rubinius::Object"* %stack_load1863 to i64, !dbg !65
  %masked1879 = and i64 %cast1878, 3, !dbg !65
  %is_reference1880 = icmp eq i64 %masked1879, 0, !dbg !65
  br i1 %is_reference1880, label %reference_obj, label %done, !dbg !65

visit_push_ivar_fallback1864:                     ; preds = %check_class_id1869, %continue1802
  %ivar1883 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self1861, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load1863), !dbg !65
  %null_check1886 = icmp eq %"struct.rubinius::Object"* %ivar1883, null, !dbg !65
  br i1 %null_check1886, label %bail_out159, label %check_active1885, !dbg !65

reference_obj:                                    ; preds = %correct_class1870
  %object_memory_mark = load i32* inttoptr (i64 22565880 to i32*), !dbg !65
  %word_pos1881 = getelementptr %"struct.rubinius::Object"* %self1861, i32 0, i32 0, i32 0, i32 0, !dbg !65
  %flags1882 = load i64* %word_pos1881, !dbg !65
  %mark_mask = and i64 %flags1882, 3670016, !dbg !65
  %scan_mark = add i32 %object_memory_mark, 1, !dbg !65
  %185 = zext i32 %scan_mark to i64, !dbg !65
  %lshr = shl i64 %185, 19, !dbg !65
  %is_scanned = icmp eq i64 %mark_mask, %lshr, !dbg !65
  br i1 %is_scanned, label %run_barrier, label %object_not_scanned, !dbg !65

object_not_scanned:                               ; preds = %reference_obj
  %zone_mask = and i64 %flags1882, 768, !dbg !65
  %is_young = icmp eq i64 %zone_mask, 512, !dbg !65
  br i1 %is_young, label %done, label %run_barrier, !dbg !65

run_barrier:                                      ; preds = %object_not_scanned, %reference_obj
  %186 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1861, %"struct.rubinius::Object"* %stack_load1863), !dbg !65
  br label %done, !dbg !65

done:                                             ; preds = %run_barrier, %object_not_scanned, %correct_class1870
  br label %continue1865, !dbg !65

continue1884:                                     ; preds = %check_active1885
  br label %continue1865, !dbg !65

check_active1885:                                 ; preds = %visit_push_ivar_fallback1864
  br label %continue1884, !dbg !65

continue1888:                                     ; preds = %visit_push_ivar_fallback1887, %correct_class1895
  %local_pos1910 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 6, !dbg !67
  %local1911 = load %"struct.rubinius::Object"** %local_pos1910, !dbg !67, !rbx-classid !43
  %stack_pos1912 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  store %"struct.rubinius::Object"* %local1911, %"struct.rubinius::Object"** %stack_pos1912, !dbg !67
  %local_pos1913 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 11, !dbg !67
  %local1914 = load %"struct.rubinius::Object"** %local_pos1913, !dbg !67, !rbx-classid !66
  %stack_pos1915 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !67
  store %"struct.rubinius::Object"* %local1914, %"struct.rubinius::Object"** %stack_pos1915, !dbg !67
  %stack_pos1919 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  %stack_load1920 = load %"struct.rubinius::Object"** %stack_pos1919, !dbg !67, !rbx-classid !43
  %cast1921 = ptrtoint %"struct.rubinius::Object"* %stack_load1920 to i64, !dbg !67
  %masked1922 = and i64 %cast1921, 3, !dbg !67
  %is_reference1923 = icmp eq i64 %masked1922, 0, !dbg !67
  br i1 %is_reference1923, label %check_class_id1924, label %class_fallback1916, !dbg !67

check_class_id1894:                               ; preds = %continue1865
  %class_pos1896 = getelementptr %"struct.rubinius::Object"* %self1890, i32 0, i32 0, i32 1, !dbg !67
  %ref_class1897 = load %"struct.rubinius::Class"** %class_pos1896, !dbg !67
  %class_id_pos1898 = getelementptr %"struct.rubinius::Class"* %ref_class1897, i32 0, i32 4, !dbg !67
  %class_id1899 = load i32* %class_id_pos1898, !dbg !67
  %check_class_id1900 = icmp eq i32 %class_id1899, 1285, !dbg !67
  br i1 %check_class_id1900, label %correct_class1895, label %visit_push_ivar_fallback1887, !dbg !67

correct_class1895:                                ; preds = %check_class_id1894
  %obj_array1901 = bitcast %"struct.rubinius::Object"* %self1890 to %"struct.rubinius::Object"**, !dbg !67
  %field_pos1902 = getelementptr %"struct.rubinius::Object"** %obj_array1901, i32 7, !dbg !67
  %field1903 = load %"struct.rubinius::Object"** %field_pos1902, !dbg !67
  %prune_undef1904 = icmp eq %"struct.rubinius::Object"* %field1903, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !67
  %"select ivar1905" = select i1 %prune_undef1904, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1903, !dbg !67
  %stack_pos1906 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %"select ivar1905", %"struct.rubinius::Object"** %stack_pos1906, !dbg !67
  br label %continue1888, !dbg !67

visit_push_ivar_fallback1887:                     ; preds = %check_class_id1894, %continue1865
  %187 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !67
  %self1907 = load %"struct.rubinius::Object"** %187, !dbg !67
  %ivar1908 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1907, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !67
  %stack_pos1909 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %ivar1908, %"struct.rubinius::Object"** %stack_pos1909, !dbg !67
  br label %continue1888, !dbg !67

continue1918:                                     ; preds = %check_active1973, %continue1951
  %send_result1975 = phi %"struct.rubinius::Object"* [ %191, %continue1951 ], [ %call_site_execute1972, %check_active1973 ], !dbg !67
  %stack_pos1976 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  store %"struct.rubinius::Object"* %send_result1975, %"struct.rubinius::Object"** %stack_pos1976, !dbg !67
  %stack_pos1980 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  %stack_load1981 = load %"struct.rubinius::Object"** %stack_pos1980, !dbg !67
  %cast1982 = ptrtoint %"struct.rubinius::Object"* %stack_load1981 to i64, !dbg !67
  %masked1983 = and i64 %cast1982, 3, !dbg !67
  %is_reference1984 = icmp eq i64 %masked1983, 0, !dbg !67
  br i1 %is_reference1984, label %check_class_id1985, label %class_fallback1977, !dbg !67

check_class_id1924:                               ; preds = %continue1888
  %class_pos1927 = getelementptr %"struct.rubinius::Object"* %stack_load1920, i32 0, i32 0, i32 1, !dbg !67
  %ref_class1928 = load %"struct.rubinius::Class"** %class_pos1927, !dbg !67
  %class_id_pos1929 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i32 0, i32 4, !dbg !67
  %class_id1930 = load i32* %class_id_pos1929, !dbg !67
  %check_class_id1931 = icmp eq i32 %class_id1930, 77, !dbg !67
  br i1 %check_class_id1931, label %correct_class1925, label %class_fallback1916, !dbg !67

correct_class1925:                                ; preds = %check_class_id1924
  %serial_id_pos1932 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i32 0, i32 5, !dbg !67
  %serial_id1933 = load i32* %serial_id_pos1932, !dbg !67
  %check_serial_id1934 = icmp eq i32 %serial_id1933, 224, !dbg !67
  br i1 %check_serial_id1934, label %correct_serial1926, label %serial_fallback1917, !dbg !67

correct_serial1926:                               ; preds = %correct_class1925
  %stack_pos1935 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !67
  %stack_load1936 = load %"struct.rubinius::Object"** %stack_pos1935, !dbg !67, !rbx-classid !66
  %cast1938 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !67
  %masked1939 = and i64 %cast1938, 3, !dbg !67
  %is_reference1940 = icmp eq i64 %masked1939, 0, !dbg !67
  br i1 %is_reference1940, label %check_class_id1941, label %continue1937, !dbg !67

serial_fallback1917:                              ; preds = %correct_class1925
  store i32 166, i32* %ip_pos164, !dbg !67
  %188 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 166, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !67
  br label %return_pad126, !dbg !67

check_class_id1941:                               ; preds = %correct_serial1926
  %class_pos1943 = getelementptr %"struct.rubinius::Object"* %stack_load1936, i32 0, i32 0, i32 1, !dbg !67
  %ref_class1944 = load %"struct.rubinius::Class"** %class_pos1943, !dbg !67
  %class_id_pos1945 = getelementptr %"struct.rubinius::Class"* %ref_class1944, i32 0, i32 4, !dbg !67
  %class_id1946 = load i32* %class_id_pos1945, !dbg !67
  %check_class_id1947 = icmp eq i32 %class_id1946, 77, !dbg !67
  br i1 %check_class_id1947, label %correct_class1942, label %continue1937, !dbg !67

correct_class1942:                                ; preds = %check_class_id1941
  %arg_float1948 = bitcast %"struct.rubinius::Object"* %stack_load1936 to %"struct.rubinius::Float"*, !dbg !67
  %arg.value_pos1949 = getelementptr %"struct.rubinius::Float"* %arg_float1948, i32 0, i32 1, !dbg !67
  %farg1950 = load double* %arg.value_pos1949, !dbg !67
  br label %continue1951, !dbg !67

continue1937:                                     ; preds = %check_class_id1941, %correct_serial1926
  %cast1952 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !67
  %masked1953 = and i64 %cast1952, 1, !dbg !67
  %is_fixnum1954 = icmp eq i64 %masked1953, 1, !dbg !67
  br i1 %is_fixnum1954, label %guarded_body1955, label %class_fallback1916, !dbg !67

guarded_body1955:                                 ; preds = %continue1937
  %as_int1956 = ptrtoint %"struct.rubinius::Object"* %stack_load1936 to i64, !dbg !67
  %ashr1957 = ashr i64 %as_int1956, 1, !dbg !67
  %189 = sitofp i64 %ashr1957 to double, !dbg !67
  br label %continue1951, !dbg !67

continue1951:                                     ; preds = %guarded_body1955, %correct_class1942
  %rhs1958 = phi double [ %farg1950, %correct_class1942 ], [ %189, %guarded_body1955 ], !dbg !67
  %stack_pos1959 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  %stack_load1960 = load %"struct.rubinius::Object"** %stack_pos1959, !dbg !67, !rbx-classid !43
  %self_float1961 = bitcast %"struct.rubinius::Object"* %stack_load1960 to %"struct.rubinius::Float"*, !dbg !67
  %self.value_pos1962 = getelementptr %"struct.rubinius::Float"* %self_float1961, i32 0, i32 1, !dbg !67
  %fself1963 = load double* %self.value_pos1962, !dbg !67
  %float.mul1964 = fmul double %fself1963, %rhs1958, !dbg !67
  %result1965 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !67, !rbx-classid !37
  %190 = getelementptr %"struct.rubinius::Float"* %result1965, i32 0, i32 1, !dbg !67
  store double %float.mul1964, double* %190, !dbg !67
  %191 = bitcast %"struct.rubinius::Float"* %result1965 to %"struct.rubinius::Object"*, !dbg !67
  br label %continue1918, !dbg !67

class_fallback1916:                               ; preds = %continue1937, %check_class_id1924, %continue1888
  %stack_pos1966 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  %stack_load1967 = load %"struct.rubinius::Object"** %stack_pos1966, !dbg !67, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load1967, %"struct.rubinius::Object"** %out_args_recv166, !dbg !67
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !67
  store i32 1, i32* %out_args_total168, !dbg !67
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !67
  %stack_pos1968 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !67
  store %"struct.rubinius::Object"** %stack_pos1968, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !67
  %cache_const1969 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549736 to %"struct.rubinius::CallSite"**), !dbg !67
  %execute_pos1970 = getelementptr %"struct.rubinius::CallSite"* %cache_const1969, i32 0, i32 2, !dbg !67
  %execute1971 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1970, !dbg !67
  store i32 166, i32* %ip_pos164, !dbg !67
  %call_site_execute1972 = call %"struct.rubinius::Object"* %execute1971(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1969, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !67
  %null_check1974 = icmp eq %"struct.rubinius::Object"* %call_site_execute1972, null, !dbg !67
  br i1 %null_check1974, label %bail_out159, label %check_active1973, !dbg !67

check_active1973:                                 ; preds = %class_fallback1916
  br label %continue1918, !dbg !67

continue1979:                                     ; preds = %check_active2034, %continue2012
  %send_result2036 = phi %"struct.rubinius::Object"* [ %196, %continue2012 ], [ %call_site_execute2033, %check_active2034 ], !dbg !67
  %stack_pos2037 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  store %"struct.rubinius::Object"* %send_result2036, %"struct.rubinius::Object"** %stack_pos2037, !dbg !67
  %192 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !67
  %self2038 = load %"struct.rubinius::Object"** %192, !dbg !67
  %stack_pos2039 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  %stack_load2040 = load %"struct.rubinius::Object"** %stack_pos2039, !dbg !67
  %cast2043 = ptrtoint %"struct.rubinius::Object"* %self2038 to i64, !dbg !67
  %masked2044 = and i64 %cast2043, 3, !dbg !67
  %is_reference2045 = icmp eq i64 %masked2044, 0, !dbg !67
  br i1 %is_reference2045, label %check_class_id2046, label %visit_push_ivar_fallback2041, !dbg !67

check_class_id1985:                               ; preds = %continue1918
  %class_pos1988 = getelementptr %"struct.rubinius::Object"* %stack_load1981, i32 0, i32 0, i32 1, !dbg !67
  %ref_class1989 = load %"struct.rubinius::Class"** %class_pos1988, !dbg !67
  %class_id_pos1990 = getelementptr %"struct.rubinius::Class"* %ref_class1989, i32 0, i32 4, !dbg !67
  %class_id1991 = load i32* %class_id_pos1990, !dbg !67
  %check_class_id1992 = icmp eq i32 %class_id1991, 77, !dbg !67
  br i1 %check_class_id1992, label %correct_class1986, label %class_fallback1977, !dbg !67

correct_class1986:                                ; preds = %check_class_id1985
  %serial_id_pos1993 = getelementptr %"struct.rubinius::Class"* %ref_class1989, i32 0, i32 5, !dbg !67
  %serial_id1994 = load i32* %serial_id_pos1993, !dbg !67
  %check_serial_id1995 = icmp eq i32 %serial_id1994, 224, !dbg !67
  br i1 %check_serial_id1995, label %correct_serial1987, label %serial_fallback1978, !dbg !67

correct_serial1987:                               ; preds = %correct_class1986
  %stack_pos1996 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  %stack_load1997 = load %"struct.rubinius::Object"** %stack_pos1996, !dbg !67
  %cast1999 = ptrtoint %"struct.rubinius::Object"* %stack_load1997 to i64, !dbg !67
  %masked2000 = and i64 %cast1999, 3, !dbg !67
  %is_reference2001 = icmp eq i64 %masked2000, 0, !dbg !67
  br i1 %is_reference2001, label %check_class_id2002, label %continue1998, !dbg !67

serial_fallback1978:                              ; preds = %correct_class1986
  store i32 169, i32* %ip_pos164, !dbg !67
  %193 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 169, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !67
  br label %return_pad126, !dbg !67

check_class_id2002:                               ; preds = %correct_serial1987
  %class_pos2004 = getelementptr %"struct.rubinius::Object"* %stack_load1997, i32 0, i32 0, i32 1, !dbg !67
  %ref_class2005 = load %"struct.rubinius::Class"** %class_pos2004, !dbg !67
  %class_id_pos2006 = getelementptr %"struct.rubinius::Class"* %ref_class2005, i32 0, i32 4, !dbg !67
  %class_id2007 = load i32* %class_id_pos2006, !dbg !67
  %check_class_id2008 = icmp eq i32 %class_id2007, 77, !dbg !67
  br i1 %check_class_id2008, label %correct_class2003, label %continue1998, !dbg !67

correct_class2003:                                ; preds = %check_class_id2002
  %arg_float2009 = bitcast %"struct.rubinius::Object"* %stack_load1997 to %"struct.rubinius::Float"*, !dbg !67
  %arg.value_pos2010 = getelementptr %"struct.rubinius::Float"* %arg_float2009, i32 0, i32 1, !dbg !67
  %farg2011 = load double* %arg.value_pos2010, !dbg !67
  br label %continue2012, !dbg !67

continue1998:                                     ; preds = %check_class_id2002, %correct_serial1987
  %cast2013 = ptrtoint %"struct.rubinius::Object"* %stack_load1997 to i64, !dbg !67
  %masked2014 = and i64 %cast2013, 1, !dbg !67
  %is_fixnum2015 = icmp eq i64 %masked2014, 1, !dbg !67
  br i1 %is_fixnum2015, label %guarded_body2016, label %class_fallback1977, !dbg !67

guarded_body2016:                                 ; preds = %continue1998
  %as_int2017 = ptrtoint %"struct.rubinius::Object"* %stack_load1997 to i64, !dbg !67
  %ashr2018 = ashr i64 %as_int2017, 1, !dbg !67
  %194 = sitofp i64 %ashr2018 to double, !dbg !67
  br label %continue2012, !dbg !67

continue2012:                                     ; preds = %guarded_body2016, %correct_class2003
  %rhs2019 = phi double [ %farg2011, %correct_class2003 ], [ %194, %guarded_body2016 ], !dbg !67
  %stack_pos2020 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  %stack_load2021 = load %"struct.rubinius::Object"** %stack_pos2020, !dbg !67
  %self_float2022 = bitcast %"struct.rubinius::Object"* %stack_load2021 to %"struct.rubinius::Float"*, !dbg !67
  %self.value_pos2023 = getelementptr %"struct.rubinius::Float"* %self_float2022, i32 0, i32 1, !dbg !67
  %fself2024 = load double* %self.value_pos2023, !dbg !67
  %float.sub2025 = fsub double %fself2024, %rhs2019, !dbg !67
  %result2026 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !67, !rbx-classid !37
  %195 = getelementptr %"struct.rubinius::Float"* %result2026, i32 0, i32 1, !dbg !67
  store double %float.sub2025, double* %195, !dbg !67
  %196 = bitcast %"struct.rubinius::Float"* %result2026 to %"struct.rubinius::Object"*, !dbg !67
  br label %continue1979, !dbg !67

class_fallback1977:                               ; preds = %continue1998, %check_class_id1985, %continue1918
  %stack_pos2027 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !67
  %stack_load2028 = load %"struct.rubinius::Object"** %stack_pos2027, !dbg !67
  store %"struct.rubinius::Object"* %stack_load2028, %"struct.rubinius::Object"** %out_args_recv166, !dbg !67
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !67
  store i32 1, i32* %out_args_total168, !dbg !67
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !67
  %stack_pos2029 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !67
  store %"struct.rubinius::Object"** %stack_pos2029, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !67
  %cache_const2030 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549760 to %"struct.rubinius::CallSite"**), !dbg !67
  %execute_pos2031 = getelementptr %"struct.rubinius::CallSite"* %cache_const2030, i32 0, i32 2, !dbg !67
  %execute2032 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2031, !dbg !67
  store i32 169, i32* %ip_pos164, !dbg !67
  %call_site_execute2033 = call %"struct.rubinius::Object"* %execute2032(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2030, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !67
  %null_check2035 = icmp eq %"struct.rubinius::Object"* %call_site_execute2033, null, !dbg !67
  br i1 %null_check2035, label %bail_out159, label %check_active2034, !dbg !67

check_active2034:                                 ; preds = %class_fallback1977
  br label %continue1979, !dbg !67

continue2042:                                     ; preds = %continue2072, %done2061
  %stack_pos2077 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2077, !dbg !68
  %197 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !68
  %self2078 = load %"struct.rubinius::Object"** %197, !dbg !68
  %cast2079 = ptrtoint %"struct.rubinius::Object"* %self2078 to i64, !dbg !68
  %masked2080 = and i64 %cast2079, 3, !dbg !68
  %is_reference2081 = icmp eq i64 %masked2080, 0, !dbg !68
  br i1 %is_reference2081, label %check_class_id2082, label %visit_push_ivar_fallback2075, !dbg !68

check_class_id2046:                               ; preds = %continue1979
  %class_pos2048 = getelementptr %"struct.rubinius::Object"* %self2038, i32 0, i32 0, i32 1, !dbg !67
  %ref_class2049 = load %"struct.rubinius::Class"** %class_pos2048, !dbg !67
  %class_id_pos2050 = getelementptr %"struct.rubinius::Class"* %ref_class2049, i32 0, i32 4, !dbg !67
  %class_id2051 = load i32* %class_id_pos2050, !dbg !67
  %check_class_id2052 = icmp eq i32 %class_id2051, 1285, !dbg !67
  br i1 %check_class_id2052, label %correct_class2047, label %visit_push_ivar_fallback2041, !dbg !67

correct_class2047:                                ; preds = %check_class_id2046
  %obj_array2053 = bitcast %"struct.rubinius::Object"* %self2038 to %"struct.rubinius::Object"**, !dbg !67
  %field_pos2054 = getelementptr %"struct.rubinius::Object"** %obj_array2053, i32 7, !dbg !67
  store %"struct.rubinius::Object"* %stack_load2040, %"struct.rubinius::Object"** %field_pos2054, !dbg !67
  %cast2055 = ptrtoint %"struct.rubinius::Object"* %stack_load2040 to i64, !dbg !67
  %masked2056 = and i64 %cast2055, 3, !dbg !67
  %is_reference2057 = icmp eq i64 %masked2056, 0, !dbg !67
  br i1 %is_reference2057, label %reference_obj2058, label %done2061, !dbg !67

visit_push_ivar_fallback2041:                     ; preds = %check_class_id2046, %continue1979
  %ivar2071 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self2038, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load2040), !dbg !67
  %null_check2074 = icmp eq %"struct.rubinius::Object"* %ivar2071, null, !dbg !67
  br i1 %null_check2074, label %bail_out159, label %check_active2073, !dbg !67

reference_obj2058:                                ; preds = %correct_class2047
  %object_memory_mark2062 = load i32* inttoptr (i64 22565880 to i32*), !dbg !67
  %word_pos2063 = getelementptr %"struct.rubinius::Object"* %self2038, i32 0, i32 0, i32 0, i32 0, !dbg !67
  %flags2064 = load i64* %word_pos2063, !dbg !67
  %mark_mask2065 = and i64 %flags2064, 3670016, !dbg !67
  %scan_mark2066 = add i32 %object_memory_mark2062, 1, !dbg !67
  %198 = zext i32 %scan_mark2066 to i64, !dbg !67
  %lshr2067 = shl i64 %198, 19, !dbg !67
  %is_scanned2068 = icmp eq i64 %mark_mask2065, %lshr2067, !dbg !67
  br i1 %is_scanned2068, label %run_barrier2060, label %object_not_scanned2059, !dbg !67

object_not_scanned2059:                           ; preds = %reference_obj2058
  %zone_mask2069 = and i64 %flags2064, 768, !dbg !67
  %is_young2070 = icmp eq i64 %zone_mask2069, 512, !dbg !67
  br i1 %is_young2070, label %done2061, label %run_barrier2060, !dbg !67

run_barrier2060:                                  ; preds = %object_not_scanned2059, %reference_obj2058
  %199 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2038, %"struct.rubinius::Object"* %stack_load2040), !dbg !67
  br label %done2061, !dbg !67

done2061:                                         ; preds = %run_barrier2060, %object_not_scanned2059, %correct_class2047
  br label %continue2042, !dbg !67

continue2072:                                     ; preds = %check_active2073
  br label %continue2042, !dbg !67

check_active2073:                                 ; preds = %visit_push_ivar_fallback2041
  br label %continue2072, !dbg !67

continue2076:                                     ; preds = %visit_push_ivar_fallback2075, %correct_class2083
  %local_pos2098 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 7, !dbg !68
  %local2099 = load %"struct.rubinius::Object"** %local_pos2098, !dbg !68, !rbx-classid !44
  %stack_pos2100 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  store %"struct.rubinius::Object"* %local2099, %"struct.rubinius::Object"** %stack_pos2100, !dbg !68
  %local_pos2101 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 11, !dbg !68
  %local2102 = load %"struct.rubinius::Object"** %local_pos2101, !dbg !68, !rbx-classid !66
  %stack_pos2103 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !68
  store %"struct.rubinius::Object"* %local2102, %"struct.rubinius::Object"** %stack_pos2103, !dbg !68
  %stack_pos2107 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  %stack_load2108 = load %"struct.rubinius::Object"** %stack_pos2107, !dbg !68, !rbx-classid !44
  %cast2109 = ptrtoint %"struct.rubinius::Object"* %stack_load2108 to i64, !dbg !68
  %masked2110 = and i64 %cast2109, 3, !dbg !68
  %is_reference2111 = icmp eq i64 %masked2110, 0, !dbg !68
  br i1 %is_reference2111, label %check_class_id2112, label %class_fallback2104, !dbg !68

check_class_id2082:                               ; preds = %continue2042
  %class_pos2084 = getelementptr %"struct.rubinius::Object"* %self2078, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2085 = load %"struct.rubinius::Class"** %class_pos2084, !dbg !68
  %class_id_pos2086 = getelementptr %"struct.rubinius::Class"* %ref_class2085, i32 0, i32 4, !dbg !68
  %class_id2087 = load i32* %class_id_pos2086, !dbg !68
  %check_class_id2088 = icmp eq i32 %class_id2087, 1285, !dbg !68
  br i1 %check_class_id2088, label %correct_class2083, label %visit_push_ivar_fallback2075, !dbg !68

correct_class2083:                                ; preds = %check_class_id2082
  %obj_array2089 = bitcast %"struct.rubinius::Object"* %self2078 to %"struct.rubinius::Object"**, !dbg !68
  %field_pos2090 = getelementptr %"struct.rubinius::Object"** %obj_array2089, i32 8, !dbg !68
  %field2091 = load %"struct.rubinius::Object"** %field_pos2090, !dbg !68
  %prune_undef2092 = icmp eq %"struct.rubinius::Object"* %field2091, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !68
  %"select ivar2093" = select i1 %prune_undef2092, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2091, !dbg !68
  %stack_pos2094 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %"select ivar2093", %"struct.rubinius::Object"** %stack_pos2094, !dbg !68
  br label %continue2076, !dbg !68

visit_push_ivar_fallback2075:                     ; preds = %check_class_id2082, %continue2042
  %200 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !68
  %self2095 = load %"struct.rubinius::Object"** %200, !dbg !68
  %ivar2096 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2095, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !68
  %stack_pos2097 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %ivar2096, %"struct.rubinius::Object"** %stack_pos2097, !dbg !68
  br label %continue2076, !dbg !68

continue2106:                                     ; preds = %check_active2161, %continue2139
  %send_result2163 = phi %"struct.rubinius::Object"* [ %204, %continue2139 ], [ %call_site_execute2160, %check_active2161 ], !dbg !68
  %stack_pos2164 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  store %"struct.rubinius::Object"* %send_result2163, %"struct.rubinius::Object"** %stack_pos2164, !dbg !68
  %stack_pos2168 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  %stack_load2169 = load %"struct.rubinius::Object"** %stack_pos2168, !dbg !68
  %cast2170 = ptrtoint %"struct.rubinius::Object"* %stack_load2169 to i64, !dbg !68
  %masked2171 = and i64 %cast2170, 3, !dbg !68
  %is_reference2172 = icmp eq i64 %masked2171, 0, !dbg !68
  br i1 %is_reference2172, label %check_class_id2173, label %class_fallback2165, !dbg !68

check_class_id2112:                               ; preds = %continue2076
  %class_pos2115 = getelementptr %"struct.rubinius::Object"* %stack_load2108, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2116 = load %"struct.rubinius::Class"** %class_pos2115, !dbg !68
  %class_id_pos2117 = getelementptr %"struct.rubinius::Class"* %ref_class2116, i32 0, i32 4, !dbg !68
  %class_id2118 = load i32* %class_id_pos2117, !dbg !68
  %check_class_id2119 = icmp eq i32 %class_id2118, 77, !dbg !68
  br i1 %check_class_id2119, label %correct_class2113, label %class_fallback2104, !dbg !68

correct_class2113:                                ; preds = %check_class_id2112
  %serial_id_pos2120 = getelementptr %"struct.rubinius::Class"* %ref_class2116, i32 0, i32 5, !dbg !68
  %serial_id2121 = load i32* %serial_id_pos2120, !dbg !68
  %check_serial_id2122 = icmp eq i32 %serial_id2121, 224, !dbg !68
  br i1 %check_serial_id2122, label %correct_serial2114, label %serial_fallback2105, !dbg !68

correct_serial2114:                               ; preds = %correct_class2113
  %stack_pos2123 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !68
  %stack_load2124 = load %"struct.rubinius::Object"** %stack_pos2123, !dbg !68, !rbx-classid !66
  %cast2126 = ptrtoint %"struct.rubinius::Object"* %stack_load2124 to i64, !dbg !68
  %masked2127 = and i64 %cast2126, 3, !dbg !68
  %is_reference2128 = icmp eq i64 %masked2127, 0, !dbg !68
  br i1 %is_reference2128, label %check_class_id2129, label %continue2125, !dbg !68

serial_fallback2105:                              ; preds = %correct_class2113
  store i32 181, i32* %ip_pos164, !dbg !68
  %201 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 181, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !68
  br label %return_pad126, !dbg !68

check_class_id2129:                               ; preds = %correct_serial2114
  %class_pos2131 = getelementptr %"struct.rubinius::Object"* %stack_load2124, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2132 = load %"struct.rubinius::Class"** %class_pos2131, !dbg !68
  %class_id_pos2133 = getelementptr %"struct.rubinius::Class"* %ref_class2132, i32 0, i32 4, !dbg !68
  %class_id2134 = load i32* %class_id_pos2133, !dbg !68
  %check_class_id2135 = icmp eq i32 %class_id2134, 77, !dbg !68
  br i1 %check_class_id2135, label %correct_class2130, label %continue2125, !dbg !68

correct_class2130:                                ; preds = %check_class_id2129
  %arg_float2136 = bitcast %"struct.rubinius::Object"* %stack_load2124 to %"struct.rubinius::Float"*, !dbg !68
  %arg.value_pos2137 = getelementptr %"struct.rubinius::Float"* %arg_float2136, i32 0, i32 1, !dbg !68
  %farg2138 = load double* %arg.value_pos2137, !dbg !68
  br label %continue2139, !dbg !68

continue2125:                                     ; preds = %check_class_id2129, %correct_serial2114
  %cast2140 = ptrtoint %"struct.rubinius::Object"* %stack_load2124 to i64, !dbg !68
  %masked2141 = and i64 %cast2140, 1, !dbg !68
  %is_fixnum2142 = icmp eq i64 %masked2141, 1, !dbg !68
  br i1 %is_fixnum2142, label %guarded_body2143, label %class_fallback2104, !dbg !68

guarded_body2143:                                 ; preds = %continue2125
  %as_int2144 = ptrtoint %"struct.rubinius::Object"* %stack_load2124 to i64, !dbg !68
  %ashr2145 = ashr i64 %as_int2144, 1, !dbg !68
  %202 = sitofp i64 %ashr2145 to double, !dbg !68
  br label %continue2139, !dbg !68

continue2139:                                     ; preds = %guarded_body2143, %correct_class2130
  %rhs2146 = phi double [ %farg2138, %correct_class2130 ], [ %202, %guarded_body2143 ], !dbg !68
  %stack_pos2147 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  %stack_load2148 = load %"struct.rubinius::Object"** %stack_pos2147, !dbg !68, !rbx-classid !44
  %self_float2149 = bitcast %"struct.rubinius::Object"* %stack_load2148 to %"struct.rubinius::Float"*, !dbg !68
  %self.value_pos2150 = getelementptr %"struct.rubinius::Float"* %self_float2149, i32 0, i32 1, !dbg !68
  %fself2151 = load double* %self.value_pos2150, !dbg !68
  %float.mul2152 = fmul double %fself2151, %rhs2146, !dbg !68
  %result2153 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !68, !rbx-classid !37
  %203 = getelementptr %"struct.rubinius::Float"* %result2153, i32 0, i32 1, !dbg !68
  store double %float.mul2152, double* %203, !dbg !68
  %204 = bitcast %"struct.rubinius::Float"* %result2153 to %"struct.rubinius::Object"*, !dbg !68
  br label %continue2106, !dbg !68

class_fallback2104:                               ; preds = %continue2125, %check_class_id2112, %continue2076
  %stack_pos2154 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  %stack_load2155 = load %"struct.rubinius::Object"** %stack_pos2154, !dbg !68, !rbx-classid !44
  store %"struct.rubinius::Object"* %stack_load2155, %"struct.rubinius::Object"** %out_args_recv166, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !68
  store i32 1, i32* %out_args_total168, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !68
  %stack_pos2156 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !68
  store %"struct.rubinius::Object"** %stack_pos2156, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !68
  %cache_const2157 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549856 to %"struct.rubinius::CallSite"**), !dbg !68
  %execute_pos2158 = getelementptr %"struct.rubinius::CallSite"* %cache_const2157, i32 0, i32 2, !dbg !68
  %execute2159 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2158, !dbg !68
  store i32 181, i32* %ip_pos164, !dbg !68
  %call_site_execute2160 = call %"struct.rubinius::Object"* %execute2159(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2157, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check2162 = icmp eq %"struct.rubinius::Object"* %call_site_execute2160, null, !dbg !68
  br i1 %null_check2162, label %bail_out159, label %check_active2161, !dbg !68

check_active2161:                                 ; preds = %class_fallback2104
  br label %continue2106, !dbg !68

continue2167:                                     ; preds = %check_active2222, %continue2200
  %send_result2224 = phi %"struct.rubinius::Object"* [ %209, %continue2200 ], [ %call_site_execute2221, %check_active2222 ], !dbg !68
  %stack_pos2225 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  store %"struct.rubinius::Object"* %send_result2224, %"struct.rubinius::Object"** %stack_pos2225, !dbg !68
  %205 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !68
  %self2226 = load %"struct.rubinius::Object"** %205, !dbg !68
  %stack_pos2227 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  %stack_load2228 = load %"struct.rubinius::Object"** %stack_pos2227, !dbg !68
  %cast2231 = ptrtoint %"struct.rubinius::Object"* %self2226 to i64, !dbg !68
  %masked2232 = and i64 %cast2231, 3, !dbg !68
  %is_reference2233 = icmp eq i64 %masked2232, 0, !dbg !68
  br i1 %is_reference2233, label %check_class_id2234, label %visit_push_ivar_fallback2229, !dbg !68

check_class_id2173:                               ; preds = %continue2106
  %class_pos2176 = getelementptr %"struct.rubinius::Object"* %stack_load2169, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2177 = load %"struct.rubinius::Class"** %class_pos2176, !dbg !68
  %class_id_pos2178 = getelementptr %"struct.rubinius::Class"* %ref_class2177, i32 0, i32 4, !dbg !68
  %class_id2179 = load i32* %class_id_pos2178, !dbg !68
  %check_class_id2180 = icmp eq i32 %class_id2179, 77, !dbg !68
  br i1 %check_class_id2180, label %correct_class2174, label %class_fallback2165, !dbg !68

correct_class2174:                                ; preds = %check_class_id2173
  %serial_id_pos2181 = getelementptr %"struct.rubinius::Class"* %ref_class2177, i32 0, i32 5, !dbg !68
  %serial_id2182 = load i32* %serial_id_pos2181, !dbg !68
  %check_serial_id2183 = icmp eq i32 %serial_id2182, 224, !dbg !68
  br i1 %check_serial_id2183, label %correct_serial2175, label %serial_fallback2166, !dbg !68

correct_serial2175:                               ; preds = %correct_class2174
  %stack_pos2184 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  %stack_load2185 = load %"struct.rubinius::Object"** %stack_pos2184, !dbg !68
  %cast2187 = ptrtoint %"struct.rubinius::Object"* %stack_load2185 to i64, !dbg !68
  %masked2188 = and i64 %cast2187, 3, !dbg !68
  %is_reference2189 = icmp eq i64 %masked2188, 0, !dbg !68
  br i1 %is_reference2189, label %check_class_id2190, label %continue2186, !dbg !68

serial_fallback2166:                              ; preds = %correct_class2174
  store i32 184, i32* %ip_pos164, !dbg !68
  %206 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 184, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !68
  br label %return_pad126, !dbg !68

check_class_id2190:                               ; preds = %correct_serial2175
  %class_pos2192 = getelementptr %"struct.rubinius::Object"* %stack_load2185, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2193 = load %"struct.rubinius::Class"** %class_pos2192, !dbg !68
  %class_id_pos2194 = getelementptr %"struct.rubinius::Class"* %ref_class2193, i32 0, i32 4, !dbg !68
  %class_id2195 = load i32* %class_id_pos2194, !dbg !68
  %check_class_id2196 = icmp eq i32 %class_id2195, 77, !dbg !68
  br i1 %check_class_id2196, label %correct_class2191, label %continue2186, !dbg !68

correct_class2191:                                ; preds = %check_class_id2190
  %arg_float2197 = bitcast %"struct.rubinius::Object"* %stack_load2185 to %"struct.rubinius::Float"*, !dbg !68
  %arg.value_pos2198 = getelementptr %"struct.rubinius::Float"* %arg_float2197, i32 0, i32 1, !dbg !68
  %farg2199 = load double* %arg.value_pos2198, !dbg !68
  br label %continue2200, !dbg !68

continue2186:                                     ; preds = %check_class_id2190, %correct_serial2175
  %cast2201 = ptrtoint %"struct.rubinius::Object"* %stack_load2185 to i64, !dbg !68
  %masked2202 = and i64 %cast2201, 1, !dbg !68
  %is_fixnum2203 = icmp eq i64 %masked2202, 1, !dbg !68
  br i1 %is_fixnum2203, label %guarded_body2204, label %class_fallback2165, !dbg !68

guarded_body2204:                                 ; preds = %continue2186
  %as_int2205 = ptrtoint %"struct.rubinius::Object"* %stack_load2185 to i64, !dbg !68
  %ashr2206 = ashr i64 %as_int2205, 1, !dbg !68
  %207 = sitofp i64 %ashr2206 to double, !dbg !68
  br label %continue2200, !dbg !68

continue2200:                                     ; preds = %guarded_body2204, %correct_class2191
  %rhs2207 = phi double [ %farg2199, %correct_class2191 ], [ %207, %guarded_body2204 ], !dbg !68
  %stack_pos2208 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  %stack_load2209 = load %"struct.rubinius::Object"** %stack_pos2208, !dbg !68
  %self_float2210 = bitcast %"struct.rubinius::Object"* %stack_load2209 to %"struct.rubinius::Float"*, !dbg !68
  %self.value_pos2211 = getelementptr %"struct.rubinius::Float"* %self_float2210, i32 0, i32 1, !dbg !68
  %fself2212 = load double* %self.value_pos2211, !dbg !68
  %float.sub2213 = fsub double %fself2212, %rhs2207, !dbg !68
  %result2214 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !68, !rbx-classid !37
  %208 = getelementptr %"struct.rubinius::Float"* %result2214, i32 0, i32 1, !dbg !68
  store double %float.sub2213, double* %208, !dbg !68
  %209 = bitcast %"struct.rubinius::Float"* %result2214 to %"struct.rubinius::Object"*, !dbg !68
  br label %continue2167, !dbg !68

class_fallback2165:                               ; preds = %continue2186, %check_class_id2173, %continue2106
  %stack_pos2215 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !68
  %stack_load2216 = load %"struct.rubinius::Object"** %stack_pos2215, !dbg !68
  store %"struct.rubinius::Object"* %stack_load2216, %"struct.rubinius::Object"** %out_args_recv166, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !68
  store i32 1, i32* %out_args_total168, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !68
  %stack_pos2217 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !68
  store %"struct.rubinius::Object"** %stack_pos2217, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !68
  %cache_const2218 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549880 to %"struct.rubinius::CallSite"**), !dbg !68
  %execute_pos2219 = getelementptr %"struct.rubinius::CallSite"* %cache_const2218, i32 0, i32 2, !dbg !68
  %execute2220 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2219, !dbg !68
  store i32 184, i32* %ip_pos164, !dbg !68
  %call_site_execute2221 = call %"struct.rubinius::Object"* %execute2220(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2218, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check2223 = icmp eq %"struct.rubinius::Object"* %call_site_execute2221, null, !dbg !68
  br i1 %null_check2223, label %bail_out159, label %check_active2222, !dbg !68

check_active2222:                                 ; preds = %class_fallback2165
  br label %continue2167, !dbg !68

continue2230:                                     ; preds = %continue2260, %done2249
  %local_pos2263 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !69
  %local2264 = load %"struct.rubinius::Object"** %local_pos2263, !dbg !69, !rbx-classid !38
  %stack_pos2265 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %local2264, %"struct.rubinius::Object"** %stack_pos2265, !dbg !69
  %stack_pos2266 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !69
  %stack_load2267 = load %"struct.rubinius::Object"** %stack_pos2266, !dbg !69, !rbx-classid !38
  %stack_pos2268 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2267, %"struct.rubinius::Object"** %stack_pos2268, !dbg !69
  %stack_pos2272 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2273 = load %"struct.rubinius::Object"** %stack_pos2272, !dbg !69, !rbx-classid !38
  %stack_pos2274 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2275 = load %"struct.rubinius::Object"** %stack_pos2274, !dbg !69, !rbx-classid !38
  %obj_array2276 = bitcast %"struct.rubinius::Object"* %stack_load2275 to %"struct.rubinius::Object"**, !dbg !69
  %field_pos2277 = getelementptr %"struct.rubinius::Object"** %obj_array2276, i32 6, !dbg !69
  %field2278 = load %"struct.rubinius::Object"** %field_pos2277, !dbg !69
  %prune_undef2279 = icmp eq %"struct.rubinius::Object"* %field2278, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !69
  %"select ivar2280" = select i1 %prune_undef2279, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2278, !dbg !69
  %stack_pos2281 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %"select ivar2280", %"struct.rubinius::Object"** %stack_pos2281, !dbg !69
  br label %continue2271, !dbg !69

check_class_id2234:                               ; preds = %continue2167
  %class_pos2236 = getelementptr %"struct.rubinius::Object"* %self2226, i32 0, i32 0, i32 1, !dbg !68
  %ref_class2237 = load %"struct.rubinius::Class"** %class_pos2236, !dbg !68
  %class_id_pos2238 = getelementptr %"struct.rubinius::Class"* %ref_class2237, i32 0, i32 4, !dbg !68
  %class_id2239 = load i32* %class_id_pos2238, !dbg !68
  %check_class_id2240 = icmp eq i32 %class_id2239, 1285, !dbg !68
  br i1 %check_class_id2240, label %correct_class2235, label %visit_push_ivar_fallback2229, !dbg !68

correct_class2235:                                ; preds = %check_class_id2234
  %obj_array2241 = bitcast %"struct.rubinius::Object"* %self2226 to %"struct.rubinius::Object"**, !dbg !68
  %field_pos2242 = getelementptr %"struct.rubinius::Object"** %obj_array2241, i32 8, !dbg !68
  store %"struct.rubinius::Object"* %stack_load2228, %"struct.rubinius::Object"** %field_pos2242, !dbg !68
  %cast2243 = ptrtoint %"struct.rubinius::Object"* %stack_load2228 to i64, !dbg !68
  %masked2244 = and i64 %cast2243, 3, !dbg !68
  %is_reference2245 = icmp eq i64 %masked2244, 0, !dbg !68
  br i1 %is_reference2245, label %reference_obj2246, label %done2249, !dbg !68

visit_push_ivar_fallback2229:                     ; preds = %check_class_id2234, %continue2167
  %ivar2259 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self2226, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load2228), !dbg !68
  %null_check2262 = icmp eq %"struct.rubinius::Object"* %ivar2259, null, !dbg !68
  br i1 %null_check2262, label %bail_out159, label %check_active2261, !dbg !68

reference_obj2246:                                ; preds = %correct_class2235
  %object_memory_mark2250 = load i32* inttoptr (i64 22565880 to i32*), !dbg !68
  %word_pos2251 = getelementptr %"struct.rubinius::Object"* %self2226, i32 0, i32 0, i32 0, i32 0, !dbg !68
  %flags2252 = load i64* %word_pos2251, !dbg !68
  %mark_mask2253 = and i64 %flags2252, 3670016, !dbg !68
  %scan_mark2254 = add i32 %object_memory_mark2250, 1, !dbg !68
  %210 = zext i32 %scan_mark2254 to i64, !dbg !68
  %lshr2255 = shl i64 %210, 19, !dbg !68
  %is_scanned2256 = icmp eq i64 %mark_mask2253, %lshr2255, !dbg !68
  br i1 %is_scanned2256, label %run_barrier2248, label %object_not_scanned2247, !dbg !68

object_not_scanned2247:                           ; preds = %reference_obj2246
  %zone_mask2257 = and i64 %flags2252, 768, !dbg !68
  %is_young2258 = icmp eq i64 %zone_mask2257, 512, !dbg !68
  br i1 %is_young2258, label %done2249, label %run_barrier2248, !dbg !68

run_barrier2248:                                  ; preds = %object_not_scanned2247, %reference_obj2246
  %211 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2226, %"struct.rubinius::Object"* %stack_load2228), !dbg !68
  br label %done2249, !dbg !68

done2249:                                         ; preds = %run_barrier2248, %object_not_scanned2247, %correct_class2235
  br label %continue2230, !dbg !68

continue2260:                                     ; preds = %check_active2261
  br label %continue2230, !dbg !68

check_active2261:                                 ; preds = %visit_push_ivar_fallback2229
  br label %continue2260, !dbg !68

class_fallback2269:                               ; No predecessors!
  store i32 193, i32* %ip_pos164, !dbg !69
  %212 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 193, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !69
  br label %return_pad126, !dbg !69

serial_fallback2270:                              ; No predecessors!
  store i32 193, i32* %ip_pos164, !dbg !69
  %213 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 193, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

continue2271:                                     ; preds = %continue2230
  %local_pos2282 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 5, !dbg !69
  %local2283 = load %"struct.rubinius::Object"** %local_pos2282, !dbg !69, !rbx-classid !42
  %stack_pos2284 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  store %"struct.rubinius::Object"* %local2283, %"struct.rubinius::Object"** %stack_pos2284, !dbg !69
  %local_pos2285 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 10, !dbg !69
  %local2286 = load %"struct.rubinius::Object"** %local_pos2285, !dbg !69, !rbx-classid !70
  %stack_pos2287 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !69
  store %"struct.rubinius::Object"* %local2286, %"struct.rubinius::Object"** %stack_pos2287, !dbg !69
  %stack_pos2291 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2292 = load %"struct.rubinius::Object"** %stack_pos2291, !dbg !69, !rbx-classid !42
  %cast2293 = ptrtoint %"struct.rubinius::Object"* %stack_load2292 to i64, !dbg !69
  %masked2294 = and i64 %cast2293, 3, !dbg !69
  %is_reference2295 = icmp eq i64 %masked2294, 0, !dbg !69
  br i1 %is_reference2295, label %check_class_id2296, label %class_fallback2288, !dbg !69

continue2290:                                     ; preds = %check_active2345, %continue2323
  %send_result2347 = phi %"struct.rubinius::Object"* [ %217, %continue2323 ], [ %call_site_execute2344, %check_active2345 ], !dbg !69
  %stack_pos2348 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  store %"struct.rubinius::Object"* %send_result2347, %"struct.rubinius::Object"** %stack_pos2348, !dbg !69
  %stack_pos2352 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2353 = load %"struct.rubinius::Object"** %stack_pos2352, !dbg !69
  %cast2354 = ptrtoint %"struct.rubinius::Object"* %stack_load2353 to i64, !dbg !69
  %masked2355 = and i64 %cast2354, 3, !dbg !69
  %is_reference2356 = icmp eq i64 %masked2355, 0, !dbg !69
  br i1 %is_reference2356, label %check_class_id2357, label %class_fallback2349, !dbg !69

check_class_id2296:                               ; preds = %continue2271
  %class_pos2299 = getelementptr %"struct.rubinius::Object"* %stack_load2292, i32 0, i32 0, i32 1, !dbg !69
  %ref_class2300 = load %"struct.rubinius::Class"** %class_pos2299, !dbg !69
  %class_id_pos2301 = getelementptr %"struct.rubinius::Class"* %ref_class2300, i32 0, i32 4, !dbg !69
  %class_id2302 = load i32* %class_id_pos2301, !dbg !69
  %check_class_id2303 = icmp eq i32 %class_id2302, 77, !dbg !69
  br i1 %check_class_id2303, label %correct_class2297, label %class_fallback2288, !dbg !69

correct_class2297:                                ; preds = %check_class_id2296
  %serial_id_pos2304 = getelementptr %"struct.rubinius::Class"* %ref_class2300, i32 0, i32 5, !dbg !69
  %serial_id2305 = load i32* %serial_id_pos2304, !dbg !69
  %check_serial_id2306 = icmp eq i32 %serial_id2305, 224, !dbg !69
  br i1 %check_serial_id2306, label %correct_serial2298, label %serial_fallback2289, !dbg !69

correct_serial2298:                               ; preds = %correct_class2297
  %stack_pos2307 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !69
  %stack_load2308 = load %"struct.rubinius::Object"** %stack_pos2307, !dbg !69, !rbx-classid !70
  %cast2310 = ptrtoint %"struct.rubinius::Object"* %stack_load2308 to i64, !dbg !69
  %masked2311 = and i64 %cast2310, 3, !dbg !69
  %is_reference2312 = icmp eq i64 %masked2311, 0, !dbg !69
  br i1 %is_reference2312, label %check_class_id2313, label %continue2309, !dbg !69

serial_fallback2289:                              ; preds = %correct_class2297
  store i32 200, i32* %ip_pos164, !dbg !69
  %214 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 200, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

check_class_id2313:                               ; preds = %correct_serial2298
  %class_pos2315 = getelementptr %"struct.rubinius::Object"* %stack_load2308, i32 0, i32 0, i32 1, !dbg !69
  %ref_class2316 = load %"struct.rubinius::Class"** %class_pos2315, !dbg !69
  %class_id_pos2317 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i32 0, i32 4, !dbg !69
  %class_id2318 = load i32* %class_id_pos2317, !dbg !69
  %check_class_id2319 = icmp eq i32 %class_id2318, 77, !dbg !69
  br i1 %check_class_id2319, label %correct_class2314, label %continue2309, !dbg !69

correct_class2314:                                ; preds = %check_class_id2313
  %arg_float2320 = bitcast %"struct.rubinius::Object"* %stack_load2308 to %"struct.rubinius::Float"*, !dbg !69
  %arg.value_pos2321 = getelementptr %"struct.rubinius::Float"* %arg_float2320, i32 0, i32 1, !dbg !69
  %farg2322 = load double* %arg.value_pos2321, !dbg !69
  br label %continue2323, !dbg !69

continue2309:                                     ; preds = %check_class_id2313, %correct_serial2298
  %cast2324 = ptrtoint %"struct.rubinius::Object"* %stack_load2308 to i64, !dbg !69
  %masked2325 = and i64 %cast2324, 1, !dbg !69
  %is_fixnum2326 = icmp eq i64 %masked2325, 1, !dbg !69
  br i1 %is_fixnum2326, label %guarded_body2327, label %class_fallback2288, !dbg !69

guarded_body2327:                                 ; preds = %continue2309
  %as_int2328 = ptrtoint %"struct.rubinius::Object"* %stack_load2308 to i64, !dbg !69
  %ashr2329 = ashr i64 %as_int2328, 1, !dbg !69
  %215 = sitofp i64 %ashr2329 to double, !dbg !69
  br label %continue2323, !dbg !69

continue2323:                                     ; preds = %guarded_body2327, %correct_class2314
  %rhs2330 = phi double [ %farg2322, %correct_class2314 ], [ %215, %guarded_body2327 ], !dbg !69
  %stack_pos2331 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2332 = load %"struct.rubinius::Object"** %stack_pos2331, !dbg !69, !rbx-classid !42
  %self_float2333 = bitcast %"struct.rubinius::Object"* %stack_load2332 to %"struct.rubinius::Float"*, !dbg !69
  %self.value_pos2334 = getelementptr %"struct.rubinius::Float"* %self_float2333, i32 0, i32 1, !dbg !69
  %fself2335 = load double* %self.value_pos2334, !dbg !69
  %float.mul2336 = fmul double %fself2335, %rhs2330, !dbg !69
  %result2337 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !69, !rbx-classid !37
  %216 = getelementptr %"struct.rubinius::Float"* %result2337, i32 0, i32 1, !dbg !69
  store double %float.mul2336, double* %216, !dbg !69
  %217 = bitcast %"struct.rubinius::Float"* %result2337 to %"struct.rubinius::Object"*, !dbg !69
  br label %continue2290, !dbg !69

class_fallback2288:                               ; preds = %continue2309, %check_class_id2296, %continue2271
  %stack_pos2338 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2339 = load %"struct.rubinius::Object"** %stack_pos2338, !dbg !69, !rbx-classid !42
  store %"struct.rubinius::Object"* %stack_load2339, %"struct.rubinius::Object"** %out_args_recv166, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !69
  store i32 1, i32* %out_args_total168, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !69
  %stack_pos2340 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos2340, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !69
  %cache_const2341 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550008 to %"struct.rubinius::CallSite"**), !dbg !69
  %execute_pos2342 = getelementptr %"struct.rubinius::CallSite"* %cache_const2341, i32 0, i32 2, !dbg !69
  %execute2343 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2342, !dbg !69
  store i32 200, i32* %ip_pos164, !dbg !69
  %call_site_execute2344 = call %"struct.rubinius::Object"* %execute2343(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2341, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check2346 = icmp eq %"struct.rubinius::Object"* %call_site_execute2344, null, !dbg !69
  br i1 %null_check2346, label %bail_out159, label %check_active2345, !dbg !69

check_active2345:                                 ; preds = %class_fallback2288
  br label %continue2290, !dbg !69

continue2351:                                     ; preds = %check_active2406, %continue2384
  %send_result2408 = phi %"struct.rubinius::Object"* [ %221, %continue2384 ], [ %call_site_execute2405, %check_active2406 ], !dbg !69
  %stack_pos2409 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %send_result2408, %"struct.rubinius::Object"** %stack_pos2409, !dbg !69
  %stack_pos2410 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2411 = load %"struct.rubinius::Object"** %stack_pos2410, !dbg !69
  %stack_pos2412 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2411, %"struct.rubinius::Object"** %stack_pos2412, !dbg !69
  %stack_pos2413 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2414 = load %"struct.rubinius::Object"** %stack_pos2413, !dbg !69
  %stack_pos2415 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2416 = load %"struct.rubinius::Object"** %stack_pos2415, !dbg !69
  %stack_pos2417 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2416, %"struct.rubinius::Object"** %stack_pos2417, !dbg !69
  %stack_pos2418 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !69
  %stack_load2419 = load %"struct.rubinius::Object"** %stack_pos2418, !dbg !69, !rbx-classid !38
  %stack_pos2420 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2419, %"struct.rubinius::Object"** %stack_pos2420, !dbg !69
  %stack_pos2421 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2414, %"struct.rubinius::Object"** %stack_pos2421, !dbg !69
  %stack_pos2425 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2426 = load %"struct.rubinius::Object"** %stack_pos2425, !dbg !69
  %cast2427 = ptrtoint %"struct.rubinius::Object"* %stack_load2426 to i64, !dbg !69
  %masked2428 = and i64 %cast2427, 3, !dbg !69
  %is_reference2429 = icmp eq i64 %masked2428, 0, !dbg !69
  br i1 %is_reference2429, label %check_class_id2430, label %class_fallback2422, !dbg !69

check_class_id2357:                               ; preds = %continue2290
  %class_pos2360 = getelementptr %"struct.rubinius::Object"* %stack_load2353, i32 0, i32 0, i32 1, !dbg !69
  %ref_class2361 = load %"struct.rubinius::Class"** %class_pos2360, !dbg !69
  %class_id_pos2362 = getelementptr %"struct.rubinius::Class"* %ref_class2361, i32 0, i32 4, !dbg !69
  %class_id2363 = load i32* %class_id_pos2362, !dbg !69
  %check_class_id2364 = icmp eq i32 %class_id2363, 77, !dbg !69
  br i1 %check_class_id2364, label %correct_class2358, label %class_fallback2349, !dbg !69

correct_class2358:                                ; preds = %check_class_id2357
  %serial_id_pos2365 = getelementptr %"struct.rubinius::Class"* %ref_class2361, i32 0, i32 5, !dbg !69
  %serial_id2366 = load i32* %serial_id_pos2365, !dbg !69
  %check_serial_id2367 = icmp eq i32 %serial_id2366, 224, !dbg !69
  br i1 %check_serial_id2367, label %correct_serial2359, label %serial_fallback2350, !dbg !69

correct_serial2359:                               ; preds = %correct_class2358
  %stack_pos2368 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2369 = load %"struct.rubinius::Object"** %stack_pos2368, !dbg !69
  %cast2371 = ptrtoint %"struct.rubinius::Object"* %stack_load2369 to i64, !dbg !69
  %masked2372 = and i64 %cast2371, 3, !dbg !69
  %is_reference2373 = icmp eq i64 %masked2372, 0, !dbg !69
  br i1 %is_reference2373, label %check_class_id2374, label %continue2370, !dbg !69

serial_fallback2350:                              ; preds = %correct_class2358
  store i32 203, i32* %ip_pos164, !dbg !69
  %218 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 203, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

check_class_id2374:                               ; preds = %correct_serial2359
  %class_pos2376 = getelementptr %"struct.rubinius::Object"* %stack_load2369, i32 0, i32 0, i32 1, !dbg !69
  %ref_class2377 = load %"struct.rubinius::Class"** %class_pos2376, !dbg !69
  %class_id_pos2378 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i32 0, i32 4, !dbg !69
  %class_id2379 = load i32* %class_id_pos2378, !dbg !69
  %check_class_id2380 = icmp eq i32 %class_id2379, 77, !dbg !69
  br i1 %check_class_id2380, label %correct_class2375, label %continue2370, !dbg !69

correct_class2375:                                ; preds = %check_class_id2374
  %arg_float2381 = bitcast %"struct.rubinius::Object"* %stack_load2369 to %"struct.rubinius::Float"*, !dbg !69
  %arg.value_pos2382 = getelementptr %"struct.rubinius::Float"* %arg_float2381, i32 0, i32 1, !dbg !69
  %farg2383 = load double* %arg.value_pos2382, !dbg !69
  br label %continue2384, !dbg !69

continue2370:                                     ; preds = %check_class_id2374, %correct_serial2359
  %cast2385 = ptrtoint %"struct.rubinius::Object"* %stack_load2369 to i64, !dbg !69
  %masked2386 = and i64 %cast2385, 1, !dbg !69
  %is_fixnum2387 = icmp eq i64 %masked2386, 1, !dbg !69
  br i1 %is_fixnum2387, label %guarded_body2388, label %class_fallback2349, !dbg !69

guarded_body2388:                                 ; preds = %continue2370
  %as_int2389 = ptrtoint %"struct.rubinius::Object"* %stack_load2369 to i64, !dbg !69
  %ashr2390 = ashr i64 %as_int2389, 1, !dbg !69
  %219 = sitofp i64 %ashr2390 to double, !dbg !69
  br label %continue2384, !dbg !69

continue2384:                                     ; preds = %guarded_body2388, %correct_class2375
  %rhs2391 = phi double [ %farg2383, %correct_class2375 ], [ %219, %guarded_body2388 ], !dbg !69
  %stack_pos2392 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2393 = load %"struct.rubinius::Object"** %stack_pos2392, !dbg !69
  %self_float2394 = bitcast %"struct.rubinius::Object"* %stack_load2393 to %"struct.rubinius::Float"*, !dbg !69
  %self.value_pos2395 = getelementptr %"struct.rubinius::Float"* %self_float2394, i32 0, i32 1, !dbg !69
  %fself2396 = load double* %self.value_pos2395, !dbg !69
  %float.add2397 = fadd double %fself2396, %rhs2391, !dbg !69
  %result2398 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !69, !rbx-classid !37
  %220 = getelementptr %"struct.rubinius::Float"* %result2398, i32 0, i32 1, !dbg !69
  store double %float.add2397, double* %220, !dbg !69
  %221 = bitcast %"struct.rubinius::Float"* %result2398 to %"struct.rubinius::Object"*, !dbg !69
  br label %continue2351, !dbg !69

class_fallback2349:                               ; preds = %continue2370, %check_class_id2357, %continue2290
  %stack_pos2399 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2400 = load %"struct.rubinius::Object"** %stack_pos2399, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2400, %"struct.rubinius::Object"** %out_args_recv166, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !69
  store i32 1, i32* %out_args_total168, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !69
  %stack_pos2401 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos2401, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !69
  %cache_const2402 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550032 to %"struct.rubinius::CallSite"**), !dbg !69
  %execute_pos2403 = getelementptr %"struct.rubinius::CallSite"* %cache_const2402, i32 0, i32 2, !dbg !69
  %execute2404 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2403, !dbg !69
  store i32 203, i32* %ip_pos164, !dbg !69
  %call_site_execute2405 = call %"struct.rubinius::Object"* %execute2404(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2402, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check2407 = icmp eq %"struct.rubinius::Object"* %call_site_execute2405, null, !dbg !69
  br i1 %null_check2407, label %bail_out159, label %check_active2406, !dbg !69

check_active2406:                                 ; preds = %class_fallback2349
  br label %continue2351, !dbg !69

continue2424:                                     ; preds = %done2453
  %local_pos2464 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !71
  %local2465 = load %"struct.rubinius::Object"** %local_pos2464, !dbg !71, !rbx-classid !38
  %stack_pos2466 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !71
  store %"struct.rubinius::Object"* %local2465, %"struct.rubinius::Object"** %stack_pos2466, !dbg !71
  %stack_pos2467 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !71
  %stack_load2468 = load %"struct.rubinius::Object"** %stack_pos2467, !dbg !71, !rbx-classid !38
  %stack_pos2469 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2468, %"struct.rubinius::Object"** %stack_pos2469, !dbg !71
  %stack_pos2473 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2474 = load %"struct.rubinius::Object"** %stack_pos2473, !dbg !71, !rbx-classid !38
  %stack_pos2475 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2476 = load %"struct.rubinius::Object"** %stack_pos2475, !dbg !71, !rbx-classid !38
  %obj_array2477 = bitcast %"struct.rubinius::Object"* %stack_load2476 to %"struct.rubinius::Object"**, !dbg !71
  %field_pos2478 = getelementptr %"struct.rubinius::Object"** %obj_array2477, i32 7, !dbg !71
  %field2479 = load %"struct.rubinius::Object"** %field_pos2478, !dbg !71
  %prune_undef2480 = icmp eq %"struct.rubinius::Object"* %field2479, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !71
  %"select ivar2481" = select i1 %prune_undef2480, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2479, !dbg !71
  %stack_pos2482 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %"select ivar2481", %"struct.rubinius::Object"** %stack_pos2482, !dbg !71
  br label %continue2472, !dbg !71

check_class_id2430:                               ; preds = %continue2351
  %class_pos2433 = getelementptr %"struct.rubinius::Object"* %stack_load2426, i32 0, i32 0, i32 1, !dbg !69
  %ref_class2434 = load %"struct.rubinius::Class"** %class_pos2433, !dbg !69
  %class_id_pos2435 = getelementptr %"struct.rubinius::Class"* %ref_class2434, i32 0, i32 4, !dbg !69
  %class_id2436 = load i32* %class_id_pos2435, !dbg !69
  %check_class_id2437 = icmp eq i32 %class_id2436, 1285, !dbg !69
  br i1 %check_class_id2437, label %correct_class2431, label %class_fallback2422, !dbg !69

correct_class2431:                                ; preds = %check_class_id2430
  %serial_id_pos2438 = getelementptr %"struct.rubinius::Class"* %ref_class2434, i32 0, i32 5, !dbg !69
  %serial_id2439 = load i32* %serial_id_pos2438, !dbg !69
  %check_serial_id2440 = icmp eq i32 %serial_id2439, 2, !dbg !69
  br i1 %check_serial_id2440, label %correct_serial2432, label %serial_fallback2423, !dbg !69

class_fallback2422:                               ; preds = %check_class_id2430, %continue2351
  store i32 209, i32* %ip_pos164, !dbg !69
  %222 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !69
  br label %return_pad126, !dbg !69

correct_serial2432:                               ; preds = %correct_class2431
  %stack_pos2441 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !69
  %stack_load2442 = load %"struct.rubinius::Object"** %stack_pos2441, !dbg !69
  %stack_pos2443 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  %stack_load2444 = load %"struct.rubinius::Object"** %stack_pos2443, !dbg !69
  %obj_array2445 = bitcast %"struct.rubinius::Object"* %stack_load2444 to %"struct.rubinius::Object"**, !dbg !69
  %field_pos2446 = getelementptr %"struct.rubinius::Object"** %obj_array2445, i32 6, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2442, %"struct.rubinius::Object"** %field_pos2446, !dbg !69
  %cast2447 = ptrtoint %"struct.rubinius::Object"* %stack_load2442 to i64, !dbg !69
  %masked2448 = and i64 %cast2447, 3, !dbg !69
  %is_reference2449 = icmp eq i64 %masked2448, 0, !dbg !69
  br i1 %is_reference2449, label %reference_obj2450, label %done2453, !dbg !69

serial_fallback2423:                              ; preds = %correct_class2431
  store i32 209, i32* %ip_pos164, !dbg !69
  %223 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

reference_obj2450:                                ; preds = %correct_serial2432
  %object_memory_mark2454 = load i32* inttoptr (i64 22565880 to i32*), !dbg !69
  %word_pos2455 = getelementptr %"struct.rubinius::Object"* %stack_load2444, i32 0, i32 0, i32 0, i32 0, !dbg !69
  %flags2456 = load i64* %word_pos2455, !dbg !69
  %mark_mask2457 = and i64 %flags2456, 3670016, !dbg !69
  %scan_mark2458 = add i32 %object_memory_mark2454, 1, !dbg !69
  %224 = zext i32 %scan_mark2458 to i64, !dbg !69
  %lshr2459 = shl i64 %224, 19, !dbg !69
  %is_scanned2460 = icmp eq i64 %mark_mask2457, %lshr2459, !dbg !69
  br i1 %is_scanned2460, label %run_barrier2452, label %object_not_scanned2451, !dbg !69

object_not_scanned2451:                           ; preds = %reference_obj2450
  %zone_mask2461 = and i64 %flags2456, 768, !dbg !69
  %is_young2462 = icmp eq i64 %zone_mask2461, 512, !dbg !69
  br i1 %is_young2462, label %done2453, label %run_barrier2452, !dbg !69

run_barrier2452:                                  ; preds = %object_not_scanned2451, %reference_obj2450
  %225 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2444, %"struct.rubinius::Object"* %stack_load2442), !dbg !69
  br label %done2453, !dbg !69

done2453:                                         ; preds = %run_barrier2452, %object_not_scanned2451, %correct_serial2432
  %stack_pos2463 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %stack_load2442, %"struct.rubinius::Object"** %stack_pos2463, !dbg !69
  br label %continue2424, !dbg !69

class_fallback2470:                               ; No predecessors!
  store i32 217, i32* %ip_pos164, !dbg !71
  %226 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 217, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !71
  br label %return_pad126, !dbg !71

serial_fallback2471:                              ; No predecessors!
  store i32 217, i32* %ip_pos164, !dbg !71
  %227 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 217, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !71
  br label %return_pad126, !dbg !71

continue2472:                                     ; preds = %continue2424
  %local_pos2483 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 6, !dbg !71
  %local2484 = load %"struct.rubinius::Object"** %local_pos2483, !dbg !71, !rbx-classid !43
  %stack_pos2485 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %local2484, %"struct.rubinius::Object"** %stack_pos2485, !dbg !71
  %local_pos2486 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 10, !dbg !71
  %local2487 = load %"struct.rubinius::Object"** %local_pos2486, !dbg !71, !rbx-classid !70
  %stack_pos2488 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !71
  store %"struct.rubinius::Object"* %local2487, %"struct.rubinius::Object"** %stack_pos2488, !dbg !71
  %stack_pos2492 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2493 = load %"struct.rubinius::Object"** %stack_pos2492, !dbg !71, !rbx-classid !43
  %cast2494 = ptrtoint %"struct.rubinius::Object"* %stack_load2493 to i64, !dbg !71
  %masked2495 = and i64 %cast2494, 3, !dbg !71
  %is_reference2496 = icmp eq i64 %masked2495, 0, !dbg !71
  br i1 %is_reference2496, label %check_class_id2497, label %class_fallback2489, !dbg !71

continue2491:                                     ; preds = %check_active2546, %continue2524
  %send_result2548 = phi %"struct.rubinius::Object"* [ %231, %continue2524 ], [ %call_site_execute2545, %check_active2546 ], !dbg !71
  %stack_pos2549 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %send_result2548, %"struct.rubinius::Object"** %stack_pos2549, !dbg !71
  %stack_pos2553 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2554 = load %"struct.rubinius::Object"** %stack_pos2553, !dbg !71
  %cast2555 = ptrtoint %"struct.rubinius::Object"* %stack_load2554 to i64, !dbg !71
  %masked2556 = and i64 %cast2555, 3, !dbg !71
  %is_reference2557 = icmp eq i64 %masked2556, 0, !dbg !71
  br i1 %is_reference2557, label %check_class_id2558, label %class_fallback2550, !dbg !71

check_class_id2497:                               ; preds = %continue2472
  %class_pos2500 = getelementptr %"struct.rubinius::Object"* %stack_load2493, i32 0, i32 0, i32 1, !dbg !71
  %ref_class2501 = load %"struct.rubinius::Class"** %class_pos2500, !dbg !71
  %class_id_pos2502 = getelementptr %"struct.rubinius::Class"* %ref_class2501, i32 0, i32 4, !dbg !71
  %class_id2503 = load i32* %class_id_pos2502, !dbg !71
  %check_class_id2504 = icmp eq i32 %class_id2503, 77, !dbg !71
  br i1 %check_class_id2504, label %correct_class2498, label %class_fallback2489, !dbg !71

correct_class2498:                                ; preds = %check_class_id2497
  %serial_id_pos2505 = getelementptr %"struct.rubinius::Class"* %ref_class2501, i32 0, i32 5, !dbg !71
  %serial_id2506 = load i32* %serial_id_pos2505, !dbg !71
  %check_serial_id2507 = icmp eq i32 %serial_id2506, 224, !dbg !71
  br i1 %check_serial_id2507, label %correct_serial2499, label %serial_fallback2490, !dbg !71

correct_serial2499:                               ; preds = %correct_class2498
  %stack_pos2508 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !71
  %stack_load2509 = load %"struct.rubinius::Object"** %stack_pos2508, !dbg !71, !rbx-classid !70
  %cast2511 = ptrtoint %"struct.rubinius::Object"* %stack_load2509 to i64, !dbg !71
  %masked2512 = and i64 %cast2511, 3, !dbg !71
  %is_reference2513 = icmp eq i64 %masked2512, 0, !dbg !71
  br i1 %is_reference2513, label %check_class_id2514, label %continue2510, !dbg !71

serial_fallback2490:                              ; preds = %correct_class2498
  store i32 224, i32* %ip_pos164, !dbg !71
  %228 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 224, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !71
  br label %return_pad126, !dbg !71

check_class_id2514:                               ; preds = %correct_serial2499
  %class_pos2516 = getelementptr %"struct.rubinius::Object"* %stack_load2509, i32 0, i32 0, i32 1, !dbg !71
  %ref_class2517 = load %"struct.rubinius::Class"** %class_pos2516, !dbg !71
  %class_id_pos2518 = getelementptr %"struct.rubinius::Class"* %ref_class2517, i32 0, i32 4, !dbg !71
  %class_id2519 = load i32* %class_id_pos2518, !dbg !71
  %check_class_id2520 = icmp eq i32 %class_id2519, 77, !dbg !71
  br i1 %check_class_id2520, label %correct_class2515, label %continue2510, !dbg !71

correct_class2515:                                ; preds = %check_class_id2514
  %arg_float2521 = bitcast %"struct.rubinius::Object"* %stack_load2509 to %"struct.rubinius::Float"*, !dbg !71
  %arg.value_pos2522 = getelementptr %"struct.rubinius::Float"* %arg_float2521, i32 0, i32 1, !dbg !71
  %farg2523 = load double* %arg.value_pos2522, !dbg !71
  br label %continue2524, !dbg !71

continue2510:                                     ; preds = %check_class_id2514, %correct_serial2499
  %cast2525 = ptrtoint %"struct.rubinius::Object"* %stack_load2509 to i64, !dbg !71
  %masked2526 = and i64 %cast2525, 1, !dbg !71
  %is_fixnum2527 = icmp eq i64 %masked2526, 1, !dbg !71
  br i1 %is_fixnum2527, label %guarded_body2528, label %class_fallback2489, !dbg !71

guarded_body2528:                                 ; preds = %continue2510
  %as_int2529 = ptrtoint %"struct.rubinius::Object"* %stack_load2509 to i64, !dbg !71
  %ashr2530 = ashr i64 %as_int2529, 1, !dbg !71
  %229 = sitofp i64 %ashr2530 to double, !dbg !71
  br label %continue2524, !dbg !71

continue2524:                                     ; preds = %guarded_body2528, %correct_class2515
  %rhs2531 = phi double [ %farg2523, %correct_class2515 ], [ %229, %guarded_body2528 ], !dbg !71
  %stack_pos2532 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2533 = load %"struct.rubinius::Object"** %stack_pos2532, !dbg !71, !rbx-classid !43
  %self_float2534 = bitcast %"struct.rubinius::Object"* %stack_load2533 to %"struct.rubinius::Float"*, !dbg !71
  %self.value_pos2535 = getelementptr %"struct.rubinius::Float"* %self_float2534, i32 0, i32 1, !dbg !71
  %fself2536 = load double* %self.value_pos2535, !dbg !71
  %float.mul2537 = fmul double %fself2536, %rhs2531, !dbg !71
  %result2538 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !71, !rbx-classid !37
  %230 = getelementptr %"struct.rubinius::Float"* %result2538, i32 0, i32 1, !dbg !71
  store double %float.mul2537, double* %230, !dbg !71
  %231 = bitcast %"struct.rubinius::Float"* %result2538 to %"struct.rubinius::Object"*, !dbg !71
  br label %continue2491, !dbg !71

class_fallback2489:                               ; preds = %continue2510, %check_class_id2497, %continue2472
  %stack_pos2539 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2540 = load %"struct.rubinius::Object"** %stack_pos2539, !dbg !71, !rbx-classid !43
  store %"struct.rubinius::Object"* %stack_load2540, %"struct.rubinius::Object"** %out_args_recv166, !dbg !71
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !71
  store i32 1, i32* %out_args_total168, !dbg !71
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !71
  %stack_pos2541 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !71
  store %"struct.rubinius::Object"** %stack_pos2541, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !71
  %cache_const2542 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550200 to %"struct.rubinius::CallSite"**), !dbg !71
  %execute_pos2543 = getelementptr %"struct.rubinius::CallSite"* %cache_const2542, i32 0, i32 2, !dbg !71
  %execute2544 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2543, !dbg !71
  store i32 224, i32* %ip_pos164, !dbg !71
  %call_site_execute2545 = call %"struct.rubinius::Object"* %execute2544(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2542, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !71
  %null_check2547 = icmp eq %"struct.rubinius::Object"* %call_site_execute2545, null, !dbg !71
  br i1 %null_check2547, label %bail_out159, label %check_active2546, !dbg !71

check_active2546:                                 ; preds = %class_fallback2489
  br label %continue2491, !dbg !71

continue2552:                                     ; preds = %check_active2607, %continue2585
  %send_result2609 = phi %"struct.rubinius::Object"* [ %235, %continue2585 ], [ %call_site_execute2606, %check_active2607 ], !dbg !71
  %stack_pos2610 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %send_result2609, %"struct.rubinius::Object"** %stack_pos2610, !dbg !71
  %stack_pos2611 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2612 = load %"struct.rubinius::Object"** %stack_pos2611, !dbg !71
  %stack_pos2613 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2612, %"struct.rubinius::Object"** %stack_pos2613, !dbg !71
  %stack_pos2614 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2615 = load %"struct.rubinius::Object"** %stack_pos2614, !dbg !71
  %stack_pos2616 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2617 = load %"struct.rubinius::Object"** %stack_pos2616, !dbg !71
  %stack_pos2618 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2617, %"struct.rubinius::Object"** %stack_pos2618, !dbg !71
  %stack_pos2619 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !71
  %stack_load2620 = load %"struct.rubinius::Object"** %stack_pos2619, !dbg !71, !rbx-classid !38
  %stack_pos2621 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2620, %"struct.rubinius::Object"** %stack_pos2621, !dbg !71
  %stack_pos2622 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2615, %"struct.rubinius::Object"** %stack_pos2622, !dbg !71
  %stack_pos2626 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2627 = load %"struct.rubinius::Object"** %stack_pos2626, !dbg !71
  %cast2628 = ptrtoint %"struct.rubinius::Object"* %stack_load2627 to i64, !dbg !71
  %masked2629 = and i64 %cast2628, 3, !dbg !71
  %is_reference2630 = icmp eq i64 %masked2629, 0, !dbg !71
  br i1 %is_reference2630, label %check_class_id2631, label %class_fallback2623, !dbg !71

check_class_id2558:                               ; preds = %continue2491
  %class_pos2561 = getelementptr %"struct.rubinius::Object"* %stack_load2554, i32 0, i32 0, i32 1, !dbg !71
  %ref_class2562 = load %"struct.rubinius::Class"** %class_pos2561, !dbg !71
  %class_id_pos2563 = getelementptr %"struct.rubinius::Class"* %ref_class2562, i32 0, i32 4, !dbg !71
  %class_id2564 = load i32* %class_id_pos2563, !dbg !71
  %check_class_id2565 = icmp eq i32 %class_id2564, 77, !dbg !71
  br i1 %check_class_id2565, label %correct_class2559, label %class_fallback2550, !dbg !71

correct_class2559:                                ; preds = %check_class_id2558
  %serial_id_pos2566 = getelementptr %"struct.rubinius::Class"* %ref_class2562, i32 0, i32 5, !dbg !71
  %serial_id2567 = load i32* %serial_id_pos2566, !dbg !71
  %check_serial_id2568 = icmp eq i32 %serial_id2567, 224, !dbg !71
  br i1 %check_serial_id2568, label %correct_serial2560, label %serial_fallback2551, !dbg !71

correct_serial2560:                               ; preds = %correct_class2559
  %stack_pos2569 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2570 = load %"struct.rubinius::Object"** %stack_pos2569, !dbg !71
  %cast2572 = ptrtoint %"struct.rubinius::Object"* %stack_load2570 to i64, !dbg !71
  %masked2573 = and i64 %cast2572, 3, !dbg !71
  %is_reference2574 = icmp eq i64 %masked2573, 0, !dbg !71
  br i1 %is_reference2574, label %check_class_id2575, label %continue2571, !dbg !71

serial_fallback2551:                              ; preds = %correct_class2559
  store i32 227, i32* %ip_pos164, !dbg !71
  %232 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 227, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !71
  br label %return_pad126, !dbg !71

check_class_id2575:                               ; preds = %correct_serial2560
  %class_pos2577 = getelementptr %"struct.rubinius::Object"* %stack_load2570, i32 0, i32 0, i32 1, !dbg !71
  %ref_class2578 = load %"struct.rubinius::Class"** %class_pos2577, !dbg !71
  %class_id_pos2579 = getelementptr %"struct.rubinius::Class"* %ref_class2578, i32 0, i32 4, !dbg !71
  %class_id2580 = load i32* %class_id_pos2579, !dbg !71
  %check_class_id2581 = icmp eq i32 %class_id2580, 77, !dbg !71
  br i1 %check_class_id2581, label %correct_class2576, label %continue2571, !dbg !71

correct_class2576:                                ; preds = %check_class_id2575
  %arg_float2582 = bitcast %"struct.rubinius::Object"* %stack_load2570 to %"struct.rubinius::Float"*, !dbg !71
  %arg.value_pos2583 = getelementptr %"struct.rubinius::Float"* %arg_float2582, i32 0, i32 1, !dbg !71
  %farg2584 = load double* %arg.value_pos2583, !dbg !71
  br label %continue2585, !dbg !71

continue2571:                                     ; preds = %check_class_id2575, %correct_serial2560
  %cast2586 = ptrtoint %"struct.rubinius::Object"* %stack_load2570 to i64, !dbg !71
  %masked2587 = and i64 %cast2586, 1, !dbg !71
  %is_fixnum2588 = icmp eq i64 %masked2587, 1, !dbg !71
  br i1 %is_fixnum2588, label %guarded_body2589, label %class_fallback2550, !dbg !71

guarded_body2589:                                 ; preds = %continue2571
  %as_int2590 = ptrtoint %"struct.rubinius::Object"* %stack_load2570 to i64, !dbg !71
  %ashr2591 = ashr i64 %as_int2590, 1, !dbg !71
  %233 = sitofp i64 %ashr2591 to double, !dbg !71
  br label %continue2585, !dbg !71

continue2585:                                     ; preds = %guarded_body2589, %correct_class2576
  %rhs2592 = phi double [ %farg2584, %correct_class2576 ], [ %233, %guarded_body2589 ], !dbg !71
  %stack_pos2593 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2594 = load %"struct.rubinius::Object"** %stack_pos2593, !dbg !71
  %self_float2595 = bitcast %"struct.rubinius::Object"* %stack_load2594 to %"struct.rubinius::Float"*, !dbg !71
  %self.value_pos2596 = getelementptr %"struct.rubinius::Float"* %self_float2595, i32 0, i32 1, !dbg !71
  %fself2597 = load double* %self.value_pos2596, !dbg !71
  %float.add2598 = fadd double %fself2597, %rhs2592, !dbg !71
  %result2599 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !71, !rbx-classid !37
  %234 = getelementptr %"struct.rubinius::Float"* %result2599, i32 0, i32 1, !dbg !71
  store double %float.add2598, double* %234, !dbg !71
  %235 = bitcast %"struct.rubinius::Float"* %result2599 to %"struct.rubinius::Object"*, !dbg !71
  br label %continue2552, !dbg !71

class_fallback2550:                               ; preds = %continue2571, %check_class_id2558, %continue2491
  %stack_pos2600 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2601 = load %"struct.rubinius::Object"** %stack_pos2600, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2601, %"struct.rubinius::Object"** %out_args_recv166, !dbg !71
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !71
  store i32 1, i32* %out_args_total168, !dbg !71
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !71
  %stack_pos2602 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  store %"struct.rubinius::Object"** %stack_pos2602, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !71
  %cache_const2603 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550224 to %"struct.rubinius::CallSite"**), !dbg !71
  %execute_pos2604 = getelementptr %"struct.rubinius::CallSite"* %cache_const2603, i32 0, i32 2, !dbg !71
  %execute2605 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2604, !dbg !71
  store i32 227, i32* %ip_pos164, !dbg !71
  %call_site_execute2606 = call %"struct.rubinius::Object"* %execute2605(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2603, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !71
  %null_check2608 = icmp eq %"struct.rubinius::Object"* %call_site_execute2606, null, !dbg !71
  br i1 %null_check2608, label %bail_out159, label %check_active2607, !dbg !71

check_active2607:                                 ; preds = %class_fallback2550
  br label %continue2552, !dbg !71

continue2625:                                     ; preds = %done2654
  %local_pos2665 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 4, !dbg !72
  %local2666 = load %"struct.rubinius::Object"** %local_pos2665, !dbg !72, !rbx-classid !38
  %stack_pos2667 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !72
  store %"struct.rubinius::Object"* %local2666, %"struct.rubinius::Object"** %stack_pos2667, !dbg !72
  %stack_pos2668 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !72
  %stack_load2669 = load %"struct.rubinius::Object"** %stack_pos2668, !dbg !72, !rbx-classid !38
  %stack_pos2670 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2669, %"struct.rubinius::Object"** %stack_pos2670, !dbg !72
  %stack_pos2674 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2675 = load %"struct.rubinius::Object"** %stack_pos2674, !dbg !72, !rbx-classid !38
  %stack_pos2676 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2677 = load %"struct.rubinius::Object"** %stack_pos2676, !dbg !72, !rbx-classid !38
  %obj_array2678 = bitcast %"struct.rubinius::Object"* %stack_load2677 to %"struct.rubinius::Object"**, !dbg !72
  %field_pos2679 = getelementptr %"struct.rubinius::Object"** %obj_array2678, i32 8, !dbg !72
  %field2680 = load %"struct.rubinius::Object"** %field_pos2679, !dbg !72
  %prune_undef2681 = icmp eq %"struct.rubinius::Object"* %field2680, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !72
  %"select ivar2682" = select i1 %prune_undef2681, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2680, !dbg !72
  %stack_pos2683 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  store %"struct.rubinius::Object"* %"select ivar2682", %"struct.rubinius::Object"** %stack_pos2683, !dbg !72
  br label %continue2673, !dbg !72

check_class_id2631:                               ; preds = %continue2552
  %class_pos2634 = getelementptr %"struct.rubinius::Object"* %stack_load2627, i32 0, i32 0, i32 1, !dbg !71
  %ref_class2635 = load %"struct.rubinius::Class"** %class_pos2634, !dbg !71
  %class_id_pos2636 = getelementptr %"struct.rubinius::Class"* %ref_class2635, i32 0, i32 4, !dbg !71
  %class_id2637 = load i32* %class_id_pos2636, !dbg !71
  %check_class_id2638 = icmp eq i32 %class_id2637, 1285, !dbg !71
  br i1 %check_class_id2638, label %correct_class2632, label %class_fallback2623, !dbg !71

correct_class2632:                                ; preds = %check_class_id2631
  %serial_id_pos2639 = getelementptr %"struct.rubinius::Class"* %ref_class2635, i32 0, i32 5, !dbg !71
  %serial_id2640 = load i32* %serial_id_pos2639, !dbg !71
  %check_serial_id2641 = icmp eq i32 %serial_id2640, 2, !dbg !71
  br i1 %check_serial_id2641, label %correct_serial2633, label %serial_fallback2624, !dbg !71

class_fallback2623:                               ; preds = %check_class_id2631, %continue2552
  store i32 233, i32* %ip_pos164, !dbg !71
  %236 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !71
  br label %return_pad126, !dbg !71

correct_serial2633:                               ; preds = %correct_class2632
  %stack_pos2642 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !71
  %stack_load2643 = load %"struct.rubinius::Object"** %stack_pos2642, !dbg !71
  %stack_pos2644 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  %stack_load2645 = load %"struct.rubinius::Object"** %stack_pos2644, !dbg !71
  %obj_array2646 = bitcast %"struct.rubinius::Object"* %stack_load2645 to %"struct.rubinius::Object"**, !dbg !71
  %field_pos2647 = getelementptr %"struct.rubinius::Object"** %obj_array2646, i32 7, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2643, %"struct.rubinius::Object"** %field_pos2647, !dbg !71
  %cast2648 = ptrtoint %"struct.rubinius::Object"* %stack_load2643 to i64, !dbg !71
  %masked2649 = and i64 %cast2648, 3, !dbg !71
  %is_reference2650 = icmp eq i64 %masked2649, 0, !dbg !71
  br i1 %is_reference2650, label %reference_obj2651, label %done2654, !dbg !71

serial_fallback2624:                              ; preds = %correct_class2632
  store i32 233, i32* %ip_pos164, !dbg !71
  %237 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !71
  br label %return_pad126, !dbg !71

reference_obj2651:                                ; preds = %correct_serial2633
  %object_memory_mark2655 = load i32* inttoptr (i64 22565880 to i32*), !dbg !71
  %word_pos2656 = getelementptr %"struct.rubinius::Object"* %stack_load2645, i32 0, i32 0, i32 0, i32 0, !dbg !71
  %flags2657 = load i64* %word_pos2656, !dbg !71
  %mark_mask2658 = and i64 %flags2657, 3670016, !dbg !71
  %scan_mark2659 = add i32 %object_memory_mark2655, 1, !dbg !71
  %238 = zext i32 %scan_mark2659 to i64, !dbg !71
  %lshr2660 = shl i64 %238, 19, !dbg !71
  %is_scanned2661 = icmp eq i64 %mark_mask2658, %lshr2660, !dbg !71
  br i1 %is_scanned2661, label %run_barrier2653, label %object_not_scanned2652, !dbg !71

object_not_scanned2652:                           ; preds = %reference_obj2651
  %zone_mask2662 = and i64 %flags2657, 768, !dbg !71
  %is_young2663 = icmp eq i64 %zone_mask2662, 512, !dbg !71
  br i1 %is_young2663, label %done2654, label %run_barrier2653, !dbg !71

run_barrier2653:                                  ; preds = %object_not_scanned2652, %reference_obj2651
  %239 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2645, %"struct.rubinius::Object"* %stack_load2643), !dbg !71
  br label %done2654, !dbg !71

done2654:                                         ; preds = %run_barrier2653, %object_not_scanned2652, %correct_serial2633
  %stack_pos2664 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !71
  store %"struct.rubinius::Object"* %stack_load2643, %"struct.rubinius::Object"** %stack_pos2664, !dbg !71
  br label %continue2625, !dbg !71

class_fallback2671:                               ; No predecessors!
  store i32 241, i32* %ip_pos164, !dbg !72
  %240 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 241, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !72
  br label %return_pad126, !dbg !72

serial_fallback2672:                              ; No predecessors!
  store i32 241, i32* %ip_pos164, !dbg !72
  %241 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 241, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !72
  br label %return_pad126, !dbg !72

continue2673:                                     ; preds = %continue2625
  %local_pos2684 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 7, !dbg !72
  %local2685 = load %"struct.rubinius::Object"** %local_pos2684, !dbg !72, !rbx-classid !44
  %stack_pos2686 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  store %"struct.rubinius::Object"* %local2685, %"struct.rubinius::Object"** %stack_pos2686, !dbg !72
  %local_pos2687 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 10, !dbg !72
  %local2688 = load %"struct.rubinius::Object"** %local_pos2687, !dbg !72, !rbx-classid !70
  %stack_pos2689 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !72
  store %"struct.rubinius::Object"* %local2688, %"struct.rubinius::Object"** %stack_pos2689, !dbg !72
  %stack_pos2693 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2694 = load %"struct.rubinius::Object"** %stack_pos2693, !dbg !72, !rbx-classid !44
  %cast2695 = ptrtoint %"struct.rubinius::Object"* %stack_load2694 to i64, !dbg !72
  %masked2696 = and i64 %cast2695, 3, !dbg !72
  %is_reference2697 = icmp eq i64 %masked2696, 0, !dbg !72
  br i1 %is_reference2697, label %check_class_id2698, label %class_fallback2690, !dbg !72

continue2692:                                     ; preds = %check_active2747, %continue2725
  %send_result2749 = phi %"struct.rubinius::Object"* [ %245, %continue2725 ], [ %call_site_execute2746, %check_active2747 ], !dbg !72
  %stack_pos2750 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  store %"struct.rubinius::Object"* %send_result2749, %"struct.rubinius::Object"** %stack_pos2750, !dbg !72
  %stack_pos2754 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2755 = load %"struct.rubinius::Object"** %stack_pos2754, !dbg !72
  %cast2756 = ptrtoint %"struct.rubinius::Object"* %stack_load2755 to i64, !dbg !72
  %masked2757 = and i64 %cast2756, 3, !dbg !72
  %is_reference2758 = icmp eq i64 %masked2757, 0, !dbg !72
  br i1 %is_reference2758, label %check_class_id2759, label %class_fallback2751, !dbg !72

check_class_id2698:                               ; preds = %continue2673
  %class_pos2701 = getelementptr %"struct.rubinius::Object"* %stack_load2694, i32 0, i32 0, i32 1, !dbg !72
  %ref_class2702 = load %"struct.rubinius::Class"** %class_pos2701, !dbg !72
  %class_id_pos2703 = getelementptr %"struct.rubinius::Class"* %ref_class2702, i32 0, i32 4, !dbg !72
  %class_id2704 = load i32* %class_id_pos2703, !dbg !72
  %check_class_id2705 = icmp eq i32 %class_id2704, 77, !dbg !72
  br i1 %check_class_id2705, label %correct_class2699, label %class_fallback2690, !dbg !72

correct_class2699:                                ; preds = %check_class_id2698
  %serial_id_pos2706 = getelementptr %"struct.rubinius::Class"* %ref_class2702, i32 0, i32 5, !dbg !72
  %serial_id2707 = load i32* %serial_id_pos2706, !dbg !72
  %check_serial_id2708 = icmp eq i32 %serial_id2707, 224, !dbg !72
  br i1 %check_serial_id2708, label %correct_serial2700, label %serial_fallback2691, !dbg !72

correct_serial2700:                               ; preds = %correct_class2699
  %stack_pos2709 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !72
  %stack_load2710 = load %"struct.rubinius::Object"** %stack_pos2709, !dbg !72, !rbx-classid !70
  %cast2712 = ptrtoint %"struct.rubinius::Object"* %stack_load2710 to i64, !dbg !72
  %masked2713 = and i64 %cast2712, 3, !dbg !72
  %is_reference2714 = icmp eq i64 %masked2713, 0, !dbg !72
  br i1 %is_reference2714, label %check_class_id2715, label %continue2711, !dbg !72

serial_fallback2691:                              ; preds = %correct_class2699
  store i32 248, i32* %ip_pos164, !dbg !72
  %242 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 248, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !72
  br label %return_pad126, !dbg !72

check_class_id2715:                               ; preds = %correct_serial2700
  %class_pos2717 = getelementptr %"struct.rubinius::Object"* %stack_load2710, i32 0, i32 0, i32 1, !dbg !72
  %ref_class2718 = load %"struct.rubinius::Class"** %class_pos2717, !dbg !72
  %class_id_pos2719 = getelementptr %"struct.rubinius::Class"* %ref_class2718, i32 0, i32 4, !dbg !72
  %class_id2720 = load i32* %class_id_pos2719, !dbg !72
  %check_class_id2721 = icmp eq i32 %class_id2720, 77, !dbg !72
  br i1 %check_class_id2721, label %correct_class2716, label %continue2711, !dbg !72

correct_class2716:                                ; preds = %check_class_id2715
  %arg_float2722 = bitcast %"struct.rubinius::Object"* %stack_load2710 to %"struct.rubinius::Float"*, !dbg !72
  %arg.value_pos2723 = getelementptr %"struct.rubinius::Float"* %arg_float2722, i32 0, i32 1, !dbg !72
  %farg2724 = load double* %arg.value_pos2723, !dbg !72
  br label %continue2725, !dbg !72

continue2711:                                     ; preds = %check_class_id2715, %correct_serial2700
  %cast2726 = ptrtoint %"struct.rubinius::Object"* %stack_load2710 to i64, !dbg !72
  %masked2727 = and i64 %cast2726, 1, !dbg !72
  %is_fixnum2728 = icmp eq i64 %masked2727, 1, !dbg !72
  br i1 %is_fixnum2728, label %guarded_body2729, label %class_fallback2690, !dbg !72

guarded_body2729:                                 ; preds = %continue2711
  %as_int2730 = ptrtoint %"struct.rubinius::Object"* %stack_load2710 to i64, !dbg !72
  %ashr2731 = ashr i64 %as_int2730, 1, !dbg !72
  %243 = sitofp i64 %ashr2731 to double, !dbg !72
  br label %continue2725, !dbg !72

continue2725:                                     ; preds = %guarded_body2729, %correct_class2716
  %rhs2732 = phi double [ %farg2724, %correct_class2716 ], [ %243, %guarded_body2729 ], !dbg !72
  %stack_pos2733 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2734 = load %"struct.rubinius::Object"** %stack_pos2733, !dbg !72, !rbx-classid !44
  %self_float2735 = bitcast %"struct.rubinius::Object"* %stack_load2734 to %"struct.rubinius::Float"*, !dbg !72
  %self.value_pos2736 = getelementptr %"struct.rubinius::Float"* %self_float2735, i32 0, i32 1, !dbg !72
  %fself2737 = load double* %self.value_pos2736, !dbg !72
  %float.mul2738 = fmul double %fself2737, %rhs2732, !dbg !72
  %result2739 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !72, !rbx-classid !37
  %244 = getelementptr %"struct.rubinius::Float"* %result2739, i32 0, i32 1, !dbg !72
  store double %float.mul2738, double* %244, !dbg !72
  %245 = bitcast %"struct.rubinius::Float"* %result2739 to %"struct.rubinius::Object"*, !dbg !72
  br label %continue2692, !dbg !72

class_fallback2690:                               ; preds = %continue2711, %check_class_id2698, %continue2673
  %stack_pos2740 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2741 = load %"struct.rubinius::Object"** %stack_pos2740, !dbg !72, !rbx-classid !44
  store %"struct.rubinius::Object"* %stack_load2741, %"struct.rubinius::Object"** %out_args_recv166, !dbg !72
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !72
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !72
  store i32 1, i32* %out_args_total168, !dbg !72
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !72
  %stack_pos2742 = getelementptr %"struct.rubinius::Object"** %stack140, i32 3, !dbg !72
  store %"struct.rubinius::Object"** %stack_pos2742, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !72
  %cache_const2743 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550392 to %"struct.rubinius::CallSite"**), !dbg !72
  %execute_pos2744 = getelementptr %"struct.rubinius::CallSite"* %cache_const2743, i32 0, i32 2, !dbg !72
  %execute2745 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2744, !dbg !72
  store i32 248, i32* %ip_pos164, !dbg !72
  %call_site_execute2746 = call %"struct.rubinius::Object"* %execute2745(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2743, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !72
  %null_check2748 = icmp eq %"struct.rubinius::Object"* %call_site_execute2746, null, !dbg !72
  br i1 %null_check2748, label %bail_out159, label %check_active2747, !dbg !72

check_active2747:                                 ; preds = %class_fallback2690
  br label %continue2692, !dbg !72

continue2753:                                     ; preds = %check_active2808, %continue2786
  %send_result2810 = phi %"struct.rubinius::Object"* [ %249, %continue2786 ], [ %call_site_execute2807, %check_active2808 ], !dbg !72
  %stack_pos2811 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  store %"struct.rubinius::Object"* %send_result2810, %"struct.rubinius::Object"** %stack_pos2811, !dbg !72
  %stack_pos2812 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2813 = load %"struct.rubinius::Object"** %stack_pos2812, !dbg !72
  %stack_pos2814 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2813, %"struct.rubinius::Object"** %stack_pos2814, !dbg !72
  %stack_pos2815 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2816 = load %"struct.rubinius::Object"** %stack_pos2815, !dbg !72
  %stack_pos2817 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2818 = load %"struct.rubinius::Object"** %stack_pos2817, !dbg !72
  %stack_pos2819 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2818, %"struct.rubinius::Object"** %stack_pos2819, !dbg !72
  %stack_pos2820 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !72
  %stack_load2821 = load %"struct.rubinius::Object"** %stack_pos2820, !dbg !72, !rbx-classid !38
  %stack_pos2822 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2821, %"struct.rubinius::Object"** %stack_pos2822, !dbg !72
  %stack_pos2823 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2816, %"struct.rubinius::Object"** %stack_pos2823, !dbg !72
  %stack_pos2827 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2828 = load %"struct.rubinius::Object"** %stack_pos2827, !dbg !72
  %cast2829 = ptrtoint %"struct.rubinius::Object"* %stack_load2828 to i64, !dbg !72
  %masked2830 = and i64 %cast2829, 3, !dbg !72
  %is_reference2831 = icmp eq i64 %masked2830, 0, !dbg !72
  br i1 %is_reference2831, label %check_class_id2832, label %class_fallback2824, !dbg !72

check_class_id2759:                               ; preds = %continue2692
  %class_pos2762 = getelementptr %"struct.rubinius::Object"* %stack_load2755, i32 0, i32 0, i32 1, !dbg !72
  %ref_class2763 = load %"struct.rubinius::Class"** %class_pos2762, !dbg !72
  %class_id_pos2764 = getelementptr %"struct.rubinius::Class"* %ref_class2763, i32 0, i32 4, !dbg !72
  %class_id2765 = load i32* %class_id_pos2764, !dbg !72
  %check_class_id2766 = icmp eq i32 %class_id2765, 77, !dbg !72
  br i1 %check_class_id2766, label %correct_class2760, label %class_fallback2751, !dbg !72

correct_class2760:                                ; preds = %check_class_id2759
  %serial_id_pos2767 = getelementptr %"struct.rubinius::Class"* %ref_class2763, i32 0, i32 5, !dbg !72
  %serial_id2768 = load i32* %serial_id_pos2767, !dbg !72
  %check_serial_id2769 = icmp eq i32 %serial_id2768, 224, !dbg !72
  br i1 %check_serial_id2769, label %correct_serial2761, label %serial_fallback2752, !dbg !72

correct_serial2761:                               ; preds = %correct_class2760
  %stack_pos2770 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2771 = load %"struct.rubinius::Object"** %stack_pos2770, !dbg !72
  %cast2773 = ptrtoint %"struct.rubinius::Object"* %stack_load2771 to i64, !dbg !72
  %masked2774 = and i64 %cast2773, 3, !dbg !72
  %is_reference2775 = icmp eq i64 %masked2774, 0, !dbg !72
  br i1 %is_reference2775, label %check_class_id2776, label %continue2772, !dbg !72

serial_fallback2752:                              ; preds = %correct_class2760
  store i32 251, i32* %ip_pos164, !dbg !72
  %246 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 251, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !72
  br label %return_pad126, !dbg !72

check_class_id2776:                               ; preds = %correct_serial2761
  %class_pos2778 = getelementptr %"struct.rubinius::Object"* %stack_load2771, i32 0, i32 0, i32 1, !dbg !72
  %ref_class2779 = load %"struct.rubinius::Class"** %class_pos2778, !dbg !72
  %class_id_pos2780 = getelementptr %"struct.rubinius::Class"* %ref_class2779, i32 0, i32 4, !dbg !72
  %class_id2781 = load i32* %class_id_pos2780, !dbg !72
  %check_class_id2782 = icmp eq i32 %class_id2781, 77, !dbg !72
  br i1 %check_class_id2782, label %correct_class2777, label %continue2772, !dbg !72

correct_class2777:                                ; preds = %check_class_id2776
  %arg_float2783 = bitcast %"struct.rubinius::Object"* %stack_load2771 to %"struct.rubinius::Float"*, !dbg !72
  %arg.value_pos2784 = getelementptr %"struct.rubinius::Float"* %arg_float2783, i32 0, i32 1, !dbg !72
  %farg2785 = load double* %arg.value_pos2784, !dbg !72
  br label %continue2786, !dbg !72

continue2772:                                     ; preds = %check_class_id2776, %correct_serial2761
  %cast2787 = ptrtoint %"struct.rubinius::Object"* %stack_load2771 to i64, !dbg !72
  %masked2788 = and i64 %cast2787, 1, !dbg !72
  %is_fixnum2789 = icmp eq i64 %masked2788, 1, !dbg !72
  br i1 %is_fixnum2789, label %guarded_body2790, label %class_fallback2751, !dbg !72

guarded_body2790:                                 ; preds = %continue2772
  %as_int2791 = ptrtoint %"struct.rubinius::Object"* %stack_load2771 to i64, !dbg !72
  %ashr2792 = ashr i64 %as_int2791, 1, !dbg !72
  %247 = sitofp i64 %ashr2792 to double, !dbg !72
  br label %continue2786, !dbg !72

continue2786:                                     ; preds = %guarded_body2790, %correct_class2777
  %rhs2793 = phi double [ %farg2785, %correct_class2777 ], [ %247, %guarded_body2790 ], !dbg !72
  %stack_pos2794 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2795 = load %"struct.rubinius::Object"** %stack_pos2794, !dbg !72
  %self_float2796 = bitcast %"struct.rubinius::Object"* %stack_load2795 to %"struct.rubinius::Float"*, !dbg !72
  %self.value_pos2797 = getelementptr %"struct.rubinius::Float"* %self_float2796, i32 0, i32 1, !dbg !72
  %fself2798 = load double* %self.value_pos2797, !dbg !72
  %float.add2799 = fadd double %fself2798, %rhs2793, !dbg !72
  %result2800 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !72, !rbx-classid !37
  %248 = getelementptr %"struct.rubinius::Float"* %result2800, i32 0, i32 1, !dbg !72
  store double %float.add2799, double* %248, !dbg !72
  %249 = bitcast %"struct.rubinius::Float"* %result2800 to %"struct.rubinius::Object"*, !dbg !72
  br label %continue2753, !dbg !72

class_fallback2751:                               ; preds = %continue2772, %check_class_id2759, %continue2692
  %stack_pos2801 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2802 = load %"struct.rubinius::Object"** %stack_pos2801, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2802, %"struct.rubinius::Object"** %out_args_recv166, !dbg !72
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !72
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !72
  store i32 1, i32* %out_args_total168, !dbg !72
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !72
  %stack_pos2803 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  store %"struct.rubinius::Object"** %stack_pos2803, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !72
  %cache_const2804 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550416 to %"struct.rubinius::CallSite"**), !dbg !72
  %execute_pos2805 = getelementptr %"struct.rubinius::CallSite"* %cache_const2804, i32 0, i32 2, !dbg !72
  %execute2806 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2805, !dbg !72
  store i32 251, i32* %ip_pos164, !dbg !72
  %call_site_execute2807 = call %"struct.rubinius::Object"* %execute2806(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2804, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !72
  %null_check2809 = icmp eq %"struct.rubinius::Object"* %call_site_execute2807, null, !dbg !72
  br i1 %null_check2809, label %bail_out159, label %check_active2808, !dbg !72

check_active2808:                                 ; preds = %class_fallback2751
  br label %continue2753, !dbg !72

continue2826:                                     ; preds = %done2855
  %local_pos2866 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 3, !dbg !73
  %local2867 = load %"struct.rubinius::Object"** %local_pos2866, !dbg !73, !rbx-classid !31
  %stack_pos2868 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !73
  store %"struct.rubinius::Object"* %local2867, %"struct.rubinius::Object"** %stack_pos2868, !dbg !73
  %stack_pos2869 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !73
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2869, !dbg !73
  %stack_pos2873 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !73
  %stack_load2874 = load %"struct.rubinius::Object"** %stack_pos2873, !dbg !73, !rbx-classid !31
  %stack_pos2875 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !73
  %stack_load2876 = load %"struct.rubinius::Object"** %stack_pos2875, !dbg !73, !rbx-classid !27
  %cast2881 = ptrtoint %"struct.rubinius::Object"* %stack_load2874 to i64, !dbg !73
  %cast2882 = ptrtoint %"struct.rubinius::Object"* %stack_load2876 to i64, !dbg !73
  %fixnums_anded2883 = and i64 %cast2881, %cast2882, !dbg !73
  %masked2884 = and i64 %fixnums_anded2883, 1, !dbg !73
  %is_fixnum2885 = icmp eq i64 %masked2884, 1, !dbg !73
  br i1 %is_fixnum2885, label %push_add2877, label %class_fallback2870, !dbg !73

check_class_id2832:                               ; preds = %continue2753
  %class_pos2835 = getelementptr %"struct.rubinius::Object"* %stack_load2828, i32 0, i32 0, i32 1, !dbg !72
  %ref_class2836 = load %"struct.rubinius::Class"** %class_pos2835, !dbg !72
  %class_id_pos2837 = getelementptr %"struct.rubinius::Class"* %ref_class2836, i32 0, i32 4, !dbg !72
  %class_id2838 = load i32* %class_id_pos2837, !dbg !72
  %check_class_id2839 = icmp eq i32 %class_id2838, 1285, !dbg !72
  br i1 %check_class_id2839, label %correct_class2833, label %class_fallback2824, !dbg !72

correct_class2833:                                ; preds = %check_class_id2832
  %serial_id_pos2840 = getelementptr %"struct.rubinius::Class"* %ref_class2836, i32 0, i32 5, !dbg !72
  %serial_id2841 = load i32* %serial_id_pos2840, !dbg !72
  %check_serial_id2842 = icmp eq i32 %serial_id2841, 2, !dbg !72
  br i1 %check_serial_id2842, label %correct_serial2834, label %serial_fallback2825, !dbg !72

class_fallback2824:                               ; preds = %check_class_id2832, %continue2753
  store i32 257, i32* %ip_pos164, !dbg !72
  %250 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !72
  br label %return_pad126, !dbg !72

correct_serial2834:                               ; preds = %correct_class2833
  %stack_pos2843 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !72
  %stack_load2844 = load %"struct.rubinius::Object"** %stack_pos2843, !dbg !72
  %stack_pos2845 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  %stack_load2846 = load %"struct.rubinius::Object"** %stack_pos2845, !dbg !72
  %obj_array2847 = bitcast %"struct.rubinius::Object"* %stack_load2846 to %"struct.rubinius::Object"**, !dbg !72
  %field_pos2848 = getelementptr %"struct.rubinius::Object"** %obj_array2847, i32 8, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2844, %"struct.rubinius::Object"** %field_pos2848, !dbg !72
  %cast2849 = ptrtoint %"struct.rubinius::Object"* %stack_load2844 to i64, !dbg !72
  %masked2850 = and i64 %cast2849, 3, !dbg !72
  %is_reference2851 = icmp eq i64 %masked2850, 0, !dbg !72
  br i1 %is_reference2851, label %reference_obj2852, label %done2855, !dbg !72

serial_fallback2825:                              ; preds = %correct_class2833
  store i32 257, i32* %ip_pos164, !dbg !72
  %251 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !72
  br label %return_pad126, !dbg !72

reference_obj2852:                                ; preds = %correct_serial2834
  %object_memory_mark2856 = load i32* inttoptr (i64 22565880 to i32*), !dbg !72
  %word_pos2857 = getelementptr %"struct.rubinius::Object"* %stack_load2846, i32 0, i32 0, i32 0, i32 0, !dbg !72
  %flags2858 = load i64* %word_pos2857, !dbg !72
  %mark_mask2859 = and i64 %flags2858, 3670016, !dbg !72
  %scan_mark2860 = add i32 %object_memory_mark2856, 1, !dbg !72
  %252 = zext i32 %scan_mark2860 to i64, !dbg !72
  %lshr2861 = shl i64 %252, 19, !dbg !72
  %is_scanned2862 = icmp eq i64 %mark_mask2859, %lshr2861, !dbg !72
  br i1 %is_scanned2862, label %run_barrier2854, label %object_not_scanned2853, !dbg !72

object_not_scanned2853:                           ; preds = %reference_obj2852
  %zone_mask2863 = and i64 %flags2858, 768, !dbg !72
  %is_young2864 = icmp eq i64 %zone_mask2863, 512, !dbg !72
  br i1 %is_young2864, label %done2855, label %run_barrier2854, !dbg !72

run_barrier2854:                                  ; preds = %object_not_scanned2853, %reference_obj2852
  %253 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2846, %"struct.rubinius::Object"* %stack_load2844), !dbg !72
  br label %done2855, !dbg !72

done2855:                                         ; preds = %run_barrier2854, %object_not_scanned2853, %correct_serial2834
  %stack_pos2865 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !72
  store %"struct.rubinius::Object"* %stack_load2844, %"struct.rubinius::Object"** %stack_pos2865, !dbg !72
  br label %continue2826, !dbg !72

class_fallback2870:                               ; preds = %continue2826
  %stack_pos2897 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !73
  %stack_load2898 = load %"struct.rubinius::Object"** %stack_pos2897, !dbg !73, !rbx-classid !31
  store %"struct.rubinius::Object"* %stack_load2898, %"struct.rubinius::Object"** %out_args_recv166, !dbg !73
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !73
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !73
  store i32 1, i32* %out_args_total168, !dbg !73
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !73
  %stack_pos2899 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !73
  store %"struct.rubinius::Object"** %stack_pos2899, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !73
  %cache_const2900 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550528 to %"struct.rubinius::CallSite"**), !dbg !73
  %execute_pos2901 = getelementptr %"struct.rubinius::CallSite"* %cache_const2900, i32 0, i32 2, !dbg !73
  %execute2902 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2901, !dbg !73
  store i32 265, i32* %ip_pos164, !dbg !73
  %call_site_execute2903 = call %"struct.rubinius::Object"* %execute2902(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2900, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !73
  %null_check2905 = icmp eq %"struct.rubinius::Object"* %call_site_execute2903, null, !dbg !73
  br i1 %null_check2905, label %bail_out159, label %check_active2904, !dbg !73

serial_fallback2871:                              ; No predecessors!
  store i32 265, i32* %ip_pos164, !dbg !73
  %254 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 265, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !73
  br label %return_pad126, !dbg !73

continue2872:                                     ; preds = %check_active2904, %cont2880
  %send_result2906 = phi %"struct.rubinius::Object"* [ %result2896, %cont2880 ], [ %call_site_execute2903, %check_active2904 ], !dbg !73
  %stack_pos2907 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !73
  store %"struct.rubinius::Object"* %send_result2906, %"struct.rubinius::Object"** %stack_pos2907, !dbg !73
  %local_pos2908 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 3, !dbg !73
  %stack_pos2909 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !73
  %stack_load2910 = load %"struct.rubinius::Object"** %stack_pos2909, !dbg !73
  store %"struct.rubinius::Object"* %stack_load2910, %"struct.rubinius::Object"** %local_pos2908, !dbg !73
  %255 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !73
  %vm_jit = load %"struct.rubinius::VMJIT"** %255, !dbg !73
  %256 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !73
  %check_interrupts = load i8* %256, !dbg !73
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), !dbg !73
  %or2913 = or i8 %check_interrupts, %check_global_interrupts, !dbg !73
  %needs_interrupts = icmp eq i8 %or2913, 0, !dbg !73
  br i1 %needs_interrupts, label %continue2911, label %interrupts, !dbg !73

push_add2877:                                     ; preds = %continue2826
  %as_int2886 = ptrtoint %"struct.rubinius::Object"* %stack_load2874 to i64, !dbg !73
  %ashr2887 = ashr i64 %as_int2886, 1, !dbg !73
  %as_int2888 = ptrtoint %"struct.rubinius::Object"* %stack_load2876 to i64, !dbg !73
  %ashr2889 = ashr i64 %as_int2888, 1, !dbg !73
  %fixnum.add2890 = add i64 %ashr2887, %ashr2889, !dbg !73
  %257 = icmp sle i64 %fixnum.add2890, 4611686018427387903, !dbg !73
  %258 = icmp sge i64 %fixnum.add2890, -4611686018427387903, !dbg !73
  %fits_fixnum2891 = and i1 %257, %258, !dbg !73
  br i1 %fits_fixnum2891, label %tagnow2878, label %bignum2879, !dbg !73

tagnow2878:                                       ; preds = %push_add2877
  %shl2893 = shl i64 %fixnum.add2890, 1, !dbg !73
  %or2894 = or i64 %shl2893, 1, !dbg !73
  %as_obj2895 = inttoptr i64 %or2894 to %"struct.rubinius::Object"*, !dbg !73
  br label %cont2880, !dbg !73

bignum2879:                                       ; preds = %push_add2877
  %big_value2892 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add2890) #1, !dbg !73
  br label %cont2880, !dbg !73

cont2880:                                         ; preds = %tagnow2878, %bignum2879
  %result2896 = phi %"struct.rubinius::Object"* [ %big_value2892, %bignum2879 ], [ %as_obj2895, %tagnow2878 ], !dbg !73
  br label %continue2872, !dbg !73

check_active2904:                                 ; preds = %class_fallback2870
  br label %continue2872, !dbg !73

continue2911:                                     ; preds = %continue2872
  br label %done2912, !dbg !73

interrupts:                                       ; preds = %continue2872
  store i32 271, i32* %ip_pos164, !dbg !73
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139), !dbg !73
  %null_check2916 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !73
  br i1 %null_check2916, label %bail_out159, label %check_active2915, !dbg !73

done2912:                                         ; preds = %continue2914, %continue2911
  br label %method_body, !dbg !73

continue2914:                                     ; preds = %check_active2915
  br label %done2912, !dbg !73

check_active2915:                                 ; preds = %interrupts
  br label %continue2914, !dbg !73

continue2917:                                     ; No predecessors!
  br label %ip274, !dbg !73

ip274:                                            ; preds = %continue2917, %continue179
  %stack_pos2918 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !74
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2918, !dbg !74
  %stack_pos2921 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2921, !dbg !75
  %259 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !75
  %self2922 = load %"struct.rubinius::Object"** %259, !dbg !75
  %cast2923 = ptrtoint %"struct.rubinius::Object"* %self2922 to i64, !dbg !75
  %masked2924 = and i64 %cast2923, 3, !dbg !75
  %is_reference2925 = icmp eq i64 %masked2924, 0, !dbg !75
  br i1 %is_reference2925, label %check_class_id2926, label %visit_push_ivar_fallback2919, !dbg !75

continue2920:                                     ; preds = %visit_push_ivar_fallback2919, %correct_class2927
  %local_pos2942 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 2, !dbg !75
  %local2943 = load %"struct.rubinius::Object"** %local_pos2942, !dbg !75, !rbx-classid !46
  %stack_pos2944 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  store %"struct.rubinius::Object"* %local2943, %"struct.rubinius::Object"** %stack_pos2944, !dbg !75
  %stack_pos2947 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2947, !dbg !75
  %260 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !75
  %self2948 = load %"struct.rubinius::Object"** %260, !dbg !75
  %cast2949 = ptrtoint %"struct.rubinius::Object"* %self2948 to i64, !dbg !75
  %masked2950 = and i64 %cast2949, 3, !dbg !75
  %is_reference2951 = icmp eq i64 %masked2950, 0, !dbg !75
  br i1 %is_reference2951, label %check_class_id2952, label %visit_push_ivar_fallback2945, !dbg !75

check_class_id2926:                               ; preds = %ip274
  %class_pos2928 = getelementptr %"struct.rubinius::Object"* %self2922, i32 0, i32 0, i32 1, !dbg !75
  %ref_class2929 = load %"struct.rubinius::Class"** %class_pos2928, !dbg !75
  %class_id_pos2930 = getelementptr %"struct.rubinius::Class"* %ref_class2929, i32 0, i32 4, !dbg !75
  %class_id2931 = load i32* %class_id_pos2930, !dbg !75
  %check_class_id2932 = icmp eq i32 %class_id2931, 1285, !dbg !75
  br i1 %check_class_id2932, label %correct_class2927, label %visit_push_ivar_fallback2919, !dbg !75

correct_class2927:                                ; preds = %check_class_id2926
  %obj_array2933 = bitcast %"struct.rubinius::Object"* %self2922 to %"struct.rubinius::Object"**, !dbg !75
  %field_pos2934 = getelementptr %"struct.rubinius::Object"** %obj_array2933, i32 3, !dbg !75
  %field2935 = load %"struct.rubinius::Object"** %field_pos2934, !dbg !75
  %prune_undef2936 = icmp eq %"struct.rubinius::Object"* %field2935, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !75
  %"select ivar2937" = select i1 %prune_undef2936, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2935, !dbg !75
  %stack_pos2938 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  store %"struct.rubinius::Object"* %"select ivar2937", %"struct.rubinius::Object"** %stack_pos2938, !dbg !75
  br label %continue2920, !dbg !75

visit_push_ivar_fallback2919:                     ; preds = %check_class_id2926, %ip274
  %261 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !75
  %self2939 = load %"struct.rubinius::Object"** %261, !dbg !75
  %ivar2940 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2939, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !75
  %stack_pos2941 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  store %"struct.rubinius::Object"* %ivar2940, %"struct.rubinius::Object"** %stack_pos2941, !dbg !75
  br label %continue2920, !dbg !75

continue2946:                                     ; preds = %visit_push_ivar_fallback2945, %correct_class2953
  %stack_pos2971 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  %stack_load2972 = load %"struct.rubinius::Object"** %stack_pos2971, !dbg !75, !rbx-classid !46
  %cast2973 = ptrtoint %"struct.rubinius::Object"* %stack_load2972 to i64, !dbg !75
  %masked2974 = and i64 %cast2973, 3, !dbg !75
  %is_reference2975 = icmp eq i64 %masked2974, 0, !dbg !75
  br i1 %is_reference2975, label %check_class_id2976, label %class_fallback2968, !dbg !75

check_class_id2952:                               ; preds = %continue2920
  %class_pos2954 = getelementptr %"struct.rubinius::Object"* %self2948, i32 0, i32 0, i32 1, !dbg !75
  %ref_class2955 = load %"struct.rubinius::Class"** %class_pos2954, !dbg !75
  %class_id_pos2956 = getelementptr %"struct.rubinius::Class"* %ref_class2955, i32 0, i32 4, !dbg !75
  %class_id2957 = load i32* %class_id_pos2956, !dbg !75
  %check_class_id2958 = icmp eq i32 %class_id2957, 1285, !dbg !75
  br i1 %check_class_id2958, label %correct_class2953, label %visit_push_ivar_fallback2945, !dbg !75

correct_class2953:                                ; preds = %check_class_id2952
  %obj_array2959 = bitcast %"struct.rubinius::Object"* %self2948 to %"struct.rubinius::Object"**, !dbg !75
  %field_pos2960 = getelementptr %"struct.rubinius::Object"** %obj_array2959, i32 6, !dbg !75
  %field2961 = load %"struct.rubinius::Object"** %field_pos2960, !dbg !75
  %prune_undef2962 = icmp eq %"struct.rubinius::Object"* %field2961, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !75
  %"select ivar2963" = select i1 %prune_undef2962, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2961, !dbg !75
  %stack_pos2964 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !75
  store %"struct.rubinius::Object"* %"select ivar2963", %"struct.rubinius::Object"** %stack_pos2964, !dbg !75
  br label %continue2946, !dbg !75

visit_push_ivar_fallback2945:                     ; preds = %check_class_id2952, %continue2920
  %262 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !75
  %self2965 = load %"struct.rubinius::Object"** %262, !dbg !75
  %ivar2966 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2965, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !75
  %stack_pos2967 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !75
  store %"struct.rubinius::Object"* %ivar2966, %"struct.rubinius::Object"** %stack_pos2967, !dbg !75
  br label %continue2946, !dbg !75

continue2970:                                     ; preds = %check_active3025, %continue3003
  %send_result3027 = phi %"struct.rubinius::Object"* [ %266, %continue3003 ], [ %call_site_execute3024, %check_active3025 ], !dbg !75
  %stack_pos3028 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  store %"struct.rubinius::Object"* %send_result3027, %"struct.rubinius::Object"** %stack_pos3028, !dbg !75
  %stack_pos3032 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  %stack_load3033 = load %"struct.rubinius::Object"** %stack_pos3032, !dbg !75
  %cast3034 = ptrtoint %"struct.rubinius::Object"* %stack_load3033 to i64, !dbg !75
  %masked3035 = and i64 %cast3034, 3, !dbg !75
  %is_reference3036 = icmp eq i64 %masked3035, 0, !dbg !75
  br i1 %is_reference3036, label %check_class_id3037, label %class_fallback3029, !dbg !75

check_class_id2976:                               ; preds = %continue2946
  %class_pos2979 = getelementptr %"struct.rubinius::Object"* %stack_load2972, i32 0, i32 0, i32 1, !dbg !75
  %ref_class2980 = load %"struct.rubinius::Class"** %class_pos2979, !dbg !75
  %class_id_pos2981 = getelementptr %"struct.rubinius::Class"* %ref_class2980, i32 0, i32 4, !dbg !75
  %class_id2982 = load i32* %class_id_pos2981, !dbg !75
  %check_class_id2983 = icmp eq i32 %class_id2982, 77, !dbg !75
  br i1 %check_class_id2983, label %correct_class2977, label %class_fallback2968, !dbg !75

correct_class2977:                                ; preds = %check_class_id2976
  %serial_id_pos2984 = getelementptr %"struct.rubinius::Class"* %ref_class2980, i32 0, i32 5, !dbg !75
  %serial_id2985 = load i32* %serial_id_pos2984, !dbg !75
  %check_serial_id2986 = icmp eq i32 %serial_id2985, 224, !dbg !75
  br i1 %check_serial_id2986, label %correct_serial2978, label %serial_fallback2969, !dbg !75

correct_serial2978:                               ; preds = %correct_class2977
  %stack_pos2987 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !75
  %stack_load2988 = load %"struct.rubinius::Object"** %stack_pos2987, !dbg !75
  %cast2990 = ptrtoint %"struct.rubinius::Object"* %stack_load2988 to i64, !dbg !75
  %masked2991 = and i64 %cast2990, 3, !dbg !75
  %is_reference2992 = icmp eq i64 %masked2991, 0, !dbg !75
  br i1 %is_reference2992, label %check_class_id2993, label %continue2989, !dbg !75

serial_fallback2969:                              ; preds = %correct_class2977
  store i32 282, i32* %ip_pos164, !dbg !75
  %263 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 282, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !75
  br label %return_pad126, !dbg !75

check_class_id2993:                               ; preds = %correct_serial2978
  %class_pos2995 = getelementptr %"struct.rubinius::Object"* %stack_load2988, i32 0, i32 0, i32 1, !dbg !75
  %ref_class2996 = load %"struct.rubinius::Class"** %class_pos2995, !dbg !75
  %class_id_pos2997 = getelementptr %"struct.rubinius::Class"* %ref_class2996, i32 0, i32 4, !dbg !75
  %class_id2998 = load i32* %class_id_pos2997, !dbg !75
  %check_class_id2999 = icmp eq i32 %class_id2998, 77, !dbg !75
  br i1 %check_class_id2999, label %correct_class2994, label %continue2989, !dbg !75

correct_class2994:                                ; preds = %check_class_id2993
  %arg_float3000 = bitcast %"struct.rubinius::Object"* %stack_load2988 to %"struct.rubinius::Float"*, !dbg !75
  %arg.value_pos3001 = getelementptr %"struct.rubinius::Float"* %arg_float3000, i32 0, i32 1, !dbg !75
  %farg3002 = load double* %arg.value_pos3001, !dbg !75
  br label %continue3003, !dbg !75

continue2989:                                     ; preds = %check_class_id2993, %correct_serial2978
  %cast3004 = ptrtoint %"struct.rubinius::Object"* %stack_load2988 to i64, !dbg !75
  %masked3005 = and i64 %cast3004, 1, !dbg !75
  %is_fixnum3006 = icmp eq i64 %masked3005, 1, !dbg !75
  br i1 %is_fixnum3006, label %guarded_body3007, label %class_fallback2968, !dbg !75

guarded_body3007:                                 ; preds = %continue2989
  %as_int3008 = ptrtoint %"struct.rubinius::Object"* %stack_load2988 to i64, !dbg !75
  %ashr3009 = ashr i64 %as_int3008, 1, !dbg !75
  %264 = sitofp i64 %ashr3009 to double, !dbg !75
  br label %continue3003, !dbg !75

continue3003:                                     ; preds = %guarded_body3007, %correct_class2994
  %rhs3010 = phi double [ %farg3002, %correct_class2994 ], [ %264, %guarded_body3007 ], !dbg !75
  %stack_pos3011 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  %stack_load3012 = load %"struct.rubinius::Object"** %stack_pos3011, !dbg !75, !rbx-classid !46
  %self_float3013 = bitcast %"struct.rubinius::Object"* %stack_load3012 to %"struct.rubinius::Float"*, !dbg !75
  %self.value_pos3014 = getelementptr %"struct.rubinius::Float"* %self_float3013, i32 0, i32 1, !dbg !75
  %fself3015 = load double* %self.value_pos3014, !dbg !75
  %float.mul3016 = fmul double %fself3015, %rhs3010, !dbg !75
  %result3017 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !75, !rbx-classid !37
  %265 = getelementptr %"struct.rubinius::Float"* %result3017, i32 0, i32 1, !dbg !75
  store double %float.mul3016, double* %265, !dbg !75
  %266 = bitcast %"struct.rubinius::Float"* %result3017 to %"struct.rubinius::Object"*, !dbg !75
  br label %continue2970, !dbg !75

class_fallback2968:                               ; preds = %continue2989, %check_class_id2976, %continue2946
  %stack_pos3018 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  %stack_load3019 = load %"struct.rubinius::Object"** %stack_pos3018, !dbg !75, !rbx-classid !46
  store %"struct.rubinius::Object"* %stack_load3019, %"struct.rubinius::Object"** %out_args_recv166, !dbg !75
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !75
  store i32 1, i32* %out_args_total168, !dbg !75
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !75
  %stack_pos3020 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !75
  store %"struct.rubinius::Object"** %stack_pos3020, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !75
  %cache_const3021 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550664 to %"struct.rubinius::CallSite"**), !dbg !75
  %execute_pos3022 = getelementptr %"struct.rubinius::CallSite"* %cache_const3021, i32 0, i32 2, !dbg !75
  %execute3023 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3022, !dbg !75
  store i32 282, i32* %ip_pos164, !dbg !75
  %call_site_execute3024 = call %"struct.rubinius::Object"* %execute3023(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3021, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !75
  %null_check3026 = icmp eq %"struct.rubinius::Object"* %call_site_execute3024, null, !dbg !75
  br i1 %null_check3026, label %bail_out159, label %check_active3025, !dbg !75

check_active3025:                                 ; preds = %class_fallback2968
  br label %continue2970, !dbg !75

continue3031:                                     ; preds = %check_active3086, %continue3064
  %send_result3088 = phi %"struct.rubinius::Object"* [ %271, %continue3064 ], [ %call_site_execute3085, %check_active3086 ], !dbg !75
  %stack_pos3089 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  store %"struct.rubinius::Object"* %send_result3088, %"struct.rubinius::Object"** %stack_pos3089, !dbg !75
  %267 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !75
  %self3090 = load %"struct.rubinius::Object"** %267, !dbg !75
  %stack_pos3091 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  %stack_load3092 = load %"struct.rubinius::Object"** %stack_pos3091, !dbg !75
  %cast3095 = ptrtoint %"struct.rubinius::Object"* %self3090 to i64, !dbg !75
  %masked3096 = and i64 %cast3095, 3, !dbg !75
  %is_reference3097 = icmp eq i64 %masked3096, 0, !dbg !75
  br i1 %is_reference3097, label %check_class_id3098, label %visit_push_ivar_fallback3093, !dbg !75

check_class_id3037:                               ; preds = %continue2970
  %class_pos3040 = getelementptr %"struct.rubinius::Object"* %stack_load3033, i32 0, i32 0, i32 1, !dbg !75
  %ref_class3041 = load %"struct.rubinius::Class"** %class_pos3040, !dbg !75
  %class_id_pos3042 = getelementptr %"struct.rubinius::Class"* %ref_class3041, i32 0, i32 4, !dbg !75
  %class_id3043 = load i32* %class_id_pos3042, !dbg !75
  %check_class_id3044 = icmp eq i32 %class_id3043, 77, !dbg !75
  br i1 %check_class_id3044, label %correct_class3038, label %class_fallback3029, !dbg !75

correct_class3038:                                ; preds = %check_class_id3037
  %serial_id_pos3045 = getelementptr %"struct.rubinius::Class"* %ref_class3041, i32 0, i32 5, !dbg !75
  %serial_id3046 = load i32* %serial_id_pos3045, !dbg !75
  %check_serial_id3047 = icmp eq i32 %serial_id3046, 224, !dbg !75
  br i1 %check_serial_id3047, label %correct_serial3039, label %serial_fallback3030, !dbg !75

correct_serial3039:                               ; preds = %correct_class3038
  %stack_pos3048 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  %stack_load3049 = load %"struct.rubinius::Object"** %stack_pos3048, !dbg !75
  %cast3051 = ptrtoint %"struct.rubinius::Object"* %stack_load3049 to i64, !dbg !75
  %masked3052 = and i64 %cast3051, 3, !dbg !75
  %is_reference3053 = icmp eq i64 %masked3052, 0, !dbg !75
  br i1 %is_reference3053, label %check_class_id3054, label %continue3050, !dbg !75

serial_fallback3030:                              ; preds = %correct_class3038
  store i32 285, i32* %ip_pos164, !dbg !75
  %268 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 285, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !75
  br label %return_pad126, !dbg !75

check_class_id3054:                               ; preds = %correct_serial3039
  %class_pos3056 = getelementptr %"struct.rubinius::Object"* %stack_load3049, i32 0, i32 0, i32 1, !dbg !75
  %ref_class3057 = load %"struct.rubinius::Class"** %class_pos3056, !dbg !75
  %class_id_pos3058 = getelementptr %"struct.rubinius::Class"* %ref_class3057, i32 0, i32 4, !dbg !75
  %class_id3059 = load i32* %class_id_pos3058, !dbg !75
  %check_class_id3060 = icmp eq i32 %class_id3059, 77, !dbg !75
  br i1 %check_class_id3060, label %correct_class3055, label %continue3050, !dbg !75

correct_class3055:                                ; preds = %check_class_id3054
  %arg_float3061 = bitcast %"struct.rubinius::Object"* %stack_load3049 to %"struct.rubinius::Float"*, !dbg !75
  %arg.value_pos3062 = getelementptr %"struct.rubinius::Float"* %arg_float3061, i32 0, i32 1, !dbg !75
  %farg3063 = load double* %arg.value_pos3062, !dbg !75
  br label %continue3064, !dbg !75

continue3050:                                     ; preds = %check_class_id3054, %correct_serial3039
  %cast3065 = ptrtoint %"struct.rubinius::Object"* %stack_load3049 to i64, !dbg !75
  %masked3066 = and i64 %cast3065, 1, !dbg !75
  %is_fixnum3067 = icmp eq i64 %masked3066, 1, !dbg !75
  br i1 %is_fixnum3067, label %guarded_body3068, label %class_fallback3029, !dbg !75

guarded_body3068:                                 ; preds = %continue3050
  %as_int3069 = ptrtoint %"struct.rubinius::Object"* %stack_load3049 to i64, !dbg !75
  %ashr3070 = ashr i64 %as_int3069, 1, !dbg !75
  %269 = sitofp i64 %ashr3070 to double, !dbg !75
  br label %continue3064, !dbg !75

continue3064:                                     ; preds = %guarded_body3068, %correct_class3055
  %rhs3071 = phi double [ %farg3063, %correct_class3055 ], [ %269, %guarded_body3068 ], !dbg !75
  %stack_pos3072 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  %stack_load3073 = load %"struct.rubinius::Object"** %stack_pos3072, !dbg !75
  %self_float3074 = bitcast %"struct.rubinius::Object"* %stack_load3073 to %"struct.rubinius::Float"*, !dbg !75
  %self.value_pos3075 = getelementptr %"struct.rubinius::Float"* %self_float3074, i32 0, i32 1, !dbg !75
  %fself3076 = load double* %self.value_pos3075, !dbg !75
  %float.add3077 = fadd double %fself3076, %rhs3071, !dbg !75
  %result3078 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !75, !rbx-classid !37
  %270 = getelementptr %"struct.rubinius::Float"* %result3078, i32 0, i32 1, !dbg !75
  store double %float.add3077, double* %270, !dbg !75
  %271 = bitcast %"struct.rubinius::Float"* %result3078 to %"struct.rubinius::Object"*, !dbg !75
  br label %continue3031, !dbg !75

class_fallback3029:                               ; preds = %continue3050, %check_class_id3037, %continue2970
  %stack_pos3079 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !75
  %stack_load3080 = load %"struct.rubinius::Object"** %stack_pos3079, !dbg !75
  store %"struct.rubinius::Object"* %stack_load3080, %"struct.rubinius::Object"** %out_args_recv166, !dbg !75
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !75
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !75
  store i32 1, i32* %out_args_total168, !dbg !75
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !75
  %stack_pos3081 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !75
  store %"struct.rubinius::Object"** %stack_pos3081, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !75
  %cache_const3082 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550688 to %"struct.rubinius::CallSite"**), !dbg !75
  %execute_pos3083 = getelementptr %"struct.rubinius::CallSite"* %cache_const3082, i32 0, i32 2, !dbg !75
  %execute3084 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3083, !dbg !75
  store i32 285, i32* %ip_pos164, !dbg !75
  %call_site_execute3085 = call %"struct.rubinius::Object"* %execute3084(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3082, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !75
  %null_check3087 = icmp eq %"struct.rubinius::Object"* %call_site_execute3085, null, !dbg !75
  br i1 %null_check3087, label %bail_out159, label %check_active3086, !dbg !75

check_active3086:                                 ; preds = %class_fallback3029
  br label %continue3031, !dbg !75

continue3094:                                     ; preds = %continue3124, %done3113
  %stack_pos3129 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3129, !dbg !76
  %272 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !76
  %self3130 = load %"struct.rubinius::Object"** %272, !dbg !76
  %cast3131 = ptrtoint %"struct.rubinius::Object"* %self3130 to i64, !dbg !76
  %masked3132 = and i64 %cast3131, 3, !dbg !76
  %is_reference3133 = icmp eq i64 %masked3132, 0, !dbg !76
  br i1 %is_reference3133, label %check_class_id3134, label %visit_push_ivar_fallback3127, !dbg !76

check_class_id3098:                               ; preds = %continue3031
  %class_pos3100 = getelementptr %"struct.rubinius::Object"* %self3090, i32 0, i32 0, i32 1, !dbg !75
  %ref_class3101 = load %"struct.rubinius::Class"** %class_pos3100, !dbg !75
  %class_id_pos3102 = getelementptr %"struct.rubinius::Class"* %ref_class3101, i32 0, i32 4, !dbg !75
  %class_id3103 = load i32* %class_id_pos3102, !dbg !75
  %check_class_id3104 = icmp eq i32 %class_id3103, 1285, !dbg !75
  br i1 %check_class_id3104, label %correct_class3099, label %visit_push_ivar_fallback3093, !dbg !75

correct_class3099:                                ; preds = %check_class_id3098
  %obj_array3105 = bitcast %"struct.rubinius::Object"* %self3090 to %"struct.rubinius::Object"**, !dbg !75
  %field_pos3106 = getelementptr %"struct.rubinius::Object"** %obj_array3105, i32 3, !dbg !75
  store %"struct.rubinius::Object"* %stack_load3092, %"struct.rubinius::Object"** %field_pos3106, !dbg !75
  %cast3107 = ptrtoint %"struct.rubinius::Object"* %stack_load3092 to i64, !dbg !75
  %masked3108 = and i64 %cast3107, 3, !dbg !75
  %is_reference3109 = icmp eq i64 %masked3108, 0, !dbg !75
  br i1 %is_reference3109, label %reference_obj3110, label %done3113, !dbg !75

visit_push_ivar_fallback3093:                     ; preds = %check_class_id3098, %continue3031
  %ivar3123 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3090, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3092), !dbg !75
  %null_check3126 = icmp eq %"struct.rubinius::Object"* %ivar3123, null, !dbg !75
  br i1 %null_check3126, label %bail_out159, label %check_active3125, !dbg !75

reference_obj3110:                                ; preds = %correct_class3099
  %object_memory_mark3114 = load i32* inttoptr (i64 22565880 to i32*), !dbg !75
  %word_pos3115 = getelementptr %"struct.rubinius::Object"* %self3090, i32 0, i32 0, i32 0, i32 0, !dbg !75
  %flags3116 = load i64* %word_pos3115, !dbg !75
  %mark_mask3117 = and i64 %flags3116, 3670016, !dbg !75
  %scan_mark3118 = add i32 %object_memory_mark3114, 1, !dbg !75
  %273 = zext i32 %scan_mark3118 to i64, !dbg !75
  %lshr3119 = shl i64 %273, 19, !dbg !75
  %is_scanned3120 = icmp eq i64 %mark_mask3117, %lshr3119, !dbg !75
  br i1 %is_scanned3120, label %run_barrier3112, label %object_not_scanned3111, !dbg !75

object_not_scanned3111:                           ; preds = %reference_obj3110
  %zone_mask3121 = and i64 %flags3116, 768, !dbg !75
  %is_young3122 = icmp eq i64 %zone_mask3121, 512, !dbg !75
  br i1 %is_young3122, label %done3113, label %run_barrier3112, !dbg !75

run_barrier3112:                                  ; preds = %object_not_scanned3111, %reference_obj3110
  %274 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3090, %"struct.rubinius::Object"* %stack_load3092), !dbg !75
  br label %done3113, !dbg !75

done3113:                                         ; preds = %run_barrier3112, %object_not_scanned3111, %correct_class3099
  br label %continue3094, !dbg !75

continue3124:                                     ; preds = %check_active3125
  br label %continue3094, !dbg !75

check_active3125:                                 ; preds = %visit_push_ivar_fallback3093
  br label %continue3124, !dbg !75

continue3128:                                     ; preds = %visit_push_ivar_fallback3127, %correct_class3135
  %local_pos3150 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 2, !dbg !76
  %local3151 = load %"struct.rubinius::Object"** %local_pos3150, !dbg !76, !rbx-classid !46
  %stack_pos3152 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %local3151, %"struct.rubinius::Object"** %stack_pos3152, !dbg !76
  %stack_pos3155 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3155, !dbg !76
  %275 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !76
  %self3156 = load %"struct.rubinius::Object"** %275, !dbg !76
  %cast3157 = ptrtoint %"struct.rubinius::Object"* %self3156 to i64, !dbg !76
  %masked3158 = and i64 %cast3157, 3, !dbg !76
  %is_reference3159 = icmp eq i64 %masked3158, 0, !dbg !76
  br i1 %is_reference3159, label %check_class_id3160, label %visit_push_ivar_fallback3153, !dbg !76

check_class_id3134:                               ; preds = %continue3094
  %class_pos3136 = getelementptr %"struct.rubinius::Object"* %self3130, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3137 = load %"struct.rubinius::Class"** %class_pos3136, !dbg !76
  %class_id_pos3138 = getelementptr %"struct.rubinius::Class"* %ref_class3137, i32 0, i32 4, !dbg !76
  %class_id3139 = load i32* %class_id_pos3138, !dbg !76
  %check_class_id3140 = icmp eq i32 %class_id3139, 1285, !dbg !76
  br i1 %check_class_id3140, label %correct_class3135, label %visit_push_ivar_fallback3127, !dbg !76

correct_class3135:                                ; preds = %check_class_id3134
  %obj_array3141 = bitcast %"struct.rubinius::Object"* %self3130 to %"struct.rubinius::Object"**, !dbg !76
  %field_pos3142 = getelementptr %"struct.rubinius::Object"** %obj_array3141, i32 4, !dbg !76
  %field3143 = load %"struct.rubinius::Object"** %field_pos3142, !dbg !76
  %prune_undef3144 = icmp eq %"struct.rubinius::Object"* %field3143, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !76
  %"select ivar3145" = select i1 %prune_undef3144, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3143, !dbg !76
  %stack_pos3146 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %"select ivar3145", %"struct.rubinius::Object"** %stack_pos3146, !dbg !76
  br label %continue3128, !dbg !76

visit_push_ivar_fallback3127:                     ; preds = %check_class_id3134, %continue3094
  %276 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !76
  %self3147 = load %"struct.rubinius::Object"** %276, !dbg !76
  %ivar3148 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3147, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !76
  %stack_pos3149 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %ivar3148, %"struct.rubinius::Object"** %stack_pos3149, !dbg !76
  br label %continue3128, !dbg !76

continue3154:                                     ; preds = %visit_push_ivar_fallback3153, %correct_class3161
  %stack_pos3179 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  %stack_load3180 = load %"struct.rubinius::Object"** %stack_pos3179, !dbg !76, !rbx-classid !46
  %cast3181 = ptrtoint %"struct.rubinius::Object"* %stack_load3180 to i64, !dbg !76
  %masked3182 = and i64 %cast3181, 3, !dbg !76
  %is_reference3183 = icmp eq i64 %masked3182, 0, !dbg !76
  br i1 %is_reference3183, label %check_class_id3184, label %class_fallback3176, !dbg !76

check_class_id3160:                               ; preds = %continue3128
  %class_pos3162 = getelementptr %"struct.rubinius::Object"* %self3156, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3163 = load %"struct.rubinius::Class"** %class_pos3162, !dbg !76
  %class_id_pos3164 = getelementptr %"struct.rubinius::Class"* %ref_class3163, i32 0, i32 4, !dbg !76
  %class_id3165 = load i32* %class_id_pos3164, !dbg !76
  %check_class_id3166 = icmp eq i32 %class_id3165, 1285, !dbg !76
  br i1 %check_class_id3166, label %correct_class3161, label %visit_push_ivar_fallback3153, !dbg !76

correct_class3161:                                ; preds = %check_class_id3160
  %obj_array3167 = bitcast %"struct.rubinius::Object"* %self3156 to %"struct.rubinius::Object"**, !dbg !76
  %field_pos3168 = getelementptr %"struct.rubinius::Object"** %obj_array3167, i32 7, !dbg !76
  %field3169 = load %"struct.rubinius::Object"** %field_pos3168, !dbg !76
  %prune_undef3170 = icmp eq %"struct.rubinius::Object"* %field3169, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !76
  %"select ivar3171" = select i1 %prune_undef3170, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3169, !dbg !76
  %stack_pos3172 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !76
  store %"struct.rubinius::Object"* %"select ivar3171", %"struct.rubinius::Object"** %stack_pos3172, !dbg !76
  br label %continue3154, !dbg !76

visit_push_ivar_fallback3153:                     ; preds = %check_class_id3160, %continue3128
  %277 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !76
  %self3173 = load %"struct.rubinius::Object"** %277, !dbg !76
  %ivar3174 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3173, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !76
  %stack_pos3175 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !76
  store %"struct.rubinius::Object"* %ivar3174, %"struct.rubinius::Object"** %stack_pos3175, !dbg !76
  br label %continue3154, !dbg !76

continue3178:                                     ; preds = %check_active3233, %continue3211
  %send_result3235 = phi %"struct.rubinius::Object"* [ %281, %continue3211 ], [ %call_site_execute3232, %check_active3233 ], !dbg !76
  %stack_pos3236 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  store %"struct.rubinius::Object"* %send_result3235, %"struct.rubinius::Object"** %stack_pos3236, !dbg !76
  %stack_pos3240 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  %stack_load3241 = load %"struct.rubinius::Object"** %stack_pos3240, !dbg !76
  %cast3242 = ptrtoint %"struct.rubinius::Object"* %stack_load3241 to i64, !dbg !76
  %masked3243 = and i64 %cast3242, 3, !dbg !76
  %is_reference3244 = icmp eq i64 %masked3243, 0, !dbg !76
  br i1 %is_reference3244, label %check_class_id3245, label %class_fallback3237, !dbg !76

check_class_id3184:                               ; preds = %continue3154
  %class_pos3187 = getelementptr %"struct.rubinius::Object"* %stack_load3180, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3188 = load %"struct.rubinius::Class"** %class_pos3187, !dbg !76
  %class_id_pos3189 = getelementptr %"struct.rubinius::Class"* %ref_class3188, i32 0, i32 4, !dbg !76
  %class_id3190 = load i32* %class_id_pos3189, !dbg !76
  %check_class_id3191 = icmp eq i32 %class_id3190, 77, !dbg !76
  br i1 %check_class_id3191, label %correct_class3185, label %class_fallback3176, !dbg !76

correct_class3185:                                ; preds = %check_class_id3184
  %serial_id_pos3192 = getelementptr %"struct.rubinius::Class"* %ref_class3188, i32 0, i32 5, !dbg !76
  %serial_id3193 = load i32* %serial_id_pos3192, !dbg !76
  %check_serial_id3194 = icmp eq i32 %serial_id3193, 224, !dbg !76
  br i1 %check_serial_id3194, label %correct_serial3186, label %serial_fallback3177, !dbg !76

correct_serial3186:                               ; preds = %correct_class3185
  %stack_pos3195 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !76
  %stack_load3196 = load %"struct.rubinius::Object"** %stack_pos3195, !dbg !76
  %cast3198 = ptrtoint %"struct.rubinius::Object"* %stack_load3196 to i64, !dbg !76
  %masked3199 = and i64 %cast3198, 3, !dbg !76
  %is_reference3200 = icmp eq i64 %masked3199, 0, !dbg !76
  br i1 %is_reference3200, label %check_class_id3201, label %continue3197, !dbg !76

serial_fallback3177:                              ; preds = %correct_class3185
  store i32 297, i32* %ip_pos164, !dbg !76
  %278 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 297, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !76
  br label %return_pad126, !dbg !76

check_class_id3201:                               ; preds = %correct_serial3186
  %class_pos3203 = getelementptr %"struct.rubinius::Object"* %stack_load3196, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3204 = load %"struct.rubinius::Class"** %class_pos3203, !dbg !76
  %class_id_pos3205 = getelementptr %"struct.rubinius::Class"* %ref_class3204, i32 0, i32 4, !dbg !76
  %class_id3206 = load i32* %class_id_pos3205, !dbg !76
  %check_class_id3207 = icmp eq i32 %class_id3206, 77, !dbg !76
  br i1 %check_class_id3207, label %correct_class3202, label %continue3197, !dbg !76

correct_class3202:                                ; preds = %check_class_id3201
  %arg_float3208 = bitcast %"struct.rubinius::Object"* %stack_load3196 to %"struct.rubinius::Float"*, !dbg !76
  %arg.value_pos3209 = getelementptr %"struct.rubinius::Float"* %arg_float3208, i32 0, i32 1, !dbg !76
  %farg3210 = load double* %arg.value_pos3209, !dbg !76
  br label %continue3211, !dbg !76

continue3197:                                     ; preds = %check_class_id3201, %correct_serial3186
  %cast3212 = ptrtoint %"struct.rubinius::Object"* %stack_load3196 to i64, !dbg !76
  %masked3213 = and i64 %cast3212, 1, !dbg !76
  %is_fixnum3214 = icmp eq i64 %masked3213, 1, !dbg !76
  br i1 %is_fixnum3214, label %guarded_body3215, label %class_fallback3176, !dbg !76

guarded_body3215:                                 ; preds = %continue3197
  %as_int3216 = ptrtoint %"struct.rubinius::Object"* %stack_load3196 to i64, !dbg !76
  %ashr3217 = ashr i64 %as_int3216, 1, !dbg !76
  %279 = sitofp i64 %ashr3217 to double, !dbg !76
  br label %continue3211, !dbg !76

continue3211:                                     ; preds = %guarded_body3215, %correct_class3202
  %rhs3218 = phi double [ %farg3210, %correct_class3202 ], [ %279, %guarded_body3215 ], !dbg !76
  %stack_pos3219 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  %stack_load3220 = load %"struct.rubinius::Object"** %stack_pos3219, !dbg !76, !rbx-classid !46
  %self_float3221 = bitcast %"struct.rubinius::Object"* %stack_load3220 to %"struct.rubinius::Float"*, !dbg !76
  %self.value_pos3222 = getelementptr %"struct.rubinius::Float"* %self_float3221, i32 0, i32 1, !dbg !76
  %fself3223 = load double* %self.value_pos3222, !dbg !76
  %float.mul3224 = fmul double %fself3223, %rhs3218, !dbg !76
  %result3225 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !76, !rbx-classid !37
  %280 = getelementptr %"struct.rubinius::Float"* %result3225, i32 0, i32 1, !dbg !76
  store double %float.mul3224, double* %280, !dbg !76
  %281 = bitcast %"struct.rubinius::Float"* %result3225 to %"struct.rubinius::Object"*, !dbg !76
  br label %continue3178, !dbg !76

class_fallback3176:                               ; preds = %continue3197, %check_class_id3184, %continue3154
  %stack_pos3226 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  %stack_load3227 = load %"struct.rubinius::Object"** %stack_pos3226, !dbg !76, !rbx-classid !46
  store %"struct.rubinius::Object"* %stack_load3227, %"struct.rubinius::Object"** %out_args_recv166, !dbg !76
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !76
  store i32 1, i32* %out_args_total168, !dbg !76
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !76
  %stack_pos3228 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !76
  store %"struct.rubinius::Object"** %stack_pos3228, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !76
  %cache_const3229 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550784 to %"struct.rubinius::CallSite"**), !dbg !76
  %execute_pos3230 = getelementptr %"struct.rubinius::CallSite"* %cache_const3229, i32 0, i32 2, !dbg !76
  %execute3231 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3230, !dbg !76
  store i32 297, i32* %ip_pos164, !dbg !76
  %call_site_execute3232 = call %"struct.rubinius::Object"* %execute3231(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3229, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !76
  %null_check3234 = icmp eq %"struct.rubinius::Object"* %call_site_execute3232, null, !dbg !76
  br i1 %null_check3234, label %bail_out159, label %check_active3233, !dbg !76

check_active3233:                                 ; preds = %class_fallback3176
  br label %continue3178, !dbg !76

continue3239:                                     ; preds = %check_active3294, %continue3272
  %send_result3296 = phi %"struct.rubinius::Object"* [ %286, %continue3272 ], [ %call_site_execute3293, %check_active3294 ], !dbg !76
  %stack_pos3297 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  store %"struct.rubinius::Object"* %send_result3296, %"struct.rubinius::Object"** %stack_pos3297, !dbg !76
  %282 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !76
  %self3298 = load %"struct.rubinius::Object"** %282, !dbg !76
  %stack_pos3299 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  %stack_load3300 = load %"struct.rubinius::Object"** %stack_pos3299, !dbg !76
  %cast3303 = ptrtoint %"struct.rubinius::Object"* %self3298 to i64, !dbg !76
  %masked3304 = and i64 %cast3303, 3, !dbg !76
  %is_reference3305 = icmp eq i64 %masked3304, 0, !dbg !76
  br i1 %is_reference3305, label %check_class_id3306, label %visit_push_ivar_fallback3301, !dbg !76

check_class_id3245:                               ; preds = %continue3178
  %class_pos3248 = getelementptr %"struct.rubinius::Object"* %stack_load3241, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3249 = load %"struct.rubinius::Class"** %class_pos3248, !dbg !76
  %class_id_pos3250 = getelementptr %"struct.rubinius::Class"* %ref_class3249, i32 0, i32 4, !dbg !76
  %class_id3251 = load i32* %class_id_pos3250, !dbg !76
  %check_class_id3252 = icmp eq i32 %class_id3251, 77, !dbg !76
  br i1 %check_class_id3252, label %correct_class3246, label %class_fallback3237, !dbg !76

correct_class3246:                                ; preds = %check_class_id3245
  %serial_id_pos3253 = getelementptr %"struct.rubinius::Class"* %ref_class3249, i32 0, i32 5, !dbg !76
  %serial_id3254 = load i32* %serial_id_pos3253, !dbg !76
  %check_serial_id3255 = icmp eq i32 %serial_id3254, 224, !dbg !76
  br i1 %check_serial_id3255, label %correct_serial3247, label %serial_fallback3238, !dbg !76

correct_serial3247:                               ; preds = %correct_class3246
  %stack_pos3256 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  %stack_load3257 = load %"struct.rubinius::Object"** %stack_pos3256, !dbg !76
  %cast3259 = ptrtoint %"struct.rubinius::Object"* %stack_load3257 to i64, !dbg !76
  %masked3260 = and i64 %cast3259, 3, !dbg !76
  %is_reference3261 = icmp eq i64 %masked3260, 0, !dbg !76
  br i1 %is_reference3261, label %check_class_id3262, label %continue3258, !dbg !76

serial_fallback3238:                              ; preds = %correct_class3246
  store i32 300, i32* %ip_pos164, !dbg !76
  %283 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 300, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !76
  br label %return_pad126, !dbg !76

check_class_id3262:                               ; preds = %correct_serial3247
  %class_pos3264 = getelementptr %"struct.rubinius::Object"* %stack_load3257, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3265 = load %"struct.rubinius::Class"** %class_pos3264, !dbg !76
  %class_id_pos3266 = getelementptr %"struct.rubinius::Class"* %ref_class3265, i32 0, i32 4, !dbg !76
  %class_id3267 = load i32* %class_id_pos3266, !dbg !76
  %check_class_id3268 = icmp eq i32 %class_id3267, 77, !dbg !76
  br i1 %check_class_id3268, label %correct_class3263, label %continue3258, !dbg !76

correct_class3263:                                ; preds = %check_class_id3262
  %arg_float3269 = bitcast %"struct.rubinius::Object"* %stack_load3257 to %"struct.rubinius::Float"*, !dbg !76
  %arg.value_pos3270 = getelementptr %"struct.rubinius::Float"* %arg_float3269, i32 0, i32 1, !dbg !76
  %farg3271 = load double* %arg.value_pos3270, !dbg !76
  br label %continue3272, !dbg !76

continue3258:                                     ; preds = %check_class_id3262, %correct_serial3247
  %cast3273 = ptrtoint %"struct.rubinius::Object"* %stack_load3257 to i64, !dbg !76
  %masked3274 = and i64 %cast3273, 1, !dbg !76
  %is_fixnum3275 = icmp eq i64 %masked3274, 1, !dbg !76
  br i1 %is_fixnum3275, label %guarded_body3276, label %class_fallback3237, !dbg !76

guarded_body3276:                                 ; preds = %continue3258
  %as_int3277 = ptrtoint %"struct.rubinius::Object"* %stack_load3257 to i64, !dbg !76
  %ashr3278 = ashr i64 %as_int3277, 1, !dbg !76
  %284 = sitofp i64 %ashr3278 to double, !dbg !76
  br label %continue3272, !dbg !76

continue3272:                                     ; preds = %guarded_body3276, %correct_class3263
  %rhs3279 = phi double [ %farg3271, %correct_class3263 ], [ %284, %guarded_body3276 ], !dbg !76
  %stack_pos3280 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  %stack_load3281 = load %"struct.rubinius::Object"** %stack_pos3280, !dbg !76
  %self_float3282 = bitcast %"struct.rubinius::Object"* %stack_load3281 to %"struct.rubinius::Float"*, !dbg !76
  %self.value_pos3283 = getelementptr %"struct.rubinius::Float"* %self_float3282, i32 0, i32 1, !dbg !76
  %fself3284 = load double* %self.value_pos3283, !dbg !76
  %float.add3285 = fadd double %fself3284, %rhs3279, !dbg !76
  %result3286 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !76, !rbx-classid !37
  %285 = getelementptr %"struct.rubinius::Float"* %result3286, i32 0, i32 1, !dbg !76
  store double %float.add3285, double* %285, !dbg !76
  %286 = bitcast %"struct.rubinius::Float"* %result3286 to %"struct.rubinius::Object"*, !dbg !76
  br label %continue3239, !dbg !76

class_fallback3237:                               ; preds = %continue3258, %check_class_id3245, %continue3178
  %stack_pos3287 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !76
  %stack_load3288 = load %"struct.rubinius::Object"** %stack_pos3287, !dbg !76
  store %"struct.rubinius::Object"* %stack_load3288, %"struct.rubinius::Object"** %out_args_recv166, !dbg !76
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !76
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !76
  store i32 1, i32* %out_args_total168, !dbg !76
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !76
  %stack_pos3289 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !76
  store %"struct.rubinius::Object"** %stack_pos3289, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !76
  %cache_const3290 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550808 to %"struct.rubinius::CallSite"**), !dbg !76
  %execute_pos3291 = getelementptr %"struct.rubinius::CallSite"* %cache_const3290, i32 0, i32 2, !dbg !76
  %execute3292 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3291, !dbg !76
  store i32 300, i32* %ip_pos164, !dbg !76
  %call_site_execute3293 = call %"struct.rubinius::Object"* %execute3292(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3290, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !76
  %null_check3295 = icmp eq %"struct.rubinius::Object"* %call_site_execute3293, null, !dbg !76
  br i1 %null_check3295, label %bail_out159, label %check_active3294, !dbg !76

check_active3294:                                 ; preds = %class_fallback3237
  br label %continue3239, !dbg !76

continue3302:                                     ; preds = %continue3332, %done3321
  %stack_pos3337 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3337, !dbg !77
  %287 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !77
  %self3338 = load %"struct.rubinius::Object"** %287, !dbg !77
  %cast3339 = ptrtoint %"struct.rubinius::Object"* %self3338 to i64, !dbg !77
  %masked3340 = and i64 %cast3339, 3, !dbg !77
  %is_reference3341 = icmp eq i64 %masked3340, 0, !dbg !77
  br i1 %is_reference3341, label %check_class_id3342, label %visit_push_ivar_fallback3335, !dbg !77

check_class_id3306:                               ; preds = %continue3239
  %class_pos3308 = getelementptr %"struct.rubinius::Object"* %self3298, i32 0, i32 0, i32 1, !dbg !76
  %ref_class3309 = load %"struct.rubinius::Class"** %class_pos3308, !dbg !76
  %class_id_pos3310 = getelementptr %"struct.rubinius::Class"* %ref_class3309, i32 0, i32 4, !dbg !76
  %class_id3311 = load i32* %class_id_pos3310, !dbg !76
  %check_class_id3312 = icmp eq i32 %class_id3311, 1285, !dbg !76
  br i1 %check_class_id3312, label %correct_class3307, label %visit_push_ivar_fallback3301, !dbg !76

correct_class3307:                                ; preds = %check_class_id3306
  %obj_array3313 = bitcast %"struct.rubinius::Object"* %self3298 to %"struct.rubinius::Object"**, !dbg !76
  %field_pos3314 = getelementptr %"struct.rubinius::Object"** %obj_array3313, i32 4, !dbg !76
  store %"struct.rubinius::Object"* %stack_load3300, %"struct.rubinius::Object"** %field_pos3314, !dbg !76
  %cast3315 = ptrtoint %"struct.rubinius::Object"* %stack_load3300 to i64, !dbg !76
  %masked3316 = and i64 %cast3315, 3, !dbg !76
  %is_reference3317 = icmp eq i64 %masked3316, 0, !dbg !76
  br i1 %is_reference3317, label %reference_obj3318, label %done3321, !dbg !76

visit_push_ivar_fallback3301:                     ; preds = %check_class_id3306, %continue3239
  %ivar3331 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3298, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3300), !dbg !76
  %null_check3334 = icmp eq %"struct.rubinius::Object"* %ivar3331, null, !dbg !76
  br i1 %null_check3334, label %bail_out159, label %check_active3333, !dbg !76

reference_obj3318:                                ; preds = %correct_class3307
  %object_memory_mark3322 = load i32* inttoptr (i64 22565880 to i32*), !dbg !76
  %word_pos3323 = getelementptr %"struct.rubinius::Object"* %self3298, i32 0, i32 0, i32 0, i32 0, !dbg !76
  %flags3324 = load i64* %word_pos3323, !dbg !76
  %mark_mask3325 = and i64 %flags3324, 3670016, !dbg !76
  %scan_mark3326 = add i32 %object_memory_mark3322, 1, !dbg !76
  %288 = zext i32 %scan_mark3326 to i64, !dbg !76
  %lshr3327 = shl i64 %288, 19, !dbg !76
  %is_scanned3328 = icmp eq i64 %mark_mask3325, %lshr3327, !dbg !76
  br i1 %is_scanned3328, label %run_barrier3320, label %object_not_scanned3319, !dbg !76

object_not_scanned3319:                           ; preds = %reference_obj3318
  %zone_mask3329 = and i64 %flags3324, 768, !dbg !76
  %is_young3330 = icmp eq i64 %zone_mask3329, 512, !dbg !76
  br i1 %is_young3330, label %done3321, label %run_barrier3320, !dbg !76

run_barrier3320:                                  ; preds = %object_not_scanned3319, %reference_obj3318
  %289 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3298, %"struct.rubinius::Object"* %stack_load3300), !dbg !76
  br label %done3321, !dbg !76

done3321:                                         ; preds = %run_barrier3320, %object_not_scanned3319, %correct_class3307
  br label %continue3302, !dbg !76

continue3332:                                     ; preds = %check_active3333
  br label %continue3302, !dbg !76

check_active3333:                                 ; preds = %visit_push_ivar_fallback3301
  br label %continue3332, !dbg !76

continue3336:                                     ; preds = %visit_push_ivar_fallback3335, %correct_class3343
  %local_pos3358 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 6, i32 2, !dbg !77
  %local3359 = load %"struct.rubinius::Object"** %local_pos3358, !dbg !77, !rbx-classid !46
  %stack_pos3360 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  store %"struct.rubinius::Object"* %local3359, %"struct.rubinius::Object"** %stack_pos3360, !dbg !77
  %stack_pos3363 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3363, !dbg !77
  %290 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !77
  %self3364 = load %"struct.rubinius::Object"** %290, !dbg !77
  %cast3365 = ptrtoint %"struct.rubinius::Object"* %self3364 to i64, !dbg !77
  %masked3366 = and i64 %cast3365, 3, !dbg !77
  %is_reference3367 = icmp eq i64 %masked3366, 0, !dbg !77
  br i1 %is_reference3367, label %check_class_id3368, label %visit_push_ivar_fallback3361, !dbg !77

check_class_id3342:                               ; preds = %continue3302
  %class_pos3344 = getelementptr %"struct.rubinius::Object"* %self3338, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3345 = load %"struct.rubinius::Class"** %class_pos3344, !dbg !77
  %class_id_pos3346 = getelementptr %"struct.rubinius::Class"* %ref_class3345, i32 0, i32 4, !dbg !77
  %class_id3347 = load i32* %class_id_pos3346, !dbg !77
  %check_class_id3348 = icmp eq i32 %class_id3347, 1285, !dbg !77
  br i1 %check_class_id3348, label %correct_class3343, label %visit_push_ivar_fallback3335, !dbg !77

correct_class3343:                                ; preds = %check_class_id3342
  %obj_array3349 = bitcast %"struct.rubinius::Object"* %self3338 to %"struct.rubinius::Object"**, !dbg !77
  %field_pos3350 = getelementptr %"struct.rubinius::Object"** %obj_array3349, i32 5, !dbg !77
  %field3351 = load %"struct.rubinius::Object"** %field_pos3350, !dbg !77
  %prune_undef3352 = icmp eq %"struct.rubinius::Object"* %field3351, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !77
  %"select ivar3353" = select i1 %prune_undef3352, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3351, !dbg !77
  %stack_pos3354 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  store %"struct.rubinius::Object"* %"select ivar3353", %"struct.rubinius::Object"** %stack_pos3354, !dbg !77
  br label %continue3336, !dbg !77

visit_push_ivar_fallback3335:                     ; preds = %check_class_id3342, %continue3302
  %291 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !77
  %self3355 = load %"struct.rubinius::Object"** %291, !dbg !77
  %ivar3356 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3355, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !77
  %stack_pos3357 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  store %"struct.rubinius::Object"* %ivar3356, %"struct.rubinius::Object"** %stack_pos3357, !dbg !77
  br label %continue3336, !dbg !77

continue3362:                                     ; preds = %visit_push_ivar_fallback3361, %correct_class3369
  %stack_pos3387 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  %stack_load3388 = load %"struct.rubinius::Object"** %stack_pos3387, !dbg !77, !rbx-classid !46
  %cast3389 = ptrtoint %"struct.rubinius::Object"* %stack_load3388 to i64, !dbg !77
  %masked3390 = and i64 %cast3389, 3, !dbg !77
  %is_reference3391 = icmp eq i64 %masked3390, 0, !dbg !77
  br i1 %is_reference3391, label %check_class_id3392, label %class_fallback3384, !dbg !77

check_class_id3368:                               ; preds = %continue3336
  %class_pos3370 = getelementptr %"struct.rubinius::Object"* %self3364, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3371 = load %"struct.rubinius::Class"** %class_pos3370, !dbg !77
  %class_id_pos3372 = getelementptr %"struct.rubinius::Class"* %ref_class3371, i32 0, i32 4, !dbg !77
  %class_id3373 = load i32* %class_id_pos3372, !dbg !77
  %check_class_id3374 = icmp eq i32 %class_id3373, 1285, !dbg !77
  br i1 %check_class_id3374, label %correct_class3369, label %visit_push_ivar_fallback3361, !dbg !77

correct_class3369:                                ; preds = %check_class_id3368
  %obj_array3375 = bitcast %"struct.rubinius::Object"* %self3364 to %"struct.rubinius::Object"**, !dbg !77
  %field_pos3376 = getelementptr %"struct.rubinius::Object"** %obj_array3375, i32 8, !dbg !77
  %field3377 = load %"struct.rubinius::Object"** %field_pos3376, !dbg !77
  %prune_undef3378 = icmp eq %"struct.rubinius::Object"* %field3377, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !77
  %"select ivar3379" = select i1 %prune_undef3378, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3377, !dbg !77
  %stack_pos3380 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !77
  store %"struct.rubinius::Object"* %"select ivar3379", %"struct.rubinius::Object"** %stack_pos3380, !dbg !77
  br label %continue3362, !dbg !77

visit_push_ivar_fallback3361:                     ; preds = %check_class_id3368, %continue3336
  %292 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !77
  %self3381 = load %"struct.rubinius::Object"** %292, !dbg !77
  %ivar3382 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3381, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !77
  %stack_pos3383 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !77
  store %"struct.rubinius::Object"* %ivar3382, %"struct.rubinius::Object"** %stack_pos3383, !dbg !77
  br label %continue3362, !dbg !77

continue3386:                                     ; preds = %check_active3441, %continue3419
  %send_result3443 = phi %"struct.rubinius::Object"* [ %296, %continue3419 ], [ %call_site_execute3440, %check_active3441 ], !dbg !77
  %stack_pos3444 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  store %"struct.rubinius::Object"* %send_result3443, %"struct.rubinius::Object"** %stack_pos3444, !dbg !77
  %stack_pos3448 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  %stack_load3449 = load %"struct.rubinius::Object"** %stack_pos3448, !dbg !77
  %cast3450 = ptrtoint %"struct.rubinius::Object"* %stack_load3449 to i64, !dbg !77
  %masked3451 = and i64 %cast3450, 3, !dbg !77
  %is_reference3452 = icmp eq i64 %masked3451, 0, !dbg !77
  br i1 %is_reference3452, label %check_class_id3453, label %class_fallback3445, !dbg !77

check_class_id3392:                               ; preds = %continue3362
  %class_pos3395 = getelementptr %"struct.rubinius::Object"* %stack_load3388, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3396 = load %"struct.rubinius::Class"** %class_pos3395, !dbg !77
  %class_id_pos3397 = getelementptr %"struct.rubinius::Class"* %ref_class3396, i32 0, i32 4, !dbg !77
  %class_id3398 = load i32* %class_id_pos3397, !dbg !77
  %check_class_id3399 = icmp eq i32 %class_id3398, 77, !dbg !77
  br i1 %check_class_id3399, label %correct_class3393, label %class_fallback3384, !dbg !77

correct_class3393:                                ; preds = %check_class_id3392
  %serial_id_pos3400 = getelementptr %"struct.rubinius::Class"* %ref_class3396, i32 0, i32 5, !dbg !77
  %serial_id3401 = load i32* %serial_id_pos3400, !dbg !77
  %check_serial_id3402 = icmp eq i32 %serial_id3401, 224, !dbg !77
  br i1 %check_serial_id3402, label %correct_serial3394, label %serial_fallback3385, !dbg !77

correct_serial3394:                               ; preds = %correct_class3393
  %stack_pos3403 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !77
  %stack_load3404 = load %"struct.rubinius::Object"** %stack_pos3403, !dbg !77
  %cast3406 = ptrtoint %"struct.rubinius::Object"* %stack_load3404 to i64, !dbg !77
  %masked3407 = and i64 %cast3406, 3, !dbg !77
  %is_reference3408 = icmp eq i64 %masked3407, 0, !dbg !77
  br i1 %is_reference3408, label %check_class_id3409, label %continue3405, !dbg !77

serial_fallback3385:                              ; preds = %correct_class3393
  store i32 312, i32* %ip_pos164, !dbg !77
  %293 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 312, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !77
  br label %return_pad126, !dbg !77

check_class_id3409:                               ; preds = %correct_serial3394
  %class_pos3411 = getelementptr %"struct.rubinius::Object"* %stack_load3404, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3412 = load %"struct.rubinius::Class"** %class_pos3411, !dbg !77
  %class_id_pos3413 = getelementptr %"struct.rubinius::Class"* %ref_class3412, i32 0, i32 4, !dbg !77
  %class_id3414 = load i32* %class_id_pos3413, !dbg !77
  %check_class_id3415 = icmp eq i32 %class_id3414, 77, !dbg !77
  br i1 %check_class_id3415, label %correct_class3410, label %continue3405, !dbg !77

correct_class3410:                                ; preds = %check_class_id3409
  %arg_float3416 = bitcast %"struct.rubinius::Object"* %stack_load3404 to %"struct.rubinius::Float"*, !dbg !77
  %arg.value_pos3417 = getelementptr %"struct.rubinius::Float"* %arg_float3416, i32 0, i32 1, !dbg !77
  %farg3418 = load double* %arg.value_pos3417, !dbg !77
  br label %continue3419, !dbg !77

continue3405:                                     ; preds = %check_class_id3409, %correct_serial3394
  %cast3420 = ptrtoint %"struct.rubinius::Object"* %stack_load3404 to i64, !dbg !77
  %masked3421 = and i64 %cast3420, 1, !dbg !77
  %is_fixnum3422 = icmp eq i64 %masked3421, 1, !dbg !77
  br i1 %is_fixnum3422, label %guarded_body3423, label %class_fallback3384, !dbg !77

guarded_body3423:                                 ; preds = %continue3405
  %as_int3424 = ptrtoint %"struct.rubinius::Object"* %stack_load3404 to i64, !dbg !77
  %ashr3425 = ashr i64 %as_int3424, 1, !dbg !77
  %294 = sitofp i64 %ashr3425 to double, !dbg !77
  br label %continue3419, !dbg !77

continue3419:                                     ; preds = %guarded_body3423, %correct_class3410
  %rhs3426 = phi double [ %farg3418, %correct_class3410 ], [ %294, %guarded_body3423 ], !dbg !77
  %stack_pos3427 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  %stack_load3428 = load %"struct.rubinius::Object"** %stack_pos3427, !dbg !77, !rbx-classid !46
  %self_float3429 = bitcast %"struct.rubinius::Object"* %stack_load3428 to %"struct.rubinius::Float"*, !dbg !77
  %self.value_pos3430 = getelementptr %"struct.rubinius::Float"* %self_float3429, i32 0, i32 1, !dbg !77
  %fself3431 = load double* %self.value_pos3430, !dbg !77
  %float.mul3432 = fmul double %fself3431, %rhs3426, !dbg !77
  %result3433 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !77, !rbx-classid !37
  %295 = getelementptr %"struct.rubinius::Float"* %result3433, i32 0, i32 1, !dbg !77
  store double %float.mul3432, double* %295, !dbg !77
  %296 = bitcast %"struct.rubinius::Float"* %result3433 to %"struct.rubinius::Object"*, !dbg !77
  br label %continue3386, !dbg !77

class_fallback3384:                               ; preds = %continue3405, %check_class_id3392, %continue3362
  %stack_pos3434 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  %stack_load3435 = load %"struct.rubinius::Object"** %stack_pos3434, !dbg !77, !rbx-classid !46
  store %"struct.rubinius::Object"* %stack_load3435, %"struct.rubinius::Object"** %out_args_recv166, !dbg !77
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !77
  store i32 1, i32* %out_args_total168, !dbg !77
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !77
  %stack_pos3436 = getelementptr %"struct.rubinius::Object"** %stack140, i32 2, !dbg !77
  store %"struct.rubinius::Object"** %stack_pos3436, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !77
  %cache_const3437 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550904 to %"struct.rubinius::CallSite"**), !dbg !77
  %execute_pos3438 = getelementptr %"struct.rubinius::CallSite"* %cache_const3437, i32 0, i32 2, !dbg !77
  %execute3439 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3438, !dbg !77
  store i32 312, i32* %ip_pos164, !dbg !77
  %call_site_execute3440 = call %"struct.rubinius::Object"* %execute3439(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3437, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !77
  %null_check3442 = icmp eq %"struct.rubinius::Object"* %call_site_execute3440, null, !dbg !77
  br i1 %null_check3442, label %bail_out159, label %check_active3441, !dbg !77

check_active3441:                                 ; preds = %class_fallback3384
  br label %continue3386, !dbg !77

continue3447:                                     ; preds = %check_active3502, %continue3480
  %send_result3504 = phi %"struct.rubinius::Object"* [ %301, %continue3480 ], [ %call_site_execute3501, %check_active3502 ], !dbg !77
  %stack_pos3505 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  store %"struct.rubinius::Object"* %send_result3504, %"struct.rubinius::Object"** %stack_pos3505, !dbg !77
  %297 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i32 0, i32 2, !dbg !77
  %self3506 = load %"struct.rubinius::Object"** %297, !dbg !77
  %stack_pos3507 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  %stack_load3508 = load %"struct.rubinius::Object"** %stack_pos3507, !dbg !77
  %cast3511 = ptrtoint %"struct.rubinius::Object"* %self3506 to i64, !dbg !77
  %masked3512 = and i64 %cast3511, 3, !dbg !77
  %is_reference3513 = icmp eq i64 %masked3512, 0, !dbg !77
  br i1 %is_reference3513, label %check_class_id3514, label %visit_push_ivar_fallback3509, !dbg !77

check_class_id3453:                               ; preds = %continue3386
  %class_pos3456 = getelementptr %"struct.rubinius::Object"* %stack_load3449, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3457 = load %"struct.rubinius::Class"** %class_pos3456, !dbg !77
  %class_id_pos3458 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i32 0, i32 4, !dbg !77
  %class_id3459 = load i32* %class_id_pos3458, !dbg !77
  %check_class_id3460 = icmp eq i32 %class_id3459, 77, !dbg !77
  br i1 %check_class_id3460, label %correct_class3454, label %class_fallback3445, !dbg !77

correct_class3454:                                ; preds = %check_class_id3453
  %serial_id_pos3461 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i32 0, i32 5, !dbg !77
  %serial_id3462 = load i32* %serial_id_pos3461, !dbg !77
  %check_serial_id3463 = icmp eq i32 %serial_id3462, 224, !dbg !77
  br i1 %check_serial_id3463, label %correct_serial3455, label %serial_fallback3446, !dbg !77

correct_serial3455:                               ; preds = %correct_class3454
  %stack_pos3464 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  %stack_load3465 = load %"struct.rubinius::Object"** %stack_pos3464, !dbg !77
  %cast3467 = ptrtoint %"struct.rubinius::Object"* %stack_load3465 to i64, !dbg !77
  %masked3468 = and i64 %cast3467, 3, !dbg !77
  %is_reference3469 = icmp eq i64 %masked3468, 0, !dbg !77
  br i1 %is_reference3469, label %check_class_id3470, label %continue3466, !dbg !77

serial_fallback3446:                              ; preds = %correct_class3454
  store i32 315, i32* %ip_pos164, !dbg !77
  %298 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 315, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !77
  br label %return_pad126, !dbg !77

check_class_id3470:                               ; preds = %correct_serial3455
  %class_pos3472 = getelementptr %"struct.rubinius::Object"* %stack_load3465, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3473 = load %"struct.rubinius::Class"** %class_pos3472, !dbg !77
  %class_id_pos3474 = getelementptr %"struct.rubinius::Class"* %ref_class3473, i32 0, i32 4, !dbg !77
  %class_id3475 = load i32* %class_id_pos3474, !dbg !77
  %check_class_id3476 = icmp eq i32 %class_id3475, 77, !dbg !77
  br i1 %check_class_id3476, label %correct_class3471, label %continue3466, !dbg !77

correct_class3471:                                ; preds = %check_class_id3470
  %arg_float3477 = bitcast %"struct.rubinius::Object"* %stack_load3465 to %"struct.rubinius::Float"*, !dbg !77
  %arg.value_pos3478 = getelementptr %"struct.rubinius::Float"* %arg_float3477, i32 0, i32 1, !dbg !77
  %farg3479 = load double* %arg.value_pos3478, !dbg !77
  br label %continue3480, !dbg !77

continue3466:                                     ; preds = %check_class_id3470, %correct_serial3455
  %cast3481 = ptrtoint %"struct.rubinius::Object"* %stack_load3465 to i64, !dbg !77
  %masked3482 = and i64 %cast3481, 1, !dbg !77
  %is_fixnum3483 = icmp eq i64 %masked3482, 1, !dbg !77
  br i1 %is_fixnum3483, label %guarded_body3484, label %class_fallback3445, !dbg !77

guarded_body3484:                                 ; preds = %continue3466
  %as_int3485 = ptrtoint %"struct.rubinius::Object"* %stack_load3465 to i64, !dbg !77
  %ashr3486 = ashr i64 %as_int3485, 1, !dbg !77
  %299 = sitofp i64 %ashr3486 to double, !dbg !77
  br label %continue3480, !dbg !77

continue3480:                                     ; preds = %guarded_body3484, %correct_class3471
  %rhs3487 = phi double [ %farg3479, %correct_class3471 ], [ %299, %guarded_body3484 ], !dbg !77
  %stack_pos3488 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  %stack_load3489 = load %"struct.rubinius::Object"** %stack_pos3488, !dbg !77
  %self_float3490 = bitcast %"struct.rubinius::Object"* %stack_load3489 to %"struct.rubinius::Float"*, !dbg !77
  %self.value_pos3491 = getelementptr %"struct.rubinius::Float"* %self_float3490, i32 0, i32 1, !dbg !77
  %fself3492 = load double* %self.value_pos3491, !dbg !77
  %float.add3493 = fadd double %fself3492, %rhs3487, !dbg !77
  %result3494 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !77, !rbx-classid !37
  %300 = getelementptr %"struct.rubinius::Float"* %result3494, i32 0, i32 1, !dbg !77
  store double %float.add3493, double* %300, !dbg !77
  %301 = bitcast %"struct.rubinius::Float"* %result3494 to %"struct.rubinius::Object"*, !dbg !77
  br label %continue3447, !dbg !77

class_fallback3445:                               ; preds = %continue3466, %check_class_id3453, %continue3386
  %stack_pos3495 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  %stack_load3496 = load %"struct.rubinius::Object"** %stack_pos3495, !dbg !77
  store %"struct.rubinius::Object"* %stack_load3496, %"struct.rubinius::Object"** %out_args_recv166, !dbg !77
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name165, !dbg !77
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block167, !dbg !77
  store i32 1, i32* %out_args_total168, !dbg !77
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container170, !dbg !77
  %stack_pos3497 = getelementptr %"struct.rubinius::Object"** %stack140, i32 1, !dbg !77
  store %"struct.rubinius::Object"** %stack_pos3497, %"struct.rubinius::Object"*** %out_args_arguments169, !dbg !77
  %cache_const3498 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550928 to %"struct.rubinius::CallSite"**), !dbg !77
  %execute_pos3499 = getelementptr %"struct.rubinius::CallSite"* %cache_const3498, i32 0, i32 2, !dbg !77
  %execute3500 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3499, !dbg !77
  store i32 315, i32* %ip_pos164, !dbg !77
  %call_site_execute3501 = call %"struct.rubinius::Object"* %execute3500(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3498, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !77
  %null_check3503 = icmp eq %"struct.rubinius::Object"* %call_site_execute3501, null, !dbg !77
  br i1 %null_check3503, label %bail_out159, label %check_active3502, !dbg !77

check_active3502:                                 ; preds = %class_fallback3445
  br label %continue3447, !dbg !77

continue3510:                                     ; preds = %continue3540, %done3529
  %stack_pos3543 = getelementptr %"struct.rubinius::Object"** %stack140, i32 0, !dbg !77
  %stack_load3544 = load %"struct.rubinius::Object"** %stack_pos3543, !dbg !77
  br label %return_pad126, !dbg !77

return_pad126:                                    ; preds = %continue3510, %serial_fallback3446, %serial_fallback3385, %serial_fallback3238, %serial_fallback3177, %serial_fallback3030, %serial_fallback2969, %serial_fallback2871, %serial_fallback2825, %class_fallback2824, %serial_fallback2752, %serial_fallback2691, %serial_fallback2672, %class_fallback2671, %serial_fallback2624, %class_fallback2623, %serial_fallback2551, %serial_fallback2490, %serial_fallback2471, %class_fallback2470, %serial_fallback2423, %class_fallback2422, %serial_fallback2350, %serial_fallback2289, %serial_fallback2270, %class_fallback2269, %serial_fallback2166, %serial_fallback2105, %serial_fallback1978, %serial_fallback1917, %serial_fallback1801, %serial_fallback1740, %serial_fallback1624, %serial_fallback1608, %class_fallback1607, %serial_fallback1544, %serial_fallback1455, %serial_fallback1394, %serial_fallback1330, %serial_fallback881, %class_fallback880, %serial_fallback820, %serial_fallback759, %serial_fallback693, %serial_fallback632, %serial_fallback566, %serial_fallback474, %serial_fallback461, %class_fallback460, %serial_fallback371, %serial_fallback358, %class_fallback357, %serial_fallback277, %serial_fallback250, %class_fallback249, %serial_fallback178, %ret_raise_val161, %ret_null162
  %return_phi127 = phi %"struct.rubinius::Object"* [ null, %ret_null162 ], [ %crv163, %ret_raise_val161 ], [ %74, %serial_fallback178 ], [ %78, %class_fallback249 ], [ %79, %serial_fallback250 ], [ %81, %serial_fallback277 ], [ %86, %class_fallback357 ], [ %87, %serial_fallback358 ], [ %89, %serial_fallback371 ], [ %94, %class_fallback460 ], [ %95, %serial_fallback461 ], [ %96, %serial_fallback474 ], [ %100, %serial_fallback566 ], [ %104, %serial_fallback632 ], [ %108, %serial_fallback693 ], [ %112, %serial_fallback759 ], [ %116, %serial_fallback820 ], [ %120, %class_fallback880 ], [ %121, %serial_fallback881 ], [ %145, %serial_fallback1330 ], [ %149, %serial_fallback1394 ], [ %154, %serial_fallback1455 ], [ %159, %serial_fallback1544 ], [ %163, %class_fallback1607 ], [ %164, %serial_fallback1608 ], [ %170, %serial_fallback1624 ], [ %175, %serial_fallback1740 ], [ %180, %serial_fallback1801 ], [ %188, %serial_fallback1917 ], [ %193, %serial_fallback1978 ], [ %201, %serial_fallback2105 ], [ %206, %serial_fallback2166 ], [ %212, %class_fallback2269 ], [ %213, %serial_fallback2270 ], [ %214, %serial_fallback2289 ], [ %218, %serial_fallback2350 ], [ %222, %class_fallback2422 ], [ %223, %serial_fallback2423 ], [ %226, %class_fallback2470 ], [ %227, %serial_fallback2471 ], [ %228, %serial_fallback2490 ], [ %232, %serial_fallback2551 ], [ %236, %class_fallback2623 ], [ %237, %serial_fallback2624 ], [ %240, %class_fallback2671 ], [ %241, %serial_fallback2672 ], [ %242, %serial_fallback2691 ], [ %246, %serial_fallback2752 ], [ %250, %class_fallback2824 ], [ %251, %serial_fallback2825 ], [ %254, %serial_fallback2871 ], [ %263, %serial_fallback2969 ], [ %268, %serial_fallback3030 ], [ %278, %serial_fallback3177 ], [ %283, %serial_fallback3238 ], [ %293, %serial_fallback3385 ], [ %298, %serial_fallback3446 ], [ %stack_load3544, %continue3510 ]
  %null_check3547 = icmp eq %"struct.rubinius::Object"* %return_phi127, null, !dbg !24
  br i1 %null_check3547, label %bail_out, label %check_active3546, !dbg !24

check_class_id3514:                               ; preds = %continue3447
  %class_pos3516 = getelementptr %"struct.rubinius::Object"* %self3506, i32 0, i32 0, i32 1, !dbg !77
  %ref_class3517 = load %"struct.rubinius::Class"** %class_pos3516, !dbg !77
  %class_id_pos3518 = getelementptr %"struct.rubinius::Class"* %ref_class3517, i32 0, i32 4, !dbg !77
  %class_id3519 = load i32* %class_id_pos3518, !dbg !77
  %check_class_id3520 = icmp eq i32 %class_id3519, 1285, !dbg !77
  br i1 %check_class_id3520, label %correct_class3515, label %visit_push_ivar_fallback3509, !dbg !77

correct_class3515:                                ; preds = %check_class_id3514
  %obj_array3521 = bitcast %"struct.rubinius::Object"* %self3506 to %"struct.rubinius::Object"**, !dbg !77
  %field_pos3522 = getelementptr %"struct.rubinius::Object"** %obj_array3521, i32 5, !dbg !77
  store %"struct.rubinius::Object"* %stack_load3508, %"struct.rubinius::Object"** %field_pos3522, !dbg !77
  %cast3523 = ptrtoint %"struct.rubinius::Object"* %stack_load3508 to i64, !dbg !77
  %masked3524 = and i64 %cast3523, 3, !dbg !77
  %is_reference3525 = icmp eq i64 %masked3524, 0, !dbg !77
  br i1 %is_reference3525, label %reference_obj3526, label %done3529, !dbg !77

visit_push_ivar_fallback3509:                     ; preds = %check_class_id3514, %continue3447
  %ivar3539 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3506, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %stack_load3508), !dbg !77
  %null_check3542 = icmp eq %"struct.rubinius::Object"* %ivar3539, null, !dbg !77
  br i1 %null_check3542, label %bail_out159, label %check_active3541, !dbg !77

reference_obj3526:                                ; preds = %correct_class3515
  %object_memory_mark3530 = load i32* inttoptr (i64 22565880 to i32*), !dbg !77
  %word_pos3531 = getelementptr %"struct.rubinius::Object"* %self3506, i32 0, i32 0, i32 0, i32 0, !dbg !77
  %flags3532 = load i64* %word_pos3531, !dbg !77
  %mark_mask3533 = and i64 %flags3532, 3670016, !dbg !77
  %scan_mark3534 = add i32 %object_memory_mark3530, 1, !dbg !77
  %302 = zext i32 %scan_mark3534 to i64, !dbg !77
  %lshr3535 = shl i64 %302, 19, !dbg !77
  %is_scanned3536 = icmp eq i64 %mark_mask3533, %lshr3535, !dbg !77
  br i1 %is_scanned3536, label %run_barrier3528, label %object_not_scanned3527, !dbg !77

object_not_scanned3527:                           ; preds = %reference_obj3526
  %zone_mask3537 = and i64 %flags3532, 768, !dbg !77
  %is_young3538 = icmp eq i64 %zone_mask3537, 512, !dbg !77
  br i1 %is_young3538, label %done3529, label %run_barrier3528, !dbg !77

run_barrier3528:                                  ; preds = %object_not_scanned3527, %reference_obj3526
  %303 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3506, %"struct.rubinius::Object"* %stack_load3508), !dbg !77
  br label %done3529, !dbg !77

done3529:                                         ; preds = %run_barrier3528, %object_not_scanned3527, %correct_class3515
  br label %continue3510, !dbg !77

continue3540:                                     ; preds = %check_active3541
  br label %continue3510, !dbg !77

check_active3541:                                 ; preds = %visit_push_ivar_fallback3509
  br label %continue3540, !dbg !77

continue3545:                                     ; preds = %check_active3546
  %stack_pos3548 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !24
  store %"struct.rubinius::Object"* %return_phi127, %"struct.rubinius::Object"** %stack_pos3548, !dbg !24
  br label %continue120, !dbg !24

check_active3546:                                 ; preds = %return_pad126
  br label %continue3545, !dbg !24

class_fallback3553:                               ; preds = %continue120
  %stack_pos3580 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !28
  %stack_load3581 = load %"struct.rubinius::Object"** %stack_pos3580, !dbg !28, !rbx-classid !21
  store %"struct.rubinius::Object"* %stack_load3581, %"struct.rubinius::Object"** %out_args_recv, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !28
  store i32 1, i32* %out_args_total, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !28
  %stack_pos3582 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos3582, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !28
  %cache_const3583 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016368 to %"struct.rubinius::CallSite"**), !dbg !28
  %execute_pos3584 = getelementptr %"struct.rubinius::CallSite"* %cache_const3583, i32 0, i32 2, !dbg !28
  %execute3585 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3584, !dbg !28
  store i32 47, i32* %ip_pos, !dbg !28
  %call_site_execute3586 = call %"struct.rubinius::Object"* %execute3585(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3583, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check3588 = icmp eq %"struct.rubinius::Object"* %call_site_execute3586, null, !dbg !28
  br i1 %null_check3588, label %bail_out, label %check_active3587, !dbg !28

serial_fallback3554:                              ; No predecessors!
  store i32 47, i32* %ip_pos, !dbg !28
  %304 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 47, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

continue3555:                                     ; preds = %check_active3587, %cont3563
  %send_result3589 = phi %"struct.rubinius::Object"* [ %result3579, %cont3563 ], [ %call_site_execute3586, %check_active3587 ], !dbg !28
  %stack_pos3590 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !28
  store %"struct.rubinius::Object"* %send_result3589, %"struct.rubinius::Object"** %stack_pos3590, !dbg !28
  %local_pos3591 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !28
  %stack_pos3592 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !28
  %stack_load3593 = load %"struct.rubinius::Object"** %stack_pos3592, !dbg !28
  store %"struct.rubinius::Object"* %stack_load3593, %"struct.rubinius::Object"** %local_pos3591, !dbg !28
  %305 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !28
  %vm_jit3597 = load %"struct.rubinius::VMJIT"** %305, !dbg !28
  %306 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit3597, i32 0, i32 5, !dbg !28
  %check_interrupts3598 = load i8* %306, !dbg !28
  %check_global_interrupts3599 = load i8* inttoptr (i64 22553886 to i8*), !dbg !28
  %or3600 = or i8 %check_interrupts3598, %check_global_interrupts3599, !dbg !28
  %needs_interrupts3601 = icmp eq i8 %or3600, 0, !dbg !28
  br i1 %needs_interrupts3601, label %continue3594, label %interrupts3595, !dbg !28

push_add3560:                                     ; preds = %continue120
  %as_int3569 = ptrtoint %"struct.rubinius::Object"* %stack_load3557 to i64, !dbg !28
  %ashr3570 = ashr i64 %as_int3569, 1, !dbg !28
  %as_int3571 = ptrtoint %"struct.rubinius::Object"* %stack_load3559 to i64, !dbg !28
  %ashr3572 = ashr i64 %as_int3571, 1, !dbg !28
  %fixnum.add3573 = add i64 %ashr3570, %ashr3572, !dbg !28
  %307 = icmp sle i64 %fixnum.add3573, 4611686018427387903, !dbg !28
  %308 = icmp sge i64 %fixnum.add3573, -4611686018427387903, !dbg !28
  %fits_fixnum3574 = and i1 %307, %308, !dbg !28
  br i1 %fits_fixnum3574, label %tagnow3561, label %bignum3562, !dbg !28

tagnow3561:                                       ; preds = %push_add3560
  %shl3576 = shl i64 %fixnum.add3573, 1, !dbg !28
  %or3577 = or i64 %shl3576, 1, !dbg !28
  %as_obj3578 = inttoptr i64 %or3577 to %"struct.rubinius::Object"*, !dbg !28
  br label %cont3563, !dbg !28

bignum3562:                                       ; preds = %push_add3560
  %big_value3575 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add3573) #1, !dbg !28
  br label %cont3563, !dbg !28

cont3563:                                         ; preds = %tagnow3561, %bignum3562
  %result3579 = phi %"struct.rubinius::Object"* [ %big_value3575, %bignum3562 ], [ %as_obj3578, %tagnow3561 ], !dbg !28
  br label %continue3555, !dbg !28

check_active3587:                                 ; preds = %class_fallback3553
  br label %continue3555, !dbg !28

continue3594:                                     ; preds = %continue3555
  br label %done3596, !dbg !28

interrupts3595:                                   ; preds = %continue3555
  store i32 53, i32* %ip_pos, !dbg !28
  %ci3602 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !28
  %null_check3605 = icmp eq %"struct.rubinius::Object"* %ci3602, null, !dbg !28
  br i1 %null_check3605, label %bail_out, label %check_active3604, !dbg !28

done3596:                                         ; preds = %continue3603, %continue3594
  br label %ip4, !dbg !28

continue3603:                                     ; preds = %check_active3604
  br label %done3596, !dbg !28

check_active3604:                                 ; preds = %interrupts3595
  br label %continue3603, !dbg !28

continue3606:                                     ; No predecessors!
  br label %ip56, !dbg !28

ip56:                                             ; preds = %continue3606, %continue12
  %stack_pos3607 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !78
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos3607, !dbg !78
  %stack_pos3608 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !78
  %stack_load3609 = load %"struct.rubinius::Object"** %stack_pos3608, !dbg !78, !rbx-classid !79
  br label %return_pad, !dbg !78

return_pad:                                       ; preds = %ip56, %serial_fallback3554, %serial_fallback119, %class_fallback118, %serial_fallback93, %serial_fallback, %ret_raise_val, %ret_null
  %return_phi = phi %"struct.rubinius::Object"* [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %54, %serial_fallback ], [ %56, %serial_fallback93 ], [ %59, %class_fallback118 ], [ %60, %serial_fallback119 ], [ %304, %serial_fallback3554 ], [ %stack_load3609, %ip56 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !78
}

[[[ LLVM Optimized IR: _X_ANONYMOUS#__block__$block@7 ]]]

define %"struct.rubinius::Object"* @"_X_ANONYMOUS#__block__$block@7"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::BlockEnvironment"* %env, %"struct.rubinius::Arguments"* %args, %"struct.rubinius::BlockInvocation"* %invocation) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !17
  %valid_flag = alloca i1, align 1, !dbg !17
  %cfstk3618 = alloca [18 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %var_mem3619 = alloca [8 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %call_frame = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk3618 to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 9, !dbg !17
  %vars = bitcast [8 x %"struct.rubinius::Object"*]* %var_mem3619 to %"struct.rubinius::StackVariables"*, !dbg !17
  %0 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 3, !dbg !17
  %1 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i64 0, i32 3, !dbg !17
  %env.code = load %"struct.rubinius::CompiledCode"** %1, align 8, !dbg !17
  %2 = getelementptr inbounds [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 0, !dbg !17
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %2, align 8, !dbg !17
  %3 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i64 0, i32 2, !dbg !17
  %invocation.constant_scope = load %"struct.rubinius::ConstantScope"** %3, align 8, !dbg !17
  %4 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 1, !dbg !17
  %invocation.constant_scope.c = bitcast %"struct.rubinius::ConstantScope"* %invocation.constant_scope to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %invocation.constant_scope.c, %"struct.rubinius::Object"** %4, align 8, !dbg !17
  %5 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 8, !dbg !17
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %5, align 8, !dbg !17
  %6 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %6, align 8, !dbg !17
  %env.code.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %env.code, i64 0, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %env.code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !17
  %7 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i64 0, i32 0, !dbg !17
  %invocation.flags = load i32* %7, align 4, !dbg !17
  %flags = or i32 %invocation.flags, 106, !dbg !17
  %8 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 4, !dbg !17
  %9 = bitcast %"struct.rubinius::Object"** %8 to i32*, !dbg !17
  store i32 %flags, i32* %9, align 8, !dbg !17
  %10 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !17
  store i32 0, i32* %10, align 4, !dbg !17
  %11 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 7, !dbg !17
  %vars.c = bitcast [8 x %"struct.rubinius::Object"*]* %var_mem3619 to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %11, align 8, !dbg !17
  %12 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i64 0, i32 2, !dbg !17
  %env.top_scope = load %"struct.rubinius::VariableScope"** %12, align 8, !dbg !17
  %13 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 6, !dbg !17
  %env.top_scope.c = getelementptr inbounds %"struct.rubinius::VariableScope"* %env.top_scope, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %env.top_scope.c, %"struct.rubinius::Object"** %13, align 8, !dbg !17
  %14 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 140495695134064 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %14, align 8, !dbg !17
  %cfstk1383620 = alloca [25 x %"struct.rubinius::Object"*], align 8
  %var_mem1413621 = alloca [18 x %"struct.rubinius::Object"*], align 8
  %cfstk9073622 = alloca [13 x %"struct.rubinius::Object"*], align 8
  %var_mem9103623 = alloca [7 x %"struct.rubinius::Object"*], align 8
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %entry
  %counter_alloca.0 = phi i32 [ 0, %entry ], [ %added, %stack_nil ]
  %15 = sext i32 %counter_alloca.0 to i64, !dbg !17
  %stack.sum = add i64 %15, 9, !dbg !17
  %stack_pos = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 %stack.sum, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !17
  %added = add i32 %counter_alloca.0, 1, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %16 = getelementptr inbounds [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 0, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %16, align 8, !dbg !17
  %17 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i64 0, i32 1, !dbg !17
  %invocation.self = load %"struct.rubinius::Object"** %17, align 8, !dbg !17
  %18 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* %invocation.self, %"struct.rubinius::Object"** %18, align 8, !dbg !17
  %19 = getelementptr %"struct.rubinius::BlockInvocation"* %invocation, i64 0, i32 3, !dbg !17
  %invocation.module = load %"struct.rubinius::Module"** %19, align 8, !dbg !17
  %20 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i64 0, i32 5, !dbg !17
  %env.module = load %"struct.rubinius::Module"** %20, align 8, !dbg !17
  %21 = icmp ne %"struct.rubinius::Module"* %invocation.module, null, !dbg !17
  %22 = select i1 %21, %"struct.rubinius::Module"* %invocation.module, %"struct.rubinius::Module"* %env.module, !dbg !17
  %23 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 4, !dbg !17
  %.c = getelementptr inbounds %"struct.rubinius::Module"* %22, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %.c, %"struct.rubinius::Object"** %23, align 8, !dbg !17
  %24 = getelementptr %"struct.rubinius::VariableScope"* %env.top_scope, i64 0, i32 1, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %24, align 8, !dbg !17
  %25 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %25, align 8, !dbg !17
  %26 = getelementptr %"struct.rubinius::BlockEnvironment"* %env, i64 0, i32 1, !dbg !17
  %env.scope = load %"struct.rubinius::VariableScope"** %26, align 8, !dbg !17
  %27 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 1, !dbg !17
  %env.scope.c = getelementptr inbounds %"struct.rubinius::VariableScope"* %env.scope, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %env.scope.c, %"struct.rubinius::Object"** %27, align 8, !dbg !17
  %28 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %28, align 8, !dbg !17
  %29 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 6, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %29, align 8, !dbg !17
  %30 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem3619, i64 0, i64 7, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %30, align 8, !dbg !17
  %31 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %31, align 8, !dbg !17
  %32 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !17
  %args.total = load i32* %32, align 4, !dbg !17
  %33 = icmp slt i32 %args.total, 0, !dbg !17
  %34 = select i1 %33, i32 %args.total, i32 0, !dbg !17
  %35 = icmp sgt i32 %args.total, 0, !dbg !17
  %36 = select i1 %35, i32 0, i32 %args.total, !dbg !17
  br label %mand_loop_top, !dbg !17

mand_loop_top:                                    ; preds = %mand_loop_body, %bottom
  %counter_alloca.1 = phi i32 [ 0, %bottom ], [ %41, %mand_loop_body ]
  %loop_test = icmp slt i32 %counter_alloca.1, %36, !dbg !17
  br i1 %loop_test, label %mand_loop_body, label %post_loop_top, !dbg !17

mand_loop_body:                                   ; preds = %mand_loop_top
  %37 = sext i32 %counter_alloca.1 to i64, !dbg !17
  %38 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %37, !dbg !17
  %39 = load %"struct.rubinius::Object"** %38, align 8, !dbg !17
  %40 = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %37, !dbg !17
  store %"struct.rubinius::Object"* %39, %"struct.rubinius::Object"** %40, align 8, !dbg !17
  %41 = add i32 %counter_alloca.1, 1, !dbg !17
  br label %mand_loop_top, !dbg !17

post_loop_top:                                    ; preds = %mand_loop_top, %post_loop_body
  %counter_alloca.2 = phi i32 [ %47, %post_loop_body ], [ 0, %mand_loop_top ]
  %counter2.0 = phi i32 [ %48, %post_loop_body ], [ 0, %mand_loop_top ]
  %loop_test3 = icmp slt i32 %counter_alloca.2, %34, !dbg !17
  br i1 %loop_test3, label %post_loop_body, label %opt_arg_loop_top, !dbg !17

post_loop_body:                                   ; preds = %post_loop_top
  %42 = sext i32 %counter_alloca.2 to i64, !dbg !17
  %43 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %42, !dbg !17
  %44 = load %"struct.rubinius::Object"** %43, align 8, !dbg !17
  %45 = sext i32 %counter2.0 to i64, !dbg !17
  %46 = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %45, !dbg !17
  store %"struct.rubinius::Object"* %44, %"struct.rubinius::Object"** %46, align 8, !dbg !17
  %47 = add i32 %counter_alloca.2, 1, !dbg !17
  %48 = add i32 %counter2.0, 1, !dbg !17
  br label %post_loop_top, !dbg !17

opt_arg_loop_top:                                 ; preds = %post_loop_top, %opt_arg_loop_body
  %counter_alloca.3 = phi i32 [ %53, %opt_arg_loop_body ], [ 0, %post_loop_top ]
  %loop_test5 = icmp slt i32 %counter_alloca.3, %34, !dbg !17
  br i1 %loop_test5, label %opt_arg_loop_body, label %block_body, !dbg !17

opt_arg_loop_body:                                ; preds = %opt_arg_loop_top
  %49 = sext i32 %counter_alloca.3 to i64, !dbg !17
  %50 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %49, !dbg !17
  %51 = load %"struct.rubinius::Object"** %50, align 8, !dbg !17
  %52 = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %49, !dbg !17
  store %"struct.rubinius::Object"* %51, %"struct.rubinius::Object"** %52, align 8, !dbg !17
  %53 = add i32 %counter_alloca.3, 1, !dbg !17
  br label %opt_arg_loop_top, !dbg !17

bail_out:                                         ; preds = %interrupts3595, %class_fallback3553, %return_pad126, %class_fallback92, %check_active80, %continue66, %use_call65, %continue27, %use_call, %class_fallback, %ip4
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

block_body:                                       ; preds = %opt_arg_loop_top
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %29, align 8, !dbg !18
  br label %ip4, !dbg !18

ip4:                                              ; preds = %interrupts3595.ip4_crit_edge, %continue3555, %block_body
  %local = phi %"struct.rubinius::Object"* [ %local.pre, %interrupts3595.ip4_crit_edge ], [ %send_result3589, %continue3555 ], [ inttoptr (i64 1 to %"struct.rubinius::Object"*), %block_body ]
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  %pld = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 2), !dbg !19
  %null_check = icmp eq %"struct.rubinius::Object"* %pld, null, !dbg !19
  br i1 %null_check, label %bail_out, label %check_active, !dbg !19

check_active:                                     ; preds = %ip4
  %stack_pos11 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 10, !dbg !19
  store %"struct.rubinius::Object"* %pld, %"struct.rubinius::Object"** %stack_pos11, align 8, !dbg !19
  %stack_load14 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !19, !rbx-classid !20
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load14 to i64, !dbg !19
  %cast17 = ptrtoint %"struct.rubinius::Object"* %pld to i64, !dbg !19
  %fixnums_anded = and i64 %cast17, 1
  %masked = and i64 %fixnums_anded, %cast
  %is_fixnum = icmp eq i64 %masked, 0, !dbg !19
  br i1 %is_fixnum, label %class_fallback, label %push_le, !dbg !19

class_fallback:                                   ; preds = %check_active
  store %"struct.rubinius::Object"* %stack_load14, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !19
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !19
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !19
  store i32 1, i32* %out_args_total, align 8, !dbg !19
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !19
  store %"struct.rubinius::Object"** %stack_pos11, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !19
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23016064 to %"struct.rubinius::CallSite"**), align 128, !dbg !19
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !19
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !19
  store i32 9, i32* %10, align 4, !dbg !19
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !19
  %null_check22 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !19
  br i1 %null_check22, label %bail_out, label %continue12, !dbg !19

continue12:                                       ; preds = %class_fallback, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %54, %push_le ], [ %call_site_execute, %class_fallback ], !dbg !19
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  %as_int = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !19
  %and = and i64 %as_int, 15, !dbg !19
  %is_true = icmp eq i64 %and, 10, !dbg !19
  br i1 %is_true, label %ip56, label %ip14, !dbg !19

push_le:                                          ; preds = %check_active
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %stack_load14, %pld, !dbg !19
  %54 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !19
  br label %continue12, !dbg !19

ip14:                                             ; preds = %continue12
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23016104 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !21
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !21
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !21
  %55 = load %"struct.rubinius::Object"** %4, align 8, !dbg !21
  %frame_scope = bitcast %"struct.rubinius::Object"* %55 to %"struct.rubinius::ConstantScope"*, !dbg !21
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope, %frame_scope, !dbg !21
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !21

check_serial:                                     ; preds = %ip14
  %global_serial = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !21
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !21
  %serial = load i32* %serial_pos, align 4, !dbg !21
  %use_cache28 = icmp eq i32 %global_serial, %serial, !dbg !21
  br i1 %use_cache28, label %use_cache, label %use_call, !dbg !21

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 2, !dbg !21
  %cached_value = load %"struct.rubinius::Object"** %value_pos, align 8, !dbg !21
  br label %continue27, !dbg !21

use_call:                                         ; preds = %check_serial, %ip14
  store i32 14, i32* %10, align 4, !dbg !21
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23016104 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !21
  %null_check31 = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !21
  br i1 %null_check31, label %bail_out, label %continue27, !dbg !21

continue27:                                       ; preds = %use_call, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %use_call ], !dbg !21, !rbx-classid !22
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack, align 8, !dbg !21
  %local34 = load %"struct.rubinius::Object"** %29, align 8, !dbg !21, !rbx-classid !20
  store %"struct.rubinius::Object"* %local34, %"struct.rubinius::Object"** %stack_pos11, align 8, !dbg !21
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !21
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !21
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !21
  store i32 1, i32* %out_args_total, align 8, !dbg !21
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !21
  store %"struct.rubinius::Object"** %stack_pos11, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !21
  %cache_const42 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016136 to %"struct.rubinius::CallSite"**), align 8, !dbg !21
  %execute_pos43 = getelementptr %"struct.rubinius::CallSite"* %cache_const42, i64 0, i32 2, !dbg !21
  %execute44 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos43, align 8, !dbg !21
  store i32 18, i32* %10, align 4, !dbg !21
  %call_site_execute45 = call %"struct.rubinius::Object"* %execute44(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const42, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !21
  %null_check48 = icmp eq %"struct.rubinius::Object"* %call_site_execute45, null, !dbg !21
  br i1 %null_check48, label %bail_out, label %check_active47, !dbg !21

check_active47:                                   ; preds = %continue27
  store %"struct.rubinius::Object"* %call_site_execute45, %"struct.rubinius::Object"** %30, align 8, !dbg !21
  store %"struct.rubinius::Object"* %call_site_execute45, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  %constant_cache57 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23016200 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !23
  %constant_cache_pos58 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i64 0, i32 4, !dbg !23
  %constant_scope59 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos58, align 8, !dbg !23
  %56 = load %"struct.rubinius::Object"** %4, align 8, !dbg !23
  %frame_scope61 = bitcast %"struct.rubinius::Object"* %56 to %"struct.rubinius::ConstantScope"*, !dbg !23
  %same_scope62 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope59, %frame_scope61, !dbg !23
  br i1 %same_scope62, label %check_serial63, label %use_call65, !dbg !23

check_serial63:                                   ; preds = %check_active47
  %global_serial56 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !23
  %serial_pos67 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i64 0, i32 7, !dbg !23
  %serial68 = load i32* %serial_pos67, align 4, !dbg !23
  %use_cache69 = icmp eq i32 %global_serial56, %serial68, !dbg !23
  br i1 %use_cache69, label %use_cache64, label %use_call65, !dbg !23

use_cache64:                                      ; preds = %check_serial63
  %value_pos70 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache57, i64 0, i32 2, !dbg !23
  %cached_value71 = load %"struct.rubinius::Object"** %value_pos70, align 8, !dbg !23
  br label %continue66, !dbg !23

use_call65:                                       ; preds = %check_serial63, %check_active47
  store i32 26, i32* %10, align 4, !dbg !23
  %push_const_fast72 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23016200 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check75 = icmp eq %"struct.rubinius::Object"* %push_const_fast72, null, !dbg !23
  br i1 %null_check75, label %bail_out, label %continue66, !dbg !23

continue66:                                       ; preds = %use_call65, %use_cache64
  %constant76 = phi %"struct.rubinius::Object"* [ %cached_value71, %use_cache64 ], [ %push_const_fast72, %use_call65 ], !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %constant76, %"struct.rubinius::Object"** %stack_pos11, align 8, !dbg !23
  %pld78 = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 2), !dbg !23
  %null_check81 = icmp eq %"struct.rubinius::Object"* %pld78, null, !dbg !23
  br i1 %null_check81, label %bail_out, label %check_active80, !dbg !23

check_active80:                                   ; preds = %continue66
  %stack_pos82 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 11, !dbg !23
  store %"struct.rubinius::Object"* %pld78, %"struct.rubinius::Object"** %stack_pos82, align 8, !dbg !23
  %pld83 = call %"struct.rubinius::Object"* @rbx_push_local_depth(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 1, i32 3), !dbg !23
  %null_check86 = icmp eq %"struct.rubinius::Object"* %pld83, null, !dbg !23
  br i1 %null_check86, label %bail_out, label %check_active85, !dbg !23

check_active85:                                   ; preds = %check_active80
  %stack_pos87 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 12, !dbg !23
  store %"struct.rubinius::Object"* %pld83, %"struct.rubinius::Object"** %stack_pos87, align 8, !dbg !23
  %local89 = load %"struct.rubinius::Object"** %29, align 8, !dbg !23, !rbx-classid !20
  %stack_pos90 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 13, !dbg !23
  store %"struct.rubinius::Object"* %local89, %"struct.rubinius::Object"** %stack_pos90, align 8, !dbg !23
  %stack_pos91 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk3618, i64 0, i64 14, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos91, align 8, !dbg !23
  %cast99 = ptrtoint %"struct.rubinius::Object"* %local89 to i64, !dbg !23
  %masked102 = and i64 %cast99, 1, !dbg !23
  %is_fixnum103 = icmp eq i64 %masked102, 0, !dbg !23
  br i1 %is_fixnum103, label %class_fallback92, label %push_add, !dbg !23

class_fallback92:                                 ; preds = %check_active85
  store %"struct.rubinius::Object"* %local89, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !23
  store i32 1, i32* %out_args_total, align 8, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos91, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !23
  %cache_const110 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016288 to %"struct.rubinius::CallSite"**), align 32, !dbg !23
  %execute_pos111 = getelementptr %"struct.rubinius::CallSite"* %cache_const110, i64 0, i32 2, !dbg !23
  %execute112 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos111, align 8, !dbg !23
  store i32 37, i32* %10, align 4, !dbg !23
  %call_site_execute113 = call %"struct.rubinius::Object"* %execute112(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const110, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check115 = icmp eq %"struct.rubinius::Object"* %call_site_execute113, null, !dbg !23
  br i1 %null_check115, label %bail_out, label %continue94, !dbg !23

continue94:                                       ; preds = %class_fallback92, %bignum, %tagnow
  %send_result116 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute113, %class_fallback92 ], !dbg !23
  store %"struct.rubinius::Object"* %send_result116, %"struct.rubinius::Object"** %stack_pos90, align 8, !dbg !23
  %stack_load122 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !23, !rbx-classid !25
  %cast123 = ptrtoint %"struct.rubinius::Object"* %stack_load122 to i64, !dbg !23
  %masked124 = and i64 %cast123, 3, !dbg !23
  %is_reference = icmp eq i64 %masked124, 0, !dbg !23
  br i1 %is_reference, label %check_class_id, label %class_fallback118, !dbg !23

push_add:                                         ; preds = %check_active85
  %ashr = ashr i64 %cast99, 1, !dbg !23
  %fixnum.add = add i64 %ashr, 1, !dbg !23
  %fixnum.add.off = add i64 %ashr, 4611686018427387904, !dbg !23
  %57 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !23
  br i1 %57, label %tagnow, label %bignum, !dbg !23

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !23
  %or = or i64 %shl, 1, !dbg !23
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !23
  br label %continue94, !dbg !23

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !23
  br label %continue94, !dbg !23

check_class_id:                                   ; preds = %continue94
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load122, i64 0, i32 0, i32 1, !dbg !23
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !23
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !23
  %class_id = load i32* %class_id_pos, align 4, !dbg !23
  %check_class_id125 = icmp eq i32 %class_id, 1285, !dbg !23
  br i1 %check_class_id125, label %correct_class, label %class_fallback118, !dbg !23

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !23
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !23
  %check_serial_id = icmp eq i32 %serial_id, 2, !dbg !23
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback119, !dbg !23

class_fallback118:                                ; preds = %check_class_id, %continue94
  store i32 40, i32* %10, align 4, !dbg !23
  %58 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 4, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !23
  br label %return_pad, !dbg !23

correct_serial:                                   ; preds = %correct_class
  %stack_load129 = load %"struct.rubinius::Object"** %stack_pos11, align 8, !dbg !23, !rbx-classid !24
  %stack_load131 = load %"struct.rubinius::Object"** %stack_pos82, align 8, !dbg !23
  %stack_load133 = load %"struct.rubinius::Object"** %stack_pos87, align 8, !dbg !23
  %call_frame139 = bitcast [25 x %"struct.rubinius::Object"*]* %cfstk1383620 to %"struct.rubinius::CallFrame"*, !dbg !26
  %stack140 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 9, !dbg !26
  %vars142 = bitcast [18 x %"struct.rubinius::Object"*]* %var_mem1413621 to %"struct.rubinius::StackVariables"*, !dbg !26
  %59 = getelementptr inbounds [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 0, !dbg !26
  %call_frame.c = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk3618 to %"struct.rubinius::Object"*, !dbg !26
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %59, align 8, !dbg !26
  %60 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 2, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 140495695463232 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %60, align 8, !dbg !26
  %compiled_code = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140495695463232 to %"struct.rubinius::CompiledCode"**), align 64, !dbg !26
  %61 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 3, !dbg !26
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code, i64 0, i32 0, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %61, align 8, !dbg !26
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i64 0, i32 13, !dbg !26
  %constant_scope143 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, align 8, !dbg !26
  %62 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 1, !dbg !26
  %constant_scope143.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope143 to %"struct.rubinius::Object"*, !dbg !26
  store %"struct.rubinius::Object"* %constant_scope143.c, %"struct.rubinius::Object"** %62, align 8, !dbg !26
  %63 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 4, !dbg !26
  %64 = bitcast %"struct.rubinius::Object"** %63 to i32*, !dbg !26
  store i32 12, i32* %64, align 8, !dbg !26
  %65 = getelementptr %"struct.rubinius::CallFrame"* %call_frame139, i64 0, i32 5, !dbg !26
  store i32 0, i32* %65, align 4, !dbg !26
  %66 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 7, !dbg !26
  %vars142.c = bitcast [18 x %"struct.rubinius::Object"*]* %var_mem1413621 to %"struct.rubinius::Object"*, !dbg !26
  store %"struct.rubinius::Object"* %vars142.c, %"struct.rubinius::Object"** %66, align 8, !dbg !26
  br label %stack_nil144, !dbg !26

serial_fallback119:                               ; preds = %correct_class
  store i32 40, i32* %10, align 4, !dbg !23
  %67 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 40, i64 4, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !23
  br label %return_pad, !dbg !23

stack_nil144:                                     ; preds = %stack_nil144, %correct_serial
  %counter_alloca.4 = phi i32 [ 0, %correct_serial ], [ %added148, %stack_nil144 ]
  %68 = sext i32 %counter_alloca.4 to i64, !dbg !26
  %stack140.sum = add i64 %68, 9, !dbg !26
  %stack_pos147 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 %stack140.sum, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos147, align 8, !dbg !26
  %added148 = add i32 %counter_alloca.4, 1, !dbg !26
  %loop_check149 = icmp eq i32 %added148, 16, !dbg !26
  br i1 %loop_check149, label %bottom145, label %stack_nil144, !dbg !26

bottom145:                                        ; preds = %stack_nil144
  %module = load %"struct.rubinius::Module"** inttoptr (i64 140495695463248 to %"struct.rubinius::Module"**), align 16, !dbg !26
  %69 = getelementptr inbounds [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 0, !dbg !26
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %69, align 8, !dbg !26
  %70 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 2, !dbg !26
  store %"struct.rubinius::Object"* %stack_load122, %"struct.rubinius::Object"** %70, align 8, !dbg !26
  %71 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 4, !dbg !26
  %module.c = getelementptr inbounds %"struct.rubinius::Module"* %module, i64 0, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %module.c, %"struct.rubinius::Object"** %71, align 8, !dbg !26
  %72 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 3, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %72, align 8, !dbg !26
  %73 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 1, !dbg !26
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %73, align 8, !dbg !26
  %74 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 5, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %74, align 8, !dbg !26
  br label %locactx_nil, !dbg !26

locactx_nil:                                      ; preds = %locactx_nil, %bottom145
  %counter_alloca.5 = phi i32 [ 0, %bottom145 ], [ %added153, %locactx_nil ]
  %75 = sext i32 %counter_alloca.5 to i64, !dbg !26
  %local_pos152 = getelementptr %"struct.rubinius::StackVariables"* %vars142, i64 0, i32 6, i64 %75, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos152, align 8, !dbg !26
  %added153 = add i32 %counter_alloca.5, 1, !dbg !26
  %loop_check154 = icmp eq i32 %added153, 12, !dbg !26
  br i1 %loop_check154, label %bottom150, label %locactx_nil, !dbg !26

bottom150:                                        ; preds = %locactx_nil
  %76 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 6, !dbg !26
  store %"struct.rubinius::Object"* %stack_load129, %"struct.rubinius::Object"** %76, align 8, !dbg !26
  %77 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 7, !dbg !26
  store %"struct.rubinius::Object"* %stack_load131, %"struct.rubinius::Object"** %77, align 8, !dbg !26
  %78 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 8, !dbg !26
  store %"struct.rubinius::Object"* %stack_load133, %"struct.rubinius::Object"** %78, align 8, !dbg !26
  %79 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 9, !dbg !26
  store %"struct.rubinius::Object"* %send_result116, %"struct.rubinius::Object"** %79, align 8, !dbg !26
  br label %method_body, !dbg !26

bail_out159:                                      ; preds = %visit_push_ivar_fallback3509, %class_fallback3445, %class_fallback3384, %visit_push_ivar_fallback3301, %class_fallback3237, %class_fallback3176, %visit_push_ivar_fallback3093, %class_fallback3029, %class_fallback2968, %interrupts, %class_fallback2870, %class_fallback2751, %class_fallback2690, %class_fallback2550, %class_fallback2489, %class_fallback2349, %class_fallback2288, %visit_push_ivar_fallback2229, %class_fallback2165, %class_fallback2104, %visit_push_ivar_fallback2041, %class_fallback1977, %class_fallback1916, %visit_push_ivar_fallback1864, %class_fallback1800, %class_fallback1739, %class_fallback1623, %class_fallback1543, %class_fallback1454, %class_fallback1393, %class_fallback1329, %return_pad899, %class_fallback819, %class_fallback758, %class_fallback692, %class_fallback631, %class_fallback565, %use_call546, %class_fallback473, %class_fallback370, %class_fallback276, %ip9, %class_fallback177
  %rth160 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139), !dbg !26
  br i1 %rth160, label %ret_raise_val161, label %return_pad126, !dbg !26

ret_raise_val161:                                 ; preds = %bail_out159
  %crv163 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !26
  br label %return_pad126, !dbg !26

method_body:                                      ; preds = %interrupts.method_body_crit_edge, %continue2872, %bottom150
  %local172 = phi %"struct.rubinius::Object"* [ %local172.pre, %interrupts.method_body_crit_edge ], [ %send_result2906, %continue2872 ], [ %send_result116, %bottom150 ]
  store %"struct.rubinius::Object"* %local172, %"struct.rubinius::Object"** %stack140, align 8, !dbg !27
  %local175 = load %"struct.rubinius::Object"** %77, align 8, !dbg !27, !rbx-classid !25
  %stack_pos176 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 10, !dbg !27
  store %"struct.rubinius::Object"* %local175, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !27
  %cast182 = ptrtoint %"struct.rubinius::Object"* %local172 to i64, !dbg !27
  %cast185 = ptrtoint %"struct.rubinius::Object"* %local175 to i64, !dbg !27
  %fixnums_anded186 = and i64 %cast185, 1
  %masked187 = and i64 %fixnums_anded186, %cast182
  %is_fixnum188 = icmp eq i64 %masked187, 0, !dbg !27
  br i1 %is_fixnum188, label %class_fallback177, label %push_le189, !dbg !27

class_fallback177:                                ; preds = %method_body
  store %"struct.rubinius::Object"* %local172, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !27
  store i32 1, i32* %out_args_total, align 8, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !27
  %cache_const194 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548440 to %"struct.rubinius::CallSite"**), align 8, !dbg !27
  %execute_pos195 = getelementptr %"struct.rubinius::CallSite"* %cache_const194, i64 0, i32 2, !dbg !27
  %execute196 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos195, align 8, !dbg !27
  store i32 4, i32* %65, align 4, !dbg !27
  %call_site_execute197 = call %"struct.rubinius::Object"* %execute196(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const194, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check199 = icmp eq %"struct.rubinius::Object"* %call_site_execute197, null, !dbg !27
  br i1 %null_check199, label %bail_out159, label %continue179, !dbg !27

continue179:                                      ; preds = %class_fallback177, %push_le189
  %send_result200 = phi %"struct.rubinius::Object"* [ %80, %push_le189 ], [ %call_site_execute197, %class_fallback177 ], !dbg !27
  store %"struct.rubinius::Object"* %send_result200, %"struct.rubinius::Object"** %stack140, align 8, !dbg !27
  %as_int204 = ptrtoint %"struct.rubinius::Object"* %send_result200 to i64, !dbg !27
  %and205 = and i64 %as_int204, 15, !dbg !27
  %is_true206 = icmp eq i64 %and205, 10, !dbg !27
  br i1 %is_true206, label %ip274, label %ip9, !dbg !27

push_le189:                                       ; preds = %method_body
  %fixnum.lt190 = icmp slt %"struct.rubinius::Object"* %local172, %local175, !dbg !27
  %80 = select i1 %fixnum.lt190, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !27
  br label %continue179, !dbg !27

ip9:                                              ; preds = %continue179
  %local209 = load %"struct.rubinius::Object"** %76, align 8, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %local209, %"struct.rubinius::Object"** %stack140, align 8, !dbg !28
  %local212 = load %"struct.rubinius::Object"** %79, align 8, !dbg !28, !rbx-classid !30
  store %"struct.rubinius::Object"* %local212, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !28
  store %"struct.rubinius::Object"* %local209, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const220 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548512 to %"struct.rubinius::CallSite"**), align 32, !dbg !28
  %execute_pos221 = getelementptr %"struct.rubinius::CallSite"* %cache_const220, i64 0, i32 2, !dbg !28
  %execute222 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos221, align 8, !dbg !28
  store i32 13, i32* %65, align 4, !dbg !28
  %call_site_execute223 = call %"struct.rubinius::Object"* %execute222(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const220, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check226 = icmp eq %"struct.rubinius::Object"* %call_site_execute223, null, !dbg !28
  br i1 %null_check226, label %bail_out159, label %check_active225, !dbg !28

check_active225:                                  ; preds = %ip9
  %81 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 10, !dbg !28
  store %"struct.rubinius::Object"* %call_site_execute223, %"struct.rubinius::Object"** %81, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !31
  %self = load %"struct.rubinius::Object"** %70, align 8, !dbg !31
  %cast233 = ptrtoint %"struct.rubinius::Object"* %self to i64, !dbg !31
  %masked234 = and i64 %cast233, 3, !dbg !31
  %is_reference235 = icmp eq i64 %masked234, 0, !dbg !31
  br i1 %is_reference235, label %check_class_id236, label %visit_push_ivar_fallback, !dbg !31

continue231:                                      ; preds = %visit_push_ivar_fallback, %correct_class237
  %stack_load318 = phi %"struct.rubinius::Object"* [ %"select ivar", %correct_class237 ], [ %ivar, %visit_push_ivar_fallback ]
  store %"struct.rubinius::Object"* %stack_load318, %"struct.rubinius::Object"** %stack140, align 8, !dbg !31
  store %"struct.rubinius::Object"* %call_site_execute223, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !31
  %cast254 = ptrtoint %"struct.rubinius::Object"* %call_site_execute223 to i64, !dbg !31
  %masked255 = and i64 %cast254, 3, !dbg !31
  %is_reference256 = icmp eq i64 %masked255, 0, !dbg !31
  br i1 %is_reference256, label %check_class_id257, label %class_fallback249, !dbg !31

check_class_id236:                                ; preds = %check_active225
  %class_pos238 = getelementptr %"struct.rubinius::Object"* %self, i64 0, i32 0, i32 1, !dbg !31
  %ref_class239 = load %"struct.rubinius::Class"** %class_pos238, align 8, !dbg !31
  %class_id_pos240 = getelementptr %"struct.rubinius::Class"* %ref_class239, i64 0, i32 4, !dbg !31
  %class_id241 = load i32* %class_id_pos240, align 4, !dbg !31
  %check_class_id242 = icmp eq i32 %class_id241, 1285, !dbg !31
  br i1 %check_class_id242, label %correct_class237, label %visit_push_ivar_fallback, !dbg !31

correct_class237:                                 ; preds = %check_class_id236
  %field_pos3637 = getelementptr %"struct.rubinius::Object"* %self, i64 1, !dbg !31
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos3637 to %"struct.rubinius::Object"**, !dbg !31
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !31
  %prune_undef = icmp eq %"struct.rubinius::Object"* %field, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !31
  %"select ivar" = select i1 %prune_undef, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field, !dbg !31
  br label %continue231, !dbg !31

visit_push_ivar_fallback:                         ; preds = %check_class_id236, %check_active225
  %ivar = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !31
  br label %continue231, !dbg !31

check_class_id257:                                ; preds = %continue231
  %class_pos260 = getelementptr %"struct.rubinius::Object"* %call_site_execute223, i64 0, i32 0, i32 1, !dbg !31
  %ref_class261 = load %"struct.rubinius::Class"** %class_pos260, align 8, !dbg !31
  %class_id_pos262 = getelementptr %"struct.rubinius::Class"* %ref_class261, i64 0, i32 4, !dbg !31
  %class_id263 = load i32* %class_id_pos262, align 4, !dbg !31
  %check_class_id264 = icmp eq i32 %class_id263, 1285, !dbg !31
  br i1 %check_class_id264, label %correct_class258, label %class_fallback249, !dbg !31

correct_class258:                                 ; preds = %check_class_id257
  %serial_id_pos265 = getelementptr %"struct.rubinius::Class"* %ref_class261, i64 0, i32 5, !dbg !31
  %serial_id266 = load i32* %serial_id_pos265, align 4, !dbg !31
  %check_serial_id267 = icmp eq i32 %serial_id266, 2, !dbg !31
  br i1 %check_serial_id267, label %correct_serial259, label %serial_fallback250, !dbg !31

class_fallback249:                                ; preds = %check_class_id257, %continue231
  store i32 23, i32* %65, align 4, !dbg !31
  %82 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !31
  br label %return_pad126, !dbg !31

correct_serial259:                                ; preds = %correct_class258
  %field_pos2713624 = getelementptr %"struct.rubinius::Object"* %call_site_execute223, i64 1, !dbg !31
  %field_pos271 = bitcast %"struct.rubinius::Object"* %field_pos2713624 to %"struct.rubinius::Object"**, !dbg !31
  %field272 = load %"struct.rubinius::Object"** %field_pos271, align 8, !dbg !31
  %prune_undef273 = icmp eq %"struct.rubinius::Object"* %field272, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !31
  %"select ivar274" = select i1 %prune_undef273, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field272, !dbg !31
  store %"struct.rubinius::Object"* %"select ivar274", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !31
  %cast281 = ptrtoint %"struct.rubinius::Object"* %stack_load318 to i64, !dbg !31
  %masked282 = and i64 %cast281, 3, !dbg !31
  %is_reference283 = icmp eq i64 %masked282, 0, !dbg !31
  br i1 %is_reference283, label %check_class_id284, label %class_fallback276, !dbg !31

serial_fallback250:                               ; preds = %correct_class258
  store i32 23, i32* %65, align 4, !dbg !31
  %83 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 23, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad126, !dbg !31

continue278:                                      ; preds = %class_fallback276.continue278_crit_edge, %continue308
  %self334 = phi %"struct.rubinius::Object"* [ %self, %continue308 ], [ %self334.pre, %class_fallback276.continue278_crit_edge ]
  %send_result326 = phi %"struct.rubinius::Object"* [ %90, %continue308 ], [ %call_site_execute323, %class_fallback276.continue278_crit_edge ], !dbg !31
  %84 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 11, !dbg !31
  store %"struct.rubinius::Object"* %send_result326, %"struct.rubinius::Object"** %84, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !32
  %cast335 = ptrtoint %"struct.rubinius::Object"* %self334 to i64, !dbg !32
  %masked336 = and i64 %cast335, 3, !dbg !32
  %is_reference337 = icmp eq i64 %masked336, 0, !dbg !32
  br i1 %is_reference337, label %check_class_id338, label %visit_push_ivar_fallback331, !dbg !32

check_class_id284:                                ; preds = %correct_serial259
  %class_pos287 = getelementptr %"struct.rubinius::Object"* %stack_load318, i64 0, i32 0, i32 1, !dbg !31
  %ref_class288 = load %"struct.rubinius::Class"** %class_pos287, align 8, !dbg !31
  %class_id_pos289 = getelementptr %"struct.rubinius::Class"* %ref_class288, i64 0, i32 4, !dbg !31
  %class_id290 = load i32* %class_id_pos289, align 4, !dbg !31
  %check_class_id291 = icmp eq i32 %class_id290, 77, !dbg !31
  br i1 %check_class_id291, label %correct_class285, label %class_fallback276, !dbg !31

correct_class285:                                 ; preds = %check_class_id284
  %serial_id_pos292 = getelementptr %"struct.rubinius::Class"* %ref_class288, i64 0, i32 5, !dbg !31
  %serial_id293 = load i32* %serial_id_pos292, align 4, !dbg !31
  %check_serial_id294 = icmp eq i32 %serial_id293, 224, !dbg !31
  br i1 %check_serial_id294, label %correct_serial286, label %serial_fallback277, !dbg !31

correct_serial286:                                ; preds = %correct_class285
  %cast298 = ptrtoint %"struct.rubinius::Object"* %"select ivar274" to i64, !dbg !31
  %masked299 = and i64 %cast298, 3, !dbg !31
  %is_reference300 = icmp eq i64 %masked299, 0, !dbg !31
  br i1 %is_reference300, label %check_class_id301, label %continue297, !dbg !31

serial_fallback277:                               ; preds = %correct_class285
  store i32 26, i32* %65, align 4, !dbg !31
  %85 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 26, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad126, !dbg !31

check_class_id301:                                ; preds = %correct_serial286
  %class_pos303 = getelementptr %"struct.rubinius::Object"* %"select ivar274", i64 0, i32 0, i32 1, !dbg !31
  %ref_class304 = load %"struct.rubinius::Class"** %class_pos303, align 8, !dbg !31
  %class_id_pos305 = getelementptr %"struct.rubinius::Class"* %ref_class304, i64 0, i32 4, !dbg !31
  %class_id306 = load i32* %class_id_pos305, align 4, !dbg !31
  %check_class_id307 = icmp eq i32 %class_id306, 77, !dbg !31
  br i1 %check_class_id307, label %correct_class302, label %continue297, !dbg !31

correct_class302:                                 ; preds = %check_class_id301
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %"select ivar274", i64 1, !dbg !31
  %86 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !31
  %farg = load double* %86, align 8, !dbg !31
  br label %continue308, !dbg !31

continue297:                                      ; preds = %check_class_id301, %correct_serial286
  %masked310 = and i64 %cast298, 1, !dbg !31
  %is_fixnum311 = icmp eq i64 %masked310, 0, !dbg !31
  br i1 %is_fixnum311, label %class_fallback276, label %guarded_body, !dbg !31

guarded_body:                                     ; preds = %continue297
  %ashr313 = ashr i64 %cast298, 1, !dbg !31
  %87 = sitofp i64 %ashr313 to double, !dbg !31
  br label %continue308, !dbg !31

continue308:                                      ; preds = %guarded_body, %correct_class302
  %rhs = phi double [ %farg, %correct_class302 ], [ %87, %guarded_body ], !dbg !31
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load318, i64 1, !dbg !31
  %88 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !31
  %fself = load double* %88, align 8, !dbg !31
  %float.sub = fsub double %fself, %rhs, !dbg !31
  %result316 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !31, !rbx-classid !33
  %89 = getelementptr %"struct.rubinius::Float"* %result316, i64 0, i32 1, !dbg !31
  store double %float.sub, double* %89, align 8, !dbg !31
  %90 = getelementptr inbounds %"struct.rubinius::Float"* %result316, i64 0, i32 0, i32 0, !dbg !31
  br label %continue278, !dbg !31

class_fallback276:                                ; preds = %continue297, %check_class_id284, %correct_serial259
  store %"struct.rubinius::Object"* %stack_load318, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 1, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const320 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548616 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos321 = getelementptr %"struct.rubinius::CallSite"* %cache_const320, i64 0, i32 2, !dbg !31
  %execute322 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos321, align 8, !dbg !31
  store i32 26, i32* %65, align 4, !dbg !31
  %call_site_execute323 = call %"struct.rubinius::Object"* %execute322(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const320, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check325 = icmp eq %"struct.rubinius::Object"* %call_site_execute323, null, !dbg !31
  br i1 %null_check325, label %bail_out159, label %class_fallback276.continue278_crit_edge, !dbg !31

class_fallback276.continue278_crit_edge:          ; preds = %class_fallback276
  %self334.pre = load %"struct.rubinius::Object"** %70, align 8, !dbg !32
  br label %continue278, !dbg !31

continue332:                                      ; preds = %visit_push_ivar_fallback331, %correct_class339
  %stack_load421 = phi %"struct.rubinius::Object"* [ %"select ivar349", %correct_class339 ], [ %ivar352, %visit_push_ivar_fallback331 ]
  store %"struct.rubinius::Object"* %stack_load421, %"struct.rubinius::Object"** %stack140, align 8, !dbg !32
  %local355 = load %"struct.rubinius::Object"** %81, align 8, !dbg !32, !rbx-classid !34
  %field_pos365 = getelementptr %"struct.rubinius::Object"* %local355, i64 1, i32 0, i32 1, !dbg !32
  %91 = load %"struct.rubinius::Class"** %field_pos365, align 8, !dbg !32
  %field366 = getelementptr inbounds %"struct.rubinius::Class"* %91, i64 0, i32 0, i32 0, !dbg !32
  %prune_undef367 = icmp eq %"struct.rubinius::Object"* %field366, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !32
  %"select ivar368" = select i1 %prune_undef367, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field366, !dbg !32
  store %"struct.rubinius::Object"* %"select ivar368", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !32
  %cast375 = ptrtoint %"struct.rubinius::Object"* %stack_load421 to i64, !dbg !32
  %masked376 = and i64 %cast375, 3, !dbg !32
  %is_reference377 = icmp eq i64 %masked376, 0, !dbg !32
  br i1 %is_reference377, label %check_class_id378, label %class_fallback370, !dbg !32

check_class_id338:                                ; preds = %continue278
  %class_pos340 = getelementptr %"struct.rubinius::Object"* %self334, i64 0, i32 0, i32 1, !dbg !32
  %ref_class341 = load %"struct.rubinius::Class"** %class_pos340, align 8, !dbg !32
  %class_id_pos342 = getelementptr %"struct.rubinius::Class"* %ref_class341, i64 0, i32 4, !dbg !32
  %class_id343 = load i32* %class_id_pos342, align 4, !dbg !32
  %check_class_id344 = icmp eq i32 %class_id343, 1285, !dbg !32
  br i1 %check_class_id344, label %correct_class339, label %visit_push_ivar_fallback331, !dbg !32

correct_class339:                                 ; preds = %check_class_id338
  %field_pos346 = getelementptr %"struct.rubinius::Object"* %self334, i64 1, i32 0, i32 1, !dbg !32
  %92 = load %"struct.rubinius::Class"** %field_pos346, align 8, !dbg !32
  %field347 = getelementptr inbounds %"struct.rubinius::Class"* %92, i64 0, i32 0, i32 0, !dbg !32
  %prune_undef348 = icmp eq %"struct.rubinius::Object"* %field347, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !32
  %"select ivar349" = select i1 %prune_undef348, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field347, !dbg !32
  br label %continue332, !dbg !32

visit_push_ivar_fallback331:                      ; preds = %check_class_id338, %continue278
  %ivar352 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self334, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !32
  br label %continue332, !dbg !32

continue372:                                      ; preds = %class_fallback370.continue372_crit_edge, %continue405
  %self437 = phi %"struct.rubinius::Object"* [ %self334, %continue405 ], [ %self437.pre, %class_fallback370.continue372_crit_edge ]
  %send_result429 = phi %"struct.rubinius::Object"* [ %99, %continue405 ], [ %call_site_execute426, %class_fallback370.continue372_crit_edge ], !dbg !32
  %93 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 12, !dbg !32
  store %"struct.rubinius::Object"* %send_result429, %"struct.rubinius::Object"** %93, align 8, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !35
  %cast438 = ptrtoint %"struct.rubinius::Object"* %self437 to i64, !dbg !35
  %masked439 = and i64 %cast438, 3, !dbg !35
  %is_reference440 = icmp eq i64 %masked439, 0, !dbg !35
  br i1 %is_reference440, label %check_class_id441, label %visit_push_ivar_fallback434, !dbg !35

check_class_id378:                                ; preds = %continue332
  %class_pos381 = getelementptr %"struct.rubinius::Object"* %stack_load421, i64 0, i32 0, i32 1, !dbg !32
  %ref_class382 = load %"struct.rubinius::Class"** %class_pos381, align 8, !dbg !32
  %class_id_pos383 = getelementptr %"struct.rubinius::Class"* %ref_class382, i64 0, i32 4, !dbg !32
  %class_id384 = load i32* %class_id_pos383, align 4, !dbg !32
  %check_class_id385 = icmp eq i32 %class_id384, 77, !dbg !32
  br i1 %check_class_id385, label %correct_class379, label %class_fallback370, !dbg !32

correct_class379:                                 ; preds = %check_class_id378
  %serial_id_pos386 = getelementptr %"struct.rubinius::Class"* %ref_class382, i64 0, i32 5, !dbg !32
  %serial_id387 = load i32* %serial_id_pos386, align 4, !dbg !32
  %check_serial_id388 = icmp eq i32 %serial_id387, 224, !dbg !32
  br i1 %check_serial_id388, label %correct_serial380, label %serial_fallback371, !dbg !32

correct_serial380:                                ; preds = %correct_class379
  %cast392 = ptrtoint %"struct.rubinius::Object"* %"select ivar368" to i64, !dbg !32
  %masked393 = and i64 %cast392, 3, !dbg !32
  %is_reference394 = icmp eq i64 %masked393, 0, !dbg !32
  br i1 %is_reference394, label %check_class_id395, label %continue391, !dbg !32

serial_fallback371:                               ; preds = %correct_class379
  store i32 39, i32* %65, align 4, !dbg !32
  %94 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 39, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !32
  br label %return_pad126, !dbg !32

check_class_id395:                                ; preds = %correct_serial380
  %class_pos397 = getelementptr %"struct.rubinius::Object"* %"select ivar368", i64 0, i32 0, i32 1, !dbg !32
  %ref_class398 = load %"struct.rubinius::Class"** %class_pos397, align 8, !dbg !32
  %class_id_pos399 = getelementptr %"struct.rubinius::Class"* %ref_class398, i64 0, i32 4, !dbg !32
  %class_id400 = load i32* %class_id_pos399, align 4, !dbg !32
  %check_class_id401 = icmp eq i32 %class_id400, 77, !dbg !32
  br i1 %check_class_id401, label %correct_class396, label %continue391, !dbg !32

correct_class396:                                 ; preds = %check_class_id395
  %arg.value_pos403 = getelementptr %"struct.rubinius::Object"* %"select ivar368", i64 1, !dbg !32
  %95 = bitcast %"struct.rubinius::Object"* %arg.value_pos403 to double*, !dbg !32
  %farg404 = load double* %95, align 8, !dbg !32
  br label %continue405, !dbg !32

continue391:                                      ; preds = %check_class_id395, %correct_serial380
  %masked407 = and i64 %cast392, 1, !dbg !32
  %is_fixnum408 = icmp eq i64 %masked407, 0, !dbg !32
  br i1 %is_fixnum408, label %class_fallback370, label %guarded_body409, !dbg !32

guarded_body409:                                  ; preds = %continue391
  %ashr411 = ashr i64 %cast392, 1, !dbg !32
  %96 = sitofp i64 %ashr411 to double, !dbg !32
  br label %continue405, !dbg !32

continue405:                                      ; preds = %guarded_body409, %correct_class396
  %rhs412 = phi double [ %farg404, %correct_class396 ], [ %96, %guarded_body409 ], !dbg !32
  %self.value_pos416 = getelementptr %"struct.rubinius::Object"* %stack_load421, i64 1, !dbg !32
  %97 = bitcast %"struct.rubinius::Object"* %self.value_pos416 to double*, !dbg !32
  %fself417 = load double* %97, align 8, !dbg !32
  %float.sub418 = fsub double %fself417, %rhs412, !dbg !32
  %result419 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !32, !rbx-classid !33
  %98 = getelementptr %"struct.rubinius::Float"* %result419, i64 0, i32 1, !dbg !32
  store double %float.sub418, double* %98, align 8, !dbg !32
  %99 = getelementptr inbounds %"struct.rubinius::Float"* %result419, i64 0, i32 0, i32 0, !dbg !32
  br label %continue372, !dbg !32

class_fallback370:                                ; preds = %continue391, %check_class_id378, %continue332
  store %"struct.rubinius::Object"* %stack_load421, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !32
  store i32 1, i32* %out_args_total, align 8, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !32
  %cache_const423 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548720 to %"struct.rubinius::CallSite"**), align 16, !dbg !32
  %execute_pos424 = getelementptr %"struct.rubinius::CallSite"* %cache_const423, i64 0, i32 2, !dbg !32
  %execute425 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos424, align 8, !dbg !32
  store i32 39, i32* %65, align 4, !dbg !32
  %call_site_execute426 = call %"struct.rubinius::Object"* %execute425(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const423, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check428 = icmp eq %"struct.rubinius::Object"* %call_site_execute426, null, !dbg !32
  br i1 %null_check428, label %bail_out159, label %class_fallback370.continue372_crit_edge, !dbg !32

class_fallback370.continue372_crit_edge:          ; preds = %class_fallback370
  %self437.pre = load %"struct.rubinius::Object"** %70, align 8, !dbg !35
  br label %continue372, !dbg !32

continue435:                                      ; preds = %visit_push_ivar_fallback434, %correct_class442
  %stack_load524 = phi %"struct.rubinius::Object"* [ %"select ivar452", %correct_class442 ], [ %ivar455, %visit_push_ivar_fallback434 ]
  store %"struct.rubinius::Object"* %stack_load524, %"struct.rubinius::Object"** %stack140, align 8, !dbg !35
  %local458 = load %"struct.rubinius::Object"** %81, align 8, !dbg !35, !rbx-classid !34
  store %"struct.rubinius::Object"* %local458, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !35
  %100 = getelementptr %"struct.rubinius::Object"* %local458, i64 1, i32 0, i32 2, !dbg !35
  %field469 = load %"struct.rubinius::Object"** %100, align 8, !dbg !35
  %prune_undef470 = icmp eq %"struct.rubinius::Object"* %field469, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !35
  %"select ivar471" = select i1 %prune_undef470, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field469, !dbg !35
  store %"struct.rubinius::Object"* %"select ivar471", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !35
  %cast478 = ptrtoint %"struct.rubinius::Object"* %stack_load524 to i64, !dbg !35
  %masked479 = and i64 %cast478, 3, !dbg !35
  %is_reference480 = icmp eq i64 %masked479, 0, !dbg !35
  br i1 %is_reference480, label %check_class_id481, label %class_fallback473, !dbg !35

check_class_id441:                                ; preds = %continue372
  %class_pos443 = getelementptr %"struct.rubinius::Object"* %self437, i64 0, i32 0, i32 1, !dbg !35
  %ref_class444 = load %"struct.rubinius::Class"** %class_pos443, align 8, !dbg !35
  %class_id_pos445 = getelementptr %"struct.rubinius::Class"* %ref_class444, i64 0, i32 4, !dbg !35
  %class_id446 = load i32* %class_id_pos445, align 4, !dbg !35
  %check_class_id447 = icmp eq i32 %class_id446, 1285, !dbg !35
  br i1 %check_class_id447, label %correct_class442, label %visit_push_ivar_fallback434, !dbg !35

correct_class442:                                 ; preds = %check_class_id441
  %101 = getelementptr %"struct.rubinius::Object"* %self437, i64 1, i32 0, i32 2, !dbg !35
  %field450 = load %"struct.rubinius::Object"** %101, align 8, !dbg !35
  %prune_undef451 = icmp eq %"struct.rubinius::Object"* %field450, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !35
  %"select ivar452" = select i1 %prune_undef451, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field450, !dbg !35
  br label %continue435, !dbg !35

visit_push_ivar_fallback434:                      ; preds = %check_class_id441, %continue372
  %ivar455 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self437, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !35
  br label %continue435, !dbg !35

continue475:                                      ; preds = %class_fallback473, %continue508
  %send_result532 = phi %"struct.rubinius::Object"* [ %109, %continue508 ], [ %call_site_execute529, %class_fallback473 ], !dbg !35
  store %"struct.rubinius::Object"* %send_result532, %"struct.rubinius::Object"** %stack140, align 8, !dbg !35
  %102 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 13, !dbg !35
  store %"struct.rubinius::Object"* %send_result532, %"struct.rubinius::Object"** %102, align 8, !dbg !35
  %constant_cache538 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !36
  %constant_cache_pos539 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 4, !dbg !36
  %constant_scope540 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos539, align 8, !dbg !36
  %103 = load %"struct.rubinius::Object"** %62, align 8, !dbg !36
  %frame_scope542 = bitcast %"struct.rubinius::Object"* %103 to %"struct.rubinius::ConstantScope"*, !dbg !36
  %same_scope543 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope540, %frame_scope542, !dbg !36
  br i1 %same_scope543, label %check_serial544, label %use_call546, !dbg !36

check_class_id481:                                ; preds = %continue435
  %class_pos484 = getelementptr %"struct.rubinius::Object"* %stack_load524, i64 0, i32 0, i32 1, !dbg !35
  %ref_class485 = load %"struct.rubinius::Class"** %class_pos484, align 8, !dbg !35
  %class_id_pos486 = getelementptr %"struct.rubinius::Class"* %ref_class485, i64 0, i32 4, !dbg !35
  %class_id487 = load i32* %class_id_pos486, align 4, !dbg !35
  %check_class_id488 = icmp eq i32 %class_id487, 77, !dbg !35
  br i1 %check_class_id488, label %correct_class482, label %class_fallback473, !dbg !35

correct_class482:                                 ; preds = %check_class_id481
  %serial_id_pos489 = getelementptr %"struct.rubinius::Class"* %ref_class485, i64 0, i32 5, !dbg !35
  %serial_id490 = load i32* %serial_id_pos489, align 4, !dbg !35
  %check_serial_id491 = icmp eq i32 %serial_id490, 224, !dbg !35
  br i1 %check_serial_id491, label %correct_serial483, label %serial_fallback474, !dbg !35

correct_serial483:                                ; preds = %correct_class482
  %cast495 = ptrtoint %"struct.rubinius::Object"* %"select ivar471" to i64, !dbg !35
  %masked496 = and i64 %cast495, 3, !dbg !35
  %is_reference497 = icmp eq i64 %masked496, 0, !dbg !35
  br i1 %is_reference497, label %check_class_id498, label %continue494, !dbg !35

serial_fallback474:                               ; preds = %correct_class482
  store i32 52, i32* %65, align 4, !dbg !35
  %104 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 52, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !35
  br label %return_pad126, !dbg !35

check_class_id498:                                ; preds = %correct_serial483
  %class_pos500 = getelementptr %"struct.rubinius::Object"* %"select ivar471", i64 0, i32 0, i32 1, !dbg !35
  %ref_class501 = load %"struct.rubinius::Class"** %class_pos500, align 8, !dbg !35
  %class_id_pos502 = getelementptr %"struct.rubinius::Class"* %ref_class501, i64 0, i32 4, !dbg !35
  %class_id503 = load i32* %class_id_pos502, align 4, !dbg !35
  %check_class_id504 = icmp eq i32 %class_id503, 77, !dbg !35
  br i1 %check_class_id504, label %correct_class499, label %continue494, !dbg !35

correct_class499:                                 ; preds = %check_class_id498
  %arg.value_pos506 = getelementptr %"struct.rubinius::Object"* %"select ivar471", i64 1, !dbg !35
  %105 = bitcast %"struct.rubinius::Object"* %arg.value_pos506 to double*, !dbg !35
  %farg507 = load double* %105, align 8, !dbg !35
  br label %continue508, !dbg !35

continue494:                                      ; preds = %check_class_id498, %correct_serial483
  %masked510 = and i64 %cast495, 1, !dbg !35
  %is_fixnum511 = icmp eq i64 %masked510, 0, !dbg !35
  br i1 %is_fixnum511, label %class_fallback473, label %guarded_body512, !dbg !35

guarded_body512:                                  ; preds = %continue494
  %ashr514 = ashr i64 %cast495, 1, !dbg !35
  %106 = sitofp i64 %ashr514 to double, !dbg !35
  br label %continue508, !dbg !35

continue508:                                      ; preds = %guarded_body512, %correct_class499
  %rhs515 = phi double [ %farg507, %correct_class499 ], [ %106, %guarded_body512 ], !dbg !35
  %self.value_pos519 = getelementptr %"struct.rubinius::Object"* %stack_load524, i64 1, !dbg !35
  %107 = bitcast %"struct.rubinius::Object"* %self.value_pos519 to double*, !dbg !35
  %fself520 = load double* %107, align 8, !dbg !35
  %float.sub521 = fsub double %fself520, %rhs515, !dbg !35
  %result522 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !35, !rbx-classid !33
  %108 = getelementptr %"struct.rubinius::Float"* %result522, i64 0, i32 1, !dbg !35
  store double %float.sub521, double* %108, align 8, !dbg !35
  %109 = getelementptr inbounds %"struct.rubinius::Float"* %result522, i64 0, i32 0, i32 0, !dbg !35
  br label %continue475, !dbg !35

class_fallback473:                                ; preds = %continue494, %check_class_id481, %continue435
  store %"struct.rubinius::Object"* %stack_load524, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !35
  store i32 1, i32* %out_args_total, align 8, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !35
  %cache_const526 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548824 to %"struct.rubinius::CallSite"**), align 8, !dbg !35
  %execute_pos527 = getelementptr %"struct.rubinius::CallSite"* %cache_const526, i64 0, i32 2, !dbg !35
  %execute528 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos527, align 8, !dbg !35
  store i32 52, i32* %65, align 4, !dbg !35
  %call_site_execute529 = call %"struct.rubinius::Object"* %execute528(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const526, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check531 = icmp eq %"struct.rubinius::Object"* %call_site_execute529, null, !dbg !35
  br i1 %null_check531, label %bail_out159, label %continue475, !dbg !35

check_serial544:                                  ; preds = %continue475
  %global_serial537 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !36
  %serial_pos548 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 7, !dbg !36
  %serial549 = load i32* %serial_pos548, align 4, !dbg !36
  %use_cache550 = icmp eq i32 %global_serial537, %serial549, !dbg !36
  br i1 %use_cache550, label %use_cache545, label %use_call546, !dbg !36

use_cache545:                                     ; preds = %check_serial544
  %value_pos551 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache538, i64 0, i32 2, !dbg !36
  %cached_value552 = load %"struct.rubinius::Object"** %value_pos551, align 8, !dbg !36
  br label %continue547, !dbg !36

use_call546:                                      ; preds = %check_serial544, %continue475
  store i32 58, i32* %65, align 4, !dbg !36
  %push_const_fast553 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::ConstantCache"** inttoptr (i64 26548872 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !36
  %null_check556 = icmp eq %"struct.rubinius::Object"* %push_const_fast553, null, !dbg !36
  br i1 %null_check556, label %bail_out159, label %continue547, !dbg !36

continue547:                                      ; preds = %use_call546, %use_cache545
  %constant557 = phi %"struct.rubinius::Object"* [ %cached_value552, %use_cache545 ], [ %push_const_fast553, %use_call546 ], !dbg !36, !rbx-classid !37
  store %"struct.rubinius::Object"* %constant557, %"struct.rubinius::Object"** %stack140, align 8, !dbg !36
  %local560 = load %"struct.rubinius::Object"** %84, align 8, !dbg !36
  store %"struct.rubinius::Object"* %local560, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  %stack_pos564 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 11, !dbg !36
  store %"struct.rubinius::Object"* %local560, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !36
  %cast570 = ptrtoint %"struct.rubinius::Object"* %local560 to i64, !dbg !36
  %masked571 = and i64 %cast570, 3, !dbg !36
  %is_reference572 = icmp eq i64 %masked571, 0, !dbg !36
  br i1 %is_reference572, label %check_class_id573, label %class_fallback565, !dbg !36

continue567:                                      ; preds = %class_fallback565, %correct_class591
  %send_result623 = phi %"struct.rubinius::Object"* [ %113, %correct_class591 ], [ %call_site_execute620, %class_fallback565 ], !dbg !36
  store %"struct.rubinius::Object"* %send_result623, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  %local626 = load %"struct.rubinius::Object"** %93, align 8, !dbg !36
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !36
  %stack_pos630 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 12, !dbg !36
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !36
  %cast636 = ptrtoint %"struct.rubinius::Object"* %local626 to i64, !dbg !36
  %masked637 = and i64 %cast636, 3, !dbg !36
  %is_reference638 = icmp eq i64 %masked637, 0, !dbg !36
  br i1 %is_reference638, label %check_class_id639, label %class_fallback631, !dbg !36

check_class_id573:                                ; preds = %continue547
  %class_pos576 = getelementptr %"struct.rubinius::Object"* %local560, i64 0, i32 0, i32 1, !dbg !36
  %ref_class577 = load %"struct.rubinius::Class"** %class_pos576, align 8, !dbg !36
  %class_id_pos578 = getelementptr %"struct.rubinius::Class"* %ref_class577, i64 0, i32 4, !dbg !36
  %class_id579 = load i32* %class_id_pos578, align 4, !dbg !36
  %check_class_id580 = icmp eq i32 %class_id579, 77, !dbg !36
  br i1 %check_class_id580, label %correct_class574, label %class_fallback565, !dbg !36

correct_class574:                                 ; preds = %check_class_id573
  %serial_id_pos581 = getelementptr %"struct.rubinius::Class"* %ref_class577, i64 0, i32 5, !dbg !36
  %serial_id582 = load i32* %serial_id_pos581, align 4, !dbg !36
  %check_serial_id583 = icmp eq i32 %serial_id582, 224, !dbg !36
  br i1 %check_serial_id583, label %correct_class591, label %serial_fallback566, !dbg !36

serial_fallback566:                               ; preds = %correct_class574
  store i32 64, i32* %65, align 4, !dbg !36
  %110 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 64, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

correct_class591:                                 ; preds = %correct_class574
  %arg.value_pos598 = getelementptr %"struct.rubinius::Object"* %local560, i64 1, !dbg !36
  %111 = bitcast %"struct.rubinius::Object"* %arg.value_pos598 to double*, !dbg !36
  %farg599 = load double* %111, align 8, !dbg !36
  %float.mul = fmul double %farg599, %farg599, !dbg !36
  %result613 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !33
  %112 = getelementptr %"struct.rubinius::Float"* %result613, i64 0, i32 1, !dbg !36
  store double %float.mul, double* %112, align 8, !dbg !36
  %113 = getelementptr inbounds %"struct.rubinius::Float"* %result613, i64 0, i32 0, i32 0, !dbg !36
  br label %continue567, !dbg !36

class_fallback565:                                ; preds = %check_class_id573, %continue547
  store %"struct.rubinius::Object"* %local560, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !36
  store i32 1, i32* %out_args_total, align 8, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !36
  %cache_const617 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548920 to %"struct.rubinius::CallSite"**), align 8, !dbg !36
  %execute_pos618 = getelementptr %"struct.rubinius::CallSite"* %cache_const617, i64 0, i32 2, !dbg !36
  %execute619 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos618, align 8, !dbg !36
  store i32 64, i32* %65, align 4, !dbg !36
  %call_site_execute620 = call %"struct.rubinius::Object"* %execute619(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const617, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check622 = icmp eq %"struct.rubinius::Object"* %call_site_execute620, null, !dbg !36
  br i1 %null_check622, label %bail_out159, label %continue567, !dbg !36

continue633:                                      ; preds = %class_fallback631.continue633_crit_edge, %correct_class657
  %stack_load696 = phi %"struct.rubinius::Object"* [ %send_result623, %correct_class657 ], [ %stack_load696.pre, %class_fallback631.continue633_crit_edge ]
  %send_result690 = phi %"struct.rubinius::Object"* [ %117, %correct_class657 ], [ %call_site_execute687, %class_fallback631.continue633_crit_edge ], !dbg !36
  store %"struct.rubinius::Object"* %send_result690, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !36
  %cast697 = ptrtoint %"struct.rubinius::Object"* %stack_load696 to i64, !dbg !36
  %masked698 = and i64 %cast697, 3, !dbg !36
  %is_reference699 = icmp eq i64 %masked698, 0, !dbg !36
  br i1 %is_reference699, label %check_class_id700, label %class_fallback692, !dbg !36

check_class_id639:                                ; preds = %continue567
  %class_pos642 = getelementptr %"struct.rubinius::Object"* %local626, i64 0, i32 0, i32 1, !dbg !36
  %ref_class643 = load %"struct.rubinius::Class"** %class_pos642, align 8, !dbg !36
  %class_id_pos644 = getelementptr %"struct.rubinius::Class"* %ref_class643, i64 0, i32 4, !dbg !36
  %class_id645 = load i32* %class_id_pos644, align 4, !dbg !36
  %check_class_id646 = icmp eq i32 %class_id645, 77, !dbg !36
  br i1 %check_class_id646, label %correct_class640, label %class_fallback631, !dbg !36

correct_class640:                                 ; preds = %check_class_id639
  %serial_id_pos647 = getelementptr %"struct.rubinius::Class"* %ref_class643, i64 0, i32 5, !dbg !36
  %serial_id648 = load i32* %serial_id_pos647, align 4, !dbg !36
  %check_serial_id649 = icmp eq i32 %serial_id648, 224, !dbg !36
  br i1 %check_serial_id649, label %correct_class657, label %serial_fallback632, !dbg !36

serial_fallback632:                               ; preds = %correct_class640
  store i32 71, i32* %65, align 4, !dbg !36
  %114 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 71, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

correct_class657:                                 ; preds = %correct_class640
  %arg.value_pos664 = getelementptr %"struct.rubinius::Object"* %local626, i64 1, !dbg !36
  %115 = bitcast %"struct.rubinius::Object"* %arg.value_pos664 to double*, !dbg !36
  %farg665 = load double* %115, align 8, !dbg !36
  %float.mul679 = fmul double %farg665, %farg665, !dbg !36
  %result680 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !33
  %116 = getelementptr %"struct.rubinius::Float"* %result680, i64 0, i32 1, !dbg !36
  store double %float.mul679, double* %116, align 8, !dbg !36
  %117 = getelementptr inbounds %"struct.rubinius::Float"* %result680, i64 0, i32 0, i32 0, !dbg !36
  br label %continue633, !dbg !36

class_fallback631:                                ; preds = %check_class_id639, %continue567
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !36
  store i32 1, i32* %out_args_total, align 8, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos630, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !36
  %cache_const684 = load %"struct.rubinius::CallSite"** inttoptr (i64 26548976 to %"struct.rubinius::CallSite"**), align 16, !dbg !36
  %execute_pos685 = getelementptr %"struct.rubinius::CallSite"* %cache_const684, i64 0, i32 2, !dbg !36
  %execute686 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos685, align 8, !dbg !36
  store i32 71, i32* %65, align 4, !dbg !36
  %call_site_execute687 = call %"struct.rubinius::Object"* %execute686(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const684, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check689 = icmp eq %"struct.rubinius::Object"* %call_site_execute687, null, !dbg !36
  br i1 %null_check689, label %bail_out159, label %class_fallback631.continue633_crit_edge, !dbg !36

class_fallback631.continue633_crit_edge:          ; preds = %class_fallback631
  %stack_load696.pre = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  br label %continue633, !dbg !36

continue694:                                      ; preds = %class_fallback692, %continue727
  %send_result750 = phi %"struct.rubinius::Object"* [ %123, %continue727 ], [ %call_site_execute747, %class_fallback692 ], !dbg !36
  store %"struct.rubinius::Object"* %send_result750, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  %local753 = load %"struct.rubinius::Object"** %102, align 8, !dbg !36
  store %"struct.rubinius::Object"* %local753, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !36
  store %"struct.rubinius::Object"* %local753, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !36
  %cast763 = ptrtoint %"struct.rubinius::Object"* %local753 to i64, !dbg !36
  %masked764 = and i64 %cast763, 3, !dbg !36
  %is_reference765 = icmp eq i64 %masked764, 0, !dbg !36
  br i1 %is_reference765, label %check_class_id766, label %class_fallback758, !dbg !36

check_class_id700:                                ; preds = %continue633
  %class_pos703 = getelementptr %"struct.rubinius::Object"* %stack_load696, i64 0, i32 0, i32 1, !dbg !36
  %ref_class704 = load %"struct.rubinius::Class"** %class_pos703, align 8, !dbg !36
  %class_id_pos705 = getelementptr %"struct.rubinius::Class"* %ref_class704, i64 0, i32 4, !dbg !36
  %class_id706 = load i32* %class_id_pos705, align 4, !dbg !36
  %check_class_id707 = icmp eq i32 %class_id706, 77, !dbg !36
  br i1 %check_class_id707, label %correct_class701, label %class_fallback692, !dbg !36

correct_class701:                                 ; preds = %check_class_id700
  %serial_id_pos708 = getelementptr %"struct.rubinius::Class"* %ref_class704, i64 0, i32 5, !dbg !36
  %serial_id709 = load i32* %serial_id_pos708, align 4, !dbg !36
  %check_serial_id710 = icmp eq i32 %serial_id709, 224, !dbg !36
  br i1 %check_serial_id710, label %correct_serial702, label %serial_fallback693, !dbg !36

correct_serial702:                                ; preds = %correct_class701
  %cast714 = ptrtoint %"struct.rubinius::Object"* %send_result690 to i64, !dbg !36
  %masked715 = and i64 %cast714, 3, !dbg !36
  %is_reference716 = icmp eq i64 %masked715, 0, !dbg !36
  br i1 %is_reference716, label %check_class_id717, label %continue713, !dbg !36

serial_fallback693:                               ; preds = %correct_class701
  store i32 74, i32* %65, align 4, !dbg !36
  %118 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 74, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

check_class_id717:                                ; preds = %correct_serial702
  %class_pos719 = getelementptr %"struct.rubinius::Object"* %send_result690, i64 0, i32 0, i32 1, !dbg !36
  %ref_class720 = load %"struct.rubinius::Class"** %class_pos719, align 8, !dbg !36
  %class_id_pos721 = getelementptr %"struct.rubinius::Class"* %ref_class720, i64 0, i32 4, !dbg !36
  %class_id722 = load i32* %class_id_pos721, align 4, !dbg !36
  %check_class_id723 = icmp eq i32 %class_id722, 77, !dbg !36
  br i1 %check_class_id723, label %correct_class718, label %continue713, !dbg !36

correct_class718:                                 ; preds = %check_class_id717
  %arg.value_pos725 = getelementptr %"struct.rubinius::Object"* %send_result690, i64 1, !dbg !36
  %119 = bitcast %"struct.rubinius::Object"* %arg.value_pos725 to double*, !dbg !36
  %farg726 = load double* %119, align 8, !dbg !36
  br label %continue727, !dbg !36

continue713:                                      ; preds = %check_class_id717, %correct_serial702
  %masked729 = and i64 %cast714, 1, !dbg !36
  %is_fixnum730 = icmp eq i64 %masked729, 0, !dbg !36
  br i1 %is_fixnum730, label %class_fallback692, label %guarded_body731, !dbg !36

guarded_body731:                                  ; preds = %continue713
  %ashr733 = ashr i64 %cast714, 1, !dbg !36
  %120 = sitofp i64 %ashr733 to double, !dbg !36
  br label %continue727, !dbg !36

continue727:                                      ; preds = %guarded_body731, %correct_class718
  %rhs734 = phi double [ %farg726, %correct_class718 ], [ %120, %guarded_body731 ], !dbg !36
  %self.value_pos738 = getelementptr %"struct.rubinius::Object"* %stack_load696, i64 1, !dbg !36
  %121 = bitcast %"struct.rubinius::Object"* %self.value_pos738 to double*, !dbg !36
  %fself739 = load double* %121, align 8, !dbg !36
  %float.add = fadd double %rhs734, %fself739, !dbg !36
  %result740 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !33
  %122 = getelementptr %"struct.rubinius::Float"* %result740, i64 0, i32 1, !dbg !36
  store double %float.add, double* %122, align 8, !dbg !36
  %123 = getelementptr inbounds %"struct.rubinius::Float"* %result740, i64 0, i32 0, i32 0, !dbg !36
  br label %continue694, !dbg !36

class_fallback692:                                ; preds = %continue713, %check_class_id700, %continue633
  store %"struct.rubinius::Object"* %stack_load696, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !36
  store i32 1, i32* %out_args_total, align 8, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !36
  %cache_const744 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549000 to %"struct.rubinius::CallSite"**), align 8, !dbg !36
  %execute_pos745 = getelementptr %"struct.rubinius::CallSite"* %cache_const744, i64 0, i32 2, !dbg !36
  %execute746 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos745, align 8, !dbg !36
  store i32 74, i32* %65, align 4, !dbg !36
  %call_site_execute747 = call %"struct.rubinius::Object"* %execute746(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const744, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check749 = icmp eq %"struct.rubinius::Object"* %call_site_execute747, null, !dbg !36
  br i1 %null_check749, label %bail_out159, label %continue694, !dbg !36

continue760:                                      ; preds = %class_fallback758.continue760_crit_edge, %correct_class784
  %stack_load823 = phi %"struct.rubinius::Object"* [ %send_result750, %correct_class784 ], [ %stack_load823.pre, %class_fallback758.continue760_crit_edge ]
  %send_result817 = phi %"struct.rubinius::Object"* [ %127, %correct_class784 ], [ %call_site_execute814, %class_fallback758.continue760_crit_edge ], !dbg !36
  store %"struct.rubinius::Object"* %send_result817, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !36
  %cast824 = ptrtoint %"struct.rubinius::Object"* %stack_load823 to i64, !dbg !36
  %masked825 = and i64 %cast824, 3, !dbg !36
  %is_reference826 = icmp eq i64 %masked825, 0, !dbg !36
  br i1 %is_reference826, label %check_class_id827, label %class_fallback819, !dbg !36

check_class_id766:                                ; preds = %continue694
  %class_pos769 = getelementptr %"struct.rubinius::Object"* %local753, i64 0, i32 0, i32 1, !dbg !36
  %ref_class770 = load %"struct.rubinius::Class"** %class_pos769, align 8, !dbg !36
  %class_id_pos771 = getelementptr %"struct.rubinius::Class"* %ref_class770, i64 0, i32 4, !dbg !36
  %class_id772 = load i32* %class_id_pos771, align 4, !dbg !36
  %check_class_id773 = icmp eq i32 %class_id772, 77, !dbg !36
  br i1 %check_class_id773, label %correct_class767, label %class_fallback758, !dbg !36

correct_class767:                                 ; preds = %check_class_id766
  %serial_id_pos774 = getelementptr %"struct.rubinius::Class"* %ref_class770, i64 0, i32 5, !dbg !36
  %serial_id775 = load i32* %serial_id_pos774, align 4, !dbg !36
  %check_serial_id776 = icmp eq i32 %serial_id775, 224, !dbg !36
  br i1 %check_serial_id776, label %correct_class784, label %serial_fallback759, !dbg !36

serial_fallback759:                               ; preds = %correct_class767
  store i32 81, i32* %65, align 4, !dbg !36
  %124 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 81, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

correct_class784:                                 ; preds = %correct_class767
  %arg.value_pos791 = getelementptr %"struct.rubinius::Object"* %local753, i64 1, !dbg !36
  %125 = bitcast %"struct.rubinius::Object"* %arg.value_pos791 to double*, !dbg !36
  %farg792 = load double* %125, align 8, !dbg !36
  %float.mul806 = fmul double %farg792, %farg792, !dbg !36
  %result807 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !33
  %126 = getelementptr %"struct.rubinius::Float"* %result807, i64 0, i32 1, !dbg !36
  store double %float.mul806, double* %126, align 8, !dbg !36
  %127 = getelementptr inbounds %"struct.rubinius::Float"* %result807, i64 0, i32 0, i32 0, !dbg !36
  br label %continue760, !dbg !36

class_fallback758:                                ; preds = %check_class_id766, %continue694
  store %"struct.rubinius::Object"* %local753, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !36
  store i32 1, i32* %out_args_total, align 8, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos630, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !36
  %cache_const811 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549056 to %"struct.rubinius::CallSite"**), align 64, !dbg !36
  %execute_pos812 = getelementptr %"struct.rubinius::CallSite"* %cache_const811, i64 0, i32 2, !dbg !36
  %execute813 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos812, align 8, !dbg !36
  store i32 81, i32* %65, align 4, !dbg !36
  %call_site_execute814 = call %"struct.rubinius::Object"* %execute813(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const811, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute814, null, !dbg !36
  br i1 %null_check816, label %bail_out159, label %class_fallback758.continue760_crit_edge, !dbg !36

class_fallback758.continue760_crit_edge:          ; preds = %class_fallback758
  %stack_load823.pre = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  br label %continue760, !dbg !36

continue821:                                      ; preds = %class_fallback819, %continue854
  %local985 = phi %"struct.rubinius::Object"* [ %133, %continue854 ], [ %call_site_execute875, %class_fallback819 ], !dbg !36
  store %"struct.rubinius::Object"* %local985, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !36
  %stack_load884 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !36, !rbx-classid !37
  %cast885 = ptrtoint %"struct.rubinius::Object"* %stack_load884 to i64, !dbg !36
  %masked886 = and i64 %cast885, 3, !dbg !36
  %is_reference887 = icmp eq i64 %masked886, 0, !dbg !36
  br i1 %is_reference887, label %check_class_id888, label %class_fallback880, !dbg !36

check_class_id827:                                ; preds = %continue760
  %class_pos830 = getelementptr %"struct.rubinius::Object"* %stack_load823, i64 0, i32 0, i32 1, !dbg !36
  %ref_class831 = load %"struct.rubinius::Class"** %class_pos830, align 8, !dbg !36
  %class_id_pos832 = getelementptr %"struct.rubinius::Class"* %ref_class831, i64 0, i32 4, !dbg !36
  %class_id833 = load i32* %class_id_pos832, align 4, !dbg !36
  %check_class_id834 = icmp eq i32 %class_id833, 77, !dbg !36
  br i1 %check_class_id834, label %correct_class828, label %class_fallback819, !dbg !36

correct_class828:                                 ; preds = %check_class_id827
  %serial_id_pos835 = getelementptr %"struct.rubinius::Class"* %ref_class831, i64 0, i32 5, !dbg !36
  %serial_id836 = load i32* %serial_id_pos835, align 4, !dbg !36
  %check_serial_id837 = icmp eq i32 %serial_id836, 224, !dbg !36
  br i1 %check_serial_id837, label %correct_serial829, label %serial_fallback820, !dbg !36

correct_serial829:                                ; preds = %correct_class828
  %cast841 = ptrtoint %"struct.rubinius::Object"* %send_result817 to i64, !dbg !36
  %masked842 = and i64 %cast841, 3, !dbg !36
  %is_reference843 = icmp eq i64 %masked842, 0, !dbg !36
  br i1 %is_reference843, label %check_class_id844, label %continue840, !dbg !36

serial_fallback820:                               ; preds = %correct_class828
  store i32 84, i32* %65, align 4, !dbg !36
  %128 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 84, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

check_class_id844:                                ; preds = %correct_serial829
  %class_pos846 = getelementptr %"struct.rubinius::Object"* %send_result817, i64 0, i32 0, i32 1, !dbg !36
  %ref_class847 = load %"struct.rubinius::Class"** %class_pos846, align 8, !dbg !36
  %class_id_pos848 = getelementptr %"struct.rubinius::Class"* %ref_class847, i64 0, i32 4, !dbg !36
  %class_id849 = load i32* %class_id_pos848, align 4, !dbg !36
  %check_class_id850 = icmp eq i32 %class_id849, 77, !dbg !36
  br i1 %check_class_id850, label %correct_class845, label %continue840, !dbg !36

correct_class845:                                 ; preds = %check_class_id844
  %arg.value_pos852 = getelementptr %"struct.rubinius::Object"* %send_result817, i64 1, !dbg !36
  %129 = bitcast %"struct.rubinius::Object"* %arg.value_pos852 to double*, !dbg !36
  %farg853 = load double* %129, align 8, !dbg !36
  br label %continue854, !dbg !36

continue840:                                      ; preds = %check_class_id844, %correct_serial829
  %masked856 = and i64 %cast841, 1, !dbg !36
  %is_fixnum857 = icmp eq i64 %masked856, 0, !dbg !36
  br i1 %is_fixnum857, label %class_fallback819, label %guarded_body858, !dbg !36

guarded_body858:                                  ; preds = %continue840
  %ashr860 = ashr i64 %cast841, 1, !dbg !36
  %130 = sitofp i64 %ashr860 to double, !dbg !36
  br label %continue854, !dbg !36

continue854:                                      ; preds = %guarded_body858, %correct_class845
  %rhs861 = phi double [ %farg853, %correct_class845 ], [ %130, %guarded_body858 ], !dbg !36
  %self.value_pos865 = getelementptr %"struct.rubinius::Object"* %stack_load823, i64 1, !dbg !36
  %131 = bitcast %"struct.rubinius::Object"* %self.value_pos865 to double*, !dbg !36
  %fself866 = load double* %131, align 8, !dbg !36
  %float.add867 = fadd double %rhs861, %fself866, !dbg !36
  %result868 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !36, !rbx-classid !33
  %132 = getelementptr %"struct.rubinius::Float"* %result868, i64 0, i32 1, !dbg !36
  store double %float.add867, double* %132, align 8, !dbg !36
  %133 = getelementptr inbounds %"struct.rubinius::Float"* %result868, i64 0, i32 0, i32 0, !dbg !36
  br label %continue821, !dbg !36

class_fallback819:                                ; preds = %continue840, %check_class_id827, %continue760
  store %"struct.rubinius::Object"* %stack_load823, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !36
  store i32 1, i32* %out_args_total, align 8, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !36
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549080 to %"struct.rubinius::CallSite"**), align 8, !dbg !36
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i64 0, i32 2, !dbg !36
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, align 8, !dbg !36
  store i32 84, i32* %65, align 4, !dbg !36
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !36
  br i1 %null_check877, label %bail_out159, label %continue821, !dbg !36

check_class_id888:                                ; preds = %continue821
  %class_pos891 = getelementptr %"struct.rubinius::Object"* %stack_load884, i64 0, i32 0, i32 1, !dbg !36
  %ref_class892 = load %"struct.rubinius::Class"** %class_pos891, align 8, !dbg !36
  %class_id_pos893 = getelementptr %"struct.rubinius::Class"* %ref_class892, i64 0, i32 4, !dbg !36
  %class_id894 = load i32* %class_id_pos893, align 4, !dbg !36
  %check_class_id895 = icmp eq i32 %class_id894, 779, !dbg !36
  br i1 %check_class_id895, label %correct_class889, label %class_fallback880, !dbg !36

correct_class889:                                 ; preds = %check_class_id888
  %serial_id_pos896 = getelementptr %"struct.rubinius::Class"* %ref_class892, i64 0, i32 5, !dbg !36
  %serial_id897 = load i32* %serial_id_pos896, align 4, !dbg !36
  %check_serial_id898 = icmp eq i32 %serial_id897, 7, !dbg !36
  br i1 %check_serial_id898, label %correct_serial890, label %serial_fallback881, !dbg !36

class_fallback880:                                ; preds = %check_class_id888, %continue821
  store i32 87, i32* %65, align 4, !dbg !36
  %134 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !36
  br label %return_pad126, !dbg !36

correct_serial890:                                ; preds = %correct_class889
  %call_frame908 = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk9073622 to %"struct.rubinius::CallFrame"*, !dbg !38
  %stack909 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 9, !dbg !38
  %135 = getelementptr inbounds [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 0, !dbg !38
  %call_frame139.c = bitcast [25 x %"struct.rubinius::Object"*]* %cfstk1383620 to %"struct.rubinius::Object"*, !dbg !38
  store %"struct.rubinius::Object"* %call_frame139.c, %"struct.rubinius::Object"** %135, align 8, !dbg !38
  %136 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 2, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 140495703216576 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %136, align 8, !dbg !38
  %compiled_code912 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140495703216576 to %"struct.rubinius::CompiledCode"**), align 64, !dbg !38
  %137 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 3, !dbg !38
  %compiled_code912.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code912, i64 0, i32 0, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %compiled_code912.c, %"struct.rubinius::Object"** %137, align 8, !dbg !38
  %constant_scope_pos913 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code912, i64 0, i32 13, !dbg !38
  %constant_scope914 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos913, align 8, !dbg !38
  %138 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 1, !dbg !38
  %constant_scope914.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope914 to %"struct.rubinius::Object"*, !dbg !38
  store %"struct.rubinius::Object"* %constant_scope914.c, %"struct.rubinius::Object"** %138, align 8, !dbg !38
  %139 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 4, !dbg !38
  %140 = bitcast %"struct.rubinius::Object"** %139 to i32*, !dbg !38
  store i32 12, i32* %140, align 8, !dbg !38
  %141 = getelementptr %"struct.rubinius::CallFrame"* %call_frame908, i64 0, i32 5, !dbg !38
  store i32 0, i32* %141, align 4, !dbg !38
  %142 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 7, !dbg !38
  %vars911.c = bitcast [7 x %"struct.rubinius::Object"*]* %var_mem9103623 to %"struct.rubinius::Object"*, !dbg !38
  store %"struct.rubinius::Object"* %vars911.c, %"struct.rubinius::Object"** %142, align 8, !dbg !38
  %stack_pos916 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 10, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !38
  %stack_pos917 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 11, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos917, align 8, !dbg !38
  %stack_pos918 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk9073622, i64 0, i64 12, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos918, align 8, !dbg !38
  %module919 = load %"struct.rubinius::Module"** inttoptr (i64 140495703216592 to %"struct.rubinius::Module"**), align 16, !dbg !38
  %143 = getelementptr inbounds [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 0, !dbg !38
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %143, align 8, !dbg !38
  %144 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 2, !dbg !38
  store %"struct.rubinius::Object"* %stack_load884, %"struct.rubinius::Object"** %144, align 8, !dbg !38
  %145 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 4, !dbg !38
  %module919.c = getelementptr inbounds %"struct.rubinius::Module"* %module919, i64 0, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %module919.c, %"struct.rubinius::Object"** %145, align 8, !dbg !38
  %146 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 3, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %146, align 8, !dbg !38
  %147 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 1, !dbg !38
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %147, align 8, !dbg !38
  %148 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 5, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %148, align 8, !dbg !38
  %149 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem9103623, i64 0, i64 6, !dbg !38
  store %"struct.rubinius::Object"* %local985, %"struct.rubinius::Object"** %149, align 8, !dbg !38
  store %"struct.rubinius::Object"* %local985, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  %constant_cache938 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !39
  %constant_cache_pos939 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i64 0, i32 4, !dbg !39
  %constant_scope940 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos939, align 8, !dbg !39
  %same_scope943 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope940, %constant_scope914, !dbg !39
  br i1 %same_scope943, label %check_serial944, label %use_call946, !dbg !39

serial_fallback881:                               ; preds = %correct_class889
  store i32 87, i32* %65, align 4, !dbg !36
  %150 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 87, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad126, !dbg !36

bail_out922:                                      ; preds = %correct_serial997, %check_active1299, %continue1277, %use_call1276, %use_call1220, %use_call1191, %use_call1166, %class_fallback1103, %ip25, %use_call1061, %use_call1037, %class_fallback987, %use_call946
  %rth923 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !38
  br i1 %rth923, label %ret_raise_val924, label %return_pad899, !dbg !38

ret_raise_val924:                                 ; preds = %bail_out922
  %crv926 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !38
  br label %return_pad899, !dbg !38

check_serial944:                                  ; preds = %correct_serial890
  %global_serial937 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !39
  %serial_pos948 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i64 0, i32 7, !dbg !39
  %serial949 = load i32* %serial_pos948, align 4, !dbg !39
  %use_cache950 = icmp eq i32 %global_serial937, %serial949, !dbg !39
  br i1 %use_cache950, label %use_cache945, label %use_call946, !dbg !39

use_cache945:                                     ; preds = %check_serial944
  %value_pos951 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache938, i64 0, i32 2, !dbg !39
  %cached_value952 = load %"struct.rubinius::Object"** %value_pos951, align 8, !dbg !39
  br label %continue947, !dbg !39

use_call946:                                      ; preds = %check_serial944, %correct_serial890
  store i32 2, i32* %141, align 4, !dbg !39
  %push_const_fast953 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !39
  %null_check956 = icmp eq %"struct.rubinius::Object"* %push_const_fast953, null, !dbg !39
  br i1 %null_check956, label %bail_out922, label %continue947, !dbg !39

continue947:                                      ; preds = %use_call946, %use_cache945
  %constant957 = phi %"struct.rubinius::Object"* [ %cached_value952, %use_cache945 ], [ %push_const_fast953, %use_call946 ], !dbg !39, !rbx-classid !40
  store %"struct.rubinius::Object"* %constant957, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !39
  %cast969 = ptrtoint %"struct.rubinius::Object"* %local985 to i64, !dbg !39
  %masked970 = and i64 %cast969, 3, !dbg !39
  %is_reference971 = icmp eq i64 %masked970, 0, !dbg !39
  br i1 %is_reference971, label %use_cache968, label %negative, !dbg !39

continue966:                                      ; preds = %use_cache968, %negative
  %constant973 = phi %"struct.rubinius::Object"* [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %use_cache968 ], !dbg !39
  store %"struct.rubinius::Object"* %constant973, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  store %"struct.rubinius::Object"* %constant973, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !39
  %as_int980 = ptrtoint %"struct.rubinius::Object"* %constant973 to i64, !dbg !39
  %and981 = and i64 %as_int980, 10, !dbg !39
  %is_true982 = icmp eq i64 %and981, 10, !dbg !39
  br i1 %is_true982, label %ip16, label %ip10, !dbg !39

negative:                                         ; preds = %use_cache968, %continue947
  br label %continue966, !dbg !39

use_cache968:                                     ; preds = %continue947
  %word_pos = getelementptr %"struct.rubinius::Object"* %local985, i64 0, i32 0, i32 0, i32 0, !dbg !39
  %flags972 = load i64* %word_pos, align 8, !dbg !39
  %mask = and i64 %flags972, 255, !dbg !39
  %is_type = icmp eq i64 %mask, 35, !dbg !39
  br i1 %is_type, label %continue966, label %negative, !dbg !39

ip10:                                             ; preds = %continue966
  store %"struct.rubinius::Object"* %local985, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  br i1 %is_reference971, label %check_class_id995, label %class_fallback987, !dbg !39

continue989:                                      ; preds = %class_fallback987, %correct_serial997
  %send_result1020 = phi %"struct.rubinius::Object"* [ %prim_value, %correct_serial997 ], [ %call_site_execute1017, %class_fallback987 ], !dbg !39
  store %"struct.rubinius::Object"* %send_result1020, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  br label %ip16, !dbg !39

ip16:                                             ; preds = %continue989, %continue966
  %stack_load1023 = phi %"struct.rubinius::Object"* [ %send_result1020, %continue989 ], [ %constant973, %continue966 ]
  %as_int1024 = ptrtoint %"struct.rubinius::Object"* %stack_load1023 to i64, !dbg !39
  %and1025 = and i64 %as_int1024, 15, !dbg !39
  %is_true1026 = icmp eq i64 %and1025, 10, !dbg !39
  br i1 %is_true1026, label %ip25, label %ip18, !dbg !39

check_class_id995:                                ; preds = %ip10
  %class_pos998 = getelementptr %"struct.rubinius::Object"* %local985, i64 0, i32 0, i32 1, !dbg !39
  %ref_class999 = load %"struct.rubinius::Class"** %class_pos998, align 8, !dbg !39
  %class_id_pos1000 = getelementptr %"struct.rubinius::Class"* %ref_class999, i64 0, i32 4, !dbg !39
  %class_id1001 = load i32* %class_id_pos1000, align 4, !dbg !39
  %check_class_id1002 = icmp eq i32 %class_id1001, 77, !dbg !39
  br i1 %check_class_id1002, label %correct_class996, label %class_fallback987, !dbg !39

correct_class996:                                 ; preds = %check_class_id995
  %serial_id_pos1003 = getelementptr %"struct.rubinius::Class"* %ref_class999, i64 0, i32 5, !dbg !39
  %serial_id1004 = load i32* %serial_id_pos1003, align 4, !dbg !39
  %check_serial_id1005 = icmp eq i32 %serial_id1004, 224, !dbg !39
  br i1 %check_serial_id1005, label %correct_serial997, label %serial_fallback988, !dbg !39

class_fallback987:                                ; preds = %correct_serial997.class_fallback987_crit_edge, %check_class_id995, %ip10
  %stack_load1013 = phi %"struct.rubinius::Object"* [ %stack_load1013.pre, %correct_serial997.class_fallback987_crit_edge ], [ %local985, %check_class_id995 ], [ %local985, %ip10 ]
  store %"struct.rubinius::Object"* %stack_load1013, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 31830 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !39
  store i32 0, i32* %out_args_total, align 8, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !39
  %cache_const1014 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411648 to %"struct.rubinius::CallSite"**), align 64, !dbg !39
  %execute_pos1015 = getelementptr %"struct.rubinius::CallSite"* %cache_const1014, i64 0, i32 2, !dbg !39
  %execute1016 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1015, align 8, !dbg !39
  store i32 13, i32* %141, align 4, !dbg !39
  %call_site_execute1017 = call %"struct.rubinius::Object"* %execute1016(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1014, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check1019 = icmp eq %"struct.rubinius::Object"* %call_site_execute1017, null, !dbg !39
  br i1 %null_check1019, label %bail_out922, label %continue989, !dbg !39

correct_serial997:                                ; preds = %correct_class996
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_float_isnan(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local985) #1, !dbg !39
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !39
  switch i64 %magicptr, label %continue989 [
    i64 34, label %correct_serial997.class_fallback987_crit_edge
    i64 0, label %bail_out922
  ], !dbg !39

correct_serial997.class_fallback987_crit_edge:    ; preds = %correct_serial997
  %stack_load1013.pre = load %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  br label %class_fallback987, !dbg !39

serial_fallback988:                               ; preds = %correct_class996
  store i32 13, i32* %141, align 4, !dbg !39
  %151 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 13, i64 0, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad899, !dbg !39

ip18:                                             ; preds = %ip16
  %constant_cache1029 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !39
  %constant_cache_pos1030 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i64 0, i32 4, !dbg !39
  %constant_scope1031 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1030, align 8, !dbg !39
  %152 = load %"struct.rubinius::Object"** %138, align 8, !dbg !39
  %frame_scope1033 = bitcast %"struct.rubinius::Object"* %152 to %"struct.rubinius::ConstantScope"*, !dbg !39
  %same_scope1034 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1031, %frame_scope1033, !dbg !39
  br i1 %same_scope1034, label %check_serial1035, label %use_call1037, !dbg !39

check_serial1035:                                 ; preds = %ip18
  %global_serial1028 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !39
  %serial_pos1039 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i64 0, i32 7, !dbg !39
  %serial1040 = load i32* %serial_pos1039, align 4, !dbg !39
  %use_cache1041 = icmp eq i32 %global_serial1028, %serial1040, !dbg !39
  br i1 %use_cache1041, label %use_cache1036, label %use_call1037, !dbg !39

use_cache1036:                                    ; preds = %check_serial1035
  %value_pos1042 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1029, i64 0, i32 2, !dbg !39
  %cached_value1043 = load %"struct.rubinius::Object"** %value_pos1042, align 8, !dbg !39
  br label %continue1038, !dbg !39

use_call1037:                                     ; preds = %check_serial1035, %ip18
  store i32 18, i32* %141, align 4, !dbg !39
  %push_const_fast1044 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411688 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !39
  %null_check1047 = icmp eq %"struct.rubinius::Object"* %push_const_fast1044, null, !dbg !39
  br i1 %null_check1047, label %bail_out922, label %continue1038, !dbg !39

continue1038:                                     ; preds = %use_call1037, %use_cache1036
  %constant1048 = phi %"struct.rubinius::Object"* [ %cached_value1043, %use_cache1036 ], [ %push_const_fast1044, %use_call1037 ], !dbg !39, !rbx-classid !41
  store %"struct.rubinius::Object"* %constant1048, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  %constant_cache1053 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !39
  %constant_cache_pos1054 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i64 0, i32 4, !dbg !39
  %constant_scope1055 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1054, align 8, !dbg !39
  %same_scope1058 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1055, %frame_scope1033, !dbg !39
  br i1 %same_scope1058, label %check_serial1059, label %use_call1061, !dbg !39

check_serial1059:                                 ; preds = %continue1038
  %global_serial1052 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !39
  %serial_pos1063 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i64 0, i32 7, !dbg !39
  %serial1064 = load i32* %serial_pos1063, align 4, !dbg !39
  %use_under = icmp eq i32 %global_serial1052, %serial1064, !dbg !39
  br i1 %use_under, label %check_under, label %use_call1061, !dbg !39

check_under:                                      ; preds = %check_serial1059
  %value_pos1065 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i64 0, i32 3, !dbg !39
  %cached_under = load %"struct.rubinius::Module"** %value_pos1065, align 8, !dbg !39
  %downcast = getelementptr inbounds %"struct.rubinius::Module"* %cached_under, i64 0, i32 0, !dbg !39
  %use_cache1066 = icmp eq %"struct.rubinius::Object"* %downcast, %constant1048, !dbg !39
  br i1 %use_cache1066, label %use_cache1060, label %use_call1061, !dbg !39

use_cache1060:                                    ; preds = %check_under
  %value_pos1067 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1053, i64 0, i32 2, !dbg !39
  %cached_value1068 = load %"struct.rubinius::Object"** %value_pos1067, align 8, !dbg !39
  br label %continue1062, !dbg !39

use_call1061:                                     ; preds = %check_under, %check_serial1059, %continue1038
  store i32 20, i32* %141, align 4, !dbg !39
  %constant1069 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411704 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1048) #0, !dbg !39
  %null_check1072 = icmp eq %"struct.rubinius::Object"* %constant1069, null, !dbg !39
  br i1 %null_check1072, label %bail_out922, label %continue1062, !dbg !39

continue1062:                                     ; preds = %use_call1061, %use_cache1060
  %constant1073 = phi %"struct.rubinius::Object"* [ %cached_value1068, %use_cache1060 ], [ %constant1069, %use_call1061 ], !dbg !39, !rbx-classid !42
  store %"struct.rubinius::Object"* %constant1073, %"struct.rubinius::Object"** %stack909, align 8, !dbg !39
  br label %return_pad899, !dbg !39

ip25:                                             ; preds = %ip16
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22561024 to %"struct.rubinius::Object"**), align 256, !dbg !43
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack909, align 8, !dbg !43
  %local1080 = load %"struct.rubinius::Object"** %149, align 8, !dbg !43, !rbx-classid !20
  store %"struct.rubinius::Object"* %local1080, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !43
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 18734 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !43
  store i32 1, i32* %out_args_total, align 8, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos916, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !43
  %cache_const1088 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411784 to %"struct.rubinius::CallSite"**), align 8, !dbg !43
  %execute_pos1089 = getelementptr %"struct.rubinius::CallSite"* %cache_const1088, i64 0, i32 2, !dbg !43
  %execute1090 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1089, align 8, !dbg !43
  store i32 30, i32* %141, align 4, !dbg !43
  %call_site_execute1091 = call %"struct.rubinius::Object"* %execute1090(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1088, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check1094 = icmp eq %"struct.rubinius::Object"* %call_site_execute1091, null, !dbg !43
  br i1 %null_check1094, label %bail_out922, label %check_active1093, !dbg !43

check_active1093:                                 ; preds = %ip25
  store %"struct.rubinius::Object"* %call_site_execute1091, %"struct.rubinius::Object"** %149, align 8, !dbg !43
  store %"struct.rubinius::Object"* %call_site_execute1091, %"struct.rubinius::Object"** %stack909, align 8, !dbg !44
  %153 = load %"struct.rubinius::Object"** %137, align 8, !dbg !44
  %literals_pos = getelementptr %"struct.rubinius::Object"* %153, i64 8, !dbg !44
  %154 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !44
  %literals = load %"struct.rubinius::Tuple"** %154, align 8, !dbg !44
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 5, !dbg !44
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !44, !rbx-classid !33
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !44
  %cast1108 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1091 to i64, !dbg !44
  %masked1109 = and i64 %cast1108, 3, !dbg !44
  %is_reference1110 = icmp eq i64 %masked1109, 0, !dbg !44
  br i1 %is_reference1110, label %check_class_id1111, label %class_fallback1103, !dbg !44

continue1105:                                     ; preds = %class_fallback1103, %correct_serial1113
  %send_result1147 = phi %"struct.rubinius::Object"* [ %select_bool, %correct_serial1113 ], [ %call_site_execute1144, %class_fallback1103 ], !dbg !44
  store %"struct.rubinius::Object"* %send_result1147, %"struct.rubinius::Object"** %stack909, align 8, !dbg !44
  %as_int1151 = ptrtoint %"struct.rubinius::Object"* %send_result1147 to i64, !dbg !44
  %and1152 = and i64 %as_int1151, 15, !dbg !44
  %is_true1153 = icmp eq i64 %and1152, 10, !dbg !44
  br i1 %is_true1153, label %ip48, label %ip58, !dbg !44

check_class_id1111:                               ; preds = %check_active1093
  %class_pos1114 = getelementptr %"struct.rubinius::Object"* %call_site_execute1091, i64 0, i32 0, i32 1, !dbg !44
  %ref_class1115 = load %"struct.rubinius::Class"** %class_pos1114, align 8, !dbg !44
  %class_id_pos1116 = getelementptr %"struct.rubinius::Class"* %ref_class1115, i64 0, i32 4, !dbg !44
  %class_id1117 = load i32* %class_id_pos1116, align 4, !dbg !44
  %check_class_id1118 = icmp eq i32 %class_id1117, 77, !dbg !44
  br i1 %check_class_id1118, label %correct_class1112, label %class_fallback1103, !dbg !44

correct_class1112:                                ; preds = %check_class_id1111
  %serial_id_pos1119 = getelementptr %"struct.rubinius::Class"* %ref_class1115, i64 0, i32 5, !dbg !44
  %serial_id1120 = load i32* %serial_id_pos1119, align 4, !dbg !44
  %check_serial_id1121 = icmp eq i32 %serial_id1120, 224, !dbg !44
  br i1 %check_serial_id1121, label %correct_serial1113, label %serial_fallback1104, !dbg !44

correct_serial1113:                               ; preds = %correct_class1112
  %arg.value_pos1125 = getelementptr %"struct.rubinius::Object"* %literal, i64 1, !dbg !44
  %155 = bitcast %"struct.rubinius::Object"* %arg.value_pos1125 to double*, !dbg !44
  %farg1126 = load double* %155, align 8, !dbg !44
  %self.value_pos1136 = getelementptr %"struct.rubinius::Object"* %call_site_execute1091, i64 1, !dbg !44
  %156 = bitcast %"struct.rubinius::Object"* %self.value_pos1136 to double*, !dbg !44
  %fself1137 = load double* %156, align 8, !dbg !44
  %float.ge = fcmp uge double %fself1137, %farg1126, !dbg !44
  %select_bool = select i1 %float.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !44
  br label %continue1105, !dbg !44

serial_fallback1104:                              ; preds = %correct_class1112
  store i32 40, i32* %141, align 4, !dbg !44
  %157 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 40, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !44
  br label %return_pad899, !dbg !44

class_fallback1103:                               ; preds = %check_class_id1111, %check_active1093
  store %"struct.rubinius::Object"* %call_site_execute1091, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos916, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const1141 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411864 to %"struct.rubinius::CallSite"**), align 8, !dbg !44
  %execute_pos1142 = getelementptr %"struct.rubinius::CallSite"* %cache_const1141, i64 0, i32 2, !dbg !44
  %execute1143 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1142, align 8, !dbg !44
  store i32 40, i32* %141, align 4, !dbg !44
  %call_site_execute1144 = call %"struct.rubinius::Object"* %execute1143(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1141, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1144, null, !dbg !44
  br i1 %null_check1146, label %bail_out922, label %continue1105, !dbg !44

ip58:                                             ; preds = %check_active1299, %continue1105
  %storemerge3634 = phi %"struct.rubinius::Object"* [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue1105 ], [ %call_site_execute1308, %check_active1299 ]
  store %"struct.rubinius::Object"* %storemerge3634, %"struct.rubinius::Object"** %stack909, align 8, !dbg !44
  %constant_cache1158 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !45
  %constant_cache_pos1159 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i64 0, i32 4, !dbg !45
  %constant_scope1160 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1159, align 8, !dbg !45
  %158 = load %"struct.rubinius::Object"** %138, align 8, !dbg !45
  %frame_scope1162 = bitcast %"struct.rubinius::Object"* %158 to %"struct.rubinius::ConstantScope"*, !dbg !45
  %same_scope1163 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1160, %frame_scope1162, !dbg !45
  br i1 %same_scope1163, label %check_serial1164, label %use_call1166, !dbg !45

check_serial1164:                                 ; preds = %ip58
  %global_serial1157 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !45
  %serial_pos1168 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i64 0, i32 7, !dbg !45
  %serial1169 = load i32* %serial_pos1168, align 4, !dbg !45
  %use_cache1170 = icmp eq i32 %global_serial1157, %serial1169, !dbg !45
  br i1 %use_cache1170, label %use_cache1165, label %use_call1166, !dbg !45

use_cache1165:                                    ; preds = %check_serial1164
  %value_pos1171 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1158, i64 0, i32 2, !dbg !45
  %cached_value1172 = load %"struct.rubinius::Object"** %value_pos1171, align 8, !dbg !45
  br label %continue1167, !dbg !45

use_call1166:                                     ; preds = %check_serial1164, %ip58
  store i32 59, i32* %141, align 4, !dbg !45
  %push_const_fast1173 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412016 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !45
  %null_check1176 = icmp eq %"struct.rubinius::Object"* %push_const_fast1173, null, !dbg !45
  br i1 %null_check1176, label %bail_out922, label %continue1167, !dbg !45

continue1167:                                     ; preds = %use_call1166, %use_cache1165
  %constant1177 = phi %"struct.rubinius::Object"* [ %cached_value1172, %use_cache1165 ], [ %push_const_fast1173, %use_call1166 ], !dbg !45, !rbx-classid !46
  store %"struct.rubinius::Object"* %constant1177, %"struct.rubinius::Object"** %stack909, align 8, !dbg !45
  %constant_cache1182 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), align 64, !dbg !45
  %constant_cache_pos1183 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i64 0, i32 4, !dbg !45
  %constant_scope1184 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1183, align 8, !dbg !45
  %same_scope1187 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1184, %frame_scope1162, !dbg !45
  br i1 %same_scope1187, label %check_serial1188, label %use_call1191, !dbg !45

check_serial1188:                                 ; preds = %continue1167
  %global_serial1181 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !45
  %serial_pos1193 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i64 0, i32 7, !dbg !45
  %serial1194 = load i32* %serial_pos1193, align 4, !dbg !45
  %use_under1195 = icmp eq i32 %global_serial1181, %serial1194, !dbg !45
  br i1 %use_under1195, label %check_under1189, label %use_call1191, !dbg !45

check_under1189:                                  ; preds = %check_serial1188
  %value_pos1196 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i64 0, i32 3, !dbg !45
  %cached_under1197 = load %"struct.rubinius::Module"** %value_pos1196, align 8, !dbg !45
  %downcast1198 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under1197, i64 0, i32 0, !dbg !45
  %use_cache1199 = icmp eq %"struct.rubinius::Object"* %downcast1198, %constant1177, !dbg !45
  br i1 %use_cache1199, label %use_cache1190, label %use_call1191, !dbg !45

use_cache1190:                                    ; preds = %check_under1189
  %value_pos1200 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1182, i64 0, i32 2, !dbg !45
  %cached_value1201 = load %"struct.rubinius::Object"** %value_pos1200, align 8, !dbg !45
  br label %continue1192, !dbg !45

use_call1191:                                     ; preds = %check_under1189, %check_serial1188, %continue1167
  store i32 61, i32* %141, align 4, !dbg !45
  %constant1202 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412032 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1177) #0, !dbg !45
  %null_check1205 = icmp eq %"struct.rubinius::Object"* %constant1202, null, !dbg !45
  br i1 %null_check1205, label %bail_out922, label %continue1192, !dbg !45

continue1192:                                     ; preds = %use_call1191, %use_cache1190
  %constant1206 = phi %"struct.rubinius::Object"* [ %cached_value1201, %use_cache1190 ], [ %constant1202, %use_call1191 ], !dbg !45, !rbx-classid !47
  store %"struct.rubinius::Object"* %constant1206, %"struct.rubinius::Object"** %stack909, align 8, !dbg !45
  %constant_cache1211 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !45
  %constant_cache_pos1212 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i64 0, i32 4, !dbg !45
  %constant_scope1213 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1212, align 8, !dbg !45
  %same_scope1216 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1213, %frame_scope1162, !dbg !45
  br i1 %same_scope1216, label %check_serial1217, label %use_call1220, !dbg !45

check_serial1217:                                 ; preds = %continue1192
  %global_serial1210 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !45
  %serial_pos1222 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i64 0, i32 7, !dbg !45
  %serial1223 = load i32* %serial_pos1222, align 4, !dbg !45
  %use_under1224 = icmp eq i32 %global_serial1210, %serial1223, !dbg !45
  br i1 %use_under1224, label %check_under1218, label %use_call1220, !dbg !45

check_under1218:                                  ; preds = %check_serial1217
  %value_pos1225 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i64 0, i32 3, !dbg !45
  %cached_under1226 = load %"struct.rubinius::Module"** %value_pos1225, align 8, !dbg !45
  %downcast1227 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under1226, i64 0, i32 0, !dbg !45
  %use_cache1228 = icmp eq %"struct.rubinius::Object"* %downcast1227, %constant1206, !dbg !45
  br i1 %use_cache1228, label %use_cache1219, label %use_call1220, !dbg !45

use_cache1219:                                    ; preds = %check_under1218
  %value_pos1229 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1211, i64 0, i32 2, !dbg !45
  %cached_value1230 = load %"struct.rubinius::Object"** %value_pos1229, align 8, !dbg !45
  br label %continue1221, !dbg !45

use_call1220:                                     ; preds = %check_under1218, %check_serial1217, %continue1192
  store i32 63, i32* %141, align 4, !dbg !45
  %constant1231 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23412048 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1206) #0, !dbg !45
  %null_check1234 = icmp eq %"struct.rubinius::Object"* %constant1231, null, !dbg !45
  br i1 %null_check1234, label %bail_out922, label %continue1221, !dbg !45

continue1221:                                     ; preds = %use_call1220, %use_cache1219
  %constant1235 = phi %"struct.rubinius::Object"* [ %cached_value1230, %use_cache1219 ], [ %constant1231, %use_call1220 ], !dbg !45, !rbx-classid !48
  store %"struct.rubinius::Object"* %constant1235, %"struct.rubinius::Object"** %stack909, align 8, !dbg !45
  %local1238 = load %"struct.rubinius::Object"** %149, align 8, !dbg !45, !rbx-classid !20
  store %"struct.rubinius::Object"* %local1238, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !45
  %cast1245 = ptrtoint %"struct.rubinius::Object"* %constant1235 to i64, !dbg !45
  %masked1246 = and i64 %cast1245, 3, !dbg !45
  %is_reference1247 = icmp eq i64 %masked1246, 0, !dbg !45
  br i1 %is_reference1247, label %check_class_id1248, label %class_fallback1240, !dbg !45

ip48:                                             ; preds = %continue1105
  %self1265 = load %"struct.rubinius::Object"** %144, align 8, !dbg !44, !rbx-classid !49
  store %"struct.rubinius::Object"* %self1265, %"struct.rubinius::Object"** %stack909, align 8, !dbg !44
  %constant_cache1268 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !44
  %constant_cache_pos1269 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i64 0, i32 4, !dbg !44
  %constant_scope1270 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1269, align 8, !dbg !44
  %159 = load %"struct.rubinius::Object"** %138, align 8, !dbg !44
  %frame_scope1272 = bitcast %"struct.rubinius::Object"* %159 to %"struct.rubinius::ConstantScope"*, !dbg !44
  %same_scope1273 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1270, %frame_scope1272, !dbg !44
  br i1 %same_scope1273, label %check_serial1274, label %use_call1276, !dbg !44

check_class_id1248:                               ; preds = %continue1221
  %class_pos1251 = getelementptr %"struct.rubinius::Object"* %constant1235, i64 0, i32 0, i32 1, !dbg !45
  %ref_class1252 = load %"struct.rubinius::Class"** %class_pos1251, align 8, !dbg !45
  %class_id_pos1253 = getelementptr %"struct.rubinius::Class"* %ref_class1252, i64 0, i32 4, !dbg !45
  %class_id1254 = load i32* %class_id_pos1253, align 4, !dbg !45
  %check_class_id1255 = icmp eq i32 %class_id1254, 507, !dbg !45
  br i1 %check_class_id1255, label %correct_class1249, label %class_fallback1240, !dbg !45

correct_class1249:                                ; preds = %check_class_id1248
  %serial_id_pos1256 = getelementptr %"struct.rubinius::Class"* %ref_class1252, i64 0, i32 5, !dbg !45
  %serial_id1257 = load i32* %serial_id_pos1256, align 4, !dbg !45
  %check_serial_id1258 = icmp eq i32 %serial_id1257, 210, !dbg !45
  br i1 %check_serial_id1258, label %correct_serial1250, label %serial_fallback1241, !dbg !45

class_fallback1240:                               ; preds = %correct_serial1250, %check_class_id1248, %continue1221
  store i32 67, i32* %141, align 4, !dbg !45
  %160 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !45
  br label %return_pad899, !dbg !45

correct_serial1250:                               ; preds = %correct_class1249
  %to_double = call double @rbx_ffi_to_double(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1238, i1* %valid_flag), !dbg !45
  %161 = load i1* %valid_flag, align 1, !dbg !45
  br i1 %161, label %ffi_continue, label %class_fallback1240, !dbg !45

serial_fallback1241:                              ; preds = %correct_class1249
  store i32 67, i32* %141, align 4, !dbg !45
  %162 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, i32 67, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !45
  br label %return_pad899, !dbg !45

ffi_continue:                                     ; preds = %correct_serial1250
  %unused = call i64 @rbx_enter_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !45
  %ffi_result = call double inttoptr (i64 140496155142304 to double (double)*)(double %to_double), !dbg !45
  %unused1261 = call i64 @rbx_exit_unmanaged(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908), !dbg !45
  %to_obj = call %"struct.rubinius::Object"* @rbx_ffi_from_double(%"struct.rubinius::State"* %state, double %ffi_result), !dbg !45
  store %"struct.rubinius::Object"* %to_obj, %"struct.rubinius::Object"** %stack909, align 8, !dbg !45
  br label %return_pad899, !dbg !45

check_serial1274:                                 ; preds = %ip48
  %global_serial1267 = load i32* inttoptr (i64 22553876 to i32*), align 4, !dbg !44
  %serial_pos1278 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i64 0, i32 7, !dbg !44
  %serial1279 = load i32* %serial_pos1278, align 4, !dbg !44
  %use_cache1280 = icmp eq i32 %global_serial1267, %serial1279, !dbg !44
  br i1 %use_cache1280, label %use_cache1275, label %use_call1276, !dbg !44

use_cache1275:                                    ; preds = %check_serial1274
  %value_pos1281 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1268, i64 0, i32 2, !dbg !44
  %cached_value1282 = load %"struct.rubinius::Object"** %value_pos1281, align 8, !dbg !44
  br label %continue1277, !dbg !44

use_call1276:                                     ; preds = %check_serial1274, %ip48
  store i32 49, i32* %141, align 4, !dbg !44
  %push_const_fast1283 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::ConstantCache"** inttoptr (i64 23411936 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !44
  %null_check1286 = icmp eq %"struct.rubinius::Object"* %push_const_fast1283, null, !dbg !44
  br i1 %null_check1286, label %bail_out922, label %continue1277, !dbg !44

continue1277:                                     ; preds = %use_call1276, %use_cache1275
  %constant1287 = phi %"struct.rubinius::Object"* [ %cached_value1282, %use_cache1275 ], [ %push_const_fast1283, %use_call1276 ], !dbg !44, !rbx-classid !50
  store %"struct.rubinius::Object"* %constant1287, %"struct.rubinius::Object"** %stack_pos916, align 8, !dbg !44
  %163 = load %"struct.rubinius::Object"** %137, align 8, !dbg !44
  %literals_pos1291 = getelementptr %"struct.rubinius::Object"* %163, i64 8, !dbg !44
  %164 = bitcast %"struct.rubinius::Object"* %literals_pos1291 to %"struct.rubinius::Tuple"**, !dbg !44
  %literals1292 = load %"struct.rubinius::Tuple"** %164, align 8, !dbg !44
  %literal_pos1293 = getelementptr %"struct.rubinius::Tuple"* %literals1292, i64 0, i32 2, i64 8, !dbg !44
  %literal1294 = load %"struct.rubinius::Object"** %literal_pos1293, align 8, !dbg !44, !rbx-classid !51
  store %"struct.rubinius::Object"* %literal1294, %"struct.rubinius::Object"** %stack_pos917, align 8, !dbg !44
  %string_dup = call %"struct.rubinius::Object"* @rbx_string_dup(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Object"* %literal1294), !dbg !44, !rbx-classid !51
  %null_check1300 = icmp eq %"struct.rubinius::Object"* %string_dup, null, !dbg !44
  br i1 %null_check1300, label %bail_out922, label %check_active1299, !dbg !44

check_active1299:                                 ; preds = %continue1277
  store %"struct.rubinius::Object"* %string_dup, %"struct.rubinius::Object"** %stack_pos917, align 8, !dbg !44
  %stack_load1303 = load %"struct.rubinius::Object"** %stack909, align 8, !dbg !44, !rbx-classid !49
  store %"struct.rubinius::Object"* %stack_load1303, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 14286 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 2, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos916, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const1305 = load %"struct.rubinius::CallSite"** inttoptr (i64 23411984 to %"struct.rubinius::CallSite"**), align 16, !dbg !44
  %execute_pos1306 = getelementptr %"struct.rubinius::CallSite"* %cache_const1305, i64 0, i32 2, !dbg !44
  %execute1307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1306, align 8, !dbg !44
  store i32 55, i32* %141, align 4, !dbg !44
  %call_site_execute1308 = call %"struct.rubinius::Object"* %execute1307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1305, %"struct.rubinius::CallFrame"* %call_frame908, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check1311 = icmp eq %"struct.rubinius::Object"* %call_site_execute1308, null, !dbg !44
  br i1 %null_check1311, label %bail_out922, label %ip58, !dbg !44

return_pad899:                                    ; preds = %bail_out922, %ffi_continue, %serial_fallback1241, %class_fallback1240, %serial_fallback1104, %continue1062, %serial_fallback988, %ret_raise_val924
  %stack_load1380 = phi %"struct.rubinius::Object"* [ %crv926, %ret_raise_val924 ], [ %151, %serial_fallback988 ], [ %constant1073, %continue1062 ], [ %157, %serial_fallback1104 ], [ %160, %class_fallback1240 ], [ %162, %serial_fallback1241 ], [ %to_obj, %ffi_continue ], [ null, %bail_out922 ]
  %null_check1315 = icmp eq %"struct.rubinius::Object"* %stack_load1380, null, !dbg !36
  br i1 %null_check1315, label %bail_out159, label %check_active1314, !dbg !36

check_active1314:                                 ; preds = %return_pad899
  %165 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 14, !dbg !36
  store %"struct.rubinius::Object"* %stack_load1380, %"struct.rubinius::Object"** %165, align 8, !dbg !36
  %local1321 = load %"struct.rubinius::Object"** %78, align 8, !dbg !52, !rbx-classid !53
  store %"struct.rubinius::Object"* %local1321, %"struct.rubinius::Object"** %stack140, align 8, !dbg !52
  store %"struct.rubinius::Object"* %stack_load1380, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !52
  store %"struct.rubinius::Object"* %stack_load1380, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !52
  %cast1334 = ptrtoint %"struct.rubinius::Object"* %stack_load1380 to i64, !dbg !52
  %masked1335 = and i64 %cast1334, 3, !dbg !52
  %is_reference1336 = icmp eq i64 %masked1335, 0, !dbg !52
  br i1 %is_reference1336, label %check_class_id1337, label %class_fallback1329, !dbg !52

continue1331:                                     ; preds = %class_fallback1329.continue1331_crit_edge, %correct_class1355
  %local1391 = phi %"struct.rubinius::Object"* [ %stack_load1380, %correct_class1355 ], [ %local1391.pre, %class_fallback1329.continue1331_crit_edge ]
  %stack_load1444 = phi %"struct.rubinius::Object"* [ %169, %correct_class1355 ], [ %call_site_execute1385, %class_fallback1329.continue1331_crit_edge ], !dbg !52
  store %"struct.rubinius::Object"* %stack_load1444, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !52
  store %"struct.rubinius::Object"* %local1391, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !52
  %cast1398 = ptrtoint %"struct.rubinius::Object"* %stack_load1444 to i64, !dbg !52
  %masked1399 = and i64 %cast1398, 3, !dbg !52
  %is_reference1400 = icmp eq i64 %masked1399, 0, !dbg !52
  br i1 %is_reference1400, label %check_class_id1401, label %class_fallback1393, !dbg !52

check_class_id1337:                               ; preds = %check_active1314
  %class_pos1340 = getelementptr %"struct.rubinius::Object"* %stack_load1380, i64 0, i32 0, i32 1, !dbg !52
  %ref_class1341 = load %"struct.rubinius::Class"** %class_pos1340, align 8, !dbg !52
  %class_id_pos1342 = getelementptr %"struct.rubinius::Class"* %ref_class1341, i64 0, i32 4, !dbg !52
  %class_id1343 = load i32* %class_id_pos1342, align 4, !dbg !52
  %check_class_id1344 = icmp eq i32 %class_id1343, 77, !dbg !52
  br i1 %check_class_id1344, label %correct_class1338, label %class_fallback1329, !dbg !52

correct_class1338:                                ; preds = %check_class_id1337
  %serial_id_pos1345 = getelementptr %"struct.rubinius::Class"* %ref_class1341, i64 0, i32 5, !dbg !52
  %serial_id1346 = load i32* %serial_id_pos1345, align 4, !dbg !52
  %check_serial_id1347 = icmp eq i32 %serial_id1346, 224, !dbg !52
  br i1 %check_serial_id1347, label %correct_class1355, label %serial_fallback1330, !dbg !52

serial_fallback1330:                              ; preds = %correct_class1338
  store i32 99, i32* %65, align 4, !dbg !52
  %166 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 99, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !52
  br label %return_pad126, !dbg !52

correct_class1355:                                ; preds = %correct_class1338
  %arg.value_pos1362 = getelementptr %"struct.rubinius::Object"* %stack_load1380, i64 1, !dbg !52
  %167 = bitcast %"struct.rubinius::Object"* %arg.value_pos1362 to double*, !dbg !52
  %farg1363 = load double* %167, align 8, !dbg !52
  %float.mul1377 = fmul double %farg1363, %farg1363, !dbg !52
  %result1378 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !52, !rbx-classid !33
  %168 = getelementptr %"struct.rubinius::Float"* %result1378, i64 0, i32 1, !dbg !52
  store double %float.mul1377, double* %168, align 8, !dbg !52
  %169 = getelementptr inbounds %"struct.rubinius::Float"* %result1378, i64 0, i32 0, i32 0, !dbg !52
  br label %continue1331, !dbg !52

class_fallback1329:                               ; preds = %check_class_id1337, %check_active1314
  store %"struct.rubinius::Object"* %stack_load1380, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1382 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549200 to %"struct.rubinius::CallSite"**), align 16, !dbg !52
  %execute_pos1383 = getelementptr %"struct.rubinius::CallSite"* %cache_const1382, i64 0, i32 2, !dbg !52
  %execute1384 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1383, align 8, !dbg !52
  store i32 99, i32* %65, align 4, !dbg !52
  %call_site_execute1385 = call %"struct.rubinius::Object"* %execute1384(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1382, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1387 = icmp eq %"struct.rubinius::Object"* %call_site_execute1385, null, !dbg !52
  br i1 %null_check1387, label %bail_out159, label %class_fallback1329.continue1331_crit_edge, !dbg !52

class_fallback1329.continue1331_crit_edge:        ; preds = %class_fallback1329
  %local1391.pre = load %"struct.rubinius::Object"** %165, align 8, !dbg !52
  br label %continue1331, !dbg !52

continue1395:                                     ; preds = %class_fallback1393, %continue1428
  %send_result1452 = phi %"struct.rubinius::Object"* [ %175, %continue1428 ], [ %call_site_execute1449, %class_fallback1393 ], !dbg !52
  store %"struct.rubinius::Object"* %send_result1452, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !52
  %stack_load1458 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !52, !rbx-classid !53
  %cast1459 = ptrtoint %"struct.rubinius::Object"* %stack_load1458 to i64, !dbg !52
  %masked1460 = and i64 %cast1459, 3, !dbg !52
  %is_reference1461 = icmp eq i64 %masked1460, 0, !dbg !52
  br i1 %is_reference1461, label %check_class_id1462, label %class_fallback1454, !dbg !52

check_class_id1401:                               ; preds = %continue1331
  %class_pos1404 = getelementptr %"struct.rubinius::Object"* %stack_load1444, i64 0, i32 0, i32 1, !dbg !52
  %ref_class1405 = load %"struct.rubinius::Class"** %class_pos1404, align 8, !dbg !52
  %class_id_pos1406 = getelementptr %"struct.rubinius::Class"* %ref_class1405, i64 0, i32 4, !dbg !52
  %class_id1407 = load i32* %class_id_pos1406, align 4, !dbg !52
  %check_class_id1408 = icmp eq i32 %class_id1407, 77, !dbg !52
  br i1 %check_class_id1408, label %correct_class1402, label %class_fallback1393, !dbg !52

correct_class1402:                                ; preds = %check_class_id1401
  %serial_id_pos1409 = getelementptr %"struct.rubinius::Class"* %ref_class1405, i64 0, i32 5, !dbg !52
  %serial_id1410 = load i32* %serial_id_pos1409, align 4, !dbg !52
  %check_serial_id1411 = icmp eq i32 %serial_id1410, 224, !dbg !52
  br i1 %check_serial_id1411, label %correct_serial1403, label %serial_fallback1394, !dbg !52

correct_serial1403:                               ; preds = %correct_class1402
  %cast1415 = ptrtoint %"struct.rubinius::Object"* %local1391 to i64, !dbg !52
  %masked1416 = and i64 %cast1415, 3, !dbg !52
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !52
  br i1 %is_reference1417, label %check_class_id1418, label %continue1414, !dbg !52

serial_fallback1394:                              ; preds = %correct_class1402
  store i32 104, i32* %65, align 4, !dbg !52
  %170 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 104, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !52
  br label %return_pad126, !dbg !52

check_class_id1418:                               ; preds = %correct_serial1403
  %class_pos1420 = getelementptr %"struct.rubinius::Object"* %local1391, i64 0, i32 0, i32 1, !dbg !52
  %ref_class1421 = load %"struct.rubinius::Class"** %class_pos1420, align 8, !dbg !52
  %class_id_pos1422 = getelementptr %"struct.rubinius::Class"* %ref_class1421, i64 0, i32 4, !dbg !52
  %class_id1423 = load i32* %class_id_pos1422, align 4, !dbg !52
  %check_class_id1424 = icmp eq i32 %class_id1423, 77, !dbg !52
  br i1 %check_class_id1424, label %correct_class1419, label %continue1414, !dbg !52

correct_class1419:                                ; preds = %check_class_id1418
  %arg.value_pos1426 = getelementptr %"struct.rubinius::Object"* %local1391, i64 1, !dbg !52
  %171 = bitcast %"struct.rubinius::Object"* %arg.value_pos1426 to double*, !dbg !52
  %farg1427 = load double* %171, align 8, !dbg !52
  br label %continue1428, !dbg !52

continue1414:                                     ; preds = %check_class_id1418, %correct_serial1403
  %masked1430 = and i64 %cast1415, 1, !dbg !52
  %is_fixnum1431 = icmp eq i64 %masked1430, 0, !dbg !52
  br i1 %is_fixnum1431, label %class_fallback1393, label %guarded_body1432, !dbg !52

guarded_body1432:                                 ; preds = %continue1414
  %ashr1434 = ashr i64 %cast1415, 1, !dbg !52
  %172 = sitofp i64 %ashr1434 to double, !dbg !52
  br label %continue1428, !dbg !52

continue1428:                                     ; preds = %guarded_body1432, %correct_class1419
  %rhs1435 = phi double [ %farg1427, %correct_class1419 ], [ %172, %guarded_body1432 ], !dbg !52
  %self.value_pos1439 = getelementptr %"struct.rubinius::Object"* %stack_load1444, i64 1, !dbg !52
  %173 = bitcast %"struct.rubinius::Object"* %self.value_pos1439 to double*, !dbg !52
  %fself1440 = load double* %173, align 8, !dbg !52
  %float.mul1441 = fmul double %rhs1435, %fself1440, !dbg !52
  %result1442 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !52, !rbx-classid !33
  %174 = getelementptr %"struct.rubinius::Float"* %result1442, i64 0, i32 1, !dbg !52
  store double %float.mul1441, double* %174, align 8, !dbg !52
  %175 = getelementptr inbounds %"struct.rubinius::Float"* %result1442, i64 0, i32 0, i32 0, !dbg !52
  br label %continue1395, !dbg !52

class_fallback1393:                               ; preds = %continue1414, %check_class_id1401, %continue1331
  store %"struct.rubinius::Object"* %stack_load1444, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1446 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549240 to %"struct.rubinius::CallSite"**), align 8, !dbg !52
  %execute_pos1447 = getelementptr %"struct.rubinius::CallSite"* %cache_const1446, i64 0, i32 2, !dbg !52
  %execute1448 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1447, align 8, !dbg !52
  store i32 104, i32* %65, align 4, !dbg !52
  %call_site_execute1449 = call %"struct.rubinius::Object"* %execute1448(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1446, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1451 = icmp eq %"struct.rubinius::Object"* %call_site_execute1449, null, !dbg !52
  br i1 %null_check1451, label %bail_out159, label %continue1395, !dbg !52

continue1456:                                     ; preds = %class_fallback1454, %continue1489
  %local1541 = phi %"struct.rubinius::Object"* [ %182, %continue1489 ], [ %call_site_execute1509, %class_fallback1454 ], !dbg !52
  %176 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 15, !dbg !52
  store %"struct.rubinius::Object"* %local1541, %"struct.rubinius::Object"** %176, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !54
  %self1520 = load %"struct.rubinius::Object"** %70, align 8, !dbg !54
  %cast1521 = ptrtoint %"struct.rubinius::Object"* %self1520 to i64, !dbg !54
  %masked1522 = and i64 %cast1521, 3, !dbg !54
  %is_reference1523 = icmp eq i64 %masked1522, 0, !dbg !54
  br i1 %is_reference1523, label %check_class_id1524, label %visit_push_ivar_fallback1517, !dbg !54

check_class_id1462:                               ; preds = %continue1395
  %class_pos1465 = getelementptr %"struct.rubinius::Object"* %stack_load1458, i64 0, i32 0, i32 1, !dbg !52
  %ref_class1466 = load %"struct.rubinius::Class"** %class_pos1465, align 8, !dbg !52
  %class_id_pos1467 = getelementptr %"struct.rubinius::Class"* %ref_class1466, i64 0, i32 4, !dbg !52
  %class_id1468 = load i32* %class_id_pos1467, align 4, !dbg !52
  %check_class_id1469 = icmp eq i32 %class_id1468, 77, !dbg !52
  br i1 %check_class_id1469, label %correct_class1463, label %class_fallback1454, !dbg !52

correct_class1463:                                ; preds = %check_class_id1462
  %serial_id_pos1470 = getelementptr %"struct.rubinius::Class"* %ref_class1466, i64 0, i32 5, !dbg !52
  %serial_id1471 = load i32* %serial_id_pos1470, align 4, !dbg !52
  %check_serial_id1472 = icmp eq i32 %serial_id1471, 224, !dbg !52
  br i1 %check_serial_id1472, label %correct_serial1464, label %serial_fallback1455, !dbg !52

correct_serial1464:                               ; preds = %correct_class1463
  %cast1476 = ptrtoint %"struct.rubinius::Object"* %send_result1452 to i64, !dbg !52
  %masked1477 = and i64 %cast1476, 3, !dbg !52
  %is_reference1478 = icmp eq i64 %masked1477, 0, !dbg !52
  br i1 %is_reference1478, label %check_class_id1479, label %continue1475, !dbg !52

serial_fallback1455:                              ; preds = %correct_class1463
  store i32 107, i32* %65, align 4, !dbg !52
  %177 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 107, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !52
  br label %return_pad126, !dbg !52

check_class_id1479:                               ; preds = %correct_serial1464
  %class_pos1481 = getelementptr %"struct.rubinius::Object"* %send_result1452, i64 0, i32 0, i32 1, !dbg !52
  %ref_class1482 = load %"struct.rubinius::Class"** %class_pos1481, align 8, !dbg !52
  %class_id_pos1483 = getelementptr %"struct.rubinius::Class"* %ref_class1482, i64 0, i32 4, !dbg !52
  %class_id1484 = load i32* %class_id_pos1483, align 4, !dbg !52
  %check_class_id1485 = icmp eq i32 %class_id1484, 77, !dbg !52
  br i1 %check_class_id1485, label %correct_class1480, label %continue1475, !dbg !52

correct_class1480:                                ; preds = %check_class_id1479
  %arg.value_pos1487 = getelementptr %"struct.rubinius::Object"* %send_result1452, i64 1, !dbg !52
  %178 = bitcast %"struct.rubinius::Object"* %arg.value_pos1487 to double*, !dbg !52
  %farg1488 = load double* %178, align 8, !dbg !52
  br label %continue1489, !dbg !52

continue1475:                                     ; preds = %check_class_id1479, %correct_serial1464
  %masked1491 = and i64 %cast1476, 1, !dbg !52
  %is_fixnum1492 = icmp eq i64 %masked1491, 0, !dbg !52
  br i1 %is_fixnum1492, label %class_fallback1454, label %guarded_body1493, !dbg !52

guarded_body1493:                                 ; preds = %continue1475
  %ashr1495 = ashr i64 %cast1476, 1, !dbg !52
  %179 = sitofp i64 %ashr1495 to double, !dbg !52
  br label %continue1489, !dbg !52

continue1489:                                     ; preds = %guarded_body1493, %correct_class1480
  %rhs1496 = phi double [ %farg1488, %correct_class1480 ], [ %179, %guarded_body1493 ], !dbg !52
  %self.value_pos1500 = getelementptr %"struct.rubinius::Object"* %stack_load1458, i64 1, !dbg !52
  %180 = bitcast %"struct.rubinius::Object"* %self.value_pos1500 to double*, !dbg !52
  %fself1501 = load double* %180, align 8, !dbg !52
  %float.div = fdiv double %fself1501, %rhs1496, !dbg !52
  %result1502 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !52, !rbx-classid !33
  %181 = getelementptr %"struct.rubinius::Float"* %result1502, i64 0, i32 1, !dbg !52
  store double %float.div, double* %181, align 8, !dbg !52
  %182 = getelementptr inbounds %"struct.rubinius::Float"* %result1502, i64 0, i32 0, i32 0, !dbg !52
  br label %continue1456, !dbg !52

class_fallback1454:                               ; preds = %continue1475, %check_class_id1462, %continue1395
  store %"struct.rubinius::Object"* %stack_load1458, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1506 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549264 to %"struct.rubinius::CallSite"**), align 16, !dbg !52
  %execute_pos1507 = getelementptr %"struct.rubinius::CallSite"* %cache_const1506, i64 0, i32 2, !dbg !52
  %execute1508 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1507, align 8, !dbg !52
  store i32 107, i32* %65, align 4, !dbg !52
  %call_site_execute1509 = call %"struct.rubinius::Object"* %execute1508(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1506, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1511 = icmp eq %"struct.rubinius::Object"* %call_site_execute1509, null, !dbg !52
  br i1 %null_check1511, label %bail_out159, label %continue1456, !dbg !52

continue1518:                                     ; preds = %visit_push_ivar_fallback1517, %correct_class1525
  %stack_load1594 = phi %"struct.rubinius::Object"* [ %"select ivar1535", %correct_class1525 ], [ %ivar1538, %visit_push_ivar_fallback1517 ]
  store %"struct.rubinius::Object"* %stack_load1594, %"struct.rubinius::Object"** %stack140, align 8, !dbg !54
  store %"struct.rubinius::Object"* %local1541, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !54
  %cast1548 = ptrtoint %"struct.rubinius::Object"* %stack_load1594 to i64, !dbg !54
  %masked1549 = and i64 %cast1548, 3, !dbg !54
  %is_reference1550 = icmp eq i64 %masked1549, 0, !dbg !54
  br i1 %is_reference1550, label %check_class_id1551, label %class_fallback1543, !dbg !54

check_class_id1524:                               ; preds = %continue1456
  %class_pos1526 = getelementptr %"struct.rubinius::Object"* %self1520, i64 0, i32 0, i32 1, !dbg !54
  %ref_class1527 = load %"struct.rubinius::Class"** %class_pos1526, align 8, !dbg !54
  %class_id_pos1528 = getelementptr %"struct.rubinius::Class"* %ref_class1527, i64 0, i32 4, !dbg !54
  %class_id1529 = load i32* %class_id_pos1528, align 4, !dbg !54
  %check_class_id1530 = icmp eq i32 %class_id1529, 1285, !dbg !54
  br i1 %check_class_id1530, label %correct_class1525, label %visit_push_ivar_fallback1517, !dbg !54

correct_class1525:                                ; preds = %check_class_id1524
  %field_pos15323632 = getelementptr %"struct.rubinius::Object"* %self1520, i64 3, !dbg !54
  %field_pos1532 = bitcast %"struct.rubinius::Object"* %field_pos15323632 to %"struct.rubinius::Object"**, !dbg !54
  %field1533 = load %"struct.rubinius::Object"** %field_pos1532, align 8, !dbg !54
  %prune_undef1534 = icmp eq %"struct.rubinius::Object"* %field1533, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !54
  %"select ivar1535" = select i1 %prune_undef1534, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1533, !dbg !54
  br label %continue1518, !dbg !54

visit_push_ivar_fallback1517:                     ; preds = %check_class_id1524, %continue1456
  %ivar1538 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1520, %"struct.rubinius::Object"* inttoptr (i64 65670 to %"struct.rubinius::Object"*)) #0, !dbg !54
  br label %continue1518, !dbg !54

continue1545:                                     ; preds = %class_fallback1543.continue1545_crit_edge, %continue1578
  %local1621 = phi %"struct.rubinius::Object"* [ %local1541, %continue1578 ], [ %local1621.pre, %class_fallback1543.continue1545_crit_edge ]
  %send_result1602 = phi %"struct.rubinius::Object"* [ %188, %continue1578 ], [ %call_site_execute1599, %class_fallback1543.continue1545_crit_edge ], !dbg !54
  store %"struct.rubinius::Object"* %send_result1602, %"struct.rubinius::Object"** %stack140, align 8, !dbg !54
  %local1605 = load %"struct.rubinius::Object"** %81, align 8, !dbg !54, !rbx-classid !34
  store %"struct.rubinius::Object"* %local1605, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !54
  %field_pos16153625 = getelementptr %"struct.rubinius::Object"* %local1605, i64 3, !dbg !54
  %field_pos1615 = bitcast %"struct.rubinius::Object"* %field_pos16153625 to %"struct.rubinius::Object"**, !dbg !54
  %field1616 = load %"struct.rubinius::Object"** %field_pos1615, align 8, !dbg !54
  %prune_undef1617 = icmp eq %"struct.rubinius::Object"* %field1616, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !54
  %"select ivar1618" = select i1 %prune_undef1617, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1616, !dbg !54
  store %"struct.rubinius::Object"* %"select ivar1618", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !54
  store %"struct.rubinius::Object"* %local1621, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !54
  %cast1628 = ptrtoint %"struct.rubinius::Object"* %"select ivar1618" to i64, !dbg !54
  %masked1629 = and i64 %cast1628, 3, !dbg !54
  %is_reference1630 = icmp eq i64 %masked1629, 0, !dbg !54
  br i1 %is_reference1630, label %check_class_id1631, label %class_fallback1623, !dbg !54

check_class_id1551:                               ; preds = %continue1518
  %class_pos1554 = getelementptr %"struct.rubinius::Object"* %stack_load1594, i64 0, i32 0, i32 1, !dbg !54
  %ref_class1555 = load %"struct.rubinius::Class"** %class_pos1554, align 8, !dbg !54
  %class_id_pos1556 = getelementptr %"struct.rubinius::Class"* %ref_class1555, i64 0, i32 4, !dbg !54
  %class_id1557 = load i32* %class_id_pos1556, align 4, !dbg !54
  %check_class_id1558 = icmp eq i32 %class_id1557, 77, !dbg !54
  br i1 %check_class_id1558, label %correct_class1552, label %class_fallback1543, !dbg !54

correct_class1552:                                ; preds = %check_class_id1551
  %serial_id_pos1559 = getelementptr %"struct.rubinius::Class"* %ref_class1555, i64 0, i32 5, !dbg !54
  %serial_id1560 = load i32* %serial_id_pos1559, align 4, !dbg !54
  %check_serial_id1561 = icmp eq i32 %serial_id1560, 224, !dbg !54
  br i1 %check_serial_id1561, label %correct_serial1553, label %serial_fallback1544, !dbg !54

correct_serial1553:                               ; preds = %correct_class1552
  %cast1565 = ptrtoint %"struct.rubinius::Object"* %local1541 to i64, !dbg !54
  %masked1566 = and i64 %cast1565, 3, !dbg !54
  %is_reference1567 = icmp eq i64 %masked1566, 0, !dbg !54
  br i1 %is_reference1567, label %check_class_id1568, label %continue1564, !dbg !54

serial_fallback1544:                              ; preds = %correct_class1552
  store i32 117, i32* %65, align 4, !dbg !54
  %183 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 117, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !54
  br label %return_pad126, !dbg !54

check_class_id1568:                               ; preds = %correct_serial1553
  %class_pos1570 = getelementptr %"struct.rubinius::Object"* %local1541, i64 0, i32 0, i32 1, !dbg !54
  %ref_class1571 = load %"struct.rubinius::Class"** %class_pos1570, align 8, !dbg !54
  %class_id_pos1572 = getelementptr %"struct.rubinius::Class"* %ref_class1571, i64 0, i32 4, !dbg !54
  %class_id1573 = load i32* %class_id_pos1572, align 4, !dbg !54
  %check_class_id1574 = icmp eq i32 %class_id1573, 77, !dbg !54
  br i1 %check_class_id1574, label %correct_class1569, label %continue1564, !dbg !54

correct_class1569:                                ; preds = %check_class_id1568
  %arg.value_pos1576 = getelementptr %"struct.rubinius::Object"* %local1541, i64 1, !dbg !54
  %184 = bitcast %"struct.rubinius::Object"* %arg.value_pos1576 to double*, !dbg !54
  %farg1577 = load double* %184, align 8, !dbg !54
  br label %continue1578, !dbg !54

continue1564:                                     ; preds = %check_class_id1568, %correct_serial1553
  %masked1580 = and i64 %cast1565, 1, !dbg !54
  %is_fixnum1581 = icmp eq i64 %masked1580, 0, !dbg !54
  br i1 %is_fixnum1581, label %class_fallback1543, label %guarded_body1582, !dbg !54

guarded_body1582:                                 ; preds = %continue1564
  %ashr1584 = ashr i64 %cast1565, 1, !dbg !54
  %185 = sitofp i64 %ashr1584 to double, !dbg !54
  br label %continue1578, !dbg !54

continue1578:                                     ; preds = %guarded_body1582, %correct_class1569
  %rhs1585 = phi double [ %farg1577, %correct_class1569 ], [ %185, %guarded_body1582 ], !dbg !54
  %self.value_pos1589 = getelementptr %"struct.rubinius::Object"* %stack_load1594, i64 1, !dbg !54
  %186 = bitcast %"struct.rubinius::Object"* %self.value_pos1589 to double*, !dbg !54
  %fself1590 = load double* %186, align 8, !dbg !54
  %float.mul1591 = fmul double %rhs1585, %fself1590, !dbg !54
  %result1592 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !54, !rbx-classid !33
  %187 = getelementptr %"struct.rubinius::Float"* %result1592, i64 0, i32 1, !dbg !54
  store double %float.mul1591, double* %187, align 8, !dbg !54
  %188 = getelementptr inbounds %"struct.rubinius::Float"* %result1592, i64 0, i32 0, i32 0, !dbg !54
  br label %continue1545, !dbg !54

class_fallback1543:                               ; preds = %continue1564, %check_class_id1551, %continue1518
  store %"struct.rubinius::Object"* %stack_load1594, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !54
  store i32 1, i32* %out_args_total, align 8, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !54
  %cache_const1596 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549344 to %"struct.rubinius::CallSite"**), align 32, !dbg !54
  %execute_pos1597 = getelementptr %"struct.rubinius::CallSite"* %cache_const1596, i64 0, i32 2, !dbg !54
  %execute1598 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1597, align 8, !dbg !54
  store i32 117, i32* %65, align 4, !dbg !54
  %call_site_execute1599 = call %"struct.rubinius::Object"* %execute1598(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1596, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1601 = icmp eq %"struct.rubinius::Object"* %call_site_execute1599, null, !dbg !54
  br i1 %null_check1601, label %bail_out159, label %class_fallback1543.continue1545_crit_edge, !dbg !54

class_fallback1543.continue1545_crit_edge:        ; preds = %class_fallback1543
  %local1621.pre = load %"struct.rubinius::Object"** %176, align 8, !dbg !54
  br label %continue1545, !dbg !54

continue1625:                                     ; preds = %class_fallback1623.continue1625_crit_edge, %continue1658
  %189 = phi %"struct.rubinius::Object"* [ %send_result1602, %continue1658 ], [ %.pre, %class_fallback1623.continue1625_crit_edge ]
  %send_result1682 = phi %"struct.rubinius::Object"* [ %197, %continue1658 ], [ %call_site_execute1679, %class_fallback1623.continue1625_crit_edge ], !dbg !54
  store %"struct.rubinius::Object"* %send_result1682, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !54
  store %"struct.rubinius::Object"* %189, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !54
  store %"struct.rubinius::Object"* %send_result1682, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !54
  %constant1688 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos564), !dbg !54, !rbx-classid !55
  %stack_load1693 = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !54
  %stack_load1696 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !54
  store %"struct.rubinius::Object"* %stack_load1696, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !54
  %190 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 16, !dbg !54
  store %"struct.rubinius::Object"* %stack_load1696, %"struct.rubinius::Object"** %190, align 8, !dbg !54
  %191 = getelementptr [18 x %"struct.rubinius::Object"*]* %var_mem1413621, i64 0, i64 17, !dbg !54
  store %"struct.rubinius::Object"* %stack_load1693, %"struct.rubinius::Object"** %191, align 8, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !56
  %self1713 = load %"struct.rubinius::Object"** %70, align 8, !dbg !56
  %cast1714 = ptrtoint %"struct.rubinius::Object"* %self1713 to i64, !dbg !56
  %masked1715 = and i64 %cast1714, 3, !dbg !56
  %is_reference1716 = icmp eq i64 %masked1715, 0, !dbg !56
  br i1 %is_reference1716, label %check_class_id1717, label %visit_push_ivar_fallback1710, !dbg !56

check_class_id1631:                               ; preds = %continue1545
  %class_pos1634 = getelementptr %"struct.rubinius::Object"* %"select ivar1618", i64 0, i32 0, i32 1, !dbg !54
  %ref_class1635 = load %"struct.rubinius::Class"** %class_pos1634, align 8, !dbg !54
  %class_id_pos1636 = getelementptr %"struct.rubinius::Class"* %ref_class1635, i64 0, i32 4, !dbg !54
  %class_id1637 = load i32* %class_id_pos1636, align 4, !dbg !54
  %check_class_id1638 = icmp eq i32 %class_id1637, 77, !dbg !54
  br i1 %check_class_id1638, label %correct_class1632, label %class_fallback1623, !dbg !54

correct_class1632:                                ; preds = %check_class_id1631
  %serial_id_pos1639 = getelementptr %"struct.rubinius::Class"* %ref_class1635, i64 0, i32 5, !dbg !54
  %serial_id1640 = load i32* %serial_id_pos1639, align 4, !dbg !54
  %check_serial_id1641 = icmp eq i32 %serial_id1640, 224, !dbg !54
  br i1 %check_serial_id1641, label %correct_serial1633, label %serial_fallback1624, !dbg !54

correct_serial1633:                               ; preds = %correct_class1632
  %cast1645 = ptrtoint %"struct.rubinius::Object"* %local1621 to i64, !dbg !54
  %masked1646 = and i64 %cast1645, 3, !dbg !54
  %is_reference1647 = icmp eq i64 %masked1646, 0, !dbg !54
  br i1 %is_reference1647, label %check_class_id1648, label %continue1644, !dbg !54

serial_fallback1624:                              ; preds = %correct_class1632
  store i32 127, i32* %65, align 4, !dbg !54
  %192 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 127, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !54
  br label %return_pad126, !dbg !54

check_class_id1648:                               ; preds = %correct_serial1633
  %class_pos1650 = getelementptr %"struct.rubinius::Object"* %local1621, i64 0, i32 0, i32 1, !dbg !54
  %ref_class1651 = load %"struct.rubinius::Class"** %class_pos1650, align 8, !dbg !54
  %class_id_pos1652 = getelementptr %"struct.rubinius::Class"* %ref_class1651, i64 0, i32 4, !dbg !54
  %class_id1653 = load i32* %class_id_pos1652, align 4, !dbg !54
  %check_class_id1654 = icmp eq i32 %class_id1653, 77, !dbg !54
  br i1 %check_class_id1654, label %correct_class1649, label %continue1644, !dbg !54

correct_class1649:                                ; preds = %check_class_id1648
  %arg.value_pos1656 = getelementptr %"struct.rubinius::Object"* %local1621, i64 1, !dbg !54
  %193 = bitcast %"struct.rubinius::Object"* %arg.value_pos1656 to double*, !dbg !54
  %farg1657 = load double* %193, align 8, !dbg !54
  br label %continue1658, !dbg !54

continue1644:                                     ; preds = %check_class_id1648, %correct_serial1633
  %masked1660 = and i64 %cast1645, 1, !dbg !54
  %is_fixnum1661 = icmp eq i64 %masked1660, 0, !dbg !54
  br i1 %is_fixnum1661, label %class_fallback1623, label %guarded_body1662, !dbg !54

guarded_body1662:                                 ; preds = %continue1644
  %ashr1664 = ashr i64 %cast1645, 1, !dbg !54
  %194 = sitofp i64 %ashr1664 to double, !dbg !54
  br label %continue1658, !dbg !54

continue1658:                                     ; preds = %guarded_body1662, %correct_class1649
  %rhs1665 = phi double [ %farg1657, %correct_class1649 ], [ %194, %guarded_body1662 ], !dbg !54
  %self.value_pos1669 = getelementptr %"struct.rubinius::Object"* %"select ivar1618", i64 1, !dbg !54
  %195 = bitcast %"struct.rubinius::Object"* %self.value_pos1669 to double*, !dbg !54
  %fself1670 = load double* %195, align 8, !dbg !54
  %float.mul1671 = fmul double %rhs1665, %fself1670, !dbg !54
  %result1672 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !54, !rbx-classid !33
  %196 = getelementptr %"struct.rubinius::Float"* %result1672, i64 0, i32 1, !dbg !54
  store double %float.mul1671, double* %196, align 8, !dbg !54
  %197 = getelementptr inbounds %"struct.rubinius::Float"* %result1672, i64 0, i32 0, i32 0, !dbg !54
  br label %continue1625, !dbg !54

class_fallback1623:                               ; preds = %continue1644, %check_class_id1631, %continue1545
  store %"struct.rubinius::Object"* %"select ivar1618", %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !54
  store i32 1, i32* %out_args_total, align 8, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !54
  %cache_const1676 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549424 to %"struct.rubinius::CallSite"**), align 16, !dbg !54
  %execute_pos1677 = getelementptr %"struct.rubinius::CallSite"* %cache_const1676, i64 0, i32 2, !dbg !54
  %execute1678 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1677, align 8, !dbg !54
  store i32 127, i32* %65, align 4, !dbg !54
  %call_site_execute1679 = call %"struct.rubinius::Object"* %execute1678(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1676, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1681 = icmp eq %"struct.rubinius::Object"* %call_site_execute1679, null, !dbg !54
  br i1 %null_check1681, label %bail_out159, label %class_fallback1623.continue1625_crit_edge, !dbg !54

class_fallback1623.continue1625_crit_edge:        ; preds = %class_fallback1623
  %.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !54
  br label %continue1625, !dbg !54

continue1711:                                     ; preds = %visit_push_ivar_fallback1710, %correct_class1718
  %storemerge3631 = phi %"struct.rubinius::Object"* [ %"select ivar1728", %correct_class1718 ], [ %ivar1731, %visit_push_ivar_fallback1710 ]
  store %"struct.rubinius::Object"* %storemerge3631, %"struct.rubinius::Object"** %stack140, align 8, !dbg !56
  %local1734 = load %"struct.rubinius::Object"** %84, align 8, !dbg !56, !rbx-classid !57
  store %"struct.rubinius::Object"* %local1734, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1693, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !56
  %cast1744 = ptrtoint %"struct.rubinius::Object"* %local1734 to i64, !dbg !56
  %masked1745 = and i64 %cast1744, 3, !dbg !56
  %is_reference1746 = icmp eq i64 %masked1745, 0, !dbg !56
  br i1 %is_reference1746, label %check_class_id1747, label %class_fallback1739, !dbg !56

check_class_id1717:                               ; preds = %continue1625
  %class_pos1719 = getelementptr %"struct.rubinius::Object"* %self1713, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1720 = load %"struct.rubinius::Class"** %class_pos1719, align 8, !dbg !56
  %class_id_pos1721 = getelementptr %"struct.rubinius::Class"* %ref_class1720, i64 0, i32 4, !dbg !56
  %class_id1722 = load i32* %class_id_pos1721, align 4, !dbg !56
  %check_class_id1723 = icmp eq i32 %class_id1722, 1285, !dbg !56
  br i1 %check_class_id1723, label %correct_class1718, label %visit_push_ivar_fallback1710, !dbg !56

correct_class1718:                                ; preds = %check_class_id1717
  %field_pos17253630 = getelementptr %"struct.rubinius::Object"* %self1713, i64 2, !dbg !56
  %field_pos1725 = bitcast %"struct.rubinius::Object"* %field_pos17253630 to %"struct.rubinius::Object"**, !dbg !56
  %field1726 = load %"struct.rubinius::Object"** %field_pos1725, align 8, !dbg !56
  %prune_undef1727 = icmp eq %"struct.rubinius::Object"* %field1726, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !56
  %"select ivar1728" = select i1 %prune_undef1727, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1726, !dbg !56
  br label %continue1711, !dbg !56

visit_push_ivar_fallback1710:                     ; preds = %check_class_id1717, %continue1625
  %ivar1731 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1713, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !56
  br label %continue1711, !dbg !56

continue1741:                                     ; preds = %class_fallback1739.continue1741_crit_edge, %continue1774
  %stack_load1804 = phi %"struct.rubinius::Object"* [ %storemerge3631, %continue1774 ], [ %stack_load1804.pre, %class_fallback1739.continue1741_crit_edge ]
  %send_result1798 = phi %"struct.rubinius::Object"* [ %203, %continue1774 ], [ %call_site_execute1795, %class_fallback1739.continue1741_crit_edge ], !dbg !56
  store %"struct.rubinius::Object"* %send_result1798, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !56
  %cast1805 = ptrtoint %"struct.rubinius::Object"* %stack_load1804 to i64, !dbg !56
  %masked1806 = and i64 %cast1805, 3, !dbg !56
  %is_reference1807 = icmp eq i64 %masked1806, 0, !dbg !56
  br i1 %is_reference1807, label %check_class_id1808, label %class_fallback1800, !dbg !56

check_class_id1747:                               ; preds = %continue1711
  %class_pos1750 = getelementptr %"struct.rubinius::Object"* %local1734, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1751 = load %"struct.rubinius::Class"** %class_pos1750, align 8, !dbg !56
  %class_id_pos1752 = getelementptr %"struct.rubinius::Class"* %ref_class1751, i64 0, i32 4, !dbg !56
  %class_id1753 = load i32* %class_id_pos1752, align 4, !dbg !56
  %check_class_id1754 = icmp eq i32 %class_id1753, 77, !dbg !56
  br i1 %check_class_id1754, label %correct_class1748, label %class_fallback1739, !dbg !56

correct_class1748:                                ; preds = %check_class_id1747
  %serial_id_pos1755 = getelementptr %"struct.rubinius::Class"* %ref_class1751, i64 0, i32 5, !dbg !56
  %serial_id1756 = load i32* %serial_id_pos1755, align 4, !dbg !56
  %check_serial_id1757 = icmp eq i32 %serial_id1756, 224, !dbg !56
  br i1 %check_serial_id1757, label %correct_serial1749, label %serial_fallback1740, !dbg !56

correct_serial1749:                               ; preds = %correct_class1748
  %cast1761 = ptrtoint %"struct.rubinius::Object"* %stack_load1693 to i64, !dbg !56
  %masked1762 = and i64 %cast1761, 3, !dbg !56
  %is_reference1763 = icmp eq i64 %masked1762, 0, !dbg !56
  br i1 %is_reference1763, label %check_class_id1764, label %continue1760, !dbg !56

serial_fallback1740:                              ; preds = %correct_class1748
  store i32 151, i32* %65, align 4, !dbg !56
  %198 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 151, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !56
  br label %return_pad126, !dbg !56

check_class_id1764:                               ; preds = %correct_serial1749
  %class_pos1766 = getelementptr %"struct.rubinius::Object"* %stack_load1693, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1767 = load %"struct.rubinius::Class"** %class_pos1766, align 8, !dbg !56
  %class_id_pos1768 = getelementptr %"struct.rubinius::Class"* %ref_class1767, i64 0, i32 4, !dbg !56
  %class_id1769 = load i32* %class_id_pos1768, align 4, !dbg !56
  %check_class_id1770 = icmp eq i32 %class_id1769, 77, !dbg !56
  br i1 %check_class_id1770, label %correct_class1765, label %continue1760, !dbg !56

correct_class1765:                                ; preds = %check_class_id1764
  %arg.value_pos1772 = getelementptr %"struct.rubinius::Object"* %stack_load1693, i64 1, !dbg !56
  %199 = bitcast %"struct.rubinius::Object"* %arg.value_pos1772 to double*, !dbg !56
  %farg1773 = load double* %199, align 8, !dbg !56
  br label %continue1774, !dbg !56

continue1760:                                     ; preds = %check_class_id1764, %correct_serial1749
  %masked1776 = and i64 %cast1761, 1, !dbg !56
  %is_fixnum1777 = icmp eq i64 %masked1776, 0, !dbg !56
  br i1 %is_fixnum1777, label %class_fallback1739, label %guarded_body1778, !dbg !56

guarded_body1778:                                 ; preds = %continue1760
  %ashr1780 = ashr i64 %cast1761, 1, !dbg !56
  %200 = sitofp i64 %ashr1780 to double, !dbg !56
  br label %continue1774, !dbg !56

continue1774:                                     ; preds = %guarded_body1778, %correct_class1765
  %rhs1781 = phi double [ %farg1773, %correct_class1765 ], [ %200, %guarded_body1778 ], !dbg !56
  %self.value_pos1785 = getelementptr %"struct.rubinius::Object"* %local1734, i64 1, !dbg !56
  %201 = bitcast %"struct.rubinius::Object"* %self.value_pos1785 to double*, !dbg !56
  %fself1786 = load double* %201, align 8, !dbg !56
  %float.mul1787 = fmul double %rhs1781, %fself1786, !dbg !56
  %result1788 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !56, !rbx-classid !33
  %202 = getelementptr %"struct.rubinius::Float"* %result1788, i64 0, i32 1, !dbg !56
  store double %float.mul1787, double* %202, align 8, !dbg !56
  %203 = getelementptr inbounds %"struct.rubinius::Float"* %result1788, i64 0, i32 0, i32 0, !dbg !56
  br label %continue1741, !dbg !56

class_fallback1739:                               ; preds = %continue1760, %check_class_id1747, %continue1711
  store %"struct.rubinius::Object"* %local1734, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !56
  store i32 1, i32* %out_args_total, align 8, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !56
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !56
  %cache_const1792 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549616 to %"struct.rubinius::CallSite"**), align 16, !dbg !56
  %execute_pos1793 = getelementptr %"struct.rubinius::CallSite"* %cache_const1792, i64 0, i32 2, !dbg !56
  %execute1794 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1793, align 8, !dbg !56
  store i32 151, i32* %65, align 4, !dbg !56
  %call_site_execute1795 = call %"struct.rubinius::Object"* %execute1794(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1792, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check1797 = icmp eq %"struct.rubinius::Object"* %call_site_execute1795, null, !dbg !56
  br i1 %null_check1797, label %bail_out159, label %class_fallback1739.continue1741_crit_edge, !dbg !56

class_fallback1739.continue1741_crit_edge:        ; preds = %class_fallback1739
  %stack_load1804.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !56
  br label %continue1741, !dbg !56

continue1802:                                     ; preds = %class_fallback1800, %continue1835
  %send_result1859 = phi %"struct.rubinius::Object"* [ %209, %continue1835 ], [ %call_site_execute1856, %class_fallback1800 ], !dbg !56
  store %"struct.rubinius::Object"* %send_result1859, %"struct.rubinius::Object"** %stack140, align 8, !dbg !56
  %self1861 = load %"struct.rubinius::Object"** %70, align 8, !dbg !56
  %cast1866 = ptrtoint %"struct.rubinius::Object"* %self1861 to i64, !dbg !56
  %masked1867 = and i64 %cast1866, 3, !dbg !56
  %is_reference1868 = icmp eq i64 %masked1867, 0, !dbg !56
  br i1 %is_reference1868, label %check_class_id1869, label %visit_push_ivar_fallback1864, !dbg !56

check_class_id1808:                               ; preds = %continue1741
  %class_pos1811 = getelementptr %"struct.rubinius::Object"* %stack_load1804, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1812 = load %"struct.rubinius::Class"** %class_pos1811, align 8, !dbg !56
  %class_id_pos1813 = getelementptr %"struct.rubinius::Class"* %ref_class1812, i64 0, i32 4, !dbg !56
  %class_id1814 = load i32* %class_id_pos1813, align 4, !dbg !56
  %check_class_id1815 = icmp eq i32 %class_id1814, 77, !dbg !56
  br i1 %check_class_id1815, label %correct_class1809, label %class_fallback1800, !dbg !56

correct_class1809:                                ; preds = %check_class_id1808
  %serial_id_pos1816 = getelementptr %"struct.rubinius::Class"* %ref_class1812, i64 0, i32 5, !dbg !56
  %serial_id1817 = load i32* %serial_id_pos1816, align 4, !dbg !56
  %check_serial_id1818 = icmp eq i32 %serial_id1817, 224, !dbg !56
  br i1 %check_serial_id1818, label %correct_serial1810, label %serial_fallback1801, !dbg !56

correct_serial1810:                               ; preds = %correct_class1809
  %cast1822 = ptrtoint %"struct.rubinius::Object"* %send_result1798 to i64, !dbg !56
  %masked1823 = and i64 %cast1822, 3, !dbg !56
  %is_reference1824 = icmp eq i64 %masked1823, 0, !dbg !56
  br i1 %is_reference1824, label %check_class_id1825, label %continue1821, !dbg !56

serial_fallback1801:                              ; preds = %correct_class1809
  store i32 154, i32* %65, align 4, !dbg !56
  %204 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 154, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !56
  br label %return_pad126, !dbg !56

check_class_id1825:                               ; preds = %correct_serial1810
  %class_pos1827 = getelementptr %"struct.rubinius::Object"* %send_result1798, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1828 = load %"struct.rubinius::Class"** %class_pos1827, align 8, !dbg !56
  %class_id_pos1829 = getelementptr %"struct.rubinius::Class"* %ref_class1828, i64 0, i32 4, !dbg !56
  %class_id1830 = load i32* %class_id_pos1829, align 4, !dbg !56
  %check_class_id1831 = icmp eq i32 %class_id1830, 77, !dbg !56
  br i1 %check_class_id1831, label %correct_class1826, label %continue1821, !dbg !56

correct_class1826:                                ; preds = %check_class_id1825
  %arg.value_pos1833 = getelementptr %"struct.rubinius::Object"* %send_result1798, i64 1, !dbg !56
  %205 = bitcast %"struct.rubinius::Object"* %arg.value_pos1833 to double*, !dbg !56
  %farg1834 = load double* %205, align 8, !dbg !56
  br label %continue1835, !dbg !56

continue1821:                                     ; preds = %check_class_id1825, %correct_serial1810
  %masked1837 = and i64 %cast1822, 1, !dbg !56
  %is_fixnum1838 = icmp eq i64 %masked1837, 0, !dbg !56
  br i1 %is_fixnum1838, label %class_fallback1800, label %guarded_body1839, !dbg !56

guarded_body1839:                                 ; preds = %continue1821
  %ashr1841 = ashr i64 %cast1822, 1, !dbg !56
  %206 = sitofp i64 %ashr1841 to double, !dbg !56
  br label %continue1835, !dbg !56

continue1835:                                     ; preds = %guarded_body1839, %correct_class1826
  %rhs1842 = phi double [ %farg1834, %correct_class1826 ], [ %206, %guarded_body1839 ], !dbg !56
  %self.value_pos1846 = getelementptr %"struct.rubinius::Object"* %stack_load1804, i64 1, !dbg !56
  %207 = bitcast %"struct.rubinius::Object"* %self.value_pos1846 to double*, !dbg !56
  %fself1847 = load double* %207, align 8, !dbg !56
  %float.sub1848 = fsub double %fself1847, %rhs1842, !dbg !56
  %result1849 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !56, !rbx-classid !33
  %208 = getelementptr %"struct.rubinius::Float"* %result1849, i64 0, i32 1, !dbg !56
  store double %float.sub1848, double* %208, align 8, !dbg !56
  %209 = getelementptr inbounds %"struct.rubinius::Float"* %result1849, i64 0, i32 0, i32 0, !dbg !56
  br label %continue1802, !dbg !56

class_fallback1800:                               ; preds = %continue1821, %check_class_id1808, %continue1741
  store %"struct.rubinius::Object"* %stack_load1804, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !56
  store i32 1, i32* %out_args_total, align 8, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !56
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !56
  %cache_const1853 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549640 to %"struct.rubinius::CallSite"**), align 8, !dbg !56
  %execute_pos1854 = getelementptr %"struct.rubinius::CallSite"* %cache_const1853, i64 0, i32 2, !dbg !56
  %execute1855 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1854, align 8, !dbg !56
  store i32 154, i32* %65, align 4, !dbg !56
  %call_site_execute1856 = call %"struct.rubinius::Object"* %execute1855(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1853, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check1858 = icmp eq %"struct.rubinius::Object"* %call_site_execute1856, null, !dbg !56
  br i1 %null_check1858, label %bail_out159, label %continue1802, !dbg !56

continue1865:                                     ; preds = %visit_push_ivar_fallback1864, %correct_class1870, %run_barrier, %reference_obj
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !58
  %self1890 = load %"struct.rubinius::Object"** %70, align 8, !dbg !58
  %cast1891 = ptrtoint %"struct.rubinius::Object"* %self1890 to i64, !dbg !58
  %masked1892 = and i64 %cast1891, 3, !dbg !58
  %is_reference1893 = icmp eq i64 %masked1892, 0, !dbg !58
  br i1 %is_reference1893, label %check_class_id1894, label %visit_push_ivar_fallback1887, !dbg !58

check_class_id1869:                               ; preds = %continue1802
  %class_pos1871 = getelementptr %"struct.rubinius::Object"* %self1861, i64 0, i32 0, i32 1, !dbg !56
  %ref_class1872 = load %"struct.rubinius::Class"** %class_pos1871, align 8, !dbg !56
  %class_id_pos1873 = getelementptr %"struct.rubinius::Class"* %ref_class1872, i64 0, i32 4, !dbg !56
  %class_id1874 = load i32* %class_id_pos1873, align 4, !dbg !56
  %check_class_id1875 = icmp eq i32 %class_id1874, 1285, !dbg !56
  br i1 %check_class_id1875, label %correct_class1870, label %visit_push_ivar_fallback1864, !dbg !56

correct_class1870:                                ; preds = %check_class_id1869
  %210 = getelementptr inbounds %"struct.rubinius::Object"* %self1861, i64 2, i32 0, i32 0, i32 0, !dbg !56
  %send_result1859.c = ptrtoint %"struct.rubinius::Object"* %send_result1859 to i64, !dbg !56
  store i64 %send_result1859.c, i64* %210, align 8, !dbg !56
  %masked1879 = and i64 %send_result1859.c, 3, !dbg !56
  %is_reference1880 = icmp eq i64 %masked1879, 0, !dbg !56
  br i1 %is_reference1880, label %reference_obj, label %continue1865, !dbg !56

visit_push_ivar_fallback1864:                     ; preds = %check_class_id1869, %continue1802
  %ivar1883 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self1861, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result1859), !dbg !56
  %null_check1886 = icmp eq %"struct.rubinius::Object"* %ivar1883, null, !dbg !56
  br i1 %null_check1886, label %bail_out159, label %continue1865, !dbg !56

reference_obj:                                    ; preds = %correct_class1870
  %object_memory_mark = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !56
  %word_pos1881 = getelementptr %"struct.rubinius::Object"* %self1861, i64 0, i32 0, i32 0, i32 0, !dbg !56
  %flags1882 = load i64* %word_pos1881, align 8, !dbg !56
  %mark_mask = and i64 %flags1882, 3670016, !dbg !56
  %scan_mark = add i32 %object_memory_mark, 1, !dbg !56
  %211 = zext i32 %scan_mark to i64, !dbg !56
  %lshr = shl nuw nsw i64 %211, 19, !dbg !56
  %is_scanned = icmp ne i64 %mark_mask, %lshr, !dbg !56
  %zone_mask = and i64 %flags1882, 768, !dbg !56
  %is_young = icmp eq i64 %zone_mask, 512, !dbg !56
  %or.cond = and i1 %is_scanned, %is_young, !dbg !56
  br i1 %or.cond, label %continue1865, label %run_barrier, !dbg !56

run_barrier:                                      ; preds = %reference_obj
  %212 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1861, %"struct.rubinius::Object"* %send_result1859), !dbg !56
  br label %continue1865, !dbg !56

continue1888:                                     ; preds = %visit_push_ivar_fallback1887, %correct_class1895
  %storemerge3628 = phi %"struct.rubinius::Object"* [ %"select ivar1905", %correct_class1895 ], [ %ivar1908, %visit_push_ivar_fallback1887 ]
  store %"struct.rubinius::Object"* %storemerge3628, %"struct.rubinius::Object"** %stack140, align 8, !dbg !58
  %local1911 = load %"struct.rubinius::Object"** %93, align 8, !dbg !58, !rbx-classid !59
  store %"struct.rubinius::Object"* %local1911, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !58
  %local1914 = load %"struct.rubinius::Object"** %191, align 8, !dbg !58, !rbx-classid !60
  store %"struct.rubinius::Object"* %local1914, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !58
  %cast1921 = ptrtoint %"struct.rubinius::Object"* %local1911 to i64, !dbg !58
  %masked1922 = and i64 %cast1921, 3, !dbg !58
  %is_reference1923 = icmp eq i64 %masked1922, 0, !dbg !58
  br i1 %is_reference1923, label %check_class_id1924, label %class_fallback1916, !dbg !58

check_class_id1894:                               ; preds = %continue1865
  %class_pos1896 = getelementptr %"struct.rubinius::Object"* %self1890, i64 0, i32 0, i32 1, !dbg !58
  %ref_class1897 = load %"struct.rubinius::Class"** %class_pos1896, align 8, !dbg !58
  %class_id_pos1898 = getelementptr %"struct.rubinius::Class"* %ref_class1897, i64 0, i32 4, !dbg !58
  %class_id1899 = load i32* %class_id_pos1898, align 4, !dbg !58
  %check_class_id1900 = icmp eq i32 %class_id1899, 1285, !dbg !58
  br i1 %check_class_id1900, label %correct_class1895, label %visit_push_ivar_fallback1887, !dbg !58

correct_class1895:                                ; preds = %check_class_id1894
  %field_pos1902 = getelementptr %"struct.rubinius::Object"* %self1890, i64 2, i32 0, i32 1, !dbg !58
  %213 = load %"struct.rubinius::Class"** %field_pos1902, align 8, !dbg !58
  %field1903 = getelementptr inbounds %"struct.rubinius::Class"* %213, i64 0, i32 0, i32 0, !dbg !58
  %prune_undef1904 = icmp eq %"struct.rubinius::Object"* %field1903, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !58
  %"select ivar1905" = select i1 %prune_undef1904, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field1903, !dbg !58
  br label %continue1888, !dbg !58

visit_push_ivar_fallback1887:                     ; preds = %check_class_id1894, %continue1865
  %ivar1908 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self1890, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !58
  br label %continue1888, !dbg !58

continue1918:                                     ; preds = %class_fallback1916.continue1918_crit_edge, %continue1951
  %stack_load1981 = phi %"struct.rubinius::Object"* [ %storemerge3628, %continue1951 ], [ %stack_load1981.pre, %class_fallback1916.continue1918_crit_edge ]
  %send_result1975 = phi %"struct.rubinius::Object"* [ %219, %continue1951 ], [ %call_site_execute1972, %class_fallback1916.continue1918_crit_edge ], !dbg !58
  store %"struct.rubinius::Object"* %send_result1975, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !58
  %cast1982 = ptrtoint %"struct.rubinius::Object"* %stack_load1981 to i64, !dbg !58
  %masked1983 = and i64 %cast1982, 3, !dbg !58
  %is_reference1984 = icmp eq i64 %masked1983, 0, !dbg !58
  br i1 %is_reference1984, label %check_class_id1985, label %class_fallback1977, !dbg !58

check_class_id1924:                               ; preds = %continue1888
  %class_pos1927 = getelementptr %"struct.rubinius::Object"* %local1911, i64 0, i32 0, i32 1, !dbg !58
  %ref_class1928 = load %"struct.rubinius::Class"** %class_pos1927, align 8, !dbg !58
  %class_id_pos1929 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i64 0, i32 4, !dbg !58
  %class_id1930 = load i32* %class_id_pos1929, align 4, !dbg !58
  %check_class_id1931 = icmp eq i32 %class_id1930, 77, !dbg !58
  br i1 %check_class_id1931, label %correct_class1925, label %class_fallback1916, !dbg !58

correct_class1925:                                ; preds = %check_class_id1924
  %serial_id_pos1932 = getelementptr %"struct.rubinius::Class"* %ref_class1928, i64 0, i32 5, !dbg !58
  %serial_id1933 = load i32* %serial_id_pos1932, align 4, !dbg !58
  %check_serial_id1934 = icmp eq i32 %serial_id1933, 224, !dbg !58
  br i1 %check_serial_id1934, label %correct_serial1926, label %serial_fallback1917, !dbg !58

correct_serial1926:                               ; preds = %correct_class1925
  %cast1938 = ptrtoint %"struct.rubinius::Object"* %local1914 to i64, !dbg !58
  %masked1939 = and i64 %cast1938, 3, !dbg !58
  %is_reference1940 = icmp eq i64 %masked1939, 0, !dbg !58
  br i1 %is_reference1940, label %check_class_id1941, label %continue1937, !dbg !58

serial_fallback1917:                              ; preds = %correct_class1925
  store i32 166, i32* %65, align 4, !dbg !58
  %214 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 166, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !58
  br label %return_pad126, !dbg !58

check_class_id1941:                               ; preds = %correct_serial1926
  %class_pos1943 = getelementptr %"struct.rubinius::Object"* %local1914, i64 0, i32 0, i32 1, !dbg !58
  %ref_class1944 = load %"struct.rubinius::Class"** %class_pos1943, align 8, !dbg !58
  %class_id_pos1945 = getelementptr %"struct.rubinius::Class"* %ref_class1944, i64 0, i32 4, !dbg !58
  %class_id1946 = load i32* %class_id_pos1945, align 4, !dbg !58
  %check_class_id1947 = icmp eq i32 %class_id1946, 77, !dbg !58
  br i1 %check_class_id1947, label %correct_class1942, label %continue1937, !dbg !58

correct_class1942:                                ; preds = %check_class_id1941
  %arg.value_pos1949 = getelementptr %"struct.rubinius::Object"* %local1914, i64 1, !dbg !58
  %215 = bitcast %"struct.rubinius::Object"* %arg.value_pos1949 to double*, !dbg !58
  %farg1950 = load double* %215, align 8, !dbg !58
  br label %continue1951, !dbg !58

continue1937:                                     ; preds = %check_class_id1941, %correct_serial1926
  %masked1953 = and i64 %cast1938, 1, !dbg !58
  %is_fixnum1954 = icmp eq i64 %masked1953, 0, !dbg !58
  br i1 %is_fixnum1954, label %class_fallback1916, label %guarded_body1955, !dbg !58

guarded_body1955:                                 ; preds = %continue1937
  %ashr1957 = ashr i64 %cast1938, 1, !dbg !58
  %216 = sitofp i64 %ashr1957 to double, !dbg !58
  br label %continue1951, !dbg !58

continue1951:                                     ; preds = %guarded_body1955, %correct_class1942
  %rhs1958 = phi double [ %farg1950, %correct_class1942 ], [ %216, %guarded_body1955 ], !dbg !58
  %self.value_pos1962 = getelementptr %"struct.rubinius::Object"* %local1911, i64 1, !dbg !58
  %217 = bitcast %"struct.rubinius::Object"* %self.value_pos1962 to double*, !dbg !58
  %fself1963 = load double* %217, align 8, !dbg !58
  %float.mul1964 = fmul double %rhs1958, %fself1963, !dbg !58
  %result1965 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !58, !rbx-classid !33
  %218 = getelementptr %"struct.rubinius::Float"* %result1965, i64 0, i32 1, !dbg !58
  store double %float.mul1964, double* %218, align 8, !dbg !58
  %219 = getelementptr inbounds %"struct.rubinius::Float"* %result1965, i64 0, i32 0, i32 0, !dbg !58
  br label %continue1918, !dbg !58

class_fallback1916:                               ; preds = %continue1937, %check_class_id1924, %continue1888
  store %"struct.rubinius::Object"* %local1911, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !58
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !58
  store i32 1, i32* %out_args_total, align 8, !dbg !58
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !58
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !58
  %cache_const1969 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549736 to %"struct.rubinius::CallSite"**), align 8, !dbg !58
  %execute_pos1970 = getelementptr %"struct.rubinius::CallSite"* %cache_const1969, i64 0, i32 2, !dbg !58
  %execute1971 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1970, align 8, !dbg !58
  store i32 166, i32* %65, align 4, !dbg !58
  %call_site_execute1972 = call %"struct.rubinius::Object"* %execute1971(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1969, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !58
  %null_check1974 = icmp eq %"struct.rubinius::Object"* %call_site_execute1972, null, !dbg !58
  br i1 %null_check1974, label %bail_out159, label %class_fallback1916.continue1918_crit_edge, !dbg !58

class_fallback1916.continue1918_crit_edge:        ; preds = %class_fallback1916
  %stack_load1981.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !58
  br label %continue1918, !dbg !58

continue1979:                                     ; preds = %class_fallback1977, %continue2012
  %send_result2036 = phi %"struct.rubinius::Object"* [ %225, %continue2012 ], [ %call_site_execute2033, %class_fallback1977 ], !dbg !58
  store %"struct.rubinius::Object"* %send_result2036, %"struct.rubinius::Object"** %stack140, align 8, !dbg !58
  %self2038 = load %"struct.rubinius::Object"** %70, align 8, !dbg !58
  %cast2043 = ptrtoint %"struct.rubinius::Object"* %self2038 to i64, !dbg !58
  %masked2044 = and i64 %cast2043, 3, !dbg !58
  %is_reference2045 = icmp eq i64 %masked2044, 0, !dbg !58
  br i1 %is_reference2045, label %check_class_id2046, label %visit_push_ivar_fallback2041, !dbg !58

check_class_id1985:                               ; preds = %continue1918
  %class_pos1988 = getelementptr %"struct.rubinius::Object"* %stack_load1981, i64 0, i32 0, i32 1, !dbg !58
  %ref_class1989 = load %"struct.rubinius::Class"** %class_pos1988, align 8, !dbg !58
  %class_id_pos1990 = getelementptr %"struct.rubinius::Class"* %ref_class1989, i64 0, i32 4, !dbg !58
  %class_id1991 = load i32* %class_id_pos1990, align 4, !dbg !58
  %check_class_id1992 = icmp eq i32 %class_id1991, 77, !dbg !58
  br i1 %check_class_id1992, label %correct_class1986, label %class_fallback1977, !dbg !58

correct_class1986:                                ; preds = %check_class_id1985
  %serial_id_pos1993 = getelementptr %"struct.rubinius::Class"* %ref_class1989, i64 0, i32 5, !dbg !58
  %serial_id1994 = load i32* %serial_id_pos1993, align 4, !dbg !58
  %check_serial_id1995 = icmp eq i32 %serial_id1994, 224, !dbg !58
  br i1 %check_serial_id1995, label %correct_serial1987, label %serial_fallback1978, !dbg !58

correct_serial1987:                               ; preds = %correct_class1986
  %cast1999 = ptrtoint %"struct.rubinius::Object"* %send_result1975 to i64, !dbg !58
  %masked2000 = and i64 %cast1999, 3, !dbg !58
  %is_reference2001 = icmp eq i64 %masked2000, 0, !dbg !58
  br i1 %is_reference2001, label %check_class_id2002, label %continue1998, !dbg !58

serial_fallback1978:                              ; preds = %correct_class1986
  store i32 169, i32* %65, align 4, !dbg !58
  %220 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 169, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !58
  br label %return_pad126, !dbg !58

check_class_id2002:                               ; preds = %correct_serial1987
  %class_pos2004 = getelementptr %"struct.rubinius::Object"* %send_result1975, i64 0, i32 0, i32 1, !dbg !58
  %ref_class2005 = load %"struct.rubinius::Class"** %class_pos2004, align 8, !dbg !58
  %class_id_pos2006 = getelementptr %"struct.rubinius::Class"* %ref_class2005, i64 0, i32 4, !dbg !58
  %class_id2007 = load i32* %class_id_pos2006, align 4, !dbg !58
  %check_class_id2008 = icmp eq i32 %class_id2007, 77, !dbg !58
  br i1 %check_class_id2008, label %correct_class2003, label %continue1998, !dbg !58

correct_class2003:                                ; preds = %check_class_id2002
  %arg.value_pos2010 = getelementptr %"struct.rubinius::Object"* %send_result1975, i64 1, !dbg !58
  %221 = bitcast %"struct.rubinius::Object"* %arg.value_pos2010 to double*, !dbg !58
  %farg2011 = load double* %221, align 8, !dbg !58
  br label %continue2012, !dbg !58

continue1998:                                     ; preds = %check_class_id2002, %correct_serial1987
  %masked2014 = and i64 %cast1999, 1, !dbg !58
  %is_fixnum2015 = icmp eq i64 %masked2014, 0, !dbg !58
  br i1 %is_fixnum2015, label %class_fallback1977, label %guarded_body2016, !dbg !58

guarded_body2016:                                 ; preds = %continue1998
  %ashr2018 = ashr i64 %cast1999, 1, !dbg !58
  %222 = sitofp i64 %ashr2018 to double, !dbg !58
  br label %continue2012, !dbg !58

continue2012:                                     ; preds = %guarded_body2016, %correct_class2003
  %rhs2019 = phi double [ %farg2011, %correct_class2003 ], [ %222, %guarded_body2016 ], !dbg !58
  %self.value_pos2023 = getelementptr %"struct.rubinius::Object"* %stack_load1981, i64 1, !dbg !58
  %223 = bitcast %"struct.rubinius::Object"* %self.value_pos2023 to double*, !dbg !58
  %fself2024 = load double* %223, align 8, !dbg !58
  %float.sub2025 = fsub double %fself2024, %rhs2019, !dbg !58
  %result2026 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !58, !rbx-classid !33
  %224 = getelementptr %"struct.rubinius::Float"* %result2026, i64 0, i32 1, !dbg !58
  store double %float.sub2025, double* %224, align 8, !dbg !58
  %225 = getelementptr inbounds %"struct.rubinius::Float"* %result2026, i64 0, i32 0, i32 0, !dbg !58
  br label %continue1979, !dbg !58

class_fallback1977:                               ; preds = %continue1998, %check_class_id1985, %continue1918
  store %"struct.rubinius::Object"* %stack_load1981, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !58
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !58
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !58
  store i32 1, i32* %out_args_total, align 8, !dbg !58
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !58
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !58
  %cache_const2030 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549760 to %"struct.rubinius::CallSite"**), align 512, !dbg !58
  %execute_pos2031 = getelementptr %"struct.rubinius::CallSite"* %cache_const2030, i64 0, i32 2, !dbg !58
  %execute2032 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2031, align 8, !dbg !58
  store i32 169, i32* %65, align 4, !dbg !58
  %call_site_execute2033 = call %"struct.rubinius::Object"* %execute2032(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2030, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !58
  %null_check2035 = icmp eq %"struct.rubinius::Object"* %call_site_execute2033, null, !dbg !58
  br i1 %null_check2035, label %bail_out159, label %continue1979, !dbg !58

continue2042:                                     ; preds = %visit_push_ivar_fallback2041, %correct_class2047, %run_barrier2060, %reference_obj2058
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !61
  %self2078 = load %"struct.rubinius::Object"** %70, align 8, !dbg !61
  %cast2079 = ptrtoint %"struct.rubinius::Object"* %self2078 to i64, !dbg !61
  %masked2080 = and i64 %cast2079, 3, !dbg !61
  %is_reference2081 = icmp eq i64 %masked2080, 0, !dbg !61
  br i1 %is_reference2081, label %check_class_id2082, label %visit_push_ivar_fallback2075, !dbg !61

check_class_id2046:                               ; preds = %continue1979
  %class_pos2048 = getelementptr %"struct.rubinius::Object"* %self2038, i64 0, i32 0, i32 1, !dbg !58
  %ref_class2049 = load %"struct.rubinius::Class"** %class_pos2048, align 8, !dbg !58
  %class_id_pos2050 = getelementptr %"struct.rubinius::Class"* %ref_class2049, i64 0, i32 4, !dbg !58
  %class_id2051 = load i32* %class_id_pos2050, align 4, !dbg !58
  %check_class_id2052 = icmp eq i32 %class_id2051, 1285, !dbg !58
  br i1 %check_class_id2052, label %correct_class2047, label %visit_push_ivar_fallback2041, !dbg !58

correct_class2047:                                ; preds = %check_class_id2046
  %field_pos2054 = getelementptr %"struct.rubinius::Object"* %self2038, i64 2, i32 0, i32 1, !dbg !58
  %send_result2036.c = bitcast %"struct.rubinius::Object"* %send_result2036 to %"struct.rubinius::Class"*, !dbg !58
  store %"struct.rubinius::Class"* %send_result2036.c, %"struct.rubinius::Class"** %field_pos2054, align 8, !dbg !58
  %cast2055 = ptrtoint %"struct.rubinius::Object"* %send_result2036 to i64, !dbg !58
  %masked2056 = and i64 %cast2055, 3, !dbg !58
  %is_reference2057 = icmp eq i64 %masked2056, 0, !dbg !58
  br i1 %is_reference2057, label %reference_obj2058, label %continue2042, !dbg !58

visit_push_ivar_fallback2041:                     ; preds = %check_class_id2046, %continue1979
  %ivar2071 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self2038, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result2036), !dbg !58
  %null_check2074 = icmp eq %"struct.rubinius::Object"* %ivar2071, null, !dbg !58
  br i1 %null_check2074, label %bail_out159, label %continue2042, !dbg !58

reference_obj2058:                                ; preds = %correct_class2047
  %object_memory_mark2062 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !58
  %word_pos2063 = getelementptr %"struct.rubinius::Object"* %self2038, i64 0, i32 0, i32 0, i32 0, !dbg !58
  %flags2064 = load i64* %word_pos2063, align 8, !dbg !58
  %mark_mask2065 = and i64 %flags2064, 3670016, !dbg !58
  %scan_mark2066 = add i32 %object_memory_mark2062, 1, !dbg !58
  %226 = zext i32 %scan_mark2066 to i64, !dbg !58
  %lshr2067 = shl nuw nsw i64 %226, 19, !dbg !58
  %is_scanned2068 = icmp ne i64 %mark_mask2065, %lshr2067, !dbg !58
  %zone_mask2069 = and i64 %flags2064, 768, !dbg !58
  %is_young2070 = icmp eq i64 %zone_mask2069, 512, !dbg !58
  %or.cond3610 = and i1 %is_scanned2068, %is_young2070, !dbg !58
  br i1 %or.cond3610, label %continue2042, label %run_barrier2060, !dbg !58

run_barrier2060:                                  ; preds = %reference_obj2058
  %227 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2038, %"struct.rubinius::Object"* %send_result2036), !dbg !58
  br label %continue2042, !dbg !58

continue2076:                                     ; preds = %visit_push_ivar_fallback2075, %correct_class2083
  %storemerge = phi %"struct.rubinius::Object"* [ %"select ivar2093", %correct_class2083 ], [ %ivar2096, %visit_push_ivar_fallback2075 ]
  store %"struct.rubinius::Object"* %storemerge, %"struct.rubinius::Object"** %stack140, align 8, !dbg !61
  %local2099 = load %"struct.rubinius::Object"** %102, align 8, !dbg !61, !rbx-classid !62
  store %"struct.rubinius::Object"* %local2099, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !61
  %local2102 = load %"struct.rubinius::Object"** %191, align 8, !dbg !61, !rbx-classid !60
  store %"struct.rubinius::Object"* %local2102, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !61
  %cast2109 = ptrtoint %"struct.rubinius::Object"* %local2099 to i64, !dbg !61
  %masked2110 = and i64 %cast2109, 3, !dbg !61
  %is_reference2111 = icmp eq i64 %masked2110, 0, !dbg !61
  br i1 %is_reference2111, label %check_class_id2112, label %class_fallback2104, !dbg !61

check_class_id2082:                               ; preds = %continue2042
  %class_pos2084 = getelementptr %"struct.rubinius::Object"* %self2078, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2085 = load %"struct.rubinius::Class"** %class_pos2084, align 8, !dbg !61
  %class_id_pos2086 = getelementptr %"struct.rubinius::Class"* %ref_class2085, i64 0, i32 4, !dbg !61
  %class_id2087 = load i32* %class_id_pos2086, align 4, !dbg !61
  %check_class_id2088 = icmp eq i32 %class_id2087, 1285, !dbg !61
  br i1 %check_class_id2088, label %correct_class2083, label %visit_push_ivar_fallback2075, !dbg !61

correct_class2083:                                ; preds = %check_class_id2082
  %228 = getelementptr %"struct.rubinius::Object"* %self2078, i64 2, i32 0, i32 2, !dbg !61
  %field2091 = load %"struct.rubinius::Object"** %228, align 8, !dbg !61
  %prune_undef2092 = icmp eq %"struct.rubinius::Object"* %field2091, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !61
  %"select ivar2093" = select i1 %prune_undef2092, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2091, !dbg !61
  br label %continue2076, !dbg !61

visit_push_ivar_fallback2075:                     ; preds = %check_class_id2082, %continue2042
  %ivar2096 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2078, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !61
  br label %continue2076, !dbg !61

continue2106:                                     ; preds = %class_fallback2104.continue2106_crit_edge, %continue2139
  %stack_load2169 = phi %"struct.rubinius::Object"* [ %storemerge, %continue2139 ], [ %stack_load2169.pre, %class_fallback2104.continue2106_crit_edge ]
  %send_result2163 = phi %"struct.rubinius::Object"* [ %234, %continue2139 ], [ %call_site_execute2160, %class_fallback2104.continue2106_crit_edge ], !dbg !61
  store %"struct.rubinius::Object"* %send_result2163, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !61
  %cast2170 = ptrtoint %"struct.rubinius::Object"* %stack_load2169 to i64, !dbg !61
  %masked2171 = and i64 %cast2170, 3, !dbg !61
  %is_reference2172 = icmp eq i64 %masked2171, 0, !dbg !61
  br i1 %is_reference2172, label %check_class_id2173, label %class_fallback2165, !dbg !61

check_class_id2112:                               ; preds = %continue2076
  %class_pos2115 = getelementptr %"struct.rubinius::Object"* %local2099, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2116 = load %"struct.rubinius::Class"** %class_pos2115, align 8, !dbg !61
  %class_id_pos2117 = getelementptr %"struct.rubinius::Class"* %ref_class2116, i64 0, i32 4, !dbg !61
  %class_id2118 = load i32* %class_id_pos2117, align 4, !dbg !61
  %check_class_id2119 = icmp eq i32 %class_id2118, 77, !dbg !61
  br i1 %check_class_id2119, label %correct_class2113, label %class_fallback2104, !dbg !61

correct_class2113:                                ; preds = %check_class_id2112
  %serial_id_pos2120 = getelementptr %"struct.rubinius::Class"* %ref_class2116, i64 0, i32 5, !dbg !61
  %serial_id2121 = load i32* %serial_id_pos2120, align 4, !dbg !61
  %check_serial_id2122 = icmp eq i32 %serial_id2121, 224, !dbg !61
  br i1 %check_serial_id2122, label %correct_serial2114, label %serial_fallback2105, !dbg !61

correct_serial2114:                               ; preds = %correct_class2113
  %cast2126 = ptrtoint %"struct.rubinius::Object"* %local2102 to i64, !dbg !61
  %masked2127 = and i64 %cast2126, 3, !dbg !61
  %is_reference2128 = icmp eq i64 %masked2127, 0, !dbg !61
  br i1 %is_reference2128, label %check_class_id2129, label %continue2125, !dbg !61

serial_fallback2105:                              ; preds = %correct_class2113
  store i32 181, i32* %65, align 4, !dbg !61
  %229 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 181, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !61
  br label %return_pad126, !dbg !61

check_class_id2129:                               ; preds = %correct_serial2114
  %class_pos2131 = getelementptr %"struct.rubinius::Object"* %local2102, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2132 = load %"struct.rubinius::Class"** %class_pos2131, align 8, !dbg !61
  %class_id_pos2133 = getelementptr %"struct.rubinius::Class"* %ref_class2132, i64 0, i32 4, !dbg !61
  %class_id2134 = load i32* %class_id_pos2133, align 4, !dbg !61
  %check_class_id2135 = icmp eq i32 %class_id2134, 77, !dbg !61
  br i1 %check_class_id2135, label %correct_class2130, label %continue2125, !dbg !61

correct_class2130:                                ; preds = %check_class_id2129
  %arg.value_pos2137 = getelementptr %"struct.rubinius::Object"* %local2102, i64 1, !dbg !61
  %230 = bitcast %"struct.rubinius::Object"* %arg.value_pos2137 to double*, !dbg !61
  %farg2138 = load double* %230, align 8, !dbg !61
  br label %continue2139, !dbg !61

continue2125:                                     ; preds = %check_class_id2129, %correct_serial2114
  %masked2141 = and i64 %cast2126, 1, !dbg !61
  %is_fixnum2142 = icmp eq i64 %masked2141, 0, !dbg !61
  br i1 %is_fixnum2142, label %class_fallback2104, label %guarded_body2143, !dbg !61

guarded_body2143:                                 ; preds = %continue2125
  %ashr2145 = ashr i64 %cast2126, 1, !dbg !61
  %231 = sitofp i64 %ashr2145 to double, !dbg !61
  br label %continue2139, !dbg !61

continue2139:                                     ; preds = %guarded_body2143, %correct_class2130
  %rhs2146 = phi double [ %farg2138, %correct_class2130 ], [ %231, %guarded_body2143 ], !dbg !61
  %self.value_pos2150 = getelementptr %"struct.rubinius::Object"* %local2099, i64 1, !dbg !61
  %232 = bitcast %"struct.rubinius::Object"* %self.value_pos2150 to double*, !dbg !61
  %fself2151 = load double* %232, align 8, !dbg !61
  %float.mul2152 = fmul double %rhs2146, %fself2151, !dbg !61
  %result2153 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !61, !rbx-classid !33
  %233 = getelementptr %"struct.rubinius::Float"* %result2153, i64 0, i32 1, !dbg !61
  store double %float.mul2152, double* %233, align 8, !dbg !61
  %234 = getelementptr inbounds %"struct.rubinius::Float"* %result2153, i64 0, i32 0, i32 0, !dbg !61
  br label %continue2106, !dbg !61

class_fallback2104:                               ; preds = %continue2125, %check_class_id2112, %continue2076
  store %"struct.rubinius::Object"* %local2099, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !61
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !61
  store i32 1, i32* %out_args_total, align 8, !dbg !61
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !61
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !61
  %cache_const2157 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549856 to %"struct.rubinius::CallSite"**), align 32, !dbg !61
  %execute_pos2158 = getelementptr %"struct.rubinius::CallSite"* %cache_const2157, i64 0, i32 2, !dbg !61
  %execute2159 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2158, align 8, !dbg !61
  store i32 181, i32* %65, align 4, !dbg !61
  %call_site_execute2160 = call %"struct.rubinius::Object"* %execute2159(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2157, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !61
  %null_check2162 = icmp eq %"struct.rubinius::Object"* %call_site_execute2160, null, !dbg !61
  br i1 %null_check2162, label %bail_out159, label %class_fallback2104.continue2106_crit_edge, !dbg !61

class_fallback2104.continue2106_crit_edge:        ; preds = %class_fallback2104
  %stack_load2169.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !61
  br label %continue2106, !dbg !61

continue2167:                                     ; preds = %class_fallback2165, %continue2200
  %send_result2224 = phi %"struct.rubinius::Object"* [ %240, %continue2200 ], [ %call_site_execute2221, %class_fallback2165 ], !dbg !61
  store %"struct.rubinius::Object"* %send_result2224, %"struct.rubinius::Object"** %stack140, align 8, !dbg !61
  %self2226 = load %"struct.rubinius::Object"** %70, align 8, !dbg !61
  %cast2231 = ptrtoint %"struct.rubinius::Object"* %self2226 to i64, !dbg !61
  %masked2232 = and i64 %cast2231, 3, !dbg !61
  %is_reference2233 = icmp eq i64 %masked2232, 0, !dbg !61
  br i1 %is_reference2233, label %check_class_id2234, label %visit_push_ivar_fallback2229, !dbg !61

check_class_id2173:                               ; preds = %continue2106
  %class_pos2176 = getelementptr %"struct.rubinius::Object"* %stack_load2169, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2177 = load %"struct.rubinius::Class"** %class_pos2176, align 8, !dbg !61
  %class_id_pos2178 = getelementptr %"struct.rubinius::Class"* %ref_class2177, i64 0, i32 4, !dbg !61
  %class_id2179 = load i32* %class_id_pos2178, align 4, !dbg !61
  %check_class_id2180 = icmp eq i32 %class_id2179, 77, !dbg !61
  br i1 %check_class_id2180, label %correct_class2174, label %class_fallback2165, !dbg !61

correct_class2174:                                ; preds = %check_class_id2173
  %serial_id_pos2181 = getelementptr %"struct.rubinius::Class"* %ref_class2177, i64 0, i32 5, !dbg !61
  %serial_id2182 = load i32* %serial_id_pos2181, align 4, !dbg !61
  %check_serial_id2183 = icmp eq i32 %serial_id2182, 224, !dbg !61
  br i1 %check_serial_id2183, label %correct_serial2175, label %serial_fallback2166, !dbg !61

correct_serial2175:                               ; preds = %correct_class2174
  %cast2187 = ptrtoint %"struct.rubinius::Object"* %send_result2163 to i64, !dbg !61
  %masked2188 = and i64 %cast2187, 3, !dbg !61
  %is_reference2189 = icmp eq i64 %masked2188, 0, !dbg !61
  br i1 %is_reference2189, label %check_class_id2190, label %continue2186, !dbg !61

serial_fallback2166:                              ; preds = %correct_class2174
  store i32 184, i32* %65, align 4, !dbg !61
  %235 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 184, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !61
  br label %return_pad126, !dbg !61

check_class_id2190:                               ; preds = %correct_serial2175
  %class_pos2192 = getelementptr %"struct.rubinius::Object"* %send_result2163, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2193 = load %"struct.rubinius::Class"** %class_pos2192, align 8, !dbg !61
  %class_id_pos2194 = getelementptr %"struct.rubinius::Class"* %ref_class2193, i64 0, i32 4, !dbg !61
  %class_id2195 = load i32* %class_id_pos2194, align 4, !dbg !61
  %check_class_id2196 = icmp eq i32 %class_id2195, 77, !dbg !61
  br i1 %check_class_id2196, label %correct_class2191, label %continue2186, !dbg !61

correct_class2191:                                ; preds = %check_class_id2190
  %arg.value_pos2198 = getelementptr %"struct.rubinius::Object"* %send_result2163, i64 1, !dbg !61
  %236 = bitcast %"struct.rubinius::Object"* %arg.value_pos2198 to double*, !dbg !61
  %farg2199 = load double* %236, align 8, !dbg !61
  br label %continue2200, !dbg !61

continue2186:                                     ; preds = %check_class_id2190, %correct_serial2175
  %masked2202 = and i64 %cast2187, 1, !dbg !61
  %is_fixnum2203 = icmp eq i64 %masked2202, 0, !dbg !61
  br i1 %is_fixnum2203, label %class_fallback2165, label %guarded_body2204, !dbg !61

guarded_body2204:                                 ; preds = %continue2186
  %ashr2206 = ashr i64 %cast2187, 1, !dbg !61
  %237 = sitofp i64 %ashr2206 to double, !dbg !61
  br label %continue2200, !dbg !61

continue2200:                                     ; preds = %guarded_body2204, %correct_class2191
  %rhs2207 = phi double [ %farg2199, %correct_class2191 ], [ %237, %guarded_body2204 ], !dbg !61
  %self.value_pos2211 = getelementptr %"struct.rubinius::Object"* %stack_load2169, i64 1, !dbg !61
  %238 = bitcast %"struct.rubinius::Object"* %self.value_pos2211 to double*, !dbg !61
  %fself2212 = load double* %238, align 8, !dbg !61
  %float.sub2213 = fsub double %fself2212, %rhs2207, !dbg !61
  %result2214 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !61, !rbx-classid !33
  %239 = getelementptr %"struct.rubinius::Float"* %result2214, i64 0, i32 1, !dbg !61
  store double %float.sub2213, double* %239, align 8, !dbg !61
  %240 = getelementptr inbounds %"struct.rubinius::Float"* %result2214, i64 0, i32 0, i32 0, !dbg !61
  br label %continue2167, !dbg !61

class_fallback2165:                               ; preds = %continue2186, %check_class_id2173, %continue2106
  store %"struct.rubinius::Object"* %stack_load2169, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !61
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !61
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !61
  store i32 1, i32* %out_args_total, align 8, !dbg !61
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !61
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !61
  %cache_const2218 = load %"struct.rubinius::CallSite"** inttoptr (i64 26549880 to %"struct.rubinius::CallSite"**), align 8, !dbg !61
  %execute_pos2219 = getelementptr %"struct.rubinius::CallSite"* %cache_const2218, i64 0, i32 2, !dbg !61
  %execute2220 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2219, align 8, !dbg !61
  store i32 184, i32* %65, align 4, !dbg !61
  %call_site_execute2221 = call %"struct.rubinius::Object"* %execute2220(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2218, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !61
  %null_check2223 = icmp eq %"struct.rubinius::Object"* %call_site_execute2221, null, !dbg !61
  br i1 %null_check2223, label %bail_out159, label %continue2167, !dbg !61

continue2230:                                     ; preds = %visit_push_ivar_fallback2229, %correct_class2235, %run_barrier2248, %reference_obj2246
  %local2264 = load %"struct.rubinius::Object"** %81, align 8, !dbg !63, !rbx-classid !34
  store %"struct.rubinius::Object"* %local2264, %"struct.rubinius::Object"** %stack140, align 8, !dbg !63
  store %"struct.rubinius::Object"* %local2264, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !63
  %field_pos22773626 = getelementptr %"struct.rubinius::Object"* %local2264, i64 2, !dbg !63
  %field_pos2277 = bitcast %"struct.rubinius::Object"* %field_pos22773626 to %"struct.rubinius::Object"**, !dbg !63
  %field2278 = load %"struct.rubinius::Object"** %field_pos2277, align 8, !dbg !63
  %prune_undef2279 = icmp eq %"struct.rubinius::Object"* %field2278, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !63
  %"select ivar2280" = select i1 %prune_undef2279, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2278, !dbg !63
  store %"struct.rubinius::Object"* %"select ivar2280", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !63
  %local2283 = load %"struct.rubinius::Object"** %84, align 8, !dbg !63, !rbx-classid !57
  store %"struct.rubinius::Object"* %local2283, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !63
  %local2286 = load %"struct.rubinius::Object"** %190, align 8, !dbg !63, !rbx-classid !64
  store %"struct.rubinius::Object"* %local2286, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !63
  %cast2293 = ptrtoint %"struct.rubinius::Object"* %local2283 to i64, !dbg !63
  %masked2294 = and i64 %cast2293, 3, !dbg !63
  %is_reference2295 = icmp eq i64 %masked2294, 0, !dbg !63
  br i1 %is_reference2295, label %check_class_id2296, label %class_fallback2288, !dbg !63

check_class_id2234:                               ; preds = %continue2167
  %class_pos2236 = getelementptr %"struct.rubinius::Object"* %self2226, i64 0, i32 0, i32 1, !dbg !61
  %ref_class2237 = load %"struct.rubinius::Class"** %class_pos2236, align 8, !dbg !61
  %class_id_pos2238 = getelementptr %"struct.rubinius::Class"* %ref_class2237, i64 0, i32 4, !dbg !61
  %class_id2239 = load i32* %class_id_pos2238, align 4, !dbg !61
  %check_class_id2240 = icmp eq i32 %class_id2239, 1285, !dbg !61
  br i1 %check_class_id2240, label %correct_class2235, label %visit_push_ivar_fallback2229, !dbg !61

correct_class2235:                                ; preds = %check_class_id2234
  %241 = getelementptr %"struct.rubinius::Object"* %self2226, i64 2, i32 0, i32 2, !dbg !61
  store %"struct.rubinius::Object"* %send_result2224, %"struct.rubinius::Object"** %241, align 8, !dbg !61
  %cast2243 = ptrtoint %"struct.rubinius::Object"* %send_result2224 to i64, !dbg !61
  %masked2244 = and i64 %cast2243, 3, !dbg !61
  %is_reference2245 = icmp eq i64 %masked2244, 0, !dbg !61
  br i1 %is_reference2245, label %reference_obj2246, label %continue2230, !dbg !61

visit_push_ivar_fallback2229:                     ; preds = %check_class_id2234, %continue2167
  %ivar2259 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self2226, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result2224), !dbg !61
  %null_check2262 = icmp eq %"struct.rubinius::Object"* %ivar2259, null, !dbg !61
  br i1 %null_check2262, label %bail_out159, label %continue2230, !dbg !61

reference_obj2246:                                ; preds = %correct_class2235
  %object_memory_mark2250 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !61
  %word_pos2251 = getelementptr %"struct.rubinius::Object"* %self2226, i64 0, i32 0, i32 0, i32 0, !dbg !61
  %flags2252 = load i64* %word_pos2251, align 8, !dbg !61
  %mark_mask2253 = and i64 %flags2252, 3670016, !dbg !61
  %scan_mark2254 = add i32 %object_memory_mark2250, 1, !dbg !61
  %242 = zext i32 %scan_mark2254 to i64, !dbg !61
  %lshr2255 = shl nuw nsw i64 %242, 19, !dbg !61
  %is_scanned2256 = icmp ne i64 %mark_mask2253, %lshr2255, !dbg !61
  %zone_mask2257 = and i64 %flags2252, 768, !dbg !61
  %is_young2258 = icmp eq i64 %zone_mask2257, 512, !dbg !61
  %or.cond3611 = and i1 %is_scanned2256, %is_young2258, !dbg !61
  br i1 %or.cond3611, label %continue2230, label %run_barrier2248, !dbg !61

run_barrier2248:                                  ; preds = %reference_obj2246
  %243 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2226, %"struct.rubinius::Object"* %send_result2224), !dbg !61
  br label %continue2230, !dbg !61

continue2290:                                     ; preds = %class_fallback2288.continue2290_crit_edge, %continue2323
  %stack_load2353 = phi %"struct.rubinius::Object"* [ %"select ivar2280", %continue2323 ], [ %stack_load2353.pre, %class_fallback2288.continue2290_crit_edge ]
  %send_result2347 = phi %"struct.rubinius::Object"* [ %249, %continue2323 ], [ %call_site_execute2344, %class_fallback2288.continue2290_crit_edge ], !dbg !63
  store %"struct.rubinius::Object"* %send_result2347, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !63
  %cast2354 = ptrtoint %"struct.rubinius::Object"* %stack_load2353 to i64, !dbg !63
  %masked2355 = and i64 %cast2354, 3, !dbg !63
  %is_reference2356 = icmp eq i64 %masked2355, 0, !dbg !63
  br i1 %is_reference2356, label %check_class_id2357, label %class_fallback2349, !dbg !63

check_class_id2296:                               ; preds = %continue2230
  %class_pos2299 = getelementptr %"struct.rubinius::Object"* %local2283, i64 0, i32 0, i32 1, !dbg !63
  %ref_class2300 = load %"struct.rubinius::Class"** %class_pos2299, align 8, !dbg !63
  %class_id_pos2301 = getelementptr %"struct.rubinius::Class"* %ref_class2300, i64 0, i32 4, !dbg !63
  %class_id2302 = load i32* %class_id_pos2301, align 4, !dbg !63
  %check_class_id2303 = icmp eq i32 %class_id2302, 77, !dbg !63
  br i1 %check_class_id2303, label %correct_class2297, label %class_fallback2288, !dbg !63

correct_class2297:                                ; preds = %check_class_id2296
  %serial_id_pos2304 = getelementptr %"struct.rubinius::Class"* %ref_class2300, i64 0, i32 5, !dbg !63
  %serial_id2305 = load i32* %serial_id_pos2304, align 4, !dbg !63
  %check_serial_id2306 = icmp eq i32 %serial_id2305, 224, !dbg !63
  br i1 %check_serial_id2306, label %correct_serial2298, label %serial_fallback2289, !dbg !63

correct_serial2298:                               ; preds = %correct_class2297
  %cast2310 = ptrtoint %"struct.rubinius::Object"* %local2286 to i64, !dbg !63
  %masked2311 = and i64 %cast2310, 3, !dbg !63
  %is_reference2312 = icmp eq i64 %masked2311, 0, !dbg !63
  br i1 %is_reference2312, label %check_class_id2313, label %continue2309, !dbg !63

serial_fallback2289:                              ; preds = %correct_class2297
  store i32 200, i32* %65, align 4, !dbg !63
  %244 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 200, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !63
  br label %return_pad126, !dbg !63

check_class_id2313:                               ; preds = %correct_serial2298
  %class_pos2315 = getelementptr %"struct.rubinius::Object"* %local2286, i64 0, i32 0, i32 1, !dbg !63
  %ref_class2316 = load %"struct.rubinius::Class"** %class_pos2315, align 8, !dbg !63
  %class_id_pos2317 = getelementptr %"struct.rubinius::Class"* %ref_class2316, i64 0, i32 4, !dbg !63
  %class_id2318 = load i32* %class_id_pos2317, align 4, !dbg !63
  %check_class_id2319 = icmp eq i32 %class_id2318, 77, !dbg !63
  br i1 %check_class_id2319, label %correct_class2314, label %continue2309, !dbg !63

correct_class2314:                                ; preds = %check_class_id2313
  %arg.value_pos2321 = getelementptr %"struct.rubinius::Object"* %local2286, i64 1, !dbg !63
  %245 = bitcast %"struct.rubinius::Object"* %arg.value_pos2321 to double*, !dbg !63
  %farg2322 = load double* %245, align 8, !dbg !63
  br label %continue2323, !dbg !63

continue2309:                                     ; preds = %check_class_id2313, %correct_serial2298
  %masked2325 = and i64 %cast2310, 1, !dbg !63
  %is_fixnum2326 = icmp eq i64 %masked2325, 0, !dbg !63
  br i1 %is_fixnum2326, label %class_fallback2288, label %guarded_body2327, !dbg !63

guarded_body2327:                                 ; preds = %continue2309
  %ashr2329 = ashr i64 %cast2310, 1, !dbg !63
  %246 = sitofp i64 %ashr2329 to double, !dbg !63
  br label %continue2323, !dbg !63

continue2323:                                     ; preds = %guarded_body2327, %correct_class2314
  %rhs2330 = phi double [ %farg2322, %correct_class2314 ], [ %246, %guarded_body2327 ], !dbg !63
  %self.value_pos2334 = getelementptr %"struct.rubinius::Object"* %local2283, i64 1, !dbg !63
  %247 = bitcast %"struct.rubinius::Object"* %self.value_pos2334 to double*, !dbg !63
  %fself2335 = load double* %247, align 8, !dbg !63
  %float.mul2336 = fmul double %rhs2330, %fself2335, !dbg !63
  %result2337 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !63, !rbx-classid !33
  %248 = getelementptr %"struct.rubinius::Float"* %result2337, i64 0, i32 1, !dbg !63
  store double %float.mul2336, double* %248, align 8, !dbg !63
  %249 = getelementptr inbounds %"struct.rubinius::Float"* %result2337, i64 0, i32 0, i32 0, !dbg !63
  br label %continue2290, !dbg !63

class_fallback2288:                               ; preds = %continue2309, %check_class_id2296, %continue2230
  store %"struct.rubinius::Object"* %local2283, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !63
  store i32 1, i32* %out_args_total, align 8, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos630, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !63
  %cache_const2341 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550008 to %"struct.rubinius::CallSite"**), align 8, !dbg !63
  %execute_pos2342 = getelementptr %"struct.rubinius::CallSite"* %cache_const2341, i64 0, i32 2, !dbg !63
  %execute2343 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2342, align 8, !dbg !63
  store i32 200, i32* %65, align 4, !dbg !63
  %call_site_execute2344 = call %"struct.rubinius::Object"* %execute2343(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2341, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check2346 = icmp eq %"struct.rubinius::Object"* %call_site_execute2344, null, !dbg !63
  br i1 %null_check2346, label %bail_out159, label %class_fallback2288.continue2290_crit_edge, !dbg !63

class_fallback2288.continue2290_crit_edge:        ; preds = %class_fallback2288
  %stack_load2353.pre = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !63
  br label %continue2290, !dbg !63

continue2351:                                     ; preds = %class_fallback2349, %continue2384
  %stack_load2442 = phi %"struct.rubinius::Object"* [ %255, %continue2384 ], [ %call_site_execute2405, %class_fallback2349 ], !dbg !63
  store %"struct.rubinius::Object"* %stack_load2442, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !63
  %stack_load2419 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !63, !rbx-classid !34
  store %"struct.rubinius::Object"* %stack_load2419, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !63
  store %"struct.rubinius::Object"* %stack_load2442, %"struct.rubinius::Object"** %stack140, align 8, !dbg !63
  %cast2427 = ptrtoint %"struct.rubinius::Object"* %stack_load2419 to i64, !dbg !63
  %masked2428 = and i64 %cast2427, 3, !dbg !63
  %is_reference2429 = icmp eq i64 %masked2428, 0, !dbg !63
  br i1 %is_reference2429, label %check_class_id2430, label %class_fallback2422, !dbg !63

check_class_id2357:                               ; preds = %continue2290
  %class_pos2360 = getelementptr %"struct.rubinius::Object"* %stack_load2353, i64 0, i32 0, i32 1, !dbg !63
  %ref_class2361 = load %"struct.rubinius::Class"** %class_pos2360, align 8, !dbg !63
  %class_id_pos2362 = getelementptr %"struct.rubinius::Class"* %ref_class2361, i64 0, i32 4, !dbg !63
  %class_id2363 = load i32* %class_id_pos2362, align 4, !dbg !63
  %check_class_id2364 = icmp eq i32 %class_id2363, 77, !dbg !63
  br i1 %check_class_id2364, label %correct_class2358, label %class_fallback2349, !dbg !63

correct_class2358:                                ; preds = %check_class_id2357
  %serial_id_pos2365 = getelementptr %"struct.rubinius::Class"* %ref_class2361, i64 0, i32 5, !dbg !63
  %serial_id2366 = load i32* %serial_id_pos2365, align 4, !dbg !63
  %check_serial_id2367 = icmp eq i32 %serial_id2366, 224, !dbg !63
  br i1 %check_serial_id2367, label %correct_serial2359, label %serial_fallback2350, !dbg !63

correct_serial2359:                               ; preds = %correct_class2358
  %cast2371 = ptrtoint %"struct.rubinius::Object"* %send_result2347 to i64, !dbg !63
  %masked2372 = and i64 %cast2371, 3, !dbg !63
  %is_reference2373 = icmp eq i64 %masked2372, 0, !dbg !63
  br i1 %is_reference2373, label %check_class_id2374, label %continue2370, !dbg !63

serial_fallback2350:                              ; preds = %correct_class2358
  store i32 203, i32* %65, align 4, !dbg !63
  %250 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 203, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !63
  br label %return_pad126, !dbg !63

check_class_id2374:                               ; preds = %correct_serial2359
  %class_pos2376 = getelementptr %"struct.rubinius::Object"* %send_result2347, i64 0, i32 0, i32 1, !dbg !63
  %ref_class2377 = load %"struct.rubinius::Class"** %class_pos2376, align 8, !dbg !63
  %class_id_pos2378 = getelementptr %"struct.rubinius::Class"* %ref_class2377, i64 0, i32 4, !dbg !63
  %class_id2379 = load i32* %class_id_pos2378, align 4, !dbg !63
  %check_class_id2380 = icmp eq i32 %class_id2379, 77, !dbg !63
  br i1 %check_class_id2380, label %correct_class2375, label %continue2370, !dbg !63

correct_class2375:                                ; preds = %check_class_id2374
  %arg.value_pos2382 = getelementptr %"struct.rubinius::Object"* %send_result2347, i64 1, !dbg !63
  %251 = bitcast %"struct.rubinius::Object"* %arg.value_pos2382 to double*, !dbg !63
  %farg2383 = load double* %251, align 8, !dbg !63
  br label %continue2384, !dbg !63

continue2370:                                     ; preds = %check_class_id2374, %correct_serial2359
  %masked2386 = and i64 %cast2371, 1, !dbg !63
  %is_fixnum2387 = icmp eq i64 %masked2386, 0, !dbg !63
  br i1 %is_fixnum2387, label %class_fallback2349, label %guarded_body2388, !dbg !63

guarded_body2388:                                 ; preds = %continue2370
  %ashr2390 = ashr i64 %cast2371, 1, !dbg !63
  %252 = sitofp i64 %ashr2390 to double, !dbg !63
  br label %continue2384, !dbg !63

continue2384:                                     ; preds = %guarded_body2388, %correct_class2375
  %rhs2391 = phi double [ %farg2383, %correct_class2375 ], [ %252, %guarded_body2388 ], !dbg !63
  %self.value_pos2395 = getelementptr %"struct.rubinius::Object"* %stack_load2353, i64 1, !dbg !63
  %253 = bitcast %"struct.rubinius::Object"* %self.value_pos2395 to double*, !dbg !63
  %fself2396 = load double* %253, align 8, !dbg !63
  %float.add2397 = fadd double %rhs2391, %fself2396, !dbg !63
  %result2398 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !63, !rbx-classid !33
  %254 = getelementptr %"struct.rubinius::Float"* %result2398, i64 0, i32 1, !dbg !63
  store double %float.add2397, double* %254, align 8, !dbg !63
  %255 = getelementptr inbounds %"struct.rubinius::Float"* %result2398, i64 0, i32 0, i32 0, !dbg !63
  br label %continue2351, !dbg !63

class_fallback2349:                               ; preds = %continue2370, %check_class_id2357, %continue2290
  store %"struct.rubinius::Object"* %stack_load2353, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !63
  store i32 1, i32* %out_args_total, align 8, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !63
  %cache_const2402 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550032 to %"struct.rubinius::CallSite"**), align 16, !dbg !63
  %execute_pos2403 = getelementptr %"struct.rubinius::CallSite"* %cache_const2402, i64 0, i32 2, !dbg !63
  %execute2404 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2403, align 8, !dbg !63
  store i32 203, i32* %65, align 4, !dbg !63
  %call_site_execute2405 = call %"struct.rubinius::Object"* %execute2404(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2402, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check2407 = icmp eq %"struct.rubinius::Object"* %call_site_execute2405, null, !dbg !63
  br i1 %null_check2407, label %bail_out159, label %continue2351, !dbg !63

check_class_id2430:                               ; preds = %continue2351
  %class_pos2433 = getelementptr %"struct.rubinius::Object"* %stack_load2419, i64 0, i32 0, i32 1, !dbg !63
  %ref_class2434 = load %"struct.rubinius::Class"** %class_pos2433, align 8, !dbg !63
  %class_id_pos2435 = getelementptr %"struct.rubinius::Class"* %ref_class2434, i64 0, i32 4, !dbg !63
  %class_id2436 = load i32* %class_id_pos2435, align 4, !dbg !63
  %check_class_id2437 = icmp eq i32 %class_id2436, 1285, !dbg !63
  br i1 %check_class_id2437, label %correct_class2431, label %class_fallback2422, !dbg !63

correct_class2431:                                ; preds = %check_class_id2430
  %serial_id_pos2438 = getelementptr %"struct.rubinius::Class"* %ref_class2434, i64 0, i32 5, !dbg !63
  %serial_id2439 = load i32* %serial_id_pos2438, align 4, !dbg !63
  %check_serial_id2440 = icmp eq i32 %serial_id2439, 2, !dbg !63
  br i1 %check_serial_id2440, label %correct_serial2432, label %serial_fallback2423, !dbg !63

class_fallback2422:                               ; preds = %check_class_id2430, %continue2351
  store i32 209, i32* %65, align 4, !dbg !63
  %256 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !63
  br label %return_pad126, !dbg !63

correct_serial2432:                               ; preds = %correct_class2431
  %257 = getelementptr inbounds %"struct.rubinius::Object"* %stack_load2419, i64 2, i32 0, i32 0, i32 0, !dbg !63
  %stack_load2442.c = ptrtoint %"struct.rubinius::Object"* %stack_load2442 to i64, !dbg !63
  store i64 %stack_load2442.c, i64* %257, align 8, !dbg !63
  %masked2448 = and i64 %stack_load2442.c, 3, !dbg !63
  %is_reference2449 = icmp eq i64 %masked2448, 0, !dbg !63
  br i1 %is_reference2449, label %reference_obj2450, label %done2453, !dbg !63

serial_fallback2423:                              ; preds = %correct_class2431
  store i32 209, i32* %65, align 4, !dbg !63
  %258 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 209, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !63
  br label %return_pad126, !dbg !63

reference_obj2450:                                ; preds = %correct_serial2432
  %object_memory_mark2454 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !63
  %word_pos2455 = getelementptr %"struct.rubinius::Object"* %stack_load2419, i64 0, i32 0, i32 0, i32 0, !dbg !63
  %flags2456 = load i64* %word_pos2455, align 8, !dbg !63
  %mark_mask2457 = and i64 %flags2456, 3670016, !dbg !63
  %scan_mark2458 = add i32 %object_memory_mark2454, 1, !dbg !63
  %259 = zext i32 %scan_mark2458 to i64, !dbg !63
  %lshr2459 = shl nuw nsw i64 %259, 19, !dbg !63
  %is_scanned2460 = icmp ne i64 %mark_mask2457, %lshr2459, !dbg !63
  %zone_mask2461 = and i64 %flags2456, 768, !dbg !63
  %is_young2462 = icmp eq i64 %zone_mask2461, 512, !dbg !63
  %or.cond3612 = and i1 %is_scanned2460, %is_young2462, !dbg !63
  br i1 %or.cond3612, label %done2453, label %run_barrier2452, !dbg !63

run_barrier2452:                                  ; preds = %reference_obj2450
  %260 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2419, %"struct.rubinius::Object"* %stack_load2442), !dbg !63
  br label %done2453, !dbg !63

done2453:                                         ; preds = %reference_obj2450, %run_barrier2452, %correct_serial2432
  %local2465 = load %"struct.rubinius::Object"** %81, align 8, !dbg !65, !rbx-classid !34
  store %"struct.rubinius::Object"* %local2465, %"struct.rubinius::Object"** %stack140, align 8, !dbg !65
  %field_pos2478 = getelementptr %"struct.rubinius::Object"* %local2465, i64 2, i32 0, i32 1, !dbg !65
  %261 = load %"struct.rubinius::Class"** %field_pos2478, align 8, !dbg !65
  %field2479 = getelementptr inbounds %"struct.rubinius::Class"* %261, i64 0, i32 0, i32 0, !dbg !65
  %prune_undef2480 = icmp eq %"struct.rubinius::Object"* %field2479, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !65
  %"select ivar2481" = select i1 %prune_undef2480, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2479, !dbg !65
  store %"struct.rubinius::Object"* %"select ivar2481", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !65
  %local2484 = load %"struct.rubinius::Object"** %93, align 8, !dbg !65, !rbx-classid !59
  store %"struct.rubinius::Object"* %local2484, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !65
  %local2487 = load %"struct.rubinius::Object"** %190, align 8, !dbg !65, !rbx-classid !64
  store %"struct.rubinius::Object"* %local2487, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !65
  %cast2494 = ptrtoint %"struct.rubinius::Object"* %local2484 to i64, !dbg !65
  %masked2495 = and i64 %cast2494, 3, !dbg !65
  %is_reference2496 = icmp eq i64 %masked2495, 0, !dbg !65
  br i1 %is_reference2496, label %check_class_id2497, label %class_fallback2489, !dbg !65

continue2491:                                     ; preds = %class_fallback2489.continue2491_crit_edge, %continue2524
  %stack_load2554 = phi %"struct.rubinius::Object"* [ %"select ivar2481", %continue2524 ], [ %stack_load2554.pre, %class_fallback2489.continue2491_crit_edge ]
  %send_result2548 = phi %"struct.rubinius::Object"* [ %267, %continue2524 ], [ %call_site_execute2545, %class_fallback2489.continue2491_crit_edge ], !dbg !65
  store %"struct.rubinius::Object"* %send_result2548, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !65
  %cast2555 = ptrtoint %"struct.rubinius::Object"* %stack_load2554 to i64, !dbg !65
  %masked2556 = and i64 %cast2555, 3, !dbg !65
  %is_reference2557 = icmp eq i64 %masked2556, 0, !dbg !65
  br i1 %is_reference2557, label %check_class_id2558, label %class_fallback2550, !dbg !65

check_class_id2497:                               ; preds = %done2453
  %class_pos2500 = getelementptr %"struct.rubinius::Object"* %local2484, i64 0, i32 0, i32 1, !dbg !65
  %ref_class2501 = load %"struct.rubinius::Class"** %class_pos2500, align 8, !dbg !65
  %class_id_pos2502 = getelementptr %"struct.rubinius::Class"* %ref_class2501, i64 0, i32 4, !dbg !65
  %class_id2503 = load i32* %class_id_pos2502, align 4, !dbg !65
  %check_class_id2504 = icmp eq i32 %class_id2503, 77, !dbg !65
  br i1 %check_class_id2504, label %correct_class2498, label %class_fallback2489, !dbg !65

correct_class2498:                                ; preds = %check_class_id2497
  %serial_id_pos2505 = getelementptr %"struct.rubinius::Class"* %ref_class2501, i64 0, i32 5, !dbg !65
  %serial_id2506 = load i32* %serial_id_pos2505, align 4, !dbg !65
  %check_serial_id2507 = icmp eq i32 %serial_id2506, 224, !dbg !65
  br i1 %check_serial_id2507, label %correct_serial2499, label %serial_fallback2490, !dbg !65

correct_serial2499:                               ; preds = %correct_class2498
  %cast2511 = ptrtoint %"struct.rubinius::Object"* %local2487 to i64, !dbg !65
  %masked2512 = and i64 %cast2511, 3, !dbg !65
  %is_reference2513 = icmp eq i64 %masked2512, 0, !dbg !65
  br i1 %is_reference2513, label %check_class_id2514, label %continue2510, !dbg !65

serial_fallback2490:                              ; preds = %correct_class2498
  store i32 224, i32* %65, align 4, !dbg !65
  %262 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 224, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !65
  br label %return_pad126, !dbg !65

check_class_id2514:                               ; preds = %correct_serial2499
  %class_pos2516 = getelementptr %"struct.rubinius::Object"* %local2487, i64 0, i32 0, i32 1, !dbg !65
  %ref_class2517 = load %"struct.rubinius::Class"** %class_pos2516, align 8, !dbg !65
  %class_id_pos2518 = getelementptr %"struct.rubinius::Class"* %ref_class2517, i64 0, i32 4, !dbg !65
  %class_id2519 = load i32* %class_id_pos2518, align 4, !dbg !65
  %check_class_id2520 = icmp eq i32 %class_id2519, 77, !dbg !65
  br i1 %check_class_id2520, label %correct_class2515, label %continue2510, !dbg !65

correct_class2515:                                ; preds = %check_class_id2514
  %arg.value_pos2522 = getelementptr %"struct.rubinius::Object"* %local2487, i64 1, !dbg !65
  %263 = bitcast %"struct.rubinius::Object"* %arg.value_pos2522 to double*, !dbg !65
  %farg2523 = load double* %263, align 8, !dbg !65
  br label %continue2524, !dbg !65

continue2510:                                     ; preds = %check_class_id2514, %correct_serial2499
  %masked2526 = and i64 %cast2511, 1, !dbg !65
  %is_fixnum2527 = icmp eq i64 %masked2526, 0, !dbg !65
  br i1 %is_fixnum2527, label %class_fallback2489, label %guarded_body2528, !dbg !65

guarded_body2528:                                 ; preds = %continue2510
  %ashr2530 = ashr i64 %cast2511, 1, !dbg !65
  %264 = sitofp i64 %ashr2530 to double, !dbg !65
  br label %continue2524, !dbg !65

continue2524:                                     ; preds = %guarded_body2528, %correct_class2515
  %rhs2531 = phi double [ %farg2523, %correct_class2515 ], [ %264, %guarded_body2528 ], !dbg !65
  %self.value_pos2535 = getelementptr %"struct.rubinius::Object"* %local2484, i64 1, !dbg !65
  %265 = bitcast %"struct.rubinius::Object"* %self.value_pos2535 to double*, !dbg !65
  %fself2536 = load double* %265, align 8, !dbg !65
  %float.mul2537 = fmul double %rhs2531, %fself2536, !dbg !65
  %result2538 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !65, !rbx-classid !33
  %266 = getelementptr %"struct.rubinius::Float"* %result2538, i64 0, i32 1, !dbg !65
  store double %float.mul2537, double* %266, align 8, !dbg !65
  %267 = getelementptr inbounds %"struct.rubinius::Float"* %result2538, i64 0, i32 0, i32 0, !dbg !65
  br label %continue2491, !dbg !65

class_fallback2489:                               ; preds = %continue2510, %check_class_id2497, %done2453
  store %"struct.rubinius::Object"* %local2484, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !65
  store i32 1, i32* %out_args_total, align 8, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos630, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !65
  %cache_const2542 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550200 to %"struct.rubinius::CallSite"**), align 8, !dbg !65
  %execute_pos2543 = getelementptr %"struct.rubinius::CallSite"* %cache_const2542, i64 0, i32 2, !dbg !65
  %execute2544 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2543, align 8, !dbg !65
  store i32 224, i32* %65, align 4, !dbg !65
  %call_site_execute2545 = call %"struct.rubinius::Object"* %execute2544(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2542, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check2547 = icmp eq %"struct.rubinius::Object"* %call_site_execute2545, null, !dbg !65
  br i1 %null_check2547, label %bail_out159, label %class_fallback2489.continue2491_crit_edge, !dbg !65

class_fallback2489.continue2491_crit_edge:        ; preds = %class_fallback2489
  %stack_load2554.pre = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !65
  br label %continue2491, !dbg !65

continue2552:                                     ; preds = %class_fallback2550, %continue2585
  %stack_load2643 = phi %"struct.rubinius::Object"* [ %273, %continue2585 ], [ %call_site_execute2606, %class_fallback2550 ], !dbg !65
  store %"struct.rubinius::Object"* %stack_load2643, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !65
  %stack_load2620 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !65, !rbx-classid !34
  store %"struct.rubinius::Object"* %stack_load2620, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !65
  store %"struct.rubinius::Object"* %stack_load2643, %"struct.rubinius::Object"** %stack140, align 8, !dbg !65
  %cast2628 = ptrtoint %"struct.rubinius::Object"* %stack_load2620 to i64, !dbg !65
  %masked2629 = and i64 %cast2628, 3, !dbg !65
  %is_reference2630 = icmp eq i64 %masked2629, 0, !dbg !65
  br i1 %is_reference2630, label %check_class_id2631, label %class_fallback2623, !dbg !65

check_class_id2558:                               ; preds = %continue2491
  %class_pos2561 = getelementptr %"struct.rubinius::Object"* %stack_load2554, i64 0, i32 0, i32 1, !dbg !65
  %ref_class2562 = load %"struct.rubinius::Class"** %class_pos2561, align 8, !dbg !65
  %class_id_pos2563 = getelementptr %"struct.rubinius::Class"* %ref_class2562, i64 0, i32 4, !dbg !65
  %class_id2564 = load i32* %class_id_pos2563, align 4, !dbg !65
  %check_class_id2565 = icmp eq i32 %class_id2564, 77, !dbg !65
  br i1 %check_class_id2565, label %correct_class2559, label %class_fallback2550, !dbg !65

correct_class2559:                                ; preds = %check_class_id2558
  %serial_id_pos2566 = getelementptr %"struct.rubinius::Class"* %ref_class2562, i64 0, i32 5, !dbg !65
  %serial_id2567 = load i32* %serial_id_pos2566, align 4, !dbg !65
  %check_serial_id2568 = icmp eq i32 %serial_id2567, 224, !dbg !65
  br i1 %check_serial_id2568, label %correct_serial2560, label %serial_fallback2551, !dbg !65

correct_serial2560:                               ; preds = %correct_class2559
  %cast2572 = ptrtoint %"struct.rubinius::Object"* %send_result2548 to i64, !dbg !65
  %masked2573 = and i64 %cast2572, 3, !dbg !65
  %is_reference2574 = icmp eq i64 %masked2573, 0, !dbg !65
  br i1 %is_reference2574, label %check_class_id2575, label %continue2571, !dbg !65

serial_fallback2551:                              ; preds = %correct_class2559
  store i32 227, i32* %65, align 4, !dbg !65
  %268 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 227, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !65
  br label %return_pad126, !dbg !65

check_class_id2575:                               ; preds = %correct_serial2560
  %class_pos2577 = getelementptr %"struct.rubinius::Object"* %send_result2548, i64 0, i32 0, i32 1, !dbg !65
  %ref_class2578 = load %"struct.rubinius::Class"** %class_pos2577, align 8, !dbg !65
  %class_id_pos2579 = getelementptr %"struct.rubinius::Class"* %ref_class2578, i64 0, i32 4, !dbg !65
  %class_id2580 = load i32* %class_id_pos2579, align 4, !dbg !65
  %check_class_id2581 = icmp eq i32 %class_id2580, 77, !dbg !65
  br i1 %check_class_id2581, label %correct_class2576, label %continue2571, !dbg !65

correct_class2576:                                ; preds = %check_class_id2575
  %arg.value_pos2583 = getelementptr %"struct.rubinius::Object"* %send_result2548, i64 1, !dbg !65
  %269 = bitcast %"struct.rubinius::Object"* %arg.value_pos2583 to double*, !dbg !65
  %farg2584 = load double* %269, align 8, !dbg !65
  br label %continue2585, !dbg !65

continue2571:                                     ; preds = %check_class_id2575, %correct_serial2560
  %masked2587 = and i64 %cast2572, 1, !dbg !65
  %is_fixnum2588 = icmp eq i64 %masked2587, 0, !dbg !65
  br i1 %is_fixnum2588, label %class_fallback2550, label %guarded_body2589, !dbg !65

guarded_body2589:                                 ; preds = %continue2571
  %ashr2591 = ashr i64 %cast2572, 1, !dbg !65
  %270 = sitofp i64 %ashr2591 to double, !dbg !65
  br label %continue2585, !dbg !65

continue2585:                                     ; preds = %guarded_body2589, %correct_class2576
  %rhs2592 = phi double [ %farg2584, %correct_class2576 ], [ %270, %guarded_body2589 ], !dbg !65
  %self.value_pos2596 = getelementptr %"struct.rubinius::Object"* %stack_load2554, i64 1, !dbg !65
  %271 = bitcast %"struct.rubinius::Object"* %self.value_pos2596 to double*, !dbg !65
  %fself2597 = load double* %271, align 8, !dbg !65
  %float.add2598 = fadd double %rhs2592, %fself2597, !dbg !65
  %result2599 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !65, !rbx-classid !33
  %272 = getelementptr %"struct.rubinius::Float"* %result2599, i64 0, i32 1, !dbg !65
  store double %float.add2598, double* %272, align 8, !dbg !65
  %273 = getelementptr inbounds %"struct.rubinius::Float"* %result2599, i64 0, i32 0, i32 0, !dbg !65
  br label %continue2552, !dbg !65

class_fallback2550:                               ; preds = %continue2571, %check_class_id2558, %continue2491
  store %"struct.rubinius::Object"* %stack_load2554, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !65
  store i32 1, i32* %out_args_total, align 8, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !65
  %cache_const2603 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550224 to %"struct.rubinius::CallSite"**), align 16, !dbg !65
  %execute_pos2604 = getelementptr %"struct.rubinius::CallSite"* %cache_const2603, i64 0, i32 2, !dbg !65
  %execute2605 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2604, align 8, !dbg !65
  store i32 227, i32* %65, align 4, !dbg !65
  %call_site_execute2606 = call %"struct.rubinius::Object"* %execute2605(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2603, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check2608 = icmp eq %"struct.rubinius::Object"* %call_site_execute2606, null, !dbg !65
  br i1 %null_check2608, label %bail_out159, label %continue2552, !dbg !65

check_class_id2631:                               ; preds = %continue2552
  %class_pos2634 = getelementptr %"struct.rubinius::Object"* %stack_load2620, i64 0, i32 0, i32 1, !dbg !65
  %ref_class2635 = load %"struct.rubinius::Class"** %class_pos2634, align 8, !dbg !65
  %class_id_pos2636 = getelementptr %"struct.rubinius::Class"* %ref_class2635, i64 0, i32 4, !dbg !65
  %class_id2637 = load i32* %class_id_pos2636, align 4, !dbg !65
  %check_class_id2638 = icmp eq i32 %class_id2637, 1285, !dbg !65
  br i1 %check_class_id2638, label %correct_class2632, label %class_fallback2623, !dbg !65

correct_class2632:                                ; preds = %check_class_id2631
  %serial_id_pos2639 = getelementptr %"struct.rubinius::Class"* %ref_class2635, i64 0, i32 5, !dbg !65
  %serial_id2640 = load i32* %serial_id_pos2639, align 4, !dbg !65
  %check_serial_id2641 = icmp eq i32 %serial_id2640, 2, !dbg !65
  br i1 %check_serial_id2641, label %correct_serial2633, label %serial_fallback2624, !dbg !65

class_fallback2623:                               ; preds = %check_class_id2631, %continue2552
  store i32 233, i32* %65, align 4, !dbg !65
  %274 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !65
  br label %return_pad126, !dbg !65

correct_serial2633:                               ; preds = %correct_class2632
  %field_pos2647 = getelementptr %"struct.rubinius::Object"* %stack_load2620, i64 2, i32 0, i32 1, !dbg !65
  %stack_load2643.c = bitcast %"struct.rubinius::Object"* %stack_load2643 to %"struct.rubinius::Class"*, !dbg !65
  store %"struct.rubinius::Class"* %stack_load2643.c, %"struct.rubinius::Class"** %field_pos2647, align 8, !dbg !65
  %cast2648 = ptrtoint %"struct.rubinius::Object"* %stack_load2643 to i64, !dbg !65
  %masked2649 = and i64 %cast2648, 3, !dbg !65
  %is_reference2650 = icmp eq i64 %masked2649, 0, !dbg !65
  br i1 %is_reference2650, label %reference_obj2651, label %done2654, !dbg !65

serial_fallback2624:                              ; preds = %correct_class2632
  store i32 233, i32* %65, align 4, !dbg !65
  %275 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 233, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !65
  br label %return_pad126, !dbg !65

reference_obj2651:                                ; preds = %correct_serial2633
  %object_memory_mark2655 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !65
  %word_pos2656 = getelementptr %"struct.rubinius::Object"* %stack_load2620, i64 0, i32 0, i32 0, i32 0, !dbg !65
  %flags2657 = load i64* %word_pos2656, align 8, !dbg !65
  %mark_mask2658 = and i64 %flags2657, 3670016, !dbg !65
  %scan_mark2659 = add i32 %object_memory_mark2655, 1, !dbg !65
  %276 = zext i32 %scan_mark2659 to i64, !dbg !65
  %lshr2660 = shl nuw nsw i64 %276, 19, !dbg !65
  %is_scanned2661 = icmp ne i64 %mark_mask2658, %lshr2660, !dbg !65
  %zone_mask2662 = and i64 %flags2657, 768, !dbg !65
  %is_young2663 = icmp eq i64 %zone_mask2662, 512, !dbg !65
  %or.cond3613 = and i1 %is_scanned2661, %is_young2663, !dbg !65
  br i1 %or.cond3613, label %done2654, label %run_barrier2653, !dbg !65

run_barrier2653:                                  ; preds = %reference_obj2651
  %277 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2620, %"struct.rubinius::Object"* %stack_load2643), !dbg !65
  br label %done2654, !dbg !65

done2654:                                         ; preds = %reference_obj2651, %run_barrier2653, %correct_serial2633
  %local2666 = load %"struct.rubinius::Object"** %81, align 8, !dbg !66, !rbx-classid !34
  store %"struct.rubinius::Object"* %local2666, %"struct.rubinius::Object"** %stack140, align 8, !dbg !66
  store %"struct.rubinius::Object"* %local2666, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !66
  %278 = getelementptr %"struct.rubinius::Object"* %local2666, i64 2, i32 0, i32 2, !dbg !66
  %field2680 = load %"struct.rubinius::Object"** %278, align 8, !dbg !66
  %prune_undef2681 = icmp eq %"struct.rubinius::Object"* %field2680, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !66
  %"select ivar2682" = select i1 %prune_undef2681, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2680, !dbg !66
  store %"struct.rubinius::Object"* %"select ivar2682", %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !66
  %local2685 = load %"struct.rubinius::Object"** %102, align 8, !dbg !66, !rbx-classid !62
  store %"struct.rubinius::Object"* %local2685, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !66
  %local2688 = load %"struct.rubinius::Object"** %190, align 8, !dbg !66, !rbx-classid !64
  store %"struct.rubinius::Object"* %local2688, %"struct.rubinius::Object"** %stack_pos630, align 8, !dbg !66
  %cast2695 = ptrtoint %"struct.rubinius::Object"* %local2685 to i64, !dbg !66
  %masked2696 = and i64 %cast2695, 3, !dbg !66
  %is_reference2697 = icmp eq i64 %masked2696, 0, !dbg !66
  br i1 %is_reference2697, label %check_class_id2698, label %class_fallback2690, !dbg !66

continue2692:                                     ; preds = %class_fallback2690.continue2692_crit_edge, %continue2725
  %stack_load2755 = phi %"struct.rubinius::Object"* [ %"select ivar2682", %continue2725 ], [ %stack_load2755.pre, %class_fallback2690.continue2692_crit_edge ]
  %send_result2749 = phi %"struct.rubinius::Object"* [ %284, %continue2725 ], [ %call_site_execute2746, %class_fallback2690.continue2692_crit_edge ], !dbg !66
  store %"struct.rubinius::Object"* %send_result2749, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !66
  %cast2756 = ptrtoint %"struct.rubinius::Object"* %stack_load2755 to i64, !dbg !66
  %masked2757 = and i64 %cast2756, 3, !dbg !66
  %is_reference2758 = icmp eq i64 %masked2757, 0, !dbg !66
  br i1 %is_reference2758, label %check_class_id2759, label %class_fallback2751, !dbg !66

check_class_id2698:                               ; preds = %done2654
  %class_pos2701 = getelementptr %"struct.rubinius::Object"* %local2685, i64 0, i32 0, i32 1, !dbg !66
  %ref_class2702 = load %"struct.rubinius::Class"** %class_pos2701, align 8, !dbg !66
  %class_id_pos2703 = getelementptr %"struct.rubinius::Class"* %ref_class2702, i64 0, i32 4, !dbg !66
  %class_id2704 = load i32* %class_id_pos2703, align 4, !dbg !66
  %check_class_id2705 = icmp eq i32 %class_id2704, 77, !dbg !66
  br i1 %check_class_id2705, label %correct_class2699, label %class_fallback2690, !dbg !66

correct_class2699:                                ; preds = %check_class_id2698
  %serial_id_pos2706 = getelementptr %"struct.rubinius::Class"* %ref_class2702, i64 0, i32 5, !dbg !66
  %serial_id2707 = load i32* %serial_id_pos2706, align 4, !dbg !66
  %check_serial_id2708 = icmp eq i32 %serial_id2707, 224, !dbg !66
  br i1 %check_serial_id2708, label %correct_serial2700, label %serial_fallback2691, !dbg !66

correct_serial2700:                               ; preds = %correct_class2699
  %cast2712 = ptrtoint %"struct.rubinius::Object"* %local2688 to i64, !dbg !66
  %masked2713 = and i64 %cast2712, 3, !dbg !66
  %is_reference2714 = icmp eq i64 %masked2713, 0, !dbg !66
  br i1 %is_reference2714, label %check_class_id2715, label %continue2711, !dbg !66

serial_fallback2691:                              ; preds = %correct_class2699
  store i32 248, i32* %65, align 4, !dbg !66
  %279 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 248, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !66
  br label %return_pad126, !dbg !66

check_class_id2715:                               ; preds = %correct_serial2700
  %class_pos2717 = getelementptr %"struct.rubinius::Object"* %local2688, i64 0, i32 0, i32 1, !dbg !66
  %ref_class2718 = load %"struct.rubinius::Class"** %class_pos2717, align 8, !dbg !66
  %class_id_pos2719 = getelementptr %"struct.rubinius::Class"* %ref_class2718, i64 0, i32 4, !dbg !66
  %class_id2720 = load i32* %class_id_pos2719, align 4, !dbg !66
  %check_class_id2721 = icmp eq i32 %class_id2720, 77, !dbg !66
  br i1 %check_class_id2721, label %correct_class2716, label %continue2711, !dbg !66

correct_class2716:                                ; preds = %check_class_id2715
  %arg.value_pos2723 = getelementptr %"struct.rubinius::Object"* %local2688, i64 1, !dbg !66
  %280 = bitcast %"struct.rubinius::Object"* %arg.value_pos2723 to double*, !dbg !66
  %farg2724 = load double* %280, align 8, !dbg !66
  br label %continue2725, !dbg !66

continue2711:                                     ; preds = %check_class_id2715, %correct_serial2700
  %masked2727 = and i64 %cast2712, 1, !dbg !66
  %is_fixnum2728 = icmp eq i64 %masked2727, 0, !dbg !66
  br i1 %is_fixnum2728, label %class_fallback2690, label %guarded_body2729, !dbg !66

guarded_body2729:                                 ; preds = %continue2711
  %ashr2731 = ashr i64 %cast2712, 1, !dbg !66
  %281 = sitofp i64 %ashr2731 to double, !dbg !66
  br label %continue2725, !dbg !66

continue2725:                                     ; preds = %guarded_body2729, %correct_class2716
  %rhs2732 = phi double [ %farg2724, %correct_class2716 ], [ %281, %guarded_body2729 ], !dbg !66
  %self.value_pos2736 = getelementptr %"struct.rubinius::Object"* %local2685, i64 1, !dbg !66
  %282 = bitcast %"struct.rubinius::Object"* %self.value_pos2736 to double*, !dbg !66
  %fself2737 = load double* %282, align 8, !dbg !66
  %float.mul2738 = fmul double %rhs2732, %fself2737, !dbg !66
  %result2739 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !66, !rbx-classid !33
  %283 = getelementptr %"struct.rubinius::Float"* %result2739, i64 0, i32 1, !dbg !66
  store double %float.mul2738, double* %283, align 8, !dbg !66
  %284 = getelementptr inbounds %"struct.rubinius::Float"* %result2739, i64 0, i32 0, i32 0, !dbg !66
  br label %continue2692, !dbg !66

class_fallback2690:                               ; preds = %continue2711, %check_class_id2698, %done2654
  store %"struct.rubinius::Object"* %local2685, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !66
  store i32 1, i32* %out_args_total, align 8, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos630, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !66
  %cache_const2743 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550392 to %"struct.rubinius::CallSite"**), align 8, !dbg !66
  %execute_pos2744 = getelementptr %"struct.rubinius::CallSite"* %cache_const2743, i64 0, i32 2, !dbg !66
  %execute2745 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2744, align 8, !dbg !66
  store i32 248, i32* %65, align 4, !dbg !66
  %call_site_execute2746 = call %"struct.rubinius::Object"* %execute2745(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2743, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check2748 = icmp eq %"struct.rubinius::Object"* %call_site_execute2746, null, !dbg !66
  br i1 %null_check2748, label %bail_out159, label %class_fallback2690.continue2692_crit_edge, !dbg !66

class_fallback2690.continue2692_crit_edge:        ; preds = %class_fallback2690
  %stack_load2755.pre = load %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !66
  br label %continue2692, !dbg !66

continue2753:                                     ; preds = %class_fallback2751, %continue2786
  %stack_load2844 = phi %"struct.rubinius::Object"* [ %290, %continue2786 ], [ %call_site_execute2807, %class_fallback2751 ], !dbg !66
  store %"struct.rubinius::Object"* %stack_load2844, %"struct.rubinius::Object"** %stack_pos564, align 8, !dbg !66
  %stack_load2821 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !66, !rbx-classid !34
  store %"struct.rubinius::Object"* %stack_load2821, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !66
  store %"struct.rubinius::Object"* %stack_load2844, %"struct.rubinius::Object"** %stack140, align 8, !dbg !66
  %cast2829 = ptrtoint %"struct.rubinius::Object"* %stack_load2821 to i64, !dbg !66
  %masked2830 = and i64 %cast2829, 3, !dbg !66
  %is_reference2831 = icmp eq i64 %masked2830, 0, !dbg !66
  br i1 %is_reference2831, label %check_class_id2832, label %class_fallback2824, !dbg !66

check_class_id2759:                               ; preds = %continue2692
  %class_pos2762 = getelementptr %"struct.rubinius::Object"* %stack_load2755, i64 0, i32 0, i32 1, !dbg !66
  %ref_class2763 = load %"struct.rubinius::Class"** %class_pos2762, align 8, !dbg !66
  %class_id_pos2764 = getelementptr %"struct.rubinius::Class"* %ref_class2763, i64 0, i32 4, !dbg !66
  %class_id2765 = load i32* %class_id_pos2764, align 4, !dbg !66
  %check_class_id2766 = icmp eq i32 %class_id2765, 77, !dbg !66
  br i1 %check_class_id2766, label %correct_class2760, label %class_fallback2751, !dbg !66

correct_class2760:                                ; preds = %check_class_id2759
  %serial_id_pos2767 = getelementptr %"struct.rubinius::Class"* %ref_class2763, i64 0, i32 5, !dbg !66
  %serial_id2768 = load i32* %serial_id_pos2767, align 4, !dbg !66
  %check_serial_id2769 = icmp eq i32 %serial_id2768, 224, !dbg !66
  br i1 %check_serial_id2769, label %correct_serial2761, label %serial_fallback2752, !dbg !66

correct_serial2761:                               ; preds = %correct_class2760
  %cast2773 = ptrtoint %"struct.rubinius::Object"* %send_result2749 to i64, !dbg !66
  %masked2774 = and i64 %cast2773, 3, !dbg !66
  %is_reference2775 = icmp eq i64 %masked2774, 0, !dbg !66
  br i1 %is_reference2775, label %check_class_id2776, label %continue2772, !dbg !66

serial_fallback2752:                              ; preds = %correct_class2760
  store i32 251, i32* %65, align 4, !dbg !66
  %285 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 251, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !66
  br label %return_pad126, !dbg !66

check_class_id2776:                               ; preds = %correct_serial2761
  %class_pos2778 = getelementptr %"struct.rubinius::Object"* %send_result2749, i64 0, i32 0, i32 1, !dbg !66
  %ref_class2779 = load %"struct.rubinius::Class"** %class_pos2778, align 8, !dbg !66
  %class_id_pos2780 = getelementptr %"struct.rubinius::Class"* %ref_class2779, i64 0, i32 4, !dbg !66
  %class_id2781 = load i32* %class_id_pos2780, align 4, !dbg !66
  %check_class_id2782 = icmp eq i32 %class_id2781, 77, !dbg !66
  br i1 %check_class_id2782, label %correct_class2777, label %continue2772, !dbg !66

correct_class2777:                                ; preds = %check_class_id2776
  %arg.value_pos2784 = getelementptr %"struct.rubinius::Object"* %send_result2749, i64 1, !dbg !66
  %286 = bitcast %"struct.rubinius::Object"* %arg.value_pos2784 to double*, !dbg !66
  %farg2785 = load double* %286, align 8, !dbg !66
  br label %continue2786, !dbg !66

continue2772:                                     ; preds = %check_class_id2776, %correct_serial2761
  %masked2788 = and i64 %cast2773, 1, !dbg !66
  %is_fixnum2789 = icmp eq i64 %masked2788, 0, !dbg !66
  br i1 %is_fixnum2789, label %class_fallback2751, label %guarded_body2790, !dbg !66

guarded_body2790:                                 ; preds = %continue2772
  %ashr2792 = ashr i64 %cast2773, 1, !dbg !66
  %287 = sitofp i64 %ashr2792 to double, !dbg !66
  br label %continue2786, !dbg !66

continue2786:                                     ; preds = %guarded_body2790, %correct_class2777
  %rhs2793 = phi double [ %farg2785, %correct_class2777 ], [ %287, %guarded_body2790 ], !dbg !66
  %self.value_pos2797 = getelementptr %"struct.rubinius::Object"* %stack_load2755, i64 1, !dbg !66
  %288 = bitcast %"struct.rubinius::Object"* %self.value_pos2797 to double*, !dbg !66
  %fself2798 = load double* %288, align 8, !dbg !66
  %float.add2799 = fadd double %rhs2793, %fself2798, !dbg !66
  %result2800 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !66, !rbx-classid !33
  %289 = getelementptr %"struct.rubinius::Float"* %result2800, i64 0, i32 1, !dbg !66
  store double %float.add2799, double* %289, align 8, !dbg !66
  %290 = getelementptr inbounds %"struct.rubinius::Float"* %result2800, i64 0, i32 0, i32 0, !dbg !66
  br label %continue2753, !dbg !66

class_fallback2751:                               ; preds = %continue2772, %check_class_id2759, %continue2692
  store %"struct.rubinius::Object"* %stack_load2755, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !66
  store i32 1, i32* %out_args_total, align 8, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos564, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !66
  %cache_const2804 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550416 to %"struct.rubinius::CallSite"**), align 16, !dbg !66
  %execute_pos2805 = getelementptr %"struct.rubinius::CallSite"* %cache_const2804, i64 0, i32 2, !dbg !66
  %execute2806 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2805, align 8, !dbg !66
  store i32 251, i32* %65, align 4, !dbg !66
  %call_site_execute2807 = call %"struct.rubinius::Object"* %execute2806(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2804, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check2809 = icmp eq %"struct.rubinius::Object"* %call_site_execute2807, null, !dbg !66
  br i1 %null_check2809, label %bail_out159, label %continue2753, !dbg !66

check_class_id2832:                               ; preds = %continue2753
  %class_pos2835 = getelementptr %"struct.rubinius::Object"* %stack_load2821, i64 0, i32 0, i32 1, !dbg !66
  %ref_class2836 = load %"struct.rubinius::Class"** %class_pos2835, align 8, !dbg !66
  %class_id_pos2837 = getelementptr %"struct.rubinius::Class"* %ref_class2836, i64 0, i32 4, !dbg !66
  %class_id2838 = load i32* %class_id_pos2837, align 4, !dbg !66
  %check_class_id2839 = icmp eq i32 %class_id2838, 1285, !dbg !66
  br i1 %check_class_id2839, label %correct_class2833, label %class_fallback2824, !dbg !66

correct_class2833:                                ; preds = %check_class_id2832
  %serial_id_pos2840 = getelementptr %"struct.rubinius::Class"* %ref_class2836, i64 0, i32 5, !dbg !66
  %serial_id2841 = load i32* %serial_id_pos2840, align 4, !dbg !66
  %check_serial_id2842 = icmp eq i32 %serial_id2841, 2, !dbg !66
  br i1 %check_serial_id2842, label %correct_serial2834, label %serial_fallback2825, !dbg !66

class_fallback2824:                               ; preds = %check_class_id2832, %continue2753
  store i32 257, i32* %65, align 4, !dbg !66
  %291 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 0), !dbg !66
  br label %return_pad126, !dbg !66

correct_serial2834:                               ; preds = %correct_class2833
  %292 = getelementptr %"struct.rubinius::Object"* %stack_load2821, i64 2, i32 0, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %stack_load2844, %"struct.rubinius::Object"** %292, align 8, !dbg !66
  %cast2849 = ptrtoint %"struct.rubinius::Object"* %stack_load2844 to i64, !dbg !66
  %masked2850 = and i64 %cast2849, 3, !dbg !66
  %is_reference2851 = icmp eq i64 %masked2850, 0, !dbg !66
  br i1 %is_reference2851, label %reference_obj2852, label %done2855, !dbg !66

serial_fallback2825:                              ; preds = %correct_class2833
  store i32 257, i32* %65, align 4, !dbg !66
  %293 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 257, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !66
  br label %return_pad126, !dbg !66

reference_obj2852:                                ; preds = %correct_serial2834
  %object_memory_mark2856 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !66
  %word_pos2857 = getelementptr %"struct.rubinius::Object"* %stack_load2821, i64 0, i32 0, i32 0, i32 0, !dbg !66
  %flags2858 = load i64* %word_pos2857, align 8, !dbg !66
  %mark_mask2859 = and i64 %flags2858, 3670016, !dbg !66
  %scan_mark2860 = add i32 %object_memory_mark2856, 1, !dbg !66
  %294 = zext i32 %scan_mark2860 to i64, !dbg !66
  %lshr2861 = shl nuw nsw i64 %294, 19, !dbg !66
  %is_scanned2862 = icmp ne i64 %mark_mask2859, %lshr2861, !dbg !66
  %zone_mask2863 = and i64 %flags2858, 768, !dbg !66
  %is_young2864 = icmp eq i64 %zone_mask2863, 512, !dbg !66
  %or.cond3614 = and i1 %is_scanned2862, %is_young2864, !dbg !66
  br i1 %or.cond3614, label %done2855, label %run_barrier2854, !dbg !66

run_barrier2854:                                  ; preds = %reference_obj2852
  %295 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load2821, %"struct.rubinius::Object"* %stack_load2844), !dbg !66
  br label %done2855, !dbg !66

done2855:                                         ; preds = %reference_obj2852, %run_barrier2854, %correct_serial2834
  %local2867 = load %"struct.rubinius::Object"** %79, align 8, !dbg !67, !rbx-classid !30
  store %"struct.rubinius::Object"* %local2867, %"struct.rubinius::Object"** %stack140, align 8, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !67
  %cast2881 = ptrtoint %"struct.rubinius::Object"* %local2867 to i64, !dbg !67
  %masked2884 = and i64 %cast2881, 1, !dbg !67
  %is_fixnum2885 = icmp eq i64 %masked2884, 0, !dbg !67
  br i1 %is_fixnum2885, label %class_fallback2870, label %push_add2877, !dbg !67

class_fallback2870:                               ; preds = %done2855
  store %"struct.rubinius::Object"* %local2867, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !67
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !67
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !67
  store i32 1, i32* %out_args_total, align 8, !dbg !67
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !67
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !67
  %cache_const2900 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550528 to %"struct.rubinius::CallSite"**), align 256, !dbg !67
  %execute_pos2901 = getelementptr %"struct.rubinius::CallSite"* %cache_const2900, i64 0, i32 2, !dbg !67
  %execute2902 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos2901, align 8, !dbg !67
  store i32 265, i32* %65, align 4, !dbg !67
  %call_site_execute2903 = call %"struct.rubinius::Object"* %execute2902(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const2900, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !67
  %null_check2905 = icmp eq %"struct.rubinius::Object"* %call_site_execute2903, null, !dbg !67
  br i1 %null_check2905, label %bail_out159, label %continue2872, !dbg !67

continue2872:                                     ; preds = %class_fallback2870, %bignum2879, %tagnow2878
  %send_result2906 = phi %"struct.rubinius::Object"* [ %big_value2892, %bignum2879 ], [ %as_obj2895, %tagnow2878 ], [ %call_site_execute2903, %class_fallback2870 ], !dbg !67
  store %"struct.rubinius::Object"* %send_result2906, %"struct.rubinius::Object"** %stack140, align 8, !dbg !67
  store %"struct.rubinius::Object"* %send_result2906, %"struct.rubinius::Object"** %79, align 8, !dbg !67
  %296 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !67
  %vm_jit = load %"struct.rubinius::VMJIT"** %296, align 8, !dbg !67
  %297 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !67
  %check_interrupts = load i8* %297, align 1, !dbg !67
  %check_global_interrupts = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !67
  %or2913 = or i8 %check_global_interrupts, %check_interrupts, !dbg !67
  %needs_interrupts = icmp eq i8 %or2913, 0, !dbg !67
  br i1 %needs_interrupts, label %method_body, label %interrupts, !dbg !67

push_add2877:                                     ; preds = %done2855
  %ashr2887 = ashr i64 %cast2881, 1, !dbg !67
  %fixnum.add2890 = add i64 %ashr2887, 1, !dbg !67
  %fixnum.add2890.off = add i64 %ashr2887, 4611686018427387904, !dbg !67
  %298 = icmp ult i64 %fixnum.add2890.off, 9223372036854775807, !dbg !67
  br i1 %298, label %tagnow2878, label %bignum2879, !dbg !67

tagnow2878:                                       ; preds = %push_add2877
  %shl2893 = shl i64 %fixnum.add2890, 1, !dbg !67
  %or2894 = or i64 %shl2893, 1, !dbg !67
  %as_obj2895 = inttoptr i64 %or2894 to %"struct.rubinius::Object"*, !dbg !67
  br label %continue2872, !dbg !67

bignum2879:                                       ; preds = %push_add2877
  %big_value2892 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add2890) #1, !dbg !67
  br label %continue2872, !dbg !67

interrupts:                                       ; preds = %continue2872
  store i32 271, i32* %65, align 4, !dbg !67
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139), !dbg !67
  %null_check2916 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !67
  br i1 %null_check2916, label %bail_out159, label %interrupts.method_body_crit_edge, !dbg !67

interrupts.method_body_crit_edge:                 ; preds = %interrupts
  %local172.pre = load %"struct.rubinius::Object"** %79, align 8, !dbg !27
  br label %method_body, !dbg !67

ip274:                                            ; preds = %continue179
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !68
  %self2922 = load %"struct.rubinius::Object"** %70, align 8, !dbg !68
  %cast2923 = ptrtoint %"struct.rubinius::Object"* %self2922 to i64, !dbg !68
  %masked2924 = and i64 %cast2923, 3, !dbg !68
  %is_reference2925 = icmp eq i64 %masked2924, 0, !dbg !68
  br i1 %is_reference2925, label %check_class_id2926, label %visit_push_ivar_fallback2919, !dbg !68

continue2920:                                     ; preds = %visit_push_ivar_fallback2919, %correct_class2927
  %storemerge3647 = phi %"struct.rubinius::Object"* [ %"select ivar2937", %correct_class2927 ], [ %ivar2940, %visit_push_ivar_fallback2919 ]
  store %"struct.rubinius::Object"* %storemerge3647, %"struct.rubinius::Object"** %stack140, align 8, !dbg !68
  %local2943 = load %"struct.rubinius::Object"** %78, align 8, !dbg !68, !rbx-classid !53
  store %"struct.rubinius::Object"* %local2943, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !68
  %stack_pos2947 = getelementptr [25 x %"struct.rubinius::Object"*]* %cfstk1383620, i64 0, i64 11, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !68
  br i1 %is_reference2925, label %check_class_id2952, label %visit_push_ivar_fallback2945, !dbg !68

check_class_id2926:                               ; preds = %ip274
  %class_pos2928 = getelementptr %"struct.rubinius::Object"* %self2922, i64 0, i32 0, i32 1, !dbg !68
  %ref_class2929 = load %"struct.rubinius::Class"** %class_pos2928, align 8, !dbg !68
  %class_id_pos2930 = getelementptr %"struct.rubinius::Class"* %ref_class2929, i64 0, i32 4, !dbg !68
  %class_id2931 = load i32* %class_id_pos2930, align 4, !dbg !68
  %check_class_id2932 = icmp eq i32 %class_id2931, 1285, !dbg !68
  br i1 %check_class_id2932, label %correct_class2927, label %visit_push_ivar_fallback2919, !dbg !68

correct_class2927:                                ; preds = %check_class_id2926
  %field_pos29343646 = getelementptr %"struct.rubinius::Object"* %self2922, i64 1, !dbg !68
  %field_pos2934 = bitcast %"struct.rubinius::Object"* %field_pos29343646 to %"struct.rubinius::Object"**, !dbg !68
  %field2935 = load %"struct.rubinius::Object"** %field_pos2934, align 8, !dbg !68
  %prune_undef2936 = icmp eq %"struct.rubinius::Object"* %field2935, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !68
  %"select ivar2937" = select i1 %prune_undef2936, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2935, !dbg !68
  br label %continue2920, !dbg !68

visit_push_ivar_fallback2919:                     ; preds = %check_class_id2926, %ip274
  %ivar2940 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2922, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*)) #0, !dbg !68
  br label %continue2920, !dbg !68

continue2946:                                     ; preds = %visit_push_ivar_fallback2945, %correct_class2953
  %stack_load2988 = phi %"struct.rubinius::Object"* [ %"select ivar2963", %correct_class2953 ], [ %ivar2966, %visit_push_ivar_fallback2945 ]
  store %"struct.rubinius::Object"* %stack_load2988, %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !68
  %cast2973 = ptrtoint %"struct.rubinius::Object"* %local2943 to i64, !dbg !68
  %masked2974 = and i64 %cast2973, 3, !dbg !68
  %is_reference2975 = icmp eq i64 %masked2974, 0, !dbg !68
  br i1 %is_reference2975, label %check_class_id2976, label %class_fallback2968, !dbg !68

check_class_id2952:                               ; preds = %continue2920
  %class_pos2954 = getelementptr %"struct.rubinius::Object"* %self2922, i64 0, i32 0, i32 1, !dbg !68
  %ref_class2955 = load %"struct.rubinius::Class"** %class_pos2954, align 8, !dbg !68
  %class_id_pos2956 = getelementptr %"struct.rubinius::Class"* %ref_class2955, i64 0, i32 4, !dbg !68
  %class_id2957 = load i32* %class_id_pos2956, align 4, !dbg !68
  %check_class_id2958 = icmp eq i32 %class_id2957, 1285, !dbg !68
  br i1 %check_class_id2958, label %correct_class2953, label %visit_push_ivar_fallback2945, !dbg !68

correct_class2953:                                ; preds = %check_class_id2952
  %field_pos29603644 = getelementptr %"struct.rubinius::Object"* %self2922, i64 2, !dbg !68
  %field_pos2960 = bitcast %"struct.rubinius::Object"* %field_pos29603644 to %"struct.rubinius::Object"**, !dbg !68
  %field2961 = load %"struct.rubinius::Object"** %field_pos2960, align 8, !dbg !68
  %prune_undef2962 = icmp eq %"struct.rubinius::Object"* %field2961, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !68
  %"select ivar2963" = select i1 %prune_undef2962, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field2961, !dbg !68
  br label %continue2946, !dbg !68

visit_push_ivar_fallback2945:                     ; preds = %check_class_id2952, %continue2920
  %ivar2966 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self2922, %"struct.rubinius::Object"* inttoptr (i64 65646 to %"struct.rubinius::Object"*)) #0, !dbg !68
  br label %continue2946, !dbg !68

continue2970:                                     ; preds = %class_fallback2968.continue2970_crit_edge, %continue3003
  %stack_load3033 = phi %"struct.rubinius::Object"* [ %storemerge3647, %continue3003 ], [ %stack_load3033.pre, %class_fallback2968.continue2970_crit_edge ]
  %send_result3027 = phi %"struct.rubinius::Object"* [ %304, %continue3003 ], [ %call_site_execute3024, %class_fallback2968.continue2970_crit_edge ], !dbg !68
  store %"struct.rubinius::Object"* %send_result3027, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !68
  %cast3034 = ptrtoint %"struct.rubinius::Object"* %stack_load3033 to i64, !dbg !68
  %masked3035 = and i64 %cast3034, 3, !dbg !68
  %is_reference3036 = icmp eq i64 %masked3035, 0, !dbg !68
  br i1 %is_reference3036, label %check_class_id3037, label %class_fallback3029, !dbg !68

check_class_id2976:                               ; preds = %continue2946
  %class_pos2979 = getelementptr %"struct.rubinius::Object"* %local2943, i64 0, i32 0, i32 1, !dbg !68
  %ref_class2980 = load %"struct.rubinius::Class"** %class_pos2979, align 8, !dbg !68
  %class_id_pos2981 = getelementptr %"struct.rubinius::Class"* %ref_class2980, i64 0, i32 4, !dbg !68
  %class_id2982 = load i32* %class_id_pos2981, align 4, !dbg !68
  %check_class_id2983 = icmp eq i32 %class_id2982, 77, !dbg !68
  br i1 %check_class_id2983, label %correct_class2977, label %class_fallback2968, !dbg !68

correct_class2977:                                ; preds = %check_class_id2976
  %serial_id_pos2984 = getelementptr %"struct.rubinius::Class"* %ref_class2980, i64 0, i32 5, !dbg !68
  %serial_id2985 = load i32* %serial_id_pos2984, align 4, !dbg !68
  %check_serial_id2986 = icmp eq i32 %serial_id2985, 224, !dbg !68
  br i1 %check_serial_id2986, label %correct_serial2978, label %serial_fallback2969, !dbg !68

correct_serial2978:                               ; preds = %correct_class2977
  %cast2990 = ptrtoint %"struct.rubinius::Object"* %stack_load2988 to i64, !dbg !68
  %masked2991 = and i64 %cast2990, 3, !dbg !68
  %is_reference2992 = icmp eq i64 %masked2991, 0, !dbg !68
  br i1 %is_reference2992, label %check_class_id2993, label %continue2989, !dbg !68

serial_fallback2969:                              ; preds = %correct_class2977
  store i32 282, i32* %65, align 4, !dbg !68
  %299 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 282, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !68
  br label %return_pad126, !dbg !68

check_class_id2993:                               ; preds = %correct_serial2978
  %class_pos2995 = getelementptr %"struct.rubinius::Object"* %stack_load2988, i64 0, i32 0, i32 1, !dbg !68
  %ref_class2996 = load %"struct.rubinius::Class"** %class_pos2995, align 8, !dbg !68
  %class_id_pos2997 = getelementptr %"struct.rubinius::Class"* %ref_class2996, i64 0, i32 4, !dbg !68
  %class_id2998 = load i32* %class_id_pos2997, align 4, !dbg !68
  %check_class_id2999 = icmp eq i32 %class_id2998, 77, !dbg !68
  br i1 %check_class_id2999, label %correct_class2994, label %continue2989, !dbg !68

correct_class2994:                                ; preds = %check_class_id2993
  %arg.value_pos3001 = getelementptr %"struct.rubinius::Object"* %stack_load2988, i64 1, !dbg !68
  %300 = bitcast %"struct.rubinius::Object"* %arg.value_pos3001 to double*, !dbg !68
  %farg3002 = load double* %300, align 8, !dbg !68
  br label %continue3003, !dbg !68

continue2989:                                     ; preds = %check_class_id2993, %correct_serial2978
  %masked3005 = and i64 %cast2990, 1, !dbg !68
  %is_fixnum3006 = icmp eq i64 %masked3005, 0, !dbg !68
  br i1 %is_fixnum3006, label %class_fallback2968, label %guarded_body3007, !dbg !68

guarded_body3007:                                 ; preds = %continue2989
  %ashr3009 = ashr i64 %cast2990, 1, !dbg !68
  %301 = sitofp i64 %ashr3009 to double, !dbg !68
  br label %continue3003, !dbg !68

continue3003:                                     ; preds = %guarded_body3007, %correct_class2994
  %rhs3010 = phi double [ %farg3002, %correct_class2994 ], [ %301, %guarded_body3007 ], !dbg !68
  %self.value_pos3014 = getelementptr %"struct.rubinius::Object"* %local2943, i64 1, !dbg !68
  %302 = bitcast %"struct.rubinius::Object"* %self.value_pos3014 to double*, !dbg !68
  %fself3015 = load double* %302, align 8, !dbg !68
  %float.mul3016 = fmul double %rhs3010, %fself3015, !dbg !68
  %result3017 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !68, !rbx-classid !33
  %303 = getelementptr %"struct.rubinius::Float"* %result3017, i64 0, i32 1, !dbg !68
  store double %float.mul3016, double* %303, align 8, !dbg !68
  %304 = getelementptr inbounds %"struct.rubinius::Float"* %result3017, i64 0, i32 0, i32 0, !dbg !68
  br label %continue2970, !dbg !68

class_fallback2968:                               ; preds = %continue2989, %check_class_id2976, %continue2946
  store %"struct.rubinius::Object"* %local2943, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !68
  store i32 1, i32* %out_args_total, align 8, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !68
  store %"struct.rubinius::Object"** %stack_pos2947, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !68
  %cache_const3021 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550664 to %"struct.rubinius::CallSite"**), align 8, !dbg !68
  %execute_pos3022 = getelementptr %"struct.rubinius::CallSite"* %cache_const3021, i64 0, i32 2, !dbg !68
  %execute3023 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3022, align 8, !dbg !68
  store i32 282, i32* %65, align 4, !dbg !68
  %call_site_execute3024 = call %"struct.rubinius::Object"* %execute3023(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3021, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check3026 = icmp eq %"struct.rubinius::Object"* %call_site_execute3024, null, !dbg !68
  br i1 %null_check3026, label %bail_out159, label %class_fallback2968.continue2970_crit_edge, !dbg !68

class_fallback2968.continue2970_crit_edge:        ; preds = %class_fallback2968
  %stack_load3033.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !68
  br label %continue2970, !dbg !68

continue3031:                                     ; preds = %class_fallback3029, %continue3064
  %send_result3088 = phi %"struct.rubinius::Object"* [ %310, %continue3064 ], [ %call_site_execute3085, %class_fallback3029 ], !dbg !68
  store %"struct.rubinius::Object"* %send_result3088, %"struct.rubinius::Object"** %stack140, align 8, !dbg !68
  %self3090 = load %"struct.rubinius::Object"** %70, align 8, !dbg !68
  %cast3095 = ptrtoint %"struct.rubinius::Object"* %self3090 to i64, !dbg !68
  %masked3096 = and i64 %cast3095, 3, !dbg !68
  %is_reference3097 = icmp eq i64 %masked3096, 0, !dbg !68
  br i1 %is_reference3097, label %check_class_id3098, label %visit_push_ivar_fallback3093, !dbg !68

check_class_id3037:                               ; preds = %continue2970
  %class_pos3040 = getelementptr %"struct.rubinius::Object"* %stack_load3033, i64 0, i32 0, i32 1, !dbg !68
  %ref_class3041 = load %"struct.rubinius::Class"** %class_pos3040, align 8, !dbg !68
  %class_id_pos3042 = getelementptr %"struct.rubinius::Class"* %ref_class3041, i64 0, i32 4, !dbg !68
  %class_id3043 = load i32* %class_id_pos3042, align 4, !dbg !68
  %check_class_id3044 = icmp eq i32 %class_id3043, 77, !dbg !68
  br i1 %check_class_id3044, label %correct_class3038, label %class_fallback3029, !dbg !68

correct_class3038:                                ; preds = %check_class_id3037
  %serial_id_pos3045 = getelementptr %"struct.rubinius::Class"* %ref_class3041, i64 0, i32 5, !dbg !68
  %serial_id3046 = load i32* %serial_id_pos3045, align 4, !dbg !68
  %check_serial_id3047 = icmp eq i32 %serial_id3046, 224, !dbg !68
  br i1 %check_serial_id3047, label %correct_serial3039, label %serial_fallback3030, !dbg !68

correct_serial3039:                               ; preds = %correct_class3038
  %cast3051 = ptrtoint %"struct.rubinius::Object"* %send_result3027 to i64, !dbg !68
  %masked3052 = and i64 %cast3051, 3, !dbg !68
  %is_reference3053 = icmp eq i64 %masked3052, 0, !dbg !68
  br i1 %is_reference3053, label %check_class_id3054, label %continue3050, !dbg !68

serial_fallback3030:                              ; preds = %correct_class3038
  store i32 285, i32* %65, align 4, !dbg !68
  %305 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 285, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !68
  br label %return_pad126, !dbg !68

check_class_id3054:                               ; preds = %correct_serial3039
  %class_pos3056 = getelementptr %"struct.rubinius::Object"* %send_result3027, i64 0, i32 0, i32 1, !dbg !68
  %ref_class3057 = load %"struct.rubinius::Class"** %class_pos3056, align 8, !dbg !68
  %class_id_pos3058 = getelementptr %"struct.rubinius::Class"* %ref_class3057, i64 0, i32 4, !dbg !68
  %class_id3059 = load i32* %class_id_pos3058, align 4, !dbg !68
  %check_class_id3060 = icmp eq i32 %class_id3059, 77, !dbg !68
  br i1 %check_class_id3060, label %correct_class3055, label %continue3050, !dbg !68

correct_class3055:                                ; preds = %check_class_id3054
  %arg.value_pos3062 = getelementptr %"struct.rubinius::Object"* %send_result3027, i64 1, !dbg !68
  %306 = bitcast %"struct.rubinius::Object"* %arg.value_pos3062 to double*, !dbg !68
  %farg3063 = load double* %306, align 8, !dbg !68
  br label %continue3064, !dbg !68

continue3050:                                     ; preds = %check_class_id3054, %correct_serial3039
  %masked3066 = and i64 %cast3051, 1, !dbg !68
  %is_fixnum3067 = icmp eq i64 %masked3066, 0, !dbg !68
  br i1 %is_fixnum3067, label %class_fallback3029, label %guarded_body3068, !dbg !68

guarded_body3068:                                 ; preds = %continue3050
  %ashr3070 = ashr i64 %cast3051, 1, !dbg !68
  %307 = sitofp i64 %ashr3070 to double, !dbg !68
  br label %continue3064, !dbg !68

continue3064:                                     ; preds = %guarded_body3068, %correct_class3055
  %rhs3071 = phi double [ %farg3063, %correct_class3055 ], [ %307, %guarded_body3068 ], !dbg !68
  %self.value_pos3075 = getelementptr %"struct.rubinius::Object"* %stack_load3033, i64 1, !dbg !68
  %308 = bitcast %"struct.rubinius::Object"* %self.value_pos3075 to double*, !dbg !68
  %fself3076 = load double* %308, align 8, !dbg !68
  %float.add3077 = fadd double %rhs3071, %fself3076, !dbg !68
  %result3078 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !68, !rbx-classid !33
  %309 = getelementptr %"struct.rubinius::Float"* %result3078, i64 0, i32 1, !dbg !68
  store double %float.add3077, double* %309, align 8, !dbg !68
  %310 = getelementptr inbounds %"struct.rubinius::Float"* %result3078, i64 0, i32 0, i32 0, !dbg !68
  br label %continue3031, !dbg !68

class_fallback3029:                               ; preds = %continue3050, %check_class_id3037, %continue2970
  store %"struct.rubinius::Object"* %stack_load3033, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !68
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !68
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !68
  store i32 1, i32* %out_args_total, align 8, !dbg !68
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !68
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !68
  %cache_const3082 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550688 to %"struct.rubinius::CallSite"**), align 32, !dbg !68
  %execute_pos3083 = getelementptr %"struct.rubinius::CallSite"* %cache_const3082, i64 0, i32 2, !dbg !68
  %execute3084 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3083, align 8, !dbg !68
  store i32 285, i32* %65, align 4, !dbg !68
  %call_site_execute3085 = call %"struct.rubinius::Object"* %execute3084(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3082, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !68
  %null_check3087 = icmp eq %"struct.rubinius::Object"* %call_site_execute3085, null, !dbg !68
  br i1 %null_check3087, label %bail_out159, label %continue3031, !dbg !68

continue3094:                                     ; preds = %visit_push_ivar_fallback3093, %correct_class3099, %run_barrier3112, %reference_obj3110
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !69
  %self3130 = load %"struct.rubinius::Object"** %70, align 8, !dbg !69
  %cast3131 = ptrtoint %"struct.rubinius::Object"* %self3130 to i64, !dbg !69
  %masked3132 = and i64 %cast3131, 3, !dbg !69
  %is_reference3133 = icmp eq i64 %masked3132, 0, !dbg !69
  br i1 %is_reference3133, label %check_class_id3134, label %visit_push_ivar_fallback3127, !dbg !69

check_class_id3098:                               ; preds = %continue3031
  %class_pos3100 = getelementptr %"struct.rubinius::Object"* %self3090, i64 0, i32 0, i32 1, !dbg !68
  %ref_class3101 = load %"struct.rubinius::Class"** %class_pos3100, align 8, !dbg !68
  %class_id_pos3102 = getelementptr %"struct.rubinius::Class"* %ref_class3101, i64 0, i32 4, !dbg !68
  %class_id3103 = load i32* %class_id_pos3102, align 4, !dbg !68
  %check_class_id3104 = icmp eq i32 %class_id3103, 1285, !dbg !68
  br i1 %check_class_id3104, label %correct_class3099, label %visit_push_ivar_fallback3093, !dbg !68

correct_class3099:                                ; preds = %check_class_id3098
  %311 = getelementptr inbounds %"struct.rubinius::Object"* %self3090, i64 1, i32 0, i32 0, i32 0, !dbg !68
  %send_result3088.c = ptrtoint %"struct.rubinius::Object"* %send_result3088 to i64, !dbg !68
  store i64 %send_result3088.c, i64* %311, align 8, !dbg !68
  %masked3108 = and i64 %send_result3088.c, 3, !dbg !68
  %is_reference3109 = icmp eq i64 %masked3108, 0, !dbg !68
  br i1 %is_reference3109, label %reference_obj3110, label %continue3094, !dbg !68

visit_push_ivar_fallback3093:                     ; preds = %check_class_id3098, %continue3031
  %ivar3123 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3090, %"struct.rubinius::Object"* inttoptr (i64 65622 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3088), !dbg !68
  %null_check3126 = icmp eq %"struct.rubinius::Object"* %ivar3123, null, !dbg !68
  br i1 %null_check3126, label %bail_out159, label %continue3094, !dbg !68

reference_obj3110:                                ; preds = %correct_class3099
  %object_memory_mark3114 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !68
  %word_pos3115 = getelementptr %"struct.rubinius::Object"* %self3090, i64 0, i32 0, i32 0, i32 0, !dbg !68
  %flags3116 = load i64* %word_pos3115, align 8, !dbg !68
  %mark_mask3117 = and i64 %flags3116, 3670016, !dbg !68
  %scan_mark3118 = add i32 %object_memory_mark3114, 1, !dbg !68
  %312 = zext i32 %scan_mark3118 to i64, !dbg !68
  %lshr3119 = shl nuw nsw i64 %312, 19, !dbg !68
  %is_scanned3120 = icmp ne i64 %mark_mask3117, %lshr3119, !dbg !68
  %zone_mask3121 = and i64 %flags3116, 768, !dbg !68
  %is_young3122 = icmp eq i64 %zone_mask3121, 512, !dbg !68
  %or.cond3615 = and i1 %is_scanned3120, %is_young3122, !dbg !68
  br i1 %or.cond3615, label %continue3094, label %run_barrier3112, !dbg !68

run_barrier3112:                                  ; preds = %reference_obj3110
  %313 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3090, %"struct.rubinius::Object"* %send_result3088), !dbg !68
  br label %continue3094, !dbg !68

continue3128:                                     ; preds = %visit_push_ivar_fallback3127, %correct_class3135
  %storemerge3642 = phi %"struct.rubinius::Object"* [ %"select ivar3145", %correct_class3135 ], [ %ivar3148, %visit_push_ivar_fallback3127 ]
  store %"struct.rubinius::Object"* %storemerge3642, %"struct.rubinius::Object"** %stack140, align 8, !dbg !69
  %local3151 = load %"struct.rubinius::Object"** %78, align 8, !dbg !69, !rbx-classid !53
  store %"struct.rubinius::Object"* %local3151, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !69
  br i1 %is_reference3133, label %check_class_id3160, label %visit_push_ivar_fallback3153, !dbg !69

check_class_id3134:                               ; preds = %continue3094
  %class_pos3136 = getelementptr %"struct.rubinius::Object"* %self3130, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3137 = load %"struct.rubinius::Class"** %class_pos3136, align 8, !dbg !69
  %class_id_pos3138 = getelementptr %"struct.rubinius::Class"* %ref_class3137, i64 0, i32 4, !dbg !69
  %class_id3139 = load i32* %class_id_pos3138, align 4, !dbg !69
  %check_class_id3140 = icmp eq i32 %class_id3139, 1285, !dbg !69
  br i1 %check_class_id3140, label %correct_class3135, label %visit_push_ivar_fallback3127, !dbg !69

correct_class3135:                                ; preds = %check_class_id3134
  %field_pos3142 = getelementptr %"struct.rubinius::Object"* %self3130, i64 1, i32 0, i32 1, !dbg !69
  %314 = load %"struct.rubinius::Class"** %field_pos3142, align 8, !dbg !69
  %field3143 = getelementptr inbounds %"struct.rubinius::Class"* %314, i64 0, i32 0, i32 0, !dbg !69
  %prune_undef3144 = icmp eq %"struct.rubinius::Object"* %field3143, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !69
  %"select ivar3145" = select i1 %prune_undef3144, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3143, !dbg !69
  br label %continue3128, !dbg !69

visit_push_ivar_fallback3127:                     ; preds = %check_class_id3134, %continue3094
  %ivar3148 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3130, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*)) #0, !dbg !69
  br label %continue3128, !dbg !69

continue3154:                                     ; preds = %visit_push_ivar_fallback3153, %correct_class3161
  %stack_load3196 = phi %"struct.rubinius::Object"* [ %"select ivar3171", %correct_class3161 ], [ %ivar3174, %visit_push_ivar_fallback3153 ]
  store %"struct.rubinius::Object"* %stack_load3196, %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !69
  %cast3181 = ptrtoint %"struct.rubinius::Object"* %local3151 to i64, !dbg !69
  %masked3182 = and i64 %cast3181, 3, !dbg !69
  %is_reference3183 = icmp eq i64 %masked3182, 0, !dbg !69
  br i1 %is_reference3183, label %check_class_id3184, label %class_fallback3176, !dbg !69

check_class_id3160:                               ; preds = %continue3128
  %class_pos3162 = getelementptr %"struct.rubinius::Object"* %self3130, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3163 = load %"struct.rubinius::Class"** %class_pos3162, align 8, !dbg !69
  %class_id_pos3164 = getelementptr %"struct.rubinius::Class"* %ref_class3163, i64 0, i32 4, !dbg !69
  %class_id3165 = load i32* %class_id_pos3164, align 4, !dbg !69
  %check_class_id3166 = icmp eq i32 %class_id3165, 1285, !dbg !69
  br i1 %check_class_id3166, label %correct_class3161, label %visit_push_ivar_fallback3153, !dbg !69

correct_class3161:                                ; preds = %check_class_id3160
  %field_pos3168 = getelementptr %"struct.rubinius::Object"* %self3130, i64 2, i32 0, i32 1, !dbg !69
  %315 = load %"struct.rubinius::Class"** %field_pos3168, align 8, !dbg !69
  %field3169 = getelementptr inbounds %"struct.rubinius::Class"* %315, i64 0, i32 0, i32 0, !dbg !69
  %prune_undef3170 = icmp eq %"struct.rubinius::Object"* %field3169, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !69
  %"select ivar3171" = select i1 %prune_undef3170, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3169, !dbg !69
  br label %continue3154, !dbg !69

visit_push_ivar_fallback3153:                     ; preds = %check_class_id3160, %continue3128
  %ivar3174 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3130, %"struct.rubinius::Object"* inttoptr (i64 65654 to %"struct.rubinius::Object"*)) #0, !dbg !69
  br label %continue3154, !dbg !69

continue3178:                                     ; preds = %class_fallback3176.continue3178_crit_edge, %continue3211
  %stack_load3241 = phi %"struct.rubinius::Object"* [ %storemerge3642, %continue3211 ], [ %stack_load3241.pre, %class_fallback3176.continue3178_crit_edge ]
  %send_result3235 = phi %"struct.rubinius::Object"* [ %321, %continue3211 ], [ %call_site_execute3232, %class_fallback3176.continue3178_crit_edge ], !dbg !69
  store %"struct.rubinius::Object"* %send_result3235, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !69
  %cast3242 = ptrtoint %"struct.rubinius::Object"* %stack_load3241 to i64, !dbg !69
  %masked3243 = and i64 %cast3242, 3, !dbg !69
  %is_reference3244 = icmp eq i64 %masked3243, 0, !dbg !69
  br i1 %is_reference3244, label %check_class_id3245, label %class_fallback3237, !dbg !69

check_class_id3184:                               ; preds = %continue3154
  %class_pos3187 = getelementptr %"struct.rubinius::Object"* %local3151, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3188 = load %"struct.rubinius::Class"** %class_pos3187, align 8, !dbg !69
  %class_id_pos3189 = getelementptr %"struct.rubinius::Class"* %ref_class3188, i64 0, i32 4, !dbg !69
  %class_id3190 = load i32* %class_id_pos3189, align 4, !dbg !69
  %check_class_id3191 = icmp eq i32 %class_id3190, 77, !dbg !69
  br i1 %check_class_id3191, label %correct_class3185, label %class_fallback3176, !dbg !69

correct_class3185:                                ; preds = %check_class_id3184
  %serial_id_pos3192 = getelementptr %"struct.rubinius::Class"* %ref_class3188, i64 0, i32 5, !dbg !69
  %serial_id3193 = load i32* %serial_id_pos3192, align 4, !dbg !69
  %check_serial_id3194 = icmp eq i32 %serial_id3193, 224, !dbg !69
  br i1 %check_serial_id3194, label %correct_serial3186, label %serial_fallback3177, !dbg !69

correct_serial3186:                               ; preds = %correct_class3185
  %cast3198 = ptrtoint %"struct.rubinius::Object"* %stack_load3196 to i64, !dbg !69
  %masked3199 = and i64 %cast3198, 3, !dbg !69
  %is_reference3200 = icmp eq i64 %masked3199, 0, !dbg !69
  br i1 %is_reference3200, label %check_class_id3201, label %continue3197, !dbg !69

serial_fallback3177:                              ; preds = %correct_class3185
  store i32 297, i32* %65, align 4, !dbg !69
  %316 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 297, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

check_class_id3201:                               ; preds = %correct_serial3186
  %class_pos3203 = getelementptr %"struct.rubinius::Object"* %stack_load3196, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3204 = load %"struct.rubinius::Class"** %class_pos3203, align 8, !dbg !69
  %class_id_pos3205 = getelementptr %"struct.rubinius::Class"* %ref_class3204, i64 0, i32 4, !dbg !69
  %class_id3206 = load i32* %class_id_pos3205, align 4, !dbg !69
  %check_class_id3207 = icmp eq i32 %class_id3206, 77, !dbg !69
  br i1 %check_class_id3207, label %correct_class3202, label %continue3197, !dbg !69

correct_class3202:                                ; preds = %check_class_id3201
  %arg.value_pos3209 = getelementptr %"struct.rubinius::Object"* %stack_load3196, i64 1, !dbg !69
  %317 = bitcast %"struct.rubinius::Object"* %arg.value_pos3209 to double*, !dbg !69
  %farg3210 = load double* %317, align 8, !dbg !69
  br label %continue3211, !dbg !69

continue3197:                                     ; preds = %check_class_id3201, %correct_serial3186
  %masked3213 = and i64 %cast3198, 1, !dbg !69
  %is_fixnum3214 = icmp eq i64 %masked3213, 0, !dbg !69
  br i1 %is_fixnum3214, label %class_fallback3176, label %guarded_body3215, !dbg !69

guarded_body3215:                                 ; preds = %continue3197
  %ashr3217 = ashr i64 %cast3198, 1, !dbg !69
  %318 = sitofp i64 %ashr3217 to double, !dbg !69
  br label %continue3211, !dbg !69

continue3211:                                     ; preds = %guarded_body3215, %correct_class3202
  %rhs3218 = phi double [ %farg3210, %correct_class3202 ], [ %318, %guarded_body3215 ], !dbg !69
  %self.value_pos3222 = getelementptr %"struct.rubinius::Object"* %local3151, i64 1, !dbg !69
  %319 = bitcast %"struct.rubinius::Object"* %self.value_pos3222 to double*, !dbg !69
  %fself3223 = load double* %319, align 8, !dbg !69
  %float.mul3224 = fmul double %rhs3218, %fself3223, !dbg !69
  %result3225 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !69, !rbx-classid !33
  %320 = getelementptr %"struct.rubinius::Float"* %result3225, i64 0, i32 1, !dbg !69
  store double %float.mul3224, double* %320, align 8, !dbg !69
  %321 = getelementptr inbounds %"struct.rubinius::Float"* %result3225, i64 0, i32 0, i32 0, !dbg !69
  br label %continue3178, !dbg !69

class_fallback3176:                               ; preds = %continue3197, %check_class_id3184, %continue3154
  store %"struct.rubinius::Object"* %local3151, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !69
  store i32 1, i32* %out_args_total, align 8, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos2947, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !69
  %cache_const3229 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550784 to %"struct.rubinius::CallSite"**), align 512, !dbg !69
  %execute_pos3230 = getelementptr %"struct.rubinius::CallSite"* %cache_const3229, i64 0, i32 2, !dbg !69
  %execute3231 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3230, align 8, !dbg !69
  store i32 297, i32* %65, align 4, !dbg !69
  %call_site_execute3232 = call %"struct.rubinius::Object"* %execute3231(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3229, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check3234 = icmp eq %"struct.rubinius::Object"* %call_site_execute3232, null, !dbg !69
  br i1 %null_check3234, label %bail_out159, label %class_fallback3176.continue3178_crit_edge, !dbg !69

class_fallback3176.continue3178_crit_edge:        ; preds = %class_fallback3176
  %stack_load3241.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !69
  br label %continue3178, !dbg !69

continue3239:                                     ; preds = %class_fallback3237, %continue3272
  %send_result3296 = phi %"struct.rubinius::Object"* [ %327, %continue3272 ], [ %call_site_execute3293, %class_fallback3237 ], !dbg !69
  store %"struct.rubinius::Object"* %send_result3296, %"struct.rubinius::Object"** %stack140, align 8, !dbg !69
  %self3298 = load %"struct.rubinius::Object"** %70, align 8, !dbg !69
  %cast3303 = ptrtoint %"struct.rubinius::Object"* %self3298 to i64, !dbg !69
  %masked3304 = and i64 %cast3303, 3, !dbg !69
  %is_reference3305 = icmp eq i64 %masked3304, 0, !dbg !69
  br i1 %is_reference3305, label %check_class_id3306, label %visit_push_ivar_fallback3301, !dbg !69

check_class_id3245:                               ; preds = %continue3178
  %class_pos3248 = getelementptr %"struct.rubinius::Object"* %stack_load3241, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3249 = load %"struct.rubinius::Class"** %class_pos3248, align 8, !dbg !69
  %class_id_pos3250 = getelementptr %"struct.rubinius::Class"* %ref_class3249, i64 0, i32 4, !dbg !69
  %class_id3251 = load i32* %class_id_pos3250, align 4, !dbg !69
  %check_class_id3252 = icmp eq i32 %class_id3251, 77, !dbg !69
  br i1 %check_class_id3252, label %correct_class3246, label %class_fallback3237, !dbg !69

correct_class3246:                                ; preds = %check_class_id3245
  %serial_id_pos3253 = getelementptr %"struct.rubinius::Class"* %ref_class3249, i64 0, i32 5, !dbg !69
  %serial_id3254 = load i32* %serial_id_pos3253, align 4, !dbg !69
  %check_serial_id3255 = icmp eq i32 %serial_id3254, 224, !dbg !69
  br i1 %check_serial_id3255, label %correct_serial3247, label %serial_fallback3238, !dbg !69

correct_serial3247:                               ; preds = %correct_class3246
  %cast3259 = ptrtoint %"struct.rubinius::Object"* %send_result3235 to i64, !dbg !69
  %masked3260 = and i64 %cast3259, 3, !dbg !69
  %is_reference3261 = icmp eq i64 %masked3260, 0, !dbg !69
  br i1 %is_reference3261, label %check_class_id3262, label %continue3258, !dbg !69

serial_fallback3238:                              ; preds = %correct_class3246
  store i32 300, i32* %65, align 4, !dbg !69
  %322 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 300, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !69
  br label %return_pad126, !dbg !69

check_class_id3262:                               ; preds = %correct_serial3247
  %class_pos3264 = getelementptr %"struct.rubinius::Object"* %send_result3235, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3265 = load %"struct.rubinius::Class"** %class_pos3264, align 8, !dbg !69
  %class_id_pos3266 = getelementptr %"struct.rubinius::Class"* %ref_class3265, i64 0, i32 4, !dbg !69
  %class_id3267 = load i32* %class_id_pos3266, align 4, !dbg !69
  %check_class_id3268 = icmp eq i32 %class_id3267, 77, !dbg !69
  br i1 %check_class_id3268, label %correct_class3263, label %continue3258, !dbg !69

correct_class3263:                                ; preds = %check_class_id3262
  %arg.value_pos3270 = getelementptr %"struct.rubinius::Object"* %send_result3235, i64 1, !dbg !69
  %323 = bitcast %"struct.rubinius::Object"* %arg.value_pos3270 to double*, !dbg !69
  %farg3271 = load double* %323, align 8, !dbg !69
  br label %continue3272, !dbg !69

continue3258:                                     ; preds = %check_class_id3262, %correct_serial3247
  %masked3274 = and i64 %cast3259, 1, !dbg !69
  %is_fixnum3275 = icmp eq i64 %masked3274, 0, !dbg !69
  br i1 %is_fixnum3275, label %class_fallback3237, label %guarded_body3276, !dbg !69

guarded_body3276:                                 ; preds = %continue3258
  %ashr3278 = ashr i64 %cast3259, 1, !dbg !69
  %324 = sitofp i64 %ashr3278 to double, !dbg !69
  br label %continue3272, !dbg !69

continue3272:                                     ; preds = %guarded_body3276, %correct_class3263
  %rhs3279 = phi double [ %farg3271, %correct_class3263 ], [ %324, %guarded_body3276 ], !dbg !69
  %self.value_pos3283 = getelementptr %"struct.rubinius::Object"* %stack_load3241, i64 1, !dbg !69
  %325 = bitcast %"struct.rubinius::Object"* %self.value_pos3283 to double*, !dbg !69
  %fself3284 = load double* %325, align 8, !dbg !69
  %float.add3285 = fadd double %rhs3279, %fself3284, !dbg !69
  %result3286 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !69, !rbx-classid !33
  %326 = getelementptr %"struct.rubinius::Float"* %result3286, i64 0, i32 1, !dbg !69
  store double %float.add3285, double* %326, align 8, !dbg !69
  %327 = getelementptr inbounds %"struct.rubinius::Float"* %result3286, i64 0, i32 0, i32 0, !dbg !69
  br label %continue3239, !dbg !69

class_fallback3237:                               ; preds = %continue3258, %check_class_id3245, %continue3178
  store %"struct.rubinius::Object"* %stack_load3241, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !69
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !69
  store i32 1, i32* %out_args_total, align 8, !dbg !69
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !69
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !69
  %cache_const3290 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550808 to %"struct.rubinius::CallSite"**), align 8, !dbg !69
  %execute_pos3291 = getelementptr %"struct.rubinius::CallSite"* %cache_const3290, i64 0, i32 2, !dbg !69
  %execute3292 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3291, align 8, !dbg !69
  store i32 300, i32* %65, align 4, !dbg !69
  %call_site_execute3293 = call %"struct.rubinius::Object"* %execute3292(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3290, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !69
  %null_check3295 = icmp eq %"struct.rubinius::Object"* %call_site_execute3293, null, !dbg !69
  br i1 %null_check3295, label %bail_out159, label %continue3239, !dbg !69

continue3302:                                     ; preds = %visit_push_ivar_fallback3301, %correct_class3307, %run_barrier3320, %reference_obj3318
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack140, align 8, !dbg !70
  %self3338 = load %"struct.rubinius::Object"** %70, align 8, !dbg !70
  %cast3339 = ptrtoint %"struct.rubinius::Object"* %self3338 to i64, !dbg !70
  %masked3340 = and i64 %cast3339, 3, !dbg !70
  %is_reference3341 = icmp eq i64 %masked3340, 0, !dbg !70
  br i1 %is_reference3341, label %check_class_id3342, label %visit_push_ivar_fallback3335, !dbg !70

check_class_id3306:                               ; preds = %continue3239
  %class_pos3308 = getelementptr %"struct.rubinius::Object"* %self3298, i64 0, i32 0, i32 1, !dbg !69
  %ref_class3309 = load %"struct.rubinius::Class"** %class_pos3308, align 8, !dbg !69
  %class_id_pos3310 = getelementptr %"struct.rubinius::Class"* %ref_class3309, i64 0, i32 4, !dbg !69
  %class_id3311 = load i32* %class_id_pos3310, align 4, !dbg !69
  %check_class_id3312 = icmp eq i32 %class_id3311, 1285, !dbg !69
  br i1 %check_class_id3312, label %correct_class3307, label %visit_push_ivar_fallback3301, !dbg !69

correct_class3307:                                ; preds = %check_class_id3306
  %field_pos3314 = getelementptr %"struct.rubinius::Object"* %self3298, i64 1, i32 0, i32 1, !dbg !69
  %send_result3296.c = bitcast %"struct.rubinius::Object"* %send_result3296 to %"struct.rubinius::Class"*, !dbg !69
  store %"struct.rubinius::Class"* %send_result3296.c, %"struct.rubinius::Class"** %field_pos3314, align 8, !dbg !69
  %cast3315 = ptrtoint %"struct.rubinius::Object"* %send_result3296 to i64, !dbg !69
  %masked3316 = and i64 %cast3315, 3, !dbg !69
  %is_reference3317 = icmp eq i64 %masked3316, 0, !dbg !69
  br i1 %is_reference3317, label %reference_obj3318, label %continue3302, !dbg !69

visit_push_ivar_fallback3301:                     ; preds = %check_class_id3306, %continue3239
  %ivar3331 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3298, %"struct.rubinius::Object"* inttoptr (i64 65630 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3296), !dbg !69
  %null_check3334 = icmp eq %"struct.rubinius::Object"* %ivar3331, null, !dbg !69
  br i1 %null_check3334, label %bail_out159, label %continue3302, !dbg !69

reference_obj3318:                                ; preds = %correct_class3307
  %object_memory_mark3322 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !69
  %word_pos3323 = getelementptr %"struct.rubinius::Object"* %self3298, i64 0, i32 0, i32 0, i32 0, !dbg !69
  %flags3324 = load i64* %word_pos3323, align 8, !dbg !69
  %mark_mask3325 = and i64 %flags3324, 3670016, !dbg !69
  %scan_mark3326 = add i32 %object_memory_mark3322, 1, !dbg !69
  %328 = zext i32 %scan_mark3326 to i64, !dbg !69
  %lshr3327 = shl nuw nsw i64 %328, 19, !dbg !69
  %is_scanned3328 = icmp ne i64 %mark_mask3325, %lshr3327, !dbg !69
  %zone_mask3329 = and i64 %flags3324, 768, !dbg !69
  %is_young3330 = icmp eq i64 %zone_mask3329, 512, !dbg !69
  %or.cond3616 = and i1 %is_scanned3328, %is_young3330, !dbg !69
  br i1 %or.cond3616, label %continue3302, label %run_barrier3320, !dbg !69

run_barrier3320:                                  ; preds = %reference_obj3318
  %329 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3298, %"struct.rubinius::Object"* %send_result3296), !dbg !69
  br label %continue3302, !dbg !69

continue3336:                                     ; preds = %visit_push_ivar_fallback3335, %correct_class3343
  %storemerge3640 = phi %"struct.rubinius::Object"* [ %"select ivar3353", %correct_class3343 ], [ %ivar3356, %visit_push_ivar_fallback3335 ]
  store %"struct.rubinius::Object"* %storemerge3640, %"struct.rubinius::Object"** %stack140, align 8, !dbg !70
  %local3359 = load %"struct.rubinius::Object"** %78, align 8, !dbg !70, !rbx-classid !53
  store %"struct.rubinius::Object"* %local3359, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !70
  br i1 %is_reference3341, label %check_class_id3368, label %visit_push_ivar_fallback3361, !dbg !70

check_class_id3342:                               ; preds = %continue3302
  %class_pos3344 = getelementptr %"struct.rubinius::Object"* %self3338, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3345 = load %"struct.rubinius::Class"** %class_pos3344, align 8, !dbg !70
  %class_id_pos3346 = getelementptr %"struct.rubinius::Class"* %ref_class3345, i64 0, i32 4, !dbg !70
  %class_id3347 = load i32* %class_id_pos3346, align 4, !dbg !70
  %check_class_id3348 = icmp eq i32 %class_id3347, 1285, !dbg !70
  br i1 %check_class_id3348, label %correct_class3343, label %visit_push_ivar_fallback3335, !dbg !70

correct_class3343:                                ; preds = %check_class_id3342
  %330 = getelementptr %"struct.rubinius::Object"* %self3338, i64 1, i32 0, i32 2, !dbg !70
  %field3351 = load %"struct.rubinius::Object"** %330, align 8, !dbg !70
  %prune_undef3352 = icmp eq %"struct.rubinius::Object"* %field3351, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !70
  %"select ivar3353" = select i1 %prune_undef3352, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3351, !dbg !70
  br label %continue3336, !dbg !70

visit_push_ivar_fallback3335:                     ; preds = %check_class_id3342, %continue3302
  %ivar3356 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3338, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*)) #0, !dbg !70
  br label %continue3336, !dbg !70

continue3362:                                     ; preds = %visit_push_ivar_fallback3361, %correct_class3369
  %stack_load3404 = phi %"struct.rubinius::Object"* [ %"select ivar3379", %correct_class3369 ], [ %ivar3382, %visit_push_ivar_fallback3361 ]
  store %"struct.rubinius::Object"* %stack_load3404, %"struct.rubinius::Object"** %stack_pos2947, align 8, !dbg !70
  %cast3389 = ptrtoint %"struct.rubinius::Object"* %local3359 to i64, !dbg !70
  %masked3390 = and i64 %cast3389, 3, !dbg !70
  %is_reference3391 = icmp eq i64 %masked3390, 0, !dbg !70
  br i1 %is_reference3391, label %check_class_id3392, label %class_fallback3384, !dbg !70

check_class_id3368:                               ; preds = %continue3336
  %class_pos3370 = getelementptr %"struct.rubinius::Object"* %self3338, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3371 = load %"struct.rubinius::Class"** %class_pos3370, align 8, !dbg !70
  %class_id_pos3372 = getelementptr %"struct.rubinius::Class"* %ref_class3371, i64 0, i32 4, !dbg !70
  %class_id3373 = load i32* %class_id_pos3372, align 4, !dbg !70
  %check_class_id3374 = icmp eq i32 %class_id3373, 1285, !dbg !70
  br i1 %check_class_id3374, label %correct_class3369, label %visit_push_ivar_fallback3361, !dbg !70

correct_class3369:                                ; preds = %check_class_id3368
  %331 = getelementptr %"struct.rubinius::Object"* %self3338, i64 2, i32 0, i32 2, !dbg !70
  %field3377 = load %"struct.rubinius::Object"** %331, align 8, !dbg !70
  %prune_undef3378 = icmp eq %"struct.rubinius::Object"* %field3377, inttoptr (i64 34 to %"struct.rubinius::Object"*), !dbg !70
  %"select ivar3379" = select i1 %prune_undef3378, %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %field3377, !dbg !70
  br label %continue3362, !dbg !70

visit_push_ivar_fallback3361:                     ; preds = %check_class_id3368, %continue3336
  %ivar3382 = call %"struct.rubinius::Object"* @rbx_push_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3338, %"struct.rubinius::Object"* inttoptr (i64 65662 to %"struct.rubinius::Object"*)) #0, !dbg !70
  br label %continue3362, !dbg !70

continue3386:                                     ; preds = %class_fallback3384.continue3386_crit_edge, %continue3419
  %stack_load3449 = phi %"struct.rubinius::Object"* [ %storemerge3640, %continue3419 ], [ %stack_load3449.pre, %class_fallback3384.continue3386_crit_edge ]
  %send_result3443 = phi %"struct.rubinius::Object"* [ %337, %continue3419 ], [ %call_site_execute3440, %class_fallback3384.continue3386_crit_edge ], !dbg !70
  store %"struct.rubinius::Object"* %send_result3443, %"struct.rubinius::Object"** %stack_pos176, align 8, !dbg !70
  %cast3450 = ptrtoint %"struct.rubinius::Object"* %stack_load3449 to i64, !dbg !70
  %masked3451 = and i64 %cast3450, 3, !dbg !70
  %is_reference3452 = icmp eq i64 %masked3451, 0, !dbg !70
  br i1 %is_reference3452, label %check_class_id3453, label %class_fallback3445, !dbg !70

check_class_id3392:                               ; preds = %continue3362
  %class_pos3395 = getelementptr %"struct.rubinius::Object"* %local3359, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3396 = load %"struct.rubinius::Class"** %class_pos3395, align 8, !dbg !70
  %class_id_pos3397 = getelementptr %"struct.rubinius::Class"* %ref_class3396, i64 0, i32 4, !dbg !70
  %class_id3398 = load i32* %class_id_pos3397, align 4, !dbg !70
  %check_class_id3399 = icmp eq i32 %class_id3398, 77, !dbg !70
  br i1 %check_class_id3399, label %correct_class3393, label %class_fallback3384, !dbg !70

correct_class3393:                                ; preds = %check_class_id3392
  %serial_id_pos3400 = getelementptr %"struct.rubinius::Class"* %ref_class3396, i64 0, i32 5, !dbg !70
  %serial_id3401 = load i32* %serial_id_pos3400, align 4, !dbg !70
  %check_serial_id3402 = icmp eq i32 %serial_id3401, 224, !dbg !70
  br i1 %check_serial_id3402, label %correct_serial3394, label %serial_fallback3385, !dbg !70

correct_serial3394:                               ; preds = %correct_class3393
  %cast3406 = ptrtoint %"struct.rubinius::Object"* %stack_load3404 to i64, !dbg !70
  %masked3407 = and i64 %cast3406, 3, !dbg !70
  %is_reference3408 = icmp eq i64 %masked3407, 0, !dbg !70
  br i1 %is_reference3408, label %check_class_id3409, label %continue3405, !dbg !70

serial_fallback3385:                              ; preds = %correct_class3393
  store i32 312, i32* %65, align 4, !dbg !70
  %332 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 312, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !70
  br label %return_pad126, !dbg !70

check_class_id3409:                               ; preds = %correct_serial3394
  %class_pos3411 = getelementptr %"struct.rubinius::Object"* %stack_load3404, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3412 = load %"struct.rubinius::Class"** %class_pos3411, align 8, !dbg !70
  %class_id_pos3413 = getelementptr %"struct.rubinius::Class"* %ref_class3412, i64 0, i32 4, !dbg !70
  %class_id3414 = load i32* %class_id_pos3413, align 4, !dbg !70
  %check_class_id3415 = icmp eq i32 %class_id3414, 77, !dbg !70
  br i1 %check_class_id3415, label %correct_class3410, label %continue3405, !dbg !70

correct_class3410:                                ; preds = %check_class_id3409
  %arg.value_pos3417 = getelementptr %"struct.rubinius::Object"* %stack_load3404, i64 1, !dbg !70
  %333 = bitcast %"struct.rubinius::Object"* %arg.value_pos3417 to double*, !dbg !70
  %farg3418 = load double* %333, align 8, !dbg !70
  br label %continue3419, !dbg !70

continue3405:                                     ; preds = %check_class_id3409, %correct_serial3394
  %masked3421 = and i64 %cast3406, 1, !dbg !70
  %is_fixnum3422 = icmp eq i64 %masked3421, 0, !dbg !70
  br i1 %is_fixnum3422, label %class_fallback3384, label %guarded_body3423, !dbg !70

guarded_body3423:                                 ; preds = %continue3405
  %ashr3425 = ashr i64 %cast3406, 1, !dbg !70
  %334 = sitofp i64 %ashr3425 to double, !dbg !70
  br label %continue3419, !dbg !70

continue3419:                                     ; preds = %guarded_body3423, %correct_class3410
  %rhs3426 = phi double [ %farg3418, %correct_class3410 ], [ %334, %guarded_body3423 ], !dbg !70
  %self.value_pos3430 = getelementptr %"struct.rubinius::Object"* %local3359, i64 1, !dbg !70
  %335 = bitcast %"struct.rubinius::Object"* %self.value_pos3430 to double*, !dbg !70
  %fself3431 = load double* %335, align 8, !dbg !70
  %float.mul3432 = fmul double %rhs3426, %fself3431, !dbg !70
  %result3433 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !70, !rbx-classid !33
  %336 = getelementptr %"struct.rubinius::Float"* %result3433, i64 0, i32 1, !dbg !70
  store double %float.mul3432, double* %336, align 8, !dbg !70
  %337 = getelementptr inbounds %"struct.rubinius::Float"* %result3433, i64 0, i32 0, i32 0, !dbg !70
  br label %continue3386, !dbg !70

class_fallback3384:                               ; preds = %continue3405, %check_class_id3392, %continue3362
  store %"struct.rubinius::Object"* %local3359, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !70
  store i32 1, i32* %out_args_total, align 8, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos2947, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !70
  %cache_const3437 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550904 to %"struct.rubinius::CallSite"**), align 8, !dbg !70
  %execute_pos3438 = getelementptr %"struct.rubinius::CallSite"* %cache_const3437, i64 0, i32 2, !dbg !70
  %execute3439 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3438, align 8, !dbg !70
  store i32 312, i32* %65, align 4, !dbg !70
  %call_site_execute3440 = call %"struct.rubinius::Object"* %execute3439(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3437, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check3442 = icmp eq %"struct.rubinius::Object"* %call_site_execute3440, null, !dbg !70
  br i1 %null_check3442, label %bail_out159, label %class_fallback3384.continue3386_crit_edge, !dbg !70

class_fallback3384.continue3386_crit_edge:        ; preds = %class_fallback3384
  %stack_load3449.pre = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !70
  br label %continue3386, !dbg !70

continue3447:                                     ; preds = %class_fallback3445, %continue3480
  %send_result3504 = phi %"struct.rubinius::Object"* [ %343, %continue3480 ], [ %call_site_execute3501, %class_fallback3445 ], !dbg !70
  store %"struct.rubinius::Object"* %send_result3504, %"struct.rubinius::Object"** %stack140, align 8, !dbg !70
  %self3506 = load %"struct.rubinius::Object"** %70, align 8, !dbg !70
  %cast3511 = ptrtoint %"struct.rubinius::Object"* %self3506 to i64, !dbg !70
  %masked3512 = and i64 %cast3511, 3, !dbg !70
  %is_reference3513 = icmp eq i64 %masked3512, 0, !dbg !70
  br i1 %is_reference3513, label %check_class_id3514, label %visit_push_ivar_fallback3509, !dbg !70

check_class_id3453:                               ; preds = %continue3386
  %class_pos3456 = getelementptr %"struct.rubinius::Object"* %stack_load3449, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3457 = load %"struct.rubinius::Class"** %class_pos3456, align 8, !dbg !70
  %class_id_pos3458 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i64 0, i32 4, !dbg !70
  %class_id3459 = load i32* %class_id_pos3458, align 4, !dbg !70
  %check_class_id3460 = icmp eq i32 %class_id3459, 77, !dbg !70
  br i1 %check_class_id3460, label %correct_class3454, label %class_fallback3445, !dbg !70

correct_class3454:                                ; preds = %check_class_id3453
  %serial_id_pos3461 = getelementptr %"struct.rubinius::Class"* %ref_class3457, i64 0, i32 5, !dbg !70
  %serial_id3462 = load i32* %serial_id_pos3461, align 4, !dbg !70
  %check_serial_id3463 = icmp eq i32 %serial_id3462, 224, !dbg !70
  br i1 %check_serial_id3463, label %correct_serial3455, label %serial_fallback3446, !dbg !70

correct_serial3455:                               ; preds = %correct_class3454
  %cast3467 = ptrtoint %"struct.rubinius::Object"* %send_result3443 to i64, !dbg !70
  %masked3468 = and i64 %cast3467, 3, !dbg !70
  %is_reference3469 = icmp eq i64 %masked3468, 0, !dbg !70
  br i1 %is_reference3469, label %check_class_id3470, label %continue3466, !dbg !70

serial_fallback3446:                              ; preds = %correct_class3454
  store i32 315, i32* %65, align 4, !dbg !70
  %338 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, i32 315, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140495695134064 to i8*), i32 0, i8 1), !dbg !70
  br label %return_pad126, !dbg !70

check_class_id3470:                               ; preds = %correct_serial3455
  %class_pos3472 = getelementptr %"struct.rubinius::Object"* %send_result3443, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3473 = load %"struct.rubinius::Class"** %class_pos3472, align 8, !dbg !70
  %class_id_pos3474 = getelementptr %"struct.rubinius::Class"* %ref_class3473, i64 0, i32 4, !dbg !70
  %class_id3475 = load i32* %class_id_pos3474, align 4, !dbg !70
  %check_class_id3476 = icmp eq i32 %class_id3475, 77, !dbg !70
  br i1 %check_class_id3476, label %correct_class3471, label %continue3466, !dbg !70

correct_class3471:                                ; preds = %check_class_id3470
  %arg.value_pos3478 = getelementptr %"struct.rubinius::Object"* %send_result3443, i64 1, !dbg !70
  %339 = bitcast %"struct.rubinius::Object"* %arg.value_pos3478 to double*, !dbg !70
  %farg3479 = load double* %339, align 8, !dbg !70
  br label %continue3480, !dbg !70

continue3466:                                     ; preds = %check_class_id3470, %correct_serial3455
  %masked3482 = and i64 %cast3467, 1, !dbg !70
  %is_fixnum3483 = icmp eq i64 %masked3482, 0, !dbg !70
  br i1 %is_fixnum3483, label %class_fallback3445, label %guarded_body3484, !dbg !70

guarded_body3484:                                 ; preds = %continue3466
  %ashr3486 = ashr i64 %cast3467, 1, !dbg !70
  %340 = sitofp i64 %ashr3486 to double, !dbg !70
  br label %continue3480, !dbg !70

continue3480:                                     ; preds = %guarded_body3484, %correct_class3471
  %rhs3487 = phi double [ %farg3479, %correct_class3471 ], [ %340, %guarded_body3484 ], !dbg !70
  %self.value_pos3491 = getelementptr %"struct.rubinius::Object"* %stack_load3449, i64 1, !dbg !70
  %341 = bitcast %"struct.rubinius::Object"* %self.value_pos3491 to double*, !dbg !70
  %fself3492 = load double* %341, align 8, !dbg !70
  %float.add3493 = fadd double %rhs3487, %fself3492, !dbg !70
  %result3494 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !70, !rbx-classid !33
  %342 = getelementptr %"struct.rubinius::Float"* %result3494, i64 0, i32 1, !dbg !70
  store double %float.add3493, double* %342, align 8, !dbg !70
  %343 = getelementptr inbounds %"struct.rubinius::Float"* %result3494, i64 0, i32 0, i32 0, !dbg !70
  br label %continue3447, !dbg !70

class_fallback3445:                               ; preds = %continue3466, %check_class_id3453, %continue3386
  store %"struct.rubinius::Object"* %stack_load3449, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !70
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !70
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !70
  store i32 1, i32* %out_args_total, align 8, !dbg !70
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !70
  store %"struct.rubinius::Object"** %stack_pos176, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !70
  %cache_const3498 = load %"struct.rubinius::CallSite"** inttoptr (i64 26550928 to %"struct.rubinius::CallSite"**), align 16, !dbg !70
  %execute_pos3499 = getelementptr %"struct.rubinius::CallSite"* %cache_const3498, i64 0, i32 2, !dbg !70
  %execute3500 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3499, align 8, !dbg !70
  store i32 315, i32* %65, align 4, !dbg !70
  %call_site_execute3501 = call %"struct.rubinius::Object"* %execute3500(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3498, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Arguments"* %out_args), !dbg !70
  %null_check3503 = icmp eq %"struct.rubinius::Object"* %call_site_execute3501, null, !dbg !70
  br i1 %null_check3503, label %bail_out159, label %continue3447, !dbg !70

continue3510:                                     ; preds = %visit_push_ivar_fallback3509, %correct_class3515, %run_barrier3528, %reference_obj3526
  %stack_load3544 = load %"struct.rubinius::Object"** %stack140, align 8, !dbg !70
  br label %return_pad126, !dbg !70

return_pad126:                                    ; preds = %bail_out159, %continue3510, %serial_fallback3446, %serial_fallback3385, %serial_fallback3238, %serial_fallback3177, %serial_fallback3030, %serial_fallback2969, %serial_fallback2825, %class_fallback2824, %serial_fallback2752, %serial_fallback2691, %serial_fallback2624, %class_fallback2623, %serial_fallback2551, %serial_fallback2490, %serial_fallback2423, %class_fallback2422, %serial_fallback2350, %serial_fallback2289, %serial_fallback2166, %serial_fallback2105, %serial_fallback1978, %serial_fallback1917, %serial_fallback1801, %serial_fallback1740, %serial_fallback1624, %serial_fallback1544, %serial_fallback1455, %serial_fallback1394, %serial_fallback1330, %serial_fallback881, %class_fallback880, %serial_fallback820, %serial_fallback759, %serial_fallback693, %serial_fallback632, %serial_fallback566, %serial_fallback474, %serial_fallback371, %serial_fallback277, %serial_fallback250, %class_fallback249, %ret_raise_val161
  %return_phi127 = phi %"struct.rubinius::Object"* [ %crv163, %ret_raise_val161 ], [ %82, %class_fallback249 ], [ %83, %serial_fallback250 ], [ %85, %serial_fallback277 ], [ %94, %serial_fallback371 ], [ %104, %serial_fallback474 ], [ %110, %serial_fallback566 ], [ %114, %serial_fallback632 ], [ %118, %serial_fallback693 ], [ %124, %serial_fallback759 ], [ %128, %serial_fallback820 ], [ %134, %class_fallback880 ], [ %150, %serial_fallback881 ], [ %166, %serial_fallback1330 ], [ %170, %serial_fallback1394 ], [ %177, %serial_fallback1455 ], [ %183, %serial_fallback1544 ], [ %192, %serial_fallback1624 ], [ %198, %serial_fallback1740 ], [ %204, %serial_fallback1801 ], [ %214, %serial_fallback1917 ], [ %220, %serial_fallback1978 ], [ %229, %serial_fallback2105 ], [ %235, %serial_fallback2166 ], [ %244, %serial_fallback2289 ], [ %250, %serial_fallback2350 ], [ %256, %class_fallback2422 ], [ %258, %serial_fallback2423 ], [ %262, %serial_fallback2490 ], [ %268, %serial_fallback2551 ], [ %274, %class_fallback2623 ], [ %275, %serial_fallback2624 ], [ %279, %serial_fallback2691 ], [ %285, %serial_fallback2752 ], [ %291, %class_fallback2824 ], [ %293, %serial_fallback2825 ], [ %299, %serial_fallback2969 ], [ %305, %serial_fallback3030 ], [ %316, %serial_fallback3177 ], [ %322, %serial_fallback3238 ], [ %332, %serial_fallback3385 ], [ %338, %serial_fallback3446 ], [ %stack_load3544, %continue3510 ], [ null, %bail_out159 ]
  %null_check3547 = icmp eq %"struct.rubinius::Object"* %return_phi127, null, !dbg !23
  br i1 %null_check3547, label %bail_out, label %check_active3546, !dbg !23

check_class_id3514:                               ; preds = %continue3447
  %class_pos3516 = getelementptr %"struct.rubinius::Object"* %self3506, i64 0, i32 0, i32 1, !dbg !70
  %ref_class3517 = load %"struct.rubinius::Class"** %class_pos3516, align 8, !dbg !70
  %class_id_pos3518 = getelementptr %"struct.rubinius::Class"* %ref_class3517, i64 0, i32 4, !dbg !70
  %class_id3519 = load i32* %class_id_pos3518, align 4, !dbg !70
  %check_class_id3520 = icmp eq i32 %class_id3519, 1285, !dbg !70
  br i1 %check_class_id3520, label %correct_class3515, label %visit_push_ivar_fallback3509, !dbg !70

correct_class3515:                                ; preds = %check_class_id3514
  %344 = getelementptr %"struct.rubinius::Object"* %self3506, i64 1, i32 0, i32 2, !dbg !70
  store %"struct.rubinius::Object"* %send_result3504, %"struct.rubinius::Object"** %344, align 8, !dbg !70
  %cast3523 = ptrtoint %"struct.rubinius::Object"* %send_result3504 to i64, !dbg !70
  %masked3524 = and i64 %cast3523, 3, !dbg !70
  %is_reference3525 = icmp eq i64 %masked3524, 0, !dbg !70
  br i1 %is_reference3525, label %reference_obj3526, label %continue3510, !dbg !70

visit_push_ivar_fallback3509:                     ; preds = %check_class_id3514, %continue3447
  %ivar3539 = call %"struct.rubinius::Object"* @rbx_set_ivar(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame139, %"struct.rubinius::Object"* %self3506, %"struct.rubinius::Object"* inttoptr (i64 65638 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* %send_result3504), !dbg !70
  %null_check3542 = icmp eq %"struct.rubinius::Object"* %ivar3539, null, !dbg !70
  br i1 %null_check3542, label %bail_out159, label %continue3510, !dbg !70

reference_obj3526:                                ; preds = %correct_class3515
  %object_memory_mark3530 = load i32* inttoptr (i64 22565880 to i32*), align 8, !dbg !70
  %word_pos3531 = getelementptr %"struct.rubinius::Object"* %self3506, i64 0, i32 0, i32 0, i32 0, !dbg !70
  %flags3532 = load i64* %word_pos3531, align 8, !dbg !70
  %mark_mask3533 = and i64 %flags3532, 3670016, !dbg !70
  %scan_mark3534 = add i32 %object_memory_mark3530, 1, !dbg !70
  %345 = zext i32 %scan_mark3534 to i64, !dbg !70
  %lshr3535 = shl nuw nsw i64 %345, 19, !dbg !70
  %is_scanned3536 = icmp ne i64 %mark_mask3533, %lshr3535, !dbg !70
  %zone_mask3537 = and i64 %flags3532, 768, !dbg !70
  %is_young3538 = icmp eq i64 %zone_mask3537, 512, !dbg !70
  %or.cond3617 = and i1 %is_scanned3536, %is_young3538, !dbg !70
  br i1 %or.cond3617, label %continue3510, label %run_barrier3528, !dbg !70

run_barrier3528:                                  ; preds = %reference_obj3526
  %346 = call %"struct.rubinius::Object"* @rbx_write_barrier(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %self3506, %"struct.rubinius::Object"* %send_result3504), !dbg !70
  br label %continue3510, !dbg !70

check_active3546:                                 ; preds = %return_pad126
  %local3550 = load %"struct.rubinius::Object"** %29, align 8, !dbg !71, !rbx-classid !20
  store %"struct.rubinius::Object"* %local3550, %"struct.rubinius::Object"** %stack, align 8, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos11, align 8, !dbg !71
  %cast3564 = ptrtoint %"struct.rubinius::Object"* %local3550 to i64, !dbg !71
  %masked3567 = and i64 %cast3564, 1, !dbg !71
  %is_fixnum3568 = icmp eq i64 %masked3567, 0, !dbg !71
  br i1 %is_fixnum3568, label %class_fallback3553, label %push_add3560, !dbg !71

class_fallback3553:                               ; preds = %check_active3546
  store %"struct.rubinius::Object"* %local3550, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !71
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !71
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !71
  store i32 1, i32* %out_args_total, align 8, !dbg !71
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !71
  store %"struct.rubinius::Object"** %stack_pos11, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !71
  %cache_const3583 = load %"struct.rubinius::CallSite"** inttoptr (i64 23016368 to %"struct.rubinius::CallSite"**), align 16, !dbg !71
  %execute_pos3584 = getelementptr %"struct.rubinius::CallSite"* %cache_const3583, i64 0, i32 2, !dbg !71
  %execute3585 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos3584, align 8, !dbg !71
  store i32 47, i32* %10, align 4, !dbg !71
  %call_site_execute3586 = call %"struct.rubinius::Object"* %execute3585(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const3583, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !71
  %null_check3588 = icmp eq %"struct.rubinius::Object"* %call_site_execute3586, null, !dbg !71
  br i1 %null_check3588, label %bail_out, label %continue3555, !dbg !71

continue3555:                                     ; preds = %class_fallback3553, %bignum3562, %tagnow3561
  %send_result3589 = phi %"struct.rubinius::Object"* [ %big_value3575, %bignum3562 ], [ %as_obj3578, %tagnow3561 ], [ %call_site_execute3586, %class_fallback3553 ], !dbg !71
  store %"struct.rubinius::Object"* %send_result3589, %"struct.rubinius::Object"** %stack, align 8, !dbg !71
  store %"struct.rubinius::Object"* %send_result3589, %"struct.rubinius::Object"** %29, align 8, !dbg !71
  %347 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !71
  %vm_jit3597 = load %"struct.rubinius::VMJIT"** %347, align 8, !dbg !71
  %348 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit3597, i64 0, i32 5, !dbg !71
  %check_interrupts3598 = load i8* %348, align 1, !dbg !71
  %check_global_interrupts3599 = load i8* inttoptr (i64 22553886 to i8*), align 2, !dbg !71
  %or3600 = or i8 %check_global_interrupts3599, %check_interrupts3598, !dbg !71
  %needs_interrupts3601 = icmp eq i8 %or3600, 0, !dbg !71
  br i1 %needs_interrupts3601, label %ip4, label %interrupts3595, !dbg !71

push_add3560:                                     ; preds = %check_active3546
  %ashr3570 = ashr i64 %cast3564, 1, !dbg !71
  %fixnum.add3573 = add i64 %ashr3570, 1, !dbg !71
  %fixnum.add3573.off = add i64 %ashr3570, 4611686018427387904, !dbg !71
  %349 = icmp ult i64 %fixnum.add3573.off, 9223372036854775807, !dbg !71
  br i1 %349, label %tagnow3561, label %bignum3562, !dbg !71

tagnow3561:                                       ; preds = %push_add3560
  %shl3576 = shl i64 %fixnum.add3573, 1, !dbg !71
  %or3577 = or i64 %shl3576, 1, !dbg !71
  %as_obj3578 = inttoptr i64 %or3577 to %"struct.rubinius::Object"*, !dbg !71
  br label %continue3555, !dbg !71

bignum3562:                                       ; preds = %push_add3560
  %big_value3575 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add3573) #1, !dbg !71
  br label %continue3555, !dbg !71

interrupts3595:                                   ; preds = %continue3555
  store i32 53, i32* %10, align 4, !dbg !71
  %ci3602 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !71
  %null_check3605 = icmp eq %"struct.rubinius::Object"* %ci3602, null, !dbg !71
  br i1 %null_check3605, label %bail_out, label %interrupts3595.ip4_crit_edge, !dbg !71

interrupts3595.ip4_crit_edge:                     ; preds = %interrupts3595
  %local.pre = load %"struct.rubinius::Object"** %29, align 8, !dbg !19
  br label %ip4, !dbg !71

ip56:                                             ; preds = %continue12
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !72
  br label %return_pad, !dbg !72

return_pad:                                       ; preds = %bail_out, %ip56, %serial_fallback119, %class_fallback118, %ret_raise_val
  %return_phi = phi %"struct.rubinius::Object"* [ %crv, %ret_raise_val ], [ %58, %class_fallback118 ], [ %67, %serial_fallback119 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip56 ], [ null, %bail_out ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !72
}

[[[ JIT Machine Code: _X_ANONYMOUS#__block__$block@7 ]]]
0x7fc7cfab4b80  push %rbp               
0x7fc7cfab4b81  mov %rsp, %rbp          
0x7fc7cfab4b84  push %r15               
0x7fc7cfab4b86  push %r14               
0x7fc7cfab4b88  push %r13               
0x7fc7cfab4b8a  push %r12               
0x7fc7cfab4b8c  push %rbx               
0x7fc7cfab4b8d  subq $0x338, %rsp       
0x7fc7cfab4b94  mov %rdi, %r14          
0x7fc7cfab4b97  mov 0x28(%rdx), %rax    
0x7fc7cfab4b9b  mov %rsi, -0xf0(%rbp)   
0x7fc7cfab4ba2  mov 0x10(%r8), %rsi     
0x7fc7cfab4ba6  mov %rsi, -0xe8(%rbp)   
0x7fc7cfab4bad  mov %rcx, -0xb0(%rbp)   
0x7fc7cfab4bb4  movq $0x0, -0xe0(%rbp)  
0x7fc7cfab4bbf  mov %rax, -0xd8(%rbp)   
0x7fc7cfab4bc6  mov (%r8), %eax         
0x7fc7cfab4bc9  or $0x6a, %eax          
0x7fc7cfab4bcc  mov %eax, -0xd0(%rbp)   
0x7fc7cfab4bd2  mov $0x0, -0xcc(%rbp)   
0x7fc7cfab4bdc  lea -0x130(%rbp), %rax  
0x7fc7cfab4be3  mov %rax, -0xb8(%rbp)   
0x7fc7cfab4bea  mov 0x20(%rdx), %rax    
0x7fc7cfab4bee  mov %rax, -0xc0(%rbp)   
0x7fc7cfab4bf5  mov $0x7fc7b4003d70, %rsi
0x7fc7cfab4bff  mov %rsi, -0xc8(%rbp)   
0x7fc7cfab4c06  lea -0xa8(%rbp), %rsi   
0x7fc7cfab4c0d  mov $0x9, %edi          
0x7fc7cfab4c12  movq $0x1a, (%rsi)      
0x7fc7cfab4c19  addq $0x8, %rsi         
0x7fc7cfab4c1d  dec %edi                
0x7fc7cfab4c1f  jnz 0x92                 ; 0x7fc7cfab4c12
0x7fc7cfab4c25  movq $0x0, -0x130(%rbp) 
0x7fc7cfab4c30  mov 0x8(%r8), %rsi      
0x7fc7cfab4c34  mov %rsi, -0x120(%rbp)  
0x7fc7cfab4c3b  mov 0x18(%r8), %rsi     
0x7fc7cfab4c3f  test %rsi, %rsi         
0x7fc7cfab4c42  cmovz 0x38(%rdx), %rsi  
0x7fc7cfab4c47  mov %rsi, -0x110(%rbp)  
0x7fc7cfab4c4e  mov 0x18(%rax), %rax    
0x7fc7cfab4c52  mov %rax, -0x118(%rbp)  
0x7fc7cfab4c59  mov 0x18(%rdx), %rax    
0x7fc7cfab4c5d  mov %rax, -0x128(%rbp)  
0x7fc7cfab4c64  movq $0x1a, -0x108(%rbp)
0x7fc7cfab4c6f  lea -0x100(%rbp), %rdx  
0x7fc7cfab4c76  movq $0x1a, -0x100(%rbp)
0x7fc7cfab4c81  movq $0x1a, -0xf8(%rbp) 
0x7fc7cfab4c8c  mov 0x20(%rcx), %rbx    
0x7fc7cfab4c90  mov 0x18(%rcx), %esi    
0x7fc7cfab4c93  mov %esi, %r8d          
0x7fc7cfab4c96  sar $0x1f, %r8d         
0x7fc7cfab4c9a  and %esi, %r8d          
0x7fc7cfab4c9d  xor %edi, %edi          
0x7fc7cfab4c9f  test %esi, %esi         
0x7fc7cfab4ca1  cmovg %edi, %esi        
0x7fc7cfab4ca4  mov %rbx, %rax          
0x7fc7cfab4ca7  jmp 0x13c                ; 0x7fc7cfab4cbc
0x7fc7cfab4cac  mov (%rax), %rcx        
0x7fc7cfab4caf  mov %rcx, (%rdx)        
0x7fc7cfab4cb2  inc %edi                
0x7fc7cfab4cb4  addq $0x8, %rdx         
0x7fc7cfab4cb8  addq $0x8, %rax         
0x7fc7cfab4cbc  cmp %esi, %edi          
0x7fc7cfab4cbe  jl 0x12c                 ; 0x7fc7cfab4cac
0x7fc7cfab4cc4  lea -0x100(%rbp), %rdx  
0x7fc7cfab4ccb  xor %esi, %esi          
0x7fc7cfab4ccd  mov %rbx, %rax          
0x7fc7cfab4cd0  jmp 0x165                ; 0x7fc7cfab4ce5
0x7fc7cfab4cd5  mov (%rax), %rcx        
0x7fc7cfab4cd8  mov %rcx, (%rdx)        
0x7fc7cfab4cdb  inc %esi                
0x7fc7cfab4cdd  addq $0x8, %rax         
0x7fc7cfab4ce1  addq $0x8, %rdx         
0x7fc7cfab4ce5  cmp %r8d, %esi          
0x7fc7cfab4ce8  jl 0x155                 ; 0x7fc7cfab4cd5
0x7fc7cfab4cee  lea -0x100(%rbp), %rdx  
0x7fc7cfab4cf5  xor %esi, %esi          
0x7fc7cfab4cf7  jmp 0x18c                ; 0x7fc7cfab4d0c
0x7fc7cfab4cfc  mov (%rbx), %rax        
0x7fc7cfab4cff  mov %rax, (%rdx)        
0x7fc7cfab4d02  inc %esi                
0x7fc7cfab4d04  addq $0x8, %rdx         
0x7fc7cfab4d08  addq $0x8, %rbx         
0x7fc7cfab4d0c  cmp %r8d, %esi          
0x7fc7cfab4d0f  jl 0x17c                 ; 0x7fc7cfab4cfc
0x7fc7cfab4d15  mov $0x1, %eax          
0x7fc7cfab4d1a  lea -0xf0(%rbp), %rbx   
0x7fc7cfab4d21  lea -0xa0(%rbp), %r15   
0x7fc7cfab4d28  lea -0x58(%rbp), %r13   
0x7fc7cfab4d2c  movq $0x1, -0xa8(%rbp)  
0x7fc7cfab4d37  movq $0x1, -0x100(%rbp) 
0x7fc7cfab4d42  jmp 0x1ce                ; 0x7fc7cfab4d4e
0x7fc7cfab4d47  mov -0x100(%rbp), %rax  
0x7fc7cfab4d4e  mov %rax, -0xa8(%rbp)   
0x7fc7cfab4d55  mov $0x1, %edx          
0x7fc7cfab4d5a  mov $0x2, %ecx          
0x7fc7cfab4d5f  mov %r14, %rdi          
0x7fc7cfab4d62  mov %rbx, %rsi          
0x7fc7cfab4d65  mov $0x762ea0, %rax      ; rbx_push_local_depth
0x7fc7cfab4d6f  callq *%rax             
0x7fc7cfab4d71  test %rax, %rax         
0x7fc7cfab4d74  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4d7a  mov %rax, -0xa0(%rbp)   
0x7fc7cfab4d81  mov -0xa8(%rbp), %rcx   
0x7fc7cfab4d88  mov %ecx, %edx          
0x7fc7cfab4d8a  and %eax, %edx          
0x7fc7cfab4d8c  testb $0x1, %dl         
0x7fc7cfab4d8f  jnz 0x26b                ; 0x7fc7cfab4deb
0x7fc7cfab4d95  mov %rcx, -0x50(%rbp)   
0x7fc7cfab4d99  movq $0x586, -0x58(%rbp)
0x7fc7cfab4da1  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4da9  mov $0x1, -0x40(%rbp)   
0x7fc7cfab4db0  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4db8  mov %r15, -0x38(%rbp)   
0x7fc7cfab4dbc  mov 0x15f3280, %rsi     
0x7fc7cfab4dc4  mov 0x20(%rsi), %rax    
0x7fc7cfab4dc8  mov $0x9, -0xcc(%rbp)   
0x7fc7cfab4dd2  mov %r14, %rdi          
0x7fc7cfab4dd5  mov %rbx, %rdx          
0x7fc7cfab4dd8  mov %r13, %rcx          
0x7fc7cfab4ddb  callq *%rax             
0x7fc7cfab4ddd  test %rax, %rax         
0x7fc7cfab4de0  jnz 0x27c                ; 0x7fc7cfab4dfc
0x7fc7cfab4de6  jmp 0x45d8               ; 0x7fc7cfab9158
0x7fc7cfab4deb  cmp %rax, %rcx          
0x7fc7cfab4dee  setl %al                
0x7fc7cfab4df1  movzxb %al, %eax        
0x7fc7cfab4df4  lea 0xa(%rax,8), %rax   
0x7fc7cfab4dfc  mov %rax, -0xa8(%rbp)   
0x7fc7cfab4e03  andq $0xf, %rax         
0x7fc7cfab4e07  cmpq $0xa, %rax         
0x7fc7cfab4e0b  jz 0x4634                ; 0x7fc7cfab91b4
0x7fc7cfab4e11  mov 0x15f32a8, %rax     
0x7fc7cfab4e19  mov 0x30(%rax), %rcx    
0x7fc7cfab4e1d  cmp -0xe8(%rbp), %rcx   
0x7fc7cfab4e24  jnz 0x2c3                ; 0x7fc7cfab4e43
0x7fc7cfab4e2a  mov 0x1582514, %ecx     
0x7fc7cfab4e31  cmp 0x44(%rax), %ecx    
0x7fc7cfab4e34  jnz 0x2c3                ; 0x7fc7cfab4e43
0x7fc7cfab4e3a  mov 0x20(%rax), %rax    
0x7fc7cfab4e3e  jmp 0x2ed                ; 0x7fc7cfab4e6d
0x7fc7cfab4e43  mov $0xe, -0xcc(%rbp)   
0x7fc7cfab4e4d  mov $0x15f32a8, %edx    
0x7fc7cfab4e52  mov %r14, %rdi          
0x7fc7cfab4e55  mov %rbx, %rsi          
0x7fc7cfab4e58  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab4e62  callq *%rax             
0x7fc7cfab4e64  test %rax, %rax         
0x7fc7cfab4e67  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4e6d  mov %rax, -0xa8(%rbp)   
0x7fc7cfab4e74  mov -0x100(%rbp), %rcx  
0x7fc7cfab4e7b  mov %rcx, -0xa0(%rbp)   
0x7fc7cfab4e82  mov %rax, -0x50(%rbp)   
0x7fc7cfab4e86  movq $0x3916, -0x58(%rbp)
0x7fc7cfab4e8e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4e96  mov $0x1, -0x40(%rbp)   
0x7fc7cfab4e9d  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4ea5  mov %r15, -0x38(%rbp)   
0x7fc7cfab4ea9  mov 0x15f32c8, %rsi     
0x7fc7cfab4eb1  mov 0x20(%rsi), %rax    
0x7fc7cfab4eb5  mov $0x12, -0xcc(%rbp)  
0x7fc7cfab4ebf  mov %r14, %rdi          
0x7fc7cfab4ec2  mov %rbx, %rdx          
0x7fc7cfab4ec5  mov %r13, %rcx          
0x7fc7cfab4ec8  callq *%rax             
0x7fc7cfab4eca  test %rax, %rax         
0x7fc7cfab4ecd  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4ed3  mov %rax, -0xf8(%rbp)   
0x7fc7cfab4eda  mov %rax, -0xa8(%rbp)   
0x7fc7cfab4ee1  mov 0x15f3308, %rax     
0x7fc7cfab4ee9  mov 0x30(%rax), %rcx    
0x7fc7cfab4eed  cmp -0xe8(%rbp), %rcx   
0x7fc7cfab4ef4  jnz 0x393                ; 0x7fc7cfab4f13
0x7fc7cfab4efa  mov 0x1582514, %ecx     
0x7fc7cfab4f01  cmp 0x44(%rax), %ecx    
0x7fc7cfab4f04  jnz 0x393                ; 0x7fc7cfab4f13
0x7fc7cfab4f0a  mov 0x20(%rax), %rax    
0x7fc7cfab4f0e  jmp 0x3bd                ; 0x7fc7cfab4f3d
0x7fc7cfab4f13  mov $0x1a, -0xcc(%rbp)  
0x7fc7cfab4f1d  mov $0x15f3308, %edx    
0x7fc7cfab4f22  mov %r14, %rdi          
0x7fc7cfab4f25  mov %rbx, %rsi          
0x7fc7cfab4f28  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab4f32  callq *%rax             
0x7fc7cfab4f34  test %rax, %rax         
0x7fc7cfab4f37  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4f3d  mov %rax, -0xa0(%rbp)   
0x7fc7cfab4f44  mov $0x1, %edx          
0x7fc7cfab4f49  mov $0x2, %ecx          
0x7fc7cfab4f4e  mov %r14, %rdi          
0x7fc7cfab4f51  mov %rbx, %rsi          
0x7fc7cfab4f54  mov $0x762ea0, %rax      ; rbx_push_local_depth
0x7fc7cfab4f5e  callq *%rax             
0x7fc7cfab4f60  test %rax, %rax         
0x7fc7cfab4f63  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4f69  mov %rax, -0x98(%rbp)   
0x7fc7cfab4f70  mov $0x1, %edx          
0x7fc7cfab4f75  mov $0x3, %ecx          
0x7fc7cfab4f7a  mov %r14, %rdi          
0x7fc7cfab4f7d  mov %rbx, %rsi          
0x7fc7cfab4f80  mov $0x762ea0, %rax      ; rbx_push_local_depth
0x7fc7cfab4f8a  callq *%rax             
0x7fc7cfab4f8c  test %rax, %rax         
0x7fc7cfab4f8f  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab4f95  mov %rax, -0x90(%rbp)   
0x7fc7cfab4f9c  mov -0x100(%rbp), %rax  
0x7fc7cfab4fa3  mov %rax, -0x88(%rbp)   
0x7fc7cfab4faa  movq $0x3, -0x80(%rbp)  
0x7fc7cfab4fb2  testb $0x1, %al         
0x7fc7cfab4fb5  jnz 0x495                ; 0x7fc7cfab5015
0x7fc7cfab4fbb  mov %rax, -0x50(%rbp)   
0x7fc7cfab4fbf  movq $0x55e, -0x58(%rbp)
0x7fc7cfab4fc7  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab4fcf  mov $0x1, -0x40(%rbp)   
0x7fc7cfab4fd6  movq $0x0, -0x30(%rbp)  
0x7fc7cfab4fde  lea -0x80(%rbp), %rax   
0x7fc7cfab4fe2  mov %rax, -0x38(%rbp)   
0x7fc7cfab4fe6  mov 0x15f3360, %rsi     
0x7fc7cfab4fee  mov 0x20(%rsi), %rax    
0x7fc7cfab4ff2  mov $0x25, -0xcc(%rbp)  
0x7fc7cfab4ffc  mov %r14, %rdi          
0x7fc7cfab4fff  mov %rbx, %rdx          
0x7fc7cfab5002  mov %r13, %rcx          
0x7fc7cfab5005  callq *%rax             
0x7fc7cfab5007  test %rax, %rax         
0x7fc7cfab500a  jnz 0x4d5                ; 0x7fc7cfab5055
0x7fc7cfab5010  jmp 0x45d8               ; 0x7fc7cfab9158
0x7fc7cfab5015  sarq $0x1, %rax         
0x7fc7cfab5018  lea 0x1(%rax), %rsi     
0x7fc7cfab501c  mov $0x4000000000000000, %rcx
0x7fc7cfab5026  add %rcx, %rax          
0x7fc7cfab5029  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfab5033  cmp %rcx, %rax          
0x7fc7cfab5036  ja 0x4c6                 ; 0x7fc7cfab5046
0x7fc7cfab503c  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfab5041  jmp 0x4d5                ; 0x7fc7cfab5055
0x7fc7cfab5046  mov %r14, %rdi          
0x7fc7cfab5049  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfab5053  callq *%rax             
0x7fc7cfab5055  mov %rax, -0x88(%rbp)   
0x7fc7cfab505c  mov -0xa8(%rbp), %rdi   
0x7fc7cfab5063  testb $0x3, %dil        
0x7fc7cfab5067  jnz 0x460f               ; 0x7fc7cfab918f
0x7fc7cfab506d  mov 0x8(%rdi), %rcx     
0x7fc7cfab5071  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab5078  jnz 0x460f               ; 0x7fc7cfab918f
0x7fc7cfab507e  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab5082  jnz 0x4649               ; 0x7fc7cfab91c9
0x7fc7cfab5088  mov -0xa0(%rbp), %r8    
0x7fc7cfab508f  mov -0x98(%rbp), %rdx   
0x7fc7cfab5096  mov -0x90(%rbp), %rsi   
0x7fc7cfab509d  mov %rbx, -0x1f8(%rbp)  
0x7fc7cfab50a4  mov %rbx, %r12          
0x7fc7cfab50a7  mov $0x7fc7b4054340, %rcx
0x7fc7cfab50b1  mov %rcx, -0x1e8(%rbp)  
0x7fc7cfab50b8  mov (%rcx), %rcx        
0x7fc7cfab50bb  mov %rcx, -0x1e0(%rbp)  
0x7fc7cfab50c2  mov 0xa0(%rcx), %rcx    
0x7fc7cfab50c9  mov %rcx, -0x1f0(%rbp)  
0x7fc7cfab50d0  mov $0xc, -0x1d8(%rbp)  
0x7fc7cfab50da  mov $0x0, -0x1d4(%rbp)  
0x7fc7cfab50e4  lea -0x288(%rbp), %rcx  
0x7fc7cfab50eb  mov %rcx, -0x1c0(%rbp)  
0x7fc7cfab50f2  mov $0x10, %ebx         
0x7fc7cfab50f7  lea -0x1b0(%rbp), %rcx  
0x7fc7cfab50fe  movq $0x1a, (%rcx)      
0x7fc7cfab5105  addq $0x8, %rcx         
0x7fc7cfab5109  dec %ebx                
0x7fc7cfab510b  jnz 0x57e                ; 0x7fc7cfab50fe
0x7fc7cfab5111  mov $0x7fc7b4054350, %rcx
0x7fc7cfab511b  mov (%rcx), %rcx        
0x7fc7cfab511e  movq $0x0, -0x288(%rbp) 
0x7fc7cfab5129  mov %rdi, -0x278(%rbp)  
0x7fc7cfab5130  mov %rcx, -0x268(%rbp)  
0x7fc7cfab5137  movq $0x1a, -0x270(%rbp)
0x7fc7cfab5142  movq $0x0, -0x280(%rbp) 
0x7fc7cfab514d  movq $0x1a, -0x260(%rbp)
0x7fc7cfab5158  mov $0xc, %edi          
0x7fc7cfab515d  lea -0x258(%rbp), %rcx  
0x7fc7cfab5164  mov %r13, %r15          
0x7fc7cfab5167  movq $0x1a, (%rcx)      
0x7fc7cfab516e  addq $0x8, %rcx         
0x7fc7cfab5172  dec %edi                
0x7fc7cfab5174  jnz 0x5e7                ; 0x7fc7cfab5167
0x7fc7cfab517a  mov %r8, -0x258(%rbp)   
0x7fc7cfab5181  mov %rdx, -0x250(%rbp)  
0x7fc7cfab5188  mov %rsi, -0x248(%rbp)  
0x7fc7cfab518f  mov %rax, -0x240(%rbp)  
0x7fc7cfab5196  jmp 0x622                ; 0x7fc7cfab51a2
0x7fc7cfab519b  mov -0x240(%rbp), %rax  
0x7fc7cfab51a2  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab51a9  mov -0x250(%rbp), %rcx  
0x7fc7cfab51b0  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab51b7  mov %ecx, %edx          
0x7fc7cfab51b9  and %eax, %edx          
0x7fc7cfab51bb  testb $0x1, %dl         
0x7fc7cfab51be  jnz 0x6a5                ; 0x7fc7cfab5225
0x7fc7cfab51c4  mov %rax, -0x50(%rbp)   
0x7fc7cfab51c8  movq $0x586, -0x58(%rbp)
0x7fc7cfab51d0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab51d8  mov $0x1, -0x40(%rbp)   
0x7fc7cfab51df  movq $0x0, -0x30(%rbp)  
0x7fc7cfab51e7  lea -0x1a8(%rbp), %rax  
0x7fc7cfab51ee  mov %rax, -0x38(%rbp)   
0x7fc7cfab51f2  mov 0x19518d8, %rsi     
0x7fc7cfab51fa  mov 0x20(%rsi), %rax    
0x7fc7cfab51fe  mov $0x4, -0x1d4(%rbp)  
0x7fc7cfab5208  mov %r14, %rdi          
0x7fc7cfab520b  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5212  mov %r15, %rcx          
0x7fc7cfab5215  callq *%rax             
0x7fc7cfab5217  test %rax, %rax         
0x7fc7cfab521a  jnz 0x6b6                ; 0x7fc7cfab5236
0x7fc7cfab5220  jmp 0x4477               ; 0x7fc7cfab8ff7
0x7fc7cfab5225  cmp %rcx, %rax          
0x7fc7cfab5228  setl %al                
0x7fc7cfab522b  movzxb %al, %eax        
0x7fc7cfab522e  lea 0xa(%rax,8), %rax   
0x7fc7cfab5236  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab523d  andq $0xf, %rax         
0x7fc7cfab5241  cmpq $0xa, %rax         
0x7fc7cfab5245  jz 0x316c                ; 0x7fc7cfab7cec
0x7fc7cfab524b  mov -0x258(%rbp), %rax  
0x7fc7cfab5252  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab5259  mov -0x240(%rbp), %rcx  
0x7fc7cfab5260  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab5267  mov %rax, -0x50(%rbp)   
0x7fc7cfab526b  movq $0x3916, -0x58(%rbp)
0x7fc7cfab5273  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab527b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5282  movq $0x0, -0x30(%rbp)  
0x7fc7cfab528a  lea -0x1a8(%rbp), %rax  
0x7fc7cfab5291  mov %rax, -0x38(%rbp)   
0x7fc7cfab5295  mov 0x1951920, %rsi     
0x7fc7cfab529d  mov 0x20(%rsi), %rax    
0x7fc7cfab52a1  mov $0xd, -0x1d4(%rbp)  
0x7fc7cfab52ab  mov %r14, %rdi          
0x7fc7cfab52ae  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab52b5  mov %r15, %rcx          
0x7fc7cfab52b8  callq *%rax             
0x7fc7cfab52ba  mov %rax, %rbx          
0x7fc7cfab52bd  test %rbx, %rbx         
0x7fc7cfab52c0  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab52c6  mov %rbx, -0x238(%rbp)  
0x7fc7cfab52cd  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab52d8  mov -0x278(%rbp), %r13  
0x7fc7cfab52df  testb $0x3, %r13b       
0x7fc7cfab52e3  jnz 0x790                ; 0x7fc7cfab5310
0x7fc7cfab52e9  mov 0x8(%r13), %rax     
0x7fc7cfab52ed  cmp $0x505, 0x70(%rax)  
0x7fc7cfab52f4  jnz 0x790                ; 0x7fc7cfab5310
0x7fc7cfab52fa  mov 0x18(%r13), %rcx    
0x7fc7cfab52fe  cmpq $0x22, %rcx        
0x7fc7cfab5302  mov $0x1a, %eax         
0x7fc7cfab5307  cmovnz %rcx, %rax       
0x7fc7cfab530b  jmp 0x7a7                ; 0x7fc7cfab5327
0x7fc7cfab5310  mov $0x10056, %edx      
0x7fc7cfab5315  mov %r14, %rdi          
0x7fc7cfab5318  mov %r13, %rsi          
0x7fc7cfab531b  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab5325  callq *%rax             
0x7fc7cfab5327  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab532e  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab5335  testb $0x3, %bl         
0x7fc7cfab5338  jnz 0x311c               ; 0x7fc7cfab7c9c
0x7fc7cfab533e  mov 0x8(%rbx), %rcx     
0x7fc7cfab5342  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab5349  jnz 0x311c               ; 0x7fc7cfab7c9c
0x7fc7cfab534f  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab5353  jnz 0x31b2               ; 0x7fc7cfab7d32
0x7fc7cfab5359  mov 0x18(%rbx), %rdx    
0x7fc7cfab535d  cmpq $0x22, %rdx        
0x7fc7cfab5361  mov $0x1a, %ecx         
0x7fc7cfab5366  cmovnz %rdx, %rcx       
0x7fc7cfab536a  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab5371  testb $0x3, %al         
0x7fc7cfab5374  jnz 0x845                ; 0x7fc7cfab53c5
0x7fc7cfab537a  mov 0x8(%rax), %rdx     
0x7fc7cfab537e  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab5382  jnz 0x845                ; 0x7fc7cfab53c5
0x7fc7cfab5388  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab538f  mov %r12, %rbx          
0x7fc7cfab5392  jnz 0x343a               ; 0x7fc7cfab7fba
0x7fc7cfab5398  testb $0x3, %cl         
0x7fc7cfab539b  jnz 0x839                ; 0x7fc7cfab53b9
0x7fc7cfab53a1  mov 0x8(%rcx), %rdx     
0x7fc7cfab53a5  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab53a9  jnz 0x839                ; 0x7fc7cfab53b9
0x7fc7cfab53af  invalid                 
0x7fc7cfab53b0  sti                     
0x7fc7cfab53b1  adc %al, 0x18(%rcx)     
0x7fc7cfab53b4  jmp 0x1351               ; 0x7fc7cfab5ed1
0x7fc7cfab53b9  mov %rbx, %r12          
0x7fc7cfab53bc  testb $0x1, %cl         
0x7fc7cfab53bf  jnz 0x1346               ; 0x7fc7cfab5ec6
0x7fc7cfab53c5  mov %rax, -0x50(%rbp)   
0x7fc7cfab53c9  movq $0x566, -0x58(%rbp)
0x7fc7cfab53d1  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab53d9  mov $0x1, -0x40(%rbp)   
0x7fc7cfab53e0  movq $0x0, -0x30(%rbp)  
0x7fc7cfab53e8  lea -0x1a8(%rbp), %rax  
0x7fc7cfab53ef  mov %rax, -0x38(%rbp)   
0x7fc7cfab53f3  mov 0x1951988, %rsi     
0x7fc7cfab53fb  mov 0x20(%rsi), %rax    
0x7fc7cfab53ff  mov $0x1a, -0x1d4(%rbp) 
0x7fc7cfab5409  mov %r14, %rdi          
0x7fc7cfab540c  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5413  mov %r15, %rcx          
0x7fc7cfab5416  callq *%rax             
0x7fc7cfab5418  test %rax, %rax         
0x7fc7cfab541b  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5421  mov -0x278(%rbp), %r13  
0x7fc7cfab5428  mov %rax, -0x230(%rbp)  
0x7fc7cfab542f  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab543a  testb $0x3, %r13b       
0x7fc7cfab543e  mov %r12, %rbx          
0x7fc7cfab5441  jnz 0x8ee                ; 0x7fc7cfab546e
0x7fc7cfab5447  mov 0x8(%r13), %rax     
0x7fc7cfab544b  cmp $0x505, 0x70(%rax)  
0x7fc7cfab5452  jnz 0x8ee                ; 0x7fc7cfab546e
0x7fc7cfab5458  mov 0x20(%r13), %rcx    
0x7fc7cfab545c  cmpq $0x22, %rcx        
0x7fc7cfab5460  mov $0x1a, %eax         
0x7fc7cfab5465  cmovnz %rcx, %rax       
0x7fc7cfab5469  jmp 0x905                ; 0x7fc7cfab5485
0x7fc7cfab546e  mov $0x1005e, %edx      
0x7fc7cfab5473  mov %r14, %rdi          
0x7fc7cfab5476  mov %r13, %rsi          
0x7fc7cfab5479  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab5483  callq *%rax             
0x7fc7cfab5485  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab548c  mov -0x238(%rbp), %rcx  
0x7fc7cfab5493  mov 0x20(%rcx), %rdx    
0x7fc7cfab5497  cmpq $0x22, %rdx        
0x7fc7cfab549b  mov $0x1a, %ecx         
0x7fc7cfab54a0  cmovnz %rdx, %rcx       
0x7fc7cfab54a4  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab54ab  testb $0x3, %al         
0x7fc7cfab54ae  jnz 0x979                ; 0x7fc7cfab54f9
0x7fc7cfab54b4  mov 0x8(%rax), %rdx     
0x7fc7cfab54b8  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab54bc  jnz 0x979                ; 0x7fc7cfab54f9
0x7fc7cfab54c2  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab54c9  jnz 0x346f               ; 0x7fc7cfab7fef
0x7fc7cfab54cf  testb $0x3, %cl         
0x7fc7cfab54d2  jnz 0x970                ; 0x7fc7cfab54f0
0x7fc7cfab54d8  mov 0x8(%rcx), %rdx     
0x7fc7cfab54dc  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab54e0  jnz 0x970                ; 0x7fc7cfab54f0
0x7fc7cfab54e6  invalid                 
0x7fc7cfab54e7  sti                     
0x7fc7cfab54e8  adc %al, 0x18(%rcx)     
0x7fc7cfab54eb  jmp 0x138e               ; 0x7fc7cfab5f0e
0x7fc7cfab54f0  testb $0x1, %cl         
0x7fc7cfab54f3  jnz 0x1386               ; 0x7fc7cfab5f06
0x7fc7cfab54f9  mov %rbx, %r12          
0x7fc7cfab54fc  mov %rax, -0x50(%rbp)   
0x7fc7cfab5500  movq $0x566, -0x58(%rbp)
0x7fc7cfab5508  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab5510  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5517  movq $0x0, -0x30(%rbp)  
0x7fc7cfab551f  lea -0x1a8(%rbp), %rax  
0x7fc7cfab5526  mov %rax, -0x38(%rbp)   
0x7fc7cfab552a  mov 0x19519f0, %rsi     
0x7fc7cfab5532  mov 0x20(%rsi), %rax    
0x7fc7cfab5536  mov $0x27, -0x1d4(%rbp) 
0x7fc7cfab5540  mov %r14, %rdi          
0x7fc7cfab5543  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab554a  mov %r15, %rcx          
0x7fc7cfab554d  callq *%rax             
0x7fc7cfab554f  test %rax, %rax         
0x7fc7cfab5552  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5558  mov -0x278(%rbp), %r13  
0x7fc7cfab555f  mov %r12, %rbx          
0x7fc7cfab5562  mov %rax, -0x228(%rbp)  
0x7fc7cfab5569  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab5574  testb $0x3, %r13b       
0x7fc7cfab5578  jnz 0xa25                ; 0x7fc7cfab55a5
0x7fc7cfab557e  mov 0x8(%r13), %rax     
0x7fc7cfab5582  cmp $0x505, 0x70(%rax)  
0x7fc7cfab5589  jnz 0xa25                ; 0x7fc7cfab55a5
0x7fc7cfab558f  mov 0x28(%r13), %rcx    
0x7fc7cfab5593  cmpq $0x22, %rcx        
0x7fc7cfab5597  mov $0x1a, %eax         
0x7fc7cfab559c  cmovnz %rcx, %rax       
0x7fc7cfab55a0  jmp 0xa3c                ; 0x7fc7cfab55bc
0x7fc7cfab55a5  mov $0x10066, %edx      
0x7fc7cfab55aa  mov %r14, %rdi          
0x7fc7cfab55ad  mov %r13, %rsi          
0x7fc7cfab55b0  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab55ba  callq *%rax             
0x7fc7cfab55bc  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab55c3  mov -0x238(%rbp), %rcx  
0x7fc7cfab55ca  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab55d1  mov 0x28(%rcx), %rdx    
0x7fc7cfab55d5  cmpq $0x22, %rdx        
0x7fc7cfab55d9  mov $0x1a, %ecx         
0x7fc7cfab55de  cmovnz %rdx, %rcx       
0x7fc7cfab55e2  mov %rcx, -0x1a8(%rbp)  
0x7fc7cfab55e9  testb $0x3, %al         
0x7fc7cfab55ec  jnz 0xab7                ; 0x7fc7cfab5637
0x7fc7cfab55f2  mov 0x8(%rax), %rdx     
0x7fc7cfab55f6  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab55fa  jnz 0xab7                ; 0x7fc7cfab5637
0x7fc7cfab5600  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab5607  jnz 0x34a4               ; 0x7fc7cfab8024
0x7fc7cfab560d  testb $0x3, %cl         
0x7fc7cfab5610  jnz 0xaae                ; 0x7fc7cfab562e
0x7fc7cfab5616  mov 0x8(%rcx), %rdx     
0x7fc7cfab561a  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab561e  jnz 0xaae                ; 0x7fc7cfab562e
0x7fc7cfab5624  invalid                 
0x7fc7cfab5625  sti                     
0x7fc7cfab5626  adc %al, 0x18(%rcx)     
0x7fc7cfab5629  jmp 0x13c8               ; 0x7fc7cfab5f48
0x7fc7cfab562e  testb $0x1, %cl         
0x7fc7cfab5631  jnz 0x13c0               ; 0x7fc7cfab5f40
0x7fc7cfab5637  mov %rbx, %r12          
0x7fc7cfab563a  mov %rax, -0x50(%rbp)   
0x7fc7cfab563e  movq $0x566, -0x58(%rbp)
0x7fc7cfab5646  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab564e  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5655  movq $0x0, -0x30(%rbp)  
0x7fc7cfab565d  lea -0x1a8(%rbp), %rax  
0x7fc7cfab5664  mov %rax, -0x38(%rbp)   
0x7fc7cfab5668  mov 0x1951a58, %rsi     
0x7fc7cfab5670  mov 0x20(%rsi), %rax    
0x7fc7cfab5674  mov $0x34, -0x1d4(%rbp) 
0x7fc7cfab567e  mov %r14, %rdi          
0x7fc7cfab5681  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5688  mov %r15, %rcx          
0x7fc7cfab568b  callq *%rax             
0x7fc7cfab568d  test %rax, %rax         
0x7fc7cfab5690  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5696  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab569d  mov %rax, -0x220(%rbp)  
0x7fc7cfab56a4  mov 0x1951a88, %rax     
0x7fc7cfab56ac  mov 0x30(%rax), %rcx    
0x7fc7cfab56b0  cmp -0x1f0(%rbp), %rcx  
0x7fc7cfab56b7  jnz 0xb56                ; 0x7fc7cfab56d6
0x7fc7cfab56bd  mov 0x1582514, %ecx     
0x7fc7cfab56c4  cmp 0x44(%rax), %ecx    
0x7fc7cfab56c7  jnz 0xb56                ; 0x7fc7cfab56d6
0x7fc7cfab56cd  mov 0x20(%rax), %rax    
0x7fc7cfab56d1  jmp 0xb84                ; 0x7fc7cfab5704
0x7fc7cfab56d6  mov $0x3a, -0x1d4(%rbp) 
0x7fc7cfab56e0  mov $0x1951a88, %edx    
0x7fc7cfab56e5  mov %r14, %rdi          
0x7fc7cfab56e8  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab56ef  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab56f9  callq *%rax             
0x7fc7cfab56fb  test %rax, %rax         
0x7fc7cfab56fe  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5704  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab570b  mov -0x230(%rbp), %rax  
0x7fc7cfab5712  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab5719  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab5720  testb $0x3, %al         
0x7fc7cfab5723  jnz 0xbf9                ; 0x7fc7cfab5779
0x7fc7cfab5729  mov 0x8(%rax), %rcx     
0x7fc7cfab572d  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab5731  jnz 0xbf9                ; 0x7fc7cfab5779
0x7fc7cfab5737  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab573e  jnz 0x34d9               ; 0x7fc7cfab8059
0x7fc7cfab5744  invalid                 
0x7fc7cfab5745  sti                     
0x7fc7cfab5746  adc %al, 0x18(%rax)     
0x7fc7cfab5749  invalid                 
0x7fc7cfab574a  sti                     
0x7fc7cfab574b  pop %rcx                
0x7fc7cfab574c  rolb $0xfb, %ch         
0x7fc7cfab574f  adc %eax, -0x330(%rbp)  
0x7fc7cfab5755  mov %r14, %rdi          
0x7fc7cfab5758  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5762  callq *%rax             
0x7fc7cfab5764  mov %rax, %rbx          
0x7fc7cfab5767  invalid                 
0x7fc7cfab5768  sti                     
0x7fc7cfab5769  adc %al, -0x330(%rbp)   
0x7fc7cfab576f  invalid                 
0x7fc7cfab5770  sti                     
0x7fc7cfab5771  adc %eax, 0x18(%rbx)    
0x7fc7cfab5774  jmp 0xc58                ; 0x7fc7cfab57d8
0x7fc7cfab5779  mov %rax, -0x50(%rbp)   
0x7fc7cfab577d  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab5785  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab578d  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5794  movq $0x0, -0x30(%rbp)  
0x7fc7cfab579c  lea -0x1a0(%rbp), %rax  
0x7fc7cfab57a3  mov %rax, -0x38(%rbp)   
0x7fc7cfab57a7  mov 0x1951ab8, %rsi     
0x7fc7cfab57af  mov 0x20(%rsi), %rax    
0x7fc7cfab57b3  mov $0x40, -0x1d4(%rbp) 
0x7fc7cfab57bd  mov %r14, %rdi          
0x7fc7cfab57c0  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab57c7  mov %r15, %rcx          
0x7fc7cfab57ca  callq *%rax             
0x7fc7cfab57cc  mov %rax, %rbx          
0x7fc7cfab57cf  test %rbx, %rbx         
0x7fc7cfab57d2  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab57d8  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab57df  mov -0x228(%rbp), %rax  
0x7fc7cfab57e6  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab57ed  mov %rax, -0x198(%rbp)  
0x7fc7cfab57f4  testb $0x3, %al         
0x7fc7cfab57f7  jnz 0xcca                ; 0x7fc7cfab584a
0x7fc7cfab57fd  mov 0x8(%rax), %rcx     
0x7fc7cfab5801  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab5805  jnz 0xcca                ; 0x7fc7cfab584a
0x7fc7cfab580b  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab5812  jnz 0x3513               ; 0x7fc7cfab8093
0x7fc7cfab5818  invalid                 
0x7fc7cfab5819  sti                     
0x7fc7cfab581a  adc %al, 0x18(%rax)     
0x7fc7cfab581d  invalid                 
0x7fc7cfab581e  sti                     
0x7fc7cfab581f  pop %rcx                
0x7fc7cfab5820  rolb $0xfb, %ch         
0x7fc7cfab5823  adc %eax, -0x330(%rbp)  
0x7fc7cfab5829  mov %r14, %rdi          
0x7fc7cfab582c  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5836  callq *%rax             
0x7fc7cfab5838  invalid                 
0x7fc7cfab5839  sti                     
0x7fc7cfab583a  adc %al, -0x330(%rbp)   
0x7fc7cfab5840  invalid                 
0x7fc7cfab5841  sti                     
0x7fc7cfab5842  adc %eax, 0x18(%rax)    
0x7fc7cfab5845  jmp 0xd2d                ; 0x7fc7cfab58ad
0x7fc7cfab584a  mov %rax, -0x50(%rbp)   
0x7fc7cfab584e  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab5856  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab585e  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5865  movq $0x0, -0x30(%rbp)  
0x7fc7cfab586d  lea -0x198(%rbp), %rax  
0x7fc7cfab5874  mov %rax, -0x38(%rbp)   
0x7fc7cfab5878  mov 0x1951af0, %rsi     
0x7fc7cfab5880  mov 0x20(%rsi), %rax    
0x7fc7cfab5884  mov $0x47, -0x1d4(%rbp) 
0x7fc7cfab588e  mov %r14, %rdi          
0x7fc7cfab5891  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5898  mov %r15, %rcx          
0x7fc7cfab589b  callq *%rax             
0x7fc7cfab589d  test %rax, %rax         
0x7fc7cfab58a0  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab58a6  mov -0x1a8(%rbp), %rbx  
0x7fc7cfab58ad  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab58b4  testb $0x3, %bl         
0x7fc7cfab58b7  jnz 0xd82                ; 0x7fc7cfab5902
0x7fc7cfab58bd  mov 0x8(%rbx), %rcx     
0x7fc7cfab58c1  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab58c5  jnz 0xd82                ; 0x7fc7cfab5902
0x7fc7cfab58cb  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab58d2  jnz 0x354d               ; 0x7fc7cfab80cd
0x7fc7cfab58d8  testb $0x3, %al         
0x7fc7cfab58db  jnz 0xd79                ; 0x7fc7cfab58f9
0x7fc7cfab58e1  mov 0x8(%rax), %rcx     
0x7fc7cfab58e5  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab58e9  jnz 0xd79                ; 0x7fc7cfab58f9
0x7fc7cfab58ef  invalid                 
0x7fc7cfab58f0  sti                     
0x7fc7cfab58f1  adc %al, 0x18(%rax)     
0x7fc7cfab58f4  jmp 0x143a               ; 0x7fc7cfab5fba
0x7fc7cfab58f9  testb $0x1, %al         
0x7fc7cfab58fc  jnz 0x1432               ; 0x7fc7cfab5fb2
0x7fc7cfab5902  mov %rbx, -0x50(%rbp)   
0x7fc7cfab5906  movq $0x55e, -0x58(%rbp)
0x7fc7cfab590e  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab5916  mov $0x1, -0x40(%rbp)   
0x7fc7cfab591d  movq $0x0, -0x30(%rbp)  
0x7fc7cfab5925  lea -0x1a0(%rbp), %rax  
0x7fc7cfab592c  mov %rax, -0x38(%rbp)   
0x7fc7cfab5930  mov 0x1951b08, %rsi     
0x7fc7cfab5938  mov 0x20(%rsi), %rax    
0x7fc7cfab593c  mov $0x4a, -0x1d4(%rbp) 
0x7fc7cfab5946  mov %r14, %rdi          
0x7fc7cfab5949  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5950  mov %r15, %rcx          
0x7fc7cfab5953  callq *%rax             
0x7fc7cfab5955  mov %rax, %rbx          
0x7fc7cfab5958  test %rbx, %rbx         
0x7fc7cfab595b  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5961  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab5968  mov -0x220(%rbp), %rax  
0x7fc7cfab596f  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab5976  mov %rax, -0x198(%rbp)  
0x7fc7cfab597d  testb $0x3, %al         
0x7fc7cfab5980  jnz 0xe53                ; 0x7fc7cfab59d3
0x7fc7cfab5986  mov 0x8(%rax), %rcx     
0x7fc7cfab598a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab598e  jnz 0xe53                ; 0x7fc7cfab59d3
0x7fc7cfab5994  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab599b  jnz 0x3587               ; 0x7fc7cfab8107
0x7fc7cfab59a1  invalid                 
0x7fc7cfab59a2  sti                     
0x7fc7cfab59a3  adc %al, 0x18(%rax)     
0x7fc7cfab59a6  invalid                 
0x7fc7cfab59a7  sti                     
0x7fc7cfab59a8  pop %rcx                
0x7fc7cfab59a9  rolb $0xfb, %ch         
0x7fc7cfab59ac  adc %eax, -0x330(%rbp)  
0x7fc7cfab59b2  mov %r14, %rdi          
0x7fc7cfab59b5  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab59bf  callq *%rax             
0x7fc7cfab59c1  invalid                 
0x7fc7cfab59c2  sti                     
0x7fc7cfab59c3  adc %al, -0x330(%rbp)   
0x7fc7cfab59c9  invalid                 
0x7fc7cfab59ca  sti                     
0x7fc7cfab59cb  adc %eax, 0x18(%rax)    
0x7fc7cfab59ce  jmp 0xeb6                ; 0x7fc7cfab5a36
0x7fc7cfab59d3  mov %rax, -0x50(%rbp)   
0x7fc7cfab59d7  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab59df  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab59e7  mov $0x1, -0x40(%rbp)   
0x7fc7cfab59ee  movq $0x0, -0x30(%rbp)  
0x7fc7cfab59f6  lea -0x198(%rbp), %rax  
0x7fc7cfab59fd  mov %rax, -0x38(%rbp)   
0x7fc7cfab5a01  mov 0x1951b40, %rsi     
0x7fc7cfab5a09  mov 0x20(%rsi), %rax    
0x7fc7cfab5a0d  mov $0x51, -0x1d4(%rbp) 
0x7fc7cfab5a17  mov %r14, %rdi          
0x7fc7cfab5a1a  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5a21  mov %r15, %rcx          
0x7fc7cfab5a24  callq *%rax             
0x7fc7cfab5a26  test %rax, %rax         
0x7fc7cfab5a29  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5a2f  mov -0x1a8(%rbp), %rbx  
0x7fc7cfab5a36  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab5a3d  testb $0x3, %bl         
0x7fc7cfab5a40  jnz 0xf0b                ; 0x7fc7cfab5a8b
0x7fc7cfab5a46  mov 0x8(%rbx), %rcx     
0x7fc7cfab5a4a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab5a4e  jnz 0xf0b                ; 0x7fc7cfab5a8b
0x7fc7cfab5a54  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab5a5b  jnz 0x35c1               ; 0x7fc7cfab8141
0x7fc7cfab5a61  testb $0x3, %al         
0x7fc7cfab5a64  jnz 0xf02                ; 0x7fc7cfab5a82
0x7fc7cfab5a6a  mov 0x8(%rax), %rcx     
0x7fc7cfab5a6e  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab5a72  jnz 0xf02                ; 0x7fc7cfab5a82
0x7fc7cfab5a78  invalid                 
0x7fc7cfab5a79  sti                     
0x7fc7cfab5a7a  adc %al, 0x18(%rax)     
0x7fc7cfab5a7d  jmp 0x1473               ; 0x7fc7cfab5ff3
0x7fc7cfab5a82  testb $0x1, %al         
0x7fc7cfab5a85  jnz 0x146b               ; 0x7fc7cfab5feb
0x7fc7cfab5a8b  mov %rbx, -0x50(%rbp)   
0x7fc7cfab5a8f  movq $0x55e, -0x58(%rbp)
0x7fc7cfab5a97  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab5a9f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5aa6  movq $0x0, -0x30(%rbp)  
0x7fc7cfab5aae  lea -0x1a0(%rbp), %rax  
0x7fc7cfab5ab5  mov %rax, -0x38(%rbp)   
0x7fc7cfab5ab9  mov 0x1951b58, %rsi     
0x7fc7cfab5ac1  mov 0x20(%rsi), %rax    
0x7fc7cfab5ac5  mov $0x54, -0x1d4(%rbp) 
0x7fc7cfab5acf  mov %r14, %rdi          
0x7fc7cfab5ad2  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab5ad9  mov %r15, %rcx          
0x7fc7cfab5adc  callq *%rax             
0x7fc7cfab5ade  mov %rax, %rbx          
0x7fc7cfab5ae1  test %rbx, %rbx         
0x7fc7cfab5ae4  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab5aea  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab5af1  mov -0x1b0(%rbp), %rax  
0x7fc7cfab5af8  testb $0x3, %al         
0x7fc7cfab5afb  jnz 0x3144               ; 0x7fc7cfab7cc4
0x7fc7cfab5b01  mov 0x8(%rax), %rcx     
0x7fc7cfab5b05  cmp $0x30b, 0x70(%rcx)  
0x7fc7cfab5b0c  jnz 0x3144               ; 0x7fc7cfab7cc4
0x7fc7cfab5b12  cmp $0x7, 0x74(%rcx)    
0x7fc7cfab5b16  lea -0x2f0(%rbp), %r13  
0x7fc7cfab5b1d  jnz 0x32f2               ; 0x7fc7cfab7e72
0x7fc7cfab5b23  lea -0x1f8(%rbp), %rcx  
0x7fc7cfab5b2a  mov %rcx, -0x2f0(%rbp)  
0x7fc7cfab5b31  mov $0x7fc7b47b91c0, %rcx
0x7fc7cfab5b3b  mov %rcx, -0x2e0(%rbp)  
0x7fc7cfab5b42  mov (%rcx), %rcx        
0x7fc7cfab5b45  mov %rcx, -0x2d8(%rbp)  
0x7fc7cfab5b4c  mov 0xa0(%rcx), %rcx    
0x7fc7cfab5b53  mov %rcx, -0x2e8(%rbp)  
0x7fc7cfab5b5a  mov $0xc, -0x2d0(%rbp)  
0x7fc7cfab5b64  mov $0x0, -0x2cc(%rbp)  
0x7fc7cfab5b6e  lea -0x328(%rbp), %rdx  
0x7fc7cfab5b75  mov %rdx, -0x2b8(%rbp)  
0x7fc7cfab5b7c  movq $0x1a, -0x2a0(%rbp)
0x7fc7cfab5b87  movq $0x1a, -0x298(%rbp)
0x7fc7cfab5b92  movq $0x1a, -0x290(%rbp)
0x7fc7cfab5b9d  mov $0x7fc7b47b91d0, %rdx
0x7fc7cfab5ba7  mov (%rdx), %rdx        
0x7fc7cfab5baa  movq $0x0, -0x328(%rbp) 
0x7fc7cfab5bb5  mov %rax, -0x318(%rbp)  
0x7fc7cfab5bbc  mov %rdx, -0x308(%rbp)  
0x7fc7cfab5bc3  movq $0x1a, -0x310(%rbp)
0x7fc7cfab5bce  movq $0x0, -0x320(%rbp) 
0x7fc7cfab5bd9  movq $0x1a, -0x300(%rbp)
0x7fc7cfab5be4  mov %rbx, -0x2f8(%rbp)  
0x7fc7cfab5beb  mov %rbx, -0x2a8(%rbp)  
0x7fc7cfab5bf2  mov 0x1653b68, %rax     
0x7fc7cfab5bfa  cmp %rcx, 0x30(%rax)    
0x7fc7cfab5bfe  jnz 0x109d               ; 0x7fc7cfab5c1d
0x7fc7cfab5c04  mov 0x1582514, %ecx     
0x7fc7cfab5c0b  cmp 0x44(%rax), %ecx    
0x7fc7cfab5c0e  jnz 0x109d               ; 0x7fc7cfab5c1d
0x7fc7cfab5c14  mov 0x20(%rax), %rax    
0x7fc7cfab5c18  jmp 0x10c7               ; 0x7fc7cfab5c47
0x7fc7cfab5c1d  mov $0x2, -0x2cc(%rbp)  
0x7fc7cfab5c27  mov $0x1653b68, %edx    
0x7fc7cfab5c2c  mov %r14, %rdi          
0x7fc7cfab5c2f  mov %r13, %rsi          
0x7fc7cfab5c32  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab5c3c  callq *%rax             
0x7fc7cfab5c3e  test %rax, %rax         
0x7fc7cfab5c41  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab5c47  mov %rax, -0x2a0(%rbp)  
0x7fc7cfab5c4e  mov %rbx, %rcx          
0x7fc7cfab5c51  andq $0x3, %rcx         
0x7fc7cfab5c55  jnz 0x10e9               ; 0x7fc7cfab5c69
0x7fc7cfab5c5b  cmpb $0x23, (%rbx)      
0x7fc7cfab5c5e  mov $0x12, %eax         
0x7fc7cfab5c63  jz 0x10ee                ; 0x7fc7cfab5c6e
0x7fc7cfab5c69  mov $0xa, %eax          
0x7fc7cfab5c6e  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab5c75  mov %rax, -0x2a0(%rbp)  
0x7fc7cfab5c7c  mov %rax, %rdx          
0x7fc7cfab5c7f  andq $0xa, %rdx         
0x7fc7cfab5c83  cmpq $0xa, %rdx         
0x7fc7cfab5c87  jz 0x11b8                ; 0x7fc7cfab5d38
0x7fc7cfab5c8d  mov %rbx, -0x2a8(%rbp)  
0x7fc7cfab5c94  test %rcx, %rcx         
0x7fc7cfab5c97  jnz 0x1164               ; 0x7fc7cfab5ce4
0x7fc7cfab5c9d  mov 0x8(%rbx), %rax     
0x7fc7cfab5ca1  cmp $0x4d, 0x70(%rax)   
0x7fc7cfab5ca5  jnz 0x1164               ; 0x7fc7cfab5ce4
0x7fc7cfab5cab  cmp $0xe0, 0x74(%rax)   
0x7fc7cfab5cb2  jnz 0x1559               ; 0x7fc7cfab60d9
0x7fc7cfab5cb8  mov %r14, %rdi          
0x7fc7cfab5cbb  mov %rbx, %rsi          
0x7fc7cfab5cbe  mov $0x5db1e0, %rax      ; jit_stub_float_isnan
0x7fc7cfab5cc8  callq *%rax             
0x7fc7cfab5cca  test %rax, %rax         
0x7fc7cfab5ccd  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab5cd3  cmpq $0x22, %rax        
0x7fc7cfab5cd7  jnz 0x11b1               ; 0x7fc7cfab5d31
0x7fc7cfab5cdd  mov -0x2a8(%rbp), %rbx  
0x7fc7cfab5ce4  mov %rbx, -0x50(%rbp)   
0x7fc7cfab5ce8  movq $0x7c56, -0x58(%rbp)
0x7fc7cfab5cf0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab5cf8  mov $0x0, -0x40(%rbp)   
0x7fc7cfab5cff  movq $0x0, -0x30(%rbp)  
0x7fc7cfab5d07  mov 0x1653bc0, %rsi     
0x7fc7cfab5d0f  mov 0x20(%rsi), %rax    
0x7fc7cfab5d13  mov $0xd, -0x2cc(%rbp)  
0x7fc7cfab5d1d  mov %r14, %rdi          
0x7fc7cfab5d20  mov %r13, %rdx          
0x7fc7cfab5d23  mov %r15, %rcx          
0x7fc7cfab5d26  callq *%rax             
0x7fc7cfab5d28  test %rax, %rax         
0x7fc7cfab5d2b  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab5d31  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab5d38  andq $0xf, %rax         
0x7fc7cfab5d3c  cmpq $0xa, %rax         
0x7fc7cfab5d40  jnz 0x12ab               ; 0x7fc7cfab5e2b
0x7fc7cfab5d46  mov 0x1584100, %rax     
0x7fc7cfab5d4e  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab5d55  mov -0x2f8(%rbp), %rcx  
0x7fc7cfab5d5c  mov %rcx, -0x2a0(%rbp)  
0x7fc7cfab5d63  mov %rax, -0x50(%rbp)   
0x7fc7cfab5d67  movq $0x492e, -0x58(%rbp)
0x7fc7cfab5d6f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab5d77  mov $0x1, -0x40(%rbp)   
0x7fc7cfab5d7e  movq $0x0, -0x30(%rbp)  
0x7fc7cfab5d86  lea -0x2a0(%rbp), %rax  
0x7fc7cfab5d8d  mov %rax, -0x38(%rbp)   
0x7fc7cfab5d91  mov 0x1653c48, %rsi     
0x7fc7cfab5d99  mov 0x20(%rsi), %rax    
0x7fc7cfab5d9d  mov $0x1e, -0x2cc(%rbp) 
0x7fc7cfab5da7  mov %r14, %rdi          
0x7fc7cfab5daa  mov %r13, %rdx          
0x7fc7cfab5dad  mov %r15, %rcx          
0x7fc7cfab5db0  callq *%rax             
0x7fc7cfab5db2  test %rax, %rax         
0x7fc7cfab5db5  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab5dbb  mov %rax, -0x2f8(%rbp)  
0x7fc7cfab5dc2  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab5dc9  mov -0x2d8(%rbp), %rcx  
0x7fc7cfab5dd0  mov 0xc0(%rcx), %rcx    
0x7fc7cfab5dd7  mov 0x48(%rcx), %rcx    
0x7fc7cfab5ddb  mov %rcx, -0x2a0(%rbp)  
0x7fc7cfab5de2  testb $0x3, %al         
0x7fc7cfab5de5  mov %r12, %r8           
0x7fc7cfab5de8  jnz 0x14a4               ; 0x7fc7cfab6024
0x7fc7cfab5dee  mov 0x8(%rax), %rdx     
0x7fc7cfab5df2  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab5df6  jnz 0x14a4               ; 0x7fc7cfab6024
0x7fc7cfab5dfc  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab5e03  jnz 0x1772               ; 0x7fc7cfab62f2
0x7fc7cfab5e09  invalid                 
0x7fc7cfab5e0a  sti                     
0x7fc7cfab5e0b  adc %al, 0x18(%rcx)     
0x7fc7cfab5e0e  invalid                 
0x7fc7cfab5e0f  stc                     
0x7fc7cfab5e10  sbb %dil, %cs:0x12(%rax)
0x7fc7cfab5e18  jbe 0x12a3               ; 0x7fc7cfab5e23
0x7fc7cfab5e1e  mov $0xa, %eax          
0x7fc7cfab5e23  mov %r8, %r12           
0x7fc7cfab5e26  jmp 0x14ff               ; 0x7fc7cfab607f
0x7fc7cfab5e2b  mov 0x1653be8, %rax     
0x7fc7cfab5e33  mov 0x30(%rax), %rcx    
0x7fc7cfab5e37  mov -0x2e8(%rbp), %rbx  
0x7fc7cfab5e3e  cmp %rbx, %rcx          
0x7fc7cfab5e41  jnz 0x12e0               ; 0x7fc7cfab5e60
0x7fc7cfab5e47  mov 0x1582514, %ecx     
0x7fc7cfab5e4e  cmp 0x44(%rax), %ecx    
0x7fc7cfab5e51  jnz 0x12e0               ; 0x7fc7cfab5e60
0x7fc7cfab5e57  mov 0x20(%rax), %rax    
0x7fc7cfab5e5b  jmp 0x130a               ; 0x7fc7cfab5e8a
0x7fc7cfab5e60  mov $0x12, -0x2cc(%rbp) 
0x7fc7cfab5e6a  mov $0x1653be8, %edx    
0x7fc7cfab5e6f  mov %r14, %rdi          
0x7fc7cfab5e72  mov %r13, %rsi          
0x7fc7cfab5e75  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab5e7f  callq *%rax             
0x7fc7cfab5e81  test %rax, %rax         
0x7fc7cfab5e84  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab5e8a  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab5e91  mov 0x1653bf8, %rcx     
0x7fc7cfab5e99  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab5e9d  jnz 0x13fd               ; 0x7fc7cfab5f7d
0x7fc7cfab5ea3  mov 0x1582514, %edx     
0x7fc7cfab5eaa  cmp 0x44(%rcx), %edx    
0x7fc7cfab5ead  jnz 0x13fd               ; 0x7fc7cfab5f7d
0x7fc7cfab5eb3  cmp %rax, 0x28(%rcx)    
0x7fc7cfab5eb7  jnz 0x13fd               ; 0x7fc7cfab5f7d
0x7fc7cfab5ebd  mov 0x20(%rcx), %rbx    
0x7fc7cfab5ec1  jmp 0x3096               ; 0x7fc7cfab7c16
0x7fc7cfab5ec6  sarq $0x1, %rcx         
0x7fc7cfab5ec9  invalid                 
0x7fc7cfab5eca  loope 0x1347             ; 0x7fc7cfab5fc7
0x7fc7cfab5ecc  sub %cl, %al            
0x7fc7cfab5ece  mov %r12, %rbx          
0x7fc7cfab5ed1  mov %rbx, %r12          
0x7fc7cfab5ed4  invalid                 
0x7fc7cfab5ed5  sti                     
0x7fc7cfab5ed6  adc %cl, 0x18(%rax)     
0x7fc7cfab5ed9  invalid                 
0x7fc7cfab5eda  rep pop %rsp            
0x7fc7cfab5edc  rolb $0xfb, %ch         
0x7fc7cfab5edf  adc %eax, -0x330(%rbp)  
0x7fc7cfab5ee5  mov %r14, %rdi          
0x7fc7cfab5ee8  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5ef2  callq *%rax             
0x7fc7cfab5ef4  invalid                 
0x7fc7cfab5ef5  sti                     
0x7fc7cfab5ef6  adc %al, -0x330(%rbp)   
0x7fc7cfab5efc  invalid                 
0x7fc7cfab5efd  sti                     
0x7fc7cfab5efe  adc %eax, 0x18(%rax)    
0x7fc7cfab5f01  jmp 0x8a8                ; 0x7fc7cfab5428
0x7fc7cfab5f06  sarq $0x1, %rcx         
0x7fc7cfab5f09  invalid                 
0x7fc7cfab5f0a  loope 0x1387             ; 0x7fc7cfab6007
0x7fc7cfab5f0c  sub %cl, %al            
0x7fc7cfab5f0e  invalid                 
0x7fc7cfab5f0f  sti                     
0x7fc7cfab5f10  adc %cl, 0x18(%rax)     
0x7fc7cfab5f13  invalid                 
0x7fc7cfab5f14  rep pop %rsp            
0x7fc7cfab5f16  rolb $0xfb, %ch         
0x7fc7cfab5f19  adc %eax, -0x330(%rbp)  
0x7fc7cfab5f1f  mov %r14, %rdi          
0x7fc7cfab5f22  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5f2c  callq *%rax             
0x7fc7cfab5f2e  invalid                 
0x7fc7cfab5f2f  sti                     
0x7fc7cfab5f30  adc %al, -0x330(%rbp)   
0x7fc7cfab5f36  invalid                 
0x7fc7cfab5f37  sti                     
0x7fc7cfab5f38  adc %eax, 0x18(%rax)    
0x7fc7cfab5f3b  jmp 0x9e2                ; 0x7fc7cfab5562
0x7fc7cfab5f40  sarq $0x1, %rcx         
0x7fc7cfab5f43  invalid                 
0x7fc7cfab5f44  loope 0x13c1             ; 0x7fc7cfab6041
0x7fc7cfab5f46  sub %cl, %al            
0x7fc7cfab5f48  mov %rbx, %r12          
0x7fc7cfab5f4b  invalid                 
0x7fc7cfab5f4c  sti                     
0x7fc7cfab5f4d  adc %cl, 0x18(%rax)     
0x7fc7cfab5f50  invalid                 
0x7fc7cfab5f51  rep pop %rsp            
0x7fc7cfab5f53  rolb $0xfb, %ch         
0x7fc7cfab5f56  adc %eax, -0x330(%rbp)  
0x7fc7cfab5f5c  mov %r14, %rdi          
0x7fc7cfab5f5f  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5f69  callq *%rax             
0x7fc7cfab5f6b  invalid                 
0x7fc7cfab5f6c  sti                     
0x7fc7cfab5f6d  adc %al, -0x330(%rbp)   
0x7fc7cfab5f73  invalid                 
0x7fc7cfab5f74  sti                     
0x7fc7cfab5f75  adc %eax, 0x18(%rax)    
0x7fc7cfab5f78  jmp 0xb16                ; 0x7fc7cfab5696
0x7fc7cfab5f7d  mov $0x14, -0x2cc(%rbp) 
0x7fc7cfab5f87  mov $0x1653bf8, %edx    
0x7fc7cfab5f8c  mov %r14, %rdi          
0x7fc7cfab5f8f  mov %r13, %rsi          
0x7fc7cfab5f92  mov %rax, %rcx          
0x7fc7cfab5f95  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfab5f9f  callq *%rax             
0x7fc7cfab5fa1  mov %rax, %rbx          
0x7fc7cfab5fa4  test %rbx, %rbx         
0x7fc7cfab5fa7  jnz 0x3096               ; 0x7fc7cfab7c16
0x7fc7cfab5fad  jmp 0x17e2               ; 0x7fc7cfab6362
0x7fc7cfab5fb2  sarq $0x1, %rax         
0x7fc7cfab5fb5  invalid                 
0x7fc7cfab5fb6  loope 0x1433             ; 0x7fc7cfab60b3
0x7fc7cfab5fb8  sub %al, %al            
0x7fc7cfab5fba  invalid                 
0x7fc7cfab5fbb  sti                     
0x7fc7cfab5fbc  pop %rax                
0x7fc7cfab5fbd  sbb %al, %r13b          
0x7fc7cfab5fc0  sti                     
0x7fc7cfab5fc1  adc %eax, -0x330(%rbp)  
0x7fc7cfab5fc7  mov %r14, %rdi          
0x7fc7cfab5fca  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab5fd4  callq *%rax             
0x7fc7cfab5fd6  mov %rax, %rbx          
0x7fc7cfab5fd9  invalid                 
0x7fc7cfab5fda  sti                     
0x7fc7cfab5fdb  adc %al, -0x330(%rbp)   
0x7fc7cfab5fe1  invalid                 
0x7fc7cfab5fe2  sti                     
0x7fc7cfab5fe3  adc %eax, 0x18(%rbx)    
0x7fc7cfab5fe6  jmp 0xde1                ; 0x7fc7cfab5961
0x7fc7cfab5feb  sarq $0x1, %rax         
0x7fc7cfab5fee  invalid                 
0x7fc7cfab5fef  loope 0x146c             ; 0x7fc7cfab60ec
0x7fc7cfab5ff1  sub %al, %al            
0x7fc7cfab5ff3  invalid                 
0x7fc7cfab5ff4  sti                     
0x7fc7cfab5ff5  pop %rax                
0x7fc7cfab5ff6  sbb %al, %r13b          
0x7fc7cfab5ff9  sti                     
0x7fc7cfab5ffa  adc %eax, -0x330(%rbp)  
0x7fc7cfab6000  mov %r14, %rdi          
0x7fc7cfab6003  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab600d  callq *%rax             
0x7fc7cfab600f  mov %rax, %rbx          
0x7fc7cfab6012  invalid                 
0x7fc7cfab6013  sti                     
0x7fc7cfab6014  adc %al, -0x330(%rbp)   
0x7fc7cfab601a  invalid                 
0x7fc7cfab601b  sti                     
0x7fc7cfab601c  adc %eax, 0x18(%rbx)    
0x7fc7cfab601f  jmp 0xf6a                ; 0x7fc7cfab5aea
0x7fc7cfab6024  mov %r8, %r12           
0x7fc7cfab6027  mov %rax, -0x50(%rbp)   
0x7fc7cfab602b  movq $0x3bd6, -0x58(%rbp)
0x7fc7cfab6033  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab603b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6042  movq $0x0, -0x30(%rbp)  
0x7fc7cfab604a  lea -0x2a0(%rbp), %rax  
0x7fc7cfab6051  mov %rax, -0x38(%rbp)   
0x7fc7cfab6055  mov 0x1653c98, %rsi     
0x7fc7cfab605d  mov 0x20(%rsi), %rax    
0x7fc7cfab6061  mov $0x28, -0x2cc(%rbp) 
0x7fc7cfab606b  mov %r14, %rdi          
0x7fc7cfab606e  mov %r13, %rdx          
0x7fc7cfab6071  mov %r15, %rcx          
0x7fc7cfab6074  callq *%rax             
0x7fc7cfab6076  test %rax, %rax         
0x7fc7cfab6079  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab607f  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab6086  andq $0xf, %rax         
0x7fc7cfab608a  mov $0x1a, %ecx         
0x7fc7cfab608f  cmpq $0xa, %rax         
0x7fc7cfab6093  jnz 0x1667               ; 0x7fc7cfab61e7
0x7fc7cfab6099  mov -0x318(%rbp), %rax  
0x7fc7cfab60a0  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab60a7  mov 0x1653ce0, %rax     
0x7fc7cfab60af  mov 0x30(%rax), %rcx    
0x7fc7cfab60b3  cmp -0x2e8(%rbp), %rcx  
0x7fc7cfab60ba  jnz 0x1599               ; 0x7fc7cfab6119
0x7fc7cfab60c0  mov 0x1582514, %ecx     
0x7fc7cfab60c7  cmp 0x44(%rax), %ecx    
0x7fc7cfab60ca  jnz 0x1599               ; 0x7fc7cfab6119
0x7fc7cfab60d0  mov 0x20(%rax), %rax    
0x7fc7cfab60d4  jmp 0x15c3               ; 0x7fc7cfab6143
0x7fc7cfab60d9  mov $0xd, -0x2cc(%rbp)  
0x7fc7cfab60e3  mov $0x7fc7b4003d70, %rax
0x7fc7cfab60ed  mov %rax, (%rsp)        
0x7fc7cfab60f1  mov $0x1, 0x10(%rsp)    
0x7fc7cfab60f9  mov $0x0, 0x8(%rsp)     
0x7fc7cfab6101  mov $0xd, %edx          
0x7fc7cfab6106  xor %ecx, %ecx          
0x7fc7cfab6108  xor %r9d, %r9d          
0x7fc7cfab610b  mov %r14, %rdi          
0x7fc7cfab610e  mov %r13, %rsi          
0x7fc7cfab6111  mov %r12, %r8           
0x7fc7cfab6114  jmp 0x30e3               ; 0x7fc7cfab7c63
0x7fc7cfab6119  mov $0x31, -0x2cc(%rbp) 
0x7fc7cfab6123  mov $0x1653ce0, %edx    
0x7fc7cfab6128  mov %r14, %rdi          
0x7fc7cfab612b  mov %r13, %rsi          
0x7fc7cfab612e  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab6138  callq *%rax             
0x7fc7cfab613a  test %rax, %rax         
0x7fc7cfab613d  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab6143  mov %rax, -0x2a0(%rbp)  
0x7fc7cfab614a  mov -0x2d8(%rbp), %rax  
0x7fc7cfab6151  mov 0xc0(%rax), %rax    
0x7fc7cfab6158  mov 0x60(%rax), %rdx    
0x7fc7cfab615c  mov %rdx, -0x298(%rbp)  
0x7fc7cfab6163  mov %r14, %rdi          
0x7fc7cfab6166  mov %r13, %rsi          
0x7fc7cfab6169  mov $0x760dc0, %rax      ; rbx_string_dup
0x7fc7cfab6173  callq *%rax             
0x7fc7cfab6175  test %rax, %rax         
0x7fc7cfab6178  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab617e  mov %rax, -0x298(%rbp)  
0x7fc7cfab6185  mov -0x2a8(%rbp), %rax  
0x7fc7cfab618c  mov %rax, -0x50(%rbp)   
0x7fc7cfab6190  movq $0x37ce, -0x58(%rbp)
0x7fc7cfab6198  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab61a0  mov $0x2, -0x40(%rbp)   
0x7fc7cfab61a7  movq $0x0, -0x30(%rbp)  
0x7fc7cfab61af  lea -0x2a0(%rbp), %rax  
0x7fc7cfab61b6  mov %rax, -0x38(%rbp)   
0x7fc7cfab61ba  mov 0x1653d10, %rsi     
0x7fc7cfab61c2  mov 0x20(%rsi), %rax    
0x7fc7cfab61c6  mov $0x37, -0x2cc(%rbp) 
0x7fc7cfab61d0  mov %r14, %rdi          
0x7fc7cfab61d3  mov %r13, %rdx          
0x7fc7cfab61d6  mov %r15, %rcx          
0x7fc7cfab61d9  callq *%rax             
0x7fc7cfab61db  mov %rax, %rcx          
0x7fc7cfab61de  test %rcx, %rcx         
0x7fc7cfab61e1  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab61e7  mov %rcx, -0x2a8(%rbp)  
0x7fc7cfab61ee  mov 0x1653d30, %rax     
0x7fc7cfab61f6  mov 0x30(%rax), %rcx    
0x7fc7cfab61fa  mov -0x2e8(%rbp), %rbx  
0x7fc7cfab6201  cmp %rbx, %rcx          
0x7fc7cfab6204  jnz 0x16a3               ; 0x7fc7cfab6223
0x7fc7cfab620a  mov 0x1582514, %ecx     
0x7fc7cfab6211  cmp 0x44(%rax), %ecx    
0x7fc7cfab6214  jnz 0x16a3               ; 0x7fc7cfab6223
0x7fc7cfab621a  mov 0x20(%rax), %rax    
0x7fc7cfab621e  jmp 0x16cd               ; 0x7fc7cfab624d
0x7fc7cfab6223  mov $0x3b, -0x2cc(%rbp) 
0x7fc7cfab622d  mov $0x1653d30, %edx    
0x7fc7cfab6232  mov %r14, %rdi          
0x7fc7cfab6235  mov %r13, %rsi          
0x7fc7cfab6238  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7fc7cfab6242  callq *%rax             
0x7fc7cfab6244  test %rax, %rax         
0x7fc7cfab6247  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab624d  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab6254  mov 0x1653d40, %rcx     
0x7fc7cfab625c  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab6260  jnz 0x1709               ; 0x7fc7cfab6289
0x7fc7cfab6266  mov 0x1582514, %edx     
0x7fc7cfab626d  cmp 0x44(%rcx), %edx    
0x7fc7cfab6270  jnz 0x1709               ; 0x7fc7cfab6289
0x7fc7cfab6276  cmp %rax, 0x28(%rcx)    
0x7fc7cfab627a  jnz 0x1709               ; 0x7fc7cfab6289
0x7fc7cfab6280  mov 0x20(%rcx), %rax    
0x7fc7cfab6284  jmp 0x1736               ; 0x7fc7cfab62b6
0x7fc7cfab6289  mov $0x3d, -0x2cc(%rbp) 
0x7fc7cfab6293  mov $0x1653d40, %edx    
0x7fc7cfab6298  mov %r14, %rdi          
0x7fc7cfab629b  mov %r13, %rsi          
0x7fc7cfab629e  mov %rax, %rcx          
0x7fc7cfab62a1  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfab62ab  callq *%rax             
0x7fc7cfab62ad  test %rax, %rax         
0x7fc7cfab62b0  jz 0x17e2                ; 0x7fc7cfab6362
0x7fc7cfab62b6  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab62bd  mov 0x1653d50, %rcx     
0x7fc7cfab62c5  cmp %rbx, 0x30(%rcx)    
0x7fc7cfab62c9  jnz 0x17b5               ; 0x7fc7cfab6335
0x7fc7cfab62cf  mov 0x1582514, %edx     
0x7fc7cfab62d6  cmp 0x44(%rcx), %edx    
0x7fc7cfab62d9  jnz 0x17b5               ; 0x7fc7cfab6335
0x7fc7cfab62df  cmp %rax, 0x28(%rcx)    
0x7fc7cfab62e3  jnz 0x17b5               ; 0x7fc7cfab6335
0x7fc7cfab62e9  mov 0x20(%rcx), %rax    
0x7fc7cfab62ed  jmp 0x2fd4               ; 0x7fc7cfab7b54
0x7fc7cfab62f2  mov $0x28, -0x2cc(%rbp) 
0x7fc7cfab62fc  mov $0x7fc7b4003d70, %rax
0x7fc7cfab6306  mov %rax, (%rsp)        
0x7fc7cfab630a  mov $0x1, 0x10(%rsp)    
0x7fc7cfab6312  mov $0x0, 0x8(%rsp)     
0x7fc7cfab631a  mov $0x28, %edx         
0x7fc7cfab631f  mov $0x1, %ecx          
0x7fc7cfab6324  xor %r9d, %r9d          
0x7fc7cfab6327  mov %r14, %rdi          
0x7fc7cfab632a  mov %r13, %rsi          
0x7fc7cfab632d  mov %r8, %r12           
0x7fc7cfab6330  jmp 0x30e3               ; 0x7fc7cfab7c63
0x7fc7cfab6335  mov $0x3f, -0x2cc(%rbp) 
0x7fc7cfab633f  mov $0x1653d50, %edx    
0x7fc7cfab6344  mov %r14, %rdi          
0x7fc7cfab6347  mov %r13, %rsi          
0x7fc7cfab634a  mov %rax, %rcx          
0x7fc7cfab634d  mov $0x7622f0, %rax      ; rbx_find_const_fast
0x7fc7cfab6357  callq *%rax             
0x7fc7cfab6359  test %rax, %rax         
0x7fc7cfab635c  jnz 0x2fd4               ; 0x7fc7cfab7b54
0x7fc7cfab6362  mov %r14, %rdi          
0x7fc7cfab6365  mov %r13, %rsi          
0x7fc7cfab6368  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab6372  callq *%rax             
0x7fc7cfab6374  mov $0x0, %ebx          
0x7fc7cfab6379  testb $0x1, %al         
0x7fc7cfab637c  jz 0x1814                ; 0x7fc7cfab6394
0x7fc7cfab6382  mov %r14, %rdi          
0x7fc7cfab6385  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab638f  callq *%rax             
0x7fc7cfab6391  mov %rax, %rbx          
0x7fc7cfab6394  test %rbx, %rbx         
0x7fc7cfab6397  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab639d  mov %rbx, -0x218(%rbp)  
0x7fc7cfab63a4  mov -0x248(%rbp), %rax  
0x7fc7cfab63ab  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab63b2  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab63b9  mov %rbx, -0x1a0(%rbp)  
0x7fc7cfab63c0  testb $0x3, %bl         
0x7fc7cfab63c3  jnz 0x1896               ; 0x7fc7cfab6416
0x7fc7cfab63c9  mov 0x8(%rbx), %rax     
0x7fc7cfab63cd  cmp $0x4d, 0x70(%rax)   
0x7fc7cfab63d1  jnz 0x1896               ; 0x7fc7cfab6416
0x7fc7cfab63d7  cmp $0xe0, 0x74(%rax)   
0x7fc7cfab63de  jnz 0x35fb               ; 0x7fc7cfab817b
0x7fc7cfab63e4  invalid                 
0x7fc7cfab63e5  sti                     
0x7fc7cfab63e6  adc %al, 0x18(%rbx)     
0x7fc7cfab63e9  invalid                 
0x7fc7cfab63ea  sti                     
0x7fc7cfab63eb  pop %rcx                
0x7fc7cfab63ec  rolb $0xfb, %ch         
0x7fc7cfab63ef  adc %eax, -0x330(%rbp)  
0x7fc7cfab63f5  mov %r14, %rdi          
0x7fc7cfab63f8  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab6402  callq *%rax             
0x7fc7cfab6404  invalid                 
0x7fc7cfab6405  sti                     
0x7fc7cfab6406  adc %al, -0x330(%rbp)   
0x7fc7cfab640c  invalid                 
0x7fc7cfab640d  sti                     
0x7fc7cfab640e  adc %eax, 0x18(%rax)    
0x7fc7cfab6411  jmp 0x18f9               ; 0x7fc7cfab6479
0x7fc7cfab6416  mov %rbx, -0x50(%rbp)   
0x7fc7cfab641a  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab6422  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab642a  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6431  movq $0x0, -0x30(%rbp)  
0x7fc7cfab6439  lea -0x1a0(%rbp), %rax  
0x7fc7cfab6440  mov %rax, -0x38(%rbp)   
0x7fc7cfab6444  mov 0x1951bd0, %rsi     
0x7fc7cfab644c  mov 0x20(%rsi), %rax    
0x7fc7cfab6450  mov $0x63, -0x1d4(%rbp) 
0x7fc7cfab645a  mov %r14, %rdi          
0x7fc7cfab645d  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6464  mov %r15, %rcx          
0x7fc7cfab6467  callq *%rax             
0x7fc7cfab6469  test %rax, %rax         
0x7fc7cfab646c  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6472  mov -0x218(%rbp), %rbx  
0x7fc7cfab6479  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6480  mov %rbx, -0x1a0(%rbp)  
0x7fc7cfab6487  testb $0x3, %al         
0x7fc7cfab648a  jnz 0x1955               ; 0x7fc7cfab64d5
0x7fc7cfab6490  mov 0x8(%rax), %rcx     
0x7fc7cfab6494  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6498  jnz 0x1955               ; 0x7fc7cfab64d5
0x7fc7cfab649e  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab64a5  jnz 0x3635               ; 0x7fc7cfab81b5
0x7fc7cfab64ab  testb $0x3, %bl         
0x7fc7cfab64ae  jnz 0x194c               ; 0x7fc7cfab64cc
0x7fc7cfab64b4  mov 0x8(%rbx), %rcx     
0x7fc7cfab64b8  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab64bc  jnz 0x194c               ; 0x7fc7cfab64cc
0x7fc7cfab64c2  invalid                 
0x7fc7cfab64c3  sti                     
0x7fc7cfab64c4  adc %al, 0x18(%rbx)     
0x7fc7cfab64c7  jmp 0x298f               ; 0x7fc7cfab750f
0x7fc7cfab64cc  testb $0x1, %bl         
0x7fc7cfab64cf  jnz 0x2987               ; 0x7fc7cfab7507
0x7fc7cfab64d5  mov %rax, -0x50(%rbp)   
0x7fc7cfab64d9  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab64e1  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab64e9  mov $0x1, -0x40(%rbp)   
0x7fc7cfab64f0  movq $0x0, -0x30(%rbp)  
0x7fc7cfab64f8  lea -0x1a0(%rbp), %rax  
0x7fc7cfab64ff  mov %rax, -0x38(%rbp)   
0x7fc7cfab6503  mov 0x1951bf8, %rsi     
0x7fc7cfab650b  mov 0x20(%rsi), %rax    
0x7fc7cfab650f  mov $0x68, -0x1d4(%rbp) 
0x7fc7cfab6519  mov %r14, %rdi          
0x7fc7cfab651c  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6523  mov %r15, %rcx          
0x7fc7cfab6526  callq *%rax             
0x7fc7cfab6528  test %rax, %rax         
0x7fc7cfab652b  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6531  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6538  mov -0x1b0(%rbp), %rcx  
0x7fc7cfab653f  testb $0x3, %cl         
0x7fc7cfab6542  mov %r12, %rbx          
0x7fc7cfab6545  jnz 0x1a10               ; 0x7fc7cfab6590
0x7fc7cfab654b  mov 0x8(%rcx), %rdx     
0x7fc7cfab654f  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6553  jnz 0x1a10               ; 0x7fc7cfab6590
0x7fc7cfab6559  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab6560  jnz 0x366f               ; 0x7fc7cfab81ef
0x7fc7cfab6566  testb $0x3, %al         
0x7fc7cfab6569  jnz 0x1a07               ; 0x7fc7cfab6587
0x7fc7cfab656f  mov 0x8(%rax), %rdx     
0x7fc7cfab6573  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6577  jnz 0x1a07               ; 0x7fc7cfab6587
0x7fc7cfab657d  invalid                 
0x7fc7cfab657e  sti                     
0x7fc7cfab657f  adc %al, 0x18(%rax)     
0x7fc7cfab6582  jmp 0x29c5               ; 0x7fc7cfab7545
0x7fc7cfab6587  testb $0x1, %al         
0x7fc7cfab658a  jnz 0x29bd               ; 0x7fc7cfab753d
0x7fc7cfab6590  mov %rbx, %r12          
0x7fc7cfab6593  mov %rcx, -0x50(%rbp)   
0x7fc7cfab6597  movq $0x3cd6, -0x58(%rbp)
0x7fc7cfab659f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab65a7  mov $0x1, -0x40(%rbp)   
0x7fc7cfab65ae  movq $0x0, -0x30(%rbp)  
0x7fc7cfab65b6  lea -0x1a8(%rbp), %rax  
0x7fc7cfab65bd  mov %rax, -0x38(%rbp)   
0x7fc7cfab65c1  mov 0x1951c10, %rsi     
0x7fc7cfab65c9  mov 0x20(%rsi), %rax    
0x7fc7cfab65cd  mov $0x6b, -0x1d4(%rbp) 
0x7fc7cfab65d7  mov %r14, %rdi          
0x7fc7cfab65da  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab65e1  mov %r15, %rcx          
0x7fc7cfab65e4  callq *%rax             
0x7fc7cfab65e6  mov %rax, %r13          
0x7fc7cfab65e9  test %r13, %r13         
0x7fc7cfab65ec  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab65f2  mov %r13, -0x210(%rbp)  
0x7fc7cfab65f9  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab6604  mov -0x278(%rbp), %rsi  
0x7fc7cfab660b  testb $0x3, %sil        
0x7fc7cfab660f  jnz 0x1abc               ; 0x7fc7cfab663c
0x7fc7cfab6615  mov 0x8(%rsi), %rax     
0x7fc7cfab6619  cmp $0x505, 0x70(%rax)  
0x7fc7cfab6620  jnz 0x1abc               ; 0x7fc7cfab663c
0x7fc7cfab6626  mov 0x48(%rsi), %rcx    
0x7fc7cfab662a  cmpq $0x22, %rcx        
0x7fc7cfab662e  mov $0x1a, %eax         
0x7fc7cfab6633  cmovnz %rcx, %rax       
0x7fc7cfab6637  jmp 0x1ad0               ; 0x7fc7cfab6650
0x7fc7cfab663c  mov $0x10086, %edx      
0x7fc7cfab6641  mov %r14, %rdi          
0x7fc7cfab6644  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab664e  callq *%rax             
0x7fc7cfab6650  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab6657  mov %r13, -0x1a8(%rbp)  
0x7fc7cfab665e  testb $0x3, %al         
0x7fc7cfab6661  jnz 0x1b2f               ; 0x7fc7cfab66af
0x7fc7cfab6667  mov 0x8(%rax), %rcx     
0x7fc7cfab666b  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab666f  jnz 0x1b2f               ; 0x7fc7cfab66af
0x7fc7cfab6675  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab667c  jnz 0x36a4               ; 0x7fc7cfab8224
0x7fc7cfab6682  testb $0x3, %r13b       
0x7fc7cfab6686  jnz 0x1b25               ; 0x7fc7cfab66a5
0x7fc7cfab668c  mov 0x8(%r13), %rcx     
0x7fc7cfab6690  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6694  jnz 0x1b25               ; 0x7fc7cfab66a5
0x7fc7cfab669a  invalid                 
0x7fc7cfab669b  sar $0x45, 0x10(%rbx)   
0x7fc7cfab669f  sbb %ch, %cl            
0x7fc7cfab66a1  pushfq                  
0x7fc7cfab66a2  sldt (%rax)             
0x7fc7cfab66a5  testb $0x1, %r13b       
0x7fc7cfab66a9  jnz 0x2ab6               ; 0x7fc7cfab7636
0x7fc7cfab66af  mov %rax, -0x50(%rbp)   
0x7fc7cfab66b3  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab66bb  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab66c3  mov $0x1, -0x40(%rbp)   
0x7fc7cfab66ca  movq $0x0, -0x30(%rbp)  
0x7fc7cfab66d2  lea -0x1a8(%rbp), %rax  
0x7fc7cfab66d9  mov %rax, -0x38(%rbp)   
0x7fc7cfab66dd  mov 0x1951c60, %rsi     
0x7fc7cfab66e5  mov 0x20(%rsi), %rax    
0x7fc7cfab66e9  mov $0x75, -0x1d4(%rbp) 
0x7fc7cfab66f3  mov %r14, %rdi          
0x7fc7cfab66f6  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab66fd  mov %r15, %rcx          
0x7fc7cfab6700  callq *%rax             
0x7fc7cfab6702  mov %rax, %rbx          
0x7fc7cfab6705  test %rbx, %rbx         
0x7fc7cfab6708  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab670e  mov -0x210(%rbp), %r13  
0x7fc7cfab6715  mov %rbx, -0x1b0(%rbp)  
0x7fc7cfab671c  mov -0x238(%rbp), %rax  
0x7fc7cfab6723  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab672a  mov 0x48(%rax), %rcx    
0x7fc7cfab672e  cmpq $0x22, %rcx        
0x7fc7cfab6732  mov $0x1a, %eax         
0x7fc7cfab6737  cmovnz %rcx, %rax       
0x7fc7cfab673b  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6742  mov %r13, -0x1a0(%rbp)  
0x7fc7cfab6749  testb $0x3, %al         
0x7fc7cfab674c  jnz 0x1c1a               ; 0x7fc7cfab679a
0x7fc7cfab6752  mov 0x8(%rax), %rcx     
0x7fc7cfab6756  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab675a  jnz 0x1c1a               ; 0x7fc7cfab679a
0x7fc7cfab6760  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab6767  jnz 0x3713               ; 0x7fc7cfab8293
0x7fc7cfab676d  testb $0x3, %r13b       
0x7fc7cfab6771  jnz 0x1c10               ; 0x7fc7cfab6790
0x7fc7cfab6777  mov 0x8(%r13), %rcx     
0x7fc7cfab677b  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab677f  jnz 0x1c10               ; 0x7fc7cfab6790
0x7fc7cfab6785  invalid                 
0x7fc7cfab6786  sar $0x45, 0x10(%rbx)   
0x7fc7cfab678a  sbb %ch, %cl            
0x7fc7cfab678c  add (%rcx), %dl         
0x7fc7cfab678e  add %al, (%rax)         
0x7fc7cfab6790  testb $0x1, %r13b       
0x7fc7cfab6794  jnz 0x2d0a               ; 0x7fc7cfab788a
0x7fc7cfab679a  mov %rax, -0x50(%rbp)   
0x7fc7cfab679e  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab67a6  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab67ae  mov $0x1, -0x40(%rbp)   
0x7fc7cfab67b5  movq $0x0, -0x30(%rbp)  
0x7fc7cfab67bd  lea -0x1a0(%rbp), %rax  
0x7fc7cfab67c4  mov %rax, -0x38(%rbp)   
0x7fc7cfab67c8  mov 0x1951cb0, %rsi     
0x7fc7cfab67d0  mov 0x20(%rsi), %rax    
0x7fc7cfab67d4  mov $0x7f, -0x1d4(%rbp) 
0x7fc7cfab67de  mov %r14, %rdi          
0x7fc7cfab67e1  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab67e8  mov %r15, %rcx          
0x7fc7cfab67eb  callq *%rax             
0x7fc7cfab67ed  test %rax, %rax         
0x7fc7cfab67f0  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab67f6  mov -0x1b0(%rbp), %rbx  
0x7fc7cfab67fd  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6804  mov %rbx, -0x1a0(%rbp)  
0x7fc7cfab680b  mov %rax, -0x198(%rbp)  
0x7fc7cfab6812  mov $0x2, %esi          
0x7fc7cfab6817  mov %r14, %rdi          
0x7fc7cfab681a  lea -0x1a0(%rbp), %rdx  
0x7fc7cfab6821  mov $0x762710, %rax      ; rbx_make_array
0x7fc7cfab682b  callq *%rax             
0x7fc7cfab682d  mov -0x1b0(%rbp), %rax  
0x7fc7cfab6834  mov -0x1a8(%rbp), %r13  
0x7fc7cfab683b  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab6842  mov %rax, -0x208(%rbp)  
0x7fc7cfab6849  mov %r13, -0x200(%rbp)  
0x7fc7cfab6850  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab685b  mov -0x278(%rbp), %rsi  
0x7fc7cfab6862  testb $0x3, %sil        
0x7fc7cfab6866  jnz 0x1d13               ; 0x7fc7cfab6893
0x7fc7cfab686c  mov 0x8(%rsi), %rax     
0x7fc7cfab6870  cmp $0x505, 0x70(%rax)  
0x7fc7cfab6877  jnz 0x1d13               ; 0x7fc7cfab6893
0x7fc7cfab687d  mov 0x30(%rsi), %rax    
0x7fc7cfab6881  cmpq $0x22, %rax        
0x7fc7cfab6885  mov $0x1a, %ebx         
0x7fc7cfab688a  cmovnz %rax, %rbx       
0x7fc7cfab688e  jmp 0x1d2a               ; 0x7fc7cfab68aa
0x7fc7cfab6893  mov $0x1006e, %edx      
0x7fc7cfab6898  mov %r14, %rdi          
0x7fc7cfab689b  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab68a5  callq *%rax             
0x7fc7cfab68a7  mov %rax, %rbx          
0x7fc7cfab68aa  mov %rbx, -0x1b0(%rbp)  
0x7fc7cfab68b1  mov -0x230(%rbp), %rax  
0x7fc7cfab68b8  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab68bf  mov %r13, -0x1a0(%rbp)  
0x7fc7cfab68c6  testb $0x3, %al         
0x7fc7cfab68c9  jnz 0x1d97               ; 0x7fc7cfab6917
0x7fc7cfab68cf  mov 0x8(%rax), %rcx     
0x7fc7cfab68d3  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab68d7  jnz 0x1d97               ; 0x7fc7cfab6917
0x7fc7cfab68dd  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab68e4  jnz 0x374d               ; 0x7fc7cfab82cd
0x7fc7cfab68ea  testb $0x3, %r13b       
0x7fc7cfab68ee  jnz 0x1d8d               ; 0x7fc7cfab690d
0x7fc7cfab68f4  mov 0x8(%r13), %rcx     
0x7fc7cfab68f8  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab68fc  jnz 0x1d8d               ; 0x7fc7cfab690d
0x7fc7cfab6902  invalid                 
0x7fc7cfab6903  sar $0x45, 0x10(%rbx)   
0x7fc7cfab6907  sbb %ch, %cl            
0x7fc7cfab6909  mov $0x4100000f, %ebx   
0x7fc7cfab690e  testb $0x1, %ch         
0x7fc7cfab6911  jnz 0x2d40               ; 0x7fc7cfab78c0
0x7fc7cfab6917  mov %rax, -0x50(%rbp)   
0x7fc7cfab691b  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab6923  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab692b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6932  movq $0x0, -0x30(%rbp)  
0x7fc7cfab693a  lea -0x1a0(%rbp), %rax  
0x7fc7cfab6941  mov %rax, -0x38(%rbp)   
0x7fc7cfab6945  mov 0x1951d70, %rsi     
0x7fc7cfab694d  mov 0x20(%rsi), %rax    
0x7fc7cfab6951  mov $0x97, -0x1d4(%rbp) 
0x7fc7cfab695b  mov %r14, %rdi          
0x7fc7cfab695e  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6965  mov %r15, %rcx          
0x7fc7cfab6968  callq *%rax             
0x7fc7cfab696a  test %rax, %rax         
0x7fc7cfab696d  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6973  mov -0x1b0(%rbp), %rbx  
0x7fc7cfab697a  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6981  testb $0x3, %bl         
0x7fc7cfab6984  jnz 0x1e4f               ; 0x7fc7cfab69cf
0x7fc7cfab698a  mov 0x8(%rbx), %rcx     
0x7fc7cfab698e  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6992  jnz 0x1e4f               ; 0x7fc7cfab69cf
0x7fc7cfab6998  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab699f  jnz 0x3787               ; 0x7fc7cfab8307
0x7fc7cfab69a5  testb $0x3, %al         
0x7fc7cfab69a8  jnz 0x1e46               ; 0x7fc7cfab69c6
0x7fc7cfab69ae  mov 0x8(%rax), %rcx     
0x7fc7cfab69b2  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab69b6  jnz 0x1e46               ; 0x7fc7cfab69c6
0x7fc7cfab69bc  invalid                 
0x7fc7cfab69bd  sti                     
0x7fc7cfab69be  adc %al, 0x18(%rax)     
0x7fc7cfab69c1  jmp 0x2d7e               ; 0x7fc7cfab78fe
0x7fc7cfab69c6  testb $0x1, %al         
0x7fc7cfab69c9  jnz 0x2d76               ; 0x7fc7cfab78f6
0x7fc7cfab69cf  mov %rbx, -0x50(%rbp)   
0x7fc7cfab69d3  movq $0x566, -0x58(%rbp)
0x7fc7cfab69db  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab69e3  mov $0x1, -0x40(%rbp)   
0x7fc7cfab69ea  movq $0x0, -0x30(%rbp)  
0x7fc7cfab69f2  lea -0x1a8(%rbp), %rax  
0x7fc7cfab69f9  mov %rax, -0x38(%rbp)   
0x7fc7cfab69fd  mov 0x1951d88, %rsi     
0x7fc7cfab6a05  mov 0x20(%rsi), %rax    
0x7fc7cfab6a09  mov $0x9a, -0x1d4(%rbp) 
0x7fc7cfab6a13  mov %r14, %rdi          
0x7fc7cfab6a16  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6a1d  mov %r15, %rcx          
0x7fc7cfab6a20  callq *%rax             
0x7fc7cfab6a22  test %rax, %rax         
0x7fc7cfab6a25  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6a2b  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab6a32  mov -0x278(%rbp), %rdx  
0x7fc7cfab6a39  testb $0x3, %dl         
0x7fc7cfab6a3c  jnz 0x1f31               ; 0x7fc7cfab6ab1
0x7fc7cfab6a42  mov 0x8(%rdx), %rcx     
0x7fc7cfab6a46  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab6a4d  jnz 0x1f31               ; 0x7fc7cfab6ab1
0x7fc7cfab6a53  mov %rax, 0x30(%rdx)    
0x7fc7cfab6a57  testb $0x3, %al         
0x7fc7cfab6a5a  jnz 0x1f58               ; 0x7fc7cfab6ad8
0x7fc7cfab6a60  mov 0x15853f8, %esi     
0x7fc7cfab6a67  mov (%rdx), %rcx        
0x7fc7cfab6a6a  mov %rcx, %rdi          
0x7fc7cfab6a6d  andq $0x380000, %rdi    
0x7fc7cfab6a74  inc %esi                
0x7fc7cfab6a76  shlq $0x13, %rsi        
0x7fc7cfab6a7a  cmp %rsi, %rdi          
0x7fc7cfab6a7d  jz 0x1f17                ; 0x7fc7cfab6a97
0x7fc7cfab6a83  andq $0x300, %rcx       
0x7fc7cfab6a8a  cmpq $0x200, %rcx       
0x7fc7cfab6a91  jz 0x1f58                ; 0x7fc7cfab6ad8
0x7fc7cfab6a97  mov %r14, %rdi          
0x7fc7cfab6a9a  mov %rdx, %rsi          
0x7fc7cfab6a9d  mov %rax, %rdx          
0x7fc7cfab6aa0  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab6aaa  callq *%rax             
0x7fc7cfab6aac  jmp 0x1f58               ; 0x7fc7cfab6ad8
0x7fc7cfab6ab1  mov $0x1006e, %ecx      
0x7fc7cfab6ab6  mov %r14, %rdi          
0x7fc7cfab6ab9  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab6ac0  mov %rax, %r8           
0x7fc7cfab6ac3  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab6acd  callq *%rax             
0x7fc7cfab6acf  test %rax, %rax         
0x7fc7cfab6ad2  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6ad8  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab6ae3  mov -0x278(%rbp), %rsi  
0x7fc7cfab6aea  testb $0x3, %sil        
0x7fc7cfab6aee  jnz 0x1f9b               ; 0x7fc7cfab6b1b
0x7fc7cfab6af4  mov 0x8(%rsi), %rax     
0x7fc7cfab6af8  cmp $0x505, 0x70(%rax)  
0x7fc7cfab6aff  jnz 0x1f9b               ; 0x7fc7cfab6b1b
0x7fc7cfab6b05  mov 0x38(%rsi), %rax    
0x7fc7cfab6b09  cmpq $0x22, %rax        
0x7fc7cfab6b0d  mov $0x1a, %ebx         
0x7fc7cfab6b12  cmovnz %rax, %rbx       
0x7fc7cfab6b16  jmp 0x1fb2               ; 0x7fc7cfab6b32
0x7fc7cfab6b1b  mov $0x10076, %edx      
0x7fc7cfab6b20  mov %r14, %rdi          
0x7fc7cfab6b23  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab6b2d  callq *%rax             
0x7fc7cfab6b2f  mov %rax, %rbx          
0x7fc7cfab6b32  mov %rbx, -0x1b0(%rbp)  
0x7fc7cfab6b39  mov -0x228(%rbp), %rax  
0x7fc7cfab6b40  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6b47  mov -0x200(%rbp), %rcx  
0x7fc7cfab6b4e  mov %rcx, -0x1a0(%rbp)  
0x7fc7cfab6b55  testb $0x3, %al         
0x7fc7cfab6b58  jnz 0x2023               ; 0x7fc7cfab6ba3
0x7fc7cfab6b5e  mov 0x8(%rax), %rdx     
0x7fc7cfab6b62  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6b66  jnz 0x2023               ; 0x7fc7cfab6ba3
0x7fc7cfab6b6c  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab6b73  jnz 0x37bc               ; 0x7fc7cfab833c
0x7fc7cfab6b79  testb $0x3, %cl         
0x7fc7cfab6b7c  jnz 0x201a               ; 0x7fc7cfab6b9a
0x7fc7cfab6b82  mov 0x8(%rcx), %rdx     
0x7fc7cfab6b86  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6b8a  jnz 0x201a               ; 0x7fc7cfab6b9a
0x7fc7cfab6b90  invalid                 
0x7fc7cfab6b91  sti                     
0x7fc7cfab6b92  adc %al, 0x18(%rcx)     
0x7fc7cfab6b95  jmp 0x2db8               ; 0x7fc7cfab7938
0x7fc7cfab6b9a  testb $0x1, %cl         
0x7fc7cfab6b9d  jnz 0x2db0               ; 0x7fc7cfab7930
0x7fc7cfab6ba3  mov %rax, -0x50(%rbp)   
0x7fc7cfab6ba7  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab6baf  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab6bb7  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6bbe  movq $0x0, -0x30(%rbp)  
0x7fc7cfab6bc6  lea -0x1a0(%rbp), %rax  
0x7fc7cfab6bcd  mov %rax, -0x38(%rbp)   
0x7fc7cfab6bd1  mov 0x1951de8, %rsi     
0x7fc7cfab6bd9  mov 0x20(%rsi), %rax    
0x7fc7cfab6bdd  mov $0xa6, -0x1d4(%rbp) 
0x7fc7cfab6be7  mov %r14, %rdi          
0x7fc7cfab6bea  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6bf1  mov %r15, %rcx          
0x7fc7cfab6bf4  callq *%rax             
0x7fc7cfab6bf6  test %rax, %rax         
0x7fc7cfab6bf9  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6bff  mov -0x1b0(%rbp), %rbx  
0x7fc7cfab6c06  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6c0d  testb $0x3, %bl         
0x7fc7cfab6c10  jnz 0x20db               ; 0x7fc7cfab6c5b
0x7fc7cfab6c16  mov 0x8(%rbx), %rcx     
0x7fc7cfab6c1a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6c1e  jnz 0x20db               ; 0x7fc7cfab6c5b
0x7fc7cfab6c24  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab6c2b  jnz 0x37f6               ; 0x7fc7cfab8376
0x7fc7cfab6c31  testb $0x3, %al         
0x7fc7cfab6c34  jnz 0x20d2               ; 0x7fc7cfab6c52
0x7fc7cfab6c3a  mov 0x8(%rax), %rcx     
0x7fc7cfab6c3e  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6c42  jnz 0x20d2               ; 0x7fc7cfab6c52
0x7fc7cfab6c48  invalid                 
0x7fc7cfab6c49  sti                     
0x7fc7cfab6c4a  adc %al, 0x18(%rax)     
0x7fc7cfab6c4d  jmp 0x2dee               ; 0x7fc7cfab796e
0x7fc7cfab6c52  testb $0x1, %al         
0x7fc7cfab6c55  jnz 0x2de6               ; 0x7fc7cfab7966
0x7fc7cfab6c5b  mov %rbx, -0x50(%rbp)   
0x7fc7cfab6c5f  movq $0x566, -0x58(%rbp)
0x7fc7cfab6c67  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab6c6f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6c76  movq $0x0, -0x30(%rbp)  
0x7fc7cfab6c7e  lea -0x1a8(%rbp), %rax  
0x7fc7cfab6c85  mov %rax, -0x38(%rbp)   
0x7fc7cfab6c89  mov 0x1951e00, %rsi     
0x7fc7cfab6c91  mov 0x20(%rsi), %rax    
0x7fc7cfab6c95  mov $0xa9, -0x1d4(%rbp) 
0x7fc7cfab6c9f  mov %r14, %rdi          
0x7fc7cfab6ca2  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6ca9  mov %r15, %rcx          
0x7fc7cfab6cac  callq *%rax             
0x7fc7cfab6cae  test %rax, %rax         
0x7fc7cfab6cb1  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6cb7  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab6cbe  mov -0x278(%rbp), %rdx  
0x7fc7cfab6cc5  testb $0x3, %dl         
0x7fc7cfab6cc8  jnz 0x21bd               ; 0x7fc7cfab6d3d
0x7fc7cfab6cce  mov 0x8(%rdx), %rcx     
0x7fc7cfab6cd2  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab6cd9  jnz 0x21bd               ; 0x7fc7cfab6d3d
0x7fc7cfab6cdf  mov %rax, 0x38(%rdx)    
0x7fc7cfab6ce3  testb $0x3, %al         
0x7fc7cfab6ce6  jnz 0x21e4               ; 0x7fc7cfab6d64
0x7fc7cfab6cec  mov 0x15853f8, %esi     
0x7fc7cfab6cf3  mov (%rdx), %rcx        
0x7fc7cfab6cf6  mov %rcx, %rdi          
0x7fc7cfab6cf9  andq $0x380000, %rdi    
0x7fc7cfab6d00  inc %esi                
0x7fc7cfab6d02  shlq $0x13, %rsi        
0x7fc7cfab6d06  cmp %rsi, %rdi          
0x7fc7cfab6d09  jz 0x21a3                ; 0x7fc7cfab6d23
0x7fc7cfab6d0f  andq $0x300, %rcx       
0x7fc7cfab6d16  cmpq $0x200, %rcx       
0x7fc7cfab6d1d  jz 0x21e4                ; 0x7fc7cfab6d64
0x7fc7cfab6d23  mov %r14, %rdi          
0x7fc7cfab6d26  mov %rdx, %rsi          
0x7fc7cfab6d29  mov %rax, %rdx          
0x7fc7cfab6d2c  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab6d36  callq *%rax             
0x7fc7cfab6d38  jmp 0x21e4               ; 0x7fc7cfab6d64
0x7fc7cfab6d3d  mov $0x10076, %ecx      
0x7fc7cfab6d42  mov %r14, %rdi          
0x7fc7cfab6d45  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab6d4c  mov %rax, %r8           
0x7fc7cfab6d4f  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab6d59  callq *%rax             
0x7fc7cfab6d5b  test %rax, %rax         
0x7fc7cfab6d5e  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6d64  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab6d6f  mov -0x278(%rbp), %rsi  
0x7fc7cfab6d76  testb $0x3, %sil        
0x7fc7cfab6d7a  jnz 0x2227               ; 0x7fc7cfab6da7
0x7fc7cfab6d80  mov 0x8(%rsi), %rax     
0x7fc7cfab6d84  cmp $0x505, 0x70(%rax)  
0x7fc7cfab6d8b  jnz 0x2227               ; 0x7fc7cfab6da7
0x7fc7cfab6d91  mov 0x40(%rsi), %rax    
0x7fc7cfab6d95  cmpq $0x22, %rax        
0x7fc7cfab6d99  mov $0x1a, %ebx         
0x7fc7cfab6d9e  cmovnz %rax, %rbx       
0x7fc7cfab6da2  jmp 0x223e               ; 0x7fc7cfab6dbe
0x7fc7cfab6da7  mov $0x1007e, %edx      
0x7fc7cfab6dac  mov %r14, %rdi          
0x7fc7cfab6daf  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab6db9  callq *%rax             
0x7fc7cfab6dbb  mov %rax, %rbx          
0x7fc7cfab6dbe  mov %rbx, -0x1b0(%rbp)  
0x7fc7cfab6dc5  mov -0x220(%rbp), %rax  
0x7fc7cfab6dcc  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6dd3  mov -0x200(%rbp), %rcx  
0x7fc7cfab6dda  mov %rcx, -0x1a0(%rbp)  
0x7fc7cfab6de1  testb $0x3, %al         
0x7fc7cfab6de4  jnz 0x22af               ; 0x7fc7cfab6e2f
0x7fc7cfab6dea  mov 0x8(%rax), %rdx     
0x7fc7cfab6dee  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6df2  jnz 0x22af               ; 0x7fc7cfab6e2f
0x7fc7cfab6df8  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab6dff  jnz 0x382b               ; 0x7fc7cfab83ab
0x7fc7cfab6e05  testb $0x3, %cl         
0x7fc7cfab6e08  jnz 0x22a6               ; 0x7fc7cfab6e26
0x7fc7cfab6e0e  mov 0x8(%rcx), %rdx     
0x7fc7cfab6e12  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab6e16  jnz 0x22a6               ; 0x7fc7cfab6e26
0x7fc7cfab6e1c  invalid                 
0x7fc7cfab6e1d  sti                     
0x7fc7cfab6e1e  adc %al, 0x18(%rcx)     
0x7fc7cfab6e21  jmp 0x2e28               ; 0x7fc7cfab79a8
0x7fc7cfab6e26  testb $0x1, %cl         
0x7fc7cfab6e29  jnz 0x2e20               ; 0x7fc7cfab79a0
0x7fc7cfab6e2f  mov %rax, -0x50(%rbp)   
0x7fc7cfab6e33  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab6e3b  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab6e43  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6e4a  movq $0x0, -0x30(%rbp)  
0x7fc7cfab6e52  lea -0x1a0(%rbp), %rax  
0x7fc7cfab6e59  mov %rax, -0x38(%rbp)   
0x7fc7cfab6e5d  mov 0x1951e60, %rsi     
0x7fc7cfab6e65  mov 0x20(%rsi), %rax    
0x7fc7cfab6e69  mov $0xb5, -0x1d4(%rbp) 
0x7fc7cfab6e73  mov %r14, %rdi          
0x7fc7cfab6e76  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6e7d  mov %r15, %rcx          
0x7fc7cfab6e80  callq *%rax             
0x7fc7cfab6e82  test %rax, %rax         
0x7fc7cfab6e85  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6e8b  mov -0x1b0(%rbp), %rbx  
0x7fc7cfab6e92  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab6e99  testb $0x3, %bl         
0x7fc7cfab6e9c  jnz 0x2367               ; 0x7fc7cfab6ee7
0x7fc7cfab6ea2  mov 0x8(%rbx), %rcx     
0x7fc7cfab6ea6  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6eaa  jnz 0x2367               ; 0x7fc7cfab6ee7
0x7fc7cfab6eb0  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab6eb7  jnz 0x3865               ; 0x7fc7cfab83e5
0x7fc7cfab6ebd  testb $0x3, %al         
0x7fc7cfab6ec0  jnz 0x235e               ; 0x7fc7cfab6ede
0x7fc7cfab6ec6  mov 0x8(%rax), %rcx     
0x7fc7cfab6eca  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab6ece  jnz 0x235e               ; 0x7fc7cfab6ede
0x7fc7cfab6ed4  invalid                 
0x7fc7cfab6ed5  sti                     
0x7fc7cfab6ed6  adc %al, 0x18(%rax)     
0x7fc7cfab6ed9  jmp 0x2e5e               ; 0x7fc7cfab79de
0x7fc7cfab6ede  testb $0x1, %al         
0x7fc7cfab6ee1  jnz 0x2e56               ; 0x7fc7cfab79d6
0x7fc7cfab6ee7  mov %rbx, -0x50(%rbp)   
0x7fc7cfab6eeb  movq $0x566, -0x58(%rbp)
0x7fc7cfab6ef3  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab6efb  mov $0x1, -0x40(%rbp)   
0x7fc7cfab6f02  movq $0x0, -0x30(%rbp)  
0x7fc7cfab6f0a  lea -0x1a8(%rbp), %rax  
0x7fc7cfab6f11  mov %rax, -0x38(%rbp)   
0x7fc7cfab6f15  mov 0x1951e78, %rsi     
0x7fc7cfab6f1d  mov 0x20(%rsi), %rax    
0x7fc7cfab6f21  mov $0xb8, -0x1d4(%rbp) 
0x7fc7cfab6f2b  mov %r14, %rdi          
0x7fc7cfab6f2e  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab6f35  mov %r15, %rcx          
0x7fc7cfab6f38  callq *%rax             
0x7fc7cfab6f3a  test %rax, %rax         
0x7fc7cfab6f3d  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6f43  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab6f4a  mov -0x278(%rbp), %rdx  
0x7fc7cfab6f51  testb $0x3, %dl         
0x7fc7cfab6f54  jnz 0x2449               ; 0x7fc7cfab6fc9
0x7fc7cfab6f5a  mov 0x8(%rdx), %rcx     
0x7fc7cfab6f5e  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab6f65  jnz 0x2449               ; 0x7fc7cfab6fc9
0x7fc7cfab6f6b  mov %rax, 0x40(%rdx)    
0x7fc7cfab6f6f  testb $0x3, %al         
0x7fc7cfab6f72  jnz 0x2470               ; 0x7fc7cfab6ff0
0x7fc7cfab6f78  mov 0x15853f8, %esi     
0x7fc7cfab6f7f  mov (%rdx), %rcx        
0x7fc7cfab6f82  mov %rcx, %rdi          
0x7fc7cfab6f85  andq $0x380000, %rdi    
0x7fc7cfab6f8c  inc %esi                
0x7fc7cfab6f8e  shlq $0x13, %rsi        
0x7fc7cfab6f92  cmp %rsi, %rdi          
0x7fc7cfab6f95  jz 0x242f                ; 0x7fc7cfab6faf
0x7fc7cfab6f9b  andq $0x300, %rcx       
0x7fc7cfab6fa2  cmpq $0x200, %rcx       
0x7fc7cfab6fa9  jz 0x2470                ; 0x7fc7cfab6ff0
0x7fc7cfab6faf  mov %r14, %rdi          
0x7fc7cfab6fb2  mov %rdx, %rsi          
0x7fc7cfab6fb5  mov %rax, %rdx          
0x7fc7cfab6fb8  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab6fc2  callq *%rax             
0x7fc7cfab6fc4  jmp 0x2470               ; 0x7fc7cfab6ff0
0x7fc7cfab6fc9  mov $0x1007e, %ecx      
0x7fc7cfab6fce  mov %r14, %rdi          
0x7fc7cfab6fd1  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab6fd8  mov %rax, %r8           
0x7fc7cfab6fdb  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab6fe5  callq *%rax             
0x7fc7cfab6fe7  test %rax, %rax         
0x7fc7cfab6fea  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab6ff0  mov -0x238(%rbp), %rax  
0x7fc7cfab6ff7  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab6ffe  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab7005  mov 0x30(%rax), %rax    
0x7fc7cfab7009  cmpq $0x22, %rax        
0x7fc7cfab700d  mov $0x1a, %ebx         
0x7fc7cfab7012  cmovnz %rax, %rbx       
0x7fc7cfab7016  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab701d  mov -0x230(%rbp), %rax  
0x7fc7cfab7024  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab702b  mov -0x208(%rbp), %rcx  
0x7fc7cfab7032  mov %rcx, -0x198(%rbp)  
0x7fc7cfab7039  testb $0x3, %al         
0x7fc7cfab703c  jnz 0x2507               ; 0x7fc7cfab7087
0x7fc7cfab7042  mov 0x8(%rax), %rdx     
0x7fc7cfab7046  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab704a  jnz 0x2507               ; 0x7fc7cfab7087
0x7fc7cfab7050  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab7057  jnz 0x3958               ; 0x7fc7cfab84d8
0x7fc7cfab705d  testb $0x3, %cl         
0x7fc7cfab7060  jnz 0x24fe               ; 0x7fc7cfab707e
0x7fc7cfab7066  mov 0x8(%rcx), %rdx     
0x7fc7cfab706a  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab706e  jnz 0x24fe               ; 0x7fc7cfab707e
0x7fc7cfab7074  invalid                 
0x7fc7cfab7075  sti                     
0x7fc7cfab7076  adc %al, 0x18(%rcx)     
0x7fc7cfab7079  jmp 0x2e98               ; 0x7fc7cfab7a18
0x7fc7cfab707e  testb $0x1, %cl         
0x7fc7cfab7081  jnz 0x2e90               ; 0x7fc7cfab7a10
0x7fc7cfab7087  mov %rax, -0x50(%rbp)   
0x7fc7cfab708b  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab7093  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab709b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab70a2  movq $0x0, -0x30(%rbp)  
0x7fc7cfab70aa  lea -0x198(%rbp), %rax  
0x7fc7cfab70b1  mov %rax, -0x38(%rbp)   
0x7fc7cfab70b5  mov 0x1951ef8, %rsi     
0x7fc7cfab70bd  mov 0x20(%rsi), %rax    
0x7fc7cfab70c1  mov $0xc8, -0x1d4(%rbp) 
0x7fc7cfab70cb  mov %r14, %rdi          
0x7fc7cfab70ce  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab70d5  mov %r15, %rcx          
0x7fc7cfab70d8  callq *%rax             
0x7fc7cfab70da  test %rax, %rax         
0x7fc7cfab70dd  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab70e3  mov -0x1a8(%rbp), %rbx  
0x7fc7cfab70ea  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab70f1  testb $0x3, %bl         
0x7fc7cfab70f4  jnz 0x25bf               ; 0x7fc7cfab713f
0x7fc7cfab70fa  mov 0x8(%rbx), %rcx     
0x7fc7cfab70fe  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7102  jnz 0x25bf               ; 0x7fc7cfab713f
0x7fc7cfab7108  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab710f  jnz 0x3992               ; 0x7fc7cfab8512
0x7fc7cfab7115  testb $0x3, %al         
0x7fc7cfab7118  jnz 0x25b6               ; 0x7fc7cfab7136
0x7fc7cfab711e  mov 0x8(%rax), %rcx     
0x7fc7cfab7122  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7126  jnz 0x25b6               ; 0x7fc7cfab7136
0x7fc7cfab712c  invalid                 
0x7fc7cfab712d  sti                     
0x7fc7cfab712e  adc %al, 0x18(%rax)     
0x7fc7cfab7131  jmp 0x2ece               ; 0x7fc7cfab7a4e
0x7fc7cfab7136  testb $0x1, %al         
0x7fc7cfab7139  jnz 0x2ec6               ; 0x7fc7cfab7a46
0x7fc7cfab713f  mov %rbx, -0x50(%rbp)   
0x7fc7cfab7143  movq $0x55e, -0x58(%rbp)
0x7fc7cfab714b  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab7153  mov $0x1, -0x40(%rbp)   
0x7fc7cfab715a  movq $0x0, -0x30(%rbp)  
0x7fc7cfab7162  lea -0x1a0(%rbp), %rax  
0x7fc7cfab7169  mov %rax, -0x38(%rbp)   
0x7fc7cfab716d  mov 0x1951f10, %rsi     
0x7fc7cfab7175  mov 0x20(%rsi), %rax    
0x7fc7cfab7179  mov $0xcb, -0x1d4(%rbp) 
0x7fc7cfab7183  mov %r14, %rdi          
0x7fc7cfab7186  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab718d  mov %r15, %rcx          
0x7fc7cfab7190  callq *%rax             
0x7fc7cfab7192  test %rax, %rax         
0x7fc7cfab7195  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab719b  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab71a2  mov -0x1b0(%rbp), %rsi  
0x7fc7cfab71a9  mov %rsi, -0x1a8(%rbp)  
0x7fc7cfab71b0  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab71b7  testb $0x3, %sil        
0x7fc7cfab71bb  mov %r12, %rbx          
0x7fc7cfab71be  jnz 0x32ca               ; 0x7fc7cfab7e4a
0x7fc7cfab71c4  mov 0x8(%rsi), %rcx     
0x7fc7cfab71c8  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab71cf  jnz 0x32ca               ; 0x7fc7cfab7e4a
0x7fc7cfab71d5  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab71d9  jnz 0x338c               ; 0x7fc7cfab7f0c
0x7fc7cfab71df  mov %rax, 0x30(%rsi)    
0x7fc7cfab71e3  testb $0x3, %al         
0x7fc7cfab71e6  jnz 0x26b5               ; 0x7fc7cfab7235
0x7fc7cfab71ec  mov 0x15853f8, %edx     
0x7fc7cfab71f3  mov (%rsi), %rcx        
0x7fc7cfab71f6  mov %rcx, %rdi          
0x7fc7cfab71f9  andq $0x380000, %rdi    
0x7fc7cfab7200  inc %edx                
0x7fc7cfab7202  shlq $0x13, %rdx        
0x7fc7cfab7206  cmp %rdx, %rdi          
0x7fc7cfab7209  jz 0x26a3                ; 0x7fc7cfab7223
0x7fc7cfab720f  andq $0x300, %rcx       
0x7fc7cfab7216  cmpq $0x200, %rcx       
0x7fc7cfab721d  jz 0x26b5                ; 0x7fc7cfab7235
0x7fc7cfab7223  mov %r14, %rdi          
0x7fc7cfab7226  mov %rax, %rdx          
0x7fc7cfab7229  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab7233  callq *%rax             
0x7fc7cfab7235  mov %rbx, %r12          
0x7fc7cfab7238  mov -0x238(%rbp), %rax  
0x7fc7cfab723f  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab7246  mov 0x38(%rax), %rax    
0x7fc7cfab724a  cmpq $0x22, %rax        
0x7fc7cfab724e  mov $0x1a, %ebx         
0x7fc7cfab7253  cmovnz %rax, %rbx       
0x7fc7cfab7257  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab725e  mov -0x228(%rbp), %rax  
0x7fc7cfab7265  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab726c  mov -0x208(%rbp), %rcx  
0x7fc7cfab7273  mov %rcx, -0x198(%rbp)  
0x7fc7cfab727a  testb $0x3, %al         
0x7fc7cfab727d  jnz 0x2748               ; 0x7fc7cfab72c8
0x7fc7cfab7283  mov 0x8(%rax), %rdx     
0x7fc7cfab7287  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab728b  jnz 0x2748               ; 0x7fc7cfab72c8
0x7fc7cfab7291  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab7298  jnz 0x39cc               ; 0x7fc7cfab854c
0x7fc7cfab729e  testb $0x3, %cl         
0x7fc7cfab72a1  jnz 0x273f               ; 0x7fc7cfab72bf
0x7fc7cfab72a7  mov 0x8(%rcx), %rdx     
0x7fc7cfab72ab  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab72af  jnz 0x273f               ; 0x7fc7cfab72bf
0x7fc7cfab72b5  invalid                 
0x7fc7cfab72b6  sti                     
0x7fc7cfab72b7  adc %al, 0x18(%rcx)     
0x7fc7cfab72ba  jmp 0x2f04               ; 0x7fc7cfab7a84
0x7fc7cfab72bf  testb $0x1, %cl         
0x7fc7cfab72c2  jnz 0x2efc               ; 0x7fc7cfab7a7c
0x7fc7cfab72c8  mov %rax, -0x50(%rbp)   
0x7fc7cfab72cc  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab72d4  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab72dc  mov $0x1, -0x40(%rbp)   
0x7fc7cfab72e3  movq $0x0, -0x30(%rbp)  
0x7fc7cfab72eb  lea -0x198(%rbp), %rax  
0x7fc7cfab72f2  mov %rax, -0x38(%rbp)   
0x7fc7cfab72f6  mov 0x1951fb8, %rsi     
0x7fc7cfab72fe  mov 0x20(%rsi), %rax    
0x7fc7cfab7302  mov $0xe0, -0x1d4(%rbp) 
0x7fc7cfab730c  mov %r14, %rdi          
0x7fc7cfab730f  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab7316  mov %r15, %rcx          
0x7fc7cfab7319  callq *%rax             
0x7fc7cfab731b  test %rax, %rax         
0x7fc7cfab731e  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab7324  mov -0x1a8(%rbp), %rbx  
0x7fc7cfab732b  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab7332  testb $0x3, %bl         
0x7fc7cfab7335  jnz 0x2800               ; 0x7fc7cfab7380
0x7fc7cfab733b  mov 0x8(%rbx), %rcx     
0x7fc7cfab733f  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7343  jnz 0x2800               ; 0x7fc7cfab7380
0x7fc7cfab7349  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab7350  jnz 0x3a06               ; 0x7fc7cfab8586
0x7fc7cfab7356  testb $0x3, %al         
0x7fc7cfab7359  jnz 0x27f7               ; 0x7fc7cfab7377
0x7fc7cfab735f  mov 0x8(%rax), %rcx     
0x7fc7cfab7363  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7367  jnz 0x27f7               ; 0x7fc7cfab7377
0x7fc7cfab736d  invalid                 
0x7fc7cfab736e  sti                     
0x7fc7cfab736f  adc %al, 0x18(%rax)     
0x7fc7cfab7372  jmp 0x2f3a               ; 0x7fc7cfab7aba
0x7fc7cfab7377  testb $0x1, %al         
0x7fc7cfab737a  jnz 0x2f32               ; 0x7fc7cfab7ab2
0x7fc7cfab7380  mov %rbx, -0x50(%rbp)   
0x7fc7cfab7384  movq $0x55e, -0x58(%rbp)
0x7fc7cfab738c  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab7394  mov $0x1, -0x40(%rbp)   
0x7fc7cfab739b  movq $0x0, -0x30(%rbp)  
0x7fc7cfab73a3  lea -0x1a0(%rbp), %rax  
0x7fc7cfab73aa  mov %rax, -0x38(%rbp)   
0x7fc7cfab73ae  mov 0x1951fd0, %rsi     
0x7fc7cfab73b6  mov 0x20(%rsi), %rax    
0x7fc7cfab73ba  mov $0xe3, -0x1d4(%rbp) 
0x7fc7cfab73c4  mov %r14, %rdi          
0x7fc7cfab73c7  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab73ce  mov %r15, %rcx          
0x7fc7cfab73d1  callq *%rax             
0x7fc7cfab73d3  test %rax, %rax         
0x7fc7cfab73d6  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab73dc  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab73e3  mov -0x1b0(%rbp), %rsi  
0x7fc7cfab73ea  mov %rsi, -0x1a8(%rbp)  
0x7fc7cfab73f1  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab73f8  testb $0x3, %sil        
0x7fc7cfab73fc  mov %r12, %rbx          
0x7fc7cfab73ff  jnz 0x333c               ; 0x7fc7cfab7ebc
0x7fc7cfab7405  mov 0x8(%rsi), %rcx     
0x7fc7cfab7409  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab7410  jnz 0x333c               ; 0x7fc7cfab7ebc
0x7fc7cfab7416  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab741a  jnz 0x33c6               ; 0x7fc7cfab7f46
0x7fc7cfab7420  mov %rax, 0x38(%rsi)    
0x7fc7cfab7424  testb $0x3, %al         
0x7fc7cfab7427  jnz 0x28f6               ; 0x7fc7cfab7476
0x7fc7cfab742d  mov 0x15853f8, %edx     
0x7fc7cfab7434  mov (%rsi), %rcx        
0x7fc7cfab7437  mov %rcx, %rdi          
0x7fc7cfab743a  andq $0x380000, %rdi    
0x7fc7cfab7441  inc %edx                
0x7fc7cfab7443  shlq $0x13, %rdx        
0x7fc7cfab7447  cmp %rdx, %rdi          
0x7fc7cfab744a  jz 0x28e4                ; 0x7fc7cfab7464
0x7fc7cfab7450  andq $0x300, %rcx       
0x7fc7cfab7457  cmpq $0x200, %rcx       
0x7fc7cfab745e  jz 0x28f6                ; 0x7fc7cfab7476
0x7fc7cfab7464  mov %r14, %rdi          
0x7fc7cfab7467  mov %rax, %rdx          
0x7fc7cfab746a  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab7474  callq *%rax             
0x7fc7cfab7476  mov %rbx, %r12          
0x7fc7cfab7479  mov -0x238(%rbp), %rax  
0x7fc7cfab7480  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab7487  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab748e  mov 0x40(%rax), %rax    
0x7fc7cfab7492  cmpq $0x22, %rax        
0x7fc7cfab7496  mov $0x1a, %ebx         
0x7fc7cfab749b  cmovnz %rax, %rbx       
0x7fc7cfab749f  mov %rbx, -0x1a8(%rbp)  
0x7fc7cfab74a6  mov -0x220(%rbp), %rax  
0x7fc7cfab74ad  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab74b4  mov -0x208(%rbp), %rcx  
0x7fc7cfab74bb  mov %rcx, -0x198(%rbp)  
0x7fc7cfab74c2  testb $0x3, %al         
0x7fc7cfab74c5  jnz 0x2a07               ; 0x7fc7cfab7587
0x7fc7cfab74cb  mov 0x8(%rax), %rdx     
0x7fc7cfab74cf  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab74d3  jnz 0x2a07               ; 0x7fc7cfab7587
0x7fc7cfab74d9  cmp $0xe0, 0x74(%rdx)   
0x7fc7cfab74e0  jnz 0x3a40               ; 0x7fc7cfab85c0
0x7fc7cfab74e6  testb $0x3, %cl         
0x7fc7cfab74e9  jnz 0x29fe               ; 0x7fc7cfab757e
0x7fc7cfab74ef  mov 0x8(%rcx), %rdx     
0x7fc7cfab74f3  cmp $0x4d, 0x70(%rdx)   
0x7fc7cfab74f7  jnz 0x29fe               ; 0x7fc7cfab757e
0x7fc7cfab74fd  invalid                 
0x7fc7cfab74fe  sti                     
0x7fc7cfab74ff  adc %al, 0x18(%rcx)     
0x7fc7cfab7502  jmp 0x2f70               ; 0x7fc7cfab7af0
0x7fc7cfab7507  sarq $0x1, %rbx         
0x7fc7cfab750a  invalid                 
0x7fc7cfab750b  loope 0x2988             ; 0x7fc7cfab7608
0x7fc7cfab750d  sub %bl, %al            
0x7fc7cfab750f  invalid                 
0x7fc7cfab7510  sti                     
0x7fc7cfab7511  pop %rcx                
0x7fc7cfab7512  sbb %al, %bpl           
0x7fc7cfab7515  sti                     
0x7fc7cfab7516  adc %eax, -0x330(%rbp)  
0x7fc7cfab751c  mov %r14, %rdi          
0x7fc7cfab751f  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7529  callq *%rax             
0x7fc7cfab752b  invalid                 
0x7fc7cfab752c  sti                     
0x7fc7cfab752d  adc %al, -0x330(%rbp)   
0x7fc7cfab7533  invalid                 
0x7fc7cfab7534  sti                     
0x7fc7cfab7535  adc %eax, 0x18(%rax)    
0x7fc7cfab7538  jmp 0x19b1               ; 0x7fc7cfab6531
0x7fc7cfab753d  sarq $0x1, %rax         
0x7fc7cfab7540  invalid                 
0x7fc7cfab7541  loope 0x29be             ; 0x7fc7cfab763e
0x7fc7cfab7543  sub %al, %al            
0x7fc7cfab7545  mov %rbx, %r12          
0x7fc7cfab7548  invalid                 
0x7fc7cfab7549  sti                     
0x7fc7cfab754a  adc %cl, 0x18(%rcx)     
0x7fc7cfab754d  invalid                 
0x7fc7cfab754e  rep pop %rsi            
0x7fc7cfab7550  rolb $0xfb, %ch         
0x7fc7cfab7553  adc %eax, -0x330(%rbp)  
0x7fc7cfab7559  mov %r14, %rdi          
0x7fc7cfab755c  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7566  callq *%rax             
0x7fc7cfab7568  mov %rax, %r13          
0x7fc7cfab756b  invalid                 
0x7fc7cfab756c  sti                     
0x7fc7cfab756d  adc %al, -0x330(%rbp)   
0x7fc7cfab7573  invalid                 
0x7fc7cfab7574  sar $0x45, 0x11(%rbx)   
0x7fc7cfab7578  sbb %ch, %cl            
0x7fc7cfab757a  jz 0x29ec                ; 0x7fc7cfab766c
0x7fc7cfab757c  invalid                 
0x7fc7cfab757e  testb $0x1, %cl         
0x7fc7cfab7581  jnz 0x2f68               ; 0x7fc7cfab7ae8
0x7fc7cfab7587  mov %rax, -0x50(%rbp)   
0x7fc7cfab758b  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab7593  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab759b  mov $0x1, -0x40(%rbp)   
0x7fc7cfab75a2  movq $0x0, -0x30(%rbp)  
0x7fc7cfab75aa  lea -0x198(%rbp), %rax  
0x7fc7cfab75b1  mov %rax, -0x38(%rbp)   
0x7fc7cfab75b5  mov 0x1952078, %rsi     
0x7fc7cfab75bd  mov 0x20(%rsi), %rax    
0x7fc7cfab75c1  mov $0xf8, -0x1d4(%rbp) 
0x7fc7cfab75cb  mov %r14, %rdi          
0x7fc7cfab75ce  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab75d5  mov %r15, %rcx          
0x7fc7cfab75d8  callq *%rax             
0x7fc7cfab75da  test %rax, %rax         
0x7fc7cfab75dd  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab75e3  mov -0x1a8(%rbp), %rbx  
0x7fc7cfab75ea  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab75f1  testb $0x3, %bl         
0x7fc7cfab75f4  jnz 0x2afb               ; 0x7fc7cfab767b
0x7fc7cfab75fa  mov 0x8(%rbx), %rcx     
0x7fc7cfab75fe  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7602  jnz 0x2afb               ; 0x7fc7cfab767b
0x7fc7cfab7608  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab760f  jnz 0x3a7a               ; 0x7fc7cfab85fa
0x7fc7cfab7615  testb $0x3, %al         
0x7fc7cfab7618  jnz 0x2af2               ; 0x7fc7cfab7672
0x7fc7cfab761e  mov 0x8(%rax), %rcx     
0x7fc7cfab7622  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7626  jnz 0x2af2               ; 0x7fc7cfab7672
0x7fc7cfab762c  invalid                 
0x7fc7cfab762d  sti                     
0x7fc7cfab762e  adc %al, 0x18(%rax)     
0x7fc7cfab7631  jmp 0x2fa6               ; 0x7fc7cfab7b26
0x7fc7cfab7636  mov %r13, %rcx          
0x7fc7cfab7639  sarq $0x1, %rcx         
0x7fc7cfab763c  invalid                 
0x7fc7cfab763d  loope 0x2aba             ; 0x7fc7cfab773a
0x7fc7cfab763f  sub %cl, %al            
0x7fc7cfab7641  invalid                 
0x7fc7cfab7642  sti                     
0x7fc7cfab7643  pop %rcx                
0x7fc7cfab7644  sbb %al, %bpl           
0x7fc7cfab7647  sti                     
0x7fc7cfab7648  adc %eax, -0x330(%rbp)  
0x7fc7cfab764e  mov %r14, %rdi          
0x7fc7cfab7651  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab765b  callq *%rax             
0x7fc7cfab765d  mov %rax, %rbx          
0x7fc7cfab7660  invalid                 
0x7fc7cfab7661  sti                     
0x7fc7cfab7662  adc %al, -0x330(%rbp)   
0x7fc7cfab7668  invalid                 
0x7fc7cfab7669  sti                     
0x7fc7cfab766a  adc %eax, 0x18(%rbx)    
0x7fc7cfab766d  jmp 0x1b95               ; 0x7fc7cfab6715
0x7fc7cfab7672  testb $0x1, %al         
0x7fc7cfab7675  jnz 0x2f9e               ; 0x7fc7cfab7b1e
0x7fc7cfab767b  mov %rbx, -0x50(%rbp)   
0x7fc7cfab767f  movq $0x55e, -0x58(%rbp)
0x7fc7cfab7687  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab768f  mov $0x1, -0x40(%rbp)   
0x7fc7cfab7696  movq $0x0, -0x30(%rbp)  
0x7fc7cfab769e  lea -0x1a0(%rbp), %rax  
0x7fc7cfab76a5  mov %rax, -0x38(%rbp)   
0x7fc7cfab76a9  mov 0x1952090, %rsi     
0x7fc7cfab76b1  mov 0x20(%rsi), %rax    
0x7fc7cfab76b5  mov $0xfb, -0x1d4(%rbp) 
0x7fc7cfab76bf  mov %r14, %rdi          
0x7fc7cfab76c2  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab76c9  mov %r15, %rcx          
0x7fc7cfab76cc  callq *%rax             
0x7fc7cfab76ce  test %rax, %rax         
0x7fc7cfab76d1  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab76d7  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab76de  mov -0x1b0(%rbp), %rsi  
0x7fc7cfab76e5  mov %rsi, -0x1a8(%rbp)  
0x7fc7cfab76ec  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab76f3  testb $0x3, %sil        
0x7fc7cfab76f7  mov %r12, %rbx          
0x7fc7cfab76fa  jnz 0x3364               ; 0x7fc7cfab7ee4
0x7fc7cfab7700  mov 0x8(%rsi), %rcx     
0x7fc7cfab7704  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab770b  jnz 0x3364               ; 0x7fc7cfab7ee4
0x7fc7cfab7711  cmp $0x2, 0x74(%rcx)    
0x7fc7cfab7715  jnz 0x3400               ; 0x7fc7cfab7f80
0x7fc7cfab771b  mov %rax, 0x40(%rsi)    
0x7fc7cfab771f  testb $0x3, %al         
0x7fc7cfab7722  jnz 0x2bf1               ; 0x7fc7cfab7771
0x7fc7cfab7728  mov 0x15853f8, %edx     
0x7fc7cfab772f  mov (%rsi), %rcx        
0x7fc7cfab7732  mov %rcx, %rdi          
0x7fc7cfab7735  andq $0x380000, %rdi    
0x7fc7cfab773c  inc %edx                
0x7fc7cfab773e  shlq $0x13, %rdx        
0x7fc7cfab7742  cmp %rdx, %rdi          
0x7fc7cfab7745  jz 0x2bdf                ; 0x7fc7cfab775f
0x7fc7cfab774b  andq $0x300, %rcx       
0x7fc7cfab7752  cmpq $0x200, %rcx       
0x7fc7cfab7759  jz 0x2bf1                ; 0x7fc7cfab7771
0x7fc7cfab775f  mov %r14, %rdi          
0x7fc7cfab7762  mov %rax, %rdx          
0x7fc7cfab7765  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab776f  callq *%rax             
0x7fc7cfab7771  mov -0x240(%rbp), %rax  
0x7fc7cfab7778  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab777f  movq $0x3, -0x1a8(%rbp) 
0x7fc7cfab778a  testb $0x1, %al         
0x7fc7cfab778d  jnz 0x2c77               ; 0x7fc7cfab77f7
0x7fc7cfab7793  mov %rbx, %r12          
0x7fc7cfab7796  mov %rax, -0x50(%rbp)   
0x7fc7cfab779a  movq $0x55e, -0x58(%rbp)
0x7fc7cfab77a2  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab77aa  mov $0x1, -0x40(%rbp)   
0x7fc7cfab77b1  movq $0x0, -0x30(%rbp)  
0x7fc7cfab77b9  lea -0x1a8(%rbp), %rax  
0x7fc7cfab77c0  mov %rax, -0x38(%rbp)   
0x7fc7cfab77c4  mov 0x1952100, %rsi     
0x7fc7cfab77cc  mov 0x20(%rsi), %rax    
0x7fc7cfab77d0  mov $0x109, -0x1d4(%rbp)
0x7fc7cfab77da  mov %r14, %rdi          
0x7fc7cfab77dd  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab77e4  mov %r15, %rcx          
0x7fc7cfab77e7  callq *%rax             
0x7fc7cfab77e9  test %rax, %rax         
0x7fc7cfab77ec  jnz 0x2cba               ; 0x7fc7cfab783a
0x7fc7cfab77f2  jmp 0x4477               ; 0x7fc7cfab8ff7
0x7fc7cfab77f7  sarq $0x1, %rax         
0x7fc7cfab77fa  lea 0x1(%rax), %rsi     
0x7fc7cfab77fe  mov $0x4000000000000000, %rcx
0x7fc7cfab7808  add %rcx, %rax          
0x7fc7cfab780b  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfab7815  mov %rbx, %r12          
0x7fc7cfab7818  cmp %rcx, %rax          
0x7fc7cfab781b  ja 0x2cab                ; 0x7fc7cfab782b
0x7fc7cfab7821  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfab7826  jmp 0x2cba               ; 0x7fc7cfab783a
0x7fc7cfab782b  mov %r14, %rdi          
0x7fc7cfab782e  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfab7838  callq *%rax             
0x7fc7cfab783a  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab7841  mov %rax, -0x240(%rbp)  
0x7fc7cfab7848  mov 0x8(%r14), %rcx     
0x7fc7cfab784c  mov 0x158251e, %dl      
0x7fc7cfab7853  or 0x16(%rcx), %dl      
0x7fc7cfab7856  jz 0x622                 ; 0x7fc7cfab51a2
0x7fc7cfab785c  mov $0x10f, -0x1d4(%rbp)
0x7fc7cfab7866  mov %r14, %rdi          
0x7fc7cfab7869  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab7870  mov $0x763000, %rax      ; rbx_check_interrupts
0x7fc7cfab787a  callq *%rax             
0x7fc7cfab787c  test %rax, %rax         
0x7fc7cfab787f  jnz 0x61b                ; 0x7fc7cfab519b
0x7fc7cfab7885  jmp 0x4477               ; 0x7fc7cfab8ff7
0x7fc7cfab788a  sarq $0x1, %r13         
0x7fc7cfab788d  invalid                 
0x7fc7cfab788e  sar $0x2a, %ebx         
0x7fc7cfab7891  invalid                 
0x7fc7cfab7892  invalid                 
0x7fc7cfab7893  sti                     
0x7fc7cfab7894  pop %rcx                
0x7fc7cfab7895  sbb %al, %bpl           
0x7fc7cfab7898  sti                     
0x7fc7cfab7899  adc %eax, -0x330(%rbp)  
0x7fc7cfab789f  mov %r14, %rdi          
0x7fc7cfab78a2  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab78ac  callq *%rax             
0x7fc7cfab78ae  invalid                 
0x7fc7cfab78af  sti                     
0x7fc7cfab78b0  adc %al, -0x330(%rbp)   
0x7fc7cfab78b6  invalid                 
0x7fc7cfab78b7  sti                     
0x7fc7cfab78b8  adc %eax, 0x18(%rax)    
0x7fc7cfab78bb  jmp 0x1c7d               ; 0x7fc7cfab67fd
0x7fc7cfab78c0  sarq $0x1, %r13         
0x7fc7cfab78c3  invalid                 
0x7fc7cfab78c4  sar $0x2a, %ebx         
0x7fc7cfab78c7  invalid                 
0x7fc7cfab78c8  invalid                 
0x7fc7cfab78c9  sti                     
0x7fc7cfab78ca  pop %rcx                
0x7fc7cfab78cb  sbb %al, %bpl           
0x7fc7cfab78ce  sti                     
0x7fc7cfab78cf  adc %eax, -0x330(%rbp)  
0x7fc7cfab78d5  mov %r14, %rdi          
0x7fc7cfab78d8  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab78e2  callq *%rax             
0x7fc7cfab78e4  invalid                 
0x7fc7cfab78e5  sti                     
0x7fc7cfab78e6  adc %al, -0x330(%rbp)   
0x7fc7cfab78ec  invalid                 
0x7fc7cfab78ed  sti                     
0x7fc7cfab78ee  adc %eax, 0x18(%rax)    
0x7fc7cfab78f1  jmp 0x1dfa               ; 0x7fc7cfab697a
0x7fc7cfab78f6  sarq $0x1, %rax         
0x7fc7cfab78f9  invalid                 
0x7fc7cfab78fa  loope 0x2d77             ; 0x7fc7cfab79f7
0x7fc7cfab78fc  sub %al, %al            
0x7fc7cfab78fe  invalid                 
0x7fc7cfab78ff  sti                     
0x7fc7cfab7900  adc %cl, 0x18(%rbx)     
0x7fc7cfab7903  invalid                 
0x7fc7cfab7904  rep pop %rsp            
0x7fc7cfab7906  rolb $0xfb, %ch         
0x7fc7cfab7909  adc %eax, -0x330(%rbp)  
0x7fc7cfab790f  mov %r14, %rdi          
0x7fc7cfab7912  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab791c  callq *%rax             
0x7fc7cfab791e  invalid                 
0x7fc7cfab791f  sti                     
0x7fc7cfab7920  adc %al, -0x330(%rbp)   
0x7fc7cfab7926  invalid                 
0x7fc7cfab7927  sti                     
0x7fc7cfab7928  adc %eax, 0x18(%rax)    
0x7fc7cfab792b  jmp 0x1eab               ; 0x7fc7cfab6a2b
0x7fc7cfab7930  sarq $0x1, %rcx         
0x7fc7cfab7933  invalid                 
0x7fc7cfab7934  loope 0x2db1             ; 0x7fc7cfab7a31
0x7fc7cfab7936  sub %cl, %al            
0x7fc7cfab7938  invalid                 
0x7fc7cfab7939  sti                     
0x7fc7cfab793a  pop %rcx                
0x7fc7cfab793b  sbb %al, %bpl           
0x7fc7cfab793e  sti                     
0x7fc7cfab793f  adc %eax, -0x330(%rbp)  
0x7fc7cfab7945  mov %r14, %rdi          
0x7fc7cfab7948  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7952  callq *%rax             
0x7fc7cfab7954  invalid                 
0x7fc7cfab7955  sti                     
0x7fc7cfab7956  adc %al, -0x330(%rbp)   
0x7fc7cfab795c  invalid                 
0x7fc7cfab795d  sti                     
0x7fc7cfab795e  adc %eax, 0x18(%rax)    
0x7fc7cfab7961  jmp 0x2086               ; 0x7fc7cfab6c06
0x7fc7cfab7966  sarq $0x1, %rax         
0x7fc7cfab7969  invalid                 
0x7fc7cfab796a  loope 0x2de7             ; 0x7fc7cfab7a67
0x7fc7cfab796c  sub %al, %al            
0x7fc7cfab796e  invalid                 
0x7fc7cfab796f  sti                     
0x7fc7cfab7970  adc %cl, 0x18(%rbx)     
0x7fc7cfab7973  invalid                 
0x7fc7cfab7974  rep pop %rsp            
0x7fc7cfab7976  rolb $0xfb, %ch         
0x7fc7cfab7979  adc %eax, -0x330(%rbp)  
0x7fc7cfab797f  mov %r14, %rdi          
0x7fc7cfab7982  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab798c  callq *%rax             
0x7fc7cfab798e  invalid                 
0x7fc7cfab798f  sti                     
0x7fc7cfab7990  adc %al, -0x330(%rbp)   
0x7fc7cfab7996  invalid                 
0x7fc7cfab7997  sti                     
0x7fc7cfab7998  adc %eax, 0x18(%rax)    
0x7fc7cfab799b  jmp 0x2137               ; 0x7fc7cfab6cb7
0x7fc7cfab79a0  sarq $0x1, %rcx         
0x7fc7cfab79a3  invalid                 
0x7fc7cfab79a4  loope 0x2e21             ; 0x7fc7cfab7aa1
0x7fc7cfab79a6  sub %cl, %al            
0x7fc7cfab79a8  invalid                 
0x7fc7cfab79a9  sti                     
0x7fc7cfab79aa  pop %rcx                
0x7fc7cfab79ab  sbb %al, %bpl           
0x7fc7cfab79ae  sti                     
0x7fc7cfab79af  adc %eax, -0x330(%rbp)  
0x7fc7cfab79b5  mov %r14, %rdi          
0x7fc7cfab79b8  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab79c2  callq *%rax             
0x7fc7cfab79c4  invalid                 
0x7fc7cfab79c5  sti                     
0x7fc7cfab79c6  adc %al, -0x330(%rbp)   
0x7fc7cfab79cc  invalid                 
0x7fc7cfab79cd  sti                     
0x7fc7cfab79ce  adc %eax, 0x18(%rax)    
0x7fc7cfab79d1  jmp 0x2312               ; 0x7fc7cfab6e92
0x7fc7cfab79d6  sarq $0x1, %rax         
0x7fc7cfab79d9  invalid                 
0x7fc7cfab79da  loope 0x2e57             ; 0x7fc7cfab7ad7
0x7fc7cfab79dc  sub %al, %al            
0x7fc7cfab79de  invalid                 
0x7fc7cfab79df  sti                     
0x7fc7cfab79e0  adc %cl, 0x18(%rbx)     
0x7fc7cfab79e3  invalid                 
0x7fc7cfab79e4  rep pop %rsp            
0x7fc7cfab79e6  rolb $0xfb, %ch         
0x7fc7cfab79e9  adc %eax, -0x330(%rbp)  
0x7fc7cfab79ef  mov %r14, %rdi          
0x7fc7cfab79f2  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab79fc  callq *%rax             
0x7fc7cfab79fe  invalid                 
0x7fc7cfab79ff  sti                     
0x7fc7cfab7a00  adc %al, -0x330(%rbp)   
0x7fc7cfab7a06  invalid                 
0x7fc7cfab7a07  sti                     
0x7fc7cfab7a08  adc %eax, 0x18(%rax)    
0x7fc7cfab7a0b  jmp 0x23c3               ; 0x7fc7cfab6f43
0x7fc7cfab7a10  sarq $0x1, %rcx         
0x7fc7cfab7a13  invalid                 
0x7fc7cfab7a14  loope 0x2e91             ; 0x7fc7cfab7b11
0x7fc7cfab7a16  sub %cl, %al            
0x7fc7cfab7a18  invalid                 
0x7fc7cfab7a19  sti                     
0x7fc7cfab7a1a  pop %rcx                
0x7fc7cfab7a1b  sbb %al, %bpl           
0x7fc7cfab7a1e  sti                     
0x7fc7cfab7a1f  adc %eax, -0x330(%rbp)  
0x7fc7cfab7a25  mov %r14, %rdi          
0x7fc7cfab7a28  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7a32  callq *%rax             
0x7fc7cfab7a34  invalid                 
0x7fc7cfab7a35  sti                     
0x7fc7cfab7a36  adc %al, -0x330(%rbp)   
0x7fc7cfab7a3c  invalid                 
0x7fc7cfab7a3d  sti                     
0x7fc7cfab7a3e  adc %eax, 0x18(%rax)    
0x7fc7cfab7a41  jmp 0x256a               ; 0x7fc7cfab70ea
0x7fc7cfab7a46  sarq $0x1, %rax         
0x7fc7cfab7a49  invalid                 
0x7fc7cfab7a4a  loope 0x2ec7             ; 0x7fc7cfab7b47
0x7fc7cfab7a4c  sub %al, %al            
0x7fc7cfab7a4e  invalid                 
0x7fc7cfab7a4f  sti                     
0x7fc7cfab7a50  pop %rax                
0x7fc7cfab7a51  sbb %al, %r13b          
0x7fc7cfab7a54  sti                     
0x7fc7cfab7a55  adc %eax, -0x330(%rbp)  
0x7fc7cfab7a5b  mov %r14, %rdi          
0x7fc7cfab7a5e  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7a68  callq *%rax             
0x7fc7cfab7a6a  invalid                 
0x7fc7cfab7a6b  sti                     
0x7fc7cfab7a6c  adc %al, -0x330(%rbp)   
0x7fc7cfab7a72  invalid                 
0x7fc7cfab7a73  sti                     
0x7fc7cfab7a74  adc %eax, 0x18(%rax)    
0x7fc7cfab7a77  jmp 0x261b               ; 0x7fc7cfab719b
0x7fc7cfab7a7c  sarq $0x1, %rcx         
0x7fc7cfab7a7f  invalid                 
0x7fc7cfab7a80  loope 0x2efd             ; 0x7fc7cfab7b7d
0x7fc7cfab7a82  sub %cl, %al            
0x7fc7cfab7a84  invalid                 
0x7fc7cfab7a85  sti                     
0x7fc7cfab7a86  pop %rcx                
0x7fc7cfab7a87  sbb %al, %bpl           
0x7fc7cfab7a8a  sti                     
0x7fc7cfab7a8b  adc %eax, -0x330(%rbp)  
0x7fc7cfab7a91  mov %r14, %rdi          
0x7fc7cfab7a94  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7a9e  callq *%rax             
0x7fc7cfab7aa0  invalid                 
0x7fc7cfab7aa1  sti                     
0x7fc7cfab7aa2  adc %al, -0x330(%rbp)   
0x7fc7cfab7aa8  invalid                 
0x7fc7cfab7aa9  sti                     
0x7fc7cfab7aaa  adc %eax, 0x18(%rax)    
0x7fc7cfab7aad  jmp 0x27ab               ; 0x7fc7cfab732b
0x7fc7cfab7ab2  sarq $0x1, %rax         
0x7fc7cfab7ab5  invalid                 
0x7fc7cfab7ab6  loope 0x2f33             ; 0x7fc7cfab7bb3
0x7fc7cfab7ab8  sub %al, %al            
0x7fc7cfab7aba  invalid                 
0x7fc7cfab7abb  sti                     
0x7fc7cfab7abc  pop %rax                
0x7fc7cfab7abd  sbb %al, %r13b          
0x7fc7cfab7ac0  sti                     
0x7fc7cfab7ac1  adc %eax, -0x330(%rbp)  
0x7fc7cfab7ac7  mov %r14, %rdi          
0x7fc7cfab7aca  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7ad4  callq *%rax             
0x7fc7cfab7ad6  invalid                 
0x7fc7cfab7ad7  sti                     
0x7fc7cfab7ad8  adc %al, -0x330(%rbp)   
0x7fc7cfab7ade  invalid                 
0x7fc7cfab7adf  sti                     
0x7fc7cfab7ae0  adc %eax, 0x18(%rax)    
0x7fc7cfab7ae3  jmp 0x285c               ; 0x7fc7cfab73dc
0x7fc7cfab7ae8  sarq $0x1, %rcx         
0x7fc7cfab7aeb  invalid                 
0x7fc7cfab7aec  loope 0x2f69             ; 0x7fc7cfab7be9
0x7fc7cfab7aee  sub %cl, %al            
0x7fc7cfab7af0  invalid                 
0x7fc7cfab7af1  sti                     
0x7fc7cfab7af2  pop %rcx                
0x7fc7cfab7af3  sbb %al, %bpl           
0x7fc7cfab7af6  sti                     
0x7fc7cfab7af7  adc %eax, -0x330(%rbp)  
0x7fc7cfab7afd  mov %r14, %rdi          
0x7fc7cfab7b00  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7b0a  callq *%rax             
0x7fc7cfab7b0c  invalid                 
0x7fc7cfab7b0d  sti                     
0x7fc7cfab7b0e  adc %al, -0x330(%rbp)   
0x7fc7cfab7b14  invalid                 
0x7fc7cfab7b15  sti                     
0x7fc7cfab7b16  adc %eax, 0x18(%rax)    
0x7fc7cfab7b19  jmp 0x2a6a               ; 0x7fc7cfab75ea
0x7fc7cfab7b1e  sarq $0x1, %rax         
0x7fc7cfab7b21  invalid                 
0x7fc7cfab7b22  loope 0x2f9f             ; 0x7fc7cfab7c1f
0x7fc7cfab7b24  sub %al, %al            
0x7fc7cfab7b26  invalid                 
0x7fc7cfab7b27  sti                     
0x7fc7cfab7b28  pop %rax                
0x7fc7cfab7b29  sbb %al, %r13b          
0x7fc7cfab7b2c  sti                     
0x7fc7cfab7b2d  adc %eax, -0x330(%rbp)  
0x7fc7cfab7b33  mov %r14, %rdi          
0x7fc7cfab7b36  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab7b40  callq *%rax             
0x7fc7cfab7b42  invalid                 
0x7fc7cfab7b43  sti                     
0x7fc7cfab7b44  adc %al, -0x330(%rbp)   
0x7fc7cfab7b4a  invalid                 
0x7fc7cfab7b4b  sti                     
0x7fc7cfab7b4c  adc %eax, 0x18(%rax)    
0x7fc7cfab7b4f  jmp 0x2b57               ; 0x7fc7cfab76d7
0x7fc7cfab7b54  mov %rax, -0x2a8(%rbp)  
0x7fc7cfab7b5b  mov -0x2f8(%rbp), %rsi  
0x7fc7cfab7b62  mov %rsi, -0x2a0(%rbp)  
0x7fc7cfab7b69  testb $0x3, %al         
0x7fc7cfab7b6c  mov %r12, %rbx          
0x7fc7cfab7b6f  jnz 0x30a2               ; 0x7fc7cfab7c22
0x7fc7cfab7b75  mov 0x8(%rax), %rax     
0x7fc7cfab7b79  cmp $0x1fb, 0x70(%rax)  
0x7fc7cfab7b80  jnz 0x30a2               ; 0x7fc7cfab7c22
0x7fc7cfab7b86  cmp $0xd2, 0x74(%rax)   
0x7fc7cfab7b8d  jnz 0x30f7               ; 0x7fc7cfab7c77
0x7fc7cfab7b93  mov %r14, %rdi          
0x7fc7cfab7b96  lea -0x59(%rbp), %rdx   
0x7fc7cfab7b9a  mov $0x763f90, %rax      ; rbx_ffi_to_double
0x7fc7cfab7ba4  callq *%rax             
0x7fc7cfab7ba6  mov -0x59(%rbp), %al    
0x7fc7cfab7ba9  test %al, %al           
0x7fc7cfab7bab  jz 0x30a2                ; 0x7fc7cfab7c22
0x7fc7cfab7bb1  mov %rbx, %r12          
0x7fc7cfab7bb4  mov %r14, %rdi          
0x7fc7cfab7bb7  mov %r13, %rsi          
0x7fc7cfab7bba  mov $0x763090, %rax      ; rbx_enter_unmanaged
0x7fc7cfab7bc4  invalid                 
0x7fc7cfab7bc5  sti                     
0x7fc7cfab7bc6  adc %eax, -0x330(%rbp)  
0x7fc7cfab7bcc  callq *%rax             
0x7fc7cfab7bce  invalid                 
0x7fc7cfab7bcf  sti                     
0x7fc7cfab7bd0  adc %al, -0x330(%rbp)   
0x7fc7cfab7bd6  mov $0x7fc7cf6b68a0, %rax ; sqrt
0x7fc7cfab7be0  callq *%rax             
0x7fc7cfab7be2  invalid                 
0x7fc7cfab7be3  sti                     
0x7fc7cfab7be4  adc %eax, -0x330(%rbp)  
0x7fc7cfab7bea  mov %r14, %rdi          
0x7fc7cfab7bed  mov %r13, %rsi          
0x7fc7cfab7bf0  mov $0x7630b0, %rax      ; rbx_exit_unmanaged
0x7fc7cfab7bfa  callq *%rax             
0x7fc7cfab7bfc  mov %r14, %rdi          
0x7fc7cfab7bff  invalid                 
0x7fc7cfab7c00  sti                     
0x7fc7cfab7c01  adc %al, -0x330(%rbp)   
0x7fc7cfab7c07  mov $0x764180, %rax      ; rbx_ffi_from_double
0x7fc7cfab7c11  callq *%rax             
0x7fc7cfab7c13  mov %rax, %rbx          
0x7fc7cfab7c16  mov %rbx, -0x2a8(%rbp)  
0x7fc7cfab7c1d  jmp 0x1814               ; 0x7fc7cfab6394
0x7fc7cfab7c22  mov $0x43, -0x2cc(%rbp) 
0x7fc7cfab7c2c  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7c36  mov %rax, (%rsp)        
0x7fc7cfab7c3a  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7c42  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7c4a  mov $0x43, %edx         
0x7fc7cfab7c4f  mov $0x1, %ecx          
0x7fc7cfab7c54  xor %r9d, %r9d          
0x7fc7cfab7c57  mov %r14, %rdi          
0x7fc7cfab7c5a  mov %r13, %rsi          
0x7fc7cfab7c5d  mov %rbx, %r8           
0x7fc7cfab7c60  mov %rbx, %r12          
0x7fc7cfab7c63  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab7c6d  callq *%rax             
0x7fc7cfab7c6f  mov %rax, %rbx          
0x7fc7cfab7c72  jmp 0x1814               ; 0x7fc7cfab6394
0x7fc7cfab7c77  mov $0x43, -0x2cc(%rbp) 
0x7fc7cfab7c81  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7c8b  mov %rax, (%rsp)        
0x7fc7cfab7c8f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7c97  jmp 0x30c2               ; 0x7fc7cfab7c42
0x7fc7cfab7c9c  mov %r15, %r13          
0x7fc7cfab7c9f  mov $0x17, -0x1d4(%rbp) 
0x7fc7cfab7ca9  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7cb3  mov %rax, (%rsp)        
0x7fc7cfab7cb7  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7cbf  jmp 0x31d5               ; 0x7fc7cfab7d55
0x7fc7cfab7cc4  mov %r15, %r13          
0x7fc7cfab7cc7  mov $0x57, -0x1d4(%rbp) 
0x7fc7cfab7cd1  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7cdb  mov %rax, (%rsp)        
0x7fc7cfab7cdf  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7ce7  jmp 0x3315               ; 0x7fc7cfab7e95
0x7fc7cfab7cec  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab7cf7  mov -0x278(%rbp), %rbx  
0x7fc7cfab7cfe  mov %rbx, %r15          
0x7fc7cfab7d01  andq $0x3, %r15         
0x7fc7cfab7d05  jnz 0x31e7               ; 0x7fc7cfab7d67
0x7fc7cfab7d0b  mov 0x8(%rbx), %rax     
0x7fc7cfab7d0f  cmp $0x505, 0x70(%rax)  
0x7fc7cfab7d16  jnz 0x31e7               ; 0x7fc7cfab7d67
0x7fc7cfab7d1c  mov 0x18(%rbx), %rcx    
0x7fc7cfab7d20  cmpq $0x22, %rcx        
0x7fc7cfab7d24  mov $0x1a, %eax         
0x7fc7cfab7d29  cmovz %rax, %rcx        
0x7fc7cfab7d2d  jmp 0x3201               ; 0x7fc7cfab7d81
0x7fc7cfab7d32  mov %r15, %r13          
0x7fc7cfab7d35  mov $0x17, -0x1d4(%rbp) 
0x7fc7cfab7d3f  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7d49  mov %rax, (%rsp)        
0x7fc7cfab7d4d  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7d55  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7d5d  mov $0x17, %edx         
0x7fc7cfab7d62  jmp 0x3322               ; 0x7fc7cfab7ea2
0x7fc7cfab7d67  mov $0x10056, %edx      
0x7fc7cfab7d6c  mov %r14, %rdi          
0x7fc7cfab7d6f  mov %rbx, %rsi          
0x7fc7cfab7d72  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab7d7c  callq *%rax             
0x7fc7cfab7d7e  mov %rax, %rcx          
0x7fc7cfab7d81  mov %rcx, -0x1b0(%rbp)  
0x7fc7cfab7d88  mov -0x248(%rbp), %r13  
0x7fc7cfab7d8f  mov %r13, -0x1a8(%rbp)  
0x7fc7cfab7d96  movq $0x1a, -0x1a0(%rbp)
0x7fc7cfab7da1  test %r15, %r15         
0x7fc7cfab7da4  jnz 0x3258               ; 0x7fc7cfab7dd8
0x7fc7cfab7daa  mov 0x8(%rbx), %rax     
0x7fc7cfab7dae  cmp $0x505, 0x70(%rax)  
0x7fc7cfab7db5  jnz 0x3258               ; 0x7fc7cfab7dd8
0x7fc7cfab7dbb  mov %rcx, -0x330(%rbp)  
0x7fc7cfab7dc2  mov 0x30(%rbx), %rcx    
0x7fc7cfab7dc6  cmpq $0x22, %rcx        
0x7fc7cfab7dca  mov $0x1a, %eax         
0x7fc7cfab7dcf  cmovnz %rcx, %rax       
0x7fc7cfab7dd3  jmp 0x3276               ; 0x7fc7cfab7df6
0x7fc7cfab7dd8  mov %rcx, -0x330(%rbp)  
0x7fc7cfab7ddf  mov $0x1006e, %edx      
0x7fc7cfab7de4  mov %r14, %rdi          
0x7fc7cfab7de7  mov %rbx, %rsi          
0x7fc7cfab7dea  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab7df4  callq *%rax             
0x7fc7cfab7df6  lea -0x58(%rbp), %r15   
0x7fc7cfab7dfa  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab7e01  testb $0x3, %r13b       
0x7fc7cfab7e05  mov %r12, %rbx          
0x7fc7cfab7e08  jnz 0x38a3               ; 0x7fc7cfab8423
0x7fc7cfab7e0e  mov 0x8(%r13), %rcx     
0x7fc7cfab7e12  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7e16  jnz 0x38a3               ; 0x7fc7cfab8423
0x7fc7cfab7e1c  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab7e23  jnz 0x36d9               ; 0x7fc7cfab8259
0x7fc7cfab7e29  testb $0x3, %al         
0x7fc7cfab7e2c  jnz 0x389a               ; 0x7fc7cfab841a
0x7fc7cfab7e32  mov 0x8(%rax), %rcx     
0x7fc7cfab7e36  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab7e3a  jnz 0x389a               ; 0x7fc7cfab841a
0x7fc7cfab7e40  invalid                 
0x7fc7cfab7e41  sti                     
0x7fc7cfab7e42  adc %al, 0x18(%rax)     
0x7fc7cfab7e45  jmp 0x3b12               ; 0x7fc7cfab8692
0x7fc7cfab7e4a  mov %r15, %r13          
0x7fc7cfab7e4d  mov $0xd1, -0x1d4(%rbp) 
0x7fc7cfab7e57  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7e61  mov %rax, (%rsp)        
0x7fc7cfab7e65  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7e6d  jmp 0x33af               ; 0x7fc7cfab7f2f
0x7fc7cfab7e72  mov %r15, %r13          
0x7fc7cfab7e75  mov $0x57, -0x1d4(%rbp) 
0x7fc7cfab7e7f  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7e89  mov %rax, (%rsp)        
0x7fc7cfab7e8d  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7e95  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7e9d  mov $0x57, %edx         
0x7fc7cfab7ea2  mov $0x1, %ecx          
0x7fc7cfab7ea7  xor %r9d, %r9d          
0x7fc7cfab7eaa  mov %r14, %rdi          
0x7fc7cfab7ead  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab7eb4  mov %r12, %rbx          
0x7fc7cfab7eb7  jmp 0x3af6               ; 0x7fc7cfab8676
0x7fc7cfab7ebc  mov %r15, %r13          
0x7fc7cfab7ebf  mov $0xe9, -0x1d4(%rbp) 
0x7fc7cfab7ec9  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7ed3  mov %rax, (%rsp)        
0x7fc7cfab7ed7  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7edf  jmp 0x33e9               ; 0x7fc7cfab7f69
0x7fc7cfab7ee4  mov %r15, %r13          
0x7fc7cfab7ee7  mov $0x101, -0x1d4(%rbp)
0x7fc7cfab7ef1  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7efb  mov %rax, (%rsp)        
0x7fc7cfab7eff  mov $0x0, 0x10(%rsp)    
0x7fc7cfab7f07  jmp 0x3423               ; 0x7fc7cfab7fa3
0x7fc7cfab7f0c  mov %r15, %r13          
0x7fc7cfab7f0f  mov $0xd1, -0x1d4(%rbp) 
0x7fc7cfab7f19  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7f23  mov %rax, (%rsp)        
0x7fc7cfab7f27  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7f2f  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7f37  mov $0xd1, %edx         
0x7fc7cfab7f3c  mov $0x2, %ecx          
0x7fc7cfab7f41  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab7f46  mov %r15, %r13          
0x7fc7cfab7f49  mov $0xe9, -0x1d4(%rbp) 
0x7fc7cfab7f53  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7f5d  mov %rax, (%rsp)        
0x7fc7cfab7f61  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7f69  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7f71  mov $0xe9, %edx         
0x7fc7cfab7f76  mov $0x2, %ecx          
0x7fc7cfab7f7b  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab7f80  mov %r15, %r13          
0x7fc7cfab7f83  mov $0x101, -0x1d4(%rbp)
0x7fc7cfab7f8d  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7f97  mov %rax, (%rsp)        
0x7fc7cfab7f9b  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7fa3  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7fab  mov $0x101, %edx        
0x7fc7cfab7fb0  mov $0x2, %ecx          
0x7fc7cfab7fb5  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab7fba  mov %r15, %r13          
0x7fc7cfab7fbd  mov $0x1a, -0x1d4(%rbp) 
0x7fc7cfab7fc7  mov $0x7fc7b4003d70, %rax
0x7fc7cfab7fd1  mov %rax, (%rsp)        
0x7fc7cfab7fd5  mov $0x1, 0x10(%rsp)    
0x7fc7cfab7fdd  mov $0x0, 0x8(%rsp)     
0x7fc7cfab7fe5  mov $0x1a, %edx         
0x7fc7cfab7fea  jmp 0x3ae4               ; 0x7fc7cfab8664
0x7fc7cfab7fef  mov %r15, %r13          
0x7fc7cfab7ff2  mov $0x27, -0x1d4(%rbp) 
0x7fc7cfab7ffc  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8006  mov %rax, (%rsp)        
0x7fc7cfab800a  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8012  mov $0x0, 0x8(%rsp)     
0x7fc7cfab801a  mov $0x27, %edx         
0x7fc7cfab801f  jmp 0x3ae4               ; 0x7fc7cfab8664
0x7fc7cfab8024  mov %r15, %r13          
0x7fc7cfab8027  mov $0x34, -0x1d4(%rbp) 
0x7fc7cfab8031  mov $0x7fc7b4003d70, %rax
0x7fc7cfab803b  mov %rax, (%rsp)        
0x7fc7cfab803f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8047  mov $0x0, 0x8(%rsp)     
0x7fc7cfab804f  mov $0x34, %edx         
0x7fc7cfab8054  jmp 0x3ae4               ; 0x7fc7cfab8664
0x7fc7cfab8059  mov %r15, %r13          
0x7fc7cfab805c  mov $0x40, -0x1d4(%rbp) 
0x7fc7cfab8066  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8070  mov %rax, (%rsp)        
0x7fc7cfab8074  mov $0x1, 0x10(%rsp)    
0x7fc7cfab807c  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8084  mov $0x40, %edx         
0x7fc7cfab8089  mov $0x2, %ecx          
0x7fc7cfab808e  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8093  mov %r15, %r13          
0x7fc7cfab8096  mov $0x47, -0x1d4(%rbp) 
0x7fc7cfab80a0  mov $0x7fc7b4003d70, %rax
0x7fc7cfab80aa  mov %rax, (%rsp)        
0x7fc7cfab80ae  mov $0x1, 0x10(%rsp)    
0x7fc7cfab80b6  mov $0x0, 0x8(%rsp)     
0x7fc7cfab80be  mov $0x47, %edx         
0x7fc7cfab80c3  mov $0x3, %ecx          
0x7fc7cfab80c8  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab80cd  mov %r15, %r13          
0x7fc7cfab80d0  mov $0x4a, -0x1d4(%rbp) 
0x7fc7cfab80da  mov $0x7fc7b4003d70, %rax
0x7fc7cfab80e4  mov %rax, (%rsp)        
0x7fc7cfab80e8  mov $0x1, 0x10(%rsp)    
0x7fc7cfab80f0  mov $0x0, 0x8(%rsp)     
0x7fc7cfab80f8  mov $0x4a, %edx         
0x7fc7cfab80fd  mov $0x2, %ecx          
0x7fc7cfab8102  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8107  mov %r15, %r13          
0x7fc7cfab810a  mov $0x51, -0x1d4(%rbp) 
0x7fc7cfab8114  mov $0x7fc7b4003d70, %rax
0x7fc7cfab811e  mov %rax, (%rsp)        
0x7fc7cfab8122  mov $0x1, 0x10(%rsp)    
0x7fc7cfab812a  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8132  mov $0x51, %edx         
0x7fc7cfab8137  mov $0x3, %ecx          
0x7fc7cfab813c  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8141  mov %r15, %r13          
0x7fc7cfab8144  mov $0x54, -0x1d4(%rbp) 
0x7fc7cfab814e  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8158  mov %rax, (%rsp)        
0x7fc7cfab815c  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8164  mov $0x0, 0x8(%rsp)     
0x7fc7cfab816c  mov $0x54, %edx         
0x7fc7cfab8171  mov $0x2, %ecx          
0x7fc7cfab8176  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab817b  mov %r15, %r13          
0x7fc7cfab817e  mov $0x63, -0x1d4(%rbp) 
0x7fc7cfab8188  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8192  mov %rax, (%rsp)        
0x7fc7cfab8196  mov $0x1, 0x10(%rsp)    
0x7fc7cfab819e  mov $0x0, 0x8(%rsp)     
0x7fc7cfab81a6  mov $0x63, %edx         
0x7fc7cfab81ab  mov $0x2, %ecx          
0x7fc7cfab81b0  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab81b5  mov %r15, %r13          
0x7fc7cfab81b8  mov $0x68, -0x1d4(%rbp) 
0x7fc7cfab81c2  mov $0x7fc7b4003d70, %rax
0x7fc7cfab81cc  mov %rax, (%rsp)        
0x7fc7cfab81d0  mov $0x1, 0x10(%rsp)    
0x7fc7cfab81d8  mov $0x0, 0x8(%rsp)     
0x7fc7cfab81e0  mov $0x68, %edx         
0x7fc7cfab81e5  mov $0x2, %ecx          
0x7fc7cfab81ea  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab81ef  mov %r15, %r13          
0x7fc7cfab81f2  mov $0x6b, -0x1d4(%rbp) 
0x7fc7cfab81fc  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8206  mov %rax, (%rsp)        
0x7fc7cfab820a  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8212  mov $0x0, 0x8(%rsp)     
0x7fc7cfab821a  mov $0x6b, %edx         
0x7fc7cfab821f  jmp 0x3ae4               ; 0x7fc7cfab8664
0x7fc7cfab8224  mov %r15, %r13          
0x7fc7cfab8227  mov $0x75, -0x1d4(%rbp) 
0x7fc7cfab8231  mov $0x7fc7b4003d70, %rax
0x7fc7cfab823b  mov %rax, (%rsp)        
0x7fc7cfab823f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8247  mov $0x0, 0x8(%rsp)     
0x7fc7cfab824f  mov $0x75, %edx         
0x7fc7cfab8254  jmp 0x3322               ; 0x7fc7cfab7ea2
0x7fc7cfab8259  mov %r15, %r13          
0x7fc7cfab825c  mov $0x11a, -0x1d4(%rbp)
0x7fc7cfab8266  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8270  mov %rax, (%rsp)        
0x7fc7cfab8274  mov $0x1, 0x10(%rsp)    
0x7fc7cfab827c  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8284  mov $0x11a, %edx        
0x7fc7cfab8289  mov $0x2, %ecx          
0x7fc7cfab828e  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab8293  mov %r15, %r13          
0x7fc7cfab8296  mov $0x7f, -0x1d4(%rbp) 
0x7fc7cfab82a0  mov $0x7fc7b4003d70, %rax
0x7fc7cfab82aa  mov %rax, (%rsp)        
0x7fc7cfab82ae  mov $0x1, 0x10(%rsp)    
0x7fc7cfab82b6  mov $0x0, 0x8(%rsp)     
0x7fc7cfab82be  mov $0x7f, %edx         
0x7fc7cfab82c3  mov $0x2, %ecx          
0x7fc7cfab82c8  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab82cd  mov %r15, %r13          
0x7fc7cfab82d0  mov $0x97, -0x1d4(%rbp) 
0x7fc7cfab82da  mov $0x7fc7b4003d70, %rax
0x7fc7cfab82e4  mov %rax, (%rsp)        
0x7fc7cfab82e8  mov $0x1, 0x10(%rsp)    
0x7fc7cfab82f0  mov $0x0, 0x8(%rsp)     
0x7fc7cfab82f8  mov $0x97, %edx         
0x7fc7cfab82fd  mov $0x2, %ecx          
0x7fc7cfab8302  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8307  mov %r15, %r13          
0x7fc7cfab830a  mov $0x9a, -0x1d4(%rbp) 
0x7fc7cfab8314  mov $0x7fc7b4003d70, %rax
0x7fc7cfab831e  mov %rax, (%rsp)        
0x7fc7cfab8322  mov $0x1, 0x10(%rsp)    
0x7fc7cfab832a  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8332  mov $0x9a, %edx         
0x7fc7cfab8337  jmp 0x3322               ; 0x7fc7cfab7ea2
0x7fc7cfab833c  mov %r15, %r13          
0x7fc7cfab833f  mov $0xa6, -0x1d4(%rbp) 
0x7fc7cfab8349  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8353  mov %rax, (%rsp)        
0x7fc7cfab8357  mov $0x1, 0x10(%rsp)    
0x7fc7cfab835f  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8367  mov $0xa6, %edx         
0x7fc7cfab836c  mov $0x2, %ecx          
0x7fc7cfab8371  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8376  mov %r15, %r13          
0x7fc7cfab8379  mov $0xa9, -0x1d4(%rbp) 
0x7fc7cfab8383  mov $0x7fc7b4003d70, %rax
0x7fc7cfab838d  mov %rax, (%rsp)        
0x7fc7cfab8391  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8399  mov $0x0, 0x8(%rsp)     
0x7fc7cfab83a1  mov $0xa9, %edx         
0x7fc7cfab83a6  jmp 0x3322               ; 0x7fc7cfab7ea2
0x7fc7cfab83ab  mov %r15, %r13          
0x7fc7cfab83ae  mov $0xb5, -0x1d4(%rbp) 
0x7fc7cfab83b8  mov $0x7fc7b4003d70, %rax
0x7fc7cfab83c2  mov %rax, (%rsp)        
0x7fc7cfab83c6  mov $0x1, 0x10(%rsp)    
0x7fc7cfab83ce  mov $0x0, 0x8(%rsp)     
0x7fc7cfab83d6  mov $0xb5, %edx         
0x7fc7cfab83db  mov $0x2, %ecx          
0x7fc7cfab83e0  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab83e5  mov %r15, %r13          
0x7fc7cfab83e8  mov $0xb8, -0x1d4(%rbp) 
0x7fc7cfab83f2  mov $0x7fc7b4003d70, %rax
0x7fc7cfab83fc  mov %rax, (%rsp)        
0x7fc7cfab8400  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8408  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8410  mov $0xb8, %edx         
0x7fc7cfab8415  jmp 0x3322               ; 0x7fc7cfab7ea2
0x7fc7cfab841a  testb $0x1, %al         
0x7fc7cfab841d  jnz 0x3b0a               ; 0x7fc7cfab868a
0x7fc7cfab8423  mov %rbx, %r12          
0x7fc7cfab8426  mov %r13, -0x50(%rbp)   
0x7fc7cfab842a  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab8432  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab843a  mov $0x1, -0x40(%rbp)   
0x7fc7cfab8441  movq $0x0, -0x30(%rbp)  
0x7fc7cfab8449  lea -0x1a0(%rbp), %rax  
0x7fc7cfab8450  mov %rax, -0x38(%rbp)   
0x7fc7cfab8454  mov 0x1952188, %rsi     
0x7fc7cfab845c  mov 0x20(%rsi), %rax    
0x7fc7cfab8460  mov $0x11a, -0x1d4(%rbp)
0x7fc7cfab846a  mov %r14, %rdi          
0x7fc7cfab846d  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab8474  mov %r15, %rcx          
0x7fc7cfab8477  callq *%rax             
0x7fc7cfab8479  test %rax, %rax         
0x7fc7cfab847c  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8482  mov -0x1b0(%rbp), %rdx  
0x7fc7cfab8489  mov %r12, %rbx          
0x7fc7cfab848c  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab8493  testb $0x3, %dl         
0x7fc7cfab8496  jnz 0x3b51               ; 0x7fc7cfab86d1
0x7fc7cfab849c  mov 0x8(%rdx), %rcx     
0x7fc7cfab84a0  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab84a4  jnz 0x3b51               ; 0x7fc7cfab86d1
0x7fc7cfab84aa  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab84b1  jnz 0x3ab4               ; 0x7fc7cfab8634
0x7fc7cfab84b7  testb $0x3, %al         
0x7fc7cfab84ba  jnz 0x3b48               ; 0x7fc7cfab86c8
0x7fc7cfab84c0  mov 0x8(%rax), %rcx     
0x7fc7cfab84c4  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab84c8  jnz 0x3b48               ; 0x7fc7cfab86c8
0x7fc7cfab84ce  invalid                 
0x7fc7cfab84cf  sti                     
0x7fc7cfab84d0  adc %al, 0x18(%rax)     
0x7fc7cfab84d3  jmp 0x3bbd               ; 0x7fc7cfab873d
0x7fc7cfab84d8  mov %r15, %r13          
0x7fc7cfab84db  mov $0xc8, -0x1d4(%rbp) 
0x7fc7cfab84e5  mov $0x7fc7b4003d70, %rax
0x7fc7cfab84ef  mov %rax, (%rsp)        
0x7fc7cfab84f3  mov $0x1, 0x10(%rsp)    
0x7fc7cfab84fb  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8503  mov $0xc8, %edx         
0x7fc7cfab8508  mov $0x3, %ecx          
0x7fc7cfab850d  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8512  mov %r15, %r13          
0x7fc7cfab8515  mov $0xcb, -0x1d4(%rbp) 
0x7fc7cfab851f  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8529  mov %rax, (%rsp)        
0x7fc7cfab852d  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8535  mov $0x0, 0x8(%rsp)     
0x7fc7cfab853d  mov $0xcb, %edx         
0x7fc7cfab8542  mov $0x2, %ecx          
0x7fc7cfab8547  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab854c  mov %r15, %r13          
0x7fc7cfab854f  mov $0xe0, -0x1d4(%rbp) 
0x7fc7cfab8559  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8563  mov %rax, (%rsp)        
0x7fc7cfab8567  mov $0x1, 0x10(%rsp)    
0x7fc7cfab856f  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8577  mov $0xe0, %edx         
0x7fc7cfab857c  mov $0x3, %ecx          
0x7fc7cfab8581  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8586  mov %r15, %r13          
0x7fc7cfab8589  mov $0xe3, -0x1d4(%rbp) 
0x7fc7cfab8593  mov $0x7fc7b4003d70, %rax
0x7fc7cfab859d  mov %rax, (%rsp)        
0x7fc7cfab85a1  mov $0x1, 0x10(%rsp)    
0x7fc7cfab85a9  mov $0x0, 0x8(%rsp)     
0x7fc7cfab85b1  mov $0xe3, %edx         
0x7fc7cfab85b6  mov $0x2, %ecx          
0x7fc7cfab85bb  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab85c0  mov %r15, %r13          
0x7fc7cfab85c3  mov $0xf8, -0x1d4(%rbp) 
0x7fc7cfab85cd  mov $0x7fc7b4003d70, %rax
0x7fc7cfab85d7  mov %rax, (%rsp)        
0x7fc7cfab85db  mov $0x1, 0x10(%rsp)    
0x7fc7cfab85e3  mov $0x0, 0x8(%rsp)     
0x7fc7cfab85eb  mov $0xf8, %edx         
0x7fc7cfab85f0  mov $0x3, %ecx          
0x7fc7cfab85f5  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab85fa  mov %r15, %r13          
0x7fc7cfab85fd  mov $0xfb, -0x1d4(%rbp) 
0x7fc7cfab8607  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8611  mov %rax, (%rsp)        
0x7fc7cfab8615  mov $0x1, 0x10(%rsp)    
0x7fc7cfab861d  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8625  mov $0xfb, %edx         
0x7fc7cfab862a  mov $0x2, %ecx          
0x7fc7cfab862f  jmp 0x3327               ; 0x7fc7cfab7ea7
0x7fc7cfab8634  mov %r15, %r13          
0x7fc7cfab8637  mov $0x11d, -0x1d4(%rbp)
0x7fc7cfab8641  mov $0x7fc7b4003d70, %rax
0x7fc7cfab864b  mov %rax, (%rsp)        
0x7fc7cfab864f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8657  mov $0x0, 0x8(%rsp)     
0x7fc7cfab865f  mov $0x11d, %edx        
0x7fc7cfab8664  mov $0x1, %ecx          
0x7fc7cfab8669  xor %r9d, %r9d          
0x7fc7cfab866c  mov %r14, %rdi          
0x7fc7cfab866f  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab8676  mov %rbx, %r8           
0x7fc7cfab8679  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab8683  callq *%rax             
0x7fc7cfab8685  jmp 0x44b2               ; 0x7fc7cfab9032
0x7fc7cfab868a  sarq $0x1, %rax         
0x7fc7cfab868d  invalid                 
0x7fc7cfab868e  loope 0x3b0b             ; 0x7fc7cfab878b
0x7fc7cfab8690  sub %al, %al            
0x7fc7cfab8692  invalid                 
0x7fc7cfab8693  sar $0x45, 0x59(%rbx)   
0x7fc7cfab8697  sbb %al, %ch            
0x7fc7cfab8699  sti                     
0x7fc7cfab869a  adc %eax, -0x338(%rbp)  
0x7fc7cfab86a0  mov %r14, %rdi          
0x7fc7cfab86a3  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab86ad  callq *%rax             
0x7fc7cfab86af  invalid                 
0x7fc7cfab86b0  sti                     
0x7fc7cfab86b1  adc %al, -0x338(%rbp)   
0x7fc7cfab86b7  invalid                 
0x7fc7cfab86b8  sti                     
0x7fc7cfab86b9  adc %eax, 0x18(%rax)    
0x7fc7cfab86bc  mov -0x330(%rbp), %rdx  
0x7fc7cfab86c3  jmp 0x390c               ; 0x7fc7cfab848c
0x7fc7cfab86c8  testb $0x1, %al         
0x7fc7cfab86cb  jnz 0x3bb5               ; 0x7fc7cfab8735
0x7fc7cfab86d1  mov %rbx, %r12          
0x7fc7cfab86d4  mov %rdx, -0x50(%rbp)   
0x7fc7cfab86d8  movq $0x55e, -0x58(%rbp)
0x7fc7cfab86e0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab86e8  mov $0x1, -0x40(%rbp)   
0x7fc7cfab86ef  movq $0x0, -0x30(%rbp)  
0x7fc7cfab86f7  lea -0x1a8(%rbp), %rax  
0x7fc7cfab86fe  mov %rax, -0x38(%rbp)   
0x7fc7cfab8702  mov 0x19521a0, %rsi     
0x7fc7cfab870a  mov 0x20(%rsi), %rax    
0x7fc7cfab870e  mov $0x11d, -0x1d4(%rbp)
0x7fc7cfab8718  mov %r14, %rdi          
0x7fc7cfab871b  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab8722  mov %r15, %rcx          
0x7fc7cfab8725  callq *%rax             
0x7fc7cfab8727  test %rax, %rax         
0x7fc7cfab872a  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8730  jmp 0x3be9               ; 0x7fc7cfab8769
0x7fc7cfab8735  sarq $0x1, %rax         
0x7fc7cfab8738  invalid                 
0x7fc7cfab8739  loope 0x3bb6             ; 0x7fc7cfab8836
0x7fc7cfab873b  sub %al, %al            
0x7fc7cfab873d  mov %rbx, %r12          
0x7fc7cfab8740  invalid                 
0x7fc7cfab8741  sti                     
0x7fc7cfab8742  pop %rax                
0x7fc7cfab8743  sbb %al, %bpl           
0x7fc7cfab8746  sti                     
0x7fc7cfab8747  adc %eax, -0x330(%rbp)  
0x7fc7cfab874d  mov %r14, %rdi          
0x7fc7cfab8750  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab875a  callq *%rax             
0x7fc7cfab875c  invalid                 
0x7fc7cfab875d  sti                     
0x7fc7cfab875e  adc %al, -0x330(%rbp)   
0x7fc7cfab8764  invalid                 
0x7fc7cfab8765  sti                     
0x7fc7cfab8766  adc %eax, 0x18(%rax)    
0x7fc7cfab8769  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab8770  mov -0x278(%rbp), %rdx  
0x7fc7cfab8777  testb $0x3, %dl         
0x7fc7cfab877a  jnz 0x3c6f               ; 0x7fc7cfab87ef
0x7fc7cfab8780  mov 0x8(%rdx), %rcx     
0x7fc7cfab8784  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab878b  jnz 0x3c6f               ; 0x7fc7cfab87ef
0x7fc7cfab8791  mov %rax, 0x18(%rdx)    
0x7fc7cfab8795  testb $0x3, %al         
0x7fc7cfab8798  jnz 0x3c96               ; 0x7fc7cfab8816
0x7fc7cfab879e  mov 0x15853f8, %esi     
0x7fc7cfab87a5  mov (%rdx), %rcx        
0x7fc7cfab87a8  mov %rcx, %rdi          
0x7fc7cfab87ab  andq $0x380000, %rdi    
0x7fc7cfab87b2  inc %esi                
0x7fc7cfab87b4  shlq $0x13, %rsi        
0x7fc7cfab87b8  cmp %rsi, %rdi          
0x7fc7cfab87bb  jz 0x3c55                ; 0x7fc7cfab87d5
0x7fc7cfab87c1  andq $0x300, %rcx       
0x7fc7cfab87c8  cmpq $0x200, %rcx       
0x7fc7cfab87cf  jz 0x3c96                ; 0x7fc7cfab8816
0x7fc7cfab87d5  mov %r14, %rdi          
0x7fc7cfab87d8  mov %rdx, %rsi          
0x7fc7cfab87db  mov %rax, %rdx          
0x7fc7cfab87de  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab87e8  callq *%rax             
0x7fc7cfab87ea  jmp 0x3c96               ; 0x7fc7cfab8816
0x7fc7cfab87ef  mov $0x10056, %ecx      
0x7fc7cfab87f4  mov %r14, %rdi          
0x7fc7cfab87f7  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab87fe  mov %rax, %r8           
0x7fc7cfab8801  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab880b  callq *%rax             
0x7fc7cfab880d  test %rax, %rax         
0x7fc7cfab8810  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8816  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab8821  mov -0x278(%rbp), %rbx  
0x7fc7cfab8828  mov %rbx, %r13          
0x7fc7cfab882b  andq $0x3, %r13         
0x7fc7cfab882f  jnz 0x3cdc               ; 0x7fc7cfab885c
0x7fc7cfab8835  mov 0x8(%rbx), %rax     
0x7fc7cfab8839  cmp $0x505, 0x70(%rax)  
0x7fc7cfab8840  jnz 0x3cdc               ; 0x7fc7cfab885c
0x7fc7cfab8846  mov 0x20(%rbx), %rcx    
0x7fc7cfab884a  cmpq $0x22, %rcx        
0x7fc7cfab884e  mov $0x1a, %eax         
0x7fc7cfab8853  cmovnz %rcx, %rax       
0x7fc7cfab8857  jmp 0x3cf3               ; 0x7fc7cfab8873
0x7fc7cfab885c  mov $0x1005e, %edx      
0x7fc7cfab8861  mov %r14, %rdi          
0x7fc7cfab8864  mov %rbx, %rsi          
0x7fc7cfab8867  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab8871  callq *%rax             
0x7fc7cfab8873  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab887a  mov -0x248(%rbp), %rdx  
0x7fc7cfab8881  mov %rdx, -0x1a8(%rbp)  
0x7fc7cfab8888  movq $0x1a, -0x1a0(%rbp)
0x7fc7cfab8893  test %r13, %r13         
0x7fc7cfab8896  jnz 0x3d4a               ; 0x7fc7cfab88ca
0x7fc7cfab889c  mov 0x8(%rbx), %rcx     
0x7fc7cfab88a0  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab88a7  jnz 0x3d4a               ; 0x7fc7cfab88ca
0x7fc7cfab88ad  mov %rax, -0x330(%rbp)  
0x7fc7cfab88b4  mov 0x38(%rbx), %rcx    
0x7fc7cfab88b8  cmpq $0x22, %rcx        
0x7fc7cfab88bc  mov $0x1a, %eax         
0x7fc7cfab88c1  cmovnz %rcx, %rax       
0x7fc7cfab88c5  jmp 0x3d6e               ; 0x7fc7cfab88ee
0x7fc7cfab88ca  mov %rax, -0x330(%rbp)  
0x7fc7cfab88d1  mov %rdx, %r13          
0x7fc7cfab88d4  mov $0x10076, %edx      
0x7fc7cfab88d9  mov %r14, %rdi          
0x7fc7cfab88dc  mov %rbx, %rsi          
0x7fc7cfab88df  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab88e9  callq *%rax             
0x7fc7cfab88eb  mov %r13, %rdx          
0x7fc7cfab88ee  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab88f5  testb $0x3, %dl         
0x7fc7cfab88f8  mov %r12, %rbx          
0x7fc7cfab88fb  jnz 0x3e00               ; 0x7fc7cfab8980
0x7fc7cfab8901  mov 0x8(%rdx), %rcx     
0x7fc7cfab8905  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8909  jnz 0x3e00               ; 0x7fc7cfab8980
0x7fc7cfab890f  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab8916  jnz 0x3dbd               ; 0x7fc7cfab893d
0x7fc7cfab891c  testb $0x3, %al         
0x7fc7cfab891f  jnz 0x3df7               ; 0x7fc7cfab8977
0x7fc7cfab8925  mov 0x8(%rax), %rcx     
0x7fc7cfab8929  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab892d  jnz 0x3df7               ; 0x7fc7cfab8977
0x7fc7cfab8933  invalid                 
0x7fc7cfab8934  sti                     
0x7fc7cfab8935  adc %al, 0x18(%rax)     
0x7fc7cfab8938  jmp 0x3ef3               ; 0x7fc7cfab8a73
0x7fc7cfab893d  mov %r15, %r13          
0x7fc7cfab8940  mov $0x129, -0x1d4(%rbp)
0x7fc7cfab894a  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8954  mov %rax, (%rsp)        
0x7fc7cfab8958  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8960  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8968  mov $0x129, %edx        
0x7fc7cfab896d  mov $0x2, %ecx          
0x7fc7cfab8972  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab8977  testb $0x1, %al         
0x7fc7cfab897a  jnz 0x3eeb               ; 0x7fc7cfab8a6b
0x7fc7cfab8980  mov %rbx, %r12          
0x7fc7cfab8983  mov %rdx, -0x50(%rbp)   
0x7fc7cfab8987  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab898f  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab8997  mov $0x1, -0x40(%rbp)   
0x7fc7cfab899e  movq $0x0, -0x30(%rbp)  
0x7fc7cfab89a6  lea -0x1a0(%rbp), %rax  
0x7fc7cfab89ad  mov %rax, -0x38(%rbp)   
0x7fc7cfab89b1  mov 0x1952200, %rsi     
0x7fc7cfab89b9  mov 0x20(%rsi), %rax    
0x7fc7cfab89bd  mov $0x129, -0x1d4(%rbp)
0x7fc7cfab89c7  mov %r14, %rdi          
0x7fc7cfab89ca  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab89d1  mov %r15, %rcx          
0x7fc7cfab89d4  callq *%rax             
0x7fc7cfab89d6  test %rax, %rax         
0x7fc7cfab89d9  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab89df  mov -0x1b0(%rbp), %r13  
0x7fc7cfab89e6  mov %r12, %rbx          
0x7fc7cfab89e9  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab89f0  testb $0x3, %r13b       
0x7fc7cfab89f4  jnz 0x3f31               ; 0x7fc7cfab8ab1
0x7fc7cfab89fa  mov 0x8(%r13), %rcx     
0x7fc7cfab89fe  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8a02  jnz 0x3f31               ; 0x7fc7cfab8ab1
0x7fc7cfab8a08  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab8a0f  jnz 0x3eb6               ; 0x7fc7cfab8a36
0x7fc7cfab8a15  testb $0x3, %al         
0x7fc7cfab8a18  jnz 0x3f28               ; 0x7fc7cfab8aa8
0x7fc7cfab8a1e  mov 0x8(%rax), %rcx     
0x7fc7cfab8a22  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8a26  jnz 0x3f28               ; 0x7fc7cfab8aa8
0x7fc7cfab8a2c  invalid                 
0x7fc7cfab8a2d  sti                     
0x7fc7cfab8a2e  adc %al, 0x18(%rax)     
0x7fc7cfab8a31  jmp 0x3f9d               ; 0x7fc7cfab8b1d
0x7fc7cfab8a36  mov %r15, %r13          
0x7fc7cfab8a39  mov $0x12c, -0x1d4(%rbp)
0x7fc7cfab8a43  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8a4d  mov %rax, (%rsp)        
0x7fc7cfab8a51  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8a59  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8a61  mov $0x12c, %edx        
0x7fc7cfab8a66  jmp 0x3ae4               ; 0x7fc7cfab8664
0x7fc7cfab8a6b  sarq $0x1, %rax         
0x7fc7cfab8a6e  invalid                 
0x7fc7cfab8a6f  loope 0x3eec             ; 0x7fc7cfab8b6c
0x7fc7cfab8a71  sub %al, %al            
0x7fc7cfab8a73  invalid                 
0x7fc7cfab8a74  sti                     
0x7fc7cfab8a75  pop %rcx                
0x7fc7cfab8a76  sbb %al, %bpl           
0x7fc7cfab8a79  sti                     
0x7fc7cfab8a7a  adc %eax, -0x338(%rbp)  
0x7fc7cfab8a80  mov %r14, %rdi          
0x7fc7cfab8a83  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab8a8d  callq *%rax             
0x7fc7cfab8a8f  invalid                 
0x7fc7cfab8a90  sti                     
0x7fc7cfab8a91  adc %al, -0x338(%rbp)   
0x7fc7cfab8a97  invalid                 
0x7fc7cfab8a98  sti                     
0x7fc7cfab8a99  adc %eax, 0x18(%rax)    
0x7fc7cfab8a9c  mov -0x330(%rbp), %r13  
0x7fc7cfab8aa3  jmp 0x3e69               ; 0x7fc7cfab89e9
0x7fc7cfab8aa8  testb $0x1, %al         
0x7fc7cfab8aab  jnz 0x3f95               ; 0x7fc7cfab8b15
0x7fc7cfab8ab1  mov %rbx, %r12          
0x7fc7cfab8ab4  mov %r13, -0x50(%rbp)   
0x7fc7cfab8ab8  movq $0x55e, -0x58(%rbp)
0x7fc7cfab8ac0  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab8ac8  mov $0x1, -0x40(%rbp)   
0x7fc7cfab8acf  movq $0x0, -0x30(%rbp)  
0x7fc7cfab8ad7  lea -0x1a8(%rbp), %rax  
0x7fc7cfab8ade  mov %rax, -0x38(%rbp)   
0x7fc7cfab8ae2  mov 0x1952218, %rsi     
0x7fc7cfab8aea  mov 0x20(%rsi), %rax    
0x7fc7cfab8aee  mov $0x12c, -0x1d4(%rbp)
0x7fc7cfab8af8  mov %r14, %rdi          
0x7fc7cfab8afb  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab8b02  mov %r15, %rcx          
0x7fc7cfab8b05  callq *%rax             
0x7fc7cfab8b07  test %rax, %rax         
0x7fc7cfab8b0a  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8b10  jmp 0x3fca               ; 0x7fc7cfab8b4a
0x7fc7cfab8b15  sarq $0x1, %rax         
0x7fc7cfab8b18  invalid                 
0x7fc7cfab8b19  loope 0x3f96             ; 0x7fc7cfab8c16
0x7fc7cfab8b1b  sub %al, %al            
0x7fc7cfab8b1d  mov %rbx, %r12          
0x7fc7cfab8b20  invalid                 
0x7fc7cfab8b21  sar $0x45, 0x58(%rbx)   
0x7fc7cfab8b25  sbb %al, %ch            
0x7fc7cfab8b27  sti                     
0x7fc7cfab8b28  adc %eax, -0x330(%rbp)  
0x7fc7cfab8b2e  mov %r14, %rdi          
0x7fc7cfab8b31  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab8b3b  callq *%rax             
0x7fc7cfab8b3d  invalid                 
0x7fc7cfab8b3e  sti                     
0x7fc7cfab8b3f  adc %al, -0x330(%rbp)   
0x7fc7cfab8b45  invalid                 
0x7fc7cfab8b46  sti                     
0x7fc7cfab8b47  adc %eax, 0x18(%rax)    
0x7fc7cfab8b4a  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab8b51  mov -0x278(%rbp), %rdx  
0x7fc7cfab8b58  testb $0x3, %dl         
0x7fc7cfab8b5b  jnz 0x4050               ; 0x7fc7cfab8bd0
0x7fc7cfab8b61  mov 0x8(%rdx), %rcx     
0x7fc7cfab8b65  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab8b6c  jnz 0x4050               ; 0x7fc7cfab8bd0
0x7fc7cfab8b72  mov %rax, 0x20(%rdx)    
0x7fc7cfab8b76  testb $0x3, %al         
0x7fc7cfab8b79  jnz 0x4077               ; 0x7fc7cfab8bf7
0x7fc7cfab8b7f  mov 0x15853f8, %esi     
0x7fc7cfab8b86  mov (%rdx), %rcx        
0x7fc7cfab8b89  mov %rcx, %rdi          
0x7fc7cfab8b8c  andq $0x380000, %rdi    
0x7fc7cfab8b93  inc %esi                
0x7fc7cfab8b95  shlq $0x13, %rsi        
0x7fc7cfab8b99  cmp %rsi, %rdi          
0x7fc7cfab8b9c  jz 0x4036                ; 0x7fc7cfab8bb6
0x7fc7cfab8ba2  andq $0x300, %rcx       
0x7fc7cfab8ba9  cmpq $0x200, %rcx       
0x7fc7cfab8bb0  jz 0x4077                ; 0x7fc7cfab8bf7
0x7fc7cfab8bb6  mov %r14, %rdi          
0x7fc7cfab8bb9  mov %rdx, %rsi          
0x7fc7cfab8bbc  mov %rax, %rdx          
0x7fc7cfab8bbf  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab8bc9  callq *%rax             
0x7fc7cfab8bcb  jmp 0x4077               ; 0x7fc7cfab8bf7
0x7fc7cfab8bd0  mov $0x1005e, %ecx      
0x7fc7cfab8bd5  mov %r14, %rdi          
0x7fc7cfab8bd8  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab8bdf  mov %rax, %r8           
0x7fc7cfab8be2  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab8bec  callq *%rax             
0x7fc7cfab8bee  test %rax, %rax         
0x7fc7cfab8bf1  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8bf7  movq $0x1a, -0x1b0(%rbp)
0x7fc7cfab8c02  mov -0x278(%rbp), %r13  
0x7fc7cfab8c09  mov %r13, %rbx          
0x7fc7cfab8c0c  andq $0x3, %rbx         
0x7fc7cfab8c10  jnz 0x40bd               ; 0x7fc7cfab8c3d
0x7fc7cfab8c16  mov 0x8(%r13), %rax     
0x7fc7cfab8c1a  cmp $0x505, 0x70(%rax)  
0x7fc7cfab8c21  jnz 0x40bd               ; 0x7fc7cfab8c3d
0x7fc7cfab8c27  mov 0x28(%r13), %rcx    
0x7fc7cfab8c2b  cmpq $0x22, %rcx        
0x7fc7cfab8c2f  mov $0x1a, %eax         
0x7fc7cfab8c34  cmovnz %rcx, %rax       
0x7fc7cfab8c38  jmp 0x40d4               ; 0x7fc7cfab8c54
0x7fc7cfab8c3d  mov $0x10066, %edx      
0x7fc7cfab8c42  mov %r14, %rdi          
0x7fc7cfab8c45  mov %r13, %rsi          
0x7fc7cfab8c48  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab8c52  callq *%rax             
0x7fc7cfab8c54  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab8c5b  mov -0x248(%rbp), %rdx  
0x7fc7cfab8c62  mov %rdx, -0x1a8(%rbp)  
0x7fc7cfab8c69  movq $0x1a, -0x1a0(%rbp)
0x7fc7cfab8c74  test %rbx, %rbx         
0x7fc7cfab8c77  jnz 0x412b               ; 0x7fc7cfab8cab
0x7fc7cfab8c7d  mov 0x8(%r13), %rcx     
0x7fc7cfab8c81  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab8c88  jnz 0x412b               ; 0x7fc7cfab8cab
0x7fc7cfab8c8e  mov %rax, -0x330(%rbp)  
0x7fc7cfab8c95  mov 0x40(%r13), %rcx    
0x7fc7cfab8c99  cmpq $0x22, %rcx        
0x7fc7cfab8c9d  mov $0x1a, %eax         
0x7fc7cfab8ca2  cmovnz %rcx, %rax       
0x7fc7cfab8ca6  jmp 0x414f               ; 0x7fc7cfab8ccf
0x7fc7cfab8cab  mov %rax, -0x330(%rbp)  
0x7fc7cfab8cb2  mov %rdx, %rbx          
0x7fc7cfab8cb5  mov $0x1007e, %edx      
0x7fc7cfab8cba  mov %r14, %rdi          
0x7fc7cfab8cbd  mov %r13, %rsi          
0x7fc7cfab8cc0  mov $0x763230, %rax      ; rbx_push_ivar
0x7fc7cfab8cca  callq *%rax             
0x7fc7cfab8ccc  mov %rbx, %rdx          
0x7fc7cfab8ccf  mov %r12, %rbx          
0x7fc7cfab8cd2  mov %rax, -0x1a0(%rbp)  
0x7fc7cfab8cd9  testb $0x3, %dl         
0x7fc7cfab8cdc  jnz 0x41e7               ; 0x7fc7cfab8d67
0x7fc7cfab8ce2  mov 0x8(%rdx), %rcx     
0x7fc7cfab8ce6  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8cea  jnz 0x41e7               ; 0x7fc7cfab8d67
0x7fc7cfab8cf0  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab8cf7  jnz 0x41a4               ; 0x7fc7cfab8d24
0x7fc7cfab8cfd  testb $0x3, %al         
0x7fc7cfab8d00  jnz 0x41de               ; 0x7fc7cfab8d5e
0x7fc7cfab8d06  mov 0x8(%rax), %rcx     
0x7fc7cfab8d0a  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8d0e  jnz 0x41de               ; 0x7fc7cfab8d5e
0x7fc7cfab8d14  mov %rdx, %rcx          
0x7fc7cfab8d17  mov %rbx, %r12          
0x7fc7cfab8d1a  invalid                 
0x7fc7cfab8d1b  sti                     
0x7fc7cfab8d1c  adc %al, 0x18(%rax)     
0x7fc7cfab8d1f  jmp 0x42aa               ; 0x7fc7cfab8e2a
0x7fc7cfab8d24  mov %r15, %r13          
0x7fc7cfab8d27  mov $0x138, -0x1d4(%rbp)
0x7fc7cfab8d31  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8d3b  mov %rax, (%rsp)        
0x7fc7cfab8d3f  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8d47  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8d4f  mov $0x138, %edx        
0x7fc7cfab8d54  mov $0x2, %ecx          
0x7fc7cfab8d59  jmp 0x3ae9               ; 0x7fc7cfab8669
0x7fc7cfab8d5e  testb $0x1, %al         
0x7fc7cfab8d61  jnz 0x429c               ; 0x7fc7cfab8e1c
0x7fc7cfab8d67  mov %rbx, %r12          
0x7fc7cfab8d6a  mov %rdx, -0x50(%rbp)   
0x7fc7cfab8d6e  movq $0x3cc6, -0x58(%rbp)
0x7fc7cfab8d76  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab8d7e  mov $0x1, -0x40(%rbp)   
0x7fc7cfab8d85  movq $0x0, -0x30(%rbp)  
0x7fc7cfab8d8d  lea -0x1a0(%rbp), %rax  
0x7fc7cfab8d94  mov %rax, -0x38(%rbp)   
0x7fc7cfab8d98  mov 0x1952278, %rsi     
0x7fc7cfab8da0  mov 0x20(%rsi), %rax    
0x7fc7cfab8da4  mov $0x138, -0x1d4(%rbp)
0x7fc7cfab8dae  mov %r14, %rdi          
0x7fc7cfab8db1  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab8db8  mov %r15, %rcx          
0x7fc7cfab8dbb  callq *%rax             
0x7fc7cfab8dbd  test %rax, %rax         
0x7fc7cfab8dc0  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8dc6  mov -0x1b0(%rbp), %rdx  
0x7fc7cfab8dcd  mov %rax, -0x1a8(%rbp)  
0x7fc7cfab8dd4  testb $0x3, %dl         
0x7fc7cfab8dd7  jnz 0x4332               ; 0x7fc7cfab8eb2
0x7fc7cfab8ddd  mov 0x8(%rdx), %rcx     
0x7fc7cfab8de1  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8de5  jnz 0x4332               ; 0x7fc7cfab8eb2
0x7fc7cfab8deb  mov %r15, %r13          
0x7fc7cfab8dee  cmp $0xe0, 0x74(%rcx)   
0x7fc7cfab8df5  jnz 0x42df               ; 0x7fc7cfab8e5f
0x7fc7cfab8dfb  testb $0x3, %al         
0x7fc7cfab8dfe  jnz 0x4326               ; 0x7fc7cfab8ea6
0x7fc7cfab8e04  mov 0x8(%rax), %rcx     
0x7fc7cfab8e08  cmp $0x4d, 0x70(%rcx)   
0x7fc7cfab8e0c  jnz 0x4326               ; 0x7fc7cfab8ea6
0x7fc7cfab8e12  invalid                 
0x7fc7cfab8e13  sti                     
0x7fc7cfab8e14  adc %al, 0x18(%rax)     
0x7fc7cfab8e17  jmp 0x439e               ; 0x7fc7cfab8f1e
0x7fc7cfab8e1c  mov %rdx, %rcx          
0x7fc7cfab8e1f  mov %rbx, %r12          
0x7fc7cfab8e22  sarq $0x1, %rax         
0x7fc7cfab8e25  invalid                 
0x7fc7cfab8e26  loope 0x42a3             ; 0x7fc7cfab8f23
0x7fc7cfab8e28  sub %al, %al            
0x7fc7cfab8e2a  invalid                 
0x7fc7cfab8e2b  sti                     
0x7fc7cfab8e2c  pop %rcx                
0x7fc7cfab8e2d  sbb %al, %r13b          
0x7fc7cfab8e30  sti                     
0x7fc7cfab8e31  adc %eax, -0x338(%rbp)  
0x7fc7cfab8e37  mov %r14, %rdi          
0x7fc7cfab8e3a  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab8e44  callq *%rax             
0x7fc7cfab8e46  invalid                 
0x7fc7cfab8e47  sti                     
0x7fc7cfab8e48  adc %al, -0x338(%rbp)   
0x7fc7cfab8e4e  invalid                 
0x7fc7cfab8e4f  sti                     
0x7fc7cfab8e50  adc %eax, 0x18(%rax)    
0x7fc7cfab8e53  mov -0x330(%rbp), %rdx  
0x7fc7cfab8e5a  jmp 0x424d               ; 0x7fc7cfab8dcd
0x7fc7cfab8e5f  mov $0x13b, -0x1d4(%rbp)
0x7fc7cfab8e69  mov $0x7fc7b4003d70, %rax
0x7fc7cfab8e73  mov %rax, (%rsp)        
0x7fc7cfab8e77  mov $0x1, 0x10(%rsp)    
0x7fc7cfab8e7f  mov $0x0, 0x8(%rsp)     
0x7fc7cfab8e87  mov $0x13b, %edx        
0x7fc7cfab8e8c  mov $0x1, %ecx          
0x7fc7cfab8e91  xor %r9d, %r9d          
0x7fc7cfab8e94  mov %r14, %rdi          
0x7fc7cfab8e97  lea -0x1f8(%rbp), %rax  
0x7fc7cfab8e9e  mov %rax, %rsi          
0x7fc7cfab8ea1  jmp 0x3334               ; 0x7fc7cfab7eb4
0x7fc7cfab8ea6  testb $0x1, %al         
0x7fc7cfab8ea9  mov %r13, %r15          
0x7fc7cfab8eac  jnz 0x4393               ; 0x7fc7cfab8f13
0x7fc7cfab8eb2  mov %rdx, -0x50(%rbp)   
0x7fc7cfab8eb6  movq $0x55e, -0x58(%rbp)
0x7fc7cfab8ebe  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab8ec6  mov $0x1, -0x40(%rbp)   
0x7fc7cfab8ecd  movq $0x0, -0x30(%rbp)  
0x7fc7cfab8ed5  lea -0x1a8(%rbp), %rax  
0x7fc7cfab8edc  mov %rax, -0x38(%rbp)   
0x7fc7cfab8ee0  mov 0x1952290, %rsi     
0x7fc7cfab8ee8  mov 0x20(%rsi), %rax    
0x7fc7cfab8eec  mov $0x13b, -0x1d4(%rbp)
0x7fc7cfab8ef6  mov %r14, %rdi          
0x7fc7cfab8ef9  lea -0x1f8(%rbp), %rdx  
0x7fc7cfab8f00  mov %r15, %rcx          
0x7fc7cfab8f03  callq *%rax             
0x7fc7cfab8f05  test %rax, %rax         
0x7fc7cfab8f08  jz 0x4477                ; 0x7fc7cfab8ff7
0x7fc7cfab8f0e  jmp 0x43ca               ; 0x7fc7cfab8f4a
0x7fc7cfab8f13  mov %r15, %r13          
0x7fc7cfab8f16  sarq $0x1, %rax         
0x7fc7cfab8f19  invalid                 
0x7fc7cfab8f1a  loope 0x4397             ; 0x7fc7cfab9017
0x7fc7cfab8f1c  sub %al, %al            
0x7fc7cfab8f1e  invalid                 
0x7fc7cfab8f1f  sti                     
0x7fc7cfab8f20  pop %rax                
0x7fc7cfab8f21  sbb %al, %bpl           
0x7fc7cfab8f24  sti                     
0x7fc7cfab8f25  adc %eax, -0x330(%rbp)  
0x7fc7cfab8f2b  mov %r14, %rdi          
0x7fc7cfab8f2e  mov $0x764290, %rax      ; rbx_float_allocate
0x7fc7cfab8f38  callq *%rax             
0x7fc7cfab8f3a  invalid                 
0x7fc7cfab8f3b  sti                     
0x7fc7cfab8f3c  adc %al, -0x330(%rbp)   
0x7fc7cfab8f42  invalid                 
0x7fc7cfab8f43  sti                     
0x7fc7cfab8f44  adc %eax, 0x18(%rax)    
0x7fc7cfab8f47  mov %r13, %r15          
0x7fc7cfab8f4a  mov %rax, -0x1b0(%rbp)  
0x7fc7cfab8f51  mov -0x278(%rbp), %rdx  
0x7fc7cfab8f58  testb $0x3, %dl         
0x7fc7cfab8f5b  jnz 0x4450               ; 0x7fc7cfab8fd0
0x7fc7cfab8f61  mov 0x8(%rdx), %rcx     
0x7fc7cfab8f65  cmp $0x505, 0x70(%rcx)  
0x7fc7cfab8f6c  jnz 0x4450               ; 0x7fc7cfab8fd0
0x7fc7cfab8f72  mov %rax, 0x28(%rdx)    
0x7fc7cfab8f76  testb $0x3, %al         
0x7fc7cfab8f79  jnz 0x45c6               ; 0x7fc7cfab9146
0x7fc7cfab8f7f  mov 0x15853f8, %esi     
0x7fc7cfab8f86  mov (%rdx), %rcx        
0x7fc7cfab8f89  mov %rcx, %rdi          
0x7fc7cfab8f8c  andq $0x380000, %rdi    
0x7fc7cfab8f93  inc %esi                
0x7fc7cfab8f95  shlq $0x13, %rsi        
0x7fc7cfab8f99  cmp %rsi, %rdi          
0x7fc7cfab8f9c  jz 0x4436                ; 0x7fc7cfab8fb6
0x7fc7cfab8fa2  andq $0x300, %rcx       
0x7fc7cfab8fa9  cmpq $0x200, %rcx       
0x7fc7cfab8fb0  jz 0x45c6                ; 0x7fc7cfab9146
0x7fc7cfab8fb6  mov %r14, %rdi          
0x7fc7cfab8fb9  mov %rdx, %rsi          
0x7fc7cfab8fbc  mov %rax, %rdx          
0x7fc7cfab8fbf  mov $0x760710, %rax      ; rbx_write_barrier
0x7fc7cfab8fc9  callq *%rax             
0x7fc7cfab8fcb  jmp 0x45c6               ; 0x7fc7cfab9146
0x7fc7cfab8fd0  mov $0x10066, %ecx      
0x7fc7cfab8fd5  mov %r14, %rdi          
0x7fc7cfab8fd8  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab8fdf  mov %rax, %r8           
0x7fc7cfab8fe2  mov $0x763250, %rax      ; rbx_set_ivar
0x7fc7cfab8fec  callq *%rax             
0x7fc7cfab8fee  test %rax, %rax         
0x7fc7cfab8ff1  jnz 0x45c6               ; 0x7fc7cfab9146
0x7fc7cfab8ff7  mov %r15, %r13          
0x7fc7cfab8ffa  mov %r14, %rdi          
0x7fc7cfab8ffd  lea -0x1f8(%rbp), %rsi  
0x7fc7cfab9004  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab900e  callq *%rax             
0x7fc7cfab9010  mov %al, %cl            
0x7fc7cfab9012  mov $0x0, %eax          
0x7fc7cfab9017  testb $0x1, %cl         
0x7fc7cfab901a  mov %r12, %rbx          
0x7fc7cfab901d  jz 0x44b2                ; 0x7fc7cfab9032
0x7fc7cfab9023  mov %r14, %rdi          
0x7fc7cfab9026  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab9030  callq *%rax             
0x7fc7cfab9032  test %rax, %rax         
0x7fc7cfab9035  lea -0xa0(%rbp), %r15   
0x7fc7cfab903c  jz 0x45d8                ; 0x7fc7cfab9158
0x7fc7cfab9042  mov -0x100(%rbp), %rax  
0x7fc7cfab9049  mov %rax, -0xa8(%rbp)   
0x7fc7cfab9050  movq $0x3, -0xa0(%rbp)  
0x7fc7cfab905b  testb $0x1, %al         
0x7fc7cfab905e  jnz 0x453a               ; 0x7fc7cfab90ba
0x7fc7cfab9064  mov %rax, -0x50(%rbp)   
0x7fc7cfab9068  movq $0x55e, -0x58(%rbp)
0x7fc7cfab9070  movq $0x1a, -0x48(%rbp) 
0x7fc7cfab9078  mov $0x1, -0x40(%rbp)   
0x7fc7cfab907f  movq $0x0, -0x30(%rbp)  
0x7fc7cfab9087  mov %r15, -0x38(%rbp)   
0x7fc7cfab908b  mov 0x15f33b0, %rsi     
0x7fc7cfab9093  mov 0x20(%rsi), %rax    
0x7fc7cfab9097  mov $0x2f, -0xcc(%rbp)  
0x7fc7cfab90a1  mov %r14, %rdi          
0x7fc7cfab90a4  mov %rbx, %rdx          
0x7fc7cfab90a7  mov %r13, %rcx          
0x7fc7cfab90aa  callq *%rax             
0x7fc7cfab90ac  test %rax, %rax         
0x7fc7cfab90af  jnz 0x457a               ; 0x7fc7cfab90fa
0x7fc7cfab90b5  jmp 0x45d8               ; 0x7fc7cfab9158
0x7fc7cfab90ba  sarq $0x1, %rax         
0x7fc7cfab90bd  lea 0x1(%rax), %rsi     
0x7fc7cfab90c1  mov $0x4000000000000000, %rcx
0x7fc7cfab90cb  add %rcx, %rax          
0x7fc7cfab90ce  mov $0x7ffffffffffffffe, %rcx
0x7fc7cfab90d8  cmp %rcx, %rax          
0x7fc7cfab90db  ja 0x456b                ; 0x7fc7cfab90eb
0x7fc7cfab90e1  lea 0x1(%rsi,%rsi), %rax
0x7fc7cfab90e6  jmp 0x457a               ; 0x7fc7cfab90fa
0x7fc7cfab90eb  mov %r14, %rdi          
0x7fc7cfab90ee  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7fc7cfab90f8  callq *%rax             
0x7fc7cfab90fa  mov %rax, -0xa8(%rbp)   
0x7fc7cfab9101  mov %rax, -0x100(%rbp)  
0x7fc7cfab9108  mov 0x8(%r14), %rcx     
0x7fc7cfab910c  mov 0x158251e, %dl      
0x7fc7cfab9113  or 0x16(%rcx), %dl      
0x7fc7cfab9116  jz 0x1ce                 ; 0x7fc7cfab4d4e
0x7fc7cfab911c  mov $0x35, -0xcc(%rbp)  
0x7fc7cfab9126  mov %r14, %rdi          
0x7fc7cfab9129  mov %rbx, %rsi          
0x7fc7cfab912c  mov $0x763000, %rax      ; rbx_check_interrupts
0x7fc7cfab9136  callq *%rax             
0x7fc7cfab9138  test %rax, %rax         
0x7fc7cfab913b  jnz 0x1c7                ; 0x7fc7cfab4d47
0x7fc7cfab9141  jmp 0x45d8               ; 0x7fc7cfab9158
0x7fc7cfab9146  mov %r15, %r13          
0x7fc7cfab9149  mov -0x1b0(%rbp), %rax  
0x7fc7cfab9150  mov %r12, %rbx          
0x7fc7cfab9153  jmp 0x44b2               ; 0x7fc7cfab9032
0x7fc7cfab9158  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7fc7cfab9162  lea -0xf0(%rbp), %rsi   
0x7fc7cfab9169  mov %r14, %rdi          
0x7fc7cfab916c  callq *%rax             
0x7fc7cfab916e  mov %al, %cl            
0x7fc7cfab9170  xor %eax, %eax          
0x7fc7cfab9172  testb $0x1, %cl         
0x7fc7cfab9175  jz 0x4697                ; 0x7fc7cfab9217
0x7fc7cfab917b  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7fc7cfab9185  mov %r14, %rdi          
0x7fc7cfab9188  callq *%rax             
0x7fc7cfab918a  jmp 0x4697               ; 0x7fc7cfab9217
0x7fc7cfab918f  mov $0x28, -0xcc(%rbp)  
0x7fc7cfab9199  mov $0x7fc7b4003d70, %rax
0x7fc7cfab91a3  mov %rax, (%rsp)        
0x7fc7cfab91a7  mov $0x0, 0x10(%rsp)    
0x7fc7cfab91af  jmp 0x4669               ; 0x7fc7cfab91e9
0x7fc7cfab91b4  movq $0x1a, -0xa8(%rbp) 
0x7fc7cfab91bf  mov $0x1a, %eax         
0x7fc7cfab91c4  jmp 0x4697               ; 0x7fc7cfab9217
0x7fc7cfab91c9  mov $0x28, -0xcc(%rbp)  
0x7fc7cfab91d3  mov $0x7fc7b4003d70, %rax
0x7fc7cfab91dd  mov %rax, (%rsp)        
0x7fc7cfab91e1  mov $0x1, 0x10(%rsp)    
0x7fc7cfab91e9  mov $0x0, 0x8(%rsp)     
0x7fc7cfab91f1  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7fc7cfab91fb  lea -0xf0(%rbp), %rsi   
0x7fc7cfab9202  mov $0x28, %edx         
0x7fc7cfab9207  mov $0x4, %ecx          
0x7fc7cfab920c  xor %r9d, %r9d          
0x7fc7cfab920f  mov %r14, %rdi          
0x7fc7cfab9212  mov %rsi, %r8           
0x7fc7cfab9215  callq *%rax             
0x7fc7cfab9217  addq $0x338, %rsp       
0x7fc7cfab921e  pop %rbx                
0x7fc7cfab921f  pop %r12                
0x7fc7cfab9221  pop %r13                
0x7fc7cfab9223  pop %r14                
0x7fc7cfab9225  pop %r15                
0x7fc7cfab9227  pop %rbp                
0x7fc7cfab9228  ret                     
