[[[ LLVM Simple IR: _X_Array#[]@1 ]]]

define %"struct.rubinius::Object"* @"_X_Array#[]@1"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !9
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !9
  %counter2 = alloca i32, !dbg !9
  %valid_flag = alloca i1, !dbg !9
  %cfstk = alloca %"struct.rubinius::Object"*, i32 22, !dbg !9
  %var_mem = alloca %"struct.rubinius::Object"*, i32 11, !dbg !9
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !9
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, !dbg !9
  %arg_cmp = icmp slt i32 %arg.total, 1, !dbg !9
  %arg_cmp1 = icmp sgt i32 %arg.total, 2, !dbg !9
  %arg_combine = or i1 %arg_cmp, %arg_cmp1, !dbg !9
  br i1 %arg_combine, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !9
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !9
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !9
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !9
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !9
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !9
  store i8* null, i8** %3, !dbg !9
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !9
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !9
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !9
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !9
  store i32 40, i32* %5, !dbg !9
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  store i32 0, i32* %6, !dbg !9
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !9
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !9
  store i8* inttoptr (i64 140281080973552 to i8*), i8** %8, !dbg !9
  store i32 0, i32* %counter_alloca, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !9
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !9
  %added = add i32 %counter, 1, !dbg !9
  store i32 %added, i32* %counter_alloca, !dbg !9
  %loop_check = icmp eq i32 %added, 13, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !9
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !9, !rbx-classid !10
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !9
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !9
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !9
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !9
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !9
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !9
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !9
  %local_pos2 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2, !dbg !9
  %local_pos3 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos3, !dbg !9
  %local_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos4, !dbg !9
  %local_pos5 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos5, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !9
  store i32 0, i32* %counter_alloca, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %loop_val = load i32* %counter_alloca, !dbg !9
  %loop_test = icmp slt i32 %loop_val, %arg.total, !dbg !9
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !9

arg_loop_body:                                    ; preds = %arg_loop_top
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 %loop_val, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 %loop_val, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !9
  %add = add i32 %loop_val, 1, !dbg !9
  store i32 %add, i32* %counter_alloca, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_cont:                                    ; preds = %arg_loop_top
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !11
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !11
  %stack_limit = load i64* %18, !dbg !11
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !11
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !11
  %check_interrupts = load i8* %20, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), !dbg !11
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %19, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %ip451, %continue1615, %use_call1614, %use_call1589, %is_exception1530, %ip386, %continue1468, %use_call1467, %use_call1375, %ip345, %ip334, %continue1279, %use_call1278, %use_call1202, %continue1164, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %continue1020, %continue1000, %use_call999, %ip219, %ip205, %ip195, %ip183, %continue869, %continue849, %use_call848, %ip158, %continue789, %use_call788, %ip139, %continue725, %use_call724, %use_call700, %is_exception, %class_fallback574, %class_fallback533, %continue547, %class_fallback492, %ip538, %class_fallback427, %class_fallback383, %class_fallback342, %ip492, %ip483, %class_fallback260, %class_fallback216, %continue183, %use_call182, %use_call132, %class_fallback78, %class_fallback51, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !9
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack_pos6, !dbg !9
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  %stack_load = load %"struct.rubinius::Object"** %stack_pos7, !dbg !9
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !9
  %and = and i64 %as_int, 15, !dbg !9
  %is_true = icmp ne i64 %and, 10, !dbg !9
  br i1 %is_true, label %ip8, label %continue, !dbg !9

continue:                                         ; preds = %method_body
  br label %ip4, !dbg !9

ip4:                                              ; preds = %continue
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos8, !dbg !9
  %local_pos9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !9
  %stack_load11 = load %"struct.rubinius::Object"** %stack_pos10, !dbg !9, !rbx-classid !12
  store %"struct.rubinius::Object"* %stack_load11, %"struct.rubinius::Object"** %local_pos9, !dbg !9
  br label %ip8, !dbg !9

ip8:                                              ; preds = %ip4, %method_body
  %local_pos12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !13
  %local = load %"struct.rubinius::Object"** %local_pos12, !dbg !13, !rbx-classid !14
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !13
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos13, !dbg !13
  %stack_pos14 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !15
  %stack_load15 = load %"struct.rubinius::Object"** %stack_pos14, !dbg !15, !rbx-classid !14
  %stack_pos16 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %stack_load15, %"struct.rubinius::Object"** %stack_pos16, !dbg !15
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), !dbg !15
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564112 to %"struct.rubinius::ConstantCache"**), !dbg !15
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !15
  %constant_scope17 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !15
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !15
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !15
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope17, %frame_scope, !dbg !15
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !15

check_serial:                                     ; preds = %ip8
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !15
  %serial = load i32* %serial_pos, !dbg !15
  %use_cache19 = icmp eq i32 %global_serial, %serial, !dbg !15
  br i1 %use_cache19, label %use_cache, label %use_call, !dbg !15

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !15
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !15
  br label %continue18, !dbg !15

use_call:                                         ; preds = %check_serial, %ip8
  store i32 11, i32* %ip_pos, !dbg !15
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564112 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !15
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !15
  br i1 %null_check, label %bail_out, label %check_active, !dbg !15

continue18:                                       ; preds = %continue20, %use_cache
  %constant = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue20 ], !dbg !15, !rbx-classid !16
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos21, !dbg !15
  %stack_pos22 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load23 = load %"struct.rubinius::Object"** %stack_pos22, !dbg !15, !rbx-classid !16
  %stack_pos24 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  %stack_load25 = load %"struct.rubinius::Object"** %stack_pos24, !dbg !15, !rbx-classid !14
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %stack_load23, %"struct.rubinius::Object"** %stack_pos26, !dbg !15
  %stack_pos27 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  store %"struct.rubinius::Object"* %stack_load25, %"struct.rubinius::Object"** %stack_pos27, !dbg !15
  %stack_pos29 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load30 = load %"struct.rubinius::Object"** %stack_pos29, !dbg !15, !rbx-classid !14
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !15
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !15, !rbx-classid !14
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load32 to i64, !dbg !15
  %masked = and i64 %cast, 1, !dbg !15
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !15
  %is_fixnum33 = select i1 %is_fixnum, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !15
  %stack_pos34 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  store %"struct.rubinius::Object"* %is_fixnum33, %"struct.rubinius::Object"** %stack_pos34, !dbg !15
  br label %continue28, !dbg !15

continue20:                                       ; preds = %check_active
  br label %continue18, !dbg !15

check_active:                                     ; preds = %use_call
  br label %continue20, !dbg !15

class_fallback:                                   ; No predecessors!
  store i32 14, i32* %ip_pos, !dbg !15
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 0), !dbg !15
  br label %return_pad, !dbg !15

serial_fallback:                                  ; No predecessors!
  store i32 14, i32* %ip_pos, !dbg !15
  %22 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 14, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !15
  br label %return_pad, !dbg !15

continue28:                                       ; preds = %continue18
  %stack_pos35 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !15
  %stack_load36 = load %"struct.rubinius::Object"** %stack_pos35, !dbg !15
  %as_int37 = ptrtoint %"struct.rubinius::Object"* %stack_load36 to i64, !dbg !15
  %and38 = and i64 %as_int37, 15, !dbg !15
  %is_true39 = icmp eq i64 %and38, 10, !dbg !15
  br i1 %is_true39, label %ip149, label %continue40, !dbg !15

continue40:                                       ; preds = %continue28
  br label %ip19, !dbg !15

ip19:                                             ; preds = %continue40
  %local_pos41 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  %local42 = load %"struct.rubinius::Object"** %local_pos41, !dbg !17, !rbx-classid !14
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %local42, %"struct.rubinius::Object"** %stack_pos43, !dbg !17
  %local_pos44 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !17
  %stack_pos45 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !17
  %stack_load46 = load %"struct.rubinius::Object"** %stack_pos45, !dbg !17, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load46, %"struct.rubinius::Object"** %local_pos44, !dbg !17
  %local_pos47 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %local48 = load %"struct.rubinius::Object"** %local_pos47, !dbg !18, !rbx-classid !19
  %stack_pos49 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %local48, %"struct.rubinius::Object"** %stack_pos49, !dbg !18
  %stack_pos50 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos50, !dbg !18
  %stack_pos54 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load55 = load %"struct.rubinius::Object"** %stack_pos54, !dbg !18, !rbx-classid !19
  %cast56 = ptrtoint %"struct.rubinius::Object"* %stack_load55 to i64, !dbg !18
  %stack_pos57 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  %stack_load58 = load %"struct.rubinius::Object"** %stack_pos57, !dbg !18, !rbx-classid !20
  %cast59 = ptrtoint %"struct.rubinius::Object"* %stack_load58 to i64, !dbg !18
  %fixnums_anded = and i64 %cast56, %cast59
  %masked60 = and i64 %fixnums_anded, 1
  %is_fixnum61 = icmp eq i64 %masked60, 1, !dbg !18
  br i1 %is_fixnum61, label %push_le, label %class_fallback51, !dbg !18

class_fallback51:                                 ; preds = %ip19
  %stack_pos62 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load63 = load %"struct.rubinius::Object"** %stack_pos62, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load63, %"struct.rubinius::Object"** %out_args_recv, !dbg !18
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !18
  store i32 1, i32* %out_args_total, !dbg !18
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !18
  %stack_pos64 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"** %stack_pos64, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !18
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 24564248 to %"struct.rubinius::CallSite"**), !dbg !18
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !18
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !18
  store i32 28, i32* %ip_pos, !dbg !18
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !18
  %null_check66 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !18
  br i1 %null_check66, label %bail_out, label %check_active65, !dbg !18

serial_fallback52:                                ; No predecessors!
  store i32 28, i32* %ip_pos, !dbg !18
  %23 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 28, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !18
  br label %return_pad, !dbg !18

continue53:                                       ; preds = %check_active65, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %24, %push_le ], [ %call_site_execute, %check_active65 ], !dbg !18
  %stack_pos67 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos67, !dbg !18
  %stack_pos68 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load69 = load %"struct.rubinius::Object"** %stack_pos68, !dbg !18
  %as_int70 = ptrtoint %"struct.rubinius::Object"* %stack_load69 to i64, !dbg !18
  %and71 = and i64 %as_int70, 15, !dbg !18
  %is_true72 = icmp eq i64 %and71, 10, !dbg !18
  br i1 %is_true72, label %ip44, label %continue73, !dbg !18

push_le:                                          ; preds = %ip19
  %fixnum.lt = icmp slt i64 %cast56, %cast59, !dbg !18
  %24 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !18
  br label %continue53, !dbg !18

check_active65:                                   ; preds = %class_fallback51
  br label %continue53, !dbg !18

continue73:                                       ; preds = %continue53
  br label %ip33, !dbg !18

ip33:                                             ; preds = %continue73
  %local_pos74 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %local75 = load %"struct.rubinius::Object"** %local_pos74, !dbg !18, !rbx-classid !19
  %stack_pos76 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %stack_pos76, !dbg !18
  %self_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !18
  %self = load %"struct.rubinius::Object"** %self_pos, !dbg !18
  %obj_array = bitcast %"struct.rubinius::Object"* %self to %"struct.rubinius::Object"**, !dbg !18
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !18
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !18
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos77, !dbg !18
  %stack_pos81 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load82 = load %"struct.rubinius::Object"** %stack_pos81, !dbg !18, !rbx-classid !19
  %stack_pos83 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  %stack_load84 = load %"struct.rubinius::Object"** %stack_pos83, !dbg !18
  %cast85 = ptrtoint %"struct.rubinius::Object"* %stack_load82 to i64, !dbg !18
  %cast86 = ptrtoint %"struct.rubinius::Object"* %stack_load84 to i64, !dbg !18
  %fixnums_anded87 = and i64 %cast85, %cast86, !dbg !18
  %masked88 = and i64 %fixnums_anded87, 1, !dbg !18
  %is_fixnum89 = icmp eq i64 %masked88, 1, !dbg !18
  br i1 %is_fixnum89, label %push_add, label %class_fallback78, !dbg !18

class_fallback78:                                 ; preds = %ip33
  %stack_pos93 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load94 = load %"struct.rubinius::Object"** %stack_pos93, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load94, %"struct.rubinius::Object"** %out_args_recv, !dbg !18
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !18
  store i32 1, i32* %out_args_total, !dbg !18
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !18
  %stack_pos95 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !18
  store %"struct.rubinius::Object"** %stack_pos95, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !18
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564320 to %"struct.rubinius::CallSite"**), !dbg !18
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i32 0, i32 2, !dbg !18
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, !dbg !18
  store i32 37, i32* %ip_pos, !dbg !18
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !18
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !18
  br i1 %null_check101, label %bail_out, label %check_active100, !dbg !18

serial_fallback79:                                ; No predecessors!
  store i32 37, i32* %ip_pos, !dbg !18
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 37, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !18
  br label %return_pad, !dbg !18

continue80:                                       ; preds = %check_active100, %cont
  %send_result102 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute99, %check_active100 ], !dbg !18
  %stack_pos103 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack_pos103, !dbg !18
  %local_pos104 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !18
  %stack_pos105 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  %stack_load106 = load %"struct.rubinius::Object"** %stack_pos105, !dbg !18
  store %"struct.rubinius::Object"* %stack_load106, %"struct.rubinius::Object"** %local_pos104, !dbg !18
  br label %ip45, !dbg !18

push_add:                                         ; preds = %ip33
  %as_int90 = ptrtoint %"struct.rubinius::Object"* %stack_load82 to i64, !dbg !18
  %ashr = ashr i64 %as_int90, 1, !dbg !18
  %as_int91 = ptrtoint %"struct.rubinius::Object"* %stack_load84 to i64, !dbg !18
  %ashr92 = ashr i64 %as_int91, 1, !dbg !18
  %fixnum.add = add i64 %ashr, %ashr92, !dbg !18
  %26 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !18
  %27 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !18
  %fits_fixnum = and i1 %26, %27, !dbg !18
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !18

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !18
  %or = or i64 %shl, 1, !dbg !18
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !18
  br label %cont, !dbg !18

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !18
  br label %cont, !dbg !18

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !18
  br label %continue80, !dbg !18

check_active100:                                  ; preds = %class_fallback78
  br label %continue80, !dbg !18

continue107:                                      ; No predecessors!
  br label %ip44, !dbg !18

ip45:                                             ; preds = %ip44, %continue80
  %local_pos108 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !21
  %local109 = load %"struct.rubinius::Object"** %local_pos108, !dbg !21, !rbx-classid !22
  %stack_pos110 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos110, !dbg !21
  %stack_pos111 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !21
  %stack_load112 = load %"struct.rubinius::Object"** %stack_pos111, !dbg !21, !rbx-classid !22
  %as_int113 = ptrtoint %"struct.rubinius::Object"* %stack_load112 to i64, !dbg !21
  %and114 = and i64 %as_int113, 15, !dbg !21
  %is_true115 = icmp eq i64 %and114, 10, !dbg !21
  br i1 %is_true115, label %ip74, label %continue116, !dbg !21

continue116:                                      ; preds = %ip45
  br label %ip50, !dbg !21

ip50:                                             ; preds = %continue116
  %local_pos117 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !23
  %local118 = load %"struct.rubinius::Object"** %local_pos117, !dbg !23, !rbx-classid !22
  %stack_pos119 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %local118, %"struct.rubinius::Object"** %stack_pos119, !dbg !23
  %stack_pos120 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load121 = load %"struct.rubinius::Object"** %stack_pos120, !dbg !23, !rbx-classid !22
  %stack_pos122 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %stack_load121, %"struct.rubinius::Object"** %stack_pos122, !dbg !23
  %global_serial123 = load i32* inttoptr (i64 22553844 to i32*), !dbg !23
  %constant_cache124 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564448 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos125 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 4, !dbg !23
  %constant_scope126 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos125, !dbg !23
  %scope_pos127 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope128 = load %"struct.rubinius::ConstantScope"** %scope_pos127, !dbg !23
  %same_scope129 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope126, %frame_scope128, !dbg !23
  br i1 %same_scope129, label %check_serial130, label %use_call132, !dbg !23

check_serial130:                                  ; preds = %ip50
  %serial_pos134 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 7, !dbg !23
  %serial135 = load i32* %serial_pos134, !dbg !23
  %use_cache136 = icmp eq i32 %global_serial123, %serial135, !dbg !23
  br i1 %use_cache136, label %use_cache131, label %use_call132, !dbg !23

use_cache131:                                     ; preds = %check_serial130
  %value_pos137 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i32 0, i32 2, !dbg !23
  %cached_value138 = load %"struct.rubinius::Object"** %value_pos137, !dbg !23
  br label %continue133, !dbg !23

use_call132:                                      ; preds = %check_serial130, %ip50
  store i32 53, i32* %ip_pos, !dbg !23
  %push_const_fast139 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564448 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check142 = icmp eq %"struct.rubinius::Object"* %push_const_fast139, null, !dbg !23
  br i1 %null_check142, label %bail_out, label %check_active141, !dbg !23

continue133:                                      ; preds = %continue140, %use_cache131
  %constant143 = phi %"struct.rubinius::Object"* [ %cached_value138, %use_cache131 ], [ %push_const_fast139, %continue140 ], !dbg !23, !rbx-classid !24
  %stack_pos144 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %constant143, %"struct.rubinius::Object"** %stack_pos144, !dbg !23
  %stack_pos145 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  %stack_load146 = load %"struct.rubinius::Object"** %stack_pos145, !dbg !23, !rbx-classid !24
  %stack_pos147 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load148 = load %"struct.rubinius::Object"** %stack_pos147, !dbg !23, !rbx-classid !22
  %stack_pos149 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %stack_load146, %"struct.rubinius::Object"** %stack_pos149, !dbg !23
  %stack_pos150 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %stack_load148, %"struct.rubinius::Object"** %stack_pos150, !dbg !23
  %stack_pos151 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  %stack_load152 = load %"struct.rubinius::Object"** %stack_pos151, !dbg !23, !rbx-classid !22
  %stack_pos153 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load154 = load %"struct.rubinius::Object"** %stack_pos153, !dbg !23, !rbx-classid !24
  %cast158 = ptrtoint %"struct.rubinius::Object"* %stack_load152 to i64, !dbg !23
  %masked159 = and i64 %cast158, 1, !dbg !23
  %is_fixnum160 = icmp eq i64 %masked159, 1, !dbg !23
  br i1 %is_fixnum160, label %positive, label %negative, !dbg !23

continue140:                                      ; preds = %check_active141
  br label %continue133, !dbg !23

check_active141:                                  ; preds = %use_call132
  br label %continue140, !dbg !23

continue155:                                      ; preds = %use_call156, %negative, %positive
  %constant161 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative ], [ %kind_of, %use_call156 ], !dbg !23
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %constant161, %"struct.rubinius::Object"** %stack_pos162, !dbg !23
  %stack_pos163 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load164 = load %"struct.rubinius::Object"** %stack_pos163, !dbg !23
  %as_int165 = ptrtoint %"struct.rubinius::Object"* %stack_load164 to i64, !dbg !23
  %and166 = and i64 %as_int165, 15, !dbg !23
  %is_true167 = icmp ne i64 %and166, 10, !dbg !23
  br i1 %is_true167, label %ip70, label %continue168, !dbg !23

use_call156:                                      ; No predecessors!
  %kind_of = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load152, %"struct.rubinius::Object"* %stack_load154) #0, !dbg !23
  br label %continue155, !dbg !23

positive:                                         ; preds = %continue133
  br label %continue155, !dbg !23

negative:                                         ; preds = %continue133
  br label %continue155, !dbg !23

use_cache157:                                     ; No predecessors!

continue168:                                      ; preds = %continue155
  br label %ip59, !dbg !23

ip59:                                             ; preds = %continue168
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), !dbg !23
  %stack_pos169 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack_pos169, !dbg !23
  %local_pos170 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !23
  %local171 = load %"struct.rubinius::Object"** %local_pos170, !dbg !23, !rbx-classid !22
  %stack_pos172 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %local171, %"struct.rubinius::Object"** %stack_pos172, !dbg !23
  %global_serial173 = load i32* inttoptr (i64 22553844 to i32*), !dbg !23
  %constant_cache174 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564528 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos175 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 4, !dbg !23
  %constant_scope176 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos175, !dbg !23
  %scope_pos177 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope178 = load %"struct.rubinius::ConstantScope"** %scope_pos177, !dbg !23
  %same_scope179 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope176, %frame_scope178, !dbg !23
  br i1 %same_scope179, label %check_serial180, label %use_call182, !dbg !23

check_serial180:                                  ; preds = %ip59
  %serial_pos184 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 7, !dbg !23
  %serial185 = load i32* %serial_pos184, !dbg !23
  %use_cache186 = icmp eq i32 %global_serial173, %serial185, !dbg !23
  br i1 %use_cache186, label %use_cache181, label %use_call182, !dbg !23

use_cache181:                                     ; preds = %check_serial180
  %value_pos187 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i32 0, i32 2, !dbg !23
  %cached_value188 = load %"struct.rubinius::Object"** %value_pos187, !dbg !23
  br label %continue183, !dbg !23

use_call182:                                      ; preds = %check_serial180, %ip59
  store i32 63, i32* %ip_pos, !dbg !23
  %push_const_fast189 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564528 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check192 = icmp eq %"struct.rubinius::Object"* %push_const_fast189, null, !dbg !23
  br i1 %null_check192, label %bail_out, label %check_active191, !dbg !23

continue183:                                      ; preds = %continue190, %use_cache181
  %constant193 = phi %"struct.rubinius::Object"* [ %cached_value188, %use_cache181 ], [ %push_const_fast189, %continue190 ], !dbg !23, !rbx-classid !25
  %stack_pos194 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !23
  store %"struct.rubinius::Object"* %constant193, %"struct.rubinius::Object"** %stack_pos194, !dbg !23
  %stack_pos195 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos195, !dbg !23
  %stack_pos196 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load197 = load %"struct.rubinius::Object"** %stack_pos196, !dbg !23
  store %"struct.rubinius::Object"* %stack_load197, %"struct.rubinius::Object"** %out_args_recv, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !23
  store i32 3, i32* %out_args_total, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !23
  %stack_pos198 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos198, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !23
  %cache_const199 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564560 to %"struct.rubinius::CallSite"**), !dbg !23
  %execute_pos200 = getelementptr %"struct.rubinius::CallSite"* %cache_const199, i32 0, i32 2, !dbg !23
  %execute201 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos200, !dbg !23
  store i32 67, i32* %ip_pos, !dbg !23
  %call_site_execute202 = call %"struct.rubinius::Object"* %execute201(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const199, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check205 = icmp eq %"struct.rubinius::Object"* %call_site_execute202, null, !dbg !23
  br i1 %null_check205, label %bail_out, label %check_active204, !dbg !23

continue190:                                      ; preds = %check_active191
  br label %continue183, !dbg !23

check_active191:                                  ; preds = %use_call182
  br label %continue190, !dbg !23

continue203:                                      ; preds = %check_active204
  %stack_pos206 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %call_site_execute202, %"struct.rubinius::Object"** %stack_pos206, !dbg !23
  br label %ip70, !dbg !23

ip70:                                             ; preds = %continue203, %continue155
  %local_pos207 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !23
  %stack_pos208 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load209 = load %"struct.rubinius::Object"** %stack_pos208, !dbg !23
  store %"struct.rubinius::Object"* %stack_load209, %"struct.rubinius::Object"** %local_pos207, !dbg !23
  br label %ip147, !dbg !23

check_active204:                                  ; preds = %continue183
  br label %continue203, !dbg !23

continue210:                                      ; No predecessors!
  br label %ip74, !dbg !23

ip147:                                            ; preds = %ip70
  br label %ip459, !dbg !26

continue211:                                      ; No predecessors!
  br label %ip149, !dbg !26

ip459:                                            ; preds = %ip382, %continue1176, %ip147
  %local_pos212 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !27
  %local213 = load %"struct.rubinius::Object"** %local_pos212, !dbg !27, !rbx-classid !28
  %stack_pos214 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %stack_pos214, !dbg !27
  %stack_pos215 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos215, !dbg !27
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load220 = load %"struct.rubinius::Object"** %stack_pos219, !dbg !27, !rbx-classid !28
  %cast221 = ptrtoint %"struct.rubinius::Object"* %stack_load220 to i64, !dbg !27
  %stack_pos222 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load223 = load %"struct.rubinius::Object"** %stack_pos222, !dbg !27, !rbx-classid !20
  %cast224 = ptrtoint %"struct.rubinius::Object"* %stack_load223 to i64, !dbg !27
  %fixnums_anded225 = and i64 %cast221, %cast224
  %masked226 = and i64 %fixnums_anded225, 1
  %is_fixnum227 = icmp eq i64 %masked226, 1, !dbg !27
  br i1 %is_fixnum227, label %push_le228, label %class_fallback216, !dbg !27

class_fallback216:                                ; preds = %ip459
  %stack_pos230 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load231 = load %"struct.rubinius::Object"** %stack_pos230, !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load231, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 1, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos232, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !27
  %cache_const233 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567728 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos234 = getelementptr %"struct.rubinius::CallSite"* %cache_const233, i32 0, i32 2, !dbg !27
  %execute235 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos234, !dbg !27
  store i32 463, i32* %ip_pos, !dbg !27
  %call_site_execute236 = call %"struct.rubinius::Object"* %execute235(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const233, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check238 = icmp eq %"struct.rubinius::Object"* %call_site_execute236, null, !dbg !27
  br i1 %null_check238, label %bail_out, label %check_active237, !dbg !27

serial_fallback217:                               ; No predecessors!
  store i32 463, i32* %ip_pos, !dbg !27
  %28 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 463, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue218:                                      ; preds = %check_active237, %push_le228
  %send_result239 = phi %"struct.rubinius::Object"* [ %29, %push_le228 ], [ %call_site_execute236, %check_active237 ], !dbg !27
  %stack_pos240 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result239, %"struct.rubinius::Object"** %stack_pos240, !dbg !27
  %stack_pos241 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load242 = load %"struct.rubinius::Object"** %stack_pos241, !dbg !27
  %as_int243 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !27
  %and244 = and i64 %as_int243, 15, !dbg !27
  %is_true245 = icmp eq i64 %and244, 10, !dbg !27
  br i1 %is_true245, label %ip472, label %continue246, !dbg !27

push_le228:                                       ; preds = %ip459
  %fixnum.lt229 = icmp slt i64 %cast221, %cast224, !dbg !27
  %29 = select i1 %fixnum.lt229, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !27
  br label %continue218, !dbg !27

check_active237:                                  ; preds = %class_fallback216
  br label %continue218, !dbg !27

continue246:                                      ; preds = %continue218
  br label %ip468, !dbg !27

ip468:                                            ; preds = %continue246
  %stack_pos247 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos247, !dbg !27
  %stack_pos248 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load249 = load %"struct.rubinius::Object"** %stack_pos248, !dbg !27, !rbx-classid !12
  br label %return_pad, !dbg !27

ip472:                                            ; preds = %continue218
  %stack_pos250 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos250, !dbg !27
  %local_pos251 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !29
  %local252 = load %"struct.rubinius::Object"** %local_pos251, !dbg !29, !rbx-classid !19
  %stack_pos253 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %stack_pos253, !dbg !29
  %self_pos254 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !29
  %self255 = load %"struct.rubinius::Object"** %self_pos254, !dbg !29
  %obj_array256 = bitcast %"struct.rubinius::Object"* %self255 to %"struct.rubinius::Object"**, !dbg !29
  %field_pos257 = getelementptr %"struct.rubinius::Object"** %obj_array256, i32 3, !dbg !29
  %field258 = load %"struct.rubinius::Object"** %field_pos257, !dbg !29
  %stack_pos259 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  store %"struct.rubinius::Object"* %field258, %"struct.rubinius::Object"** %stack_pos259, !dbg !29
  %stack_pos263 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load264 = load %"struct.rubinius::Object"** %stack_pos263, !dbg !29, !rbx-classid !19
  %cast265 = ptrtoint %"struct.rubinius::Object"* %stack_load264 to i64, !dbg !29
  %stack_pos266 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  %stack_load267 = load %"struct.rubinius::Object"** %stack_pos266, !dbg !29
  %cast268 = ptrtoint %"struct.rubinius::Object"* %stack_load267 to i64, !dbg !29
  %fixnums_anded269 = and i64 %cast265, %cast268
  %masked270 = and i64 %fixnums_anded269, 1
  %is_fixnum271 = icmp eq i64 %masked270, 1, !dbg !29
  br i1 %is_fixnum271, label %push_le272, label %class_fallback260, !dbg !29

class_fallback260:                                ; preds = %ip472
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load274 = load %"struct.rubinius::Object"** %stack_pos273, !dbg !29, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load274, %"struct.rubinius::Object"** %out_args_recv, !dbg !29
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !29
  store i32 1, i32* %out_args_total, !dbg !29
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !29
  %stack_pos275 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !29
  store %"struct.rubinius::Object"** %stack_pos275, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !29
  %cache_const276 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567848 to %"struct.rubinius::CallSite"**), !dbg !29
  %execute_pos277 = getelementptr %"struct.rubinius::CallSite"* %cache_const276, i32 0, i32 2, !dbg !29
  %execute278 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos277, !dbg !29
  store i32 478, i32* %ip_pos, !dbg !29
  %call_site_execute279 = call %"struct.rubinius::Object"* %execute278(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const276, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !29
  %null_check281 = icmp eq %"struct.rubinius::Object"* %call_site_execute279, null, !dbg !29
  br i1 %null_check281, label %bail_out, label %check_active280, !dbg !29

serial_fallback261:                               ; No predecessors!
  store i32 478, i32* %ip_pos, !dbg !29
  %30 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 478, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !29
  br label %return_pad, !dbg !29

continue262:                                      ; preds = %check_active280, %push_le272
  %send_result282 = phi %"struct.rubinius::Object"* [ %31, %push_le272 ], [ %call_site_execute279, %check_active280 ], !dbg !29
  %stack_pos283 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* %send_result282, %"struct.rubinius::Object"** %stack_pos283, !dbg !29
  %stack_pos284 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  %stack_load285 = load %"struct.rubinius::Object"** %stack_pos284, !dbg !29
  %as_int286 = ptrtoint %"struct.rubinius::Object"* %stack_load285 to i64, !dbg !29
  %and287 = and i64 %as_int286, 15, !dbg !29
  %is_true288 = icmp eq i64 %and287, 10, !dbg !29
  br i1 %is_true288, label %ip508, label %continue289, !dbg !29

push_le272:                                       ; preds = %ip472
  %fixnum.ge = icmp sge i64 %cast265, %cast268, !dbg !29
  %31 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !29
  br label %continue262, !dbg !29

check_active280:                                  ; preds = %class_fallback260
  br label %continue262, !dbg !29

continue289:                                      ; preds = %continue262
  br label %ip483, !dbg !29

ip483:                                            ; preds = %continue289
  %local_pos290 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !30
  %local291 = load %"struct.rubinius::Object"** %local_pos290, !dbg !30, !rbx-classid !19
  %stack_pos292 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local291, %"struct.rubinius::Object"** %stack_pos292, !dbg !30
  %self_pos293 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self294 = load %"struct.rubinius::Object"** %self_pos293, !dbg !30
  %obj_array295 = bitcast %"struct.rubinius::Object"* %self294 to %"struct.rubinius::Object"**, !dbg !30
  %field_pos296 = getelementptr %"struct.rubinius::Object"** %obj_array295, i32 3, !dbg !30
  %field297 = load %"struct.rubinius::Object"** %field_pos296, !dbg !30
  %stack_pos298 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %field297, %"struct.rubinius::Object"** %stack_pos298, !dbg !30
  %stack_pos299 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load300 = load %"struct.rubinius::Object"** %stack_pos299, !dbg !30, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load300, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos301 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos301, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const302 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567920 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos303 = getelementptr %"struct.rubinius::CallSite"* %cache_const302, i32 0, i32 2, !dbg !30
  %execute304 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos303, !dbg !30
  store i32 487, i32* %ip_pos, !dbg !30
  %call_site_execute305 = call %"struct.rubinius::Object"* %execute304(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const302, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check308 = icmp eq %"struct.rubinius::Object"* %call_site_execute305, null, !dbg !30
  br i1 %null_check308, label %bail_out, label %check_active307, !dbg !30

continue306:                                      ; preds = %check_active307
  %stack_pos309 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute305, %"struct.rubinius::Object"** %stack_pos309, !dbg !30
  %stack_pos310 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load311 = load %"struct.rubinius::Object"** %stack_pos310, !dbg !30
  %as_int312 = ptrtoint %"struct.rubinius::Object"* %stack_load311 to i64, !dbg !30
  %and313 = and i64 %as_int312, 15, !dbg !30
  %is_true314 = icmp eq i64 %and313, 10, !dbg !30
  br i1 %is_true314, label %ip502, label %continue315, !dbg !30

check_active307:                                  ; preds = %ip483
  br label %continue306, !dbg !30

continue315:                                      ; preds = %continue306
  br label %ip492, !dbg !30

ip492:                                            ; preds = %continue315
  %32 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self316 = load %"struct.rubinius::Object"** %32, !dbg !30
  %stack_pos317 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %stack_pos317, !dbg !30
  %stack_pos318 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos318, !dbg !30
  %stack_pos319 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos319, !dbg !30
  %stack_pos320 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load321 = load %"struct.rubinius::Object"** %stack_pos320, !dbg !30
  store %"struct.rubinius::Object"* %stack_load321, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 2, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos322 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos322, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const323 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567992 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos324 = getelementptr %"struct.rubinius::CallSite"* %cache_const323, i32 0, i32 2, !dbg !30
  %execute325 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos324, !dbg !30
  store i32 496, i32* %ip_pos, !dbg !30
  %call_site_execute326 = call %"struct.rubinius::Object"* %execute325(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const323, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check329 = icmp eq %"struct.rubinius::Object"* %call_site_execute326, null, !dbg !30
  br i1 %null_check329, label %bail_out, label %check_active328, !dbg !30

continue327:                                      ; preds = %check_active328
  %stack_pos330 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute326, %"struct.rubinius::Object"** %stack_pos330, !dbg !30
  %stack_pos331 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load332 = load %"struct.rubinius::Object"** %stack_pos331, !dbg !30
  br label %return_pad, !dbg !30

ip502:                                            ; preds = %continue306
  %stack_pos333 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos333, !dbg !30
  %stack_pos334 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos334, !dbg !31
  %stack_pos335 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !31
  %stack_load336 = load %"struct.rubinius::Object"** %stack_pos335, !dbg !31, !rbx-classid !12
  br label %return_pad, !dbg !31

ip508:                                            ; preds = %continue262
  %stack_pos337 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !29
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos337, !dbg !29
  %local_pos338 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !32
  %local339 = load %"struct.rubinius::Object"** %local_pos338, !dbg !32, !rbx-classid !19
  %stack_pos340 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %stack_pos340, !dbg !32
  %stack_pos341 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos341, !dbg !32
  %stack_pos345 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load346 = load %"struct.rubinius::Object"** %stack_pos345, !dbg !32, !rbx-classid !19
  %cast347 = ptrtoint %"struct.rubinius::Object"* %stack_load346 to i64, !dbg !32
  %stack_pos348 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  %stack_load349 = load %"struct.rubinius::Object"** %stack_pos348, !dbg !32, !rbx-classid !20
  %cast350 = ptrtoint %"struct.rubinius::Object"* %stack_load349 to i64, !dbg !32
  %fixnums_anded351 = and i64 %cast347, %cast350
  %masked352 = and i64 %fixnums_anded351, 1
  %is_fixnum353 = icmp eq i64 %masked352, 1, !dbg !32
  br i1 %is_fixnum353, label %push_le354, label %class_fallback342, !dbg !32

check_active328:                                  ; preds = %ip492
  br label %continue327, !dbg !30

class_fallback342:                                ; preds = %ip508
  %stack_pos356 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load357 = load %"struct.rubinius::Object"** %stack_pos356, !dbg !32, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load357, %"struct.rubinius::Object"** %out_args_recv, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !32
  store i32 1, i32* %out_args_total, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !32
  %stack_pos358 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos358, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !32
  %cache_const359 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568128 to %"struct.rubinius::CallSite"**), !dbg !32
  %execute_pos360 = getelementptr %"struct.rubinius::CallSite"* %cache_const359, i32 0, i32 2, !dbg !32
  %execute361 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos360, !dbg !32
  store i32 513, i32* %ip_pos, !dbg !32
  %call_site_execute362 = call %"struct.rubinius::Object"* %execute361(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const359, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check364 = icmp eq %"struct.rubinius::Object"* %call_site_execute362, null, !dbg !32
  br i1 %null_check364, label %bail_out, label %check_active363, !dbg !32

serial_fallback343:                               ; No predecessors!
  store i32 513, i32* %ip_pos, !dbg !32
  %33 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 513, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !32
  br label %return_pad, !dbg !32

continue344:                                      ; preds = %check_active363, %push_le354
  %send_result365 = phi %"struct.rubinius::Object"* [ %34, %push_le354 ], [ %call_site_execute362, %check_active363 ], !dbg !32
  %stack_pos366 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %send_result365, %"struct.rubinius::Object"** %stack_pos366, !dbg !32
  %stack_pos367 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load368 = load %"struct.rubinius::Object"** %stack_pos367, !dbg !32
  %as_int369 = ptrtoint %"struct.rubinius::Object"* %stack_load368 to i64, !dbg !32
  %and370 = and i64 %as_int369, 15, !dbg !32
  %is_true371 = icmp eq i64 %and370, 10, !dbg !32
  br i1 %is_true371, label %ip522, label %continue372, !dbg !32

push_le354:                                       ; preds = %ip508
  %fixnum.lt355 = icmp slt i64 %cast347, %cast350, !dbg !32
  %34 = select i1 %fixnum.lt355, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !32
  br label %continue344, !dbg !32

check_active363:                                  ; preds = %class_fallback342
  br label %continue344, !dbg !32

continue372:                                      ; preds = %continue344
  br label %ip518, !dbg !32

ip518:                                            ; preds = %continue372
  %stack_pos373 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos373, !dbg !32
  %stack_pos374 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  %stack_load375 = load %"struct.rubinius::Object"** %stack_pos374, !dbg !32, !rbx-classid !12
  br label %return_pad, !dbg !32

ip522:                                            ; preds = %continue344
  %stack_pos376 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos376, !dbg !32
  %local_pos377 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !33
  %local378 = load %"struct.rubinius::Object"** %local_pos377, !dbg !33, !rbx-classid !19
  %stack_pos379 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %stack_pos379, !dbg !33
  %local_pos380 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !33
  %local381 = load %"struct.rubinius::Object"** %local_pos380, !dbg !33, !rbx-classid !28
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos382, !dbg !33
  %stack_pos386 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load387 = load %"struct.rubinius::Object"** %stack_pos386, !dbg !33, !rbx-classid !19
  %stack_pos388 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  %stack_load389 = load %"struct.rubinius::Object"** %stack_pos388, !dbg !33, !rbx-classid !28
  %cast394 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !33
  %cast395 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !33
  %fixnums_anded396 = and i64 %cast394, %cast395, !dbg !33
  %masked397 = and i64 %fixnums_anded396, 1, !dbg !33
  %is_fixnum398 = icmp eq i64 %masked397, 1, !dbg !33
  br i1 %is_fixnum398, label %push_add390, label %class_fallback383, !dbg !33

class_fallback383:                                ; preds = %ip522
  %stack_pos410 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load411 = load %"struct.rubinius::Object"** %stack_pos410, !dbg !33, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load411, %"struct.rubinius::Object"** %out_args_recv, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !33
  store i32 1, i32* %out_args_total, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !33
  %stack_pos412 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos412, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !33
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568248 to %"struct.rubinius::CallSite"**), !dbg !33
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i32 0, i32 2, !dbg !33
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, !dbg !33
  store i32 528, i32* %ip_pos, !dbg !33
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !33
  br i1 %null_check418, label %bail_out, label %check_active417, !dbg !33

serial_fallback384:                               ; No predecessors!
  store i32 528, i32* %ip_pos, !dbg !33
  %35 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 528, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !33
  br label %return_pad, !dbg !33

continue385:                                      ; preds = %check_active417, %cont393
  %send_result419 = phi %"struct.rubinius::Object"* [ %result409, %cont393 ], [ %call_site_execute416, %check_active417 ], !dbg !33
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos420, !dbg !33
  %self_pos421 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !33
  %self422 = load %"struct.rubinius::Object"** %self_pos421, !dbg !33
  %obj_array423 = bitcast %"struct.rubinius::Object"* %self422 to %"struct.rubinius::Object"**, !dbg !33
  %field_pos424 = getelementptr %"struct.rubinius::Object"** %obj_array423, i32 3, !dbg !33
  %field425 = load %"struct.rubinius::Object"** %field_pos424, !dbg !33
  %stack_pos426 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %field425, %"struct.rubinius::Object"** %stack_pos426, !dbg !33
  %stack_pos430 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load431 = load %"struct.rubinius::Object"** %stack_pos430, !dbg !33
  %cast432 = ptrtoint %"struct.rubinius::Object"* %stack_load431 to i64, !dbg !33
  %stack_pos433 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  %stack_load434 = load %"struct.rubinius::Object"** %stack_pos433, !dbg !33
  %cast435 = ptrtoint %"struct.rubinius::Object"* %stack_load434 to i64, !dbg !33
  %fixnums_anded436 = and i64 %cast432, %cast435
  %masked437 = and i64 %fixnums_anded436, 1
  %is_fixnum438 = icmp eq i64 %masked437, 1, !dbg !33
  br i1 %is_fixnum438, label %push_le439, label %class_fallback427, !dbg !33

push_add390:                                      ; preds = %ip522
  %as_int399 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !33
  %ashr400 = ashr i64 %as_int399, 1, !dbg !33
  %as_int401 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !33
  %ashr402 = ashr i64 %as_int401, 1, !dbg !33
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !33
  %36 = icmp sle i64 %fixnum.add403, 4611686018427387903, !dbg !33
  %37 = icmp sge i64 %fixnum.add403, -4611686018427387903, !dbg !33
  %fits_fixnum404 = and i1 %36, %37, !dbg !33
  br i1 %fits_fixnum404, label %tagnow391, label %bignum392, !dbg !33

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !33
  %or407 = or i64 %shl406, 1, !dbg !33
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !33
  br label %cont393, !dbg !33

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #1, !dbg !33
  br label %cont393, !dbg !33

cont393:                                          ; preds = %tagnow391, %bignum392
  %result409 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], !dbg !33
  br label %continue385, !dbg !33

check_active417:                                  ; preds = %class_fallback383
  br label %continue385, !dbg !33

class_fallback427:                                ; preds = %continue385
  %stack_pos440 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load441 = load %"struct.rubinius::Object"** %stack_pos440, !dbg !33
  store %"struct.rubinius::Object"* %stack_load441, %"struct.rubinius::Object"** %out_args_recv, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !33
  store i32 1, i32* %out_args_total, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !33
  %stack_pos442 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos442, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !33
  %cache_const443 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568288 to %"struct.rubinius::CallSite"**), !dbg !33
  %execute_pos444 = getelementptr %"struct.rubinius::CallSite"* %cache_const443, i32 0, i32 2, !dbg !33
  %execute445 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos444, !dbg !33
  store i32 533, i32* %ip_pos, !dbg !33
  %call_site_execute446 = call %"struct.rubinius::Object"* %execute445(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const443, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check448 = icmp eq %"struct.rubinius::Object"* %call_site_execute446, null, !dbg !33
  br i1 %null_check448, label %bail_out, label %check_active447, !dbg !33

serial_fallback428:                               ; No predecessors!
  store i32 533, i32* %ip_pos, !dbg !33
  %38 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 533, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !33
  br label %return_pad, !dbg !33

continue429:                                      ; preds = %check_active447, %push_le439
  %send_result449 = phi %"struct.rubinius::Object"* [ %39, %push_le439 ], [ %call_site_execute446, %check_active447 ], !dbg !33
  %stack_pos450 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %send_result449, %"struct.rubinius::Object"** %stack_pos450, !dbg !33
  %stack_pos451 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  %stack_load452 = load %"struct.rubinius::Object"** %stack_pos451, !dbg !33
  %as_int453 = ptrtoint %"struct.rubinius::Object"* %stack_load452 to i64, !dbg !33
  %and454 = and i64 %as_int453, 15, !dbg !33
  %is_true455 = icmp eq i64 %and454, 10, !dbg !33
  br i1 %is_true455, label %ip549, label %continue456, !dbg !33

push_le439:                                       ; preds = %continue385
  %fixnum.gt = icmp sgt i64 %cast432, %cast435, !dbg !33
  %39 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !33
  br label %continue429, !dbg !33

check_active447:                                  ; preds = %class_fallback427
  br label %continue429, !dbg !33

continue456:                                      ; preds = %continue429
  br label %ip538, !dbg !33

ip538:                                            ; preds = %continue456
  %self_pos457 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !34
  %self458 = load %"struct.rubinius::Object"** %self_pos457, !dbg !34
  %obj_array459 = bitcast %"struct.rubinius::Object"* %self458 to %"struct.rubinius::Object"**, !dbg !34
  %field_pos460 = getelementptr %"struct.rubinius::Object"** %obj_array459, i32 3, !dbg !34
  %field461 = load %"struct.rubinius::Object"** %field_pos460, !dbg !34
  %stack_pos462 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %stack_pos462, !dbg !34
  %local_pos463 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !34
  %local464 = load %"struct.rubinius::Object"** %local_pos463, !dbg !34, !rbx-classid !19
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local464, %"struct.rubinius::Object"** %stack_pos465, !dbg !34
  %stack_pos466 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load467 = load %"struct.rubinius::Object"** %stack_pos466, !dbg !34
  store %"struct.rubinius::Object"* %stack_load467, %"struct.rubinius::Object"** %out_args_recv, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !34
  store i32 1, i32* %out_args_total, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !34
  %stack_pos468 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos468, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !34
  %cache_const469 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568360 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos470 = getelementptr %"struct.rubinius::CallSite"* %cache_const469, i32 0, i32 2, !dbg !34
  %execute471 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos470, !dbg !34
  store i32 542, i32* %ip_pos, !dbg !34
  %call_site_execute472 = call %"struct.rubinius::Object"* %execute471(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const469, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check475 = icmp eq %"struct.rubinius::Object"* %call_site_execute472, null, !dbg !34
  br i1 %null_check475, label %bail_out, label %check_active474, !dbg !34

continue473:                                      ; preds = %check_active474
  %stack_pos476 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %stack_pos476, !dbg !34
  %local_pos477 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !34
  %stack_pos478 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !34
  %stack_load479 = load %"struct.rubinius::Object"** %stack_pos478, !dbg !34
  store %"struct.rubinius::Object"* %stack_load479, %"struct.rubinius::Object"** %local_pos477, !dbg !34
  br label %ip550, !dbg !34

check_active474:                                  ; preds = %ip538
  br label %continue473, !dbg !34

continue480:                                      ; No predecessors!
  br label %ip549, !dbg !34

ip550:                                            ; preds = %ip549, %continue473
  %40 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !35
  %self481 = load %"struct.rubinius::Object"** %40, !dbg !35
  %stack_pos482 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  store %"struct.rubinius::Object"* %self481, %"struct.rubinius::Object"** %stack_pos482, !dbg !35
  %self_pos483 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !35
  %self484 = load %"struct.rubinius::Object"** %self_pos483, !dbg !35
  %obj_array485 = bitcast %"struct.rubinius::Object"* %self484 to %"struct.rubinius::Object"**, !dbg !35
  %field_pos486 = getelementptr %"struct.rubinius::Object"** %obj_array485, i32 5, !dbg !35
  %field487 = load %"struct.rubinius::Object"** %field_pos486, !dbg !35
  %stack_pos488 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %stack_pos488, !dbg !35
  %local_pos489 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !35
  %local490 = load %"struct.rubinius::Object"** %local_pos489, !dbg !35, !rbx-classid !19
  %stack_pos491 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"* %local490, %"struct.rubinius::Object"** %stack_pos491, !dbg !35
  %stack_pos495 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load496 = load %"struct.rubinius::Object"** %stack_pos495, !dbg !35
  %stack_pos497 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  %stack_load498 = load %"struct.rubinius::Object"** %stack_pos497, !dbg !35, !rbx-classid !19
  %cast503 = ptrtoint %"struct.rubinius::Object"* %stack_load496 to i64, !dbg !35
  %cast504 = ptrtoint %"struct.rubinius::Object"* %stack_load498 to i64, !dbg !35
  %fixnums_anded505 = and i64 %cast503, %cast504, !dbg !35
  %masked506 = and i64 %fixnums_anded505, 1, !dbg !35
  %is_fixnum507 = icmp eq i64 %masked506, 1, !dbg !35
  br i1 %is_fixnum507, label %push_add499, label %class_fallback492, !dbg !35

class_fallback492:                                ; preds = %ip550
  %stack_pos519 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load520 = load %"struct.rubinius::Object"** %stack_pos519, !dbg !35
  store %"struct.rubinius::Object"* %stack_load520, %"struct.rubinius::Object"** %out_args_recv, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !35
  store i32 1, i32* %out_args_total, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !35
  %stack_pos521 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos521, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !35
  %cache_const522 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568472 to %"struct.rubinius::CallSite"**), !dbg !35
  %execute_pos523 = getelementptr %"struct.rubinius::CallSite"* %cache_const522, i32 0, i32 2, !dbg !35
  %execute524 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos523, !dbg !35
  store i32 556, i32* %ip_pos, !dbg !35
  %call_site_execute525 = call %"struct.rubinius::Object"* %execute524(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const522, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check527 = icmp eq %"struct.rubinius::Object"* %call_site_execute525, null, !dbg !35
  br i1 %null_check527, label %bail_out, label %check_active526, !dbg !35

serial_fallback493:                               ; No predecessors!
  store i32 556, i32* %ip_pos, !dbg !35
  %41 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 556, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !35
  br label %return_pad, !dbg !35

continue494:                                      ; preds = %check_active526, %cont502
  %send_result528 = phi %"struct.rubinius::Object"* [ %result518, %cont502 ], [ %call_site_execute525, %check_active526 ], !dbg !35
  %stack_pos529 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"* %send_result528, %"struct.rubinius::Object"** %stack_pos529, !dbg !35
  %local_pos530 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !35
  %local531 = load %"struct.rubinius::Object"** %local_pos530, !dbg !35, !rbx-classid !28
  %stack_pos532 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  store %"struct.rubinius::Object"* %local531, %"struct.rubinius::Object"** %stack_pos532, !dbg !35
  %stack_pos536 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load537 = load %"struct.rubinius::Object"** %stack_pos536, !dbg !35
  %cast538 = ptrtoint %"struct.rubinius::Object"* %stack_load537 to i64, !dbg !35
  %masked539 = and i64 %cast538, 3, !dbg !35
  %is_reference = icmp eq i64 %masked539, 0, !dbg !35
  br i1 %is_reference, label %check_class_id, label %class_fallback533, !dbg !35

push_add499:                                      ; preds = %ip550
  %as_int508 = ptrtoint %"struct.rubinius::Object"* %stack_load496 to i64, !dbg !35
  %ashr509 = ashr i64 %as_int508, 1, !dbg !35
  %as_int510 = ptrtoint %"struct.rubinius::Object"* %stack_load498 to i64, !dbg !35
  %ashr511 = ashr i64 %as_int510, 1, !dbg !35
  %fixnum.add512 = add i64 %ashr509, %ashr511, !dbg !35
  %42 = icmp sle i64 %fixnum.add512, 4611686018427387903, !dbg !35
  %43 = icmp sge i64 %fixnum.add512, -4611686018427387903, !dbg !35
  %fits_fixnum513 = and i1 %42, %43, !dbg !35
  br i1 %fits_fixnum513, label %tagnow500, label %bignum501, !dbg !35

tagnow500:                                        ; preds = %push_add499
  %shl515 = shl i64 %fixnum.add512, 1, !dbg !35
  %or516 = or i64 %shl515, 1, !dbg !35
  %as_obj517 = inttoptr i64 %or516 to %"struct.rubinius::Object"*, !dbg !35
  br label %cont502, !dbg !35

bignum501:                                        ; preds = %push_add499
  %big_value514 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add512) #1, !dbg !35
  br label %cont502, !dbg !35

cont502:                                          ; preds = %tagnow500, %bignum501
  %result518 = phi %"struct.rubinius::Object"* [ %big_value514, %bignum501 ], [ %as_obj517, %tagnow500 ], !dbg !35
  br label %continue494, !dbg !35

check_active526:                                  ; preds = %class_fallback492
  br label %continue494, !dbg !35

continue535:                                      ; preds = %check_active558, %continue548
  %send_result560 = phi %"struct.rubinius::Object"* [ %prim_value, %continue548 ], [ %call_site_execute557, %check_active558 ], !dbg !35
  %stack_pos561 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  store %"struct.rubinius::Object"* %send_result560, %"struct.rubinius::Object"** %stack_pos561, !dbg !35
  %stack_pos562 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load563 = load %"struct.rubinius::Object"** %stack_pos562, !dbg !35
  br label %return_pad, !dbg !35

ip549:                                            ; preds = %continue480, %continue429
  %stack_pos564 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos564, !dbg !33
  br label %ip550, !dbg !33

ip74:                                             ; preds = %continue210, %ip45
  %local_pos565 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !36
  %local566 = load %"struct.rubinius::Object"** %local_pos565, !dbg !36, !rbx-classid !19
  %stack_pos567 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %stack_pos567, !dbg !36
  %self_pos568 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !36
  %self569 = load %"struct.rubinius::Object"** %self_pos568, !dbg !36
  %obj_array570 = bitcast %"struct.rubinius::Object"* %self569 to %"struct.rubinius::Object"**, !dbg !36
  %field_pos571 = getelementptr %"struct.rubinius::Object"** %obj_array570, i32 3, !dbg !36
  %field572 = load %"struct.rubinius::Object"** %field_pos571, !dbg !36
  %stack_pos573 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  store %"struct.rubinius::Object"* %field572, %"struct.rubinius::Object"** %stack_pos573, !dbg !36
  %stack_pos577 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load578 = load %"struct.rubinius::Object"** %stack_pos577, !dbg !36, !rbx-classid !19
  %cast579 = ptrtoint %"struct.rubinius::Object"* %stack_load578 to i64, !dbg !36
  %stack_pos580 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  %stack_load581 = load %"struct.rubinius::Object"** %stack_pos580, !dbg !36
  %cast582 = ptrtoint %"struct.rubinius::Object"* %stack_load581 to i64, !dbg !36
  %fixnums_anded583 = and i64 %cast579, %cast582
  %masked584 = and i64 %fixnums_anded583, 1
  %is_fixnum585 = icmp eq i64 %masked584, 1, !dbg !36
  br i1 %is_fixnum585, label %push_le586, label %class_fallback574, !dbg !36

check_class_id:                                   ; preds = %continue494
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load537, i32 0, i32 0, i32 1, !dbg !35
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !35
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !35
  %class_id = load i32* %class_id_pos, !dbg !35
  %check_class_id540 = icmp eq i32 %class_id, 6, !dbg !35
  br i1 %check_class_id540, label %correct_class, label %class_fallback533, !dbg !35

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !35
  %serial_id = load i32* %serial_id_pos, !dbg !35
  %check_serial_id = icmp eq i32 %serial_id, 243, !dbg !35
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback534, !dbg !35

class_fallback533:                                ; preds = %correct_serial, %check_class_id, %continue494
  %stack_pos551 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load552 = load %"struct.rubinius::Object"** %stack_pos551, !dbg !35
  store %"struct.rubinius::Object"* %stack_load552, %"struct.rubinius::Object"** %out_args_recv, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !35
  store i32 2, i32* %out_args_total, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !35
  %stack_pos553 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos553, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !35
  %cache_const554 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568520 to %"struct.rubinius::CallSite"**), !dbg !35
  %execute_pos555 = getelementptr %"struct.rubinius::CallSite"* %cache_const554, i32 0, i32 2, !dbg !35
  %execute556 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos555, !dbg !35
  store i32 562, i32* %ip_pos, !dbg !35
  %call_site_execute557 = call %"struct.rubinius::Object"* %execute556(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const554, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check559 = icmp eq %"struct.rubinius::Object"* %call_site_execute557, null, !dbg !35
  br i1 %null_check559, label %bail_out, label %check_active558, !dbg !35

correct_serial:                                   ; preds = %correct_class
  %stack_pos541 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !35
  %stack_load542 = load %"struct.rubinius::Object"** %stack_pos541, !dbg !35
  %stack_pos543 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !35
  %stack_load544 = load %"struct.rubinius::Object"** %stack_pos543, !dbg !35
  %stack_pos545 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !35
  %stack_load546 = load %"struct.rubinius::Object"** %stack_pos545, !dbg !35, !rbx-classid !28
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load542, %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"* %stack_load546) #1, !dbg !35
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !35
  %44 = icmp eq i64 %ptr2int, 34, !dbg !35
  br i1 %44, label %class_fallback533, label %continue547, !dbg !35

serial_fallback534:                               ; preds = %correct_class
  store i32 562, i32* %ip_pos, !dbg !35
  %45 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 562, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !35
  br label %return_pad, !dbg !35

continue547:                                      ; preds = %correct_serial
  %null_check550 = icmp eq %"struct.rubinius::Object"* %prim_value, null, !dbg !35
  br i1 %null_check550, label %bail_out, label %check_active549, !dbg !35

continue548:                                      ; preds = %check_active549
  br label %continue535, !dbg !35

check_active549:                                  ; preds = %continue547
  br label %continue548, !dbg !35

check_active558:                                  ; preds = %class_fallback533
  br label %continue535, !dbg !35

class_fallback574:                                ; preds = %ip74
  %stack_pos588 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load589 = load %"struct.rubinius::Object"** %stack_pos588, !dbg !36, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load589, %"struct.rubinius::Object"** %out_args_recv, !dbg !36
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !36
  store i32 1, i32* %out_args_total, !dbg !36
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !36
  %stack_pos590 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !36
  store %"struct.rubinius::Object"** %stack_pos590, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !36
  %cache_const591 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564648 to %"struct.rubinius::CallSite"**), !dbg !36
  %execute_pos592 = getelementptr %"struct.rubinius::CallSite"* %cache_const591, i32 0, i32 2, !dbg !36
  %execute593 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos592, !dbg !36
  store i32 78, i32* %ip_pos, !dbg !36
  %call_site_execute594 = call %"struct.rubinius::Object"* %execute593(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const591, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !36
  %null_check596 = icmp eq %"struct.rubinius::Object"* %call_site_execute594, null, !dbg !36
  br i1 %null_check596, label %bail_out, label %check_active595, !dbg !36

serial_fallback575:                               ; No predecessors!
  store i32 78, i32* %ip_pos, !dbg !36
  %46 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 78, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !36
  br label %return_pad, !dbg !36

continue576:                                      ; preds = %check_active595, %push_le586
  %send_result597 = phi %"struct.rubinius::Object"* [ %47, %push_le586 ], [ %call_site_execute594, %check_active595 ], !dbg !36
  %stack_pos598 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* %send_result597, %"struct.rubinius::Object"** %stack_pos598, !dbg !36
  %stack_pos599 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load600 = load %"struct.rubinius::Object"** %stack_pos599, !dbg !36
  %as_int601 = ptrtoint %"struct.rubinius::Object"* %stack_load600 to i64, !dbg !36
  %and602 = and i64 %as_int601, 15, !dbg !36
  %is_true603 = icmp eq i64 %and602, 10, !dbg !36
  br i1 %is_true603, label %ip87, label %continue604, !dbg !36

push_le586:                                       ; preds = %ip74
  %fixnum.ge587 = icmp sge i64 %cast579, %cast582, !dbg !36
  %47 = select i1 %fixnum.ge587, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !36
  br label %continue576, !dbg !36

check_active595:                                  ; preds = %class_fallback574
  br label %continue576, !dbg !36

continue604:                                      ; preds = %continue576
  br label %ip83, !dbg !36

ip83:                                             ; preds = %continue604
  %stack_pos605 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos605, !dbg !36
  %stack_pos606 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  %stack_load607 = load %"struct.rubinius::Object"** %stack_pos606, !dbg !36, !rbx-classid !12
  br label %return_pad, !dbg !36

ip87:                                             ; preds = %continue576
  %stack_pos608 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !36
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos608, !dbg !36
  %48 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !37
  %stack_pos609 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !37
  store %"struct.rubinius::Object"* %48, %"struct.rubinius::Object"** %stack_pos609, !dbg !37
  %stack_pos610 = getelementptr %"struct.rubinius::Object"** %stack, i32 12, !dbg !37
  %stack_pos611 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !37
  %stack_load612 = load %"struct.rubinius::Object"** %stack_pos611, !dbg !37
  store %"struct.rubinius::Object"* %stack_load612, %"struct.rubinius::Object"** %stack_pos610, !dbg !37
  br label %ip96, !dbg !37

ip96:                                             ; preds = %ip87
  %self_pos613 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !38
  %self614 = load %"struct.rubinius::Object"** %self_pos613, !dbg !38
  %obj_array615 = bitcast %"struct.rubinius::Object"* %self614 to %"struct.rubinius::Object"**, !dbg !38
  %field_pos616 = getelementptr %"struct.rubinius::Object"** %obj_array615, i32 4, !dbg !38
  %field617 = load %"struct.rubinius::Object"** %field_pos616, !dbg !38
  %stack_pos618 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %field617, %"struct.rubinius::Object"** %stack_pos618, !dbg !38
  %self_pos619 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !38
  %self620 = load %"struct.rubinius::Object"** %self_pos619, !dbg !38
  %obj_array621 = bitcast %"struct.rubinius::Object"* %self620 to %"struct.rubinius::Object"**, !dbg !38
  %field_pos622 = getelementptr %"struct.rubinius::Object"** %obj_array621, i32 5, !dbg !38
  %field623 = load %"struct.rubinius::Object"** %field_pos622, !dbg !38
  %stack_pos624 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %stack_pos624, !dbg !38
  %local_pos625 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !38
  %local626 = load %"struct.rubinius::Object"** %local_pos625, !dbg !38, !rbx-classid !19
  %stack_pos627 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos627, !dbg !38
  %stack_pos631 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load632 = load %"struct.rubinius::Object"** %stack_pos631, !dbg !38
  %stack_pos633 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  %stack_load634 = load %"struct.rubinius::Object"** %stack_pos633, !dbg !38, !rbx-classid !19
  %cast639 = ptrtoint %"struct.rubinius::Object"* %stack_load632 to i64, !dbg !38
  %cast640 = ptrtoint %"struct.rubinius::Object"* %stack_load634 to i64, !dbg !38
  %fixnums_anded641 = and i64 %cast639, %cast640, !dbg !38
  %masked642 = and i64 %fixnums_anded641, 1, !dbg !38
  %is_fixnum643 = icmp eq i64 %masked642, 1, !dbg !38
  br i1 %is_fixnum643, label %push_add635, label %class_fallback628, !dbg !38

is_exception:                                     ; preds = %class_fallback628
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !37
  br i1 %rae, label %ip112, label %bail_out, !dbg !37

class_fallback628:                                ; preds = %ip96
  %stack_pos655 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load656 = load %"struct.rubinius::Object"** %stack_pos655, !dbg !38
  store %"struct.rubinius::Object"* %stack_load656, %"struct.rubinius::Object"** %out_args_recv, !dbg !38
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !38
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !38
  store i32 1, i32* %out_args_total, !dbg !38
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !38
  %stack_pos657 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !38
  store %"struct.rubinius::Object"** %stack_pos657, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !38
  %cache_const658 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564840 to %"struct.rubinius::CallSite"**), !dbg !38
  %execute_pos659 = getelementptr %"struct.rubinius::CallSite"* %cache_const658, i32 0, i32 2, !dbg !38
  %execute660 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos659, !dbg !38
  store i32 102, i32* %ip_pos, !dbg !38
  %call_site_execute661 = call %"struct.rubinius::Object"* %execute660(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const658, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !38
  %null_check663 = icmp eq %"struct.rubinius::Object"* %call_site_execute661, null, !dbg !38
  br i1 %null_check663, label %is_exception, label %check_active662, !dbg !38

serial_fallback629:                               ; No predecessors!
  store i32 102, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %49 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 102, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 1, i8 1), !dbg !38
  br label %return_pad, !dbg !38

continue630:                                      ; preds = %check_active662, %cont638
  %send_result664 = phi %"struct.rubinius::Object"* [ %result654, %cont638 ], [ %call_site_execute661, %check_active662 ], !dbg !38
  %stack_pos665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  store %"struct.rubinius::Object"* %send_result664, %"struct.rubinius::Object"** %stack_pos665, !dbg !38
  %stack_pos669 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  %stack_load670 = load %"struct.rubinius::Object"** %stack_pos669, !dbg !38
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load670, i32 0, i32 0, i32 0, i32 0, !dbg !38
  %flags = load i64* %word_pos, !dbg !38
  %mask = and i64 %flags, 255, !dbg !38
  %is_type = icmp eq i64 %mask, 73, !dbg !38
  br i1 %is_type, label %is_tuple, label %class_fallback666, !dbg !38

push_add635:                                      ; preds = %ip96
  %as_int644 = ptrtoint %"struct.rubinius::Object"* %stack_load632 to i64, !dbg !38
  %ashr645 = ashr i64 %as_int644, 1, !dbg !38
  %as_int646 = ptrtoint %"struct.rubinius::Object"* %stack_load634 to i64, !dbg !38
  %ashr647 = ashr i64 %as_int646, 1, !dbg !38
  %fixnum.add648 = add i64 %ashr645, %ashr647, !dbg !38
  %50 = icmp sle i64 %fixnum.add648, 4611686018427387903, !dbg !38
  %51 = icmp sge i64 %fixnum.add648, -4611686018427387903, !dbg !38
  %fits_fixnum649 = and i1 %50, %51, !dbg !38
  br i1 %fits_fixnum649, label %tagnow636, label %bignum637, !dbg !38

tagnow636:                                        ; preds = %push_add635
  %shl651 = shl i64 %fixnum.add648, 1, !dbg !38
  %or652 = or i64 %shl651, 1, !dbg !38
  %as_obj653 = inttoptr i64 %or652 to %"struct.rubinius::Object"*, !dbg !38
  br label %cont638, !dbg !38

bignum637:                                        ; preds = %push_add635
  %big_value650 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add648) #1, !dbg !38
  br label %cont638, !dbg !38

cont638:                                          ; preds = %tagnow636, %bignum637
  %result654 = phi %"struct.rubinius::Object"* [ %big_value650, %bignum637 ], [ %as_obj653, %tagnow636 ], !dbg !38
  br label %continue630, !dbg !38

check_active662:                                  ; preds = %class_fallback628
  br label %continue630, !dbg !38

class_fallback666:                                ; preds = %is_tuple, %continue630
  store i32 105, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %52 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 1, i8 0), !dbg !38
  br label %return_pad, !dbg !38

serial_fallback667:                               ; No predecessors!
  store i32 105, i32* %ip_pos, !dbg !38
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !38
  %53 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 1, i8 1), !dbg !38
  br label %return_pad, !dbg !38

continue668:                                      ; preds = %tuple_at
  %stack_pos681 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  %stack_load682 = load %"struct.rubinius::Object"** %stack_pos681, !dbg !38
  br label %return_pad, !dbg !38

ip112:                                            ; preds = %is_exception
  %54 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos683 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %54, %"struct.rubinius::Object"** %stack_pos683, !dbg !26
  %stack_pos684 = getelementptr %"struct.rubinius::Object"** %stack, i32 11, !dbg !26
  %stack_pos685 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load686 = load %"struct.rubinius::Object"** %stack_pos685, !dbg !26
  store %"struct.rubinius::Object"* %stack_load686, %"struct.rubinius::Object"** %stack_pos684, !dbg !26
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos687 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos687, !dbg !26
  %stack_pos688 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load689 = load %"struct.rubinius::Object"** %stack_pos688, !dbg !39
  %stack_pos690 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %stack_load689, %"struct.rubinius::Object"** %stack_pos690, !dbg !39
  %global_serial691 = load i32* inttoptr (i64 22553844 to i32*), !dbg !39
  %constant_cache692 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564968 to %"struct.rubinius::ConstantCache"**), !dbg !39
  %constant_cache_pos693 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 4, !dbg !39
  %constant_scope694 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos693, !dbg !39
  %scope_pos695 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !39
  %frame_scope696 = load %"struct.rubinius::ConstantScope"** %scope_pos695, !dbg !39
  %same_scope697 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope694, %frame_scope696, !dbg !39
  br i1 %same_scope697, label %check_serial698, label %use_call700, !dbg !39

is_tuple:                                         ; preds = %continue630
  %stack_pos671 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !38
  %stack_load672 = load %"struct.rubinius::Object"** %stack_pos671, !dbg !38
  %cast673 = ptrtoint %"struct.rubinius::Object"* %stack_load672 to i64, !dbg !38
  %masked674 = and i64 %cast673, -9223372036854775807, !dbg !38
  %is_fixnum675 = icmp eq i64 %masked674, 1, !dbg !38
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load670 to %"struct.rubinius::Tuple"*, !dbg !38
  %as_int676 = ptrtoint %"struct.rubinius::Object"* %stack_load672 to i64, !dbg !38
  %ashr677 = ashr i64 %as_int676, 1, !dbg !38
  %table_size_pos = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 1, !dbg !38
  %table_size = load i64* %table_size_pos, !dbg !38
  %55 = sub i64 %table_size, 32, !dbg !38
  %56 = sdiv i64 %55, 8, !dbg !38
  %is_in_bounds = icmp slt i64 %ashr677, %56, !dbg !38
  %access_cmp = and i1 %is_fixnum675, %is_in_bounds, !dbg !38
  br i1 %access_cmp, label %tuple_at, label %class_fallback666, !dbg !38

tuple_at:                                         ; preds = %is_tuple
  %field_pos678 = getelementptr %"struct.rubinius::Tuple"* %upcast, i32 0, i32 2, i64 %ashr677, !dbg !38
  %tuple_at679 = load %"struct.rubinius::Object"** %field_pos678, !dbg !38
  %stack_pos680 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !38
  store %"struct.rubinius::Object"* %tuple_at679, %"struct.rubinius::Object"** %stack_pos680, !dbg !38
  br label %continue668, !dbg !38

check_serial698:                                  ; preds = %ip112
  %serial_pos702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 7, !dbg !39
  %serial703 = load i32* %serial_pos702, !dbg !39
  %use_cache704 = icmp eq i32 %global_serial691, %serial703, !dbg !39
  br i1 %use_cache704, label %use_cache699, label %use_call700, !dbg !39

use_cache699:                                     ; preds = %check_serial698
  %value_pos705 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i32 0, i32 2, !dbg !39
  %cached_value706 = load %"struct.rubinius::Object"** %value_pos705, !dbg !39
  br label %continue701, !dbg !39

use_call700:                                      ; preds = %check_serial698, %ip112
  store i32 118, i32* %ip_pos, !dbg !39
  %push_const_fast707 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564968 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !39
  %null_check710 = icmp eq %"struct.rubinius::Object"* %push_const_fast707, null, !dbg !39
  br i1 %null_check710, label %bail_out, label %check_active709, !dbg !39

continue701:                                      ; preds = %continue708, %use_cache699
  %constant711 = phi %"struct.rubinius::Object"* [ %cached_value706, %use_cache699 ], [ %push_const_fast707, %continue708 ], !dbg !39, !rbx-classid !40
  %stack_pos712 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %constant711, %"struct.rubinius::Object"** %stack_pos712, !dbg !39
  %stack_pos713 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  %stack_load714 = load %"struct.rubinius::Object"** %stack_pos713, !dbg !39, !rbx-classid !40
  %global_serial715 = load i32* inttoptr (i64 22553844 to i32*), !dbg !39
  %constant_cache716 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564984 to %"struct.rubinius::ConstantCache"**), !dbg !39
  %constant_cache_pos717 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 4, !dbg !39
  %constant_scope718 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos717, !dbg !39
  %scope_pos719 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !39
  %frame_scope720 = load %"struct.rubinius::ConstantScope"** %scope_pos719, !dbg !39
  %same_scope721 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope718, %frame_scope720, !dbg !39
  br i1 %same_scope721, label %check_serial722, label %use_call724, !dbg !39

continue708:                                      ; preds = %check_active709
  br label %continue701, !dbg !39

check_active709:                                  ; preds = %use_call700
  br label %continue708, !dbg !39

check_serial722:                                  ; preds = %continue701
  %serial_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 7, !dbg !39
  %serial727 = load i32* %serial_pos726, !dbg !39
  %use_under = icmp eq i32 %global_serial715, %serial727, !dbg !39
  br i1 %use_under, label %check_under, label %use_call724, !dbg !39

check_under:                                      ; preds = %check_serial722
  %value_pos728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 3, !dbg !39
  %cached_under = load %"struct.rubinius::Module"** %value_pos728, !dbg !39
  %downcast = bitcast %"struct.rubinius::Module"* %cached_under to %"struct.rubinius::Object"*, !dbg !39
  %use_cache729 = icmp eq %"struct.rubinius::Object"* %downcast, %stack_load714, !dbg !39
  br i1 %use_cache729, label %use_cache723, label %use_call724, !dbg !39

use_cache723:                                     ; preds = %check_under
  %value_pos730 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i32 0, i32 2, !dbg !39
  %cached_value731 = load %"struct.rubinius::Object"** %value_pos730, !dbg !39
  br label %continue725, !dbg !39

use_call724:                                      ; preds = %check_under, %check_serial722, %continue701
  store i32 120, i32* %ip_pos, !dbg !39
  %constant732 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564984 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load714) #0, !dbg !39
  %null_check735 = icmp eq %"struct.rubinius::Object"* %constant732, null, !dbg !39
  br i1 %null_check735, label %bail_out, label %check_active734, !dbg !39

continue725:                                      ; preds = %continue733, %use_cache723
  %constant736 = phi %"struct.rubinius::Object"* [ %cached_value731, %use_cache723 ], [ %constant732, %continue733 ], !dbg !39, !rbx-classid !41
  %stack_pos737 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %stack_pos737, !dbg !39
  %stack_pos738 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  %stack_load739 = load %"struct.rubinius::Object"** %stack_pos738, !dbg !39, !rbx-classid !41
  %stack_pos740 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load741 = load %"struct.rubinius::Object"** %stack_pos740, !dbg !39
  %stack_pos742 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %stack_load739, %"struct.rubinius::Object"** %stack_pos742, !dbg !39
  %stack_pos743 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"* %stack_load741, %"struct.rubinius::Object"** %stack_pos743, !dbg !39
  %stack_pos744 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load745 = load %"struct.rubinius::Object"** %stack_pos744, !dbg !39, !rbx-classid !41
  store %"struct.rubinius::Object"* %stack_load745, %"struct.rubinius::Object"** %out_args_recv, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !39
  store i32 1, i32* %out_args_total, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !39
  %stack_pos746 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos746, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !39
  %cache_const747 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565008 to %"struct.rubinius::CallSite"**), !dbg !39
  %execute_pos748 = getelementptr %"struct.rubinius::CallSite"* %cache_const747, i32 0, i32 2, !dbg !39
  %execute749 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos748, !dbg !39
  store i32 123, i32* %ip_pos, !dbg !39
  %call_site_execute750 = call %"struct.rubinius::Object"* %execute749(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const747, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check753 = icmp eq %"struct.rubinius::Object"* %call_site_execute750, null, !dbg !39
  br i1 %null_check753, label %bail_out, label %check_active752, !dbg !39

continue733:                                      ; preds = %check_active734
  br label %continue725, !dbg !39

check_active734:                                  ; preds = %use_call724
  br label %continue733, !dbg !39

continue751:                                      ; preds = %check_active752
  %stack_pos754 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* %call_site_execute750, %"struct.rubinius::Object"** %stack_pos754, !dbg !39
  %stack_pos755 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load756 = load %"struct.rubinius::Object"** %stack_pos755, !dbg !39
  %as_int757 = ptrtoint %"struct.rubinius::Object"* %stack_load756 to i64, !dbg !39
  %and758 = and i64 %as_int757, 15, !dbg !39
  %is_true759 = icmp ne i64 %and758, 10, !dbg !39
  br i1 %is_true759, label %ip130, label %continue760, !dbg !39

check_active752:                                  ; preds = %continue725
  br label %continue751, !dbg !39

continue760:                                      ; preds = %continue751
  br label %ip128, !dbg !39

ip128:                                            ; preds = %continue760
  br label %ip139, !dbg !39

continue761:                                      ; No predecessors!
  br label %ip130, !dbg !39

ip139:                                            ; preds = %ip128
  %stack_pos762 = getelementptr %"struct.rubinius::Object"** %stack, i32 11, !dbg !42
  %stack_local = load %"struct.rubinius::Object"** %stack_pos762, !dbg !42
  %stack_pos763 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack_pos763, !dbg !42
  %stack_pos764 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load765 = load %"struct.rubinius::Object"** %stack_pos764, !dbg !42
  %57 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load765), !dbg !42
  br label %bail_out, !dbg !42

continue766:                                      ; No predecessors!
  br label %ip130, !dbg !39

ip130:                                            ; preds = %continue766, %continue761, %continue751
  %stack_pos767 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos767, !dbg !42
  %stack_pos768 = getelementptr %"struct.rubinius::Object"** %stack, i32 12, !dbg !42
  %stack_local769 = load %"struct.rubinius::Object"** %stack_pos768, !dbg !42
  %stack_pos770 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"* %stack_local769, %"struct.rubinius::Object"** %stack_pos770, !dbg !42
  %stack_pos771 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  %stack_load772 = load %"struct.rubinius::Object"** %stack_pos771, !dbg !42
  %58 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load772), !dbg !42
  %stack_pos773 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load774 = load %"struct.rubinius::Object"** %stack_pos773, !dbg !42, !rbx-classid !12
  br label %return_pad, !dbg !42

ip44:                                             ; preds = %continue107, %continue53
  %stack_pos775 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !18
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos775, !dbg !18
  br label %ip45, !dbg !18

ip149:                                            ; preds = %continue211, %continue28
  %stack_pos776 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !43
  %stack_load777 = load %"struct.rubinius::Object"** %stack_pos776, !dbg !43
  %stack_pos778 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %stack_load777, %"struct.rubinius::Object"** %stack_pos778, !dbg !43
  %global_serial779 = load i32* inttoptr (i64 22553844 to i32*), !dbg !43
  %constant_cache780 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565224 to %"struct.rubinius::ConstantCache"**), !dbg !43
  %constant_cache_pos781 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 4, !dbg !43
  %constant_scope782 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos781, !dbg !43
  %scope_pos783 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !43
  %frame_scope784 = load %"struct.rubinius::ConstantScope"** %scope_pos783, !dbg !43
  %same_scope785 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope782, %frame_scope784, !dbg !43
  br i1 %same_scope785, label %check_serial786, label %use_call788, !dbg !43

check_serial786:                                  ; preds = %ip149
  %serial_pos790 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 7, !dbg !43
  %serial791 = load i32* %serial_pos790, !dbg !43
  %use_cache792 = icmp eq i32 %global_serial779, %serial791, !dbg !43
  br i1 %use_cache792, label %use_cache787, label %use_call788, !dbg !43

use_cache787:                                     ; preds = %check_serial786
  %value_pos793 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i32 0, i32 2, !dbg !43
  %cached_value794 = load %"struct.rubinius::Object"** %value_pos793, !dbg !43
  br label %continue789, !dbg !43

use_call788:                                      ; preds = %check_serial786, %ip149
  store i32 150, i32* %ip_pos, !dbg !43
  %push_const_fast795 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565224 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !43
  %null_check798 = icmp eq %"struct.rubinius::Object"* %push_const_fast795, null, !dbg !43
  br i1 %null_check798, label %bail_out, label %check_active797, !dbg !43

continue789:                                      ; preds = %continue796, %use_cache787
  %constant799 = phi %"struct.rubinius::Object"* [ %cached_value794, %use_cache787 ], [ %push_const_fast795, %continue796 ], !dbg !43, !rbx-classid !44
  %stack_pos800 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %stack_pos800, !dbg !43
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  %stack_load802 = load %"struct.rubinius::Object"** %stack_pos801, !dbg !43, !rbx-classid !44
  %stack_pos803 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load804 = load %"struct.rubinius::Object"** %stack_pos803, !dbg !43
  %stack_pos805 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %stack_load802, %"struct.rubinius::Object"** %stack_pos805, !dbg !43
  %stack_pos806 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %stack_load804, %"struct.rubinius::Object"** %stack_pos806, !dbg !43
  %stack_pos807 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load808 = load %"struct.rubinius::Object"** %stack_pos807, !dbg !43, !rbx-classid !44
  store %"struct.rubinius::Object"* %stack_load808, %"struct.rubinius::Object"** %out_args_recv, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !43
  store i32 1, i32* %out_args_total, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !43
  %stack_pos809 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos809, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !43
  %cache_const810 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565248 to %"struct.rubinius::CallSite"**), !dbg !43
  %execute_pos811 = getelementptr %"struct.rubinius::CallSite"* %cache_const810, i32 0, i32 2, !dbg !43
  %execute812 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos811, !dbg !43
  store i32 153, i32* %ip_pos, !dbg !43
  %call_site_execute813 = call %"struct.rubinius::Object"* %execute812(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const810, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute813, null, !dbg !43
  br i1 %null_check816, label %bail_out, label %check_active815, !dbg !43

continue796:                                      ; preds = %check_active797
  br label %continue789, !dbg !43

check_active797:                                  ; preds = %use_call788
  br label %continue796, !dbg !43

continue814:                                      ; preds = %check_active815
  %stack_pos817 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  store %"struct.rubinius::Object"* %call_site_execute813, %"struct.rubinius::Object"** %stack_pos817, !dbg !43
  %stack_pos818 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !43
  %stack_load819 = load %"struct.rubinius::Object"** %stack_pos818, !dbg !43
  %as_int820 = ptrtoint %"struct.rubinius::Object"* %stack_load819 to i64, !dbg !43
  %and821 = and i64 %as_int820, 15, !dbg !43
  %is_true822 = icmp eq i64 %and821, 10, !dbg !43
  br i1 %is_true822, label %ip313, label %continue823, !dbg !43

check_active815:                                  ; preds = %continue789
  br label %continue814, !dbg !43

continue823:                                      ; preds = %continue814
  br label %ip158, !dbg !43

ip158:                                            ; preds = %continue823
  %system_object824 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), !dbg !45
  %stack_pos825 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %system_object824, %"struct.rubinius::Object"** %stack_pos825, !dbg !45
  %local_pos826 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !45
  %local827 = load %"struct.rubinius::Object"** %local_pos826, !dbg !45, !rbx-classid !14
  %stack_pos828 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %stack_pos828, !dbg !45
  %stack_pos829 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  %stack_load830 = load %"struct.rubinius::Object"** %stack_pos829, !dbg !45, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load830, %"struct.rubinius::Object"** %out_args_recv, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !45
  store i32 0, i32* %out_args_total, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !45
  %cache_const831 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565320 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos832 = getelementptr %"struct.rubinius::CallSite"* %cache_const831, i32 0, i32 2, !dbg !45
  %execute833 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos832, !dbg !45
  store i32 162, i32* %ip_pos, !dbg !45
  %call_site_execute834 = call %"struct.rubinius::Object"* %execute833(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const831, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check837 = icmp eq %"struct.rubinius::Object"* %call_site_execute834, null, !dbg !45
  br i1 %null_check837, label %bail_out, label %check_active836, !dbg !45

continue835:                                      ; preds = %check_active836
  %stack_pos838 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute834, %"struct.rubinius::Object"** %stack_pos838, !dbg !45
  %global_serial839 = load i32* inttoptr (i64 22553844 to i32*), !dbg !45
  %constant_cache840 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565344 to %"struct.rubinius::ConstantCache"**), !dbg !45
  %constant_cache_pos841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 4, !dbg !45
  %constant_scope842 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos841, !dbg !45
  %scope_pos843 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !45
  %frame_scope844 = load %"struct.rubinius::ConstantScope"** %scope_pos843, !dbg !45
  %same_scope845 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope842, %frame_scope844, !dbg !45
  br i1 %same_scope845, label %check_serial846, label %use_call848, !dbg !45

check_active836:                                  ; preds = %ip158
  br label %continue835, !dbg !45

check_serial846:                                  ; preds = %continue835
  %serial_pos850 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 7, !dbg !45
  %serial851 = load i32* %serial_pos850, !dbg !45
  %use_cache852 = icmp eq i32 %global_serial839, %serial851, !dbg !45
  br i1 %use_cache852, label %use_cache847, label %use_call848, !dbg !45

use_cache847:                                     ; preds = %check_serial846
  %value_pos853 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i32 0, i32 2, !dbg !45
  %cached_value854 = load %"struct.rubinius::Object"** %value_pos853, !dbg !45
  br label %continue849, !dbg !45

use_call848:                                      ; preds = %check_serial846, %continue835
  store i32 165, i32* %ip_pos, !dbg !45
  %push_const_fast855 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565344 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !45
  %null_check858 = icmp eq %"struct.rubinius::Object"* %push_const_fast855, null, !dbg !45
  br i1 %null_check858, label %bail_out, label %check_active857, !dbg !45

continue849:                                      ; preds = %continue856, %use_cache847
  %constant859 = phi %"struct.rubinius::Object"* [ %cached_value854, %use_cache847 ], [ %push_const_fast855, %continue856 ], !dbg !45, !rbx-classid !46
  %stack_pos860 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !45
  store %"struct.rubinius::Object"* %constant859, %"struct.rubinius::Object"** %stack_pos860, !dbg !45
  %stack_pos861 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, !dbg !45
  %stack_pos862 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  %stack_load863 = load %"struct.rubinius::Object"** %stack_pos862, !dbg !45
  store %"struct.rubinius::Object"* %stack_load863, %"struct.rubinius::Object"** %out_args_recv, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !45
  store i32 3, i32* %out_args_total, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !45
  %stack_pos864 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos864, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !45
  %cache_const865 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565376 to %"struct.rubinius::CallSite"**), !dbg !45
  %execute_pos866 = getelementptr %"struct.rubinius::CallSite"* %cache_const865, i32 0, i32 2, !dbg !45
  %execute867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos866, !dbg !45
  store i32 169, i32* %ip_pos, !dbg !45
  %call_site_execute868 = call %"struct.rubinius::Object"* %execute867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const865, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check871 = icmp eq %"struct.rubinius::Object"* %call_site_execute868, null, !dbg !45
  br i1 %null_check871, label %bail_out, label %check_active870, !dbg !45

continue856:                                      ; preds = %check_active857
  br label %continue849, !dbg !45

check_active857:                                  ; preds = %use_call848
  br label %continue856, !dbg !45

continue869:                                      ; preds = %check_active870
  %stack_pos872 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %stack_pos872, !dbg !45
  %local_pos873 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !45
  %stack_pos874 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !45
  %stack_load875 = load %"struct.rubinius::Object"** %stack_pos874, !dbg !45
  store %"struct.rubinius::Object"* %stack_load875, %"struct.rubinius::Object"** %local_pos873, !dbg !45
  %local_pos876 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %local877 = load %"struct.rubinius::Object"** %local_pos876, !dbg !47, !rbx-classid !19
  %stack_pos878 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %local877, %"struct.rubinius::Object"** %stack_pos878, !dbg !47
  %stack_pos879 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos879, !dbg !47
  %stack_pos880 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load881 = load %"struct.rubinius::Object"** %stack_pos880, !dbg !47, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load881, %"struct.rubinius::Object"** %out_args_recv, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !47
  store i32 1, i32* %out_args_total, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !47
  %stack_pos882 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos882, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !47
  %cache_const883 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565448 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos884 = getelementptr %"struct.rubinius::CallSite"* %cache_const883, i32 0, i32 2, !dbg !47
  %execute885 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos884, !dbg !47
  store i32 178, i32* %ip_pos, !dbg !47
  %call_site_execute886 = call %"struct.rubinius::Object"* %execute885(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const883, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check889 = icmp eq %"struct.rubinius::Object"* %call_site_execute886, null, !dbg !47
  br i1 %null_check889, label %bail_out, label %check_active888, !dbg !47

check_active870:                                  ; preds = %continue849
  br label %continue869, !dbg !45

continue887:                                      ; preds = %check_active888
  %stack_pos890 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %call_site_execute886, %"struct.rubinius::Object"** %stack_pos890, !dbg !47
  %stack_pos891 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load892 = load %"struct.rubinius::Object"** %stack_pos891, !dbg !47
  %as_int893 = ptrtoint %"struct.rubinius::Object"* %stack_load892 to i64, !dbg !47
  %and894 = and i64 %as_int893, 15, !dbg !47
  %is_true895 = icmp eq i64 %and894, 10, !dbg !47
  br i1 %is_true895, label %ip194, label %continue896, !dbg !47

check_active888:                                  ; preds = %continue869
  br label %continue887, !dbg !47

continue896:                                      ; preds = %continue887
  br label %ip183, !dbg !47

ip183:                                            ; preds = %continue896
  %local_pos897 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %local898 = load %"struct.rubinius::Object"** %local_pos897, !dbg !47, !rbx-classid !19
  %stack_pos899 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack_pos899, !dbg !47
  %self_pos900 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !47
  %self901 = load %"struct.rubinius::Object"** %self_pos900, !dbg !47
  %obj_array902 = bitcast %"struct.rubinius::Object"* %self901 to %"struct.rubinius::Object"**, !dbg !47
  %field_pos903 = getelementptr %"struct.rubinius::Object"** %obj_array902, i32 3, !dbg !47
  %field904 = load %"struct.rubinius::Object"** %field_pos903, !dbg !47
  %stack_pos905 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"* %field904, %"struct.rubinius::Object"** %stack_pos905, !dbg !47
  %stack_pos906 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load907 = load %"struct.rubinius::Object"** %stack_pos906, !dbg !47, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load907, %"struct.rubinius::Object"** %out_args_recv, !dbg !47
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !47
  store i32 1, i32* %out_args_total, !dbg !47
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !47
  %stack_pos908 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !47
  store %"struct.rubinius::Object"** %stack_pos908, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !47
  %cache_const909 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565520 to %"struct.rubinius::CallSite"**), !dbg !47
  %execute_pos910 = getelementptr %"struct.rubinius::CallSite"* %cache_const909, i32 0, i32 2, !dbg !47
  %execute911 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos910, !dbg !47
  store i32 187, i32* %ip_pos, !dbg !47
  %call_site_execute912 = call %"struct.rubinius::Object"* %execute911(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const909, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !47
  %null_check915 = icmp eq %"struct.rubinius::Object"* %call_site_execute912, null, !dbg !47
  br i1 %null_check915, label %bail_out, label %check_active914, !dbg !47

continue913:                                      ; preds = %check_active914
  %stack_pos916 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %stack_pos916, !dbg !47
  %local_pos917 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !47
  %stack_pos918 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  %stack_load919 = load %"struct.rubinius::Object"** %stack_pos918, !dbg !47
  store %"struct.rubinius::Object"* %stack_load919, %"struct.rubinius::Object"** %local_pos917, !dbg !47
  br label %ip195, !dbg !47

check_active914:                                  ; preds = %ip183
  br label %continue913, !dbg !47

continue920:                                      ; No predecessors!
  br label %ip194, !dbg !47

ip195:                                            ; preds = %ip194, %continue913
  %local_pos921 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !48
  %local922 = load %"struct.rubinius::Object"** %local_pos921, !dbg !48, !rbx-classid !19
  %stack_pos923 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %stack_pos923, !dbg !48
  %stack_pos924 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos924, !dbg !48
  %stack_pos925 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load926 = load %"struct.rubinius::Object"** %stack_pos925, !dbg !48, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load926, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos927 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos927, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const928 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565616 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos929 = getelementptr %"struct.rubinius::CallSite"* %cache_const928, i32 0, i32 2, !dbg !48
  %execute930 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos929, !dbg !48
  store i32 199, i32* %ip_pos, !dbg !48
  %call_site_execute931 = call %"struct.rubinius::Object"* %execute930(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const928, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check934 = icmp eq %"struct.rubinius::Object"* %call_site_execute931, null, !dbg !48
  br i1 %null_check934, label %bail_out, label %check_active933, !dbg !48

continue932:                                      ; preds = %check_active933
  %stack_pos935 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack_pos935, !dbg !48
  %stack_pos936 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load937 = load %"struct.rubinius::Object"** %stack_pos936, !dbg !48
  %stack_pos938 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %stack_load937, %"struct.rubinius::Object"** %stack_pos938, !dbg !48
  %stack_pos939 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  %stack_load940 = load %"struct.rubinius::Object"** %stack_pos939, !dbg !48
  %as_int941 = ptrtoint %"struct.rubinius::Object"* %stack_load940 to i64, !dbg !48
  %and942 = and i64 %as_int941, 15, !dbg !48
  %is_true943 = icmp ne i64 %and942, 10, !dbg !48
  br i1 %is_true943, label %ip213, label %continue944, !dbg !48

check_active933:                                  ; preds = %ip195
  br label %continue932, !dbg !48

continue944:                                      ; preds = %continue932
  br label %ip205, !dbg !48

ip205:                                            ; preds = %continue944
  %local_pos945 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !48
  %local946 = load %"struct.rubinius::Object"** %local_pos945, !dbg !48, !rbx-classid !19
  %stack_pos947 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %stack_pos947, !dbg !48
  %self_pos948 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !48
  %self949 = load %"struct.rubinius::Object"** %self_pos948, !dbg !48
  %obj_array950 = bitcast %"struct.rubinius::Object"* %self949 to %"struct.rubinius::Object"**, !dbg !48
  %field_pos951 = getelementptr %"struct.rubinius::Object"** %obj_array950, i32 3, !dbg !48
  %field952 = load %"struct.rubinius::Object"** %field_pos951, !dbg !48
  %stack_pos953 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"* %field952, %"struct.rubinius::Object"** %stack_pos953, !dbg !48
  %stack_pos954 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load955 = load %"struct.rubinius::Object"** %stack_pos954, !dbg !48, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load955, %"struct.rubinius::Object"** %out_args_recv, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !48
  store i32 1, i32* %out_args_total, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !48
  %stack_pos956 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos956, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !48
  %cache_const957 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565704 to %"struct.rubinius::CallSite"**), !dbg !48
  %execute_pos958 = getelementptr %"struct.rubinius::CallSite"* %cache_const957, i32 0, i32 2, !dbg !48
  %execute959 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos958, !dbg !48
  store i32 210, i32* %ip_pos, !dbg !48
  %call_site_execute960 = call %"struct.rubinius::Object"* %execute959(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const957, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check963 = icmp eq %"struct.rubinius::Object"* %call_site_execute960, null, !dbg !48
  br i1 %null_check963, label %bail_out, label %check_active962, !dbg !48

continue961:                                      ; preds = %check_active962
  %stack_pos964 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute960, %"struct.rubinius::Object"** %stack_pos964, !dbg !48
  br label %ip213, !dbg !48

ip213:                                            ; preds = %continue961, %continue932
  %stack_pos965 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load966 = load %"struct.rubinius::Object"** %stack_pos965, !dbg !48
  %as_int967 = ptrtoint %"struct.rubinius::Object"* %stack_load966 to i64, !dbg !48
  %and968 = and i64 %as_int967, 15, !dbg !48
  %is_true969 = icmp eq i64 %and968, 10, !dbg !48
  br i1 %is_true969, label %ip219, label %continue970, !dbg !48

check_active962:                                  ; preds = %ip205
  br label %continue961, !dbg !48

continue970:                                      ; preds = %ip213
  br label %ip215, !dbg !48

ip215:                                            ; preds = %continue970
  %stack_pos971 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos971, !dbg !48
  %stack_pos972 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  %stack_load973 = load %"struct.rubinius::Object"** %stack_pos972, !dbg !48, !rbx-classid !12
  br label %return_pad, !dbg !48

ip219:                                            ; preds = %ip213
  %stack_pos974 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos974, !dbg !48
  %system_object975 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), !dbg !49
  %stack_pos976 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %system_object975, %"struct.rubinius::Object"** %stack_pos976, !dbg !49
  %local_pos977 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !49
  %local978 = load %"struct.rubinius::Object"** %local_pos977, !dbg !49, !rbx-classid !14
  %stack_pos979 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %stack_pos979, !dbg !49
  %stack_pos980 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  %stack_load981 = load %"struct.rubinius::Object"** %stack_pos980, !dbg !49, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load981, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 0, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %cache_const982 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565816 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos983 = getelementptr %"struct.rubinius::CallSite"* %cache_const982, i32 0, i32 2, !dbg !49
  %execute984 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos983, !dbg !49
  store i32 224, i32* %ip_pos, !dbg !49
  %call_site_execute985 = call %"struct.rubinius::Object"* %execute984(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const982, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check988 = icmp eq %"struct.rubinius::Object"* %call_site_execute985, null, !dbg !49
  br i1 %null_check988, label %bail_out, label %check_active987, !dbg !49

continue986:                                      ; preds = %check_active987
  %stack_pos989 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute985, %"struct.rubinius::Object"** %stack_pos989, !dbg !49
  %global_serial990 = load i32* inttoptr (i64 22553844 to i32*), !dbg !49
  %constant_cache991 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565840 to %"struct.rubinius::ConstantCache"**), !dbg !49
  %constant_cache_pos992 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 4, !dbg !49
  %constant_scope993 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos992, !dbg !49
  %scope_pos994 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !49
  %frame_scope995 = load %"struct.rubinius::ConstantScope"** %scope_pos994, !dbg !49
  %same_scope996 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope993, %frame_scope995, !dbg !49
  br i1 %same_scope996, label %check_serial997, label %use_call999, !dbg !49

check_active987:                                  ; preds = %ip219
  br label %continue986, !dbg !49

check_serial997:                                  ; preds = %continue986
  %serial_pos1001 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 7, !dbg !49
  %serial1002 = load i32* %serial_pos1001, !dbg !49
  %use_cache1003 = icmp eq i32 %global_serial990, %serial1002, !dbg !49
  br i1 %use_cache1003, label %use_cache998, label %use_call999, !dbg !49

use_cache998:                                     ; preds = %check_serial997
  %value_pos1004 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i32 0, i32 2, !dbg !49
  %cached_value1005 = load %"struct.rubinius::Object"** %value_pos1004, !dbg !49
  br label %continue1000, !dbg !49

use_call999:                                      ; preds = %check_serial997, %continue986
  store i32 227, i32* %ip_pos, !dbg !49
  %push_const_fast1006 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565840 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !49
  %null_check1009 = icmp eq %"struct.rubinius::Object"* %push_const_fast1006, null, !dbg !49
  br i1 %null_check1009, label %bail_out, label %check_active1008, !dbg !49

continue1000:                                     ; preds = %continue1007, %use_cache998
  %constant1010 = phi %"struct.rubinius::Object"* [ %cached_value1005, %use_cache998 ], [ %push_const_fast1006, %continue1007 ], !dbg !49, !rbx-classid !50
  %stack_pos1011 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !49
  store %"struct.rubinius::Object"* %constant1010, %"struct.rubinius::Object"** %stack_pos1011, !dbg !49
  %stack_pos1012 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1012, !dbg !49
  %stack_pos1013 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  %stack_load1014 = load %"struct.rubinius::Object"** %stack_pos1013, !dbg !49
  store %"struct.rubinius::Object"* %stack_load1014, %"struct.rubinius::Object"** %out_args_recv, !dbg !49
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !49
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !49
  store i32 3, i32* %out_args_total, !dbg !49
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !49
  %stack_pos1015 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !49
  store %"struct.rubinius::Object"** %stack_pos1015, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !49
  %cache_const1016 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565872 to %"struct.rubinius::CallSite"**), !dbg !49
  %execute_pos1017 = getelementptr %"struct.rubinius::CallSite"* %cache_const1016, i32 0, i32 2, !dbg !49
  %execute1018 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1017, !dbg !49
  store i32 231, i32* %ip_pos, !dbg !49
  %call_site_execute1019 = call %"struct.rubinius::Object"* %execute1018(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1016, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !49
  %null_check1022 = icmp eq %"struct.rubinius::Object"* %call_site_execute1019, null, !dbg !49
  br i1 %null_check1022, label %bail_out, label %check_active1021, !dbg !49

continue1007:                                     ; preds = %check_active1008
  br label %continue1000, !dbg !49

check_active1008:                                 ; preds = %use_call999
  br label %continue1007, !dbg !49

continue1020:                                     ; preds = %check_active1021
  %stack_pos1023 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %stack_pos1023, !dbg !49
  %local_pos1024 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !49
  %stack_pos1025 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !49
  %stack_load1026 = load %"struct.rubinius::Object"** %stack_pos1025, !dbg !49
  store %"struct.rubinius::Object"* %stack_load1026, %"struct.rubinius::Object"** %local_pos1024, !dbg !49
  %local_pos1027 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %local1028 = load %"struct.rubinius::Object"** %local_pos1027, !dbg !51, !rbx-classid !52
  %stack_pos1029 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %local1028, %"struct.rubinius::Object"** %stack_pos1029, !dbg !51
  %stack_pos1030 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1030, !dbg !51
  %stack_pos1031 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1032 = load %"struct.rubinius::Object"** %stack_pos1031, !dbg !51, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1032, %"struct.rubinius::Object"** %out_args_recv, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !51
  store i32 1, i32* %out_args_total, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !51
  %stack_pos1033 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos1033, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !51
  %cache_const1034 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565944 to %"struct.rubinius::CallSite"**), !dbg !51
  %execute_pos1035 = getelementptr %"struct.rubinius::CallSite"* %cache_const1034, i32 0, i32 2, !dbg !51
  %execute1036 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1035, !dbg !51
  store i32 240, i32* %ip_pos, !dbg !51
  %call_site_execute1037 = call %"struct.rubinius::Object"* %execute1036(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1034, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1040 = icmp eq %"struct.rubinius::Object"* %call_site_execute1037, null, !dbg !51
  br i1 %null_check1040, label %bail_out, label %check_active1039, !dbg !51

check_active1021:                                 ; preds = %continue1000
  br label %continue1020, !dbg !49

continue1038:                                     ; preds = %check_active1039
  %stack_pos1041 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %call_site_execute1037, %"struct.rubinius::Object"** %stack_pos1041, !dbg !51
  %stack_pos1042 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1043 = load %"struct.rubinius::Object"** %stack_pos1042, !dbg !51
  %as_int1044 = ptrtoint %"struct.rubinius::Object"* %stack_load1043 to i64, !dbg !51
  %and1045 = and i64 %as_int1044, 15, !dbg !51
  %is_true1046 = icmp eq i64 %and1045, 10, !dbg !51
  br i1 %is_true1046, label %ip256, label %continue1047, !dbg !51

check_active1039:                                 ; preds = %continue1020
  br label %continue1038, !dbg !51

continue1047:                                     ; preds = %continue1038
  br label %ip245, !dbg !51

ip245:                                            ; preds = %continue1047
  %local_pos1048 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %local1049 = load %"struct.rubinius::Object"** %local_pos1048, !dbg !51, !rbx-classid !52
  %stack_pos1050 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %stack_pos1050, !dbg !51
  %self_pos1051 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !51
  %self1052 = load %"struct.rubinius::Object"** %self_pos1051, !dbg !51
  %obj_array1053 = bitcast %"struct.rubinius::Object"* %self1052 to %"struct.rubinius::Object"**, !dbg !51
  %field_pos1054 = getelementptr %"struct.rubinius::Object"** %obj_array1053, i32 3, !dbg !51
  %field1055 = load %"struct.rubinius::Object"** %field_pos1054, !dbg !51
  %stack_pos1056 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"* %field1055, %"struct.rubinius::Object"** %stack_pos1056, !dbg !51
  %stack_pos1057 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1058 = load %"struct.rubinius::Object"** %stack_pos1057, !dbg !51, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1058, %"struct.rubinius::Object"** %out_args_recv, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !51
  store i32 1, i32* %out_args_total, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !51
  %stack_pos1059 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos1059, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !51
  %cache_const1060 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566016 to %"struct.rubinius::CallSite"**), !dbg !51
  %execute_pos1061 = getelementptr %"struct.rubinius::CallSite"* %cache_const1060, i32 0, i32 2, !dbg !51
  %execute1062 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1061, !dbg !51
  store i32 249, i32* %ip_pos, !dbg !51
  %call_site_execute1063 = call %"struct.rubinius::Object"* %execute1062(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1060, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1066 = icmp eq %"struct.rubinius::Object"* %call_site_execute1063, null, !dbg !51
  br i1 %null_check1066, label %bail_out, label %check_active1065, !dbg !51

continue1064:                                     ; preds = %check_active1065
  %stack_pos1067 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %stack_pos1067, !dbg !51
  %local_pos1068 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !51
  %stack_pos1069 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  %stack_load1070 = load %"struct.rubinius::Object"** %stack_pos1069, !dbg !51
  store %"struct.rubinius::Object"* %stack_load1070, %"struct.rubinius::Object"** %local_pos1068, !dbg !51
  br label %ip257, !dbg !51

check_active1065:                                 ; preds = %ip245
  br label %continue1064, !dbg !51

continue1071:                                     ; No predecessors!
  br label %ip256, !dbg !51

ip257:                                            ; preds = %ip256, %continue1064
  %local_pos1072 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !53
  %local1073 = load %"struct.rubinius::Object"** %local_pos1072, !dbg !53, !rbx-classid !14
  %stack_pos1074 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %stack_pos1074, !dbg !53
  %stack_pos1075 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1076 = load %"struct.rubinius::Object"** %stack_pos1075, !dbg !53, !rbx-classid !14
  store %"struct.rubinius::Object"* %stack_load1076, %"struct.rubinius::Object"** %out_args_recv, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !53
  store i32 0, i32* %out_args_total, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !53
  %cache_const1077 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566104 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos1078 = getelementptr %"struct.rubinius::CallSite"* %cache_const1077, i32 0, i32 2, !dbg !53
  %execute1079 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1078, !dbg !53
  store i32 260, i32* %ip_pos, !dbg !53
  %call_site_execute1080 = call %"struct.rubinius::Object"* %execute1079(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1077, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1083 = icmp eq %"struct.rubinius::Object"* %call_site_execute1080, null, !dbg !53
  br i1 %null_check1083, label %bail_out, label %check_active1082, !dbg !53

continue1081:                                     ; preds = %check_active1082
  %stack_pos1084 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %call_site_execute1080, %"struct.rubinius::Object"** %stack_pos1084, !dbg !53
  %stack_pos1085 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1086 = load %"struct.rubinius::Object"** %stack_pos1085, !dbg !53
  %as_int1087 = ptrtoint %"struct.rubinius::Object"* %stack_load1086 to i64, !dbg !53
  %and1088 = and i64 %as_int1087, 15, !dbg !53
  %is_true1089 = icmp eq i64 %and1088, 10, !dbg !53
  br i1 %is_true1089, label %ip275, label %continue1090, !dbg !53

check_active1082:                                 ; preds = %ip257
  br label %continue1081, !dbg !53

continue1090:                                     ; preds = %continue1081
  br label %ip265, !dbg !53

ip265:                                            ; preds = %continue1090
  %local_pos1091 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !53
  %local1092 = load %"struct.rubinius::Object"** %local_pos1091, !dbg !53, !rbx-classid !52
  %stack_pos1093 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %stack_pos1093, !dbg !53
  %stack_pos1094 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1094, !dbg !53
  %stack_pos1095 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1096 = load %"struct.rubinius::Object"** %stack_pos1095, !dbg !53, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1096, %"struct.rubinius::Object"** %out_args_recv, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !53
  store i32 1, i32* %out_args_total, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !53
  %stack_pos1097 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos1097, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !53
  %cache_const1098 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566168 to %"struct.rubinius::CallSite"**), !dbg !53
  %execute_pos1099 = getelementptr %"struct.rubinius::CallSite"* %cache_const1098, i32 0, i32 2, !dbg !53
  %execute1100 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1099, !dbg !53
  store i32 268, i32* %ip_pos, !dbg !53
  %call_site_execute1101 = call %"struct.rubinius::Object"* %execute1100(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1098, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1104 = icmp eq %"struct.rubinius::Object"* %call_site_execute1101, null, !dbg !53
  br i1 %null_check1104, label %bail_out, label %check_active1103, !dbg !53

continue1102:                                     ; preds = %check_active1103
  %stack_pos1105 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %stack_pos1105, !dbg !53
  %local_pos1106 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !53
  %stack_pos1107 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  %stack_load1108 = load %"struct.rubinius::Object"** %stack_pos1107, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1108, %"struct.rubinius::Object"** %local_pos1106, !dbg !53
  br label %ip276, !dbg !53

check_active1103:                                 ; preds = %ip265
  br label %continue1102, !dbg !53

continue1109:                                     ; No predecessors!
  br label %ip275, !dbg !53

ip276:                                            ; preds = %ip275, %continue1102
  %local_pos1110 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !54
  %local1111 = load %"struct.rubinius::Object"** %local_pos1110, !dbg !54, !rbx-classid !52
  %stack_pos1112 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %stack_pos1112, !dbg !54
  %local_pos1113 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !54
  %local1114 = load %"struct.rubinius::Object"** %local_pos1113, !dbg !54, !rbx-classid !19
  %stack_pos1115 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"* %local1114, %"struct.rubinius::Object"** %stack_pos1115, !dbg !54
  %stack_pos1116 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1117 = load %"struct.rubinius::Object"** %stack_pos1116, !dbg !54, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1117, %"struct.rubinius::Object"** %out_args_recv, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !54
  store i32 1, i32* %out_args_total, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !54
  %stack_pos1118 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1118, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !54
  %cache_const1119 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566272 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1120 = getelementptr %"struct.rubinius::CallSite"* %cache_const1119, i32 0, i32 2, !dbg !54
  %execute1121 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1120, !dbg !54
  store i32 281, i32* %ip_pos, !dbg !54
  %call_site_execute1122 = call %"struct.rubinius::Object"* %execute1121(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1119, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1125 = icmp eq %"struct.rubinius::Object"* %call_site_execute1122, null, !dbg !54
  br i1 %null_check1125, label %bail_out, label %check_active1124, !dbg !54

continue1123:                                     ; preds = %check_active1124
  %stack_pos1126 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute1122, %"struct.rubinius::Object"** %stack_pos1126, !dbg !54
  %stack_pos1127 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1128 = load %"struct.rubinius::Object"** %stack_pos1127, !dbg !54
  %as_int1129 = ptrtoint %"struct.rubinius::Object"* %stack_load1128 to i64, !dbg !54
  %and1130 = and i64 %as_int1129, 15, !dbg !54
  %is_true1131 = icmp eq i64 %and1130, 10, !dbg !54
  br i1 %is_true1131, label %ip296, label %continue1132, !dbg !54

check_active1124:                                 ; preds = %ip276
  br label %continue1123, !dbg !54

continue1132:                                     ; preds = %continue1123
  br label %ip286, !dbg !54

ip286:                                            ; preds = %continue1132
  %59 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !54
  %self1133 = load %"struct.rubinius::Object"** %59, !dbg !54
  %stack_pos1134 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %stack_pos1134, !dbg !54
  %stack_pos1135 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1135, !dbg !54
  %stack_pos1136 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1136, !dbg !54
  %stack_pos1137 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1138 = load %"struct.rubinius::Object"** %stack_pos1137, !dbg !54
  store %"struct.rubinius::Object"* %stack_load1138, %"struct.rubinius::Object"** %out_args_recv, !dbg !54
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !54
  store i32 2, i32* %out_args_total, !dbg !54
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !54
  %stack_pos1139 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !54
  store %"struct.rubinius::Object"** %stack_pos1139, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !54
  %cache_const1140 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566344 to %"struct.rubinius::CallSite"**), !dbg !54
  %execute_pos1141 = getelementptr %"struct.rubinius::CallSite"* %cache_const1140, i32 0, i32 2, !dbg !54
  %execute1142 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1141, !dbg !54
  store i32 290, i32* %ip_pos, !dbg !54
  %call_site_execute1143 = call %"struct.rubinius::Object"* %execute1142(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1140, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !54
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1143, null, !dbg !54
  br i1 %null_check1146, label %bail_out, label %check_active1145, !dbg !54

continue1144:                                     ; preds = %check_active1145
  %stack_pos1147 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* %call_site_execute1143, %"struct.rubinius::Object"** %stack_pos1147, !dbg !54
  %stack_pos1148 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  %stack_load1149 = load %"struct.rubinius::Object"** %stack_pos1148, !dbg !54
  br label %return_pad, !dbg !54

ip296:                                            ; preds = %continue1123
  %stack_pos1150 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !54
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1150, !dbg !54
  %local_pos1151 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !55
  %local1152 = load %"struct.rubinius::Object"** %local_pos1151, !dbg !55, !rbx-classid !52
  %stack_pos1153 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %stack_pos1153, !dbg !55
  %local_pos1154 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !55
  %local1155 = load %"struct.rubinius::Object"** %local_pos1154, !dbg !55, !rbx-classid !19
  %stack_pos1156 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"* %local1155, %"struct.rubinius::Object"** %stack_pos1156, !dbg !55
  %stack_pos1157 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1158 = load %"struct.rubinius::Object"** %stack_pos1157, !dbg !55, !rbx-classid !52
  store %"struct.rubinius::Object"* %stack_load1158, %"struct.rubinius::Object"** %out_args_recv, !dbg !55
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !55
  store i32 1, i32* %out_args_total, !dbg !55
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !55
  %stack_pos1159 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"** %stack_pos1159, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !55
  %cache_const1160 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566440 to %"struct.rubinius::CallSite"**), !dbg !55
  %execute_pos1161 = getelementptr %"struct.rubinius::CallSite"* %cache_const1160, i32 0, i32 2, !dbg !55
  %execute1162 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1161, !dbg !55
  store i32 302, i32* %ip_pos, !dbg !55
  %call_site_execute1163 = call %"struct.rubinius::Object"* %execute1162(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1160, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !55
  %null_check1166 = icmp eq %"struct.rubinius::Object"* %call_site_execute1163, null, !dbg !55
  br i1 %null_check1166, label %bail_out, label %check_active1165, !dbg !55

check_active1145:                                 ; preds = %ip286
  br label %continue1144, !dbg !54

continue1164:                                     ; preds = %check_active1165
  %stack_pos1167 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %stack_pos1167, !dbg !55
  %stack_pos1168 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1168, !dbg !55
  %stack_pos1169 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1170 = load %"struct.rubinius::Object"** %stack_pos1169, !dbg !55
  store %"struct.rubinius::Object"* %stack_load1170, %"struct.rubinius::Object"** %out_args_recv, !dbg !55
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !55
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !55
  store i32 1, i32* %out_args_total, !dbg !55
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !55
  %stack_pos1171 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !55
  store %"struct.rubinius::Object"** %stack_pos1171, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !55
  %cache_const1172 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), !dbg !55
  %execute_pos1173 = getelementptr %"struct.rubinius::CallSite"* %cache_const1172, i32 0, i32 2, !dbg !55
  %execute1174 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1173, !dbg !55
  store i32 306, i32* %ip_pos, !dbg !55
  %call_site_execute1175 = call %"struct.rubinius::Object"* %execute1174(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1172, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !55
  %null_check1178 = icmp eq %"struct.rubinius::Object"* %call_site_execute1175, null, !dbg !55
  br i1 %null_check1178, label %bail_out, label %check_active1177, !dbg !55

check_active1165:                                 ; preds = %ip296
  br label %continue1164, !dbg !55

continue1176:                                     ; preds = %check_active1177
  %stack_pos1179 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %stack_pos1179, !dbg !55
  %local_pos1180 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !55
  %stack_pos1181 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !55
  %stack_load1182 = load %"struct.rubinius::Object"** %stack_pos1181, !dbg !55
  store %"struct.rubinius::Object"* %stack_load1182, %"struct.rubinius::Object"** %local_pos1180, !dbg !55
  br label %ip459, !dbg !55

check_active1177:                                 ; preds = %continue1164
  br label %continue1176, !dbg !55

continue1183:                                     ; No predecessors!
  br label %ip313, !dbg !55

ip275:                                            ; preds = %continue1109, %continue1081
  %stack_pos1184 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1184, !dbg !53
  br label %ip276, !dbg !53

ip256:                                            ; preds = %continue1071, %continue1038
  %stack_pos1185 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1185, !dbg !51
  br label %ip257, !dbg !51

ip194:                                            ; preds = %continue920, %continue887
  %stack_pos1186 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !47
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1186, !dbg !47
  br label %ip195, !dbg !47

ip313:                                            ; preds = %continue1183, %continue814
  %local_pos1187 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !56
  %local1188 = load %"struct.rubinius::Object"** %local_pos1187, !dbg !56, !rbx-classid !14
  %stack_pos1189 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos1189, !dbg !56
  %stack_pos1190 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1191 = load %"struct.rubinius::Object"** %stack_pos1190, !dbg !56, !rbx-classid !14
  %stack_pos1192 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1191, %"struct.rubinius::Object"** %stack_pos1192, !dbg !56
  %global_serial1193 = load i32* inttoptr (i64 22553844 to i32*), !dbg !56
  %constant_cache1194 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566560 to %"struct.rubinius::ConstantCache"**), !dbg !56
  %constant_cache_pos1195 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 4, !dbg !56
  %constant_scope1196 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1195, !dbg !56
  %scope_pos1197 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !56
  %frame_scope1198 = load %"struct.rubinius::ConstantScope"** %scope_pos1197, !dbg !56
  %same_scope1199 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1196, %frame_scope1198, !dbg !56
  br i1 %same_scope1199, label %check_serial1200, label %use_call1202, !dbg !56

check_serial1200:                                 ; preds = %ip313
  %serial_pos1204 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 7, !dbg !56
  %serial1205 = load i32* %serial_pos1204, !dbg !56
  %use_cache1206 = icmp eq i32 %global_serial1193, %serial1205, !dbg !56
  br i1 %use_cache1206, label %use_cache1201, label %use_call1202, !dbg !56

use_cache1201:                                    ; preds = %check_serial1200
  %value_pos1207 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i32 0, i32 2, !dbg !56
  %cached_value1208 = load %"struct.rubinius::Object"** %value_pos1207, !dbg !56
  br label %continue1203, !dbg !56

use_call1202:                                     ; preds = %check_serial1200, %ip313
  store i32 317, i32* %ip_pos, !dbg !56
  %push_const_fast1209 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !56
  %null_check1212 = icmp eq %"struct.rubinius::Object"* %push_const_fast1209, null, !dbg !56
  br i1 %null_check1212, label %bail_out, label %check_active1211, !dbg !56

continue1203:                                     ; preds = %continue1210, %use_cache1201
  %constant1213 = phi %"struct.rubinius::Object"* [ %cached_value1208, %use_cache1201 ], [ %push_const_fast1209, %continue1210 ], !dbg !56, !rbx-classid !57
  %stack_pos1214 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %constant1213, %"struct.rubinius::Object"** %stack_pos1214, !dbg !56
  %stack_pos1215 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  %stack_load1216 = load %"struct.rubinius::Object"** %stack_pos1215, !dbg !56, !rbx-classid !57
  %stack_pos1217 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1218 = load %"struct.rubinius::Object"** %stack_pos1217, !dbg !56, !rbx-classid !14
  %stack_pos1219 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1216, %"struct.rubinius::Object"** %stack_pos1219, !dbg !56
  %stack_pos1220 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1218, %"struct.rubinius::Object"** %stack_pos1220, !dbg !56
  %stack_pos1221 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  %stack_load1222 = load %"struct.rubinius::Object"** %stack_pos1221, !dbg !56, !rbx-classid !14
  %stack_pos1223 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1224 = load %"struct.rubinius::Object"** %stack_pos1223, !dbg !56, !rbx-classid !57
  %cast1229 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1230 = and i64 %cast1229, 3, !dbg !56
  %is_reference1231 = icmp eq i64 %masked1230, 0, !dbg !56
  br i1 %is_reference1231, label %reference_block, label %class_verified_block, !dbg !56

continue1210:                                     ; preds = %check_active1211
  br label %continue1203, !dbg !56

check_active1211:                                 ; preds = %use_call1202
  br label %continue1210, !dbg !56

continue1225:                                     ; preds = %use_call1226, %negative1228, %positive1227
  %constant1256 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1227 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1228 ], [ %kind_of1255, %use_call1226 ], !dbg !56
  %stack_pos1257 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %constant1256, %"struct.rubinius::Object"** %stack_pos1257, !dbg !56
  %stack_pos1258 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  %stack_load1259 = load %"struct.rubinius::Object"** %stack_pos1258, !dbg !56
  %as_int1260 = ptrtoint %"struct.rubinius::Object"* %stack_load1259 to i64, !dbg !56
  %and1261 = and i64 %as_int1260, 15, !dbg !56
  %is_true1262 = icmp ne i64 %and1261, 10, !dbg !56
  br i1 %is_true1262, label %ip334, label %continue1263, !dbg !56

use_call1226:                                     ; preds = %is_false_block, %check_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1255 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1222, %"struct.rubinius::Object"* %stack_load1224) #0, !dbg !56
  br label %continue1225, !dbg !56

positive1227:                                     ; preds = %is_false_block, %is_true_block, %is_nil_block, %is_integer_block, %is_fixnum_block, %is_symbol_block, %reference_block
  br label %continue1225, !dbg !56

negative1228:                                     ; No predecessors!
  br label %continue1225, !dbg !56

class_verified_block:                             ; preds = %continue1203
  %word_pos1235 = getelementptr %"struct.rubinius::Object"* %stack_load1224, i32 0, i32 0, i32 0, i32 0, !dbg !56
  %flags1236 = load i64* %word_pos1235, !dbg !56
  %mask1237 = and i64 %flags1236, 255, !dbg !56
  %is_type1238 = icmp eq i64 %mask1237, 20, !dbg !56
  br i1 %is_type1238, label %check_symbol_block, label %use_call1226, !dbg !56

reference_block:                                  ; preds = %continue1203
  %class_pos1232 = getelementptr %"struct.rubinius::Object"* %stack_load1222, i32 0, i32 0, i32 1, !dbg !56
  %ref_class1233 = load %"struct.rubinius::Class"** %class_pos1232, !dbg !56
  %downcast1234 = bitcast %"struct.rubinius::Class"* %ref_class1233 to %"struct.rubinius::Object"*, !dbg !56
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1234, %stack_load1224, !dbg !56
  br i1 %check_class, label %positive1227, label %use_call1226, !dbg !56

check_symbol_block:                               ; preds = %class_verified_block
  %upcast1239 = bitcast %"struct.rubinius::Object"* %stack_load1224 to %"struct.rubinius::Class"*, !dbg !56
  %class_id_pos1240 = getelementptr %"struct.rubinius::Class"* %upcast1239, i32 0, i32 4, !dbg !56
  %class_id1241 = load i32* %class_id_pos1240, !dbg !56
  %cast1242 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1243 = and i64 %cast1242, 7, !dbg !56
  %is_symbol = icmp eq i64 %masked1243, 6, !dbg !56
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !56

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1244 = icmp eq i32 %class_id1241, 39, !dbg !56
  br i1 %check_class_id1244, label %positive1227, label %use_call1226, !dbg !56

check_fixnum_block:                               ; preds = %check_symbol_block
  %cast1245 = ptrtoint %"struct.rubinius::Object"* %stack_load1222 to i64, !dbg !56
  %masked1246 = and i64 %cast1245, 1, !dbg !56
  %is_fixnum1247 = icmp eq i64 %masked1246, 1, !dbg !56
  br i1 %is_fixnum1247, label %is_fixnum_block, label %check_nil_block, !dbg !56

is_fixnum_block:                                  ; preds = %check_fixnum_block
  %check_class_id1248 = icmp eq i32 %class_id1241, 37, !dbg !56
  br i1 %check_class_id1248, label %positive1227, label %is_integer_block, !dbg !56

is_integer_block:                                 ; preds = %is_fixnum_block
  %check_class_id1249 = icmp eq i32 %class_id1241, 35, !dbg !56
  br i1 %check_class_id1249, label %positive1227, label %use_call1226, !dbg !56

check_nil_block:                                  ; preds = %check_fixnum_block
  %is_immediate = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate, label %is_nil_block, label %check_true_block, !dbg !56

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1250 = icmp eq i32 %class_id1241, 27, !dbg !56
  br i1 %check_class_id1250, label %positive1227, label %use_call1226, !dbg !56

check_true_block:                                 ; preds = %check_nil_block
  %is_immediate1251 = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate1251, label %is_true_block, label %check_false_block, !dbg !56

is_true_block:                                    ; preds = %check_true_block
  %check_class_id1252 = icmp eq i32 %class_id1241, 29, !dbg !56
  br i1 %check_class_id1252, label %positive1227, label %use_call1226, !dbg !56

check_false_block:                                ; preds = %check_true_block
  %is_immediate1253 = icmp eq %"struct.rubinius::Object"* %stack_load1222, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !56
  br i1 %is_immediate1253, label %is_false_block, label %use_call1226, !dbg !56

is_false_block:                                   ; preds = %check_false_block
  %check_class_id1254 = icmp eq i32 %class_id1241, 31, !dbg !56
  br i1 %check_class_id1254, label %positive1227, label %use_call1226, !dbg !56

continue1263:                                     ; preds = %continue1225
  br label %ip323, !dbg !56

ip323:                                            ; preds = %continue1263
  %system_object1264 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), !dbg !56
  %stack_pos1265 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %stack_pos1265, !dbg !56
  %local_pos1266 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !56
  %local1267 = load %"struct.rubinius::Object"** %local_pos1266, !dbg !56, !rbx-classid !14
  %stack_pos1268 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"* %local1267, %"struct.rubinius::Object"** %stack_pos1268, !dbg !56
  %global_serial1269 = load i32* inttoptr (i64 22553844 to i32*), !dbg !56
  %constant_cache1270 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566640 to %"struct.rubinius::ConstantCache"**), !dbg !56
  %constant_cache_pos1271 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 4, !dbg !56
  %constant_scope1272 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1271, !dbg !56
  %scope_pos1273 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !56
  %frame_scope1274 = load %"struct.rubinius::ConstantScope"** %scope_pos1273, !dbg !56
  %same_scope1275 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1272, %frame_scope1274, !dbg !56
  br i1 %same_scope1275, label %check_serial1276, label %use_call1278, !dbg !56

check_serial1276:                                 ; preds = %ip323
  %serial_pos1280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 7, !dbg !56
  %serial1281 = load i32* %serial_pos1280, !dbg !56
  %use_cache1282 = icmp eq i32 %global_serial1269, %serial1281, !dbg !56
  br i1 %use_cache1282, label %use_cache1277, label %use_call1278, !dbg !56

use_cache1277:                                    ; preds = %check_serial1276
  %value_pos1283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i32 0, i32 2, !dbg !56
  %cached_value1284 = load %"struct.rubinius::Object"** %value_pos1283, !dbg !56
  br label %continue1279, !dbg !56

use_call1278:                                     ; preds = %check_serial1276, %ip323
  store i32 327, i32* %ip_pos, !dbg !56
  %push_const_fast1285 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566640 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !56
  %null_check1288 = icmp eq %"struct.rubinius::Object"* %push_const_fast1285, null, !dbg !56
  br i1 %null_check1288, label %bail_out, label %check_active1287, !dbg !56

continue1279:                                     ; preds = %continue1286, %use_cache1277
  %constant1289 = phi %"struct.rubinius::Object"* [ %cached_value1284, %use_cache1277 ], [ %push_const_fast1285, %continue1286 ], !dbg !56, !rbx-classid !58
  %stack_pos1290 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !56
  store %"struct.rubinius::Object"* %constant1289, %"struct.rubinius::Object"** %stack_pos1290, !dbg !56
  %stack_pos1291 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1291, !dbg !56
  %stack_pos1292 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1293 = load %"struct.rubinius::Object"** %stack_pos1292, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1293, %"struct.rubinius::Object"** %out_args_recv, !dbg !56
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !56
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !56
  store i32 3, i32* %out_args_total, !dbg !56
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !56
  %stack_pos1294 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !56
  store %"struct.rubinius::Object"** %stack_pos1294, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !56
  %cache_const1295 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566672 to %"struct.rubinius::CallSite"**), !dbg !56
  %execute_pos1296 = getelementptr %"struct.rubinius::CallSite"* %cache_const1295, i32 0, i32 2, !dbg !56
  %execute1297 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1296, !dbg !56
  store i32 331, i32* %ip_pos, !dbg !56
  %call_site_execute1298 = call %"struct.rubinius::Object"* %execute1297(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1295, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !56
  %null_check1301 = icmp eq %"struct.rubinius::Object"* %call_site_execute1298, null, !dbg !56
  br i1 %null_check1301, label %bail_out, label %check_active1300, !dbg !56

continue1286:                                     ; preds = %check_active1287
  br label %continue1279, !dbg !56

check_active1287:                                 ; preds = %use_call1278
  br label %continue1286, !dbg !56

continue1299:                                     ; preds = %check_active1300
  %stack_pos1302 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  store %"struct.rubinius::Object"* %call_site_execute1298, %"struct.rubinius::Object"** %stack_pos1302, !dbg !56
  br label %ip334, !dbg !56

ip334:                                            ; preds = %continue1299, %continue1225
  %local_pos1303 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !56
  %stack_pos1304 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !56
  %stack_load1305 = load %"struct.rubinius::Object"** %stack_pos1304, !dbg !56
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %local_pos1303, !dbg !56
  %local_pos1306 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %local1307 = load %"struct.rubinius::Object"** %local_pos1306, !dbg !11, !rbx-classid !19
  %stack_pos1308 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %local1307, %"struct.rubinius::Object"** %stack_pos1308, !dbg !11
  %stack_pos1309 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1309, !dbg !11
  %stack_pos1310 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1311 = load %"struct.rubinius::Object"** %stack_pos1310, !dbg !11, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1311, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos1312 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos1312, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const1313 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566744 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos1314 = getelementptr %"struct.rubinius::CallSite"* %cache_const1313, i32 0, i32 2, !dbg !11
  %execute1315 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1314, !dbg !11
  store i32 340, i32* %ip_pos, !dbg !11
  %call_site_execute1316 = call %"struct.rubinius::Object"* %execute1315(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1313, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1319 = icmp eq %"struct.rubinius::Object"* %call_site_execute1316, null, !dbg !11
  br i1 %null_check1319, label %bail_out, label %check_active1318, !dbg !11

check_active1300:                                 ; preds = %continue1279
  br label %continue1299, !dbg !56

continue1317:                                     ; preds = %check_active1318
  %stack_pos1320 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1316, %"struct.rubinius::Object"** %stack_pos1320, !dbg !11
  %stack_pos1321 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1322 = load %"struct.rubinius::Object"** %stack_pos1321, !dbg !11
  %as_int1323 = ptrtoint %"struct.rubinius::Object"* %stack_load1322 to i64, !dbg !11
  %and1324 = and i64 %as_int1323, 15, !dbg !11
  %is_true1325 = icmp eq i64 %and1324, 10, !dbg !11
  br i1 %is_true1325, label %ip356, label %continue1326, !dbg !11

check_active1318:                                 ; preds = %ip334
  br label %continue1317, !dbg !11

continue1326:                                     ; preds = %continue1317
  br label %ip345, !dbg !11

ip345:                                            ; preds = %continue1326
  %local_pos1327 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %local1328 = load %"struct.rubinius::Object"** %local_pos1327, !dbg !11, !rbx-classid !19
  %stack_pos1329 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %stack_pos1329, !dbg !11
  %self_pos1330 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !11
  %self1331 = load %"struct.rubinius::Object"** %self_pos1330, !dbg !11
  %obj_array1332 = bitcast %"struct.rubinius::Object"* %self1331 to %"struct.rubinius::Object"**, !dbg !11
  %field_pos1333 = getelementptr %"struct.rubinius::Object"** %obj_array1332, i32 3, !dbg !11
  %field1334 = load %"struct.rubinius::Object"** %field_pos1333, !dbg !11
  %stack_pos1335 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %field1334, %"struct.rubinius::Object"** %stack_pos1335, !dbg !11
  %stack_pos1336 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1337 = load %"struct.rubinius::Object"** %stack_pos1336, !dbg !11, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1337, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos1338 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos1338, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const1339 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566816 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos1340 = getelementptr %"struct.rubinius::CallSite"* %cache_const1339, i32 0, i32 2, !dbg !11
  %execute1341 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1340, !dbg !11
  store i32 349, i32* %ip_pos, !dbg !11
  %call_site_execute1342 = call %"struct.rubinius::Object"* %execute1341(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1339, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1345 = icmp eq %"struct.rubinius::Object"* %call_site_execute1342, null, !dbg !11
  br i1 %null_check1345, label %bail_out, label %check_active1344, !dbg !11

continue1343:                                     ; preds = %check_active1344
  %stack_pos1346 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %stack_pos1346, !dbg !11
  %local_pos1347 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !11
  %stack_pos1348 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load1349 = load %"struct.rubinius::Object"** %stack_pos1348, !dbg !11
  store %"struct.rubinius::Object"* %stack_load1349, %"struct.rubinius::Object"** %local_pos1347, !dbg !11
  br label %ip357, !dbg !11

check_active1344:                                 ; preds = %ip345
  br label %continue1343, !dbg !11

continue1350:                                     ; No predecessors!
  br label %ip356, !dbg !11

ip357:                                            ; preds = %ip356, %continue1343
  %local_pos1351 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !59
  %local1352 = load %"struct.rubinius::Object"** %local_pos1351, !dbg !59, !rbx-classid !22
  %stack_pos1353 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !59
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos1353, !dbg !59
  %stack_pos1354 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !59
  %stack_load1355 = load %"struct.rubinius::Object"** %stack_pos1354, !dbg !59, !rbx-classid !22
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %stack_load1355 to i64, !dbg !59
  %and1357 = and i64 %as_int1356, 15, !dbg !59
  %is_true1358 = icmp eq i64 %and1357, 10, !dbg !59
  br i1 %is_true1358, label %ip386, label %continue1359, !dbg !59

continue1359:                                     ; preds = %ip357
  br label %ip362, !dbg !59

ip362:                                            ; preds = %continue1359
  %local_pos1360 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !60
  %local1361 = load %"struct.rubinius::Object"** %local_pos1360, !dbg !60, !rbx-classid !22
  %stack_pos1362 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %local1361, %"struct.rubinius::Object"** %stack_pos1362, !dbg !60
  %stack_pos1363 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1364 = load %"struct.rubinius::Object"** %stack_pos1363, !dbg !60, !rbx-classid !22
  %stack_pos1365 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1364, %"struct.rubinius::Object"** %stack_pos1365, !dbg !60
  %global_serial1366 = load i32* inttoptr (i64 22553844 to i32*), !dbg !60
  %constant_cache1367 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566944 to %"struct.rubinius::ConstantCache"**), !dbg !60
  %constant_cache_pos1368 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 4, !dbg !60
  %constant_scope1369 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1368, !dbg !60
  %scope_pos1370 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !60
  %frame_scope1371 = load %"struct.rubinius::ConstantScope"** %scope_pos1370, !dbg !60
  %same_scope1372 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1369, %frame_scope1371, !dbg !60
  br i1 %same_scope1372, label %check_serial1373, label %use_call1375, !dbg !60

check_serial1373:                                 ; preds = %ip362
  %serial_pos1377 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 7, !dbg !60
  %serial1378 = load i32* %serial_pos1377, !dbg !60
  %use_cache1379 = icmp eq i32 %global_serial1366, %serial1378, !dbg !60
  br i1 %use_cache1379, label %use_cache1374, label %use_call1375, !dbg !60

use_cache1374:                                    ; preds = %check_serial1373
  %value_pos1380 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i32 0, i32 2, !dbg !60
  %cached_value1381 = load %"struct.rubinius::Object"** %value_pos1380, !dbg !60
  br label %continue1376, !dbg !60

use_call1375:                                     ; preds = %check_serial1373, %ip362
  store i32 365, i32* %ip_pos, !dbg !60
  %push_const_fast1382 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566944 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check1385 = icmp eq %"struct.rubinius::Object"* %push_const_fast1382, null, !dbg !60
  br i1 %null_check1385, label %bail_out, label %check_active1384, !dbg !60

continue1376:                                     ; preds = %continue1383, %use_cache1374
  %constant1386 = phi %"struct.rubinius::Object"* [ %cached_value1381, %use_cache1374 ], [ %push_const_fast1382, %continue1383 ], !dbg !60, !rbx-classid !61
  %stack_pos1387 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %constant1386, %"struct.rubinius::Object"** %stack_pos1387, !dbg !60
  %stack_pos1388 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  %stack_load1389 = load %"struct.rubinius::Object"** %stack_pos1388, !dbg !60, !rbx-classid !61
  %stack_pos1390 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1391 = load %"struct.rubinius::Object"** %stack_pos1390, !dbg !60, !rbx-classid !22
  %stack_pos1392 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1389, %"struct.rubinius::Object"** %stack_pos1392, !dbg !60
  %stack_pos1393 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1391, %"struct.rubinius::Object"** %stack_pos1393, !dbg !60
  %stack_pos1394 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  %stack_load1395 = load %"struct.rubinius::Object"** %stack_pos1394, !dbg !60, !rbx-classid !22
  %stack_pos1396 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1397 = load %"struct.rubinius::Object"** %stack_pos1396, !dbg !60, !rbx-classid !61
  %cast1415 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1416 = and i64 %cast1415, 3, !dbg !60
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !60
  br i1 %is_reference1417, label %reference_block1403, label %class_verified_block1402, !dbg !60

continue1383:                                     ; preds = %check_active1384
  br label %continue1376, !dbg !60

check_active1384:                                 ; preds = %use_call1375
  br label %continue1383, !dbg !60

continue1398:                                     ; preds = %use_call1399, %negative1401, %positive1400
  %constant1445 = phi %"struct.rubinius::Object"* [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %positive1400 ], [ inttoptr (i64 10 to %"struct.rubinius::Object"*), %negative1401 ], [ %kind_of1444, %use_call1399 ], !dbg !60
  %stack_pos1446 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %constant1445, %"struct.rubinius::Object"** %stack_pos1446, !dbg !60
  %stack_pos1447 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  %stack_load1448 = load %"struct.rubinius::Object"** %stack_pos1447, !dbg !60
  %as_int1449 = ptrtoint %"struct.rubinius::Object"* %stack_load1448 to i64, !dbg !60
  %and1450 = and i64 %as_int1449, 15, !dbg !60
  %is_true1451 = icmp ne i64 %and1450, 10, !dbg !60
  br i1 %is_true1451, label %ip382, label %continue1452, !dbg !60

use_call1399:                                     ; preds = %is_false_block1414, %check_false_block1413, %is_true_block1412, %is_nil_block1410, %is_integer_block1408, %is_symbol_block1405, %class_verified_block1402, %reference_block1403
  %kind_of1444 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %stack_load1395, %"struct.rubinius::Object"* %stack_load1397) #0, !dbg !60
  br label %continue1398, !dbg !60

positive1400:                                     ; preds = %is_false_block1414, %is_true_block1412, %is_nil_block1410, %is_integer_block1408, %is_fixnum_block1407, %is_symbol_block1405, %reference_block1403
  br label %continue1398, !dbg !60

negative1401:                                     ; No predecessors!
  br label %continue1398, !dbg !60

class_verified_block1402:                         ; preds = %continue1376
  %word_pos1422 = getelementptr %"struct.rubinius::Object"* %stack_load1397, i32 0, i32 0, i32 0, i32 0, !dbg !60
  %flags1423 = load i64* %word_pos1422, !dbg !60
  %mask1424 = and i64 %flags1423, 255, !dbg !60
  %is_type1425 = icmp eq i64 %mask1424, 20, !dbg !60
  br i1 %is_type1425, label %check_symbol_block1404, label %use_call1399, !dbg !60

reference_block1403:                              ; preds = %continue1376
  %class_pos1418 = getelementptr %"struct.rubinius::Object"* %stack_load1395, i32 0, i32 0, i32 1, !dbg !60
  %ref_class1419 = load %"struct.rubinius::Class"** %class_pos1418, !dbg !60
  %downcast1420 = bitcast %"struct.rubinius::Class"* %ref_class1419 to %"struct.rubinius::Object"*, !dbg !60
  %check_class1421 = icmp eq %"struct.rubinius::Object"* %downcast1420, %stack_load1397, !dbg !60
  br i1 %check_class1421, label %positive1400, label %use_call1399, !dbg !60

check_symbol_block1404:                           ; preds = %class_verified_block1402
  %upcast1426 = bitcast %"struct.rubinius::Object"* %stack_load1397 to %"struct.rubinius::Class"*, !dbg !60
  %class_id_pos1427 = getelementptr %"struct.rubinius::Class"* %upcast1426, i32 0, i32 4, !dbg !60
  %class_id1428 = load i32* %class_id_pos1427, !dbg !60
  %cast1429 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1430 = and i64 %cast1429, 7, !dbg !60
  %is_symbol1431 = icmp eq i64 %masked1430, 6, !dbg !60
  br i1 %is_symbol1431, label %is_symbol_block1405, label %check_fixnum_block1406, !dbg !60

is_symbol_block1405:                              ; preds = %check_symbol_block1404
  %check_class_id1432 = icmp eq i32 %class_id1428, 39, !dbg !60
  br i1 %check_class_id1432, label %positive1400, label %use_call1399, !dbg !60

check_fixnum_block1406:                           ; preds = %check_symbol_block1404
  %cast1433 = ptrtoint %"struct.rubinius::Object"* %stack_load1395 to i64, !dbg !60
  %masked1434 = and i64 %cast1433, 1, !dbg !60
  %is_fixnum1435 = icmp eq i64 %masked1434, 1, !dbg !60
  br i1 %is_fixnum1435, label %is_fixnum_block1407, label %check_nil_block1409, !dbg !60

is_fixnum_block1407:                              ; preds = %check_fixnum_block1406
  %check_class_id1436 = icmp eq i32 %class_id1428, 37, !dbg !60
  br i1 %check_class_id1436, label %positive1400, label %is_integer_block1408, !dbg !60

is_integer_block1408:                             ; preds = %is_fixnum_block1407
  %check_class_id1437 = icmp eq i32 %class_id1428, 35, !dbg !60
  br i1 %check_class_id1437, label %positive1400, label %use_call1399, !dbg !60

check_nil_block1409:                              ; preds = %check_fixnum_block1406
  %is_immediate1438 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 26 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1438, label %is_nil_block1410, label %check_true_block1411, !dbg !60

is_nil_block1410:                                 ; preds = %check_nil_block1409
  %check_class_id1439 = icmp eq i32 %class_id1428, 27, !dbg !60
  br i1 %check_class_id1439, label %positive1400, label %use_call1399, !dbg !60

check_true_block1411:                             ; preds = %check_nil_block1409
  %is_immediate1440 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 18 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1440, label %is_true_block1412, label %check_false_block1413, !dbg !60

is_true_block1412:                                ; preds = %check_true_block1411
  %check_class_id1441 = icmp eq i32 %class_id1428, 29, !dbg !60
  br i1 %check_class_id1441, label %positive1400, label %use_call1399, !dbg !60

check_false_block1413:                            ; preds = %check_true_block1411
  %is_immediate1442 = icmp eq %"struct.rubinius::Object"* %stack_load1395, inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !60
  br i1 %is_immediate1442, label %is_false_block1414, label %use_call1399, !dbg !60

is_false_block1414:                               ; preds = %check_false_block1413
  %check_class_id1443 = icmp eq i32 %class_id1428, 31, !dbg !60
  br i1 %check_class_id1443, label %positive1400, label %use_call1399, !dbg !60

continue1452:                                     ; preds = %continue1398
  br label %ip371, !dbg !60

ip371:                                            ; preds = %continue1452
  %system_object1453 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), !dbg !60
  %stack_pos1454 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %stack_pos1454, !dbg !60
  %local_pos1455 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !60
  %local1456 = load %"struct.rubinius::Object"** %local_pos1455, !dbg !60, !rbx-classid !22
  %stack_pos1457 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"* %local1456, %"struct.rubinius::Object"** %stack_pos1457, !dbg !60
  %global_serial1458 = load i32* inttoptr (i64 22553844 to i32*), !dbg !60
  %constant_cache1459 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567024 to %"struct.rubinius::ConstantCache"**), !dbg !60
  %constant_cache_pos1460 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 4, !dbg !60
  %constant_scope1461 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1460, !dbg !60
  %scope_pos1462 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !60
  %frame_scope1463 = load %"struct.rubinius::ConstantScope"** %scope_pos1462, !dbg !60
  %same_scope1464 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1461, %frame_scope1463, !dbg !60
  br i1 %same_scope1464, label %check_serial1465, label %use_call1467, !dbg !60

check_serial1465:                                 ; preds = %ip371
  %serial_pos1469 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 7, !dbg !60
  %serial1470 = load i32* %serial_pos1469, !dbg !60
  %use_cache1471 = icmp eq i32 %global_serial1458, %serial1470, !dbg !60
  br i1 %use_cache1471, label %use_cache1466, label %use_call1467, !dbg !60

use_cache1466:                                    ; preds = %check_serial1465
  %value_pos1472 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i32 0, i32 2, !dbg !60
  %cached_value1473 = load %"struct.rubinius::Object"** %value_pos1472, !dbg !60
  br label %continue1468, !dbg !60

use_call1467:                                     ; preds = %check_serial1465, %ip371
  store i32 375, i32* %ip_pos, !dbg !60
  %push_const_fast1474 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567024 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !60
  %null_check1477 = icmp eq %"struct.rubinius::Object"* %push_const_fast1474, null, !dbg !60
  br i1 %null_check1477, label %bail_out, label %check_active1476, !dbg !60

continue1468:                                     ; preds = %continue1475, %use_cache1466
  %constant1478 = phi %"struct.rubinius::Object"* [ %cached_value1473, %use_cache1466 ], [ %push_const_fast1474, %continue1475 ], !dbg !60, !rbx-classid !62
  %stack_pos1479 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !60
  store %"struct.rubinius::Object"* %constant1478, %"struct.rubinius::Object"** %stack_pos1479, !dbg !60
  %stack_pos1480 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1480, !dbg !60
  %stack_pos1481 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1482 = load %"struct.rubinius::Object"** %stack_pos1481, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1482, %"struct.rubinius::Object"** %out_args_recv, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !60
  store i32 3, i32* %out_args_total, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !60
  %stack_pos1483 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos1483, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !60
  %cache_const1484 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567056 to %"struct.rubinius::CallSite"**), !dbg !60
  %execute_pos1485 = getelementptr %"struct.rubinius::CallSite"* %cache_const1484, i32 0, i32 2, !dbg !60
  %execute1486 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1485, !dbg !60
  store i32 379, i32* %ip_pos, !dbg !60
  %call_site_execute1487 = call %"struct.rubinius::Object"* %execute1486(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1484, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1490 = icmp eq %"struct.rubinius::Object"* %call_site_execute1487, null, !dbg !60
  br i1 %null_check1490, label %bail_out, label %check_active1489, !dbg !60

continue1475:                                     ; preds = %check_active1476
  br label %continue1468, !dbg !60

check_active1476:                                 ; preds = %use_call1467
  br label %continue1475, !dbg !60

continue1488:                                     ; preds = %check_active1489
  %stack_pos1491 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  store %"struct.rubinius::Object"* %call_site_execute1487, %"struct.rubinius::Object"** %stack_pos1491, !dbg !60
  br label %ip382, !dbg !60

ip382:                                            ; preds = %continue1488, %continue1398
  %local_pos1492 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !60
  %stack_pos1493 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !60
  %stack_load1494 = load %"struct.rubinius::Object"** %stack_pos1493, !dbg !60
  store %"struct.rubinius::Object"* %stack_load1494, %"struct.rubinius::Object"** %local_pos1492, !dbg !60
  br label %ip459, !dbg !60

check_active1489:                                 ; preds = %continue1468
  br label %continue1488, !dbg !60

continue1495:                                     ; No predecessors!
  br label %ip386, !dbg !60

ip386:                                            ; preds = %continue1495, %ip357
  %local_pos1496 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !63
  %local1497 = load %"struct.rubinius::Object"** %local_pos1496, !dbg !63, !rbx-classid !19
  %stack_pos1498 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %stack_pos1498, !dbg !63
  %self_pos1499 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !63
  %self1500 = load %"struct.rubinius::Object"** %self_pos1499, !dbg !63
  %obj_array1501 = bitcast %"struct.rubinius::Object"* %self1500 to %"struct.rubinius::Object"**, !dbg !63
  %field_pos1502 = getelementptr %"struct.rubinius::Object"** %obj_array1501, i32 3, !dbg !63
  %field1503 = load %"struct.rubinius::Object"** %field_pos1502, !dbg !63
  %stack_pos1504 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !63
  store %"struct.rubinius::Object"* %field1503, %"struct.rubinius::Object"** %stack_pos1504, !dbg !63
  %stack_pos1505 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1506 = load %"struct.rubinius::Object"** %stack_pos1505, !dbg !63, !rbx-classid !19
  store %"struct.rubinius::Object"* %stack_load1506, %"struct.rubinius::Object"** %out_args_recv, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !63
  store i32 1, i32* %out_args_total, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !63
  %stack_pos1507 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos1507, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !63
  %cache_const1508 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567144 to %"struct.rubinius::CallSite"**), !dbg !63
  %execute_pos1509 = getelementptr %"struct.rubinius::CallSite"* %cache_const1508, i32 0, i32 2, !dbg !63
  %execute1510 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1509, !dbg !63
  store i32 390, i32* %ip_pos, !dbg !63
  %call_site_execute1511 = call %"struct.rubinius::Object"* %execute1510(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1508, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1514 = icmp eq %"struct.rubinius::Object"* %call_site_execute1511, null, !dbg !63
  br i1 %null_check1514, label %bail_out, label %check_active1513, !dbg !63

continue1512:                                     ; preds = %check_active1513
  %stack_pos1515 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* %call_site_execute1511, %"struct.rubinius::Object"** %stack_pos1515, !dbg !63
  %stack_pos1516 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1517 = load %"struct.rubinius::Object"** %stack_pos1516, !dbg !63
  %as_int1518 = ptrtoint %"struct.rubinius::Object"* %stack_load1517 to i64, !dbg !63
  %and1519 = and i64 %as_int1518, 15, !dbg !63
  %is_true1520 = icmp eq i64 %and1519, 10, !dbg !63
  br i1 %is_true1520, label %ip399, label %continue1521, !dbg !63

check_active1513:                                 ; preds = %ip386
  br label %continue1512, !dbg !63

continue1521:                                     ; preds = %continue1512
  br label %ip395, !dbg !63

ip395:                                            ; preds = %continue1521
  %stack_pos1522 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1522, !dbg !63
  %stack_pos1523 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  %stack_load1524 = load %"struct.rubinius::Object"** %stack_pos1523, !dbg !63, !rbx-classid !12
  br label %return_pad, !dbg !63

ip399:                                            ; preds = %continue1512
  %stack_pos1525 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1525, !dbg !63
  %60 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !64
  %stack_pos1526 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !64
  store %"struct.rubinius::Object"* %60, %"struct.rubinius::Object"** %stack_pos1526, !dbg !64
  %stack_pos1527 = getelementptr %"struct.rubinius::Object"** %stack, i32 10, !dbg !64
  %stack_pos1528 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !64
  %stack_load1529 = load %"struct.rubinius::Object"** %stack_pos1528, !dbg !64
  store %"struct.rubinius::Object"* %stack_load1529, %"struct.rubinius::Object"** %stack_pos1527, !dbg !64
  br label %ip408, !dbg !64

ip408:                                            ; preds = %ip399
  %self_pos1532 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !65
  %self1533 = load %"struct.rubinius::Object"** %self_pos1532, !dbg !65
  %obj_array1534 = bitcast %"struct.rubinius::Object"* %self1533 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1535 = getelementptr %"struct.rubinius::Object"** %obj_array1534, i32 4, !dbg !65
  %field1536 = load %"struct.rubinius::Object"** %field_pos1535, !dbg !65
  %stack_pos1537 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %field1536, %"struct.rubinius::Object"** %stack_pos1537, !dbg !65
  %self_pos1538 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !65
  %self1539 = load %"struct.rubinius::Object"** %self_pos1538, !dbg !65
  %obj_array1540 = bitcast %"struct.rubinius::Object"* %self1539 to %"struct.rubinius::Object"**, !dbg !65
  %field_pos1541 = getelementptr %"struct.rubinius::Object"** %obj_array1540, i32 5, !dbg !65
  %field1542 = load %"struct.rubinius::Object"** %field_pos1541, !dbg !65
  %stack_pos1543 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %stack_pos1543, !dbg !65
  %local_pos1544 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !65
  %local1545 = load %"struct.rubinius::Object"** %local_pos1544, !dbg !65, !rbx-classid !19
  %stack_pos1546 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !65
  store %"struct.rubinius::Object"* %local1545, %"struct.rubinius::Object"** %stack_pos1546, !dbg !65
  %stack_pos1547 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  %stack_load1548 = load %"struct.rubinius::Object"** %stack_pos1547, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1548, %"struct.rubinius::Object"** %out_args_recv, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !65
  store i32 1, i32* %out_args_total, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !65
  %stack_pos1549 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1549, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !65
  %cache_const1550 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567336 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1551 = getelementptr %"struct.rubinius::CallSite"* %cache_const1550, i32 0, i32 2, !dbg !65
  %execute1552 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1551, !dbg !65
  store i32 414, i32* %ip_pos, !dbg !65
  %call_site_execute1553 = call %"struct.rubinius::Object"* %execute1552(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1550, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1556 = icmp eq %"struct.rubinius::Object"* %call_site_execute1553, null, !dbg !65
  br i1 %null_check1556, label %is_exception1530, label %check_active1555, !dbg !65

is_exception1530:                                 ; preds = %continue1554, %ip408
  %rae1531 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !64
  br i1 %rae1531, label %ip424, label %bail_out, !dbg !64

continue1554:                                     ; preds = %check_active1555
  %stack_pos1557 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute1553, %"struct.rubinius::Object"** %stack_pos1557, !dbg !65
  %stack_pos1558 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  %stack_load1559 = load %"struct.rubinius::Object"** %stack_pos1558, !dbg !65
  store %"struct.rubinius::Object"* %stack_load1559, %"struct.rubinius::Object"** %out_args_recv, !dbg !65
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !65
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !65
  store i32 1, i32* %out_args_total, !dbg !65
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !65
  %stack_pos1560 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !65
  store %"struct.rubinius::Object"** %stack_pos1560, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !65
  %cache_const1561 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567360 to %"struct.rubinius::CallSite"**), !dbg !65
  %execute_pos1562 = getelementptr %"struct.rubinius::CallSite"* %cache_const1561, i32 0, i32 2, !dbg !65
  %execute1563 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1562, !dbg !65
  store i32 417, i32* %ip_pos, !dbg !65
  %call_site_execute1564 = call %"struct.rubinius::Object"* %execute1563(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1561, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !65
  %null_check1567 = icmp eq %"struct.rubinius::Object"* %call_site_execute1564, null, !dbg !65
  br i1 %null_check1567, label %is_exception1530, label %check_active1566, !dbg !65

check_active1555:                                 ; preds = %ip408
  br label %continue1554, !dbg !65

continue1565:                                     ; preds = %check_active1566
  %stack_pos1568 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  store %"struct.rubinius::Object"* %call_site_execute1564, %"struct.rubinius::Object"** %stack_pos1568, !dbg !65
  %stack_pos1569 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !65
  %stack_load1570 = load %"struct.rubinius::Object"** %stack_pos1569, !dbg !65
  br label %return_pad, !dbg !65

ip424:                                            ; preds = %is_exception1530
  %61 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos1571 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %61, %"struct.rubinius::Object"** %stack_pos1571, !dbg !26
  %stack_pos1572 = getelementptr %"struct.rubinius::Object"** %stack, i32 9, !dbg !26
  %stack_pos1573 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load1574 = load %"struct.rubinius::Object"** %stack_pos1573, !dbg !26
  store %"struct.rubinius::Object"* %stack_load1574, %"struct.rubinius::Object"** %stack_pos1572, !dbg !26
  %ce1575 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !26
  %stack_pos1576 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos1576, !dbg !26
  %stack_pos1577 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !66
  %stack_load1578 = load %"struct.rubinius::Object"** %stack_pos1577, !dbg !66
  %stack_pos1579 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1578, %"struct.rubinius::Object"** %stack_pos1579, !dbg !66
  %global_serial1580 = load i32* inttoptr (i64 22553844 to i32*), !dbg !66
  %constant_cache1581 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567464 to %"struct.rubinius::ConstantCache"**), !dbg !66
  %constant_cache_pos1582 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 4, !dbg !66
  %constant_scope1583 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1582, !dbg !66
  %scope_pos1584 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !66
  %frame_scope1585 = load %"struct.rubinius::ConstantScope"** %scope_pos1584, !dbg !66
  %same_scope1586 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1583, %frame_scope1585, !dbg !66
  br i1 %same_scope1586, label %check_serial1587, label %use_call1589, !dbg !66

check_active1566:                                 ; preds = %continue1554
  br label %continue1565, !dbg !65

check_serial1587:                                 ; preds = %ip424
  %serial_pos1591 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 7, !dbg !66
  %serial1592 = load i32* %serial_pos1591, !dbg !66
  %use_cache1593 = icmp eq i32 %global_serial1580, %serial1592, !dbg !66
  br i1 %use_cache1593, label %use_cache1588, label %use_call1589, !dbg !66

use_cache1588:                                    ; preds = %check_serial1587
  %value_pos1594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i32 0, i32 2, !dbg !66
  %cached_value1595 = load %"struct.rubinius::Object"** %value_pos1594, !dbg !66
  br label %continue1590, !dbg !66

use_call1589:                                     ; preds = %check_serial1587, %ip424
  store i32 430, i32* %ip_pos, !dbg !66
  %push_const_fast1596 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567464 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !66
  %null_check1599 = icmp eq %"struct.rubinius::Object"* %push_const_fast1596, null, !dbg !66
  br i1 %null_check1599, label %bail_out, label %check_active1598, !dbg !66

continue1590:                                     ; preds = %continue1597, %use_cache1588
  %constant1600 = phi %"struct.rubinius::Object"* [ %cached_value1595, %use_cache1588 ], [ %push_const_fast1596, %continue1597 ], !dbg !66, !rbx-classid !67
  %stack_pos1601 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %constant1600, %"struct.rubinius::Object"** %stack_pos1601, !dbg !66
  %stack_pos1602 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  %stack_load1603 = load %"struct.rubinius::Object"** %stack_pos1602, !dbg !66, !rbx-classid !67
  %global_serial1604 = load i32* inttoptr (i64 22553844 to i32*), !dbg !66
  %constant_cache1605 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567480 to %"struct.rubinius::ConstantCache"**), !dbg !66
  %constant_cache_pos1606 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 4, !dbg !66
  %constant_scope1607 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1606, !dbg !66
  %scope_pos1608 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !66
  %frame_scope1609 = load %"struct.rubinius::ConstantScope"** %scope_pos1608, !dbg !66
  %same_scope1610 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1607, %frame_scope1609, !dbg !66
  br i1 %same_scope1610, label %check_serial1611, label %use_call1614, !dbg !66

continue1597:                                     ; preds = %check_active1598
  br label %continue1590, !dbg !66

check_active1598:                                 ; preds = %use_call1589
  br label %continue1597, !dbg !66

check_serial1611:                                 ; preds = %continue1590
  %serial_pos1616 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 7, !dbg !66
  %serial1617 = load i32* %serial_pos1616, !dbg !66
  %use_under1618 = icmp eq i32 %global_serial1604, %serial1617, !dbg !66
  br i1 %use_under1618, label %check_under1612, label %use_call1614, !dbg !66

check_under1612:                                  ; preds = %check_serial1611
  %value_pos1619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 3, !dbg !66
  %cached_under1620 = load %"struct.rubinius::Module"** %value_pos1619, !dbg !66
  %downcast1621 = bitcast %"struct.rubinius::Module"* %cached_under1620 to %"struct.rubinius::Object"*, !dbg !66
  %use_cache1622 = icmp eq %"struct.rubinius::Object"* %downcast1621, %stack_load1603, !dbg !66
  br i1 %use_cache1622, label %use_cache1613, label %use_call1614, !dbg !66

use_cache1613:                                    ; preds = %check_under1612
  %value_pos1623 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i32 0, i32 2, !dbg !66
  %cached_value1624 = load %"struct.rubinius::Object"** %value_pos1623, !dbg !66
  br label %continue1615, !dbg !66

use_call1614:                                     ; preds = %check_under1612, %check_serial1611, %continue1590
  store i32 432, i32* %ip_pos, !dbg !66
  %constant1625 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567480 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %stack_load1603) #0, !dbg !66
  %null_check1628 = icmp eq %"struct.rubinius::Object"* %constant1625, null, !dbg !66
  br i1 %null_check1628, label %bail_out, label %check_active1627, !dbg !66

continue1615:                                     ; preds = %continue1626, %use_cache1613
  %constant1629 = phi %"struct.rubinius::Object"* [ %cached_value1624, %use_cache1613 ], [ %constant1625, %continue1626 ], !dbg !66, !rbx-classid !68
  %stack_pos1630 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %stack_pos1630, !dbg !66
  %stack_pos1631 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  %stack_load1632 = load %"struct.rubinius::Object"** %stack_pos1631, !dbg !66, !rbx-classid !68
  %stack_pos1633 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1634 = load %"struct.rubinius::Object"** %stack_pos1633, !dbg !66
  %stack_pos1635 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1632, %"struct.rubinius::Object"** %stack_pos1635, !dbg !66
  %stack_pos1636 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"* %stack_load1634, %"struct.rubinius::Object"** %stack_pos1636, !dbg !66
  %stack_pos1637 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1638 = load %"struct.rubinius::Object"** %stack_pos1637, !dbg !66, !rbx-classid !68
  store %"struct.rubinius::Object"* %stack_load1638, %"struct.rubinius::Object"** %out_args_recv, !dbg !66
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !66
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !66
  store i32 1, i32* %out_args_total, !dbg !66
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !66
  %stack_pos1639 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !66
  store %"struct.rubinius::Object"** %stack_pos1639, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !66
  %cache_const1640 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567504 to %"struct.rubinius::CallSite"**), !dbg !66
  %execute_pos1641 = getelementptr %"struct.rubinius::CallSite"* %cache_const1640, i32 0, i32 2, !dbg !66
  %execute1642 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1641, !dbg !66
  store i32 435, i32* %ip_pos, !dbg !66
  %call_site_execute1643 = call %"struct.rubinius::Object"* %execute1642(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1640, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !66
  %null_check1646 = icmp eq %"struct.rubinius::Object"* %call_site_execute1643, null, !dbg !66
  br i1 %null_check1646, label %bail_out, label %check_active1645, !dbg !66

continue1626:                                     ; preds = %check_active1627
  br label %continue1615, !dbg !66

check_active1627:                                 ; preds = %use_call1614
  br label %continue1626, !dbg !66

continue1644:                                     ; preds = %check_active1645
  %stack_pos1647 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  store %"struct.rubinius::Object"* %call_site_execute1643, %"struct.rubinius::Object"** %stack_pos1647, !dbg !66
  %stack_pos1648 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !66
  %stack_load1649 = load %"struct.rubinius::Object"** %stack_pos1648, !dbg !66
  %as_int1650 = ptrtoint %"struct.rubinius::Object"* %stack_load1649 to i64, !dbg !66
  %and1651 = and i64 %as_int1650, 15, !dbg !66
  %is_true1652 = icmp ne i64 %and1651, 10, !dbg !66
  br i1 %is_true1652, label %ip442, label %continue1653, !dbg !66

check_active1645:                                 ; preds = %continue1615
  br label %continue1644, !dbg !66

continue1653:                                     ; preds = %continue1644
  br label %ip440, !dbg !66

ip440:                                            ; preds = %continue1653
  br label %ip451, !dbg !66

continue1654:                                     ; No predecessors!
  br label %ip442, !dbg !66

ip451:                                            ; preds = %ip440
  %stack_pos1655 = getelementptr %"struct.rubinius::Object"** %stack, i32 9, !dbg !69
  %stack_local1656 = load %"struct.rubinius::Object"** %stack_pos1655, !dbg !69
  %stack_pos1657 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  store %"struct.rubinius::Object"* %stack_local1656, %"struct.rubinius::Object"** %stack_pos1657, !dbg !69
  %stack_pos1658 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  %stack_load1659 = load %"struct.rubinius::Object"** %stack_pos1658, !dbg !69
  %62 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load1659), !dbg !69
  br label %bail_out, !dbg !69

continue1660:                                     ; No predecessors!
  br label %ip442, !dbg !66

ip442:                                            ; preds = %continue1660, %continue1654, %continue1644
  %stack_pos1661 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1661, !dbg !69
  %stack_pos1662 = getelementptr %"struct.rubinius::Object"** %stack, i32 10, !dbg !69
  %stack_local1663 = load %"struct.rubinius::Object"** %stack_pos1662, !dbg !69
  %stack_pos1664 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !69
  store %"struct.rubinius::Object"* %stack_local1663, %"struct.rubinius::Object"** %stack_pos1664, !dbg !69
  %stack_pos1665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !69
  %stack_load1666 = load %"struct.rubinius::Object"** %stack_pos1665, !dbg !69
  %63 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load1666), !dbg !69
  %stack_pos1667 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !69
  %stack_load1668 = load %"struct.rubinius::Object"** %stack_pos1667, !dbg !69, !rbx-classid !12
  br label %return_pad, !dbg !69

ip356:                                            ; preds = %continue1350, %continue1317
  %stack_pos1669 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1669, !dbg !11
  br label %ip357, !dbg !11

return_pad:                                       ; preds = %ip442, %continue1565, %ip395, %continue1144, %ip215, %ip130, %continue668, %serial_fallback667, %class_fallback666, %serial_fallback629, %ip83, %serial_fallback575, %continue535, %serial_fallback534, %serial_fallback493, %serial_fallback428, %serial_fallback384, %ip518, %serial_fallback343, %ip502, %continue327, %serial_fallback261, %ip468, %serial_fallback217, %serial_fallback79, %serial_fallback52, %serial_fallback, %class_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %21, %class_fallback ], [ %22, %serial_fallback ], [ %23, %serial_fallback52 ], [ %25, %serial_fallback79 ], [ %28, %serial_fallback217 ], [ %stack_load249, %ip468 ], [ %30, %serial_fallback261 ], [ %stack_load332, %continue327 ], [ %stack_load336, %ip502 ], [ %33, %serial_fallback343 ], [ %stack_load375, %ip518 ], [ %35, %serial_fallback384 ], [ %38, %serial_fallback428 ], [ %41, %serial_fallback493 ], [ %45, %serial_fallback534 ], [ %stack_load563, %continue535 ], [ %46, %serial_fallback575 ], [ %stack_load607, %ip83 ], [ %49, %serial_fallback629 ], [ %52, %class_fallback666 ], [ %53, %serial_fallback667 ], [ %stack_load682, %continue668 ], [ %stack_load774, %ip130 ], [ %stack_load973, %ip215 ], [ %stack_load1149, %continue1144 ], [ %stack_load1524, %ip395 ], [ %stack_load1570, %continue1565 ], [ %stack_load1668, %ip442 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

ret_null1670:                                     ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !11

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %64 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %64, label %ret_null1670, label %method_body, !dbg !11
}

[[[ LLVM Optimized IR: _X_Array#[]@1 ]]]

define %"struct.rubinius::Object"* @"_X_Array#[]@1"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !9
  %cfstk1675 = alloca [22 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %var_mem1676 = alloca [11 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %call_frame = bitcast [22 x %"struct.rubinius::Object"*]* %cfstk1675 to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 9, !dbg !9
  %vars = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem1676 to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, align 4, !dbg !9
  %arg.total.off = add i32 %arg.total, -1, !dbg !9
  %0 = icmp ugt i32 %arg.total.off, 1, !dbg !9
  br i1 %0, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %1 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 3, !dbg !9
  %2 = getelementptr inbounds [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 0, !dbg !9
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %2, align 8, !dbg !9
  %3 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 8, !dbg !9
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %3, align 8, !dbg !9
  %4 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %4, align 8, !dbg !9
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %1, align 8, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !9
  %5 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !9
  %6 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 1, !dbg !9
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %5 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %6, align 8, !dbg !9
  %7 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 4, !dbg !9
  %8 = bitcast %"struct.rubinius::Object"** %7 to i32*, !dbg !9
  store i32 40, i32* %8, align 8, !dbg !9
  %9 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !9
  store i32 0, i32* %9, align 4, !dbg !9
  %10 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 7, !dbg !9
  %vars.c = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem1676 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %10, align 8, !dbg !9
  %11 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 140281080973552 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %11, align 8, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %12 = sext i32 %counter_alloca.0 to i64, !dbg !9
  %stack.sum = add i64 %12, 9, !dbg !9
  %stack_pos = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 %stack.sum, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !9
  %added = add i32 %counter_alloca.0, 1, !dbg !9
  %loop_check = icmp eq i32 %added, 13, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %13 = getelementptr inbounds [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 0, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %13, align 8, !dbg !9
  %14 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %14, align 8, !dbg !9, !rbx-classid !10
  %15 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %15, align 8, !dbg !9
  %16 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 4, !dbg !9
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %16, align 8, !dbg !9
  %17 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %17, align 8, !dbg !9
  %18 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %18, align 8, !dbg !9
  %19 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 1, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %19, align 8, !dbg !9
  %20 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !9
  %21 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 6, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !9
  %22 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 7, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !9
  %23 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 8, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !9
  %24 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 9, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %24, align 8, !dbg !9
  %25 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem1676, i64 0, i64 10, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %25, align 8, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_top:                                     ; preds = %arg_loop_body, %bottom
  %counter_alloca.1 = phi i32 [ 0, %bottom ], [ %add, %arg_loop_body ]
  %loop_test = icmp slt i32 %counter_alloca.1, %arg.total, !dbg !9
  br i1 %loop_test, label %arg_loop_body, label %arg_loop_cont, !dbg !9

arg_loop_body:                                    ; preds = %arg_loop_top
  %26 = sext i32 %counter_alloca.1 to i64, !dbg !9
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 %26, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, align 8, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i64 0, i32 6, i64 %26, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, align 8, !dbg !9
  %add = add i32 %counter_alloca.1, 1, !dbg !9
  br label %arg_loop_top, !dbg !9

arg_loop_cont:                                    ; preds = %arg_loop_top
  %27 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %27, align 8, !dbg !11
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !11
  %stack_limit = load i64* %28, align 8, !dbg !11
  %stack_end = ptrtoint [22 x %"struct.rubinius::Object"*]* %cfstk1675 to i64, !dbg !11
  %29 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %30 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !11
  %check_interrupts = load i8* %30, align 1, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !11
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %29, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %correct_serial, %ip451, %continue1615, %use_call1614, %use_call1589, %is_exception1530, %ip386, %continue1468, %use_call1467, %use_call1375, %ip345, %ip334, %continue1279, %use_call1278, %use_call1202, %check_active1165, %ip296, %ip286, %ip276, %ip265, %ip257, %ip245, %check_active1021, %continue1000, %use_call999, %ip219, %ip205, %ip195, %ip183, %check_active870, %continue849, %use_call848, %ip158, %continue789, %use_call788, %ip139, %continue725, %use_call724, %use_call700, %is_exception, %class_fallback574, %class_fallback533, %class_fallback492, %ip538, %class_fallback427, %class_fallback383, %class_fallback342, %ip492, %ip483, %class_fallback260, %class_fallback216, %continue183, %use_call182, %use_call132, %class_fallback78, %class_fallback51, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %arg_loop_cont
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !9
  %pa = call %"struct.rubinius::Object"* @rbx_passed_arg(%"struct.rubinius::State"* %state, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !9
  store %"struct.rubinius::Object"* %pa, %"struct.rubinius::Object"** %stack, align 8, !dbg !9
  %as_int = ptrtoint %"struct.rubinius::Object"* %pa to i64, !dbg !9
  %and = and i64 %as_int, 15, !dbg !9
  %is_true = icmp eq i64 %and, 10, !dbg !9
  br i1 %is_true, label %ip4, label %ip8, !dbg !9

ip4:                                              ; preds = %method_body
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !9
  br label %ip8, !dbg !9

ip8:                                              ; preds = %method_body, %ip4
  %local = load %"struct.rubinius::Object"** %21, align 8, !dbg !12, !rbx-classid !13
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !12
  %stack_pos16 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 10, !dbg !14
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !14
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564112 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !14
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !14
  %constant_scope17 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !14
  %31 = load %"struct.rubinius::Object"** %6, align 8, !dbg !14
  %frame_scope = bitcast %"struct.rubinius::Object"* %31 to %"struct.rubinius::ConstantScope"*, !dbg !14
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope17, %frame_scope, !dbg !14
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !14

check_serial:                                     ; preds = %ip8
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !14
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !14
  %serial = load i32* %serial_pos, align 4, !dbg !14
  %use_cache19 = icmp eq i32 %global_serial, %serial, !dbg !14
  br i1 %use_cache19, label %continue18, label %use_call, !dbg !14

use_call:                                         ; preds = %check_serial, %ip8
  store i32 11, i32* %9, align 4, !dbg !14
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564112 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !14
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !14
  br i1 %null_check, label %bail_out, label %continue18, !dbg !14

continue18:                                       ; preds = %check_serial, %use_call
  %stack_pos21 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 11, !dbg !14
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !14
  %cast = ptrtoint %"struct.rubinius::Object"* %local to i64, !dbg !14
  %masked = and i64 %cast, 1, !dbg !14
  %is_fixnum = icmp ne i64 %masked, 0, !dbg !14
  %is_fixnum33 = select i1 %is_fixnum, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !14
  store %"struct.rubinius::Object"* %is_fixnum33, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !14
  %as_int37 = ptrtoint %"struct.rubinius::Object"* %is_fixnum33 to i64, !dbg !14
  %and38 = and i64 %as_int37, 10, !dbg !14
  %is_true39 = icmp eq i64 %and38, 10, !dbg !14
  br i1 %is_true39, label %ip149, label %ip19, !dbg !14

ip19:                                             ; preds = %continue18
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %23, align 8, !dbg !15
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !16
  %is_fixnum61 = icmp eq i64 %masked, 0, !dbg !16
  br i1 %is_fixnum61, label %class_fallback51, label %push_le, !dbg !16

class_fallback51:                                 ; preds = %ip19
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !16
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !16
  store i32 1, i32* %out_args_total, align 8, !dbg !16
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !16
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !16
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 24564248 to %"struct.rubinius::CallSite"**), align 8, !dbg !16
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !16
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !16
  store i32 28, i32* %9, align 4, !dbg !16
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !16
  %null_check66 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !16
  br i1 %null_check66, label %bail_out, label %continue53, !dbg !16

continue53:                                       ; preds = %class_fallback51, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %32, %push_le ], [ %call_site_execute, %class_fallback51 ], !dbg !16
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  %as_int70 = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !16
  %and71 = and i64 %as_int70, 15, !dbg !16
  %is_true72 = icmp eq i64 %and71, 10, !dbg !16
  br i1 %is_true72, label %ip44, label %ip33, !dbg !16

push_le:                                          ; preds = %ip19
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %local, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !16
  %32 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !16
  br label %continue53, !dbg !16

ip33:                                             ; preds = %continue53
  %local75 = load %"struct.rubinius::Object"** %23, align 8, !dbg !16, !rbx-classid !17
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  %self = load %"struct.rubinius::Object"** %15, align 8, !dbg !16
  %field_pos1677 = getelementptr %"struct.rubinius::Object"* %self, i64 1, !dbg !16
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos1677 to %"struct.rubinius::Object"**, !dbg !16
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !16
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !16
  %cast85 = ptrtoint %"struct.rubinius::Object"* %local75 to i64, !dbg !16
  %cast86 = ptrtoint %"struct.rubinius::Object"* %field to i64, !dbg !16
  %fixnums_anded87 = and i64 %cast86, 1, !dbg !16
  %masked88 = and i64 %fixnums_anded87, %cast85, !dbg !16
  %is_fixnum89 = icmp eq i64 %masked88, 0, !dbg !16
  br i1 %is_fixnum89, label %class_fallback78, label %push_add, !dbg !16

class_fallback78:                                 ; preds = %ip33
  store %"struct.rubinius::Object"* %local75, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !16
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !16
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !16
  store i32 1, i32* %out_args_total, align 8, !dbg !16
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !16
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !16
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564320 to %"struct.rubinius::CallSite"**), align 32, !dbg !16
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i64 0, i32 2, !dbg !16
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, align 8, !dbg !16
  store i32 37, i32* %9, align 4, !dbg !16
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !16
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !16
  br i1 %null_check101, label %bail_out, label %continue80, !dbg !16

continue80:                                       ; preds = %class_fallback78, %bignum, %tagnow
  %send_result102 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute99, %class_fallback78 ], !dbg !16
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %23, align 8, !dbg !16
  br label %ip45, !dbg !16

push_add:                                         ; preds = %ip33
  %ashr = ashr i64 %cast85, 1, !dbg !16
  %ashr92 = ashr i64 %cast86, 1, !dbg !16
  %fixnum.add = add i64 %ashr, %ashr92, !dbg !16
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !16
  %33 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !16
  br i1 %33, label %tagnow, label %bignum, !dbg !16

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !16
  %or = or i64 %shl, 1, !dbg !16
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !16
  br label %continue80, !dbg !16

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !16
  br label %continue80, !dbg !16

ip45:                                             ; preds = %ip44, %continue80
  %local109 = load %"struct.rubinius::Object"** %22, align 8, !dbg !18, !rbx-classid !19
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack, align 8, !dbg !18
  %as_int113 = ptrtoint %"struct.rubinius::Object"* %local109 to i64, !dbg !18
  %and114 = and i64 %as_int113, 15, !dbg !18
  %is_true115 = icmp eq i64 %and114, 10, !dbg !18
  br i1 %is_true115, label %ip74, label %ip50, !dbg !18

ip50:                                             ; preds = %ip45
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %constant_cache124 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564448 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !20
  %constant_cache_pos125 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i64 0, i32 4, !dbg !20
  %constant_scope126 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos125, align 8, !dbg !20
  %34 = load %"struct.rubinius::Object"** %6, align 8, !dbg !20
  %frame_scope128 = bitcast %"struct.rubinius::Object"* %34 to %"struct.rubinius::ConstantScope"*, !dbg !20
  %same_scope129 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope126, %frame_scope128, !dbg !20
  br i1 %same_scope129, label %check_serial130, label %use_call132, !dbg !20

check_serial130:                                  ; preds = %ip50
  %global_serial123 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !20
  %serial_pos134 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache124, i64 0, i32 7, !dbg !20
  %serial135 = load i32* %serial_pos134, align 4, !dbg !20
  %use_cache136 = icmp eq i32 %global_serial123, %serial135, !dbg !20
  br i1 %use_cache136, label %continue133, label %use_call132, !dbg !20

use_call132:                                      ; preds = %check_serial130, %ip50
  store i32 53, i32* %9, align 4, !dbg !20
  %push_const_fast139 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564448 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !20
  %null_check142 = icmp eq %"struct.rubinius::Object"* %push_const_fast139, null, !dbg !20
  br i1 %null_check142, label %bail_out, label %continue133, !dbg !20

continue133:                                      ; preds = %check_serial130, %use_call132
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !20
  %masked159 = and i64 %as_int113, 1, !dbg !20
  %is_fixnum160 = icmp ne i64 %masked159, 0, !dbg !20
  %. = select i1 %is_fixnum160, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !20
  store %"struct.rubinius::Object"* %., %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %as_int165 = ptrtoint %"struct.rubinius::Object"* %. to i64, !dbg !20
  %and166 = and i64 %as_int165, 10, !dbg !20
  %is_true167 = icmp eq i64 %and166, 10, !dbg !20
  br i1 %is_true167, label %ip59, label %ip70, !dbg !20

ip59:                                             ; preds = %continue133
  %system_object = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), align 32, !dbg !20
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %local109, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !20
  %constant_cache174 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564528 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !20
  %constant_cache_pos175 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 4, !dbg !20
  %constant_scope176 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos175, align 8, !dbg !20
  %same_scope179 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope176, %frame_scope128, !dbg !20
  br i1 %same_scope179, label %check_serial180, label %use_call182, !dbg !20

check_serial180:                                  ; preds = %ip59
  %global_serial173 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !20
  %serial_pos184 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 7, !dbg !20
  %serial185 = load i32* %serial_pos184, align 4, !dbg !20
  %use_cache186 = icmp eq i32 %global_serial173, %serial185, !dbg !20
  br i1 %use_cache186, label %use_cache181, label %use_call182, !dbg !20

use_cache181:                                     ; preds = %check_serial180
  %value_pos187 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache174, i64 0, i32 2, !dbg !20
  %cached_value188 = load %"struct.rubinius::Object"** %value_pos187, align 8, !dbg !20
  br label %continue183, !dbg !20

use_call182:                                      ; preds = %check_serial180, %ip59
  store i32 63, i32* %9, align 4, !dbg !20
  %push_const_fast189 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564528 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !20
  %null_check192 = icmp eq %"struct.rubinius::Object"* %push_const_fast189, null, !dbg !20
  br i1 %null_check192, label %bail_out, label %continue183, !dbg !20

continue183:                                      ; preds = %use_call182, %use_cache181
  %constant193 = phi %"struct.rubinius::Object"* [ %cached_value188, %use_cache181 ], [ %push_const_fast189, %use_call182 ], !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant193, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !20
  %stack_pos195 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos195, align 8, !dbg !20
  store %"struct.rubinius::Object"* %system_object, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !20
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !20
  store i32 3, i32* %out_args_total, align 8, !dbg !20
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !20
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !20
  %cache_const199 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564560 to %"struct.rubinius::CallSite"**), align 16, !dbg !20
  %execute_pos200 = getelementptr %"struct.rubinius::CallSite"* %cache_const199, i64 0, i32 2, !dbg !20
  %execute201 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos200, align 8, !dbg !20
  store i32 67, i32* %9, align 4, !dbg !20
  %call_site_execute202 = call %"struct.rubinius::Object"* %execute201(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const199, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !20
  %null_check205 = icmp eq %"struct.rubinius::Object"* %call_site_execute202, null, !dbg !20
  br i1 %null_check205, label %bail_out, label %check_active204, !dbg !20

ip70:                                             ; preds = %continue133, %check_active204
  %stack_load209 = phi %"struct.rubinius::Object"* [ %local109, %continue133 ], [ %call_site_execute202, %check_active204 ]
  store %"struct.rubinius::Object"* %stack_load209, %"struct.rubinius::Object"** %24, align 8, !dbg !20
  br label %ip459, !dbg !22

check_active204:                                  ; preds = %continue183
  store %"struct.rubinius::Object"* %call_site_execute202, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  br label %ip70, !dbg !20

ip459:                                            ; preds = %ip382, %check_active1177, %ip70
  %local213 = phi %"struct.rubinius::Object"* [ %stack_load1494, %ip382 ], [ %call_site_execute1175, %check_active1177 ], [ %stack_load209, %ip70 ]
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !23
  %cast221 = ptrtoint %"struct.rubinius::Object"* %local213 to i64, !dbg !23
  %fixnums_anded225 = and i64 %cast221, 1
  %is_fixnum227 = icmp eq i64 %fixnums_anded225, 0, !dbg !23
  br i1 %is_fixnum227, label %class_fallback216, label %push_le228, !dbg !23

class_fallback216:                                ; preds = %ip459
  store %"struct.rubinius::Object"* %local213, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !23
  store i32 1, i32* %out_args_total, align 8, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !23
  %cache_const233 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567728 to %"struct.rubinius::CallSite"**), align 16, !dbg !23
  %execute_pos234 = getelementptr %"struct.rubinius::CallSite"* %cache_const233, i64 0, i32 2, !dbg !23
  %execute235 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos234, align 8, !dbg !23
  store i32 463, i32* %9, align 4, !dbg !23
  %call_site_execute236 = call %"struct.rubinius::Object"* %execute235(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const233, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check238 = icmp eq %"struct.rubinius::Object"* %call_site_execute236, null, !dbg !23
  br i1 %null_check238, label %bail_out, label %continue218, !dbg !23

continue218:                                      ; preds = %class_fallback216, %push_le228
  %send_result239 = phi %"struct.rubinius::Object"* [ %35, %push_le228 ], [ %call_site_execute236, %class_fallback216 ], !dbg !23
  %as_int243 = ptrtoint %"struct.rubinius::Object"* %send_result239 to i64, !dbg !23
  %and244 = and i64 %as_int243, 15, !dbg !23
  %is_true245 = icmp eq i64 %and244, 10, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  br i1 %is_true245, label %ip472, label %return_pad, !dbg !23

push_le228:                                       ; preds = %ip459
  %fixnum.lt229 = icmp slt %"struct.rubinius::Object"* %local213, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !23
  %35 = select i1 %fixnum.lt229, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue218, !dbg !23

ip472:                                            ; preds = %continue218
  %local252 = load %"struct.rubinius::Object"** %23, align 8, !dbg !24, !rbx-classid !17
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %stack, align 8, !dbg !24
  %self255 = load %"struct.rubinius::Object"** %15, align 8, !dbg !24
  %field_pos2571678 = getelementptr %"struct.rubinius::Object"* %self255, i64 1, !dbg !24
  %field_pos257 = bitcast %"struct.rubinius::Object"* %field_pos2571678 to %"struct.rubinius::Object"**, !dbg !24
  %field258 = load %"struct.rubinius::Object"** %field_pos257, align 8, !dbg !24
  store %"struct.rubinius::Object"* %field258, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !24
  %cast265 = ptrtoint %"struct.rubinius::Object"* %local252 to i64, !dbg !24
  %cast268 = ptrtoint %"struct.rubinius::Object"* %field258 to i64, !dbg !24
  %fixnums_anded269 = and i64 %cast268, 1
  %masked270 = and i64 %fixnums_anded269, %cast265
  %is_fixnum271 = icmp eq i64 %masked270, 0, !dbg !24
  br i1 %is_fixnum271, label %class_fallback260, label %push_le272, !dbg !24

class_fallback260:                                ; preds = %ip472
  store %"struct.rubinius::Object"* %local252, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !24
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !24
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !24
  store i32 1, i32* %out_args_total, align 8, !dbg !24
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !24
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !24
  %cache_const276 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567848 to %"struct.rubinius::CallSite"**), align 8, !dbg !24
  %execute_pos277 = getelementptr %"struct.rubinius::CallSite"* %cache_const276, i64 0, i32 2, !dbg !24
  %execute278 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos277, align 8, !dbg !24
  store i32 478, i32* %9, align 4, !dbg !24
  %call_site_execute279 = call %"struct.rubinius::Object"* %execute278(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const276, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !24
  %null_check281 = icmp eq %"struct.rubinius::Object"* %call_site_execute279, null, !dbg !24
  br i1 %null_check281, label %bail_out, label %class_fallback260.continue262_crit_edge, !dbg !24

class_fallback260.continue262_crit_edge:          ; preds = %class_fallback260
  %local339.pre = load %"struct.rubinius::Object"** %23, align 8, !dbg !25
  br label %continue262, !dbg !24

continue262:                                      ; preds = %class_fallback260.continue262_crit_edge, %push_le272
  %local339 = phi %"struct.rubinius::Object"* [ %local252, %push_le272 ], [ %local339.pre, %class_fallback260.continue262_crit_edge ]
  %send_result282 = phi %"struct.rubinius::Object"* [ %36, %push_le272 ], [ %call_site_execute279, %class_fallback260.continue262_crit_edge ], !dbg !24
  %as_int286 = ptrtoint %"struct.rubinius::Object"* %send_result282 to i64, !dbg !24
  %and287 = and i64 %as_int286, 15, !dbg !24
  %is_true288 = icmp eq i64 %and287, 10, !dbg !24
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  br i1 %is_true288, label %ip508, label %ip483, !dbg !24

push_le272:                                       ; preds = %ip472
  %fixnum.ge = icmp sge %"struct.rubinius::Object"* %local252, %field258, !dbg !24
  %36 = select i1 %fixnum.ge, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !24
  br label %continue262, !dbg !24

ip483:                                            ; preds = %continue262
  %self294 = load %"struct.rubinius::Object"** %15, align 8, !dbg !26
  %field_pos2961679 = getelementptr %"struct.rubinius::Object"* %self294, i64 1, !dbg !26
  %field_pos296 = bitcast %"struct.rubinius::Object"* %field_pos2961679 to %"struct.rubinius::Object"**, !dbg !26
  %field297 = load %"struct.rubinius::Object"** %field_pos296, align 8, !dbg !26
  store %"struct.rubinius::Object"* %field297, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !26
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 1390 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 1, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const302 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567920 to %"struct.rubinius::CallSite"**), align 16, !dbg !26
  %execute_pos303 = getelementptr %"struct.rubinius::CallSite"* %cache_const302, i64 0, i32 2, !dbg !26
  %execute304 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos303, align 8, !dbg !26
  store i32 487, i32* %9, align 4, !dbg !26
  %call_site_execute305 = call %"struct.rubinius::Object"* %execute304(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const302, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check308 = icmp eq %"struct.rubinius::Object"* %call_site_execute305, null, !dbg !26
  br i1 %null_check308, label %bail_out, label %check_active307, !dbg !26

check_active307:                                  ; preds = %ip483
  store %"struct.rubinius::Object"* %call_site_execute305, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %as_int312 = ptrtoint %"struct.rubinius::Object"* %call_site_execute305 to i64, !dbg !26
  %and313 = and i64 %as_int312, 15, !dbg !26
  %is_true314 = icmp eq i64 %and313, 10, !dbg !26
  br i1 %is_true314, label %ip502, label %ip492, !dbg !26

ip492:                                            ; preds = %check_active307
  %self316 = load %"struct.rubinius::Object"** %15, align 8, !dbg !26
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !26
  store %"struct.rubinius::Object"* %self316, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 2, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const323 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567992 to %"struct.rubinius::CallSite"**), align 8, !dbg !26
  %execute_pos324 = getelementptr %"struct.rubinius::CallSite"* %cache_const323, i64 0, i32 2, !dbg !26
  %execute325 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos324, align 8, !dbg !26
  store i32 496, i32* %9, align 4, !dbg !26
  %call_site_execute326 = call %"struct.rubinius::Object"* %execute325(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const323, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check329 = icmp eq %"struct.rubinius::Object"* %call_site_execute326, null, !dbg !26
  br i1 %null_check329, label %bail_out, label %check_active328, !dbg !26

ip502:                                            ; preds = %check_active307
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !27
  br label %return_pad, !dbg !27

ip508:                                            ; preds = %continue262
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !25
  %cast347 = ptrtoint %"struct.rubinius::Object"* %local339 to i64, !dbg !25
  %fixnums_anded351 = and i64 %cast347, 1
  %is_fixnum353 = icmp eq i64 %fixnums_anded351, 0, !dbg !25
  br i1 %is_fixnum353, label %class_fallback342, label %push_le354, !dbg !25

check_active328:                                  ; preds = %ip492
  store %"struct.rubinius::Object"* %call_site_execute326, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  br label %return_pad, !dbg !26

class_fallback342:                                ; preds = %ip508
  store %"struct.rubinius::Object"* %local339, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !25
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !25
  store i32 1, i32* %out_args_total, align 8, !dbg !25
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !25
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !25
  %cache_const359 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568128 to %"struct.rubinius::CallSite"**), align 64, !dbg !25
  %execute_pos360 = getelementptr %"struct.rubinius::CallSite"* %cache_const359, i64 0, i32 2, !dbg !25
  %execute361 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos360, align 8, !dbg !25
  store i32 513, i32* %9, align 4, !dbg !25
  %call_site_execute362 = call %"struct.rubinius::Object"* %execute361(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const359, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !25
  %null_check364 = icmp eq %"struct.rubinius::Object"* %call_site_execute362, null, !dbg !25
  br i1 %null_check364, label %bail_out, label %continue344, !dbg !25

continue344:                                      ; preds = %class_fallback342, %push_le354
  %send_result365 = phi %"struct.rubinius::Object"* [ %37, %push_le354 ], [ %call_site_execute362, %class_fallback342 ], !dbg !25
  %as_int369 = ptrtoint %"struct.rubinius::Object"* %send_result365 to i64, !dbg !25
  %and370 = and i64 %as_int369, 15, !dbg !25
  %is_true371 = icmp eq i64 %and370, 10, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  br i1 %is_true371, label %ip522, label %return_pad, !dbg !25

push_le354:                                       ; preds = %ip508
  %fixnum.lt355 = icmp slt %"struct.rubinius::Object"* %local339, inttoptr (i64 1 to %"struct.rubinius::Object"*), !dbg !25
  %37 = select i1 %fixnum.lt355, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !25
  br label %continue344, !dbg !25

ip522:                                            ; preds = %continue344
  %local378 = load %"struct.rubinius::Object"** %23, align 8, !dbg !28, !rbx-classid !17
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %local381 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !28
  %cast394 = ptrtoint %"struct.rubinius::Object"* %local378 to i64, !dbg !28
  %cast395 = ptrtoint %"struct.rubinius::Object"* %local381 to i64, !dbg !28
  %fixnums_anded396 = and i64 %cast395, 1, !dbg !28
  %masked397 = and i64 %fixnums_anded396, %cast394, !dbg !28
  %is_fixnum398 = icmp eq i64 %masked397, 0, !dbg !28
  br i1 %is_fixnum398, label %class_fallback383, label %push_add390, !dbg !28

class_fallback383:                                ; preds = %ip522
  store %"struct.rubinius::Object"* %local378, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568248 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i64 0, i32 2, !dbg !28
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, align 8, !dbg !28
  store i32 528, i32* %9, align 4, !dbg !28
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !28
  br i1 %null_check418, label %bail_out, label %continue385, !dbg !28

continue385:                                      ; preds = %class_fallback383, %bignum392, %tagnow391
  %send_result419 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], [ %call_site_execute416, %class_fallback383 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %self422 = load %"struct.rubinius::Object"** %15, align 8, !dbg !28
  %field_pos4241680 = getelementptr %"struct.rubinius::Object"* %self422, i64 1, !dbg !28
  %field_pos424 = bitcast %"struct.rubinius::Object"* %field_pos4241680 to %"struct.rubinius::Object"**, !dbg !28
  %field425 = load %"struct.rubinius::Object"** %field_pos424, align 8, !dbg !28
  store %"struct.rubinius::Object"* %field425, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !28
  %cast432 = ptrtoint %"struct.rubinius::Object"* %send_result419 to i64, !dbg !28
  %cast435 = ptrtoint %"struct.rubinius::Object"* %field425 to i64, !dbg !28
  %fixnums_anded436 = and i64 %cast435, 1
  %masked437 = and i64 %fixnums_anded436, %cast432
  %is_fixnum438 = icmp eq i64 %masked437, 0, !dbg !28
  br i1 %is_fixnum438, label %class_fallback427, label %push_le439, !dbg !28

push_add390:                                      ; preds = %ip522
  %ashr400 = ashr i64 %cast394, 1, !dbg !28
  %ashr402 = ashr i64 %cast395, 1, !dbg !28
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !28
  %fixnum.add403.off = add i64 %fixnum.add403, 4611686018427387903, !dbg !28
  %38 = icmp ult i64 %fixnum.add403.off, 9223372036854775807, !dbg !28
  br i1 %38, label %tagnow391, label %bignum392, !dbg !28

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !28
  %or407 = or i64 %shl406, 1, !dbg !28
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !28
  br label %continue385, !dbg !28

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #1, !dbg !28
  br label %continue385, !dbg !28

class_fallback427:                                ; preds = %continue385
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const443 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568288 to %"struct.rubinius::CallSite"**), align 32, !dbg !28
  %execute_pos444 = getelementptr %"struct.rubinius::CallSite"* %cache_const443, i64 0, i32 2, !dbg !28
  %execute445 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos444, align 8, !dbg !28
  store i32 533, i32* %9, align 4, !dbg !28
  %call_site_execute446 = call %"struct.rubinius::Object"* %execute445(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const443, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check448 = icmp eq %"struct.rubinius::Object"* %call_site_execute446, null, !dbg !28
  br i1 %null_check448, label %bail_out, label %continue429, !dbg !28

continue429:                                      ; preds = %class_fallback427, %push_le439
  %send_result449 = phi %"struct.rubinius::Object"* [ %39, %push_le439 ], [ %call_site_execute446, %class_fallback427 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result449, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %as_int453 = ptrtoint %"struct.rubinius::Object"* %send_result449 to i64, !dbg !28
  %and454 = and i64 %as_int453, 15, !dbg !28
  %is_true455 = icmp eq i64 %and454, 10, !dbg !28
  br i1 %is_true455, label %ip549, label %ip538, !dbg !28

push_le439:                                       ; preds = %continue385
  %fixnum.gt = icmp sgt %"struct.rubinius::Object"* %send_result419, %field425, !dbg !28
  %39 = select i1 %fixnum.gt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !28
  br label %continue429, !dbg !28

ip538:                                            ; preds = %continue429
  %self458 = load %"struct.rubinius::Object"** %15, align 8, !dbg !30
  %field_pos4601681 = getelementptr %"struct.rubinius::Object"* %self458, i64 1, !dbg !30
  %field_pos460 = bitcast %"struct.rubinius::Object"* %field_pos4601681 to %"struct.rubinius::Object"**, !dbg !30
  %field461 = load %"struct.rubinius::Object"** %field_pos460, align 8, !dbg !30
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %stack, align 8, !dbg !30
  %local464 = load %"struct.rubinius::Object"** %23, align 8, !dbg !30, !rbx-classid !17
  store %"struct.rubinius::Object"* %local464, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !30
  store %"struct.rubinius::Object"* %field461, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !30
  store i32 1, i32* %out_args_total, align 8, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !30
  %cache_const469 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568360 to %"struct.rubinius::CallSite"**), align 8, !dbg !30
  %execute_pos470 = getelementptr %"struct.rubinius::CallSite"* %cache_const469, i64 0, i32 2, !dbg !30
  %execute471 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos470, align 8, !dbg !30
  store i32 542, i32* %9, align 4, !dbg !30
  %call_site_execute472 = call %"struct.rubinius::Object"* %execute471(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const469, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check475 = icmp eq %"struct.rubinius::Object"* %call_site_execute472, null, !dbg !30
  br i1 %null_check475, label %bail_out, label %check_active474, !dbg !30

check_active474:                                  ; preds = %ip538
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %stack, align 8, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute472, %"struct.rubinius::Object"** %24, align 8, !dbg !30
  br label %ip550, !dbg !30

ip550:                                            ; preds = %ip549, %check_active474
  %self481 = load %"struct.rubinius::Object"** %15, align 8, !dbg !31
  store %"struct.rubinius::Object"* %self481, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %40 = getelementptr %"struct.rubinius::Object"* %self481, i64 1, i32 0, i32 2, !dbg !31
  %field487 = load %"struct.rubinius::Object"** %40, align 8, !dbg !31
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !31
  %local490 = load %"struct.rubinius::Object"** %23, align 8, !dbg !31, !rbx-classid !17
  store %"struct.rubinius::Object"* %local490, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !31
  %cast503 = ptrtoint %"struct.rubinius::Object"* %field487 to i64, !dbg !31
  %cast504 = ptrtoint %"struct.rubinius::Object"* %local490 to i64, !dbg !31
  %fixnums_anded505 = and i64 %cast504, 1, !dbg !31
  %masked506 = and i64 %fixnums_anded505, %cast503, !dbg !31
  %is_fixnum507 = icmp eq i64 %masked506, 0, !dbg !31
  br i1 %is_fixnum507, label %class_fallback492, label %push_add499, !dbg !31

class_fallback492:                                ; preds = %ip550
  store %"struct.rubinius::Object"* %field487, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 1, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const522 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568472 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos523 = getelementptr %"struct.rubinius::CallSite"* %cache_const522, i64 0, i32 2, !dbg !31
  %execute524 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos523, align 8, !dbg !31
  store i32 556, i32* %9, align 4, !dbg !31
  %call_site_execute525 = call %"struct.rubinius::Object"* %execute524(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const522, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check527 = icmp eq %"struct.rubinius::Object"* %call_site_execute525, null, !dbg !31
  br i1 %null_check527, label %bail_out, label %continue494, !dbg !31

continue494:                                      ; preds = %class_fallback492, %bignum501, %tagnow500
  %stack_load544 = phi %"struct.rubinius::Object"* [ %big_value514, %bignum501 ], [ %as_obj517, %tagnow500 ], [ %call_site_execute525, %class_fallback492 ], !dbg !31
  store %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !31
  %local531 = load %"struct.rubinius::Object"** %24, align 8, !dbg !31, !rbx-classid !29
  store %"struct.rubinius::Object"* %local531, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !31
  %stack_load537 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  %cast538 = ptrtoint %"struct.rubinius::Object"* %stack_load537 to i64, !dbg !31
  %masked539 = and i64 %cast538, 3, !dbg !31
  %is_reference = icmp eq i64 %masked539, 0, !dbg !31
  br i1 %is_reference, label %check_class_id, label %class_fallback533, !dbg !31

push_add499:                                      ; preds = %ip550
  %ashr509 = ashr i64 %cast503, 1, !dbg !31
  %ashr511 = ashr i64 %cast504, 1, !dbg !31
  %fixnum.add512 = add i64 %ashr509, %ashr511, !dbg !31
  %fixnum.add512.off = add i64 %fixnum.add512, 4611686018427387903, !dbg !31
  %41 = icmp ult i64 %fixnum.add512.off, 9223372036854775807, !dbg !31
  br i1 %41, label %tagnow500, label %bignum501, !dbg !31

tagnow500:                                        ; preds = %push_add499
  %shl515 = shl i64 %fixnum.add512, 1, !dbg !31
  %or516 = or i64 %shl515, 1, !dbg !31
  %as_obj517 = inttoptr i64 %or516 to %"struct.rubinius::Object"*, !dbg !31
  br label %continue494, !dbg !31

bignum501:                                        ; preds = %push_add499
  %big_value514 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add512) #1, !dbg !31
  br label %continue494, !dbg !31

continue535:                                      ; preds = %class_fallback533, %correct_serial
  %send_result560 = phi %"struct.rubinius::Object"* [ %prim_value, %correct_serial ], [ %call_site_execute557, %class_fallback533 ], !dbg !31
  store %"struct.rubinius::Object"* %send_result560, %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  br label %return_pad, !dbg !31

ip549:                                            ; preds = %continue429
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  br label %ip550, !dbg !28

ip74:                                             ; preds = %ip45
  %local566 = load %"struct.rubinius::Object"** %23, align 8, !dbg !32, !rbx-classid !17
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %stack, align 8, !dbg !32
  %self569 = load %"struct.rubinius::Object"** %15, align 8, !dbg !32
  %field_pos5711682 = getelementptr %"struct.rubinius::Object"* %self569, i64 1, !dbg !32
  %field_pos571 = bitcast %"struct.rubinius::Object"* %field_pos5711682 to %"struct.rubinius::Object"**, !dbg !32
  %field572 = load %"struct.rubinius::Object"** %field_pos571, align 8, !dbg !32
  store %"struct.rubinius::Object"* %field572, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !32
  %cast579 = ptrtoint %"struct.rubinius::Object"* %local566 to i64, !dbg !32
  %cast582 = ptrtoint %"struct.rubinius::Object"* %field572 to i64, !dbg !32
  %fixnums_anded583 = and i64 %cast582, 1
  %masked584 = and i64 %fixnums_anded583, %cast579
  %is_fixnum585 = icmp eq i64 %masked584, 0, !dbg !32
  br i1 %is_fixnum585, label %class_fallback574, label %push_le586, !dbg !32

check_class_id:                                   ; preds = %continue494
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load537, i64 0, i32 0, i32 1, !dbg !31
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !31
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !31
  %class_id = load i32* %class_id_pos, align 4, !dbg !31
  %check_class_id540 = icmp eq i32 %class_id, 6, !dbg !31
  br i1 %check_class_id540, label %correct_class, label %class_fallback533, !dbg !31

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !31
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !31
  %check_serial_id = icmp eq i32 %serial_id, 243, !dbg !31
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback534, !dbg !31

class_fallback533:                                ; preds = %correct_serial.class_fallback533_crit_edge, %check_class_id, %continue494
  %stack_load552 = phi %"struct.rubinius::Object"* [ %stack_load552.pre, %correct_serial.class_fallback533_crit_edge ], [ %stack_load537, %check_class_id ], [ %stack_load537, %continue494 ]
  store %"struct.rubinius::Object"* %stack_load552, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !31
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !31
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !31
  store i32 2, i32* %out_args_total, align 8, !dbg !31
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !31
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !31
  %cache_const554 = load %"struct.rubinius::CallSite"** inttoptr (i64 24568520 to %"struct.rubinius::CallSite"**), align 8, !dbg !31
  %execute_pos555 = getelementptr %"struct.rubinius::CallSite"* %cache_const554, i64 0, i32 2, !dbg !31
  %execute556 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos555, align 8, !dbg !31
  store i32 562, i32* %9, align 4, !dbg !31
  %call_site_execute557 = call %"struct.rubinius::Object"* %execute556(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const554, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !31
  %null_check559 = icmp eq %"struct.rubinius::Object"* %call_site_execute557, null, !dbg !31
  br i1 %null_check559, label %bail_out, label %continue535, !dbg !31

correct_serial:                                   ; preds = %correct_class
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_new_range(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_load537, %"struct.rubinius::Object"* %stack_load544, %"struct.rubinius::Object"* %local531) #1, !dbg !31
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !31
  switch i64 %magicptr, label %continue535 [
    i64 34, label %correct_serial.class_fallback533_crit_edge
    i64 0, label %bail_out
  ], !dbg !31

correct_serial.class_fallback533_crit_edge:       ; preds = %correct_serial
  %stack_load552.pre = load %"struct.rubinius::Object"** %stack, align 8, !dbg !31
  br label %class_fallback533, !dbg !31

serial_fallback534:                               ; preds = %correct_class
  store i32 562, i32* %9, align 4, !dbg !31
  %42 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 562, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 0, i8 1), !dbg !31
  br label %return_pad, !dbg !31

class_fallback574:                                ; preds = %ip74
  store %"struct.rubinius::Object"* %local566, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !32
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !32
  store i32 1, i32* %out_args_total, align 8, !dbg !32
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !32
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !32
  %cache_const591 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564648 to %"struct.rubinius::CallSite"**), align 8, !dbg !32
  %execute_pos592 = getelementptr %"struct.rubinius::CallSite"* %cache_const591, i64 0, i32 2, !dbg !32
  %execute593 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos592, align 8, !dbg !32
  store i32 78, i32* %9, align 4, !dbg !32
  %call_site_execute594 = call %"struct.rubinius::Object"* %execute593(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const591, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !32
  %null_check596 = icmp eq %"struct.rubinius::Object"* %call_site_execute594, null, !dbg !32
  br i1 %null_check596, label %bail_out, label %continue576, !dbg !32

continue576:                                      ; preds = %class_fallback574, %push_le586
  %send_result597 = phi %"struct.rubinius::Object"* [ %43, %push_le586 ], [ %call_site_execute594, %class_fallback574 ], !dbg !32
  %as_int601 = ptrtoint %"struct.rubinius::Object"* %send_result597 to i64, !dbg !32
  %and602 = and i64 %as_int601, 15, !dbg !32
  %is_true603 = icmp eq i64 %and602, 10, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !32
  br i1 %is_true603, label %ip87, label %return_pad, !dbg !32

push_le586:                                       ; preds = %ip74
  %fixnum.ge587 = icmp sge %"struct.rubinius::Object"* %local566, %field572, !dbg !32
  %43 = select i1 %fixnum.ge587, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !32
  br label %continue576, !dbg !32

ip87:                                             ; preds = %continue576
  %44 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !33
  %stack_pos610 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 21, !dbg !33
  store %"struct.rubinius::Object"* %44, %"struct.rubinius::Object"** %stack_pos610, align 8, !dbg !33
  %self614 = load %"struct.rubinius::Object"** %15, align 8, !dbg !34
  %field_pos616 = getelementptr %"struct.rubinius::Object"* %self614, i64 1, i32 0, i32 1, !dbg !34
  %45 = load %"struct.rubinius::Class"** %field_pos616, align 8, !dbg !34
  %field617 = getelementptr inbounds %"struct.rubinius::Class"* %45, i64 0, i32 0, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %field617, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  %46 = getelementptr %"struct.rubinius::Object"* %self614, i64 1, i32 0, i32 2, !dbg !34
  %field623 = load %"struct.rubinius::Object"** %46, align 8, !dbg !34
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !34
  %local626 = load %"struct.rubinius::Object"** %23, align 8, !dbg !34, !rbx-classid !17
  store %"struct.rubinius::Object"* %local626, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !34
  %cast639 = ptrtoint %"struct.rubinius::Object"* %field623 to i64, !dbg !34
  %cast640 = ptrtoint %"struct.rubinius::Object"* %local626 to i64, !dbg !34
  %fixnums_anded641 = and i64 %cast640, 1, !dbg !34
  %masked642 = and i64 %fixnums_anded641, %cast639, !dbg !34
  %is_fixnum643 = icmp eq i64 %masked642, 0, !dbg !34
  br i1 %is_fixnum643, label %class_fallback628, label %push_add635, !dbg !34

is_exception:                                     ; preds = %class_fallback628
  %rae = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !33
  br i1 %rae, label %ip112, label %bail_out, !dbg !33

class_fallback628:                                ; preds = %ip87
  store %"struct.rubinius::Object"* %field623, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !34
  store i32 1, i32* %out_args_total, align 8, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !34
  %cache_const658 = load %"struct.rubinius::CallSite"** inttoptr (i64 24564840 to %"struct.rubinius::CallSite"**), align 8, !dbg !34
  %execute_pos659 = getelementptr %"struct.rubinius::CallSite"* %cache_const658, i64 0, i32 2, !dbg !34
  %execute660 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos659, align 8, !dbg !34
  store i32 102, i32* %9, align 4, !dbg !34
  %call_site_execute661 = call %"struct.rubinius::Object"* %execute660(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const658, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check663 = icmp eq %"struct.rubinius::Object"* %call_site_execute661, null, !dbg !34
  br i1 %null_check663, label %is_exception, label %continue630, !dbg !34

continue630:                                      ; preds = %class_fallback628, %bignum637, %tagnow636
  %send_result664 = phi %"struct.rubinius::Object"* [ %big_value650, %bignum637 ], [ %as_obj653, %tagnow636 ], [ %call_site_execute661, %class_fallback628 ], !dbg !34
  store %"struct.rubinius::Object"* %send_result664, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !34
  %stack_load670 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  %word_pos = getelementptr %"struct.rubinius::Object"* %stack_load670, i64 0, i32 0, i32 0, i32 0, !dbg !34
  %flags = load i64* %word_pos, align 8, !dbg !34
  %mask = and i64 %flags, 255, !dbg !34
  %is_type = icmp eq i64 %mask, 73, !dbg !34
  br i1 %is_type, label %is_tuple, label %class_fallback666, !dbg !34

push_add635:                                      ; preds = %ip87
  %ashr645 = ashr i64 %cast639, 1, !dbg !34
  %ashr647 = ashr i64 %cast640, 1, !dbg !34
  %fixnum.add648 = add i64 %ashr645, %ashr647, !dbg !34
  %fixnum.add648.off = add i64 %fixnum.add648, 4611686018427387903, !dbg !34
  %47 = icmp ult i64 %fixnum.add648.off, 9223372036854775807, !dbg !34
  br i1 %47, label %tagnow636, label %bignum637, !dbg !34

tagnow636:                                        ; preds = %push_add635
  %shl651 = shl i64 %fixnum.add648, 1, !dbg !34
  %or652 = or i64 %shl651, 1, !dbg !34
  %as_obj653 = inttoptr i64 %or652 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue630, !dbg !34

bignum637:                                        ; preds = %push_add635
  %big_value650 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add648) #1, !dbg !34
  br label %continue630, !dbg !34

class_fallback666:                                ; preds = %is_tuple, %continue630
  store i32 105, i32* %9, align 4, !dbg !34
  call void @rbx_setup_unwind(%"struct.rubinius::State"* %state, i32 0, i32 112, i32 -1, i32 0), !dbg !34
  %48 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080973552 to i8*), i32 1, i8 0), !dbg !34
  br label %return_pad, !dbg !34

ip112:                                            ; preds = %is_exception
  %49 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %49, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %stack_pos684 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 20, !dbg !22
  store %"struct.rubinius::Object"* %49, %"struct.rubinius::Object"** %stack_pos684, align 8, !dbg !22
  %ce = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  %constant_cache692 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564968 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !35
  %constant_cache_pos693 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 4, !dbg !35
  %constant_scope694 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos693, align 8, !dbg !35
  %50 = load %"struct.rubinius::Object"** %6, align 8, !dbg !35
  %frame_scope696 = bitcast %"struct.rubinius::Object"* %50 to %"struct.rubinius::ConstantScope"*, !dbg !35
  %same_scope697 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope694, %frame_scope696, !dbg !35
  br i1 %same_scope697, label %check_serial698, label %use_call700, !dbg !35

is_tuple:                                         ; preds = %continue630
  %cast673 = ptrtoint %"struct.rubinius::Object"* %send_result664 to i64, !dbg !34
  %masked674 = and i64 %cast673, -9223372036854775807, !dbg !34
  %is_fixnum675 = icmp eq i64 %masked674, 1, !dbg !34
  %ashr677 = ashr i64 %cast673, 1, !dbg !34
  %51 = getelementptr inbounds %"struct.rubinius::Object"* %stack_load670, i64 1, i32 0, i32 0, i32 0, !dbg !34
  %table_size = load i64* %51, align 8, !dbg !34
  %52 = add i64 %table_size, -32, !dbg !34
  %53 = sdiv i64 %52, 8, !dbg !34
  %is_in_bounds = icmp slt i64 %ashr677, %53, !dbg !34
  %access_cmp = and i1 %is_fixnum675, %is_in_bounds, !dbg !34
  br i1 %access_cmp, label %tuple_at, label %class_fallback666, !dbg !34

tuple_at:                                         ; preds = %is_tuple
  %upcast = bitcast %"struct.rubinius::Object"* %stack_load670 to %"struct.rubinius::Tuple"*, !dbg !34
  %field_pos678 = getelementptr %"struct.rubinius::Tuple"* %upcast, i64 0, i32 2, i64 %ashr677, !dbg !34
  %tuple_at679 = load %"struct.rubinius::Object"** %field_pos678, align 8, !dbg !34
  store %"struct.rubinius::Object"* %tuple_at679, %"struct.rubinius::Object"** %stack, align 8, !dbg !34
  br label %return_pad, !dbg !34

check_serial698:                                  ; preds = %ip112
  %global_serial691 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !35
  %serial_pos702 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 7, !dbg !35
  %serial703 = load i32* %serial_pos702, align 4, !dbg !35
  %use_cache704 = icmp eq i32 %global_serial691, %serial703, !dbg !35
  br i1 %use_cache704, label %use_cache699, label %use_call700, !dbg !35

use_cache699:                                     ; preds = %check_serial698
  %value_pos705 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache692, i64 0, i32 2, !dbg !35
  %cached_value706 = load %"struct.rubinius::Object"** %value_pos705, align 8, !dbg !35
  br label %continue701, !dbg !35

use_call700:                                      ; preds = %check_serial698, %ip112
  store i32 118, i32* %9, align 4, !dbg !35
  %push_const_fast707 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564968 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !35
  %null_check710 = icmp eq %"struct.rubinius::Object"* %push_const_fast707, null, !dbg !35
  br i1 %null_check710, label %bail_out, label %continue701, !dbg !35

continue701:                                      ; preds = %use_call700, %use_cache699
  %constant711 = phi %"struct.rubinius::Object"* [ %cached_value706, %use_cache699 ], [ %push_const_fast707, %use_call700 ], !dbg !35, !rbx-classid !36
  store %"struct.rubinius::Object"* %constant711, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !35
  %constant_cache716 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24564984 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !35
  %constant_cache_pos717 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 4, !dbg !35
  %constant_scope718 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos717, align 8, !dbg !35
  %same_scope721 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope718, %frame_scope696, !dbg !35
  br i1 %same_scope721, label %check_serial722, label %use_call724, !dbg !35

check_serial722:                                  ; preds = %continue701
  %global_serial715 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !35
  %serial_pos726 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 7, !dbg !35
  %serial727 = load i32* %serial_pos726, align 4, !dbg !35
  %use_under = icmp eq i32 %global_serial715, %serial727, !dbg !35
  br i1 %use_under, label %check_under, label %use_call724, !dbg !35

check_under:                                      ; preds = %check_serial722
  %value_pos728 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 3, !dbg !35
  %cached_under = load %"struct.rubinius::Module"** %value_pos728, align 8, !dbg !35
  %downcast = getelementptr inbounds %"struct.rubinius::Module"* %cached_under, i64 0, i32 0, !dbg !35
  %use_cache729 = icmp eq %"struct.rubinius::Object"* %downcast, %constant711, !dbg !35
  br i1 %use_cache729, label %use_cache723, label %use_call724, !dbg !35

use_cache723:                                     ; preds = %check_under
  %value_pos730 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache716, i64 0, i32 2, !dbg !35
  %cached_value731 = load %"struct.rubinius::Object"** %value_pos730, align 8, !dbg !35
  br label %continue725, !dbg !35

use_call724:                                      ; preds = %check_under, %check_serial722, %continue701
  store i32 120, i32* %9, align 4, !dbg !35
  %constant732 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24564984 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant711) #0, !dbg !35
  %null_check735 = icmp eq %"struct.rubinius::Object"* %constant732, null, !dbg !35
  br i1 %null_check735, label %bail_out, label %continue725, !dbg !35

continue725:                                      ; preds = %use_call724, %use_cache723
  %constant736 = phi %"struct.rubinius::Object"* [ %cached_value731, %use_cache723 ], [ %constant732, %use_call724 ], !dbg !35, !rbx-classid !37
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  store %"struct.rubinius::Object"* %ce, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !35
  store %"struct.rubinius::Object"* %constant736, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !35
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !35
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !35
  store i32 1, i32* %out_args_total, align 8, !dbg !35
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !35
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !35
  %cache_const747 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565008 to %"struct.rubinius::CallSite"**), align 16, !dbg !35
  %execute_pos748 = getelementptr %"struct.rubinius::CallSite"* %cache_const747, i64 0, i32 2, !dbg !35
  %execute749 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos748, align 8, !dbg !35
  store i32 123, i32* %9, align 4, !dbg !35
  %call_site_execute750 = call %"struct.rubinius::Object"* %execute749(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const747, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !35
  %null_check753 = icmp eq %"struct.rubinius::Object"* %call_site_execute750, null, !dbg !35
  br i1 %null_check753, label %bail_out, label %check_active752, !dbg !35

check_active752:                                  ; preds = %continue725
  store %"struct.rubinius::Object"* %call_site_execute750, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !35
  %as_int757 = ptrtoint %"struct.rubinius::Object"* %call_site_execute750 to i64, !dbg !35
  %and758 = and i64 %as_int757, 15, !dbg !35
  %is_true759 = icmp eq i64 %and758, 10, !dbg !35
  br i1 %is_true759, label %ip139, label %ip130, !dbg !35

ip139:                                            ; preds = %check_active752
  %stack_local = load %"struct.rubinius::Object"** %stack_pos684, align 8, !dbg !38
  store %"struct.rubinius::Object"* %stack_local, %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %54 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local), !dbg !38
  br label %bail_out, !dbg !38

ip130:                                            ; preds = %check_active752
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %stack_local769 = load %"struct.rubinius::Object"** %stack_pos610, align 8, !dbg !38
  store %"struct.rubinius::Object"* %stack_local769, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !38
  %55 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local769), !dbg !38
  %stack_load774 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !38, !rbx-classid !39
  br label %return_pad, !dbg !38

ip44:                                             ; preds = %continue53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !16
  br label %ip45, !dbg !16

ip149:                                            ; preds = %continue18
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  %constant_cache780 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565224 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !40
  %constant_cache_pos781 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 4, !dbg !40
  %constant_scope782 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos781, align 8, !dbg !40
  %same_scope785 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope782, %frame_scope, !dbg !40
  br i1 %same_scope785, label %check_serial786, label %use_call788, !dbg !40

check_serial786:                                  ; preds = %ip149
  %global_serial779 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !40
  %serial_pos790 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 7, !dbg !40
  %serial791 = load i32* %serial_pos790, align 4, !dbg !40
  %use_cache792 = icmp eq i32 %global_serial779, %serial791, !dbg !40
  br i1 %use_cache792, label %use_cache787, label %use_call788, !dbg !40

use_cache787:                                     ; preds = %check_serial786
  %value_pos793 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache780, i64 0, i32 2, !dbg !40
  %cached_value794 = load %"struct.rubinius::Object"** %value_pos793, align 8, !dbg !40
  br label %continue789, !dbg !40

use_call788:                                      ; preds = %check_serial786, %ip149
  store i32 150, i32* %9, align 4, !dbg !40
  %push_const_fast795 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565224 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !40
  %null_check798 = icmp eq %"struct.rubinius::Object"* %push_const_fast795, null, !dbg !40
  br i1 %null_check798, label %bail_out, label %continue789, !dbg !40

continue789:                                      ; preds = %use_call788, %use_cache787
  %constant799 = phi %"struct.rubinius::Object"* [ %cached_value794, %use_cache787 ], [ %push_const_fast795, %use_call788 ], !dbg !40, !rbx-classid !41
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !40
  store %"struct.rubinius::Object"* %constant799, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 1, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const810 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565248 to %"struct.rubinius::CallSite"**), align 512, !dbg !40
  %execute_pos811 = getelementptr %"struct.rubinius::CallSite"* %cache_const810, i64 0, i32 2, !dbg !40
  %execute812 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos811, align 8, !dbg !40
  store i32 153, i32* %9, align 4, !dbg !40
  %call_site_execute813 = call %"struct.rubinius::Object"* %execute812(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const810, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check816 = icmp eq %"struct.rubinius::Object"* %call_site_execute813, null, !dbg !40
  br i1 %null_check816, label %bail_out, label %check_active815, !dbg !40

check_active815:                                  ; preds = %continue789
  store %"struct.rubinius::Object"* %call_site_execute813, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !40
  %as_int820 = ptrtoint %"struct.rubinius::Object"* %call_site_execute813 to i64, !dbg !40
  %and821 = and i64 %as_int820, 15, !dbg !40
  %is_true822 = icmp eq i64 %and821, 10, !dbg !40
  br i1 %is_true822, label %ip313, label %ip158, !dbg !40

ip158:                                            ; preds = %check_active815
  %system_object824 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), align 32, !dbg !42
  store %"struct.rubinius::Object"* %system_object824, %"struct.rubinius::Object"** %stack, align 8, !dbg !42
  %local827 = load %"struct.rubinius::Object"** %21, align 8, !dbg !42, !rbx-classid !13
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !42
  store %"struct.rubinius::Object"* %local827, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 18798 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !42
  store i32 0, i32* %out_args_total, align 8, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !42
  %cache_const831 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565320 to %"struct.rubinius::CallSite"**), align 8, !dbg !42
  %execute_pos832 = getelementptr %"struct.rubinius::CallSite"* %cache_const831, i64 0, i32 2, !dbg !42
  %execute833 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos832, align 8, !dbg !42
  store i32 162, i32* %9, align 4, !dbg !42
  %call_site_execute834 = call %"struct.rubinius::Object"* %execute833(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const831, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check837 = icmp eq %"struct.rubinius::Object"* %call_site_execute834, null, !dbg !42
  br i1 %null_check837, label %bail_out, label %check_active836, !dbg !42

check_active836:                                  ; preds = %ip158
  store %"struct.rubinius::Object"* %call_site_execute834, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !42
  %constant_cache840 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565344 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !42
  %constant_cache_pos841 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 4, !dbg !42
  %constant_scope842 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos841, align 8, !dbg !42
  %56 = load %"struct.rubinius::Object"** %6, align 8, !dbg !42
  %frame_scope844 = bitcast %"struct.rubinius::Object"* %56 to %"struct.rubinius::ConstantScope"*, !dbg !42
  %same_scope845 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope842, %frame_scope844, !dbg !42
  br i1 %same_scope845, label %check_serial846, label %use_call848, !dbg !42

check_serial846:                                  ; preds = %check_active836
  %global_serial839 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !42
  %serial_pos850 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 7, !dbg !42
  %serial851 = load i32* %serial_pos850, align 4, !dbg !42
  %use_cache852 = icmp eq i32 %global_serial839, %serial851, !dbg !42
  br i1 %use_cache852, label %use_cache847, label %use_call848, !dbg !42

use_cache847:                                     ; preds = %check_serial846
  %value_pos853 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache840, i64 0, i32 2, !dbg !42
  %cached_value854 = load %"struct.rubinius::Object"** %value_pos853, align 8, !dbg !42
  br label %continue849, !dbg !42

use_call848:                                      ; preds = %check_serial846, %check_active836
  store i32 165, i32* %9, align 4, !dbg !42
  %push_const_fast855 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565344 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !42
  %null_check858 = icmp eq %"struct.rubinius::Object"* %push_const_fast855, null, !dbg !42
  br i1 %null_check858, label %bail_out, label %continue849, !dbg !42

continue849:                                      ; preds = %use_call848, %use_cache847
  %constant859 = phi %"struct.rubinius::Object"* [ %cached_value854, %use_cache847 ], [ %push_const_fast855, %use_call848 ], !dbg !42, !rbx-classid !43
  store %"struct.rubinius::Object"* %constant859, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !42
  %stack_pos861 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, align 8, !dbg !42
  %stack_load863 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !42
  store %"struct.rubinius::Object"* %stack_load863, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !42
  store i32 3, i32* %out_args_total, align 8, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !42
  %cache_const865 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565376 to %"struct.rubinius::CallSite"**), align 128, !dbg !42
  %execute_pos866 = getelementptr %"struct.rubinius::CallSite"* %cache_const865, i64 0, i32 2, !dbg !42
  %execute867 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos866, align 8, !dbg !42
  store i32 169, i32* %9, align 4, !dbg !42
  %call_site_execute868 = call %"struct.rubinius::Object"* %execute867(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const865, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check871 = icmp eq %"struct.rubinius::Object"* %call_site_execute868, null, !dbg !42
  br i1 %null_check871, label %bail_out, label %check_active870, !dbg !42

check_active870:                                  ; preds = %continue849
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %23, align 8, !dbg !42
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute868, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const883 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565448 to %"struct.rubinius::CallSite"**), align 8, !dbg !44
  %execute_pos884 = getelementptr %"struct.rubinius::CallSite"* %cache_const883, i64 0, i32 2, !dbg !44
  %execute885 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos884, align 8, !dbg !44
  store i32 178, i32* %9, align 4, !dbg !44
  %call_site_execute886 = call %"struct.rubinius::Object"* %execute885(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const883, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check889 = icmp eq %"struct.rubinius::Object"* %call_site_execute886, null, !dbg !44
  br i1 %null_check889, label %bail_out, label %check_active888, !dbg !44

check_active888:                                  ; preds = %check_active870
  store %"struct.rubinius::Object"* %call_site_execute886, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %as_int893 = ptrtoint %"struct.rubinius::Object"* %call_site_execute886 to i64, !dbg !44
  %and894 = and i64 %as_int893, 15, !dbg !44
  %is_true895 = icmp eq i64 %and894, 10, !dbg !44
  br i1 %is_true895, label %ip194, label %ip183, !dbg !44

ip183:                                            ; preds = %check_active888
  %local898 = load %"struct.rubinius::Object"** %23, align 8, !dbg !44, !rbx-classid !17
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %self901 = load %"struct.rubinius::Object"** %15, align 8, !dbg !44
  %field_pos9031683 = getelementptr %"struct.rubinius::Object"* %self901, i64 1, !dbg !44
  %field_pos903 = bitcast %"struct.rubinius::Object"* %field_pos9031683 to %"struct.rubinius::Object"**, !dbg !44
  %field904 = load %"struct.rubinius::Object"** %field_pos903, align 8, !dbg !44
  store %"struct.rubinius::Object"* %field904, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !44
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !44
  store i32 1, i32* %out_args_total, align 8, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !44
  %cache_const909 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565520 to %"struct.rubinius::CallSite"**), align 16, !dbg !44
  %execute_pos910 = getelementptr %"struct.rubinius::CallSite"* %cache_const909, i64 0, i32 2, !dbg !44
  %execute911 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos910, align 8, !dbg !44
  store i32 187, i32* %9, align 4, !dbg !44
  %call_site_execute912 = call %"struct.rubinius::Object"* %execute911(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const909, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check915 = icmp eq %"struct.rubinius::Object"* %call_site_execute912, null, !dbg !44
  br i1 %null_check915, label %bail_out, label %check_active914, !dbg !44

check_active914:                                  ; preds = %ip183
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  store %"struct.rubinius::Object"* %call_site_execute912, %"struct.rubinius::Object"** %23, align 8, !dbg !44
  br label %ip195, !dbg !44

ip195:                                            ; preds = %ip194, %check_active914
  %local922 = phi %"struct.rubinius::Object"* [ %local922.pre, %ip194 ], [ %call_site_execute912, %check_active914 ]
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  store %"struct.rubinius::Object"* %local922, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const928 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565616 to %"struct.rubinius::CallSite"**), align 16, !dbg !45
  %execute_pos929 = getelementptr %"struct.rubinius::CallSite"* %cache_const928, i64 0, i32 2, !dbg !45
  %execute930 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos929, align 8, !dbg !45
  store i32 199, i32* %9, align 4, !dbg !45
  %call_site_execute931 = call %"struct.rubinius::Object"* %execute930(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const928, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check934 = icmp eq %"struct.rubinius::Object"* %call_site_execute931, null, !dbg !45
  br i1 %null_check934, label %bail_out, label %check_active933, !dbg !45

check_active933:                                  ; preds = %ip195
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  store %"struct.rubinius::Object"* %call_site_execute931, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  %as_int941 = ptrtoint %"struct.rubinius::Object"* %call_site_execute931 to i64, !dbg !45
  %and942 = and i64 %as_int941, 15, !dbg !45
  %is_true943 = icmp eq i64 %and942, 10, !dbg !45
  br i1 %is_true943, label %ip205, label %ip213, !dbg !45

ip205:                                            ; preds = %check_active933
  %local946 = load %"struct.rubinius::Object"** %23, align 8, !dbg !45, !rbx-classid !17
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  %self949 = load %"struct.rubinius::Object"** %15, align 8, !dbg !45
  %field_pos9511684 = getelementptr %"struct.rubinius::Object"* %self949, i64 1, !dbg !45
  %field_pos951 = bitcast %"struct.rubinius::Object"* %field_pos9511684 to %"struct.rubinius::Object"**, !dbg !45
  %field952 = load %"struct.rubinius::Object"** %field_pos951, align 8, !dbg !45
  store %"struct.rubinius::Object"* %field952, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !45
  store %"struct.rubinius::Object"* %local946, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !45
  store %"struct.rubinius::Symbol"* inttoptr (i64 1422 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !45
  store i32 1, i32* %out_args_total, align 8, !dbg !45
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !45
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !45
  %cache_const957 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565704 to %"struct.rubinius::CallSite"**), align 8, !dbg !45
  %execute_pos958 = getelementptr %"struct.rubinius::CallSite"* %cache_const957, i64 0, i32 2, !dbg !45
  %execute959 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos958, align 8, !dbg !45
  store i32 210, i32* %9, align 4, !dbg !45
  %call_site_execute960 = call %"struct.rubinius::Object"* %execute959(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const957, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !45
  %null_check963 = icmp eq %"struct.rubinius::Object"* %call_site_execute960, null, !dbg !45
  br i1 %null_check963, label %bail_out, label %check_active962, !dbg !45

ip213:                                            ; preds = %check_active933, %check_active962
  %stack_load966 = phi %"struct.rubinius::Object"* [ %call_site_execute931, %check_active933 ], [ %call_site_execute960, %check_active962 ]
  %as_int967 = ptrtoint %"struct.rubinius::Object"* %stack_load966 to i64, !dbg !45
  %and968 = and i64 %as_int967, 15, !dbg !45
  %is_true969 = icmp eq i64 %and968, 10, !dbg !45
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  br i1 %is_true969, label %ip219, label %return_pad, !dbg !45

check_active962:                                  ; preds = %ip205
  store %"struct.rubinius::Object"* %call_site_execute960, %"struct.rubinius::Object"** %stack, align 8, !dbg !45
  br label %ip213, !dbg !45

ip219:                                            ; preds = %ip213
  %system_object975 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), align 32, !dbg !46
  store %"struct.rubinius::Object"* %system_object975, %"struct.rubinius::Object"** %stack, align 8, !dbg !46
  %local978 = load %"struct.rubinius::Object"** %21, align 8, !dbg !46, !rbx-classid !13
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !46
  store %"struct.rubinius::Object"* %local978, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 18806 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 0, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  %cache_const982 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565816 to %"struct.rubinius::CallSite"**), align 8, !dbg !46
  %execute_pos983 = getelementptr %"struct.rubinius::CallSite"* %cache_const982, i64 0, i32 2, !dbg !46
  %execute984 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos983, align 8, !dbg !46
  store i32 224, i32* %9, align 4, !dbg !46
  %call_site_execute985 = call %"struct.rubinius::Object"* %execute984(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const982, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check988 = icmp eq %"struct.rubinius::Object"* %call_site_execute985, null, !dbg !46
  br i1 %null_check988, label %bail_out, label %check_active987, !dbg !46

check_active987:                                  ; preds = %ip219
  store %"struct.rubinius::Object"* %call_site_execute985, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !46
  %constant_cache991 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24565840 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !46
  %constant_cache_pos992 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 4, !dbg !46
  %constant_scope993 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos992, align 8, !dbg !46
  %57 = load %"struct.rubinius::Object"** %6, align 8, !dbg !46
  %frame_scope995 = bitcast %"struct.rubinius::Object"* %57 to %"struct.rubinius::ConstantScope"*, !dbg !46
  %same_scope996 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope993, %frame_scope995, !dbg !46
  br i1 %same_scope996, label %check_serial997, label %use_call999, !dbg !46

check_serial997:                                  ; preds = %check_active987
  %global_serial990 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !46
  %serial_pos1001 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 7, !dbg !46
  %serial1002 = load i32* %serial_pos1001, align 4, !dbg !46
  %use_cache1003 = icmp eq i32 %global_serial990, %serial1002, !dbg !46
  br i1 %use_cache1003, label %use_cache998, label %use_call999, !dbg !46

use_cache998:                                     ; preds = %check_serial997
  %value_pos1004 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache991, i64 0, i32 2, !dbg !46
  %cached_value1005 = load %"struct.rubinius::Object"** %value_pos1004, align 8, !dbg !46
  br label %continue1000, !dbg !46

use_call999:                                      ; preds = %check_serial997, %check_active987
  store i32 227, i32* %9, align 4, !dbg !46
  %push_const_fast1006 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24565840 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !46
  %null_check1009 = icmp eq %"struct.rubinius::Object"* %push_const_fast1006, null, !dbg !46
  br i1 %null_check1009, label %bail_out, label %continue1000, !dbg !46

continue1000:                                     ; preds = %use_call999, %use_cache998
  %constant1010 = phi %"struct.rubinius::Object"* [ %cached_value1005, %use_cache998 ], [ %push_const_fast1006, %use_call999 ], !dbg !46, !rbx-classid !47
  store %"struct.rubinius::Object"* %constant1010, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos861, align 8, !dbg !46
  %stack_load1014 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !46
  store %"struct.rubinius::Object"* %stack_load1014, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !46
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !46
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !46
  store i32 3, i32* %out_args_total, align 8, !dbg !46
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !46
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !46
  %cache_const1016 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565872 to %"struct.rubinius::CallSite"**), align 16, !dbg !46
  %execute_pos1017 = getelementptr %"struct.rubinius::CallSite"* %cache_const1016, i64 0, i32 2, !dbg !46
  %execute1018 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1017, align 8, !dbg !46
  store i32 231, i32* %9, align 4, !dbg !46
  %call_site_execute1019 = call %"struct.rubinius::Object"* %execute1018(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1016, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !46
  %null_check1022 = icmp eq %"struct.rubinius::Object"* %call_site_execute1019, null, !dbg !46
  br i1 %null_check1022, label %bail_out, label %check_active1021, !dbg !46

check_active1021:                                 ; preds = %continue1000
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %25, align 8, !dbg !46
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute1019, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !48
  store i32 1, i32* %out_args_total, align 8, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !48
  %cache_const1034 = load %"struct.rubinius::CallSite"** inttoptr (i64 24565944 to %"struct.rubinius::CallSite"**), align 8, !dbg !48
  %execute_pos1035 = getelementptr %"struct.rubinius::CallSite"* %cache_const1034, i64 0, i32 2, !dbg !48
  %execute1036 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1035, align 8, !dbg !48
  store i32 240, i32* %9, align 4, !dbg !48
  %call_site_execute1037 = call %"struct.rubinius::Object"* %execute1036(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1034, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check1040 = icmp eq %"struct.rubinius::Object"* %call_site_execute1037, null, !dbg !48
  br i1 %null_check1040, label %bail_out, label %check_active1039, !dbg !48

check_active1039:                                 ; preds = %check_active1021
  store %"struct.rubinius::Object"* %call_site_execute1037, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  %as_int1044 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1037 to i64, !dbg !48
  %and1045 = and i64 %as_int1044, 15, !dbg !48
  %is_true1046 = icmp eq i64 %and1045, 10, !dbg !48
  br i1 %is_true1046, label %ip256, label %ip245, !dbg !48

ip245:                                            ; preds = %check_active1039
  %local1049 = load %"struct.rubinius::Object"** %25, align 8, !dbg !48, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  %self1052 = load %"struct.rubinius::Object"** %15, align 8, !dbg !48
  %field_pos10541685 = getelementptr %"struct.rubinius::Object"* %self1052, i64 1, !dbg !48
  %field_pos1054 = bitcast %"struct.rubinius::Object"* %field_pos10541685 to %"struct.rubinius::Object"**, !dbg !48
  %field1055 = load %"struct.rubinius::Object"** %field_pos1054, align 8, !dbg !48
  store %"struct.rubinius::Object"* %field1055, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !48
  store %"struct.rubinius::Object"* %local1049, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !48
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !48
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !48
  store i32 1, i32* %out_args_total, align 8, !dbg !48
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !48
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !48
  %cache_const1060 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566016 to %"struct.rubinius::CallSite"**), align 256, !dbg !48
  %execute_pos1061 = getelementptr %"struct.rubinius::CallSite"* %cache_const1060, i64 0, i32 2, !dbg !48
  %execute1062 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1061, align 8, !dbg !48
  store i32 249, i32* %9, align 4, !dbg !48
  %call_site_execute1063 = call %"struct.rubinius::Object"* %execute1062(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1060, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !48
  %null_check1066 = icmp eq %"struct.rubinius::Object"* %call_site_execute1063, null, !dbg !48
  br i1 %null_check1066, label %bail_out, label %check_active1065, !dbg !48

check_active1065:                                 ; preds = %ip245
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  store %"struct.rubinius::Object"* %call_site_execute1063, %"struct.rubinius::Object"** %25, align 8, !dbg !48
  br label %ip257, !dbg !48

ip257:                                            ; preds = %ip256, %check_active1065
  %local1073 = load %"struct.rubinius::Object"** %21, align 8, !dbg !50, !rbx-classid !13
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* %local1073, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 18814 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !50
  store i32 0, i32* %out_args_total, align 8, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !50
  %cache_const1077 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566104 to %"struct.rubinius::CallSite"**), align 8, !dbg !50
  %execute_pos1078 = getelementptr %"struct.rubinius::CallSite"* %cache_const1077, i64 0, i32 2, !dbg !50
  %execute1079 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1078, align 8, !dbg !50
  store i32 260, i32* %9, align 4, !dbg !50
  %call_site_execute1080 = call %"struct.rubinius::Object"* %execute1079(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1077, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check1083 = icmp eq %"struct.rubinius::Object"* %call_site_execute1080, null, !dbg !50
  br i1 %null_check1083, label %bail_out, label %check_active1082, !dbg !50

check_active1082:                                 ; preds = %ip257
  store %"struct.rubinius::Object"* %call_site_execute1080, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  %as_int1087 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1080 to i64, !dbg !50
  %and1088 = and i64 %as_int1087, 15, !dbg !50
  %is_true1089 = icmp eq i64 %and1088, 10, !dbg !50
  br i1 %is_true1089, label %ip275, label %ip265, !dbg !50

ip265:                                            ; preds = %check_active1082
  %local1092 = load %"struct.rubinius::Object"** %25, align 8, !dbg !50, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !50
  store %"struct.rubinius::Object"* %local1092, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !50
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !50
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !50
  store i32 1, i32* %out_args_total, align 8, !dbg !50
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !50
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !50
  %cache_const1098 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566168 to %"struct.rubinius::CallSite"**), align 8, !dbg !50
  %execute_pos1099 = getelementptr %"struct.rubinius::CallSite"* %cache_const1098, i64 0, i32 2, !dbg !50
  %execute1100 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1099, align 8, !dbg !50
  store i32 268, i32* %9, align 4, !dbg !50
  %call_site_execute1101 = call %"struct.rubinius::Object"* %execute1100(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1098, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !50
  %null_check1104 = icmp eq %"struct.rubinius::Object"* %call_site_execute1101, null, !dbg !50
  br i1 %null_check1104, label %bail_out, label %check_active1103, !dbg !50

check_active1103:                                 ; preds = %ip265
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  store %"struct.rubinius::Object"* %call_site_execute1101, %"struct.rubinius::Object"** %25, align 8, !dbg !50
  br label %ip276, !dbg !50

ip276:                                            ; preds = %ip275, %check_active1103
  %local1111 = phi %"struct.rubinius::Object"* [ %local1111.pre, %ip275 ], [ %call_site_execute1101, %check_active1103 ]
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  %local1114 = load %"struct.rubinius::Object"** %23, align 8, !dbg !51, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1114, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !51
  store %"struct.rubinius::Object"* %local1111, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !51
  store i32 1, i32* %out_args_total, align 8, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !51
  %cache_const1119 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566272 to %"struct.rubinius::CallSite"**), align 512, !dbg !51
  %execute_pos1120 = getelementptr %"struct.rubinius::CallSite"* %cache_const1119, i64 0, i32 2, !dbg !51
  %execute1121 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1120, align 8, !dbg !51
  store i32 281, i32* %9, align 4, !dbg !51
  %call_site_execute1122 = call %"struct.rubinius::Object"* %execute1121(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1119, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1125 = icmp eq %"struct.rubinius::Object"* %call_site_execute1122, null, !dbg !51
  br i1 %null_check1125, label %bail_out, label %check_active1124, !dbg !51

check_active1124:                                 ; preds = %ip276
  store %"struct.rubinius::Object"* %call_site_execute1122, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  %as_int1129 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1122 to i64, !dbg !51
  %and1130 = and i64 %as_int1129, 15, !dbg !51
  %is_true1131 = icmp eq i64 %and1130, 10, !dbg !51
  br i1 %is_true1131, label %ip296, label %ip286, !dbg !51

ip286:                                            ; preds = %check_active1124
  %self1133 = load %"struct.rubinius::Object"** %15, align 8, !dbg !51
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !51
  store %"struct.rubinius::Object"* %self1133, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !51
  store %"struct.rubinius::Symbol"* inttoptr (i64 15270 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !51
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !51
  store i32 2, i32* %out_args_total, align 8, !dbg !51
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !51
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !51
  %cache_const1140 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566344 to %"struct.rubinius::CallSite"**), align 8, !dbg !51
  %execute_pos1141 = getelementptr %"struct.rubinius::CallSite"* %cache_const1140, i64 0, i32 2, !dbg !51
  %execute1142 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1141, align 8, !dbg !51
  store i32 290, i32* %9, align 4, !dbg !51
  %call_site_execute1143 = call %"struct.rubinius::Object"* %execute1142(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1140, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !51
  %null_check1146 = icmp eq %"struct.rubinius::Object"* %call_site_execute1143, null, !dbg !51
  br i1 %null_check1146, label %bail_out, label %check_active1145, !dbg !51

ip296:                                            ; preds = %check_active1124
  %local1152 = load %"struct.rubinius::Object"** %25, align 8, !dbg !52, !rbx-classid !49
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  %local1155 = load %"struct.rubinius::Object"** %23, align 8, !dbg !52, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1155, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !52
  store %"struct.rubinius::Object"* %local1152, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 1382 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1160 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566440 to %"struct.rubinius::CallSite"**), align 8, !dbg !52
  %execute_pos1161 = getelementptr %"struct.rubinius::CallSite"* %cache_const1160, i64 0, i32 2, !dbg !52
  %execute1162 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1161, align 8, !dbg !52
  store i32 302, i32* %9, align 4, !dbg !52
  %call_site_execute1163 = call %"struct.rubinius::Object"* %execute1162(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1160, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1166 = icmp eq %"struct.rubinius::Object"* %call_site_execute1163, null, !dbg !52
  br i1 %null_check1166, label %bail_out, label %check_active1165, !dbg !52

check_active1145:                                 ; preds = %ip286
  store %"struct.rubinius::Object"* %call_site_execute1143, %"struct.rubinius::Object"** %stack, align 8, !dbg !51
  br label %return_pad, !dbg !51

check_active1165:                                 ; preds = %ip296
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !52
  store %"struct.rubinius::Object"* %call_site_execute1163, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !52
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !52
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !52
  store i32 1, i32* %out_args_total, align 8, !dbg !52
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !52
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !52
  %cache_const1172 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566472 to %"struct.rubinius::CallSite"**), align 8, !dbg !52
  %execute_pos1173 = getelementptr %"struct.rubinius::CallSite"* %cache_const1172, i64 0, i32 2, !dbg !52
  %execute1174 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1173, align 8, !dbg !52
  store i32 306, i32* %9, align 4, !dbg !52
  %call_site_execute1175 = call %"struct.rubinius::Object"* %execute1174(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1172, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !52
  %null_check1178 = icmp eq %"struct.rubinius::Object"* %call_site_execute1175, null, !dbg !52
  br i1 %null_check1178, label %bail_out, label %check_active1177, !dbg !52

check_active1177:                                 ; preds = %check_active1165
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %stack, align 8, !dbg !52
  store %"struct.rubinius::Object"* %call_site_execute1175, %"struct.rubinius::Object"** %24, align 8, !dbg !52
  br label %ip459, !dbg !52

ip275:                                            ; preds = %check_active1082
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !50
  %local1111.pre = load %"struct.rubinius::Object"** %25, align 8, !dbg !51
  br label %ip276, !dbg !50

ip256:                                            ; preds = %check_active1039
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !48
  br label %ip257, !dbg !48

ip194:                                            ; preds = %check_active888
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !44
  %local922.pre = load %"struct.rubinius::Object"** %23, align 8, !dbg !45
  br label %ip195, !dbg !44

ip313:                                            ; preds = %check_active815
  %local1188 = load %"struct.rubinius::Object"** %21, align 8, !dbg !53, !rbx-classid !13
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %constant_cache1194 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566560 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !53
  %constant_cache_pos1195 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 4, !dbg !53
  %constant_scope1196 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1195, align 8, !dbg !53
  %58 = load %"struct.rubinius::Object"** %6, align 8, !dbg !53
  %frame_scope1198 = bitcast %"struct.rubinius::Object"* %58 to %"struct.rubinius::ConstantScope"*, !dbg !53
  %same_scope1199 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1196, %frame_scope1198, !dbg !53
  br i1 %same_scope1199, label %check_serial1200, label %use_call1202, !dbg !53

check_serial1200:                                 ; preds = %ip313
  %global_serial1193 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !53
  %serial_pos1204 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 7, !dbg !53
  %serial1205 = load i32* %serial_pos1204, align 4, !dbg !53
  %use_cache1206 = icmp eq i32 %global_serial1193, %serial1205, !dbg !53
  br i1 %use_cache1206, label %use_cache1201, label %use_call1202, !dbg !53

use_cache1201:                                    ; preds = %check_serial1200
  %value_pos1207 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1194, i64 0, i32 2, !dbg !53
  %cached_value1208 = load %"struct.rubinius::Object"** %value_pos1207, align 8, !dbg !53
  br label %continue1203, !dbg !53

use_call1202:                                     ; preds = %check_serial1200, %ip313
  store i32 317, i32* %9, align 4, !dbg !53
  %push_const_fast1209 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566560 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !53
  %null_check1212 = icmp eq %"struct.rubinius::Object"* %push_const_fast1209, null, !dbg !53
  br i1 %null_check1212, label %bail_out, label %continue1203, !dbg !53

continue1203:                                     ; preds = %use_call1202, %use_cache1201
  %constant1213 = phi %"struct.rubinius::Object"* [ %cached_value1208, %use_cache1201 ], [ %push_const_fast1209, %use_call1202 ], !dbg !53, !rbx-classid !54
  store %"struct.rubinius::Object"* %constant1213, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !53
  %cast1229 = ptrtoint %"struct.rubinius::Object"* %local1188 to i64, !dbg !53
  %masked1230 = and i64 %cast1229, 3, !dbg !53
  %is_reference1231 = icmp eq i64 %masked1230, 0, !dbg !53
  br i1 %is_reference1231, label %reference_block, label %class_verified_block, !dbg !53

continue1225:                                     ; preds = %is_fixnum_block, %is_fixnum_block, %reference_block, %is_symbol_block, %is_nil_block, %is_true_block, %is_false_block, %use_call1226
  %constant1256 = phi %"struct.rubinius::Object"* [ %kind_of1255, %use_call1226 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block ], !dbg !53
  store %"struct.rubinius::Object"* %constant1256, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %as_int1260 = ptrtoint %"struct.rubinius::Object"* %constant1256 to i64, !dbg !53
  %and1261 = and i64 %as_int1260, 15, !dbg !53
  %is_true1262 = icmp eq i64 %and1261, 10, !dbg !53
  br i1 %is_true1262, label %ip323, label %ip334, !dbg !53

use_call1226:                                     ; preds = %check_nil_block, %is_fixnum_block, %is_false_block, %is_true_block, %is_nil_block, %is_symbol_block, %class_verified_block, %reference_block
  %kind_of1255 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"* %constant1213) #0, !dbg !53
  br label %continue1225, !dbg !53

class_verified_block:                             ; preds = %continue1203
  %word_pos1235 = getelementptr %"struct.rubinius::Object"* %constant1213, i64 0, i32 0, i32 0, i32 0, !dbg !53
  %flags1236 = load i64* %word_pos1235, align 8, !dbg !53
  %mask1237 = and i64 %flags1236, 255, !dbg !53
  %is_type1238 = icmp eq i64 %mask1237, 20, !dbg !53
  br i1 %is_type1238, label %check_symbol_block, label %use_call1226, !dbg !53

reference_block:                                  ; preds = %continue1203
  %class_pos1232 = getelementptr %"struct.rubinius::Object"* %local1188, i64 0, i32 0, i32 1, !dbg !53
  %ref_class1233 = load %"struct.rubinius::Class"** %class_pos1232, align 8, !dbg !53
  %downcast1234 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1233, i64 0, i32 0, i32 0, !dbg !53
  %check_class = icmp eq %"struct.rubinius::Object"* %downcast1234, %constant1213, !dbg !53
  br i1 %check_class, label %continue1225, label %use_call1226, !dbg !53

check_symbol_block:                               ; preds = %class_verified_block
  %class_id_pos1240 = getelementptr %"struct.rubinius::Object"* %constant1213, i64 4, i32 0, i32 2, !dbg !53
  %59 = bitcast %"struct.rubinius::Object"** %class_id_pos1240 to i32*, !dbg !53
  %class_id1241 = load i32* %59, align 4, !dbg !53
  %masked1243 = and i64 %cast1229, 7, !dbg !53
  %is_symbol = icmp eq i64 %masked1243, 6, !dbg !53
  br i1 %is_symbol, label %is_symbol_block, label %check_fixnum_block, !dbg !53

is_symbol_block:                                  ; preds = %check_symbol_block
  %check_class_id1244 = icmp eq i32 %class_id1241, 39, !dbg !53
  br i1 %check_class_id1244, label %continue1225, label %use_call1226, !dbg !53

check_fixnum_block:                               ; preds = %check_symbol_block
  %masked1246 = and i64 %cast1229, 1, !dbg !53
  %is_fixnum1247 = icmp eq i64 %masked1246, 0, !dbg !53
  br i1 %is_fixnum1247, label %check_nil_block, label %is_fixnum_block, !dbg !53

is_fixnum_block:                                  ; preds = %check_fixnum_block
  switch i32 %class_id1241, label %use_call1226 [
    i32 37, label %continue1225
    i32 35, label %continue1225
  ], !dbg !53

check_nil_block:                                  ; preds = %check_fixnum_block
  switch i64 %cast1229, label %use_call1226 [
    i64 26, label %is_nil_block
    i64 18, label %is_true_block
    i64 10, label %is_false_block
  ], !dbg !53

is_nil_block:                                     ; preds = %check_nil_block
  %check_class_id1250 = icmp eq i32 %class_id1241, 27, !dbg !53
  br i1 %check_class_id1250, label %continue1225, label %use_call1226, !dbg !53

is_true_block:                                    ; preds = %check_nil_block
  %check_class_id1252 = icmp eq i32 %class_id1241, 29, !dbg !53
  br i1 %check_class_id1252, label %continue1225, label %use_call1226, !dbg !53

is_false_block:                                   ; preds = %check_nil_block
  %check_class_id1254 = icmp eq i32 %class_id1241, 31, !dbg !53
  br i1 %check_class_id1254, label %continue1225, label %use_call1226, !dbg !53

ip323:                                            ; preds = %continue1225
  %system_object1264 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), align 32, !dbg !53
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  store %"struct.rubinius::Object"* %local1188, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !53
  %constant_cache1270 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566640 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !53
  %constant_cache_pos1271 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 4, !dbg !53
  %constant_scope1272 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1271, align 8, !dbg !53
  %same_scope1275 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1272, %frame_scope1198, !dbg !53
  br i1 %same_scope1275, label %check_serial1276, label %use_call1278, !dbg !53

check_serial1276:                                 ; preds = %ip323
  %global_serial1269 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !53
  %serial_pos1280 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 7, !dbg !53
  %serial1281 = load i32* %serial_pos1280, align 4, !dbg !53
  %use_cache1282 = icmp eq i32 %global_serial1269, %serial1281, !dbg !53
  br i1 %use_cache1282, label %use_cache1277, label %use_call1278, !dbg !53

use_cache1277:                                    ; preds = %check_serial1276
  %value_pos1283 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1270, i64 0, i32 2, !dbg !53
  %cached_value1284 = load %"struct.rubinius::Object"** %value_pos1283, align 8, !dbg !53
  br label %continue1279, !dbg !53

use_call1278:                                     ; preds = %check_serial1276, %ip323
  store i32 327, i32* %9, align 4, !dbg !53
  %push_const_fast1285 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566640 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !53
  %null_check1288 = icmp eq %"struct.rubinius::Object"* %push_const_fast1285, null, !dbg !53
  br i1 %null_check1288, label %bail_out, label %continue1279, !dbg !53

continue1279:                                     ; preds = %use_call1278, %use_cache1277
  %constant1289 = phi %"struct.rubinius::Object"* [ %cached_value1284, %use_cache1277 ], [ %push_const_fast1285, %use_call1278 ], !dbg !53, !rbx-classid !55
  store %"struct.rubinius::Object"* %constant1289, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !53
  %stack_pos1291 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1291, align 8, !dbg !53
  store %"struct.rubinius::Object"* %system_object1264, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !53
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !53
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !53
  store i32 3, i32* %out_args_total, align 8, !dbg !53
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !53
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !53
  %cache_const1295 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566672 to %"struct.rubinius::CallSite"**), align 16, !dbg !53
  %execute_pos1296 = getelementptr %"struct.rubinius::CallSite"* %cache_const1295, i64 0, i32 2, !dbg !53
  %execute1297 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1296, align 8, !dbg !53
  store i32 331, i32* %9, align 4, !dbg !53
  %call_site_execute1298 = call %"struct.rubinius::Object"* %execute1297(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1295, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !53
  %null_check1301 = icmp eq %"struct.rubinius::Object"* %call_site_execute1298, null, !dbg !53
  br i1 %null_check1301, label %bail_out, label %check_active1300, !dbg !53

ip334:                                            ; preds = %continue1225, %check_active1300
  %stack_load1305 = phi %"struct.rubinius::Object"* [ %local1188, %continue1225 ], [ %call_site_execute1298, %check_active1300 ]
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %23, align 8, !dbg !53
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !11
  store %"struct.rubinius::Object"* %stack_load1305, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const1313 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566744 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos1314 = getelementptr %"struct.rubinius::CallSite"* %cache_const1313, i64 0, i32 2, !dbg !11
  %execute1315 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1314, align 8, !dbg !11
  store i32 340, i32* %9, align 4, !dbg !11
  %call_site_execute1316 = call %"struct.rubinius::Object"* %execute1315(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1313, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1319 = icmp eq %"struct.rubinius::Object"* %call_site_execute1316, null, !dbg !11
  br i1 %null_check1319, label %bail_out, label %check_active1318, !dbg !11

check_active1300:                                 ; preds = %continue1279
  store %"struct.rubinius::Object"* %call_site_execute1298, %"struct.rubinius::Object"** %stack, align 8, !dbg !53
  br label %ip334, !dbg !53

check_active1318:                                 ; preds = %ip334
  store %"struct.rubinius::Object"* %call_site_execute1316, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  %as_int1323 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1316 to i64, !dbg !11
  %and1324 = and i64 %as_int1323, 15, !dbg !11
  %is_true1325 = icmp eq i64 %and1324, 10, !dbg !11
  br i1 %is_true1325, label %ip356, label %ip345, !dbg !11

ip345:                                            ; preds = %check_active1318
  %local1328 = load %"struct.rubinius::Object"** %23, align 8, !dbg !11, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  %self1331 = load %"struct.rubinius::Object"** %15, align 8, !dbg !11
  %field_pos13331686 = getelementptr %"struct.rubinius::Object"* %self1331, i64 1, !dbg !11
  %field_pos1333 = bitcast %"struct.rubinius::Object"* %field_pos13331686 to %"struct.rubinius::Object"**, !dbg !11
  %field1334 = load %"struct.rubinius::Object"** %field_pos1333, align 8, !dbg !11
  store %"struct.rubinius::Object"* %field1334, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !11
  store %"struct.rubinius::Object"* %local1328, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const1339 = load %"struct.rubinius::CallSite"** inttoptr (i64 24566816 to %"struct.rubinius::CallSite"**), align 32, !dbg !11
  %execute_pos1340 = getelementptr %"struct.rubinius::CallSite"* %cache_const1339, i64 0, i32 2, !dbg !11
  %execute1341 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1340, align 8, !dbg !11
  store i32 349, i32* %9, align 4, !dbg !11
  %call_site_execute1342 = call %"struct.rubinius::Object"* %execute1341(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1339, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check1345 = icmp eq %"struct.rubinius::Object"* %call_site_execute1342, null, !dbg !11
  br i1 %null_check1345, label %bail_out, label %check_active1344, !dbg !11

check_active1344:                                 ; preds = %ip345
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  store %"struct.rubinius::Object"* %call_site_execute1342, %"struct.rubinius::Object"** %23, align 8, !dbg !11
  br label %ip357, !dbg !11

ip357:                                            ; preds = %ip356, %check_active1344
  %local1352 = load %"struct.rubinius::Object"** %22, align 8, !dbg !56, !rbx-classid !19
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack, align 8, !dbg !56
  %as_int1356 = ptrtoint %"struct.rubinius::Object"* %local1352 to i64, !dbg !56
  %and1357 = and i64 %as_int1356, 15, !dbg !56
  %is_true1358 = icmp eq i64 %and1357, 10, !dbg !56
  br i1 %is_true1358, label %ip386, label %ip362, !dbg !56

ip362:                                            ; preds = %ip357
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %constant_cache1367 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24566944 to %"struct.rubinius::ConstantCache"**), align 32, !dbg !57
  %constant_cache_pos1368 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 4, !dbg !57
  %constant_scope1369 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1368, align 8, !dbg !57
  %60 = load %"struct.rubinius::Object"** %6, align 8, !dbg !57
  %frame_scope1371 = bitcast %"struct.rubinius::Object"* %60 to %"struct.rubinius::ConstantScope"*, !dbg !57
  %same_scope1372 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1369, %frame_scope1371, !dbg !57
  br i1 %same_scope1372, label %check_serial1373, label %use_call1375, !dbg !57

check_serial1373:                                 ; preds = %ip362
  %global_serial1366 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !57
  %serial_pos1377 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 7, !dbg !57
  %serial1378 = load i32* %serial_pos1377, align 4, !dbg !57
  %use_cache1379 = icmp eq i32 %global_serial1366, %serial1378, !dbg !57
  br i1 %use_cache1379, label %use_cache1374, label %use_call1375, !dbg !57

use_cache1374:                                    ; preds = %check_serial1373
  %value_pos1380 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1367, i64 0, i32 2, !dbg !57
  %cached_value1381 = load %"struct.rubinius::Object"** %value_pos1380, align 8, !dbg !57
  br label %continue1376, !dbg !57

use_call1375:                                     ; preds = %check_serial1373, %ip362
  store i32 365, i32* %9, align 4, !dbg !57
  %push_const_fast1382 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24566944 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !57
  %null_check1385 = icmp eq %"struct.rubinius::Object"* %push_const_fast1382, null, !dbg !57
  br i1 %null_check1385, label %bail_out, label %continue1376, !dbg !57

continue1376:                                     ; preds = %use_call1375, %use_cache1374
  %constant1386 = phi %"struct.rubinius::Object"* [ %cached_value1381, %use_cache1374 ], [ %push_const_fast1382, %use_call1375 ], !dbg !57, !rbx-classid !58
  store %"struct.rubinius::Object"* %constant1386, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !57
  %masked1416 = and i64 %as_int1356, 3, !dbg !57
  %is_reference1417 = icmp eq i64 %masked1416, 0, !dbg !57
  br i1 %is_reference1417, label %reference_block1403, label %class_verified_block1402, !dbg !57

continue1398:                                     ; preds = %is_fixnum_block1407, %is_fixnum_block1407, %reference_block1403, %is_symbol_block1405, %is_nil_block1410, %is_true_block1412, %is_false_block1414, %use_call1399
  %constant1445 = phi %"struct.rubinius::Object"* [ %kind_of1444, %use_call1399 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_false_block1414 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_true_block1412 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_nil_block1410 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1407 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_symbol_block1405 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %reference_block1403 ], [ inttoptr (i64 18 to %"struct.rubinius::Object"*), %is_fixnum_block1407 ], !dbg !57
  store %"struct.rubinius::Object"* %constant1445, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %as_int1449 = ptrtoint %"struct.rubinius::Object"* %constant1445 to i64, !dbg !57
  %and1450 = and i64 %as_int1449, 15, !dbg !57
  %is_true1451 = icmp eq i64 %and1450, 10, !dbg !57
  br i1 %is_true1451, label %ip371, label %ip382, !dbg !57

use_call1399:                                     ; preds = %check_nil_block1409, %is_fixnum_block1407, %is_false_block1414, %is_true_block1412, %is_nil_block1410, %is_symbol_block1405, %class_verified_block1402, %reference_block1403
  %kind_of1444 = call %"struct.rubinius::Object"* @rbx_kind_of(%"struct.rubinius::State"* %state, %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"* %constant1386) #0, !dbg !57
  br label %continue1398, !dbg !57

class_verified_block1402:                         ; preds = %continue1376
  %word_pos1422 = getelementptr %"struct.rubinius::Object"* %constant1386, i64 0, i32 0, i32 0, i32 0, !dbg !57
  %flags1423 = load i64* %word_pos1422, align 8, !dbg !57
  %mask1424 = and i64 %flags1423, 255, !dbg !57
  %is_type1425 = icmp eq i64 %mask1424, 20, !dbg !57
  br i1 %is_type1425, label %check_symbol_block1404, label %use_call1399, !dbg !57

reference_block1403:                              ; preds = %continue1376
  %class_pos1418 = getelementptr %"struct.rubinius::Object"* %local1352, i64 0, i32 0, i32 1, !dbg !57
  %ref_class1419 = load %"struct.rubinius::Class"** %class_pos1418, align 8, !dbg !57
  %downcast1420 = getelementptr inbounds %"struct.rubinius::Class"* %ref_class1419, i64 0, i32 0, i32 0, !dbg !57
  %check_class1421 = icmp eq %"struct.rubinius::Object"* %downcast1420, %constant1386, !dbg !57
  br i1 %check_class1421, label %continue1398, label %use_call1399, !dbg !57

check_symbol_block1404:                           ; preds = %class_verified_block1402
  %class_id_pos1427 = getelementptr %"struct.rubinius::Object"* %constant1386, i64 4, i32 0, i32 2, !dbg !57
  %61 = bitcast %"struct.rubinius::Object"** %class_id_pos1427 to i32*, !dbg !57
  %class_id1428 = load i32* %61, align 4, !dbg !57
  %masked1430 = and i64 %as_int1356, 7, !dbg !57
  %is_symbol1431 = icmp eq i64 %masked1430, 6, !dbg !57
  br i1 %is_symbol1431, label %is_symbol_block1405, label %check_fixnum_block1406, !dbg !57

is_symbol_block1405:                              ; preds = %check_symbol_block1404
  %check_class_id1432 = icmp eq i32 %class_id1428, 39, !dbg !57
  br i1 %check_class_id1432, label %continue1398, label %use_call1399, !dbg !57

check_fixnum_block1406:                           ; preds = %check_symbol_block1404
  %masked1434 = and i64 %as_int1356, 1, !dbg !57
  %is_fixnum1435 = icmp eq i64 %masked1434, 0, !dbg !57
  br i1 %is_fixnum1435, label %check_nil_block1409, label %is_fixnum_block1407, !dbg !57

is_fixnum_block1407:                              ; preds = %check_fixnum_block1406
  switch i32 %class_id1428, label %use_call1399 [
    i32 37, label %continue1398
    i32 35, label %continue1398
  ], !dbg !57

check_nil_block1409:                              ; preds = %check_fixnum_block1406
  switch i64 %as_int1356, label %use_call1399 [
    i64 26, label %is_nil_block1410
    i64 18, label %is_true_block1412
    i64 10, label %is_false_block1414
  ], !dbg !57

is_nil_block1410:                                 ; preds = %check_nil_block1409
  %check_class_id1439 = icmp eq i32 %class_id1428, 27, !dbg !57
  br i1 %check_class_id1439, label %continue1398, label %use_call1399, !dbg !57

is_true_block1412:                                ; preds = %check_nil_block1409
  %check_class_id1441 = icmp eq i32 %class_id1428, 29, !dbg !57
  br i1 %check_class_id1441, label %continue1398, label %use_call1399, !dbg !57

is_false_block1414:                               ; preds = %check_nil_block1409
  %check_class_id1443 = icmp eq i32 %class_id1428, 31, !dbg !57
  br i1 %check_class_id1443, label %continue1398, label %use_call1399, !dbg !57

ip371:                                            ; preds = %continue1398
  %system_object1453 = load %"struct.rubinius::Object"** inttoptr (i64 22560992 to %"struct.rubinius::Object"**), align 32, !dbg !57
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  store %"struct.rubinius::Object"* %local1352, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !57
  %constant_cache1459 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567024 to %"struct.rubinius::ConstantCache"**), align 16, !dbg !57
  %constant_cache_pos1460 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 4, !dbg !57
  %constant_scope1461 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1460, align 8, !dbg !57
  %same_scope1464 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1461, %frame_scope1371, !dbg !57
  br i1 %same_scope1464, label %check_serial1465, label %use_call1467, !dbg !57

check_serial1465:                                 ; preds = %ip371
  %global_serial1458 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !57
  %serial_pos1469 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 7, !dbg !57
  %serial1470 = load i32* %serial_pos1469, align 4, !dbg !57
  %use_cache1471 = icmp eq i32 %global_serial1458, %serial1470, !dbg !57
  br i1 %use_cache1471, label %use_cache1466, label %use_call1467, !dbg !57

use_cache1466:                                    ; preds = %check_serial1465
  %value_pos1472 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1459, i64 0, i32 2, !dbg !57
  %cached_value1473 = load %"struct.rubinius::Object"** %value_pos1472, align 8, !dbg !57
  br label %continue1468, !dbg !57

use_call1467:                                     ; preds = %check_serial1465, %ip371
  store i32 375, i32* %9, align 4, !dbg !57
  %push_const_fast1474 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567024 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !57
  %null_check1477 = icmp eq %"struct.rubinius::Object"* %push_const_fast1474, null, !dbg !57
  br i1 %null_check1477, label %bail_out, label %continue1468, !dbg !57

continue1468:                                     ; preds = %use_call1467, %use_cache1466
  %constant1478 = phi %"struct.rubinius::Object"* [ %cached_value1473, %use_cache1466 ], [ %push_const_fast1474, %use_call1467 ], !dbg !57, !rbx-classid !59
  store %"struct.rubinius::Object"* %constant1478, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !57
  %stack_pos1480 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 12, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 14734 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos1480, align 8, !dbg !57
  store %"struct.rubinius::Object"* %system_object1453, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !57
  store %"struct.rubinius::Symbol"* inttoptr (i64 14742 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !57
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !57
  store i32 3, i32* %out_args_total, align 8, !dbg !57
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !57
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !57
  %cache_const1484 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567056 to %"struct.rubinius::CallSite"**), align 16, !dbg !57
  %execute_pos1485 = getelementptr %"struct.rubinius::CallSite"* %cache_const1484, i64 0, i32 2, !dbg !57
  %execute1486 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1485, align 8, !dbg !57
  store i32 379, i32* %9, align 4, !dbg !57
  %call_site_execute1487 = call %"struct.rubinius::Object"* %execute1486(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1484, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !57
  %null_check1490 = icmp eq %"struct.rubinius::Object"* %call_site_execute1487, null, !dbg !57
  br i1 %null_check1490, label %bail_out, label %check_active1489, !dbg !57

ip382:                                            ; preds = %continue1398, %check_active1489
  %stack_load1494 = phi %"struct.rubinius::Object"* [ %local1352, %continue1398 ], [ %call_site_execute1487, %check_active1489 ]
  store %"struct.rubinius::Object"* %stack_load1494, %"struct.rubinius::Object"** %24, align 8, !dbg !57
  br label %ip459, !dbg !57

check_active1489:                                 ; preds = %continue1468
  store %"struct.rubinius::Object"* %call_site_execute1487, %"struct.rubinius::Object"** %stack, align 8, !dbg !57
  br label %ip382, !dbg !57

ip386:                                            ; preds = %ip357
  %local1497 = load %"struct.rubinius::Object"** %23, align 8, !dbg !60, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %stack, align 8, !dbg !60
  %self1500 = load %"struct.rubinius::Object"** %15, align 8, !dbg !60
  %field_pos15021687 = getelementptr %"struct.rubinius::Object"* %self1500, i64 1, !dbg !60
  %field_pos1502 = bitcast %"struct.rubinius::Object"* %field_pos15021687 to %"struct.rubinius::Object"**, !dbg !60
  %field1503 = load %"struct.rubinius::Object"** %field_pos1502, align 8, !dbg !60
  store %"struct.rubinius::Object"* %field1503, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !60
  store %"struct.rubinius::Object"* %local1497, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !60
  store %"struct.rubinius::Symbol"* inttoptr (i64 15318 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !60
  store i32 1, i32* %out_args_total, align 8, !dbg !60
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !60
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !60
  %cache_const1508 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567144 to %"struct.rubinius::CallSite"**), align 8, !dbg !60
  %execute_pos1509 = getelementptr %"struct.rubinius::CallSite"* %cache_const1508, i64 0, i32 2, !dbg !60
  %execute1510 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1509, align 8, !dbg !60
  store i32 390, i32* %9, align 4, !dbg !60
  %call_site_execute1511 = call %"struct.rubinius::Object"* %execute1510(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1508, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !60
  %null_check1514 = icmp eq %"struct.rubinius::Object"* %call_site_execute1511, null, !dbg !60
  br i1 %null_check1514, label %bail_out, label %check_active1513, !dbg !60

check_active1513:                                 ; preds = %ip386
  %as_int1518 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1511 to i64, !dbg !60
  %and1519 = and i64 %as_int1518, 15, !dbg !60
  %is_true1520 = icmp eq i64 %and1519, 10, !dbg !60
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !60
  br i1 %is_true1520, label %ip399, label %return_pad, !dbg !60

ip399:                                            ; preds = %check_active1513
  %62 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !61
  %stack_pos1527 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 19, !dbg !61
  store %"struct.rubinius::Object"* %62, %"struct.rubinius::Object"** %stack_pos1527, align 8, !dbg !61
  %self1533 = load %"struct.rubinius::Object"** %15, align 8, !dbg !62
  %field_pos1535 = getelementptr %"struct.rubinius::Object"* %self1533, i64 1, i32 0, i32 1, !dbg !62
  %63 = load %"struct.rubinius::Class"** %field_pos1535, align 8, !dbg !62
  %field1536 = getelementptr inbounds %"struct.rubinius::Class"* %63, i64 0, i32 0, i32 0, !dbg !62
  store %"struct.rubinius::Object"* %field1536, %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  %64 = getelementptr %"struct.rubinius::Object"* %self1533, i64 1, i32 0, i32 2, !dbg !62
  %field1542 = load %"struct.rubinius::Object"** %64, align 8, !dbg !62
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !62
  %local1545 = load %"struct.rubinius::Object"** %23, align 8, !dbg !62, !rbx-classid !17
  store %"struct.rubinius::Object"* %local1545, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !62
  store %"struct.rubinius::Object"* %field1542, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1550 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567336 to %"struct.rubinius::CallSite"**), align 8, !dbg !62
  %execute_pos1551 = getelementptr %"struct.rubinius::CallSite"* %cache_const1550, i64 0, i32 2, !dbg !62
  %execute1552 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1551, align 8, !dbg !62
  store i32 414, i32* %9, align 4, !dbg !62
  %call_site_execute1553 = call %"struct.rubinius::Object"* %execute1552(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1550, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1556 = icmp eq %"struct.rubinius::Object"* %call_site_execute1553, null, !dbg !62
  br i1 %null_check1556, label %is_exception1530, label %check_active1555, !dbg !62

is_exception1530:                                 ; preds = %check_active1555, %ip399
  %rae1531 = call i1 @rbx_raising_exception(%"struct.rubinius::State"* %state), !dbg !61
  br i1 %rae1531, label %ip424, label %bail_out, !dbg !61

check_active1555:                                 ; preds = %ip399
  store %"struct.rubinius::Object"* %call_site_execute1553, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !62
  %stack_load1559 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  store %"struct.rubinius::Object"* %stack_load1559, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !62
  store %"struct.rubinius::Symbol"* inttoptr (i64 15294 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !62
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !62
  store i32 1, i32* %out_args_total, align 8, !dbg !62
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !62
  store %"struct.rubinius::Object"** %stack_pos16, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !62
  %cache_const1561 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567360 to %"struct.rubinius::CallSite"**), align 64, !dbg !62
  %execute_pos1562 = getelementptr %"struct.rubinius::CallSite"* %cache_const1561, i64 0, i32 2, !dbg !62
  %execute1563 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1562, align 8, !dbg !62
  store i32 417, i32* %9, align 4, !dbg !62
  %call_site_execute1564 = call %"struct.rubinius::Object"* %execute1563(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1561, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !62
  %null_check1567 = icmp eq %"struct.rubinius::Object"* %call_site_execute1564, null, !dbg !62
  br i1 %null_check1567, label %is_exception1530, label %check_active1566, !dbg !62

ip424:                                            ; preds = %is_exception1530
  %65 = call %"struct.rubinius::Object"* @rbx_push_exception_state(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %65, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  %stack_pos1572 = getelementptr [22 x %"struct.rubinius::Object"*]* %cfstk1675, i64 0, i64 18, !dbg !22
  store %"struct.rubinius::Object"* %65, %"struct.rubinius::Object"** %stack_pos1572, align 8, !dbg !22
  %ce1575 = call %"struct.rubinius::Object"* @rbx_current_exception(%"struct.rubinius::State"* %state), !dbg !22
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack, align 8, !dbg !22
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  %constant_cache1581 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567464 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !63
  %constant_cache_pos1582 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 4, !dbg !63
  %constant_scope1583 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1582, align 8, !dbg !63
  %66 = load %"struct.rubinius::Object"** %6, align 8, !dbg !63
  %frame_scope1585 = bitcast %"struct.rubinius::Object"* %66 to %"struct.rubinius::ConstantScope"*, !dbg !63
  %same_scope1586 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1583, %frame_scope1585, !dbg !63
  br i1 %same_scope1586, label %check_serial1587, label %use_call1589, !dbg !63

check_active1566:                                 ; preds = %check_active1555
  store %"struct.rubinius::Object"* %call_site_execute1564, %"struct.rubinius::Object"** %stack, align 8, !dbg !62
  br label %return_pad, !dbg !62

check_serial1587:                                 ; preds = %ip424
  %global_serial1580 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !63
  %serial_pos1591 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 7, !dbg !63
  %serial1592 = load i32* %serial_pos1591, align 4, !dbg !63
  %use_cache1593 = icmp eq i32 %global_serial1580, %serial1592, !dbg !63
  br i1 %use_cache1593, label %use_cache1588, label %use_call1589, !dbg !63

use_cache1588:                                    ; preds = %check_serial1587
  %value_pos1594 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1581, i64 0, i32 2, !dbg !63
  %cached_value1595 = load %"struct.rubinius::Object"** %value_pos1594, align 8, !dbg !63
  br label %continue1590, !dbg !63

use_call1589:                                     ; preds = %check_serial1587, %ip424
  store i32 430, i32* %9, align 4, !dbg !63
  %push_const_fast1596 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567464 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !63
  %null_check1599 = icmp eq %"struct.rubinius::Object"* %push_const_fast1596, null, !dbg !63
  br i1 %null_check1599, label %bail_out, label %continue1590, !dbg !63

continue1590:                                     ; preds = %use_call1589, %use_cache1588
  %constant1600 = phi %"struct.rubinius::Object"* [ %cached_value1595, %use_cache1588 ], [ %push_const_fast1596, %use_call1589 ], !dbg !63, !rbx-classid !64
  store %"struct.rubinius::Object"* %constant1600, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !63
  %constant_cache1605 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 24567480 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !63
  %constant_cache_pos1606 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 4, !dbg !63
  %constant_scope1607 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos1606, align 8, !dbg !63
  %same_scope1610 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope1607, %frame_scope1585, !dbg !63
  br i1 %same_scope1610, label %check_serial1611, label %use_call1614, !dbg !63

check_serial1611:                                 ; preds = %continue1590
  %global_serial1604 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !63
  %serial_pos1616 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 7, !dbg !63
  %serial1617 = load i32* %serial_pos1616, align 4, !dbg !63
  %use_under1618 = icmp eq i32 %global_serial1604, %serial1617, !dbg !63
  br i1 %use_under1618, label %check_under1612, label %use_call1614, !dbg !63

check_under1612:                                  ; preds = %check_serial1611
  %value_pos1619 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 3, !dbg !63
  %cached_under1620 = load %"struct.rubinius::Module"** %value_pos1619, align 8, !dbg !63
  %downcast1621 = getelementptr inbounds %"struct.rubinius::Module"* %cached_under1620, i64 0, i32 0, !dbg !63
  %use_cache1622 = icmp eq %"struct.rubinius::Object"* %downcast1621, %constant1600, !dbg !63
  br i1 %use_cache1622, label %use_cache1613, label %use_call1614, !dbg !63

use_cache1613:                                    ; preds = %check_under1612
  %value_pos1623 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache1605, i64 0, i32 2, !dbg !63
  %cached_value1624 = load %"struct.rubinius::Object"** %value_pos1623, align 8, !dbg !63
  br label %continue1615, !dbg !63

use_call1614:                                     ; preds = %check_under1612, %check_serial1611, %continue1590
  store i32 432, i32* %9, align 4, !dbg !63
  %constant1625 = call %"struct.rubinius::Object"* @rbx_find_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 24567480 to %"struct.rubinius::ConstantCache"**), %"struct.rubinius::Object"* %constant1600) #0, !dbg !63
  %null_check1628 = icmp eq %"struct.rubinius::Object"* %constant1625, null, !dbg !63
  br i1 %null_check1628, label %bail_out, label %continue1615, !dbg !63

continue1615:                                     ; preds = %use_call1614, %use_cache1613
  %constant1629 = phi %"struct.rubinius::Object"* [ %cached_value1624, %use_cache1613 ], [ %constant1625, %use_call1614 ], !dbg !63, !rbx-classid !65
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  store %"struct.rubinius::Object"* %ce1575, %"struct.rubinius::Object"** %stack_pos21, align 8, !dbg !63
  store %"struct.rubinius::Object"* %constant1629, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !63
  store %"struct.rubinius::Symbol"* inttoptr (i64 1406 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !63
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !63
  store i32 1, i32* %out_args_total, align 8, !dbg !63
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !63
  store %"struct.rubinius::Object"** %stack_pos21, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !63
  %cache_const1640 = load %"struct.rubinius::CallSite"** inttoptr (i64 24567504 to %"struct.rubinius::CallSite"**), align 16, !dbg !63
  %execute_pos1641 = getelementptr %"struct.rubinius::CallSite"* %cache_const1640, i64 0, i32 2, !dbg !63
  %execute1642 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos1641, align 8, !dbg !63
  store i32 435, i32* %9, align 4, !dbg !63
  %call_site_execute1643 = call %"struct.rubinius::Object"* %execute1642(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const1640, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !63
  %null_check1646 = icmp eq %"struct.rubinius::Object"* %call_site_execute1643, null, !dbg !63
  br i1 %null_check1646, label %bail_out, label %check_active1645, !dbg !63

check_active1645:                                 ; preds = %continue1615
  store %"struct.rubinius::Object"* %call_site_execute1643, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !63
  %as_int1650 = ptrtoint %"struct.rubinius::Object"* %call_site_execute1643 to i64, !dbg !63
  %and1651 = and i64 %as_int1650, 15, !dbg !63
  %is_true1652 = icmp eq i64 %and1651, 10, !dbg !63
  br i1 %is_true1652, label %ip451, label %ip442, !dbg !63

ip451:                                            ; preds = %check_active1645
  %stack_local1656 = load %"struct.rubinius::Object"** %stack_pos1572, align 8, !dbg !66
  store %"struct.rubinius::Object"* %stack_local1656, %"struct.rubinius::Object"** %stack, align 8, !dbg !66
  %67 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local1656), !dbg !66
  br label %bail_out, !dbg !66

ip442:                                            ; preds = %check_active1645
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !66
  %stack_local1663 = load %"struct.rubinius::Object"** %stack_pos1527, align 8, !dbg !66
  store %"struct.rubinius::Object"* %stack_local1663, %"struct.rubinius::Object"** %stack_pos16, align 8, !dbg !66
  %68 = call %"struct.rubinius::Object"* @rbx_restore_exception_state(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Object"* %stack_local1663), !dbg !66
  %stack_load1668 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !66, !rbx-classid !39
  br label %return_pad, !dbg !66

ip356:                                            ; preds = %check_active1318
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  br label %ip357, !dbg !11

return_pad:                                       ; preds = %check_active1513, %ip213, %continue576, %continue344, %continue218, %prologue_check, %bail_out, %ip442, %check_active1566, %check_active1145, %ip130, %tuple_at, %class_fallback666, %continue535, %serial_fallback534, %ip502, %check_active328, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %call_site_execute326, %check_active328 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip502 ], [ %42, %serial_fallback534 ], [ %send_result560, %continue535 ], [ %48, %class_fallback666 ], [ %tuple_at679, %tuple_at ], [ %stack_load774, %ip130 ], [ %call_site_execute1143, %check_active1145 ], [ %call_site_execute1564, %check_active1566 ], [ %stack_load1668, %ip442 ], [ null, %bail_out ], [ null, %prologue_check ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue218 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue344 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %continue576 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %ip213 ], [ inttoptr (i64 26 to %"struct.rubinius::Object"*), %check_active1513 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

prologue_check:                                   ; preds = %arg_loop_cont
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %69 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %69, label %return_pad, label %method_body, !dbg !11
}

[[[ JIT Machine Code: _X_Array#[]@1 ]]]
0x7f95d65c4010  push %rbp               
0x7f95d65c4011  mov %rsp, %rbp          
0x7f95d65c4014  push %r15               
0x7f95d65c4016  push %r14               
0x7f95d65c4018  push %r13               
0x7f95d65c401a  push %r12               
0x7f95d65c401c  push %rbx               
0x7f95d65c401d  subq $0x158, %rsp       
0x7f95d65c4024  mov %r8, %r15           
0x7f95d65c4027  mov %rdi, %r14          
0x7f95d65c402a  mov 0x18(%r15), %eax    
0x7f95d65c402e  lea -0x1(%rax), %edi    
0x7f95d65c4031  cmp $0x2, %edi          
0x7f95d65c4034  jb 0x46                  ; 0x7f95d65c4056
0x7f95d65c403a  mov $0x760d50, %rax      ; rbx_arg_error
0x7f95d65c4044  mov $0x2, %ecx          
0x7f95d65c4049  mov %r14, %rdi          
0x7f95d65c404c  mov %r15, %rdx          
0x7f95d65c404f  callq *%rax             
0x7f95d65c4051  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4056  mov %rsi, -0x108(%rbp)  
0x7f95d65c405d  mov %r15, -0xc8(%rbp)   
0x7f95d65c4064  movq $0x0, -0xf8(%rbp)  
0x7f95d65c406f  mov %rdx, -0xf0(%rbp)   
0x7f95d65c4076  mov 0xa0(%rdx), %rdx    
0x7f95d65c407d  mov %rdx, -0x100(%rbp)  
0x7f95d65c4084  mov $0x28, -0xe8(%rbp)  
0x7f95d65c408e  mov $0x0, -0xe4(%rbp)   
0x7f95d65c4098  lea -0x160(%rbp), %rdx  
0x7f95d65c409f  mov %rdx, -0xd0(%rbp)   
0x7f95d65c40a6  mov $0x7f95bc0008f0, %rdx
0x7f95d65c40b0  mov %rdx, -0xe0(%rbp)   
0x7f95d65c40b7  movq $0xffffffb8, %rsi  
0x7f95d65c40be  mov $0xd, %edi          
0x7f95d65c40c3  lea -0x108(%rbp), %rbx  
0x7f95d65c40ca  mov %rbx, %rdx          
0x7f95d65c40cd  sub %rsi, %rdx          
0x7f95d65c40d0  movq $0x1a, (%rdx)      
0x7f95d65c40d7  addq $0xf8, %rsi        
0x7f95d65c40db  dec %edi                
0x7f95d65c40dd  jnz 0xba                 ; 0x7f95d65c40ca
0x7f95d65c40e3  movq $0x0, -0x160(%rbp) 
0x7f95d65c40ee  mov 0x8(%r15), %rdx     
0x7f95d65c40f2  mov %rdx, -0x150(%rbp)  
0x7f95d65c40f9  mov %rcx, -0x140(%rbp)  
0x7f95d65c4100  mov 0x10(%r15), %rcx    
0x7f95d65c4104  mov %rcx, -0x148(%rbp)  
0x7f95d65c410b  movq $0x0, -0x158(%rbp) 
0x7f95d65c4116  movq $0x1a, -0x138(%rbp)
0x7f95d65c4121  lea -0x130(%rbp), %rcx  
0x7f95d65c4128  movq $0x1a, -0x130(%rbp)
0x7f95d65c4133  movq $0x1a, -0x128(%rbp)
0x7f95d65c413e  movq $0x1a, -0x120(%rbp)
0x7f95d65c4149  movq $0x1a, -0x118(%rbp)
0x7f95d65c4154  movq $0x1a, -0x110(%rbp)
0x7f95d65c415f  mov 0x20(%r15), %rsi    
0x7f95d65c4163  xor %edi, %edi          
0x7f95d65c4165  jmp 0x16a                ; 0x7f95d65c417a
0x7f95d65c416a  mov (%rsi), %rdx        
0x7f95d65c416d  mov %rdx, (%rcx)        
0x7f95d65c4170  inc %edi                
0x7f95d65c4172  addq $0x8, %rcx         
0x7f95d65c4176  addq $0x8, %rsi         
0x7f95d65c417a  cmp %eax, %edi          
0x7f95d65c417c  jl 0x15a                 ; 0x7f95d65c416a
0x7f95d65c4182  mov 0x8(%r14), %rax     
0x7f95d65c4186  mov 0x15824fe, %cl      
0x7f95d65c418d  or 0x16(%rax), %cl      
0x7f95d65c4190  jnz 0x190                ; 0x7f95d65c41a0
0x7f95d65c4196  cmp 0x8(%rax), %rbx     
0x7f95d65c419a  jae 0x1b4                ; 0x7f95d65c41c4
0x7f95d65c41a0  mov $0x762f80, %rax      ; rbx_prologue_check
0x7f95d65c41aa  lea -0x108(%rbp), %rsi  
0x7f95d65c41b1  mov %r14, %rdi          
0x7f95d65c41b4  callq *%rax             
0x7f95d65c41b6  mov %rax, %rcx          
0x7f95d65c41b9  xor %eax, %eax          
0x7f95d65c41bb  test %rcx, %rcx         
0x7f95d65c41be  jz 0x24d8                ; 0x7f95d65c64e8
0x7f95d65c41c4  mov $0x762b40, %rax      ; rbx_passed_arg
0x7f95d65c41ce  mov $0x1, %edx          
0x7f95d65c41d3  mov %r14, %rdi          
0x7f95d65c41d6  mov %r15, %rsi          
0x7f95d65c41d9  callq *%rax             
0x7f95d65c41db  mov %rax, -0xc0(%rbp)   
0x7f95d65c41e2  andq $0xf, %rax         
0x7f95d65c41e6  cmpq $0xa, %rax         
0x7f95d65c41ea  jnz 0x1f6                ; 0x7f95d65c4206
0x7f95d65c41f0  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c41fb  movq $0x1a, -0x128(%rbp)
0x7f95d65c4206  mov -0x130(%rbp), %rbx  
0x7f95d65c420d  mov %rbx, -0xc0(%rbp)   
0x7f95d65c4214  lea -0xb8(%rbp), %r12   
0x7f95d65c421b  mov %rbx, -0xb8(%rbp)   
0x7f95d65c4222  mov 0x176d190, %rax     
0x7f95d65c422a  mov 0x30(%rax), %rcx    
0x7f95d65c422e  mov -0x100(%rbp), %r13  
0x7f95d65c4235  cmp %r13, %rcx          
0x7f95d65c4238  jnz 0x23e                ; 0x7f95d65c424e
0x7f95d65c423e  mov 0x15824f4, %ecx     
0x7f95d65c4245  cmp 0x44(%rax), %ecx    
0x7f95d65c4248  jz 0x26c                 ; 0x7f95d65c427c
0x7f95d65c424e  mov $0xb, -0xe4(%rbp)   
0x7f95d65c4258  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c4262  lea -0x108(%rbp), %rsi  
0x7f95d65c4269  mov $0x176d190, %edx    
0x7f95d65c426e  mov %r14, %rdi          
0x7f95d65c4271  callq *%rax             
0x7f95d65c4273  test %rax, %rax         
0x7f95d65c4276  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c427c  mov %rbx, -0xb0(%rbp)   
0x7f95d65c4283  mov %rbx, %rax          
0x7f95d65c4286  andq $0x1, %rax         
0x7f95d65c428a  lea 0xa(%rax,8), %rcx   
0x7f95d65c4292  mov %rcx, -0xb8(%rbp)   
0x7f95d65c4299  andq $0xa, %rcx         
0x7f95d65c429d  cmpq $0xa, %rcx         
0x7f95d65c42a1  jnz 0x2c9                ; 0x7f95d65c42d9
0x7f95d65c42a7  mov %rbx, -0xb8(%rbp)   
0x7f95d65c42ae  mov 0x176d5e8, %rax     
0x7f95d65c42b6  cmp %r13, 0x30(%rax)    
0x7f95d65c42ba  jnz 0x301                ; 0x7f95d65c4311
0x7f95d65c42c0  mov 0x15824f4, %ecx     
0x7f95d65c42c7  cmp 0x44(%rax), %ecx    
0x7f95d65c42ca  jnz 0x301                ; 0x7f95d65c4311
0x7f95d65c42d0  mov 0x20(%rax), %rax    
0x7f95d65c42d4  jmp 0x32f                ; 0x7f95d65c433f
0x7f95d65c42d9  mov %rbx, -0x120(%rbp)  
0x7f95d65c42e0  mov %rbx, -0xc0(%rbp)   
0x7f95d65c42e7  movq $0x1, -0xb8(%rbp)  
0x7f95d65c42f2  test %rax, %rax         
0x7f95d65c42f5  jz 0x3f9                 ; 0x7f95d65c4409
0x7f95d65c42fb  test %rbx, %rbx         
0x7f95d65c42fe  setle %al               
0x7f95d65c4301  movzxb %al, %eax        
0x7f95d65c4304  lea 0xa(%rax,8), %rax   
0x7f95d65c430c  jmp 0x44f                ; 0x7f95d65c445f
0x7f95d65c4311  mov $0x96, -0xe4(%rbp)  
0x7f95d65c431b  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c4325  lea -0x108(%rbp), %rsi  
0x7f95d65c432c  mov $0x176d5e8, %edx    
0x7f95d65c4331  mov %r14, %rdi          
0x7f95d65c4334  callq *%rax             
0x7f95d65c4336  test %rax, %rax         
0x7f95d65c4339  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c433f  mov %rax, -0xb8(%rbp)   
0x7f95d65c4346  mov %rbx, -0xb0(%rbp)   
0x7f95d65c434d  mov %rax, -0x50(%rbp)   
0x7f95d65c4351  movq $0x57e, -0x58(%rbp)
0x7f95d65c4359  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4361  mov $0x1, -0x40(%rbp)   
0x7f95d65c4368  movq $0x0, -0x30(%rbp)  
0x7f95d65c4370  lea -0xb0(%rbp), %rax   
0x7f95d65c4377  mov %rax, -0x38(%rbp)   
0x7f95d65c437b  mov 0x176d600, %rsi     
0x7f95d65c4383  mov 0x20(%rsi), %rax    
0x7f95d65c4387  mov $0x99, -0xe4(%rbp)  
0x7f95d65c4391  lea -0x108(%rbp), %rdx  
0x7f95d65c4398  lea -0x58(%rbp), %rcx   
0x7f95d65c439c  mov %r14, %rdi          
0x7f95d65c439f  callq *%rax             
0x7f95d65c43a1  test %rax, %rax         
0x7f95d65c43a4  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c43aa  mov %rax, -0xb8(%rbp)   
0x7f95d65c43b1  andq $0xf, %rax         
0x7f95d65c43b5  cmpq $0xa, %rax         
0x7f95d65c43b9  jnz 0x4d4                ; 0x7f95d65c44e4
0x7f95d65c43bf  mov -0x130(%rbp), %rbx  
0x7f95d65c43c6  mov %rbx, -0xc0(%rbp)   
0x7f95d65c43cd  mov %rbx, -0xb8(%rbp)   
0x7f95d65c43d4  mov 0x176db20, %rax     
0x7f95d65c43dc  mov 0x30(%rax), %rcx    
0x7f95d65c43e0  mov -0x100(%rbp), %r13  
0x7f95d65c43e7  cmp %r13, %rcx          
0x7f95d65c43ea  jnz 0x57c                ; 0x7f95d65c458c
0x7f95d65c43f0  mov 0x15824f4, %ecx     
0x7f95d65c43f7  cmp 0x44(%rax), %ecx    
0x7f95d65c43fa  jnz 0x57c                ; 0x7f95d65c458c
0x7f95d65c4400  mov 0x20(%rax), %rax    
0x7f95d65c4404  jmp 0x5aa                ; 0x7f95d65c45ba
0x7f95d65c4409  mov %rbx, -0x50(%rbp)   
0x7f95d65c440d  movq $0x586, -0x58(%rbp)
0x7f95d65c4415  movq $0x1a, -0x48(%rbp) 
0x7f95d65c441d  mov $0x1, -0x40(%rbp)   
0x7f95d65c4424  movq $0x0, -0x30(%rbp)  
0x7f95d65c442c  mov %r12, -0x38(%rbp)   
0x7f95d65c4430  mov 0x176d218, %rsi     
0x7f95d65c4438  mov 0x20(%rsi), %rax    
0x7f95d65c443c  mov $0x1c, -0xe4(%rbp)  
0x7f95d65c4446  lea -0x108(%rbp), %rdx  
0x7f95d65c444d  lea -0x58(%rbp), %rcx   
0x7f95d65c4451  mov %r14, %rdi          
0x7f95d65c4454  callq *%rax             
0x7f95d65c4456  test %rax, %rax         
0x7f95d65c4459  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c445f  mov %rax, -0xc0(%rbp)   
0x7f95d65c4466  andq $0xf, %rax         
0x7f95d65c446a  cmpq $0xa, %rax         
0x7f95d65c446e  jnz 0x474                ; 0x7f95d65c4484
0x7f95d65c4474  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c447f  jmp 0x669                ; 0x7f95d65c4679
0x7f95d65c4484  mov -0x120(%rbp), %rax  
0x7f95d65c448b  mov %rax, -0xc0(%rbp)   
0x7f95d65c4492  mov -0x150(%rbp), %rcx  
0x7f95d65c4499  mov 0x18(%rcx), %rsi    
0x7f95d65c449d  mov %rsi, -0xb8(%rbp)   
0x7f95d65c44a4  mov %esi, %ecx          
0x7f95d65c44a6  and %eax, %ecx          
0x7f95d65c44a8  testb $0x1, %cl         
0x7f95d65c44ab  jz 0x5f1                 ; 0x7f95d65c4601
0x7f95d65c44b1  sarq $0x1, %rax         
0x7f95d65c44b4  sarq $0x1, %rsi         
0x7f95d65c44b7  add %rax, %rsi          
0x7f95d65c44ba  mov $0x3fffffffffffffff, %rax
0x7f95d65c44c4  add %rsi, %rax          
0x7f95d65c44c7  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c44d1  cmp %rcx, %rax          
0x7f95d65c44d4  ja 0x64c                 ; 0x7f95d65c465c
0x7f95d65c44da  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c44df  jmp 0x65b                ; 0x7f95d65c466b
0x7f95d65c44e4  mov 0x15840e0, %rax     
0x7f95d65c44ec  mov %rax, -0xc0(%rbp)   
0x7f95d65c44f3  mov -0x130(%rbp), %rax  
0x7f95d65c44fa  mov %rax, -0xb8(%rbp)   
0x7f95d65c4501  mov %rax, -0x50(%rbp)   
0x7f95d65c4505  movq $0x496e, -0x58(%rbp)
0x7f95d65c450d  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4515  mov $0x0, -0x40(%rbp)   
0x7f95d65c451c  movq $0x0, -0x30(%rbp)  
0x7f95d65c4524  mov 0x176d648, %rsi     
0x7f95d65c452c  mov 0x20(%rsi), %rax    
0x7f95d65c4530  mov $0xa2, -0xe4(%rbp)  
0x7f95d65c453a  lea -0x108(%rbp), %rdx  
0x7f95d65c4541  lea -0x58(%rbp), %rcx   
0x7f95d65c4545  mov %r14, %rdi          
0x7f95d65c4548  callq *%rax             
0x7f95d65c454a  test %rax, %rax         
0x7f95d65c454d  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4553  mov %rax, -0xb8(%rbp)   
0x7f95d65c455a  mov 0x176d660, %rax     
0x7f95d65c4562  mov 0x30(%rax), %rcx    
0x7f95d65c4566  cmp -0x100(%rbp), %rcx  
0x7f95d65c456d  jnz 0x96c                ; 0x7f95d65c497c
0x7f95d65c4573  mov 0x15824f4, %ecx     
0x7f95d65c457a  cmp 0x44(%rax), %ecx    
0x7f95d65c457d  jnz 0x96c                ; 0x7f95d65c497c
0x7f95d65c4583  mov 0x20(%rax), %rax    
0x7f95d65c4587  jmp 0x99a                ; 0x7f95d65c49aa
0x7f95d65c458c  mov $0x13d, -0xe4(%rbp) 
0x7f95d65c4596  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c45a0  lea -0x108(%rbp), %rsi  
0x7f95d65c45a7  mov $0x176db20, %edx    
0x7f95d65c45ac  mov %r14, %rdi          
0x7f95d65c45af  callq *%rax             
0x7f95d65c45b1  test %rax, %rax         
0x7f95d65c45b4  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c45ba  mov %rax, -0xb8(%rbp)   
0x7f95d65c45c1  mov %rbx, -0xb0(%rbp)   
0x7f95d65c45c8  testb $0x3, %bl         
0x7f95d65c45cb  jz 0xc45                 ; 0x7f95d65c4c55
0x7f95d65c45d1  cmpb $0x14, (%rax)      
0x7f95d65c45d4  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c45da  mov 0x70(%rax), %edx    
0x7f95d65c45dd  mov %rbx, %rcx          
0x7f95d65c45e0  andq $0x7, %rcx         
0x7f95d65c45e4  cmpq $0x6, %rcx         
0x7f95d65c45e8  jnz 0xe6b                ; 0x7f95d65c4e7b
0x7f95d65c45ee  mov $0x12, %ecx         
0x7f95d65c45f3  cmp $0x27, %edx         
0x7f95d65c45f6  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c45fc  jmp 0x167b               ; 0x7f95d65c568b
0x7f95d65c4601  mov %rax, -0x50(%rbp)   
0x7f95d65c4605  movq $0x55e, -0x58(%rbp)
0x7f95d65c460d  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4615  mov $0x1, -0x40(%rbp)   
0x7f95d65c461c  movq $0x0, -0x30(%rbp)  
0x7f95d65c4624  mov %r12, -0x38(%rbp)   
0x7f95d65c4628  mov 0x176d260, %rsi     
0x7f95d65c4630  mov 0x20(%rsi), %rax    
0x7f95d65c4634  mov $0x25, -0xe4(%rbp)  
0x7f95d65c463e  lea -0x108(%rbp), %rdx  
0x7f95d65c4645  lea -0x58(%rbp), %rcx   
0x7f95d65c4649  mov %r14, %rdi          
0x7f95d65c464c  callq *%rax             
0x7f95d65c464e  test %rax, %rax         
0x7f95d65c4651  jnz 0x65b                ; 0x7f95d65c466b
0x7f95d65c4657  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c465c  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c4666  mov %r14, %rdi          
0x7f95d65c4669  callq *%rax             
0x7f95d65c466b  mov %rax, -0xc0(%rbp)   
0x7f95d65c4672  mov %rax, -0x120(%rbp)  
0x7f95d65c4679  mov -0x128(%rbp), %rbx  
0x7f95d65c4680  mov %rbx, -0xc0(%rbp)   
0x7f95d65c4687  mov %rbx, %rax          
0x7f95d65c468a  andq $0xf, %rax         
0x7f95d65c468e  cmpq $0xa, %rax         
0x7f95d65c4692  jnz 0x6cb                ; 0x7f95d65c46db
0x7f95d65c4698  mov -0x120(%rbp), %rax  
0x7f95d65c469f  mov %rax, -0xc0(%rbp)   
0x7f95d65c46a6  mov -0x150(%rbp), %rcx  
0x7f95d65c46ad  mov 0x18(%rcx), %rcx    
0x7f95d65c46b1  mov %rcx, -0xb8(%rbp)   
0x7f95d65c46b8  mov %ecx, %edx          
0x7f95d65c46ba  and %eax, %edx          
0x7f95d65c46bc  testb $0x1, %dl         
0x7f95d65c46bf  jz 0x79f                 ; 0x7f95d65c47af
0x7f95d65c46c5  cmp %rcx, %rax          
0x7f95d65c46c8  setge %al               
0x7f95d65c46cb  movzxb %al, %eax        
0x7f95d65c46ce  lea 0xa(%rax,8), %rcx   
0x7f95d65c46d6  jmp 0x7f8                ; 0x7f95d65c4808
0x7f95d65c46db  mov %rbx, -0xc0(%rbp)   
0x7f95d65c46e2  mov %rbx, -0xb8(%rbp)   
0x7f95d65c46e9  mov 0x176d2e0, %rax     
0x7f95d65c46f1  mov 0x30(%rax), %rcx    
0x7f95d65c46f5  mov -0x100(%rbp), %r13  
0x7f95d65c46fc  cmp %r13, %rcx          
0x7f95d65c46ff  jnz 0x705                ; 0x7f95d65c4715
0x7f95d65c4705  mov 0x15824f4, %ecx     
0x7f95d65c470c  cmp 0x44(%rax), %ecx    
0x7f95d65c470f  jz 0x733                 ; 0x7f95d65c4743
0x7f95d65c4715  mov $0x35, -0xe4(%rbp)  
0x7f95d65c471f  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c4729  lea -0x108(%rbp), %rsi  
0x7f95d65c4730  mov $0x176d2e0, %edx    
0x7f95d65c4735  mov %r14, %rdi          
0x7f95d65c4738  callq *%rax             
0x7f95d65c473a  test %rax, %rax         
0x7f95d65c473d  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4743  mov %rbx, -0xb0(%rbp)   
0x7f95d65c474a  mov %rbx, %rax          
0x7f95d65c474d  andq $0x1, %rax         
0x7f95d65c4751  lea 0xa(%rax,8), %rax   
0x7f95d65c4759  mov %rax, -0xb8(%rbp)   
0x7f95d65c4760  andq $0xa, %rax         
0x7f95d65c4764  cmpq $0xa, %rax         
0x7f95d65c4768  jnz 0x934                ; 0x7f95d65c4944
0x7f95d65c476e  mov 0x15840e0, %r15     
0x7f95d65c4776  mov %r15, -0xc0(%rbp)   
0x7f95d65c477d  mov %rbx, -0xb8(%rbp)   
0x7f95d65c4784  mov 0x176d330, %rax     
0x7f95d65c478c  cmp %r13, 0x30(%rax)    
0x7f95d65c4790  jnz 0x894                ; 0x7f95d65c48a4
0x7f95d65c4796  mov 0x15824f4, %ecx     
0x7f95d65c479d  cmp 0x44(%rax), %ecx    
0x7f95d65c47a0  jnz 0x894                ; 0x7f95d65c48a4
0x7f95d65c47a6  mov 0x20(%rax), %rax    
0x7f95d65c47aa  jmp 0x8c2                ; 0x7f95d65c48d2
0x7f95d65c47af  mov %rax, -0x50(%rbp)   
0x7f95d65c47b3  movq $0x3bd6, -0x58(%rbp)
0x7f95d65c47bb  movq $0x1a, -0x48(%rbp) 
0x7f95d65c47c3  mov $0x1, -0x40(%rbp)   
0x7f95d65c47ca  movq $0x0, -0x30(%rbp)  
0x7f95d65c47d2  mov %r12, -0x38(%rbp)   
0x7f95d65c47d6  mov 0x176d3a8, %rsi     
0x7f95d65c47de  mov 0x20(%rsi), %rax    
0x7f95d65c47e2  mov $0x4e, -0xe4(%rbp)  
0x7f95d65c47ec  lea -0x108(%rbp), %rdx  
0x7f95d65c47f3  lea -0x58(%rbp), %rcx   
0x7f95d65c47f7  mov %r14, %rdi          
0x7f95d65c47fa  callq *%rax             
0x7f95d65c47fc  mov %rax, %rcx          
0x7f95d65c47ff  test %rcx, %rcx         
0x7f95d65c4802  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4808  andq $0xf, %rcx         
0x7f95d65c480c  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c4817  mov $0x1a, %eax         
0x7f95d65c481c  cmpq $0xa, %rcx         
0x7f95d65c4820  jnz 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4826  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7f95d65c4830  mov %r14, %rdi          
0x7f95d65c4833  callq *%rax             
0x7f95d65c4835  mov %rax, -0x60(%rbp)   
0x7f95d65c4839  mov -0x150(%rbp), %rax  
0x7f95d65c4840  mov 0x20(%rax), %rcx    
0x7f95d65c4844  mov %rcx, -0xc0(%rbp)   
0x7f95d65c484b  mov 0x28(%rax), %rax    
0x7f95d65c484f  mov %rax, -0xb8(%rbp)   
0x7f95d65c4856  mov -0x120(%rbp), %rsi  
0x7f95d65c485d  mov %rsi, -0xb0(%rbp)   
0x7f95d65c4864  mov %esi, %ecx          
0x7f95d65c4866  and %eax, %ecx          
0x7f95d65c4868  testb $0x1, %cl         
0x7f95d65c486b  jz 0xb5e                 ; 0x7f95d65c4b6e
0x7f95d65c4871  sarq $0x1, %rax         
0x7f95d65c4874  sarq $0x1, %rsi         
0x7f95d65c4877  add %rax, %rsi          
0x7f95d65c487a  mov $0x3fffffffffffffff, %rax
0x7f95d65c4884  add %rsi, %rax          
0x7f95d65c4887  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c4891  cmp %rcx, %rax          
0x7f95d65c4894  ja 0xc59                 ; 0x7f95d65c4c69
0x7f95d65c489a  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c489f  jmp 0xc68                ; 0x7f95d65c4c78
0x7f95d65c48a4  mov $0x3f, -0xe4(%rbp)  
0x7f95d65c48ae  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c48b8  lea -0x108(%rbp), %rsi  
0x7f95d65c48bf  mov $0x176d330, %edx    
0x7f95d65c48c4  mov %r14, %rdi          
0x7f95d65c48c7  callq *%rax             
0x7f95d65c48c9  test %rax, %rax         
0x7f95d65c48cc  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c48d2  mov %rax, -0xb0(%rbp)   
0x7f95d65c48d9  movq $0x398e, -0xa8(%rbp)
0x7f95d65c48e4  mov %r15, -0x50(%rbp)   
0x7f95d65c48e8  movq $0x3996, -0x58(%rbp)
0x7f95d65c48f0  movq $0x1a, -0x48(%rbp) 
0x7f95d65c48f8  mov $0x3, -0x40(%rbp)   
0x7f95d65c48ff  movq $0x0, -0x30(%rbp)  
0x7f95d65c4907  mov %r12, -0x38(%rbp)   
0x7f95d65c490b  mov 0x176d350, %rsi     
0x7f95d65c4913  mov 0x20(%rsi), %rax    
0x7f95d65c4917  mov $0x43, -0xe4(%rbp)  
0x7f95d65c4921  lea -0x108(%rbp), %rdx  
0x7f95d65c4928  lea -0x58(%rbp), %rcx   
0x7f95d65c492c  mov %r14, %rdi          
0x7f95d65c492f  callq *%rax             
0x7f95d65c4931  mov %rax, %rbx          
0x7f95d65c4934  test %rbx, %rbx         
0x7f95d65c4937  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c493d  mov %rbx, -0xc0(%rbp)   
0x7f95d65c4944  mov %rbx, -0x118(%rbp)  
0x7f95d65c494b  mov %rbx, -0xc0(%rbp)   
0x7f95d65c4952  movq $0x1, -0xb8(%rbp)  
0x7f95d65c495d  testb $0x1, %bl         
0x7f95d65c4960  jz 0xaa4                 ; 0x7f95d65c4ab4
0x7f95d65c4966  test %rbx, %rbx         
0x7f95d65c4969  setle %al               
0x7f95d65c496c  movzxb %al, %eax        
0x7f95d65c496f  lea 0xa(%rax,8), %rcx   
0x7f95d65c4977  jmp 0xafd                ; 0x7f95d65c4b0d
0x7f95d65c497c  mov $0xa5, -0xe4(%rbp)  
0x7f95d65c4986  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c4990  lea -0x108(%rbp), %rsi  
0x7f95d65c4997  mov $0x176d660, %edx    
0x7f95d65c499c  mov %r14, %rdi          
0x7f95d65c499f  callq *%rax             
0x7f95d65c49a1  test %rax, %rax         
0x7f95d65c49a4  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c49aa  mov %rax, -0xb0(%rbp)   
0x7f95d65c49b1  movq $0x398e, -0xa8(%rbp)
0x7f95d65c49bc  mov -0xc0(%rbp), %rax   
0x7f95d65c49c3  mov %rax, -0x50(%rbp)   
0x7f95d65c49c7  movq $0x3996, -0x58(%rbp)
0x7f95d65c49cf  movq $0x1a, -0x48(%rbp) 
0x7f95d65c49d7  mov $0x3, -0x40(%rbp)   
0x7f95d65c49de  movq $0x0, -0x30(%rbp)  
0x7f95d65c49e6  mov %r12, -0x38(%rbp)   
0x7f95d65c49ea  mov 0x176d680, %rsi     
0x7f95d65c49f2  mov 0x20(%rsi), %rax    
0x7f95d65c49f6  mov $0xa9, -0xe4(%rbp)  
0x7f95d65c4a00  lea -0x108(%rbp), %rdx  
0x7f95d65c4a07  lea -0x58(%rbp), %rcx   
0x7f95d65c4a0b  mov %r14, %rdi          
0x7f95d65c4a0e  callq *%rax             
0x7f95d65c4a10  test %rax, %rax         
0x7f95d65c4a13  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4a19  mov %rax, -0x120(%rbp)  
0x7f95d65c4a20  mov %rax, -0xc0(%rbp)   
0x7f95d65c4a27  movq $0x1, -0xb8(%rbp)  
0x7f95d65c4a32  mov %rax, -0x50(%rbp)   
0x7f95d65c4a36  movq $0x586, -0x58(%rbp)
0x7f95d65c4a3e  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4a46  mov $0x1, -0x40(%rbp)   
0x7f95d65c4a4d  movq $0x0, -0x30(%rbp)  
0x7f95d65c4a55  mov %r12, -0x38(%rbp)   
0x7f95d65c4a59  mov 0x176d6c8, %rsi     
0x7f95d65c4a61  mov 0x20(%rsi), %rax    
0x7f95d65c4a65  mov $0xb2, -0xe4(%rbp)  
0x7f95d65c4a6f  lea -0x108(%rbp), %rdx  
0x7f95d65c4a76  lea -0x58(%rbp), %rcx   
0x7f95d65c4a7a  mov %r14, %rdi          
0x7f95d65c4a7d  callq *%rax             
0x7f95d65c4a7f  test %rax, %rax         
0x7f95d65c4a82  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4a88  mov %rax, -0xc0(%rbp)   
0x7f95d65c4a8f  andq $0xf, %rax         
0x7f95d65c4a93  cmpq $0xa, %rax         
0x7f95d65c4a97  jnz 0xe90                ; 0x7f95d65c4ea0
0x7f95d65c4a9d  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c4aa8  mov -0x120(%rbp), %rax  
0x7f95d65c4aaf  jmp 0xf14                ; 0x7f95d65c4f24
0x7f95d65c4ab4  mov %rbx, -0x50(%rbp)   
0x7f95d65c4ab8  movq $0x586, -0x58(%rbp)
0x7f95d65c4ac0  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4ac8  mov $0x1, -0x40(%rbp)   
0x7f95d65c4acf  movq $0x0, -0x30(%rbp)  
0x7f95d65c4ad7  mov %r12, -0x38(%rbp)   
0x7f95d65c4adb  mov 0x176dfb0, %rsi     
0x7f95d65c4ae3  mov 0x20(%rsi), %rax    
0x7f95d65c4ae7  mov $0x1cf, -0xe4(%rbp) 
0x7f95d65c4af1  lea -0x108(%rbp), %rdx  
0x7f95d65c4af8  lea -0x58(%rbp), %rcx   
0x7f95d65c4afc  mov %r14, %rdi          
0x7f95d65c4aff  callq *%rax             
0x7f95d65c4b01  mov %rax, %rcx          
0x7f95d65c4b04  test %rcx, %rcx         
0x7f95d65c4b07  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4b0d  andq $0xf, %rcx         
0x7f95d65c4b11  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c4b1c  mov $0x1a, %eax         
0x7f95d65c4b21  cmpq $0xa, %rcx         
0x7f95d65c4b25  jnz 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4b2b  mov -0x120(%rbp), %rcx  
0x7f95d65c4b32  mov %rcx, -0xc0(%rbp)   
0x7f95d65c4b39  mov -0x150(%rbp), %rax  
0x7f95d65c4b40  mov 0x18(%rax), %rax    
0x7f95d65c4b44  mov %rax, -0xb8(%rbp)   
0x7f95d65c4b4b  mov %eax, %edx          
0x7f95d65c4b4d  and %ecx, %edx          
0x7f95d65c4b4f  testb $0x1, %dl         
0x7f95d65c4b52  jz 0xd3d                 ; 0x7f95d65c4d4d
0x7f95d65c4b58  cmp %rax, %rcx          
0x7f95d65c4b5b  setge %al               
0x7f95d65c4b5e  movzxb %al, %eax        
0x7f95d65c4b61  lea 0xa(%rax,8), %rax   
0x7f95d65c4b69  jmp 0xd9a                ; 0x7f95d65c4daa
0x7f95d65c4b6e  mov %rax, -0x50(%rbp)   
0x7f95d65c4b72  movq $0x55e, -0x58(%rbp)
0x7f95d65c4b7a  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4b82  mov $0x1, -0x40(%rbp)   
0x7f95d65c4b89  movq $0x0, -0x30(%rbp)  
0x7f95d65c4b91  lea -0xb0(%rbp), %rbx   
0x7f95d65c4b98  mov %rbx, -0x38(%rbp)   
0x7f95d65c4b9c  mov 0x176d468, %rsi     
0x7f95d65c4ba4  mov 0x20(%rsi), %rax    
0x7f95d65c4ba8  mov $0x66, -0xe4(%rbp)  
0x7f95d65c4bb2  lea -0x108(%rbp), %rdx  
0x7f95d65c4bb9  lea -0x58(%rbp), %rcx   
0x7f95d65c4bbd  mov %r14, %rdi          
0x7f95d65c4bc0  callq *%rax             
0x7f95d65c4bc2  test %rax, %rax         
0x7f95d65c4bc5  jnz 0xc68                ; 0x7f95d65c4c78
0x7f95d65c4bcb  mov %rbx, %r12          
0x7f95d65c4bce  mov $0x763170, %rax      ; rbx_raising_exception
0x7f95d65c4bd8  mov %r14, %rdi          
0x7f95d65c4bdb  callq *%rax             
0x7f95d65c4bdd  testb $0x1, %al         
0x7f95d65c4be0  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4be6  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7f95d65c4bf0  mov %r14, %rdi          
0x7f95d65c4bf3  callq *%rax             
0x7f95d65c4bf5  mov %rax, -0xc0(%rbp)   
0x7f95d65c4bfc  mov %rax, -0x68(%rbp)   
0x7f95d65c4c00  mov $0x763190, %rax      ; rbx_current_exception
0x7f95d65c4c0a  mov %r14, %rdi          
0x7f95d65c4c0d  callq *%rax             
0x7f95d65c4c0f  mov %rax, %r15          
0x7f95d65c4c12  mov %r15, -0xc0(%rbp)   
0x7f95d65c4c19  mov %r15, -0xb8(%rbp)   
0x7f95d65c4c20  mov 0x176d4e8, %rax     
0x7f95d65c4c28  mov 0x30(%rax), %rcx    
0x7f95d65c4c2c  mov -0x100(%rbp), %rbx  
0x7f95d65c4c33  cmp %rbx, %rcx          
0x7f95d65c4c36  jnz 0x123d               ; 0x7f95d65c524d
0x7f95d65c4c3c  mov 0x15824f4, %ecx     
0x7f95d65c4c43  cmp 0x44(%rax), %ecx    
0x7f95d65c4c46  jnz 0x123d               ; 0x7f95d65c524d
0x7f95d65c4c4c  mov 0x20(%rax), %rax    
0x7f95d65c4c50  jmp 0x126b               ; 0x7f95d65c527b
0x7f95d65c4c55  cmp %rax, 0x8(%rbx)     
0x7f95d65c4c59  mov $0x12, %ecx         
0x7f95d65c4c5e  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c4c64  jmp 0x167b               ; 0x7f95d65c568b
0x7f95d65c4c69  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c4c73  mov %r14, %rdi          
0x7f95d65c4c76  callq *%rax             
0x7f95d65c4c78  mov %rax, -0xb8(%rbp)   
0x7f95d65c4c7f  mov -0xc0(%rbp), %rcx   
0x7f95d65c4c86  cmpb $0x49, (%rcx)      
0x7f95d65c4c89  jnz 0xccc                ; 0x7f95d65c4cdc
0x7f95d65c4c8f  mov $0x8000000000000001, %rdx
0x7f95d65c4c99  and %rax, %rdx          
0x7f95d65c4c9c  cmpq $0x1, %rdx         
0x7f95d65c4ca0  jnz 0xccc                ; 0x7f95d65c4cdc
0x7f95d65c4ca6  sarq $0x1, %rax         
0x7f95d65c4ca9  mov 0x18(%rcx), %rdx    
0x7f95d65c4cad  lea -0x20(%rdx), %rsi   
0x7f95d65c4cb1  sarq $0x3f, %rsi        
0x7f95d65c4cb5  shrq $0x3d, %rsi        
0x7f95d65c4cb9  lea -0x20(%rdx,%rsi), %rdx
0x7f95d65c4cbe  sarq $0x3, %rdx         
0x7f95d65c4cc2  cmp %rdx, %rax          
0x7f95d65c4cc5  jge 0xccc                ; 0x7f95d65c4cdc
0x7f95d65c4ccb  mov 0x20(%rcx,%rax,8), %rax
0x7f95d65c4cd0  mov %rax, -0xc0(%rbp)   
0x7f95d65c4cd7  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4cdc  mov $0x69, -0xe4(%rbp)  
0x7f95d65c4ce6  mov $0x763ce0, %rax      ; rbx_setup_unwind
0x7f95d65c4cf0  xor %esi, %esi          
0x7f95d65c4cf2  mov $0x70, %edx         
0x7f95d65c4cf7  mov $0xffffffff, %ecx   
0x7f95d65c4cfc  xor %r8d, %r8d          
0x7f95d65c4cff  mov %r14, %rdi          
0x7f95d65c4d02  callq *%rax             
0x7f95d65c4d04  mov $0x7f95bc0008f0, %rax
0x7f95d65c4d0e  mov %rax, (%rsp)        
0x7f95d65c4d12  mov $0x0, 0x10(%rsp)    
0x7f95d65c4d1a  mov $0x1, 0x8(%rsp)     
0x7f95d65c4d22  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c4d2c  lea -0x108(%rbp), %rsi  
0x7f95d65c4d33  mov $0x69, %edx         
0x7f95d65c4d38  mov $0x1, %ecx          
0x7f95d65c4d3d  xor %r9d, %r9d          
0x7f95d65c4d40  mov %r14, %rdi          
0x7f95d65c4d43  mov %rsi, %r8           
0x7f95d65c4d46  callq *%rax             
0x7f95d65c4d48  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4d4d  mov %rcx, -0x50(%rbp)   
0x7f95d65c4d51  movq $0x3bd6, -0x58(%rbp)
0x7f95d65c4d59  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4d61  mov $0x1, -0x40(%rbp)   
0x7f95d65c4d68  movq $0x0, -0x30(%rbp)  
0x7f95d65c4d70  mov %r12, -0x38(%rbp)   
0x7f95d65c4d74  mov 0x176e028, %rsi     
0x7f95d65c4d7c  mov 0x20(%rsi), %rax    
0x7f95d65c4d80  mov $0x1de, -0xe4(%rbp) 
0x7f95d65c4d8a  lea -0x108(%rbp), %rdx  
0x7f95d65c4d91  lea -0x58(%rbp), %rcx   
0x7f95d65c4d95  mov %r14, %rdi          
0x7f95d65c4d98  callq *%rax             
0x7f95d65c4d9a  test %rax, %rax         
0x7f95d65c4d9d  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4da3  mov -0x120(%rbp), %rcx  
0x7f95d65c4daa  andq $0xf, %rax         
0x7f95d65c4dae  mov %rcx, -0xc0(%rbp)   
0x7f95d65c4db5  cmpq $0xa, %rax         
0x7f95d65c4db9  jnz 0xdd9                ; 0x7f95d65c4de9
0x7f95d65c4dbf  movq $0x1, -0xb8(%rbp)  
0x7f95d65c4dca  testb $0x1, %cl         
0x7f95d65c4dcd  jz 0x10e4                ; 0x7f95d65c50f4
0x7f95d65c4dd3  test %rcx, %rcx         
0x7f95d65c4dd6  setle %al               
0x7f95d65c4dd9  movzxb %al, %eax        
0x7f95d65c4ddc  lea 0xa(%rax,8), %rcx   
0x7f95d65c4de4  jmp 0x113d               ; 0x7f95d65c514d
0x7f95d65c4de9  mov -0x150(%rbp), %rax  
0x7f95d65c4df0  mov 0x18(%rax), %rax    
0x7f95d65c4df4  mov %rax, -0xb8(%rbp)   
0x7f95d65c4dfb  mov %rcx, -0x50(%rbp)   
0x7f95d65c4dff  movq $0x56e, -0x58(%rbp)
0x7f95d65c4e07  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4e0f  mov $0x1, -0x40(%rbp)   
0x7f95d65c4e16  movq $0x0, -0x30(%rbp)  
0x7f95d65c4e1e  mov %r12, -0x38(%rbp)   
0x7f95d65c4e22  mov 0x176e070, %rsi     
0x7f95d65c4e2a  mov 0x20(%rsi), %rax    
0x7f95d65c4e2e  mov $0x1e7, -0xe4(%rbp) 
0x7f95d65c4e38  lea -0x108(%rbp), %rdx  
0x7f95d65c4e3f  lea -0x58(%rbp), %rcx   
0x7f95d65c4e43  mov %r14, %rdi          
0x7f95d65c4e46  callq *%rax             
0x7f95d65c4e48  test %rax, %rax         
0x7f95d65c4e4b  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4e51  mov %rax, -0xc0(%rbp)   
0x7f95d65c4e58  andq $0xf, %rax         
0x7f95d65c4e5c  cmpq $0xa, %rax         
0x7f95d65c4e60  jnz 0x11b7               ; 0x7f95d65c51c7
0x7f95d65c4e66  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c4e71  mov $0x1a, %eax         
0x7f95d65c4e76  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c4e7b  testb $0x1, %bl         
0x7f95d65c4e7e  jz 0x12d4                ; 0x7f95d65c52e4
0x7f95d65c4e84  mov $0x12, %ecx         
0x7f95d65c4e89  cmp $0x23, %edx         
0x7f95d65c4e8c  jz 0x167b                ; 0x7f95d65c568b
0x7f95d65c4e92  cmp $0x25, %edx         
0x7f95d65c4e95  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c4e9b  jmp 0x167b               ; 0x7f95d65c568b
0x7f95d65c4ea0  mov -0x120(%rbp), %rax  
0x7f95d65c4ea7  mov %rax, -0xc0(%rbp)   
0x7f95d65c4eae  mov -0x150(%rbp), %rcx  
0x7f95d65c4eb5  mov 0x18(%rcx), %rcx    
0x7f95d65c4eb9  mov %rcx, -0xb8(%rbp)   
0x7f95d65c4ec0  mov %rax, -0x50(%rbp)   
0x7f95d65c4ec4  movq $0x55e, -0x58(%rbp)
0x7f95d65c4ecc  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4ed4  mov $0x1, -0x40(%rbp)   
0x7f95d65c4edb  movq $0x0, -0x30(%rbp)  
0x7f95d65c4ee3  mov %r12, -0x38(%rbp)   
0x7f95d65c4ee7  mov 0x176d710, %rsi     
0x7f95d65c4eef  mov 0x20(%rsi), %rax    
0x7f95d65c4ef3  mov $0xbb, -0xe4(%rbp)  
0x7f95d65c4efd  lea -0x108(%rbp), %rdx  
0x7f95d65c4f04  lea -0x58(%rbp), %rcx   
0x7f95d65c4f08  mov %r14, %rdi          
0x7f95d65c4f0b  callq *%rax             
0x7f95d65c4f0d  test %rax, %rax         
0x7f95d65c4f10  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4f16  mov %rax, -0xc0(%rbp)   
0x7f95d65c4f1d  mov %rax, -0x120(%rbp)  
0x7f95d65c4f24  mov %rax, -0xc0(%rbp)   
0x7f95d65c4f2b  movq $0x1, -0xb8(%rbp)  
0x7f95d65c4f36  mov %rax, -0x50(%rbp)   
0x7f95d65c4f3a  movq $0x586, -0x58(%rbp)
0x7f95d65c4f42  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4f4a  mov $0x1, -0x40(%rbp)   
0x7f95d65c4f51  movq $0x0, -0x30(%rbp)  
0x7f95d65c4f59  mov %r12, -0x38(%rbp)   
0x7f95d65c4f5d  mov 0x176d770, %rsi     
0x7f95d65c4f65  mov 0x20(%rsi), %rax    
0x7f95d65c4f69  mov $0xc7, -0xe4(%rbp)  
0x7f95d65c4f73  lea -0x108(%rbp), %rdx  
0x7f95d65c4f7a  lea -0x58(%rbp), %rcx   
0x7f95d65c4f7e  mov %r14, %rdi          
0x7f95d65c4f81  callq *%rax             
0x7f95d65c4f83  mov %rax, %rcx          
0x7f95d65c4f86  test %rcx, %rcx         
0x7f95d65c4f89  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c4f8f  mov %rcx, -0xc0(%rbp)   
0x7f95d65c4f96  mov %rcx, -0xb8(%rbp)   
0x7f95d65c4f9d  mov %rcx, %rax          
0x7f95d65c4fa0  andq $0xf, %rax         
0x7f95d65c4fa4  cmpq $0xa, %rax         
0x7f95d65c4fa8  jnz 0x101e               ; 0x7f95d65c502e
0x7f95d65c4fae  mov -0x120(%rbp), %rax  
0x7f95d65c4fb5  mov %rax, -0xc0(%rbp)   
0x7f95d65c4fbc  mov -0x150(%rbp), %rcx  
0x7f95d65c4fc3  mov 0x18(%rcx), %rcx    
0x7f95d65c4fc7  mov %rcx, -0xb8(%rbp)   
0x7f95d65c4fce  mov %rax, -0x50(%rbp)   
0x7f95d65c4fd2  movq $0x58e, -0x58(%rbp)
0x7f95d65c4fda  movq $0x1a, -0x48(%rbp) 
0x7f95d65c4fe2  mov $0x1, -0x40(%rbp)   
0x7f95d65c4fe9  movq $0x0, -0x30(%rbp)  
0x7f95d65c4ff1  mov %r12, -0x38(%rbp)   
0x7f95d65c4ff5  mov 0x176d7c8, %rsi     
0x7f95d65c4ffd  mov 0x20(%rsi), %rax    
0x7f95d65c5001  mov $0xd2, -0xe4(%rbp)  
0x7f95d65c500b  lea -0x108(%rbp), %rdx  
0x7f95d65c5012  lea -0x58(%rbp), %rcx   
0x7f95d65c5016  mov %r14, %rdi          
0x7f95d65c5019  callq *%rax             
0x7f95d65c501b  mov %rax, %rcx          
0x7f95d65c501e  test %rcx, %rcx         
0x7f95d65c5021  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5027  mov %rcx, -0xc0(%rbp)   
0x7f95d65c502e  andq $0xf, %rcx         
0x7f95d65c5032  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c503d  mov $0x1a, %eax         
0x7f95d65c5042  cmpq $0xa, %rcx         
0x7f95d65c5046  jnz 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c504c  mov 0x15840e0, %rax     
0x7f95d65c5054  mov %rax, -0xc0(%rbp)   
0x7f95d65c505b  mov -0x130(%rbp), %rax  
0x7f95d65c5062  mov %rax, -0xb8(%rbp)   
0x7f95d65c5069  mov %rax, -0x50(%rbp)   
0x7f95d65c506d  movq $0x4976, -0x58(%rbp)
0x7f95d65c5075  movq $0x1a, -0x48(%rbp) 
0x7f95d65c507d  mov $0x0, -0x40(%rbp)   
0x7f95d65c5084  movq $0x0, -0x30(%rbp)  
0x7f95d65c508c  mov 0x176d838, %rsi     
0x7f95d65c5094  mov 0x20(%rsi), %rax    
0x7f95d65c5098  mov $0xe0, -0xe4(%rbp)  
0x7f95d65c50a2  lea -0x108(%rbp), %rdx  
0x7f95d65c50a9  lea -0x58(%rbp), %rcx   
0x7f95d65c50ad  mov %r14, %rdi          
0x7f95d65c50b0  callq *%rax             
0x7f95d65c50b2  test %rax, %rax         
0x7f95d65c50b5  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c50bb  mov %rax, -0xb8(%rbp)   
0x7f95d65c50c2  mov 0x176d850, %rax     
0x7f95d65c50ca  mov 0x30(%rax), %rcx    
0x7f95d65c50ce  cmp -0x100(%rbp), %rcx  
0x7f95d65c50d5  jnz 0x1507               ; 0x7f95d65c5517
0x7f95d65c50db  mov 0x15824f4, %ecx     
0x7f95d65c50e2  cmp 0x44(%rax), %ecx    
0x7f95d65c50e5  jnz 0x1507               ; 0x7f95d65c5517
0x7f95d65c50eb  mov 0x20(%rax), %rax    
0x7f95d65c50ef  jmp 0x1535               ; 0x7f95d65c5545
0x7f95d65c50f4  mov %rcx, -0x50(%rbp)   
0x7f95d65c50f8  movq $0x586, -0x58(%rbp)
0x7f95d65c5100  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5108  mov $0x1, -0x40(%rbp)   
0x7f95d65c510f  movq $0x0, -0x30(%rbp)  
0x7f95d65c5117  mov %r12, -0x38(%rbp)   
0x7f95d65c511b  mov 0x176e140, %rsi     
0x7f95d65c5123  mov 0x20(%rsi), %rax    
0x7f95d65c5127  mov $0x201, -0xe4(%rbp) 
0x7f95d65c5131  lea -0x108(%rbp), %rdx  
0x7f95d65c5138  lea -0x58(%rbp), %rcx   
0x7f95d65c513c  mov %r14, %rdi          
0x7f95d65c513f  callq *%rax             
0x7f95d65c5141  mov %rax, %rcx          
0x7f95d65c5144  test %rcx, %rcx         
0x7f95d65c5147  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c514d  andq $0xf, %rcx         
0x7f95d65c5151  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c515c  mov $0x1a, %eax         
0x7f95d65c5161  cmpq $0xa, %rcx         
0x7f95d65c5165  jnz 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c516b  mov -0x120(%rbp), %rax  
0x7f95d65c5172  mov %rax, -0xc0(%rbp)   
0x7f95d65c5179  mov -0x118(%rbp), %rsi  
0x7f95d65c5180  mov %rsi, -0xb8(%rbp)   
0x7f95d65c5187  mov %esi, %ecx          
0x7f95d65c5189  and %eax, %ecx          
0x7f95d65c518b  testb $0x1, %cl         
0x7f95d65c518e  jz 0x12fb                ; 0x7f95d65c530b
0x7f95d65c5194  sarq $0x1, %rax         
0x7f95d65c5197  sarq $0x1, %rsi         
0x7f95d65c519a  add %rax, %rsi          
0x7f95d65c519d  mov $0x3fffffffffffffff, %rax
0x7f95d65c51a7  add %rsi, %rax          
0x7f95d65c51aa  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c51b4  cmp %rcx, %rax          
0x7f95d65c51b7  ja 0x1356                ; 0x7f95d65c5366
0x7f95d65c51bd  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c51c2  jmp 0x1365               ; 0x7f95d65c5375
0x7f95d65c51c7  mov -0x150(%rbp), %rax  
0x7f95d65c51ce  mov %rax, -0xc0(%rbp)   
0x7f95d65c51d5  movq $0x1, -0xb8(%rbp)  
0x7f95d65c51e0  movq $0x1, -0xb0(%rbp)  
0x7f95d65c51eb  mov %rax, -0x50(%rbp)   
0x7f95d65c51ef  movq $0x3ba6, -0x58(%rbp)
0x7f95d65c51f7  movq $0x1a, -0x48(%rbp) 
0x7f95d65c51ff  mov $0x2, -0x40(%rbp)   
0x7f95d65c5206  movq $0x0, -0x30(%rbp)  
0x7f95d65c520e  mov %r12, -0x38(%rbp)   
0x7f95d65c5212  mov 0x176e0b8, %rsi     
0x7f95d65c521a  mov 0x20(%rsi), %rax    
0x7f95d65c521e  mov $0x1f0, -0xe4(%rbp) 
0x7f95d65c5228  lea -0x108(%rbp), %rdx  
0x7f95d65c522f  lea -0x58(%rbp), %rcx   
0x7f95d65c5233  mov %r14, %rdi          
0x7f95d65c5236  callq *%rax             
0x7f95d65c5238  test %rax, %rax         
0x7f95d65c523b  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5241  mov %rax, -0xc0(%rbp)   
0x7f95d65c5248  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c524d  mov $0x76, -0xe4(%rbp)  
0x7f95d65c5257  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c5261  lea -0x108(%rbp), %rsi  
0x7f95d65c5268  mov $0x176d4e8, %edx    
0x7f95d65c526d  mov %r14, %rdi          
0x7f95d65c5270  callq *%rax             
0x7f95d65c5272  test %rax, %rax         
0x7f95d65c5275  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c527b  mov %rax, -0xb0(%rbp)   
0x7f95d65c5282  mov 0x176d4f8, %rcx     
0x7f95d65c528a  cmp %rbx, 0x30(%rcx)    
0x7f95d65c528e  jnz 0x129e               ; 0x7f95d65c52ae
0x7f95d65c5294  mov 0x15824f4, %edx     
0x7f95d65c529b  cmp 0x44(%rcx), %edx    
0x7f95d65c529e  jnz 0x129e               ; 0x7f95d65c52ae
0x7f95d65c52a4  cmp %rax, 0x28(%rcx)    
0x7f95d65c52a8  jz 0x1e11                ; 0x7f95d65c5e21
0x7f95d65c52ae  mov $0x78, -0xe4(%rbp)  
0x7f95d65c52b8  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7f95d65c52c2  lea -0x108(%rbp), %rsi  
0x7f95d65c52c9  mov $0x176d4f8, %edx    
0x7f95d65c52ce  mov %r14, %rdi          
0x7f95d65c52d1  mov %rax, %rcx          
0x7f95d65c52d4  callq *%rbx             
0x7f95d65c52d6  test %rax, %rax         
0x7f95d65c52d9  jnz 0x1e15               ; 0x7f95d65c5e25
0x7f95d65c52df  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c52e4  cmpq $0xa, %rbx         
0x7f95d65c52e8  jz 0x1638                ; 0x7f95d65c5648
0x7f95d65c52ee  cmpq $0x12, %rbx        
0x7f95d65c52f2  jnz 0x164b               ; 0x7f95d65c565b
0x7f95d65c52f8  mov $0x12, %ecx         
0x7f95d65c52fd  cmp $0x1d, %edx         
0x7f95d65c5300  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c5306  jmp 0x167b               ; 0x7f95d65c568b
0x7f95d65c530b  mov %rax, -0x50(%rbp)   
0x7f95d65c530f  movq $0x55e, -0x58(%rbp)
0x7f95d65c5317  movq $0x1a, -0x48(%rbp) 
0x7f95d65c531f  mov $0x1, -0x40(%rbp)   
0x7f95d65c5326  movq $0x0, -0x30(%rbp)  
0x7f95d65c532e  mov %r12, -0x38(%rbp)   
0x7f95d65c5332  mov 0x176e1b8, %rsi     
0x7f95d65c533a  mov 0x20(%rsi), %rax    
0x7f95d65c533e  mov $0x210, -0xe4(%rbp) 
0x7f95d65c5348  lea -0x108(%rbp), %rdx  
0x7f95d65c534f  lea -0x58(%rbp), %rcx   
0x7f95d65c5353  mov %r14, %rdi          
0x7f95d65c5356  callq *%rax             
0x7f95d65c5358  test %rax, %rax         
0x7f95d65c535b  jnz 0x1365               ; 0x7f95d65c5375
0x7f95d65c5361  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c5366  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c5370  mov %r14, %rdi          
0x7f95d65c5373  callq *%rax             
0x7f95d65c5375  mov %rax, -0xc0(%rbp)   
0x7f95d65c537c  mov -0x150(%rbp), %rcx  
0x7f95d65c5383  mov 0x18(%rcx), %rcx    
0x7f95d65c5387  mov %rcx, -0xb8(%rbp)   
0x7f95d65c538e  mov %ecx, %edx          
0x7f95d65c5390  and %eax, %edx          
0x7f95d65c5392  testb $0x1, %dl         
0x7f95d65c5395  jz 0x13a1                ; 0x7f95d65c53b1
0x7f95d65c539b  cmp %rcx, %rax          
0x7f95d65c539e  setg %al                
0x7f95d65c53a1  movzxb %al, %eax        
0x7f95d65c53a4  lea 0xa(%rax,8), %rax   
0x7f95d65c53ac  jmp 0x13f7               ; 0x7f95d65c5407
0x7f95d65c53b1  mov %rax, -0x50(%rbp)   
0x7f95d65c53b5  movq $0x58e, -0x58(%rbp)
0x7f95d65c53bd  movq $0x1a, -0x48(%rbp) 
0x7f95d65c53c5  mov $0x1, -0x40(%rbp)   
0x7f95d65c53cc  movq $0x0, -0x30(%rbp)  
0x7f95d65c53d4  mov %r12, -0x38(%rbp)   
0x7f95d65c53d8  mov 0x176e1e0, %rsi     
0x7f95d65c53e0  mov 0x20(%rsi), %rax    
0x7f95d65c53e4  mov $0x215, -0xe4(%rbp) 
0x7f95d65c53ee  lea -0x108(%rbp), %rdx  
0x7f95d65c53f5  lea -0x58(%rbp), %rcx   
0x7f95d65c53f9  mov %r14, %rdi          
0x7f95d65c53fc  callq *%rax             
0x7f95d65c53fe  test %rax, %rax         
0x7f95d65c5401  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5407  mov %rax, -0xc0(%rbp)   
0x7f95d65c540e  andq $0xf, %rax         
0x7f95d65c5412  cmpq $0xa, %rax         
0x7f95d65c5416  jnz 0x141c               ; 0x7f95d65c542c
0x7f95d65c541c  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c5427  jmp 0x14a0               ; 0x7f95d65c54b0
0x7f95d65c542c  mov -0x150(%rbp), %rax  
0x7f95d65c5433  mov 0x18(%rax), %rax    
0x7f95d65c5437  mov %rax, -0xc0(%rbp)   
0x7f95d65c543e  mov -0x120(%rbp), %rcx  
0x7f95d65c5445  mov %rcx, -0xb8(%rbp)   
0x7f95d65c544c  mov %rax, -0x50(%rbp)   
0x7f95d65c5450  movq $0x566, -0x58(%rbp)
0x7f95d65c5458  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5460  mov $0x1, -0x40(%rbp)   
0x7f95d65c5467  movq $0x0, -0x30(%rbp)  
0x7f95d65c546f  mov %r12, -0x38(%rbp)   
0x7f95d65c5473  mov 0x176e228, %rsi     
0x7f95d65c547b  mov 0x20(%rsi), %rax    
0x7f95d65c547f  mov $0x21e, -0xe4(%rbp) 
0x7f95d65c5489  lea -0x108(%rbp), %rdx  
0x7f95d65c5490  lea -0x58(%rbp), %rcx   
0x7f95d65c5494  mov %r14, %rdi          
0x7f95d65c5497  callq *%rax             
0x7f95d65c5499  test %rax, %rax         
0x7f95d65c549c  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c54a2  mov %rax, -0xc0(%rbp)   
0x7f95d65c54a9  mov %rax, -0x118(%rbp)  
0x7f95d65c54b0  mov -0x150(%rbp), %rax  
0x7f95d65c54b7  mov %rax, -0xc0(%rbp)   
0x7f95d65c54be  mov 0x28(%rax), %rax    
0x7f95d65c54c2  mov %rax, -0xb8(%rbp)   
0x7f95d65c54c9  mov -0x120(%rbp), %rsi  
0x7f95d65c54d0  mov %rsi, -0xb0(%rbp)   
0x7f95d65c54d7  mov %esi, %ecx          
0x7f95d65c54d9  and %eax, %ecx          
0x7f95d65c54db  testb $0x1, %cl         
0x7f95d65c54de  jz 0x1b9d                ; 0x7f95d65c5bad
0x7f95d65c54e4  sarq $0x1, %rax         
0x7f95d65c54e7  sarq $0x1, %rsi         
0x7f95d65c54ea  add %rax, %rsi          
0x7f95d65c54ed  mov $0x3fffffffffffffff, %rax
0x7f95d65c54f7  add %rsi, %rax          
0x7f95d65c54fa  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c5504  cmp %rcx, %rax          
0x7f95d65c5507  ja 0x1bff                ; 0x7f95d65c5c0f
0x7f95d65c550d  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c5512  jmp 0x1c0e               ; 0x7f95d65c5c1e
0x7f95d65c5517  mov $0xe3, -0xe4(%rbp)  
0x7f95d65c5521  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c552b  lea -0x108(%rbp), %rsi  
0x7f95d65c5532  mov $0x176d850, %edx    
0x7f95d65c5537  mov %r14, %rdi          
0x7f95d65c553a  callq *%rax             
0x7f95d65c553c  test %rax, %rax         
0x7f95d65c553f  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5545  mov %rax, -0xb0(%rbp)   
0x7f95d65c554c  movq $0x398e, -0xa8(%rbp)
0x7f95d65c5557  mov -0xc0(%rbp), %rax   
0x7f95d65c555e  mov %rax, -0x50(%rbp)   
0x7f95d65c5562  movq $0x3996, -0x58(%rbp)
0x7f95d65c556a  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5572  mov $0x3, -0x40(%rbp)   
0x7f95d65c5579  movq $0x0, -0x30(%rbp)  
0x7f95d65c5581  mov %r12, -0x38(%rbp)   
0x7f95d65c5585  mov 0x176d870, %rsi     
0x7f95d65c558d  mov 0x20(%rsi), %rax    
0x7f95d65c5591  mov $0xe7, -0xe4(%rbp)  
0x7f95d65c559b  lea -0x108(%rbp), %rdx  
0x7f95d65c55a2  lea -0x58(%rbp), %rcx   
0x7f95d65c55a6  mov %r14, %rdi          
0x7f95d65c55a9  callq *%rax             
0x7f95d65c55ab  test %rax, %rax         
0x7f95d65c55ae  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c55b4  mov %rax, -0x110(%rbp)  
0x7f95d65c55bb  mov %rax, -0xc0(%rbp)   
0x7f95d65c55c2  movq $0x1, -0xb8(%rbp)  
0x7f95d65c55cd  mov %rax, -0x50(%rbp)   
0x7f95d65c55d1  movq $0x586, -0x58(%rbp)
0x7f95d65c55d9  movq $0x1a, -0x48(%rbp) 
0x7f95d65c55e1  mov $0x1, -0x40(%rbp)   
0x7f95d65c55e8  movq $0x0, -0x30(%rbp)  
0x7f95d65c55f0  mov %r12, -0x38(%rbp)   
0x7f95d65c55f4  mov 0x176d8b8, %rsi     
0x7f95d65c55fc  mov 0x20(%rsi), %rax    
0x7f95d65c5600  mov $0xf0, -0xe4(%rbp)  
0x7f95d65c560a  lea -0x108(%rbp), %rdx  
0x7f95d65c5611  lea -0x58(%rbp), %rcx   
0x7f95d65c5615  mov %r14, %rdi          
0x7f95d65c5618  callq *%rax             
0x7f95d65c561a  test %rax, %rax         
0x7f95d65c561d  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5623  mov %rax, -0xc0(%rbp)   
0x7f95d65c562a  andq $0xf, %rax         
0x7f95d65c562e  cmpq $0xa, %rax         
0x7f95d65c5632  jnz 0x1eec               ; 0x7f95d65c5efc
0x7f95d65c5638  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c5643  jmp 0x1f79               ; 0x7f95d65c5f89
0x7f95d65c5648  mov $0x12, %ecx         
0x7f95d65c564d  cmp $0x1f, %edx         
0x7f95d65c5650  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c5656  jmp 0x167b               ; 0x7f95d65c568b
0x7f95d65c565b  cmpq $0x1a, %rbx        
0x7f95d65c565f  jnz 0x1663               ; 0x7f95d65c5673
0x7f95d65c5665  mov $0x12, %ecx         
0x7f95d65c566a  cmp $0x1b, %edx         
0x7f95d65c566d  jz 0x167b                ; 0x7f95d65c568b
0x7f95d65c5673  mov $0x7626f0, %rcx      ; rbx_kind_of
0x7f95d65c567d  mov %r14, %rdi          
0x7f95d65c5680  mov %rbx, %rsi          
0x7f95d65c5683  mov %rax, %rdx          
0x7f95d65c5686  callq *%rcx             
0x7f95d65c5688  mov %rax, %rcx          
0x7f95d65c568b  mov %rcx, -0xb8(%rbp)   
0x7f95d65c5692  andq $0xf, %rcx         
0x7f95d65c5696  cmpq $0xa, %rcx         
0x7f95d65c569a  jnz 0x1771               ; 0x7f95d65c5781
0x7f95d65c56a0  mov 0x15840e0, %r15     
0x7f95d65c56a8  mov %r15, -0xc0(%rbp)   
0x7f95d65c56af  mov %rbx, -0xb8(%rbp)   
0x7f95d65c56b6  mov 0x176db70, %rax     
0x7f95d65c56be  cmp %r13, 0x30(%rax)    
0x7f95d65c56c2  jnz 0x16d1               ; 0x7f95d65c56e1
0x7f95d65c56c8  mov 0x15824f4, %ecx     
0x7f95d65c56cf  cmp 0x44(%rax), %ecx    
0x7f95d65c56d2  jnz 0x16d1               ; 0x7f95d65c56e1
0x7f95d65c56d8  mov 0x20(%rax), %rax    
0x7f95d65c56dc  jmp 0x16ff               ; 0x7f95d65c570f
0x7f95d65c56e1  mov $0x147, -0xe4(%rbp) 
0x7f95d65c56eb  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c56f5  lea -0x108(%rbp), %rsi  
0x7f95d65c56fc  mov $0x176db70, %edx    
0x7f95d65c5701  mov %r14, %rdi          
0x7f95d65c5704  callq *%rax             
0x7f95d65c5706  test %rax, %rax         
0x7f95d65c5709  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c570f  mov %rax, -0xb0(%rbp)   
0x7f95d65c5716  movq $0x398e, -0xa8(%rbp)
0x7f95d65c5721  mov %r15, -0x50(%rbp)   
0x7f95d65c5725  movq $0x3996, -0x58(%rbp)
0x7f95d65c572d  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5735  mov $0x3, -0x40(%rbp)   
0x7f95d65c573c  movq $0x0, -0x30(%rbp)  
0x7f95d65c5744  mov %r12, -0x38(%rbp)   
0x7f95d65c5748  mov 0x176db90, %rsi     
0x7f95d65c5750  mov 0x20(%rsi), %rax    
0x7f95d65c5754  mov $0x14b, -0xe4(%rbp) 
0x7f95d65c575e  lea -0x108(%rbp), %rdx  
0x7f95d65c5765  lea -0x58(%rbp), %rcx   
0x7f95d65c5769  mov %r14, %rdi          
0x7f95d65c576c  callq *%rax             
0x7f95d65c576e  mov %rax, %rbx          
0x7f95d65c5771  test %rbx, %rbx         
0x7f95d65c5774  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c577a  mov %rbx, -0xc0(%rbp)   
0x7f95d65c5781  mov %rbx, -0x120(%rbp)  
0x7f95d65c5788  mov %rbx, -0xc0(%rbp)   
0x7f95d65c578f  movq $0x1, -0xb8(%rbp)  
0x7f95d65c579a  mov %rbx, -0x50(%rbp)   
0x7f95d65c579e  movq $0x586, -0x58(%rbp)
0x7f95d65c57a6  movq $0x1a, -0x48(%rbp) 
0x7f95d65c57ae  mov $0x1, -0x40(%rbp)   
0x7f95d65c57b5  movq $0x0, -0x30(%rbp)  
0x7f95d65c57bd  mov %r12, -0x38(%rbp)   
0x7f95d65c57c1  mov 0x176dbd8, %rsi     
0x7f95d65c57c9  mov 0x20(%rsi), %rax    
0x7f95d65c57cd  mov $0x154, -0xe4(%rbp) 
0x7f95d65c57d7  lea -0x108(%rbp), %rdx  
0x7f95d65c57de  lea -0x58(%rbp), %rcx   
0x7f95d65c57e2  mov %r14, %rdi          
0x7f95d65c57e5  callq *%rax             
0x7f95d65c57e7  test %rax, %rax         
0x7f95d65c57ea  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c57f0  mov %rax, -0xc0(%rbp)   
0x7f95d65c57f7  andq $0xf, %rax         
0x7f95d65c57fb  cmpq $0xa, %rax         
0x7f95d65c57ff  jnz 0x1805               ; 0x7f95d65c5815
0x7f95d65c5805  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c5810  jmp 0x1889               ; 0x7f95d65c5899
0x7f95d65c5815  mov -0x120(%rbp), %rax  
0x7f95d65c581c  mov %rax, -0xc0(%rbp)   
0x7f95d65c5823  mov -0x150(%rbp), %rcx  
0x7f95d65c582a  mov 0x18(%rcx), %rcx    
0x7f95d65c582e  mov %rcx, -0xb8(%rbp)   
0x7f95d65c5835  mov %rax, -0x50(%rbp)   
0x7f95d65c5839  movq $0x55e, -0x58(%rbp)
0x7f95d65c5841  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5849  mov $0x1, -0x40(%rbp)   
0x7f95d65c5850  movq $0x0, -0x30(%rbp)  
0x7f95d65c5858  mov %r12, -0x38(%rbp)   
0x7f95d65c585c  mov 0x176dc20, %rsi     
0x7f95d65c5864  mov 0x20(%rsi), %rax    
0x7f95d65c5868  mov $0x15d, -0xe4(%rbp) 
0x7f95d65c5872  lea -0x108(%rbp), %rdx  
0x7f95d65c5879  lea -0x58(%rbp), %rcx   
0x7f95d65c587d  mov %r14, %rdi          
0x7f95d65c5880  callq *%rax             
0x7f95d65c5882  test %rax, %rax         
0x7f95d65c5885  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c588b  mov %rax, -0xc0(%rbp)   
0x7f95d65c5892  mov %rax, -0x120(%rbp)  
0x7f95d65c5899  mov -0x128(%rbp), %rbx  
0x7f95d65c58a0  mov %rbx, -0xc0(%rbp)   
0x7f95d65c58a7  mov %rbx, %rax          
0x7f95d65c58aa  andq $0xf, %rax         
0x7f95d65c58ae  cmpq $0xa, %rax         
0x7f95d65c58b2  jnz 0x1a4a               ; 0x7f95d65c5a5a
0x7f95d65c58b8  mov -0x120(%rbp), %rax  
0x7f95d65c58bf  mov %rax, -0xc0(%rbp)   
0x7f95d65c58c6  mov -0x150(%rbp), %rcx  
0x7f95d65c58cd  mov 0x18(%rcx), %rcx    
0x7f95d65c58d1  mov %rcx, -0xb8(%rbp)   
0x7f95d65c58d8  mov %rax, -0x50(%rbp)   
0x7f95d65c58dc  movq $0x3bd6, -0x58(%rbp)
0x7f95d65c58e4  movq $0x1a, -0x48(%rbp) 
0x7f95d65c58ec  mov $0x1, -0x40(%rbp)   
0x7f95d65c58f3  movq $0x0, -0x30(%rbp)  
0x7f95d65c58fb  mov %r12, -0x38(%rbp)   
0x7f95d65c58ff  mov 0x176dd68, %rsi     
0x7f95d65c5907  mov 0x20(%rsi), %rax    
0x7f95d65c590b  mov $0x186, -0xe4(%rbp) 
0x7f95d65c5915  lea -0x108(%rbp), %rdx  
0x7f95d65c591c  lea -0x58(%rbp), %rcx   
0x7f95d65c5920  mov %r14, %rdi          
0x7f95d65c5923  callq *%rax             
0x7f95d65c5925  mov %rax, %rcx          
0x7f95d65c5928  test %rcx, %rcx         
0x7f95d65c592b  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5931  andq $0xf, %rcx         
0x7f95d65c5935  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c5940  mov $0x1a, %eax         
0x7f95d65c5945  cmpq $0xa, %rcx         
0x7f95d65c5949  jnz 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c594f  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7f95d65c5959  mov %r14, %rdi          
0x7f95d65c595c  callq *%rax             
0x7f95d65c595e  mov %rax, -0x70(%rbp)   
0x7f95d65c5962  mov -0x150(%rbp), %rax  
0x7f95d65c5969  mov 0x20(%rax), %rcx    
0x7f95d65c596d  mov %rcx, -0xc0(%rbp)   
0x7f95d65c5974  mov 0x28(%rax), %rax    
0x7f95d65c5978  mov %rax, -0xb8(%rbp)   
0x7f95d65c597f  mov -0x120(%rbp), %rcx  
0x7f95d65c5986  mov %rcx, -0xb0(%rbp)   
0x7f95d65c598d  mov %rax, -0x50(%rbp)   
0x7f95d65c5991  movq $0x55e, -0x58(%rbp)
0x7f95d65c5999  movq $0x1a, -0x48(%rbp) 
0x7f95d65c59a1  mov $0x1, -0x40(%rbp)   
0x7f95d65c59a8  movq $0x0, -0x30(%rbp)  
0x7f95d65c59b0  lea -0xb0(%rbp), %rax   
0x7f95d65c59b7  mov %rax, -0x38(%rbp)   
0x7f95d65c59bb  mov 0x176de28, %rsi     
0x7f95d65c59c3  mov 0x20(%rsi), %rax    
0x7f95d65c59c7  mov $0x19e, -0xe4(%rbp) 
0x7f95d65c59d1  lea -0x108(%rbp), %rdx  
0x7f95d65c59d8  lea -0x58(%rbp), %rcx   
0x7f95d65c59dc  mov %r14, %rdi          
0x7f95d65c59df  callq *%rax             
0x7f95d65c59e1  test %rax, %rax         
0x7f95d65c59e4  jz 0x1b16                ; 0x7f95d65c5b26
0x7f95d65c59ea  mov %rax, -0xb8(%rbp)   
0x7f95d65c59f1  mov -0xc0(%rbp), %rax   
0x7f95d65c59f8  mov %rax, -0x50(%rbp)   
0x7f95d65c59fc  movq $0x3bbe, -0x58(%rbp)
0x7f95d65c5a04  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5a0c  mov $0x1, -0x40(%rbp)   
0x7f95d65c5a13  movq $0x0, -0x30(%rbp)  
0x7f95d65c5a1b  mov %r12, -0x38(%rbp)   
0x7f95d65c5a1f  mov 0x176de40, %rsi     
0x7f95d65c5a27  mov 0x20(%rsi), %rax    
0x7f95d65c5a2b  mov $0x1a1, -0xe4(%rbp) 
0x7f95d65c5a35  lea -0x108(%rbp), %rdx  
0x7f95d65c5a3c  lea -0x58(%rbp), %rcx   
0x7f95d65c5a40  mov %r14, %rdi          
0x7f95d65c5a43  callq *%rax             
0x7f95d65c5a45  test %rax, %rax         
0x7f95d65c5a48  jz 0x1b16                ; 0x7f95d65c5b26
0x7f95d65c5a4e  mov %rax, -0xc0(%rbp)   
0x7f95d65c5a55  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c5a5a  mov %rbx, -0xc0(%rbp)   
0x7f95d65c5a61  mov %rbx, -0xb8(%rbp)   
0x7f95d65c5a68  mov 0x176dca0, %rax     
0x7f95d65c5a70  mov 0x30(%rax), %rcx    
0x7f95d65c5a74  mov -0x100(%rbp), %r13  
0x7f95d65c5a7b  cmp %r13, %rcx          
0x7f95d65c5a7e  jnz 0x1a8d               ; 0x7f95d65c5a9d
0x7f95d65c5a84  mov 0x15824f4, %ecx     
0x7f95d65c5a8b  cmp 0x44(%rax), %ecx    
0x7f95d65c5a8e  jnz 0x1a8d               ; 0x7f95d65c5a9d
0x7f95d65c5a94  mov 0x20(%rax), %rax    
0x7f95d65c5a98  jmp 0x1abb               ; 0x7f95d65c5acb
0x7f95d65c5a9d  mov $0x16d, -0xe4(%rbp) 
0x7f95d65c5aa7  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c5ab1  lea -0x108(%rbp), %rsi  
0x7f95d65c5ab8  mov $0x176dca0, %edx    
0x7f95d65c5abd  mov %r14, %rdi          
0x7f95d65c5ac0  callq *%rax             
0x7f95d65c5ac2  test %rax, %rax         
0x7f95d65c5ac5  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5acb  mov %rax, -0xb8(%rbp)   
0x7f95d65c5ad2  mov %rbx, -0xb0(%rbp)   
0x7f95d65c5ad9  testb $0x3, %bl         
0x7f95d65c5adc  jz 0x1b02                ; 0x7f95d65c5b12
0x7f95d65c5ae2  cmpb $0x14, (%rax)      
0x7f95d65c5ae5  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c5aeb  mov 0x70(%rax), %edx    
0x7f95d65c5aee  mov %rbx, %rcx          
0x7f95d65c5af1  andq $0x7, %rcx         
0x7f95d65c5af5  cmpq $0x6, %rcx         
0x7f95d65c5af9  jnz 0x1ce3               ; 0x7f95d65c5cf3
0x7f95d65c5aff  mov $0x12, %ecx         
0x7f95d65c5b04  cmp $0x27, %edx         
0x7f95d65c5b07  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c5b0d  jmp 0x210a               ; 0x7f95d65c611a
0x7f95d65c5b12  cmp %rax, 0x8(%rbx)     
0x7f95d65c5b16  mov $0x12, %ecx         
0x7f95d65c5b1b  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c5b21  jmp 0x210a               ; 0x7f95d65c611a
0x7f95d65c5b26  mov $0x763170, %rax      ; rbx_raising_exception
0x7f95d65c5b30  mov %r14, %rdi          
0x7f95d65c5b33  callq *%rax             
0x7f95d65c5b35  testb $0x1, %al         
0x7f95d65c5b38  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5b3e  mov $0x7631c0, %rax      ; rbx_push_exception_state
0x7f95d65c5b48  mov %r14, %rdi          
0x7f95d65c5b4b  callq *%rax             
0x7f95d65c5b4d  mov %rax, -0xc0(%rbp)   
0x7f95d65c5b54  mov %rax, -0x78(%rbp)   
0x7f95d65c5b58  mov $0x763190, %rax      ; rbx_current_exception
0x7f95d65c5b62  mov %r14, %rdi          
0x7f95d65c5b65  callq *%rax             
0x7f95d65c5b67  mov %rax, %r15          
0x7f95d65c5b6a  mov %r15, -0xc0(%rbp)   
0x7f95d65c5b71  mov %r15, -0xb8(%rbp)   
0x7f95d65c5b78  mov 0x176dea8, %rax     
0x7f95d65c5b80  mov 0x30(%rax), %rcx    
0x7f95d65c5b84  mov -0x100(%rbp), %rbx  
0x7f95d65c5b8b  cmp %rbx, %rcx          
0x7f95d65c5b8e  jnz 0x1d08               ; 0x7f95d65c5d18
0x7f95d65c5b94  mov 0x15824f4, %ecx     
0x7f95d65c5b9b  cmp 0x44(%rax), %ecx    
0x7f95d65c5b9e  jnz 0x1d08               ; 0x7f95d65c5d18
0x7f95d65c5ba4  mov 0x20(%rax), %rax    
0x7f95d65c5ba8  jmp 0x1d36               ; 0x7f95d65c5d46
0x7f95d65c5bad  mov %rax, -0x50(%rbp)   
0x7f95d65c5bb1  movq $0x55e, -0x58(%rbp)
0x7f95d65c5bb9  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5bc1  mov $0x1, -0x40(%rbp)   
0x7f95d65c5bc8  movq $0x0, -0x30(%rbp)  
0x7f95d65c5bd0  lea -0xb0(%rbp), %rax   
0x7f95d65c5bd7  mov %rax, -0x38(%rbp)   
0x7f95d65c5bdb  mov 0x176e298, %rsi     
0x7f95d65c5be3  mov 0x20(%rsi), %rax    
0x7f95d65c5be7  mov $0x22c, -0xe4(%rbp) 
0x7f95d65c5bf1  lea -0x108(%rbp), %rdx  
0x7f95d65c5bf8  lea -0x58(%rbp), %rcx   
0x7f95d65c5bfc  mov %r14, %rdi          
0x7f95d65c5bff  callq *%rax             
0x7f95d65c5c01  test %rax, %rax         
0x7f95d65c5c04  jnz 0x1c0e               ; 0x7f95d65c5c1e
0x7f95d65c5c0a  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c5c0f  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c5c19  mov %r14, %rdi          
0x7f95d65c5c1c  callq *%rax             
0x7f95d65c5c1e  mov %rax, -0xb8(%rbp)   
0x7f95d65c5c25  mov -0x118(%rbp), %r8   
0x7f95d65c5c2c  mov %r8, -0xb0(%rbp)    
0x7f95d65c5c33  mov -0xc0(%rbp), %rdx   
0x7f95d65c5c3a  testb $0x3, %dl         
0x7f95d65c5c3d  jnz 0x1c81               ; 0x7f95d65c5c91
0x7f95d65c5c43  mov 0x8(%rdx), %rcx     
0x7f95d65c5c47  cmp $0x6, 0x70(%rcx)    
0x7f95d65c5c4b  jnz 0x1c81               ; 0x7f95d65c5c91
0x7f95d65c5c51  cmp $0xf3, 0x74(%rcx)   
0x7f95d65c5c58  jnz 0x1da2               ; 0x7f95d65c5db2
0x7f95d65c5c5e  mov $0x5d67c0, %rbx      ; jit_stub_array_new_range
0x7f95d65c5c68  lea -0x108(%rbp), %rsi  
0x7f95d65c5c6f  mov %r14, %rdi          
0x7f95d65c5c72  mov %rax, %rcx          
0x7f95d65c5c75  callq *%rbx             
0x7f95d65c5c77  test %rax, %rax         
0x7f95d65c5c7a  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5c80  cmpq $0x22, %rax        
0x7f95d65c5c84  jnz 0x1cd7               ; 0x7f95d65c5ce7
0x7f95d65c5c8a  mov -0xc0(%rbp), %rdx   
0x7f95d65c5c91  mov %rdx, -0x50(%rbp)   
0x7f95d65c5c95  movq $0x3ba6, -0x58(%rbp)
0x7f95d65c5c9d  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5ca5  mov $0x2, -0x40(%rbp)   
0x7f95d65c5cac  movq $0x0, -0x30(%rbp)  
0x7f95d65c5cb4  mov %r12, -0x38(%rbp)   
0x7f95d65c5cb8  mov 0x176e2c8, %rsi     
0x7f95d65c5cc0  mov 0x20(%rsi), %rax    
0x7f95d65c5cc4  mov $0x232, -0xe4(%rbp) 
0x7f95d65c5cce  lea -0x108(%rbp), %rdx  
0x7f95d65c5cd5  lea -0x58(%rbp), %rcx   
0x7f95d65c5cd9  mov %r14, %rdi          
0x7f95d65c5cdc  callq *%rax             
0x7f95d65c5cde  test %rax, %rax         
0x7f95d65c5ce1  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5ce7  mov %rax, -0xc0(%rbp)   
0x7f95d65c5cee  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c5cf3  testb $0x1, %bl         
0x7f95d65c5cf6  jz 0x1dea                ; 0x7f95d65c5dfa
0x7f95d65c5cfc  mov $0x12, %ecx         
0x7f95d65c5d01  cmp $0x23, %edx         
0x7f95d65c5d04  jz 0x210a                ; 0x7f95d65c611a
0x7f95d65c5d0a  cmp $0x25, %edx         
0x7f95d65c5d0d  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c5d13  jmp 0x210a               ; 0x7f95d65c611a
0x7f95d65c5d18  mov $0x1ae, -0xe4(%rbp) 
0x7f95d65c5d22  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c5d2c  lea -0x108(%rbp), %rsi  
0x7f95d65c5d33  mov $0x176dea8, %edx    
0x7f95d65c5d38  mov %r14, %rdi          
0x7f95d65c5d3b  callq *%rax             
0x7f95d65c5d3d  test %rax, %rax         
0x7f95d65c5d40  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5d46  mov %rax, -0xb0(%rbp)   
0x7f95d65c5d4d  mov 0x176deb8, %rcx     
0x7f95d65c5d55  cmp %rbx, 0x30(%rcx)    
0x7f95d65c5d59  jnz 0x1d69               ; 0x7f95d65c5d79
0x7f95d65c5d5f  mov 0x15824f4, %edx     
0x7f95d65c5d66  cmp 0x44(%rcx), %edx    
0x7f95d65c5d69  jnz 0x1d69               ; 0x7f95d65c5d79
0x7f95d65c5d6f  cmp %rax, 0x28(%rcx)    
0x7f95d65c5d73  jz 0x200e                ; 0x7f95d65c601e
0x7f95d65c5d79  mov $0x1b0, -0xe4(%rbp) 
0x7f95d65c5d83  mov $0x7622f0, %rbx      ; rbx_find_const_fast
0x7f95d65c5d8d  lea -0x108(%rbp), %rcx  
0x7f95d65c5d94  mov $0x176deb8, %edx    
0x7f95d65c5d99  mov %r14, %rdi          
0x7f95d65c5d9c  mov %rcx, %rsi          
0x7f95d65c5d9f  mov %rax, %rcx          
0x7f95d65c5da2  callq *%rbx             
0x7f95d65c5da4  test %rax, %rax         
0x7f95d65c5da7  jnz 0x2012               ; 0x7f95d65c6022
0x7f95d65c5dad  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c5db2  mov $0x232, -0xe4(%rbp) 
0x7f95d65c5dbc  mov $0x7f95bc0008f0, %rax
0x7f95d65c5dc6  mov %rax, (%rsp)        
0x7f95d65c5dca  mov $0x1, 0x10(%rsp)    
0x7f95d65c5dd2  mov $0x0, 0x8(%rsp)     
0x7f95d65c5dda  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c5de4  lea -0x108(%rbp), %rsi  
0x7f95d65c5deb  mov $0x232, %edx        
0x7f95d65c5df0  mov $0x2, %ecx          
0x7f95d65c5df5  jmp 0xd2d                ; 0x7f95d65c4d3d
0x7f95d65c5dfa  cmpq $0xa, %rbx         
0x7f95d65c5dfe  jz 0x20c7                ; 0x7f95d65c60d7
0x7f95d65c5e04  cmpq $0x12, %rbx        
0x7f95d65c5e08  jnz 0x20da               ; 0x7f95d65c60ea
0x7f95d65c5e0e  mov $0x12, %ecx         
0x7f95d65c5e13  cmp $0x1d, %edx         
0x7f95d65c5e16  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c5e1c  jmp 0x210a               ; 0x7f95d65c611a
0x7f95d65c5e21  mov 0x20(%rcx), %rax    
0x7f95d65c5e25  mov %rax, -0xb8(%rbp)   
0x7f95d65c5e2c  mov %r15, -0xb0(%rbp)   
0x7f95d65c5e33  mov %rax, -0x50(%rbp)   
0x7f95d65c5e37  movq $0x57e, -0x58(%rbp)
0x7f95d65c5e3f  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5e47  mov $0x1, -0x40(%rbp)   
0x7f95d65c5e4e  movq $0x0, -0x30(%rbp)  
0x7f95d65c5e56  mov %r12, -0x38(%rbp)   
0x7f95d65c5e5a  mov 0x176d510, %rsi     
0x7f95d65c5e62  mov 0x20(%rsi), %rax    
0x7f95d65c5e66  mov $0x7b, -0xe4(%rbp)  
0x7f95d65c5e70  lea -0x108(%rbp), %rdx  
0x7f95d65c5e77  lea -0x58(%rbp), %rcx   
0x7f95d65c5e7b  mov %r14, %rdi          
0x7f95d65c5e7e  callq *%rax             
0x7f95d65c5e80  test %rax, %rax         
0x7f95d65c5e83  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5e89  mov %rax, -0xb8(%rbp)   
0x7f95d65c5e90  andq $0xf, %rax         
0x7f95d65c5e94  cmpq $0xa, %rax         
0x7f95d65c5e98  jnz 0x1eb4               ; 0x7f95d65c5ec4
0x7f95d65c5e9e  mov -0x68(%rbp), %rdx   
0x7f95d65c5ea2  mov %rdx, -0xc0(%rbp)   
0x7f95d65c5ea9  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7f95d65c5eb3  lea -0x108(%rbp), %rsi  
0x7f95d65c5eba  mov %r14, %rdi          
0x7f95d65c5ebd  callq *%rax             
0x7f95d65c5ebf  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c5ec4  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c5ecf  mov -0x60(%rbp), %rdx   
0x7f95d65c5ed3  mov %rdx, -0xb8(%rbp)   
0x7f95d65c5eda  mov $0x7631e0, %rax      ; rbx_restore_exception_state
0x7f95d65c5ee4  lea -0x108(%rbp), %rsi  
0x7f95d65c5eeb  mov %r14, %rdi          
0x7f95d65c5eee  callq *%rax             
0x7f95d65c5ef0  mov -0xc0(%rbp), %rax   
0x7f95d65c5ef7  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c5efc  mov -0x110(%rbp), %rax  
0x7f95d65c5f03  mov %rax, -0xc0(%rbp)   
0x7f95d65c5f0a  mov -0x150(%rbp), %rcx  
0x7f95d65c5f11  mov 0x18(%rcx), %rcx    
0x7f95d65c5f15  mov %rcx, -0xb8(%rbp)   
0x7f95d65c5f1c  mov %rax, -0x50(%rbp)   
0x7f95d65c5f20  movq $0x55e, -0x58(%rbp)
0x7f95d65c5f28  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5f30  mov $0x1, -0x40(%rbp)   
0x7f95d65c5f37  movq $0x0, -0x30(%rbp)  
0x7f95d65c5f3f  mov %r12, -0x38(%rbp)   
0x7f95d65c5f43  mov 0x176d900, %rax     
0x7f95d65c5f4b  mov 0x20(%rax), %rbx    
0x7f95d65c5f4f  mov $0xf9, -0xe4(%rbp)  
0x7f95d65c5f59  lea -0x108(%rbp), %rcx  
0x7f95d65c5f60  lea -0x58(%rbp), %r8    
0x7f95d65c5f64  mov %r14, %rdi          
0x7f95d65c5f67  mov %rax, %rsi          
0x7f95d65c5f6a  mov %rcx, %rdx          
0x7f95d65c5f6d  mov %r8, %rcx           
0x7f95d65c5f70  callq *%rbx             
0x7f95d65c5f72  test %rax, %rax         
0x7f95d65c5f75  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5f7b  mov %rax, -0xc0(%rbp)   
0x7f95d65c5f82  mov %rax, -0x110(%rbp)  
0x7f95d65c5f89  mov -0x130(%rbp), %rax  
0x7f95d65c5f90  mov %rax, -0xc0(%rbp)   
0x7f95d65c5f97  mov %rax, -0x50(%rbp)   
0x7f95d65c5f9b  movq $0x497e, -0x58(%rbp)
0x7f95d65c5fa3  movq $0x1a, -0x48(%rbp) 
0x7f95d65c5fab  mov $0x0, -0x40(%rbp)   
0x7f95d65c5fb2  movq $0x0, -0x30(%rbp)  
0x7f95d65c5fba  mov 0x176d958, %rax     
0x7f95d65c5fc2  mov 0x20(%rax), %rbx    
0x7f95d65c5fc6  mov $0x104, -0xe4(%rbp) 
0x7f95d65c5fd0  lea -0x108(%rbp), %rcx  
0x7f95d65c5fd7  lea -0x58(%rbp), %r8    
0x7f95d65c5fdb  mov %r14, %rdi          
0x7f95d65c5fde  mov %rax, %rsi          
0x7f95d65c5fe1  mov %rcx, %rdx          
0x7f95d65c5fe4  mov %r8, %rcx           
0x7f95d65c5fe7  callq *%rbx             
0x7f95d65c5fe9  test %rax, %rax         
0x7f95d65c5fec  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c5ff2  mov %rax, -0xc0(%rbp)   
0x7f95d65c5ff9  andq $0xf, %rax         
0x7f95d65c5ffd  cmpq $0xa, %rax         
0x7f95d65c6001  jnz 0x21e2               ; 0x7f95d65c61f2
0x7f95d65c6007  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c6012  mov -0x110(%rbp), %rax  
0x7f95d65c6019  jmp 0x2268               ; 0x7f95d65c6278
0x7f95d65c601e  mov 0x20(%rcx), %rax    
0x7f95d65c6022  mov %rax, -0xb8(%rbp)   
0x7f95d65c6029  mov %r15, -0xb0(%rbp)   
0x7f95d65c6030  mov %rax, -0x50(%rbp)   
0x7f95d65c6034  movq $0x57e, -0x58(%rbp)
0x7f95d65c603c  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6044  mov $0x1, -0x40(%rbp)   
0x7f95d65c604b  movq $0x0, -0x30(%rbp)  
0x7f95d65c6053  lea -0xb0(%rbp), %rax   
0x7f95d65c605a  mov %rax, -0x38(%rbp)   
0x7f95d65c605e  mov 0x176ded0, %rax     
0x7f95d65c6066  mov 0x20(%rax), %rbx    
0x7f95d65c606a  mov $0x1b3, -0xe4(%rbp) 
0x7f95d65c6074  lea -0x108(%rbp), %rcx  
0x7f95d65c607b  lea -0x58(%rbp), %r8    
0x7f95d65c607f  mov %r14, %rdi          
0x7f95d65c6082  mov %rax, %rsi          
0x7f95d65c6085  mov %rcx, %rdx          
0x7f95d65c6088  mov %r8, %rcx           
0x7f95d65c608b  callq *%rbx             
0x7f95d65c608d  test %rax, %rax         
0x7f95d65c6090  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c6096  mov %rax, -0xb8(%rbp)   
0x7f95d65c609d  andq $0xf, %rax         
0x7f95d65c60a1  cmpq $0xa, %rax         
0x7f95d65c60a5  jnz 0x23d9               ; 0x7f95d65c63e9
0x7f95d65c60ab  mov -0x78(%rbp), %rax   
0x7f95d65c60af  mov %rax, -0xc0(%rbp)   
0x7f95d65c60b6  mov $0x7631e0, %rcx      ; rbx_restore_exception_state
0x7f95d65c60c0  lea -0x108(%rbp), %rdx  
0x7f95d65c60c7  mov %r14, %rdi          
0x7f95d65c60ca  mov %rdx, %rsi          
0x7f95d65c60cd  mov %rax, %rdx          
0x7f95d65c60d0  callq *%rcx             
0x7f95d65c60d2  jmp 0x24a6               ; 0x7f95d65c64b6
0x7f95d65c60d7  mov $0x12, %ecx         
0x7f95d65c60dc  cmp $0x1f, %edx         
0x7f95d65c60df  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c60e5  jmp 0x210a               ; 0x7f95d65c611a
0x7f95d65c60ea  cmpq $0x1a, %rbx        
0x7f95d65c60ee  jnz 0x20f2               ; 0x7f95d65c6102
0x7f95d65c60f4  mov $0x12, %ecx         
0x7f95d65c60f9  cmp $0x1b, %edx         
0x7f95d65c60fc  jz 0x210a                ; 0x7f95d65c611a
0x7f95d65c6102  mov $0x7626f0, %rcx      ; rbx_kind_of
0x7f95d65c610c  mov %r14, %rdi          
0x7f95d65c610f  mov %rbx, %rsi          
0x7f95d65c6112  mov %rax, %rdx          
0x7f95d65c6115  callq *%rcx             
0x7f95d65c6117  mov %rax, %rcx          
0x7f95d65c611a  mov %rcx, -0xb8(%rbp)   
0x7f95d65c6121  andq $0xf, %rcx         
0x7f95d65c6125  cmpq $0xa, %rcx         
0x7f95d65c6129  jnz 0x934                ; 0x7f95d65c4944
0x7f95d65c612f  mov 0x15840e0, %r15     
0x7f95d65c6137  mov %r15, -0xc0(%rbp)   
0x7f95d65c613e  mov %rbx, -0xb8(%rbp)   
0x7f95d65c6145  mov 0x176dcf0, %rax     
0x7f95d65c614d  cmp %r13, 0x30(%rax)    
0x7f95d65c6151  jnz 0x2160               ; 0x7f95d65c6170
0x7f95d65c6157  mov 0x15824f4, %ecx     
0x7f95d65c615e  cmp 0x44(%rax), %ecx    
0x7f95d65c6161  jnz 0x2160               ; 0x7f95d65c6170
0x7f95d65c6167  mov 0x20(%rax), %rax    
0x7f95d65c616b  jmp 0x218e               ; 0x7f95d65c619e
0x7f95d65c6170  mov $0x177, -0xe4(%rbp) 
0x7f95d65c617a  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c6184  lea -0x108(%rbp), %rsi  
0x7f95d65c618b  mov $0x176dcf0, %edx    
0x7f95d65c6190  mov %r14, %rdi          
0x7f95d65c6193  callq *%rax             
0x7f95d65c6195  test %rax, %rax         
0x7f95d65c6198  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c619e  mov %rax, -0xb0(%rbp)   
0x7f95d65c61a5  movq $0x398e, -0xa8(%rbp)
0x7f95d65c61b0  mov %r15, -0x50(%rbp)   
0x7f95d65c61b4  movq $0x3996, -0x58(%rbp)
0x7f95d65c61bc  movq $0x1a, -0x48(%rbp) 
0x7f95d65c61c4  mov $0x3, -0x40(%rbp)   
0x7f95d65c61cb  movq $0x0, -0x30(%rbp)  
0x7f95d65c61d3  mov %r12, -0x38(%rbp)   
0x7f95d65c61d7  mov 0x176dd10, %rsi     
0x7f95d65c61df  mov 0x20(%rsi), %rax    
0x7f95d65c61e3  mov $0x17b, -0xe4(%rbp) 
0x7f95d65c61ed  jmp 0x911                ; 0x7f95d65c4921
0x7f95d65c61f2  mov -0x110(%rbp), %rax  
0x7f95d65c61f9  mov %rax, -0xc0(%rbp)   
0x7f95d65c6200  movq $0x3, -0xb8(%rbp)  
0x7f95d65c620b  mov %rax, -0x50(%rbp)   
0x7f95d65c620f  movq $0x566, -0x58(%rbp)
0x7f95d65c6217  movq $0x1a, -0x48(%rbp) 
0x7f95d65c621f  mov $0x1, -0x40(%rbp)   
0x7f95d65c6226  movq $0x0, -0x30(%rbp)  
0x7f95d65c622e  mov %r12, -0x38(%rbp)   
0x7f95d65c6232  mov 0x176d998, %rax     
0x7f95d65c623a  mov 0x20(%rax), %rbx    
0x7f95d65c623e  mov $0x10c, -0xe4(%rbp) 
0x7f95d65c6248  lea -0x108(%rbp), %rcx  
0x7f95d65c624f  lea -0x58(%rbp), %r8    
0x7f95d65c6253  mov %r14, %rdi          
0x7f95d65c6256  mov %rax, %rsi          
0x7f95d65c6259  mov %rcx, %rdx          
0x7f95d65c625c  mov %r8, %rcx           
0x7f95d65c625f  callq *%rbx             
0x7f95d65c6261  test %rax, %rax         
0x7f95d65c6264  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c626a  mov %rax, -0xc0(%rbp)   
0x7f95d65c6271  mov %rax, -0x110(%rbp)  
0x7f95d65c6278  mov %rax, -0xc0(%rbp)   
0x7f95d65c627f  mov -0x120(%rbp), %rcx  
0x7f95d65c6286  mov %rcx, -0xb8(%rbp)   
0x7f95d65c628d  mov %rax, -0x50(%rbp)   
0x7f95d65c6291  movq $0x586, -0x58(%rbp)
0x7f95d65c6299  movq $0x1a, -0x48(%rbp) 
0x7f95d65c62a1  mov $0x1, -0x40(%rbp)   
0x7f95d65c62a8  movq $0x0, -0x30(%rbp)  
0x7f95d65c62b0  mov %r12, -0x38(%rbp)   
0x7f95d65c62b4  mov 0x176da00, %rax     
0x7f95d65c62bc  mov 0x20(%rax), %rbx    
0x7f95d65c62c0  mov $0x119, -0xe4(%rbp) 
0x7f95d65c62ca  lea -0x108(%rbp), %rcx  
0x7f95d65c62d1  lea -0x58(%rbp), %r8    
0x7f95d65c62d5  mov %r14, %rdi          
0x7f95d65c62d8  mov %rax, %rsi          
0x7f95d65c62db  mov %rcx, %rdx          
0x7f95d65c62de  mov %r8, %rcx           
0x7f95d65c62e1  callq *%rbx             
0x7f95d65c62e3  test %rax, %rax         
0x7f95d65c62e6  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c62ec  mov %rax, -0xc0(%rbp)   
0x7f95d65c62f3  andq $0xf, %rax         
0x7f95d65c62f7  cmpq $0xa, %rax         
0x7f95d65c62fb  jnz 0x2417               ; 0x7f95d65c6427
0x7f95d65c6301  mov -0x110(%rbp), %rax  
0x7f95d65c6308  mov %rax, -0xc0(%rbp)   
0x7f95d65c630f  mov -0x120(%rbp), %rcx  
0x7f95d65c6316  mov %rcx, -0xb8(%rbp)   
0x7f95d65c631d  mov %rax, -0x50(%rbp)   
0x7f95d65c6321  movq $0x566, -0x58(%rbp)
0x7f95d65c6329  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6331  mov $0x1, -0x40(%rbp)   
0x7f95d65c6338  movq $0x0, -0x30(%rbp)  
0x7f95d65c6340  mov %r12, -0x38(%rbp)   
0x7f95d65c6344  mov 0x176daa8, %rax     
0x7f95d65c634c  mov 0x20(%rax), %rbx    
0x7f95d65c6350  mov $0x12e, -0xe4(%rbp) 
0x7f95d65c635a  lea -0x108(%rbp), %rcx  
0x7f95d65c6361  lea -0x58(%rbp), %r8    
0x7f95d65c6365  mov %r14, %rdi          
0x7f95d65c6368  mov %rax, %rsi          
0x7f95d65c636b  mov %rcx, %rdx          
0x7f95d65c636e  mov %r8, %rcx           
0x7f95d65c6371  callq *%rbx             
0x7f95d65c6373  test %rax, %rax         
0x7f95d65c6376  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c637c  mov %rax, -0xc0(%rbp)   
0x7f95d65c6383  movq $0x3, -0xb8(%rbp)  
0x7f95d65c638e  mov %rax, -0x50(%rbp)   
0x7f95d65c6392  movq $0x55e, -0x58(%rbp)
0x7f95d65c639a  movq $0x1a, -0x48(%rbp) 
0x7f95d65c63a2  mov $0x1, -0x40(%rbp)   
0x7f95d65c63a9  movq $0x0, -0x30(%rbp)  
0x7f95d65c63b1  mov %r12, -0x38(%rbp)   
0x7f95d65c63b5  mov 0x176dac8, %rax     
0x7f95d65c63bd  mov 0x20(%rax), %rbx    
0x7f95d65c63c1  mov $0x132, -0xe4(%rbp) 
0x7f95d65c63cb  lea -0x108(%rbp), %rcx  
0x7f95d65c63d2  lea -0x58(%rbp), %r8    
0x7f95d65c63d6  mov %r14, %rdi          
0x7f95d65c63d9  mov %rax, %rsi          
0x7f95d65c63dc  mov %rcx, %rdx          
0x7f95d65c63df  mov %r8, %rcx           
0x7f95d65c63e2  callq *%rbx             
0x7f95d65c63e4  jmp 0x921                ; 0x7f95d65c4931
0x7f95d65c63e9  movq $0x1a, -0xc0(%rbp) 
0x7f95d65c63f4  mov -0x70(%rbp), %rax   
0x7f95d65c63f8  mov %rax, -0xb8(%rbp)   
0x7f95d65c63ff  mov $0x7631e0, %rcx      ; rbx_restore_exception_state
0x7f95d65c6409  lea -0x108(%rbp), %rdx  
0x7f95d65c6410  mov %r14, %rdi          
0x7f95d65c6413  mov %rdx, %rsi          
0x7f95d65c6416  mov %rax, %rdx          
0x7f95d65c6419  callq *%rcx             
0x7f95d65c641b  mov -0xc0(%rbp), %rax   
0x7f95d65c6422  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c6427  mov -0x150(%rbp), %rax  
0x7f95d65c642e  mov %rax, -0xc0(%rbp)   
0x7f95d65c6435  movq $0x1, -0xb8(%rbp)  
0x7f95d65c6440  movq $0x1, -0xb0(%rbp)  
0x7f95d65c644b  mov %rax, -0x50(%rbp)   
0x7f95d65c644f  movq $0x3ba6, -0x58(%rbp)
0x7f95d65c6457  movq $0x1a, -0x48(%rbp) 
0x7f95d65c645f  mov $0x2, -0x40(%rbp)   
0x7f95d65c6466  movq $0x0, -0x30(%rbp)  
0x7f95d65c646e  mov %r12, -0x38(%rbp)   
0x7f95d65c6472  mov 0x176da48, %rax     
0x7f95d65c647a  mov 0x20(%rax), %rbx    
0x7f95d65c647e  mov $0x122, -0xe4(%rbp) 
0x7f95d65c6488  lea -0x108(%rbp), %rcx  
0x7f95d65c648f  lea -0x58(%rbp), %r8    
0x7f95d65c6493  mov %r14, %rdi          
0x7f95d65c6496  mov %rax, %rsi          
0x7f95d65c6499  mov %rcx, %rdx          
0x7f95d65c649c  mov %r8, %rcx           
0x7f95d65c649f  callq *%rbx             
0x7f95d65c64a1  test %rax, %rax         
0x7f95d65c64a4  jz 0x24a6                ; 0x7f95d65c64b6
0x7f95d65c64aa  mov %rax, -0xc0(%rbp)   
0x7f95d65c64b1  jmp 0x24d8               ; 0x7f95d65c64e8
0x7f95d65c64b6  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c64c0  lea -0x108(%rbp), %rsi  
0x7f95d65c64c7  mov %r14, %rdi          
0x7f95d65c64ca  callq *%rax             
0x7f95d65c64cc  mov %al, %cl            
0x7f95d65c64ce  xor %eax, %eax          
0x7f95d65c64d0  testb $0x1, %cl         
0x7f95d65c64d3  jz 0x24d8                ; 0x7f95d65c64e8
0x7f95d65c64d9  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c64e3  mov %r14, %rdi          
0x7f95d65c64e6  callq *%rax             
0x7f95d65c64e8  addq $0x158, %rsp       
0x7f95d65c64ef  pop %rbx                
0x7f95d65c64f0  pop %r12                
0x7f95d65c64f2  pop %r13                
0x7f95d65c64f4  pop %r14                
0x7f95d65c64f6  pop %r15                
0x7f95d65c64f8  pop %rbp                
0x7f95d65c64f9  ret                     
[[[ LLVM Simple IR: _X_Object#vector_times_array@2 ]]]

define %"struct.rubinius::Object"* @"_X_Object#vector_times_array@2"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !17
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !17
  %counter2 = alloca i32, !dbg !17
  %valid_flag = alloca i1, !dbg !17
  %cfstk = alloca %"struct.rubinius::Object"*, i32 18, !dbg !17
  %var_mem = alloca %"struct.rubinius::Object"*, i32 11, !dbg !17
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !17
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !17
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !17
  %arg.total = load i32* %total_pos, !dbg !17
  %arg_cmp = icmp ne i32 %arg.total, 1, !dbg !17
  %cfstk167 = alloca %"struct.rubinius::Object"*, i32 15
  %var_mem170 = alloca %"struct.rubinius::Object"*, i32 8
  %cfstk762 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem765 = alloca %"struct.rubinius::Object"*, i32 7
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !17

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !17
  br label %return_pad, !dbg !17

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !17
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !17
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !17
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !17
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !17
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !17
  store i8* null, i8** %3, !dbg !17
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !17
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !17
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !17
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !17
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !17
  store i32 40, i32* %5, !dbg !17
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  store i32 0, i32* %6, !dbg !17
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !17
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !17
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !17
  store i8* inttoptr (i64 140281080988304 to i8*), i8** %8, !dbg !17
  store i32 0, i32* %counter_alloca, !dbg !17
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !17
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !17
  %added = add i32 %counter, 1, !dbg !17
  store i32 %added, i32* %counter_alloca, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !17
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !17
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !17, !rbx-classid !18
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !17
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !17
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !17
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !17
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !17
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !17
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !17
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !17
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !17
  %local_pos1 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos1, !dbg !17
  %local_pos2 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2, !dbg !17
  %local_pos3 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos3, !dbg !17
  %local_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos4, !dbg !17
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !17
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !17
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !17
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !17
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !19
  %vm_jit903 = load %"struct.rubinius::VMJIT"** %17, !dbg !19
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i32 0, i32 1, !dbg !19
  %stack_limit = load i64* %18, !dbg !19
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !19
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !19
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i32 0, i32 5, !dbg !19
  %check_interrupts904 = load i8* %20, !dbg !19
  %check_global_interrupts905 = load i8* inttoptr (i64 22553854 to i8*), !dbg !19
  %has_interrupts = or i8 %check_interrupts904, %check_global_interrupts905, !dbg !19
  %needs_interrupts906 = icmp ne i8 %has_interrupts, 0, !dbg !19
  %needs_check = or i1 %needs_interrupts906, %19, !dbg !19
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !19

bail_out:                                         ; preds = %interrupts884, %class_fallback842, %return_pad754, %interrupts, %class_fallback681, %class_fallback584, %class_fallback524, %continue152, %return_pad158, %class_fallback109, %use_call96, %class_fallback, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !17

method_body:                                      ; preds = %prologue_check, %bottom
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !17
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %constant = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 0, %"struct.rubinius::Object"** %stack_pos5), !dbg !20, !rbx-classid !21
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos6, !dbg !20
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, !dbg !20
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %21 = getelementptr %"struct.rubinius::Object"** %stack_pos8, i32 0, !dbg !20
  %22 = load %"struct.rubinius::Object"** %21, !dbg !20
  %stack_pos9 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %22, %"struct.rubinius::Object"** %stack_pos9, !dbg !20
  %23 = getelementptr %"struct.rubinius::Object"** %stack_pos8, i32 1, !dbg !20
  %24 = load %"struct.rubinius::Object"** %23, !dbg !20
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !20
  store %"struct.rubinius::Object"* %24, %"struct.rubinius::Object"** %stack_pos10, !dbg !20
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %constant12 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos11), !dbg !20, !rbx-classid !21
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %constant12, %"struct.rubinius::Object"** %stack_pos13, !dbg !20
  %stack_pos14 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %stack_load = load %"struct.rubinius::Object"** %stack_pos14, !dbg !20, !rbx-classid !21
  %stack_pos15 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_load16 = load %"struct.rubinius::Object"** %stack_pos15, !dbg !20, !rbx-classid !22
  %stack_pos17 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %stack_load16, %"struct.rubinius::Object"** %stack_pos17, !dbg !20
  %stack_pos18 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %stack_load19 = load %"struct.rubinius::Object"** %stack_pos18, !dbg !20, !rbx-classid !21
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %stack_pos20, !dbg !20
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %stack_load, %"struct.rubinius::Object"** %stack_pos21, !dbg !20
  %stack_pos22 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %rotate = load %"struct.rubinius::Object"** %stack_pos22, !dbg !20
  %rotate24 = load %"struct.rubinius::Object"** %stack_pos23, !dbg !20
  %stack_pos25 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* %rotate24, %"struct.rubinius::Object"** %stack_pos25, !dbg !20
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %rotate, %"struct.rubinius::Object"** %stack_pos26, !dbg !20
  %local_pos27 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !20
  %stack_pos28 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %stack_load29 = load %"struct.rubinius::Object"** %stack_pos28, !dbg !20
  store %"struct.rubinius::Object"* %stack_load29, %"struct.rubinius::Object"** %local_pos27, !dbg !20
  %local_pos30 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !20
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !20
  store %"struct.rubinius::Object"* %stack_load32, %"struct.rubinius::Object"** %local_pos30, !dbg !20
  br label %ip18, !dbg !20

ip18:                                             ; preds = %done885, %method_body
  %local_pos33 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !23
  %local = load %"struct.rubinius::Object"** %local_pos33, !dbg !23, !rbx-classid !24
  %stack_pos34 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos34, !dbg !23
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), !dbg !23
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23495592 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !23
  %constant_scope35 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !23
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !23
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope35, %frame_scope, !dbg !23
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !23

check_serial:                                     ; preds = %ip18
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !23
  %serial = load i32* %serial_pos, !dbg !23
  %use_cache36 = icmp eq i32 %global_serial, %serial, !dbg !23
  br i1 %use_cache36, label %use_cache, label %use_call, !dbg !23

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !23
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !23
  br label %continue, !dbg !23

use_call:                                         ; preds = %check_serial, %ip18
  store i32 20, i32* %ip_pos, !dbg !23
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23495592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !23
  br i1 %null_check, label %bail_out, label %check_active, !dbg !23

continue:                                         ; preds = %continue37, %use_cache
  %constant38 = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue37 ], !dbg !23, !rbx-classid !25
  %stack_pos39 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %constant38, %"struct.rubinius::Object"** %stack_pos39, !dbg !23
  %stack_pos41 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load42 = load %"struct.rubinius::Object"** %stack_pos41, !dbg !23, !rbx-classid !24
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load42 to i64, !dbg !23
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load44 = load %"struct.rubinius::Object"** %stack_pos43, !dbg !23, !rbx-classid !25
  %cast45 = ptrtoint %"struct.rubinius::Object"* %stack_load44 to i64, !dbg !23
  %fixnums_anded = and i64 %cast, %cast45
  %masked = and i64 %fixnums_anded, 1
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !23
  br i1 %is_fixnum, label %push_le, label %class_fallback, !dbg !23

continue37:                                       ; preds = %check_active
  br label %continue, !dbg !23

check_active:                                     ; preds = %use_call
  br label %continue37, !dbg !23

class_fallback:                                   ; preds = %continue
  %stack_pos46 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load47 = load %"struct.rubinius::Object"** %stack_pos46, !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %stack_load47, %"struct.rubinius::Object"** %out_args_recv, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !23
  store i32 1, i32* %out_args_total, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !23
  %stack_pos48 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos48, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !23
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23495608 to %"struct.rubinius::CallSite"**), !dbg !23
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !23
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !23
  store i32 22, i32* %ip_pos, !dbg !23
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check50 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !23
  br i1 %null_check50, label %bail_out, label %check_active49, !dbg !23

serial_fallback:                                  ; No predecessors!
  store i32 22, i32* %ip_pos, !dbg !23
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 22, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !23
  br label %return_pad, !dbg !23

continue40:                                       ; preds = %check_active49, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %26, %push_le ], [ %call_site_execute, %check_active49 ], !dbg !23
  %stack_pos51 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos51, !dbg !23
  %stack_pos52 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load53 = load %"struct.rubinius::Object"** %stack_pos52, !dbg !23
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load53 to i64, !dbg !23
  %and = and i64 %as_int, 15, !dbg !23
  %is_true = icmp eq i64 %and, 10, !dbg !23
  br i1 %is_true, label %ip114, label %continue54, !dbg !23

push_le:                                          ; preds = %continue
  %fixnum.lt = icmp slt i64 %cast, %cast45, !dbg !23
  %26 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue40, !dbg !23

check_active49:                                   ; preds = %class_fallback
  br label %continue40, !dbg !23

continue54:                                       ; preds = %continue40
  br label %ip27, !dbg !23

ip27:                                             ; preds = %continue54
  %stack_pos55 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos55, !dbg !26
  %stack_pos56 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos56, !dbg !26
  %stack_pos57 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %27 = getelementptr %"struct.rubinius::Object"** %stack_pos57, i32 0, !dbg !26
  %28 = load %"struct.rubinius::Object"** %27, !dbg !26
  %stack_pos58 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %28, %"struct.rubinius::Object"** %stack_pos58, !dbg !26
  %29 = getelementptr %"struct.rubinius::Object"** %stack_pos57, i32 1, !dbg !26
  %30 = load %"struct.rubinius::Object"** %29, !dbg !26
  %stack_pos59 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !26
  store %"struct.rubinius::Object"* %30, %"struct.rubinius::Object"** %stack_pos59, !dbg !26
  %stack_pos60 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %constant61 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos60), !dbg !26, !rbx-classid !21
  %stack_pos62 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %constant61, %"struct.rubinius::Object"** %stack_pos62, !dbg !26
  %stack_pos63 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %stack_load64 = load %"struct.rubinius::Object"** %stack_pos63, !dbg !26, !rbx-classid !21
  %stack_pos65 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_load66 = load %"struct.rubinius::Object"** %stack_pos65, !dbg !26, !rbx-classid !22
  %stack_pos67 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %stack_load66, %"struct.rubinius::Object"** %stack_pos67, !dbg !26
  %stack_pos68 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load69 = load %"struct.rubinius::Object"** %stack_pos68, !dbg !26, !rbx-classid !22
  %stack_pos70 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %stack_pos70, !dbg !26
  %stack_pos71 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %stack_load64, %"struct.rubinius::Object"** %stack_pos71, !dbg !26
  %stack_pos72 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_pos73 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %rotate74 = load %"struct.rubinius::Object"** %stack_pos72, !dbg !26
  %rotate75 = load %"struct.rubinius::Object"** %stack_pos73, !dbg !26
  %stack_pos76 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %rotate75, %"struct.rubinius::Object"** %stack_pos76, !dbg !26
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %rotate74, %"struct.rubinius::Object"** %stack_pos77, !dbg !26
  %local_pos78 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !26
  %stack_pos79 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %stack_load80 = load %"struct.rubinius::Object"** %stack_pos79, !dbg !26
  store %"struct.rubinius::Object"* %stack_load80, %"struct.rubinius::Object"** %local_pos78, !dbg !26
  %local_pos81 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !26
  %stack_pos82 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_load83 = load %"struct.rubinius::Object"** %stack_pos82, !dbg !26
  store %"struct.rubinius::Object"* %stack_load83, %"struct.rubinius::Object"** %local_pos81, !dbg !26
  br label %ip44, !dbg !26

ip44:                                             ; preds = %done, %ip27
  %local_pos84 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !27
  %local85 = load %"struct.rubinius::Object"** %local_pos84, !dbg !27, !rbx-classid !28
  %stack_pos86 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local85, %"struct.rubinius::Object"** %stack_pos86, !dbg !27
  %global_serial87 = load i32* inttoptr (i64 22553844 to i32*), !dbg !27
  %constant_cache88 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23495800 to %"struct.rubinius::ConstantCache"**), !dbg !27
  %constant_cache_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 4, !dbg !27
  %constant_scope90 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos89, !dbg !27
  %scope_pos91 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !27
  %frame_scope92 = load %"struct.rubinius::ConstantScope"** %scope_pos91, !dbg !27
  %same_scope93 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope90, %frame_scope92, !dbg !27
  br i1 %same_scope93, label %check_serial94, label %use_call96, !dbg !27

check_serial94:                                   ; preds = %ip44
  %serial_pos98 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 7, !dbg !27
  %serial99 = load i32* %serial_pos98, !dbg !27
  %use_cache100 = icmp eq i32 %global_serial87, %serial99, !dbg !27
  br i1 %use_cache100, label %use_cache95, label %use_call96, !dbg !27

use_cache95:                                      ; preds = %check_serial94
  %value_pos101 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 2, !dbg !27
  %cached_value102 = load %"struct.rubinius::Object"** %value_pos101, !dbg !27
  br label %continue97, !dbg !27

use_call96:                                       ; preds = %check_serial94, %ip44
  store i32 46, i32* %ip_pos, !dbg !27
  %push_const_fast103 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23495800 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast103, null, !dbg !27
  br i1 %null_check106, label %bail_out, label %check_active105, !dbg !27

continue97:                                       ; preds = %continue104, %use_cache95
  %constant107 = phi %"struct.rubinius::Object"* [ %cached_value102, %use_cache95 ], [ %push_const_fast103, %continue104 ], !dbg !27, !rbx-classid !29
  %stack_pos108 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %constant107, %"struct.rubinius::Object"** %stack_pos108, !dbg !27
  %stack_pos112 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load113 = load %"struct.rubinius::Object"** %stack_pos112, !dbg !27, !rbx-classid !28
  %cast114 = ptrtoint %"struct.rubinius::Object"* %stack_load113 to i64, !dbg !27
  %stack_pos115 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load116 = load %"struct.rubinius::Object"** %stack_pos115, !dbg !27, !rbx-classid !29
  %cast117 = ptrtoint %"struct.rubinius::Object"* %stack_load116 to i64, !dbg !27
  %fixnums_anded118 = and i64 %cast114, %cast117
  %masked119 = and i64 %fixnums_anded118, 1
  %is_fixnum120 = icmp eq i64 %masked119, 1, !dbg !27
  br i1 %is_fixnum120, label %push_le121, label %class_fallback109, !dbg !27

continue104:                                      ; preds = %check_active105
  br label %continue97, !dbg !27

check_active105:                                  ; preds = %use_call96
  br label %continue104, !dbg !27

class_fallback109:                                ; preds = %continue97
  %stack_pos123 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load124 = load %"struct.rubinius::Object"** %stack_pos123, !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load124, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 1, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %stack_pos125 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos125, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !27
  %cache_const126 = load %"struct.rubinius::CallSite"** inttoptr (i64 23495816 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos127 = getelementptr %"struct.rubinius::CallSite"* %cache_const126, i32 0, i32 2, !dbg !27
  %execute128 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos127, !dbg !27
  store i32 48, i32* %ip_pos, !dbg !27
  %call_site_execute129 = call %"struct.rubinius::Object"* %execute128(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const126, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check131 = icmp eq %"struct.rubinius::Object"* %call_site_execute129, null, !dbg !27
  br i1 %null_check131, label %bail_out, label %check_active130, !dbg !27

serial_fallback110:                               ; No predecessors!
  store i32 48, i32* %ip_pos, !dbg !27
  %31 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 48, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue111:                                      ; preds = %check_active130, %push_le121
  %send_result132 = phi %"struct.rubinius::Object"* [ %32, %push_le121 ], [ %call_site_execute129, %check_active130 ], !dbg !27
  %stack_pos133 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result132, %"struct.rubinius::Object"** %stack_pos133, !dbg !27
  %stack_pos134 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load135 = load %"struct.rubinius::Object"** %stack_pos134, !dbg !27
  %as_int136 = ptrtoint %"struct.rubinius::Object"* %stack_load135 to i64, !dbg !27
  %and137 = and i64 %as_int136, 15, !dbg !27
  %is_true138 = icmp eq i64 %and137, 10, !dbg !27
  br i1 %is_true138, label %ip92, label %continue139, !dbg !27

push_le121:                                       ; preds = %continue97
  %fixnum.lt122 = icmp slt i64 %cast114, %cast117, !dbg !27
  %32 = select i1 %fixnum.lt122, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !27
  br label %continue111, !dbg !27

check_active130:                                  ; preds = %class_fallback109
  br label %continue111, !dbg !27

continue139:                                      ; preds = %continue111
  br label %ip53, !dbg !27

ip53:                                             ; preds = %continue139
  %local_pos140 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !30
  %local141 = load %"struct.rubinius::Object"** %local_pos140, !dbg !30, !rbx-classid !31
  %stack_pos142 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local141, %"struct.rubinius::Object"** %stack_pos142, !dbg !30
  %33 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self = load %"struct.rubinius::Object"** %33, !dbg !30
  %stack_pos143 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos143, !dbg !30
  %local_pos144 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !30
  %local145 = load %"struct.rubinius::Object"** %local_pos144, !dbg !30, !rbx-classid !24
  %stack_pos146 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos146, !dbg !30
  %local_pos147 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !30
  %local148 = load %"struct.rubinius::Object"** %local_pos147, !dbg !30, !rbx-classid !28
  %stack_pos149 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos149, !dbg !30
  %stack_pos153 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load154 = load %"struct.rubinius::Object"** %stack_pos153, !dbg !30
  %cast155 = ptrtoint %"struct.rubinius::Object"* %stack_load154 to i64, !dbg !30
  %masked156 = and i64 %cast155, 3, !dbg !30
  %is_reference = icmp eq i64 %masked156, 0, !dbg !30
  br i1 %is_reference, label %check_class_id, label %class_fallback150, !dbg !30

continue152:                                      ; preds = %continue500
  %local_pos504 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !30
  %local505 = load %"struct.rubinius::Object"** %local_pos504, !dbg !30, !rbx-classid !32
  %stack_pos506 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %stack_pos506, !dbg !30
  %local_pos507 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !30
  %local508 = load %"struct.rubinius::Object"** %local_pos507, !dbg !30, !rbx-classid !28
  %stack_pos509 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"* %local508, %"struct.rubinius::Object"** %stack_pos509, !dbg !30
  %stack_pos513 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load514 = load %"struct.rubinius::Object"** %stack_pos513, !dbg !30, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load514, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos515 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos515, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const516 = load %"struct.rubinius::CallSite"** inttoptr (i64 23495976 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos517 = getelementptr %"struct.rubinius::CallSite"* %cache_const516, i32 0, i32 2, !dbg !30
  %execute518 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos517, !dbg !30
  store i32 68, i32* %ip_pos, !dbg !30
  %call_site_execute519 = call %"struct.rubinius::Object"* %execute518(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const516, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check522 = icmp eq %"struct.rubinius::Object"* %call_site_execute519, null, !dbg !30
  br i1 %null_check522, label %bail_out, label %check_active521, !dbg !30

check_class_id:                                   ; preds = %ip53
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load154, i32 0, i32 0, i32 1, !dbg !30
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !30
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !30
  %class_id = load i32* %class_id_pos, !dbg !30
  %check_class_id157 = icmp eq i32 %class_id, 683, !dbg !30
  br i1 %check_class_id157, label %correct_class, label %class_fallback150, !dbg !30

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !30
  %serial_id = load i32* %serial_id_pos, !dbg !30
  %check_serial_id = icmp eq i32 %serial_id, 23, !dbg !30
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback151, !dbg !30

class_fallback150:                                ; preds = %check_class_id, %ip53
  store i32 61, i32* %ip_pos, !dbg !30
  %34 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 0), !dbg !30
  br label %return_pad, !dbg !30

correct_serial:                                   ; preds = %correct_class
  %stack_pos160 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load161 = load %"struct.rubinius::Object"** %stack_pos160, !dbg !30, !rbx-classid !24
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  %stack_load163 = load %"struct.rubinius::Object"** %stack_pos162, !dbg !30, !rbx-classid !28
  %stack_pos164 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load165 = load %"struct.rubinius::Object"** %stack_pos164, !dbg !30
  br label %inline_entry, !dbg !30

serial_fallback151:                               ; preds = %correct_class
  store i32 61, i32* %ip_pos, !dbg !30
  %35 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

inline_entry:                                     ; preds = %correct_serial
  %call_frame168 = bitcast %"struct.rubinius::Object"** %cfstk167 to %"struct.rubinius::CallFrame"*, !dbg !33
  %stack169 = getelementptr %"struct.rubinius::Object"** %cfstk167, i32 9, !dbg !33
  %vars171 = bitcast %"struct.rubinius::Object"** %var_mem170 to %"struct.rubinius::StackVariables"*, !dbg !33
  %36 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 0, !dbg !33
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %36, !dbg !33
  %37 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 2, !dbg !33
  store i8* inttoptr (i64 140281081644832 to i8*), i8** %37, !dbg !33
  %compiled_code172 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081644832 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !33
  %38 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 3, !dbg !33
  store %"struct.rubinius::CompiledCode"* %compiled_code172, %"struct.rubinius::CompiledCode"** %38, !dbg !33
  %constant_scope_pos173 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code172, i32 0, i32 13, !dbg !33
  %constant_scope174 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos173, !dbg !33
  %39 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 1, !dbg !33
  store %"struct.rubinius::ConstantScope"* %constant_scope174, %"struct.rubinius::ConstantScope"** %39, !dbg !33
  %40 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 4, !dbg !33
  store i32 12, i32* %40, !dbg !33
  %41 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 5, !dbg !33
  store i32 0, i32* %41, !dbg !33
  %42 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 8, !dbg !33
  store %"struct.rubinius::StackVariables"* %vars171, %"struct.rubinius::StackVariables"** %42, !dbg !33
  store i32 0, i32* %counter_alloca, !dbg !33
  br label %stack_nil175, !dbg !33

stack_nil175:                                     ; preds = %stack_nil175, %inline_entry
  %counter177 = load i32* %counter_alloca, !dbg !33
  %stack_pos178 = getelementptr %"struct.rubinius::Object"** %stack169, i32 %counter177, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos178, !dbg !33
  %added179 = add i32 %counter177, 1, !dbg !33
  store i32 %added179, i32* %counter_alloca, !dbg !33
  %loop_check180 = icmp eq i32 %added179, 6, !dbg !33
  br i1 %loop_check180, label %bottom176, label %stack_nil175, !dbg !33

bottom176:                                        ; preds = %stack_nil175
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081644832 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !33
  %43 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 0, !dbg !33
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %43, !dbg !33
  %44 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 2, !dbg !33
  store %"struct.rubinius::Object"* %stack_load165, %"struct.rubinius::Object"** %44, !dbg !33
  %45 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 4, !dbg !33
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %45, !dbg !33
  %46 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 3, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %46, !dbg !33
  %47 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 1, !dbg !33
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %47, !dbg !33
  %48 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 5, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %48, !dbg !33
  %local_pos181 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos181, !dbg !33
  %local_pos182 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos182, !dbg !33
  %local_pos183 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %stack_load161, %"struct.rubinius::Object"** %local_pos183, !dbg !33
  %local_pos184 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %stack_load163, %"struct.rubinius::Object"** %local_pos184, !dbg !33
  br label %method_body166, !dbg !33

bail_out185:                                      ; preds = %class_fallback460, %class_fallback422, %class_fallback383, %class_fallback347, %class_fallback313, %class_fallback275, %class_fallback236, %class_fallback204
  %rth186 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168), !dbg !33
  br i1 %rth186, label %ret_raise_val187, label %ret_null188, !dbg !33

ret_raise_val187:                                 ; preds = %bail_out185
  %crv189 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !33
  br label %return_pad158, !dbg !33

ret_null188:                                      ; preds = %bail_out185
  br label %return_pad158, !dbg !33

method_body166:                                   ; preds = %bottom176
  %ip_pos190 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 5, !dbg !33
  %out_args_name191 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !33
  %out_args_recv192 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !33
  %out_args_block193 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !33
  %out_args_total194 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !33
  %out_args_arguments195 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !33
  %out_args_container196 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !33
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 3, !dbg !34
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !34
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !34
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !34
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 0, !dbg !34
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !34, !rbx-classid !35
  %stack_pos197 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos197, !dbg !34
  %local_pos198 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local199 = load %"struct.rubinius::Object"** %local_pos198, !dbg !34, !rbx-classid !32
  %stack_pos200 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local199, %"struct.rubinius::Object"** %stack_pos200, !dbg !34
  %local_pos201 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !34
  %local202 = load %"struct.rubinius::Object"** %local_pos201, !dbg !34, !rbx-classid !36
  %stack_pos203 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local202, %"struct.rubinius::Object"** %stack_pos203, !dbg !34
  %stack_pos207 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load208 = load %"struct.rubinius::Object"** %stack_pos207, !dbg !34, !rbx-classid !32
  %stack_pos209 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load210 = load %"struct.rubinius::Object"** %stack_pos209, !dbg !34, !rbx-classid !36
  %cast211 = ptrtoint %"struct.rubinius::Object"* %stack_load208 to i64, !dbg !34
  %cast212 = ptrtoint %"struct.rubinius::Object"* %stack_load210 to i64, !dbg !34
  %fixnums_anded213 = and i64 %cast211, %cast212, !dbg !34
  %masked214 = and i64 %fixnums_anded213, 1, !dbg !34
  %is_fixnum215 = icmp eq i64 %masked214, 1, !dbg !34
  br i1 %is_fixnum215, label %push_add, label %class_fallback204, !dbg !34

class_fallback204:                                ; preds = %method_body166
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load220 = load %"struct.rubinius::Object"** %stack_pos219, !dbg !34, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load220, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos221 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos221, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const222 = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos223 = getelementptr %"struct.rubinius::CallSite"* %cache_const222, i32 0, i32 2, !dbg !34
  %execute224 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos223, !dbg !34
  store i32 6, i32* %ip_pos190, !dbg !34
  %call_site_execute225 = call %"struct.rubinius::Object"* %execute224(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const222, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check227 = icmp eq %"struct.rubinius::Object"* %call_site_execute225, null, !dbg !34
  br i1 %null_check227, label %bail_out185, label %check_active226, !dbg !34

serial_fallback205:                               ; No predecessors!
  store i32 6, i32* %ip_pos190, !dbg !34
  %49 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 6, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue206:                                      ; preds = %check_active226, %cont
  %send_result228 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute225, %check_active226 ], !dbg !34
  %stack_pos229 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result228, %"struct.rubinius::Object"** %stack_pos229, !dbg !34
  %local_pos230 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local231 = load %"struct.rubinius::Object"** %local_pos230, !dbg !34, !rbx-classid !32
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %stack_pos232, !dbg !34
  %local_pos233 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !34
  %local234 = load %"struct.rubinius::Object"** %local_pos233, !dbg !34, !rbx-classid !36
  %stack_pos235 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"* %local234, %"struct.rubinius::Object"** %stack_pos235, !dbg !34
  %stack_pos239 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load240 = load %"struct.rubinius::Object"** %stack_pos239, !dbg !34, !rbx-classid !32
  %stack_pos241 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  %stack_load242 = load %"struct.rubinius::Object"** %stack_pos241, !dbg !34, !rbx-classid !36
  %cast247 = ptrtoint %"struct.rubinius::Object"* %stack_load240 to i64, !dbg !34
  %cast248 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !34
  %fixnums_anded249 = and i64 %cast247, %cast248, !dbg !34
  %masked250 = and i64 %fixnums_anded249, 1, !dbg !34
  %is_fixnum251 = icmp eq i64 %masked250, 1, !dbg !34
  br i1 %is_fixnum251, label %push_add243, label %class_fallback236, !dbg !34

push_add:                                         ; preds = %method_body166
  %as_int216 = ptrtoint %"struct.rubinius::Object"* %stack_load208 to i64, !dbg !34
  %ashr = ashr i64 %as_int216, 1, !dbg !34
  %as_int217 = ptrtoint %"struct.rubinius::Object"* %stack_load210 to i64, !dbg !34
  %ashr218 = ashr i64 %as_int217, 1, !dbg !34
  %fixnum.add = add i64 %ashr, %ashr218, !dbg !34
  %50 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !34
  %51 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !34
  %fits_fixnum = and i1 %50, %51, !dbg !34
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !34

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !34
  %or = or i64 %shl, 1, !dbg !34
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !34
  br label %cont, !dbg !34

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #2, !dbg !34
  br label %cont, !dbg !34

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !34
  br label %continue206, !dbg !34

check_active226:                                  ; preds = %class_fallback204
  br label %continue206, !dbg !34

class_fallback236:                                ; preds = %continue206
  %stack_pos263 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load264 = load %"struct.rubinius::Object"** %stack_pos263, !dbg !34, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load264, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos265 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos265, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const266 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos267 = getelementptr %"struct.rubinius::CallSite"* %cache_const266, i32 0, i32 2, !dbg !34
  %execute268 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos267, !dbg !34
  store i32 13, i32* %ip_pos190, !dbg !34
  %call_site_execute269 = call %"struct.rubinius::Object"* %execute268(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const266, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check271 = icmp eq %"struct.rubinius::Object"* %call_site_execute269, null, !dbg !34
  br i1 %null_check271, label %bail_out185, label %check_active270, !dbg !34

serial_fallback237:                               ; No predecessors!
  store i32 13, i32* %ip_pos190, !dbg !34
  %52 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 13, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue238:                                      ; preds = %check_active270, %cont246
  %send_result272 = phi %"struct.rubinius::Object"* [ %result262, %cont246 ], [ %call_site_execute269, %check_active270 ], !dbg !34
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %stack_pos273, !dbg !34
  %stack_pos274 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos274, !dbg !34
  %stack_pos278 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load279 = load %"struct.rubinius::Object"** %stack_pos278, !dbg !34
  %stack_pos280 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  %stack_load281 = load %"struct.rubinius::Object"** %stack_pos280, !dbg !34, !rbx-classid !37
  %cast286 = ptrtoint %"struct.rubinius::Object"* %stack_load279 to i64, !dbg !34
  %cast287 = ptrtoint %"struct.rubinius::Object"* %stack_load281 to i64, !dbg !34
  %fixnums_anded288 = and i64 %cast286, %cast287, !dbg !34
  %masked289 = and i64 %fixnums_anded288, 1, !dbg !34
  %is_fixnum290 = icmp eq i64 %masked289, 1, !dbg !34
  br i1 %is_fixnum290, label %push_add282, label %class_fallback275, !dbg !34

push_add243:                                      ; preds = %continue206
  %as_int252 = ptrtoint %"struct.rubinius::Object"* %stack_load240 to i64, !dbg !34
  %ashr253 = ashr i64 %as_int252, 1, !dbg !34
  %as_int254 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !34
  %ashr255 = ashr i64 %as_int254, 1, !dbg !34
  %fixnum.add256 = add i64 %ashr253, %ashr255, !dbg !34
  %53 = icmp sle i64 %fixnum.add256, 4611686018427387903, !dbg !34
  %54 = icmp sge i64 %fixnum.add256, -4611686018427387903, !dbg !34
  %fits_fixnum257 = and i1 %53, %54, !dbg !34
  br i1 %fits_fixnum257, label %tagnow244, label %bignum245, !dbg !34

tagnow244:                                        ; preds = %push_add243
  %shl259 = shl i64 %fixnum.add256, 1, !dbg !34
  %or260 = or i64 %shl259, 1, !dbg !34
  %as_obj261 = inttoptr i64 %or260 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont246, !dbg !34

bignum245:                                        ; preds = %push_add243
  %big_value258 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add256) #2, !dbg !34
  br label %cont246, !dbg !34

cont246:                                          ; preds = %tagnow244, %bignum245
  %result262 = phi %"struct.rubinius::Object"* [ %big_value258, %bignum245 ], [ %as_obj261, %tagnow244 ], !dbg !34
  br label %continue238, !dbg !34

check_active270:                                  ; preds = %class_fallback236
  br label %continue238, !dbg !34

class_fallback275:                                ; preds = %continue238
  %stack_pos302 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load303 = load %"struct.rubinius::Object"** %stack_pos302, !dbg !34
  store %"struct.rubinius::Object"* %stack_load303, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos304 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos304, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const305 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos306 = getelementptr %"struct.rubinius::CallSite"* %cache_const305, i32 0, i32 2, !dbg !34
  %execute307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos306, !dbg !34
  store i32 17, i32* %ip_pos190, !dbg !34
  %call_site_execute308 = call %"struct.rubinius::Object"* %execute307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const305, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check310 = icmp eq %"struct.rubinius::Object"* %call_site_execute308, null, !dbg !34
  br i1 %null_check310, label %bail_out185, label %check_active309, !dbg !34

serial_fallback276:                               ; No predecessors!
  store i32 17, i32* %ip_pos190, !dbg !34
  %55 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 17, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue277:                                      ; preds = %check_active309, %cont285
  %send_result311 = phi %"struct.rubinius::Object"* [ %result301, %cont285 ], [ %call_site_execute308, %check_active309 ], !dbg !34
  %stack_pos312 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %send_result311, %"struct.rubinius::Object"** %stack_pos312, !dbg !34
  %stack_pos316 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load317 = load %"struct.rubinius::Object"** %stack_pos316, !dbg !34
  %stack_pos318 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load319 = load %"struct.rubinius::Object"** %stack_pos318, !dbg !34
  %cast322 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !34
  %cast323 = ptrtoint %"struct.rubinius::Object"* %stack_load319 to i64, !dbg !34
  %fixnums_anded324 = and i64 %cast322, %cast323, !dbg !34
  %masked325 = and i64 %fixnums_anded324, 1, !dbg !34
  %is_fixnum326 = icmp eq i64 %masked325, 1, !dbg !34
  br i1 %is_fixnum326, label %push_mul, label %class_fallback313, !dbg !34

push_add282:                                      ; preds = %continue238
  %as_int291 = ptrtoint %"struct.rubinius::Object"* %stack_load279 to i64, !dbg !34
  %ashr292 = ashr i64 %as_int291, 1, !dbg !34
  %as_int293 = ptrtoint %"struct.rubinius::Object"* %stack_load281 to i64, !dbg !34
  %ashr294 = ashr i64 %as_int293, 1, !dbg !34
  %fixnum.add295 = add i64 %ashr292, %ashr294, !dbg !34
  %56 = icmp sle i64 %fixnum.add295, 4611686018427387903, !dbg !34
  %57 = icmp sge i64 %fixnum.add295, -4611686018427387903, !dbg !34
  %fits_fixnum296 = and i1 %56, %57, !dbg !34
  br i1 %fits_fixnum296, label %tagnow283, label %bignum284, !dbg !34

tagnow283:                                        ; preds = %push_add282
  %shl298 = shl i64 %fixnum.add295, 1, !dbg !34
  %or299 = or i64 %shl298, 1, !dbg !34
  %as_obj300 = inttoptr i64 %or299 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont285, !dbg !34

bignum284:                                        ; preds = %push_add282
  %big_value297 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add295) #2, !dbg !34
  br label %cont285, !dbg !34

cont285:                                          ; preds = %tagnow283, %bignum284
  %result301 = phi %"struct.rubinius::Object"* [ %big_value297, %bignum284 ], [ %as_obj300, %tagnow283 ], !dbg !34
  br label %continue277, !dbg !34

check_active309:                                  ; preds = %class_fallback275
  br label %continue277, !dbg !34

class_fallback313:                                ; preds = %fits_fixnum320, %push_mul, %continue277
  %stack_pos335 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load336 = load %"struct.rubinius::Object"** %stack_pos335, !dbg !34
  store %"struct.rubinius::Object"* %stack_load336, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos337 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos337, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const338 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos339 = getelementptr %"struct.rubinius::CallSite"* %cache_const338, i32 0, i32 2, !dbg !34
  %execute340 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos339, !dbg !34
  store i32 20, i32* %ip_pos190, !dbg !34
  %call_site_execute341 = call %"struct.rubinius::Object"* %execute340(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const338, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check343 = icmp eq %"struct.rubinius::Object"* %call_site_execute341, null, !dbg !34
  br i1 %null_check343, label %bail_out185, label %check_active342, !dbg !34

serial_fallback314:                               ; No predecessors!
  store i32 20, i32* %ip_pos190, !dbg !34
  %58 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 20, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue315:                                      ; preds = %check_active342, %tagnow321
  %send_result344 = phi %"struct.rubinius::Object"* [ %as_obj334, %tagnow321 ], [ %call_site_execute341, %check_active342 ], !dbg !34
  %stack_pos345 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %stack_pos345, !dbg !34
  %stack_pos346 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos346, !dbg !34
  %stack_pos350 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load351 = load %"struct.rubinius::Object"** %stack_pos350, !dbg !34
  %stack_pos352 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load353 = load %"struct.rubinius::Object"** %stack_pos352, !dbg !34, !rbx-classid !38
  %cast354 = ptrtoint %"struct.rubinius::Object"* %stack_load351 to i64, !dbg !34
  %cast355 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %masked356 = and i64 %cast354, -9223372036854775807, !dbg !34
  %masked357 = and i64 %cast355, -9223372036854775807, !dbg !34
  %fixnums_anded358 = and i64 %masked356, %masked357, !dbg !34
  %fixnums_ored = or i64 %masked356, %masked357, !dbg !34
  %is_fixnum_and = icmp eq i64 %fixnums_anded358, 1, !dbg !34
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !34
  %is_fixnum359 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !34
  br i1 %is_fixnum359, label %positive, label %class_fallback347, !dbg !34

push_mul:                                         ; preds = %continue277
  %as_int327 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !34
  %ashr328 = ashr i64 %as_int327, 1, !dbg !34
  %as_int329 = ptrtoint %"struct.rubinius::Object"* %stack_load319 to i64, !dbg !34
  %ashr330 = ashr i64 %as_int329, 1, !dbg !34
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr328, i64 %ashr330), !dbg !34
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !34
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !34
  br i1 %did_overflow, label %class_fallback313, label %fits_fixnum320, !dbg !34

fits_fixnum320:                                   ; preds = %push_mul
  %59 = icmp sle i64 %mul, 4611686018427387903, !dbg !34
  %60 = icmp sge i64 %mul, -4611686018427387903, !dbg !34
  %fits_fixnum331 = and i1 %59, %60, !dbg !34
  br i1 %fits_fixnum331, label %tagnow321, label %class_fallback313, !dbg !34

tagnow321:                                        ; preds = %fits_fixnum320
  %shl332 = shl i64 %mul, 1, !dbg !34
  %or333 = or i64 %shl332, 1, !dbg !34
  %as_obj334 = inttoptr i64 %or333 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue315, !dbg !34

check_active342:                                  ; preds = %class_fallback313
  br label %continue315, !dbg !34

class_fallback347:                                ; preds = %positive, %continue315
  %stack_pos369 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load370 = load %"struct.rubinius::Object"** %stack_pos369, !dbg !34
  store %"struct.rubinius::Object"* %stack_load370, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos371 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos371, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const372 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos373 = getelementptr %"struct.rubinius::CallSite"* %cache_const372, i32 0, i32 2, !dbg !34
  %execute374 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos373, !dbg !34
  store i32 24, i32* %ip_pos190, !dbg !34
  %call_site_execute375 = call %"struct.rubinius::Object"* %execute374(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const372, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check377 = icmp eq %"struct.rubinius::Object"* %call_site_execute375, null, !dbg !34
  br i1 %null_check377, label %bail_out185, label %check_active376, !dbg !34

serial_fallback348:                               ; No predecessors!
  store i32 24, i32* %ip_pos190, !dbg !34
  %61 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 24, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue349:                                      ; preds = %check_active376, %divide
  %send_result378 = phi %"struct.rubinius::Object"* [ %as_obj368, %divide ], [ %call_site_execute375, %check_active376 ], !dbg !34
  %stack_pos379 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %stack_pos379, !dbg !34
  %local_pos380 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local381 = load %"struct.rubinius::Object"** %local_pos380, !dbg !34, !rbx-classid !32
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos382, !dbg !34
  %stack_pos386 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load387 = load %"struct.rubinius::Object"** %stack_pos386, !dbg !34
  %stack_pos388 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load389 = load %"struct.rubinius::Object"** %stack_pos388, !dbg !34, !rbx-classid !32
  %cast394 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !34
  %cast395 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !34
  %fixnums_anded396 = and i64 %cast394, %cast395, !dbg !34
  %masked397 = and i64 %fixnums_anded396, 1, !dbg !34
  %is_fixnum398 = icmp eq i64 %masked397, 1, !dbg !34
  br i1 %is_fixnum398, label %push_add390, label %class_fallback383, !dbg !34

positive:                                         ; preds = %continue315
  %cast360 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %is_fixnum361 = icmp ne i64 %cast360, 1, !dbg !34
  br i1 %is_fixnum361, label %divide, label %class_fallback347, !dbg !34

divide:                                           ; preds = %positive
  %as_int362 = ptrtoint %"struct.rubinius::Object"* %stack_load351 to i64, !dbg !34
  %ashr363 = ashr i64 %as_int362, 1, !dbg !34
  %as_int364 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %ashr365 = ashr i64 %as_int364, 1, !dbg !34
  %fixnum.div = sdiv i64 %ashr363, %ashr365, !dbg !34
  %shl366 = shl i64 %fixnum.div, 1, !dbg !34
  %or367 = or i64 %shl366, 1, !dbg !34
  %as_obj368 = inttoptr i64 %or367 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue349, !dbg !34

check_active376:                                  ; preds = %class_fallback347
  br label %continue349, !dbg !34

class_fallback383:                                ; preds = %continue349
  %stack_pos410 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load411 = load %"struct.rubinius::Object"** %stack_pos410, !dbg !34
  store %"struct.rubinius::Object"* %stack_load411, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos412 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos412, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i32 0, i32 2, !dbg !34
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, !dbg !34
  store i32 29, i32* %ip_pos190, !dbg !34
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !34
  br i1 %null_check418, label %bail_out185, label %check_active417, !dbg !34

serial_fallback384:                               ; No predecessors!
  store i32 29, i32* %ip_pos190, !dbg !34
  %62 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 29, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue385:                                      ; preds = %check_active417, %cont393
  %send_result419 = phi %"struct.rubinius::Object"* [ %result409, %cont393 ], [ %call_site_execute416, %check_active417 ], !dbg !34
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos420, !dbg !34
  %stack_pos421 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos421, !dbg !34
  %stack_pos425 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load426 = load %"struct.rubinius::Object"** %stack_pos425, !dbg !34
  %stack_pos427 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load428 = load %"struct.rubinius::Object"** %stack_pos427, !dbg !34, !rbx-classid !37
  %cast433 = ptrtoint %"struct.rubinius::Object"* %stack_load426 to i64, !dbg !34
  %cast434 = ptrtoint %"struct.rubinius::Object"* %stack_load428 to i64, !dbg !34
  %fixnums_anded435 = and i64 %cast433, %cast434, !dbg !34
  %masked436 = and i64 %fixnums_anded435, 1, !dbg !34
  %is_fixnum437 = icmp eq i64 %masked436, 1, !dbg !34
  br i1 %is_fixnum437, label %push_add429, label %class_fallback422, !dbg !34

push_add390:                                      ; preds = %continue349
  %as_int399 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !34
  %ashr400 = ashr i64 %as_int399, 1, !dbg !34
  %as_int401 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !34
  %ashr402 = ashr i64 %as_int401, 1, !dbg !34
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !34
  %63 = icmp sle i64 %fixnum.add403, 4611686018427387903, !dbg !34
  %64 = icmp sge i64 %fixnum.add403, -4611686018427387903, !dbg !34
  %fits_fixnum404 = and i1 %63, %64, !dbg !34
  br i1 %fits_fixnum404, label %tagnow391, label %bignum392, !dbg !34

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !34
  %or407 = or i64 %shl406, 1, !dbg !34
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont393, !dbg !34

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #2, !dbg !34
  br label %cont393, !dbg !34

cont393:                                          ; preds = %tagnow391, %bignum392
  %result409 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], !dbg !34
  br label %continue385, !dbg !34

check_active417:                                  ; preds = %class_fallback383
  br label %continue385, !dbg !34

class_fallback422:                                ; preds = %continue385
  %stack_pos449 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load450 = load %"struct.rubinius::Object"** %stack_pos449, !dbg !34
  store %"struct.rubinius::Object"* %stack_load450, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos451 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos451, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const452 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos453 = getelementptr %"struct.rubinius::CallSite"* %cache_const452, i32 0, i32 2, !dbg !34
  %execute454 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos453, !dbg !34
  store i32 33, i32* %ip_pos190, !dbg !34
  %call_site_execute455 = call %"struct.rubinius::Object"* %execute454(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const452, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check457 = icmp eq %"struct.rubinius::Object"* %call_site_execute455, null, !dbg !34
  br i1 %null_check457, label %bail_out185, label %check_active456, !dbg !34

serial_fallback423:                               ; No predecessors!
  store i32 33, i32* %ip_pos190, !dbg !34
  %65 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 33, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue424:                                      ; preds = %check_active456, %cont432
  %send_result458 = phi %"struct.rubinius::Object"* [ %result448, %cont432 ], [ %call_site_execute455, %check_active456 ], !dbg !34
  %stack_pos459 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result458, %"struct.rubinius::Object"** %stack_pos459, !dbg !34
  %stack_pos463 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load464 = load %"struct.rubinius::Object"** %stack_pos463, !dbg !34, !rbx-classid !35
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load466 = load %"struct.rubinius::Object"** %stack_pos465, !dbg !34
  %cast468 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %masked469 = and i64 %cast468, 3, !dbg !34
  %is_reference470 = icmp eq i64 %masked469, 0, !dbg !34
  br i1 %is_reference470, label %check_class_id471, label %continue467, !dbg !34

push_add429:                                      ; preds = %continue385
  %as_int438 = ptrtoint %"struct.rubinius::Object"* %stack_load426 to i64, !dbg !34
  %ashr439 = ashr i64 %as_int438, 1, !dbg !34
  %as_int440 = ptrtoint %"struct.rubinius::Object"* %stack_load428 to i64, !dbg !34
  %ashr441 = ashr i64 %as_int440, 1, !dbg !34
  %fixnum.add442 = add i64 %ashr439, %ashr441, !dbg !34
  %66 = icmp sle i64 %fixnum.add442, 4611686018427387903, !dbg !34
  %67 = icmp sge i64 %fixnum.add442, -4611686018427387903, !dbg !34
  %fits_fixnum443 = and i1 %66, %67, !dbg !34
  br i1 %fits_fixnum443, label %tagnow430, label %bignum431, !dbg !34

tagnow430:                                        ; preds = %push_add429
  %shl445 = shl i64 %fixnum.add442, 1, !dbg !34
  %or446 = or i64 %shl445, 1, !dbg !34
  %as_obj447 = inttoptr i64 %or446 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont432, !dbg !34

bignum431:                                        ; preds = %push_add429
  %big_value444 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add442) #2, !dbg !34
  br label %cont432, !dbg !34

cont432:                                          ; preds = %tagnow430, %bignum431
  %result448 = phi %"struct.rubinius::Object"* [ %big_value444, %bignum431 ], [ %as_obj447, %tagnow430 ], !dbg !34
  br label %continue424, !dbg !34

check_active456:                                  ; preds = %class_fallback422
  br label %continue424, !dbg !34

serial_fallback461:                               ; No predecessors!
  store i32 36, i32* %ip_pos190, !dbg !34
  %68 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue462:                                      ; preds = %check_active494, %continue478
  %send_result496 = phi %"struct.rubinius::Object"* [ %71, %continue478 ], [ %call_site_execute493, %check_active494 ], !dbg !34
  %stack_pos497 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %send_result496, %"struct.rubinius::Object"** %stack_pos497, !dbg !34
  %stack_pos498 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load499 = load %"struct.rubinius::Object"** %stack_pos498, !dbg !34
  br label %return_pad158, !dbg !34

return_pad158:                                    ; preds = %continue462, %serial_fallback461, %serial_fallback423, %serial_fallback384, %serial_fallback348, %serial_fallback314, %serial_fallback276, %serial_fallback237, %serial_fallback205, %ret_raise_val187, %ret_null188
  %return_phi159 = phi %"struct.rubinius::Object"* [ null, %ret_null188 ], [ %crv189, %ret_raise_val187 ], [ %49, %serial_fallback205 ], [ %52, %serial_fallback237 ], [ %55, %serial_fallback276 ], [ %58, %serial_fallback314 ], [ %61, %serial_fallback348 ], [ %62, %serial_fallback384 ], [ %65, %serial_fallback423 ], [ %68, %serial_fallback461 ], [ %stack_load499, %continue462 ]
  %null_check502 = icmp eq %"struct.rubinius::Object"* %return_phi159, null, !dbg !30
  br i1 %null_check502, label %bail_out, label %check_active501, !dbg !30

check_class_id471:                                ; preds = %continue424
  %class_pos473 = getelementptr %"struct.rubinius::Object"* %stack_load466, i32 0, i32 0, i32 1, !dbg !34
  %ref_class474 = load %"struct.rubinius::Class"** %class_pos473, !dbg !34
  %class_id_pos475 = getelementptr %"struct.rubinius::Class"* %ref_class474, i32 0, i32 4, !dbg !34
  %class_id476 = load i32* %class_id_pos475, !dbg !34
  %check_class_id477 = icmp eq i32 %class_id476, 77, !dbg !34
  br i1 %check_class_id477, label %correct_class472, label %continue467, !dbg !34

correct_class472:                                 ; preds = %check_class_id471
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load466 to %"struct.rubinius::Float"*, !dbg !34
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !34
  %farg = load double* %arg.value_pos, !dbg !34
  br label %continue478, !dbg !34

continue467:                                      ; preds = %check_class_id471, %continue424
  %cast479 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %masked480 = and i64 %cast479, 1, !dbg !34
  %is_fixnum481 = icmp eq i64 %masked480, 1, !dbg !34
  br i1 %is_fixnum481, label %guarded_body, label %class_fallback460, !dbg !34

guarded_body:                                     ; preds = %continue467
  %as_int482 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %ashr483 = ashr i64 %as_int482, 1, !dbg !34
  %69 = sitofp i64 %ashr483 to double, !dbg !34
  br label %continue478, !dbg !34

continue478:                                      ; preds = %guarded_body, %correct_class472
  %rhs = phi double [ %farg, %correct_class472 ], [ %69, %guarded_body ], !dbg !34
  %stack_pos484 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load485 = load %"struct.rubinius::Object"** %stack_pos484, !dbg !34, !rbx-classid !35
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load485 to %"struct.rubinius::Float"*, !dbg !34
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !34
  %fself = load double* %self.value_pos, !dbg !34
  %float.div = fdiv double %fself, %rhs, !dbg !34
  %result486 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !34, !rbx-classid !35
  %70 = getelementptr %"struct.rubinius::Float"* %result486, i32 0, i32 1, !dbg !34
  store double %float.div, double* %70, !dbg !34
  %71 = bitcast %"struct.rubinius::Float"* %result486 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue462, !dbg !34

class_fallback460:                                ; preds = %continue467
  %stack_pos487 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load488 = load %"struct.rubinius::Object"** %stack_pos487, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load488, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos489 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos489, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const490 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos491 = getelementptr %"struct.rubinius::CallSite"* %cache_const490, i32 0, i32 2, !dbg !34
  %execute492 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos491, !dbg !34
  store i32 36, i32* %ip_pos190, !dbg !34
  %call_site_execute493 = call %"struct.rubinius::Object"* %execute492(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const490, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check495 = icmp eq %"struct.rubinius::Object"* %call_site_execute493, null, !dbg !34
  br i1 %null_check495, label %bail_out185, label %check_active494, !dbg !34

check_active494:                                  ; preds = %class_fallback460
  br label %continue462, !dbg !34

continue500:                                      ; preds = %check_active501
  %stack_pos503 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %return_phi159, %"struct.rubinius::Object"** %stack_pos503, !dbg !30
  br label %continue152, !dbg !30

check_active501:                                  ; preds = %return_pad158
  br label %continue500, !dbg !30

class_fallback510:                                ; No predecessors!

serial_fallback511:                               ; No predecessors!

continue512:                                      ; No predecessors!

continue520:                                      ; preds = %check_active521
  %stack_pos523 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute519, %"struct.rubinius::Object"** %stack_pos523, !dbg !30
  %stack_pos527 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load528 = load %"struct.rubinius::Object"** %stack_pos527, !dbg !30
  %cast529 = ptrtoint %"struct.rubinius::Object"* %stack_load528 to i64, !dbg !30
  %masked530 = and i64 %cast529, 3, !dbg !30
  %is_reference531 = icmp eq i64 %masked530, 0, !dbg !30
  br i1 %is_reference531, label %check_class_id532, label %class_fallback524, !dbg !30

check_active521:                                  ; preds = %continue152
  br label %continue520, !dbg !30

continue526:                                      ; preds = %check_active580, %continue559
  %send_result582 = phi %"struct.rubinius::Object"* [ %75, %continue559 ], [ %call_site_execute579, %check_active580 ], !dbg !30
  %stack_pos583 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %send_result582, %"struct.rubinius::Object"** %stack_pos583, !dbg !30
  %stack_pos587 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load588 = load %"struct.rubinius::Object"** %stack_pos587, !dbg !30, !rbx-classid !31
  %stack_pos589 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load590 = load %"struct.rubinius::Object"** %stack_pos589, !dbg !30, !rbx-classid !31
  %stack_pos591 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load592 = load %"struct.rubinius::Object"** %stack_pos591, !dbg !30, !rbx-classid !31
  %stack_pos593 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load594 = load %"struct.rubinius::Object"** %stack_pos593, !dbg !30
  %cast599 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !30
  %cast600 = ptrtoint %"struct.rubinius::Object"* %stack_load594 to i64, !dbg !30
  %fixnums_anded601 = and i64 %cast599, %cast600, !dbg !30
  %masked602 = and i64 %fixnums_anded601, 1, !dbg !30
  %is_fixnum603 = icmp eq i64 %masked602, 1, !dbg !30
  br i1 %is_fixnum603, label %push_add595, label %poly_fallback, !dbg !30

check_class_id532:                                ; preds = %continue520
  %class_pos535 = getelementptr %"struct.rubinius::Object"* %stack_load528, i32 0, i32 0, i32 1, !dbg !30
  %ref_class536 = load %"struct.rubinius::Class"** %class_pos535, !dbg !30
  %class_id_pos537 = getelementptr %"struct.rubinius::Class"* %ref_class536, i32 0, i32 4, !dbg !30
  %class_id538 = load i32* %class_id_pos537, !dbg !30
  %check_class_id539 = icmp eq i32 %class_id538, 77, !dbg !30
  br i1 %check_class_id539, label %correct_class533, label %class_fallback524, !dbg !30

correct_class533:                                 ; preds = %check_class_id532
  %serial_id_pos540 = getelementptr %"struct.rubinius::Class"* %ref_class536, i32 0, i32 5, !dbg !30
  %serial_id541 = load i32* %serial_id_pos540, !dbg !30
  %check_serial_id542 = icmp eq i32 %serial_id541, 224, !dbg !30
  br i1 %check_serial_id542, label %correct_serial534, label %serial_fallback525, !dbg !30

correct_serial534:                                ; preds = %correct_class533
  %stack_pos543 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load544 = load %"struct.rubinius::Object"** %stack_pos543, !dbg !30
  %cast546 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %masked547 = and i64 %cast546, 3, !dbg !30
  %is_reference548 = icmp eq i64 %masked547, 0, !dbg !30
  br i1 %is_reference548, label %check_class_id549, label %continue545, !dbg !30

serial_fallback525:                               ; preds = %correct_class533
  store i32 71, i32* %ip_pos, !dbg !30
  %72 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

check_class_id549:                                ; preds = %correct_serial534
  %class_pos551 = getelementptr %"struct.rubinius::Object"* %stack_load544, i32 0, i32 0, i32 1, !dbg !30
  %ref_class552 = load %"struct.rubinius::Class"** %class_pos551, !dbg !30
  %class_id_pos553 = getelementptr %"struct.rubinius::Class"* %ref_class552, i32 0, i32 4, !dbg !30
  %class_id554 = load i32* %class_id_pos553, !dbg !30
  %check_class_id555 = icmp eq i32 %class_id554, 77, !dbg !30
  br i1 %check_class_id555, label %correct_class550, label %continue545, !dbg !30

correct_class550:                                 ; preds = %check_class_id549
  %arg_float556 = bitcast %"struct.rubinius::Object"* %stack_load544 to %"struct.rubinius::Float"*, !dbg !30
  %arg.value_pos557 = getelementptr %"struct.rubinius::Float"* %arg_float556, i32 0, i32 1, !dbg !30
  %farg558 = load double* %arg.value_pos557, !dbg !30
  br label %continue559, !dbg !30

continue545:                                      ; preds = %check_class_id549, %correct_serial534
  %cast560 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %masked561 = and i64 %cast560, 1, !dbg !30
  %is_fixnum562 = icmp eq i64 %masked561, 1, !dbg !30
  br i1 %is_fixnum562, label %guarded_body563, label %class_fallback524, !dbg !30

guarded_body563:                                  ; preds = %continue545
  %as_int564 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %ashr565 = ashr i64 %as_int564, 1, !dbg !30
  %73 = sitofp i64 %ashr565 to double, !dbg !30
  br label %continue559, !dbg !30

continue559:                                      ; preds = %guarded_body563, %correct_class550
  %rhs566 = phi double [ %farg558, %correct_class550 ], [ %73, %guarded_body563 ], !dbg !30
  %stack_pos567 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load568 = load %"struct.rubinius::Object"** %stack_pos567, !dbg !30
  %self_float569 = bitcast %"struct.rubinius::Object"* %stack_load568 to %"struct.rubinius::Float"*, !dbg !30
  %self.value_pos570 = getelementptr %"struct.rubinius::Float"* %self_float569, i32 0, i32 1, !dbg !30
  %fself571 = load double* %self.value_pos570, !dbg !30
  %float.mul = fmul double %fself571, %rhs566, !dbg !30
  %result572 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !30, !rbx-classid !35
  %74 = getelementptr %"struct.rubinius::Float"* %result572, i32 0, i32 1, !dbg !30
  store double %float.mul, double* %74, !dbg !30
  %75 = bitcast %"struct.rubinius::Float"* %result572 to %"struct.rubinius::Object"*, !dbg !30
  br label %continue526, !dbg !30

class_fallback524:                                ; preds = %continue545, %check_class_id532, %continue520
  %stack_pos573 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load574 = load %"struct.rubinius::Object"** %stack_pos573, !dbg !30
  store %"struct.rubinius::Object"* %stack_load574, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos575 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos575, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const576 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496000 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos577 = getelementptr %"struct.rubinius::CallSite"* %cache_const576, i32 0, i32 2, !dbg !30
  %execute578 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos577, !dbg !30
  store i32 71, i32* %ip_pos, !dbg !30
  %call_site_execute579 = call %"struct.rubinius::Object"* %execute578(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const576, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check581 = icmp eq %"struct.rubinius::Object"* %call_site_execute579, null, !dbg !30
  br i1 %null_check581, label %bail_out, label %check_active580, !dbg !30

check_active580:                                  ; preds = %class_fallback524
  br label %continue526, !dbg !30

class_fallback584:                                ; preds = %poly_fallback662
  %stack_pos663 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load664 = load %"struct.rubinius::Object"** %stack_pos663, !dbg !30, !rbx-classid !31
  store %"struct.rubinius::Object"* %stack_load664, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos665, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const666 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496024 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos667 = getelementptr %"struct.rubinius::CallSite"* %cache_const666, i32 0, i32 2, !dbg !30
  %execute668 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos667, !dbg !30
  store i32 74, i32* %ip_pos, !dbg !30
  %call_site_execute669 = call %"struct.rubinius::Object"* %execute668(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const666, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check671 = icmp eq %"struct.rubinius::Object"* %call_site_execute669, null, !dbg !30
  br i1 %null_check671, label %bail_out, label %check_active670, !dbg !30

continue586:                                      ; preds = %check_active670, %merge
  %send_result672 = phi %"struct.rubinius::Object"* [ %poly_result, %merge ], [ %call_site_execute669, %check_active670 ], !dbg !30
  %stack_pos673 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %send_result672, %"struct.rubinius::Object"** %stack_pos673, !dbg !30
  %local_pos674 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !30
  %stack_pos675 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load676 = load %"struct.rubinius::Object"** %stack_pos675, !dbg !30
  store %"struct.rubinius::Object"* %stack_load676, %"struct.rubinius::Object"** %local_pos674, !dbg !30
  %local_pos677 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !39
  %local678 = load %"struct.rubinius::Object"** %local_pos677, !dbg !39, !rbx-classid !28
  %stack_pos679 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %stack_pos679, !dbg !39
  %stack_pos680 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos680, !dbg !39
  %stack_pos684 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load685 = load %"struct.rubinius::Object"** %stack_pos684, !dbg !39, !rbx-classid !28
  %stack_pos686 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load687 = load %"struct.rubinius::Object"** %stack_pos686, !dbg !39, !rbx-classid !37
  %cast692 = ptrtoint %"struct.rubinius::Object"* %stack_load685 to i64, !dbg !39
  %cast693 = ptrtoint %"struct.rubinius::Object"* %stack_load687 to i64, !dbg !39
  %fixnums_anded694 = and i64 %cast692, %cast693, !dbg !39
  %masked695 = and i64 %fixnums_anded694, 1, !dbg !39
  %is_fixnum696 = icmp eq i64 %masked695, 1, !dbg !39
  br i1 %is_fixnum696, label %push_add688, label %class_fallback681, !dbg !39

poly_fallback:                                    ; preds = %continue526
  %stack_pos616 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load617 = load %"struct.rubinius::Object"** %stack_pos616, !dbg !30, !rbx-classid !31
  %cast618 = ptrtoint %"struct.rubinius::Object"* %stack_load617 to i64, !dbg !30
  %masked619 = and i64 %cast618, 3, !dbg !30
  %is_reference620 = icmp eq i64 %masked619, 0, !dbg !30
  br i1 %is_reference620, label %check_class_id621, label %poly_fallback615, !dbg !30

merge:                                            ; preds = %continue648, %cont598
  %poly_result = phi %"struct.rubinius::Object"* [ %result614, %cont598 ], [ %81, %continue648 ], !dbg !30
  br label %continue586, !dbg !30

push_add595:                                      ; preds = %continue526
  %as_int604 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !30
  %ashr605 = ashr i64 %as_int604, 1, !dbg !30
  %as_int606 = ptrtoint %"struct.rubinius::Object"* %stack_load594 to i64, !dbg !30
  %ashr607 = ashr i64 %as_int606, 1, !dbg !30
  %fixnum.add608 = add i64 %ashr605, %ashr607, !dbg !30
  %76 = icmp sle i64 %fixnum.add608, 4611686018427387903, !dbg !30
  %77 = icmp sge i64 %fixnum.add608, -4611686018427387903, !dbg !30
  %fits_fixnum609 = and i1 %76, %77, !dbg !30
  br i1 %fits_fixnum609, label %tagnow596, label %bignum597, !dbg !30

tagnow596:                                        ; preds = %push_add595
  %shl611 = shl i64 %fixnum.add608, 1, !dbg !30
  %or612 = or i64 %shl611, 1, !dbg !30
  %as_obj613 = inttoptr i64 %or612 to %"struct.rubinius::Object"*, !dbg !30
  br label %cont598, !dbg !30

bignum597:                                        ; preds = %push_add595
  %big_value610 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add608) #2, !dbg !30
  br label %cont598, !dbg !30

cont598:                                          ; preds = %tagnow596, %bignum597
  %result614 = phi %"struct.rubinius::Object"* [ %big_value610, %bignum597 ], [ %as_obj613, %tagnow596 ], !dbg !30
  br label %merge, !dbg !30

check_class_id621:                                ; preds = %poly_fallback
  %class_pos624 = getelementptr %"struct.rubinius::Object"* %stack_load617, i32 0, i32 0, i32 1, !dbg !30
  %ref_class625 = load %"struct.rubinius::Class"** %class_pos624, !dbg !30
  %class_id_pos626 = getelementptr %"struct.rubinius::Class"* %ref_class625, i32 0, i32 4, !dbg !30
  %class_id627 = load i32* %class_id_pos626, !dbg !30
  %check_class_id628 = icmp eq i32 %class_id627, 77, !dbg !30
  br i1 %check_class_id628, label %correct_class622, label %poly_fallback615, !dbg !30

correct_class622:                                 ; preds = %check_class_id621
  %serial_id_pos629 = getelementptr %"struct.rubinius::Class"* %ref_class625, i32 0, i32 5, !dbg !30
  %serial_id630 = load i32* %serial_id_pos629, !dbg !30
  %check_serial_id631 = icmp eq i32 %serial_id630, 224, !dbg !30
  br i1 %check_serial_id631, label %correct_serial623, label %serial_fallback585, !dbg !30

correct_serial623:                                ; preds = %correct_class622
  %stack_pos632 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load633 = load %"struct.rubinius::Object"** %stack_pos632, !dbg !30
  %cast635 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %masked636 = and i64 %cast635, 3, !dbg !30
  %is_reference637 = icmp eq i64 %masked636, 0, !dbg !30
  br i1 %is_reference637, label %check_class_id638, label %continue634, !dbg !30

serial_fallback585:                               ; preds = %correct_class622
  store i32 74, i32* %ip_pos, !dbg !30
  %78 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

check_class_id638:                                ; preds = %correct_serial623
  %class_pos640 = getelementptr %"struct.rubinius::Object"* %stack_load633, i32 0, i32 0, i32 1, !dbg !30
  %ref_class641 = load %"struct.rubinius::Class"** %class_pos640, !dbg !30
  %class_id_pos642 = getelementptr %"struct.rubinius::Class"* %ref_class641, i32 0, i32 4, !dbg !30
  %class_id643 = load i32* %class_id_pos642, !dbg !30
  %check_class_id644 = icmp eq i32 %class_id643, 77, !dbg !30
  br i1 %check_class_id644, label %correct_class639, label %continue634, !dbg !30

correct_class639:                                 ; preds = %check_class_id638
  %arg_float645 = bitcast %"struct.rubinius::Object"* %stack_load633 to %"struct.rubinius::Float"*, !dbg !30
  %arg.value_pos646 = getelementptr %"struct.rubinius::Float"* %arg_float645, i32 0, i32 1, !dbg !30
  %farg647 = load double* %arg.value_pos646, !dbg !30
  br label %continue648, !dbg !30

continue634:                                      ; preds = %check_class_id638, %correct_serial623
  %cast649 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %masked650 = and i64 %cast649, 1, !dbg !30
  %is_fixnum651 = icmp eq i64 %masked650, 1, !dbg !30
  br i1 %is_fixnum651, label %guarded_body652, label %poly_fallback615, !dbg !30

guarded_body652:                                  ; preds = %continue634
  %as_int653 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %ashr654 = ashr i64 %as_int653, 1, !dbg !30
  %79 = sitofp i64 %ashr654 to double, !dbg !30
  br label %continue648, !dbg !30

continue648:                                      ; preds = %guarded_body652, %correct_class639
  %rhs655 = phi double [ %farg647, %correct_class639 ], [ %79, %guarded_body652 ], !dbg !30
  %stack_pos656 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load657 = load %"struct.rubinius::Object"** %stack_pos656, !dbg !30, !rbx-classid !31
  %self_float658 = bitcast %"struct.rubinius::Object"* %stack_load657 to %"struct.rubinius::Float"*, !dbg !30
  %self.value_pos659 = getelementptr %"struct.rubinius::Float"* %self_float658, i32 0, i32 1, !dbg !30
  %fself660 = load double* %self.value_pos659, !dbg !30
  %float.add = fadd double %fself660, %rhs655, !dbg !30
  %result661 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !30, !rbx-classid !35
  %80 = getelementptr %"struct.rubinius::Float"* %result661, i32 0, i32 1, !dbg !30
  store double %float.add, double* %80, !dbg !30
  %81 = bitcast %"struct.rubinius::Float"* %result661 to %"struct.rubinius::Object"*, !dbg !30
  br label %merge, !dbg !30

poly_fallback615:                                 ; preds = %continue634, %check_class_id621, %poly_fallback
  br label %poly_fallback662, !dbg !30

poly_fallback662:                                 ; preds = %poly_fallback615
  br label %class_fallback584, !dbg !30

check_active670:                                  ; preds = %class_fallback584
  br label %continue586, !dbg !30

class_fallback681:                                ; preds = %continue586
  %stack_pos708 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load709 = load %"struct.rubinius::Object"** %stack_pos708, !dbg !39, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load709, %"struct.rubinius::Object"** %out_args_recv, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !39
  store i32 1, i32* %out_args_total, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !39
  %stack_pos710 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos710, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !39
  %cache_const711 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496096 to %"struct.rubinius::CallSite"**), !dbg !39
  %execute_pos712 = getelementptr %"struct.rubinius::CallSite"* %cache_const711, i32 0, i32 2, !dbg !39
  %execute713 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos712, !dbg !39
  store i32 83, i32* %ip_pos, !dbg !39
  %call_site_execute714 = call %"struct.rubinius::Object"* %execute713(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const711, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check716 = icmp eq %"struct.rubinius::Object"* %call_site_execute714, null, !dbg !39
  br i1 %null_check716, label %bail_out, label %check_active715, !dbg !39

serial_fallback682:                               ; No predecessors!
  store i32 83, i32* %ip_pos, !dbg !39
  %82 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 83, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad, !dbg !39

continue683:                                      ; preds = %check_active715, %cont691
  %send_result717 = phi %"struct.rubinius::Object"* [ %result707, %cont691 ], [ %call_site_execute714, %check_active715 ], !dbg !39
  %stack_pos718 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %stack_pos718, !dbg !39
  %local_pos719 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !39
  %stack_pos720 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load721 = load %"struct.rubinius::Object"** %stack_pos720, !dbg !39
  store %"struct.rubinius::Object"* %stack_load721, %"struct.rubinius::Object"** %local_pos719, !dbg !39
  %83 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !39
  %vm_jit = load %"struct.rubinius::VMJIT"** %83, !dbg !39
  %84 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !39
  %check_interrupts = load i8* %84, !dbg !39
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), !dbg !39
  %or723 = or i8 %check_interrupts, %check_global_interrupts, !dbg !39
  %needs_interrupts = icmp eq i8 %or723, 0, !dbg !39
  br i1 %needs_interrupts, label %continue722, label %interrupts, !dbg !39

push_add688:                                      ; preds = %continue586
  %as_int697 = ptrtoint %"struct.rubinius::Object"* %stack_load685 to i64, !dbg !39
  %ashr698 = ashr i64 %as_int697, 1, !dbg !39
  %as_int699 = ptrtoint %"struct.rubinius::Object"* %stack_load687 to i64, !dbg !39
  %ashr700 = ashr i64 %as_int699, 1, !dbg !39
  %fixnum.add701 = add i64 %ashr698, %ashr700, !dbg !39
  %85 = icmp sle i64 %fixnum.add701, 4611686018427387903, !dbg !39
  %86 = icmp sge i64 %fixnum.add701, -4611686018427387903, !dbg !39
  %fits_fixnum702 = and i1 %85, %86, !dbg !39
  br i1 %fits_fixnum702, label %tagnow689, label %bignum690, !dbg !39

tagnow689:                                        ; preds = %push_add688
  %shl704 = shl i64 %fixnum.add701, 1, !dbg !39
  %or705 = or i64 %shl704, 1, !dbg !39
  %as_obj706 = inttoptr i64 %or705 to %"struct.rubinius::Object"*, !dbg !39
  br label %cont691, !dbg !39

bignum690:                                        ; preds = %push_add688
  %big_value703 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add701) #2, !dbg !39
  br label %cont691, !dbg !39

cont691:                                          ; preds = %tagnow689, %bignum690
  %result707 = phi %"struct.rubinius::Object"* [ %big_value703, %bignum690 ], [ %as_obj706, %tagnow689 ], !dbg !39
  br label %continue683, !dbg !39

check_active715:                                  ; preds = %class_fallback681
  br label %continue683, !dbg !39

continue722:                                      ; preds = %continue683
  br label %done, !dbg !39

interrupts:                                       ; preds = %continue683
  store i32 89, i32* %ip_pos, !dbg !39
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !39
  %null_check726 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !39
  br i1 %null_check726, label %bail_out, label %check_active725, !dbg !39

done:                                             ; preds = %continue724, %continue722
  br label %ip44, !dbg !39

continue724:                                      ; preds = %check_active725
  br label %done, !dbg !39

check_active725:                                  ; preds = %interrupts
  br label %continue724, !dbg !39

continue727:                                      ; No predecessors!
  br label %ip92, !dbg !39

ip92:                                             ; preds = %continue727, %continue111
  %stack_pos728 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos728, !dbg !40
  %local_pos729 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !41
  %local730 = load %"struct.rubinius::Object"** %local_pos729, !dbg !41, !rbx-classid !36
  %stack_pos731 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack_pos731, !dbg !41
  %local_pos732 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !41
  %local733 = load %"struct.rubinius::Object"** %local_pos732, !dbg !41, !rbx-classid !31
  %stack_pos734 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !41
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos734, !dbg !41
  %stack_pos738 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  %stack_load739 = load %"struct.rubinius::Object"** %stack_pos738, !dbg !41, !rbx-classid !36
  %cast740 = ptrtoint %"struct.rubinius::Object"* %stack_load739 to i64, !dbg !41
  %masked741 = and i64 %cast740, 3, !dbg !41
  %is_reference742 = icmp eq i64 %masked741, 0, !dbg !41
  br i1 %is_reference742, label %check_class_id743, label %class_fallback735, !dbg !41

continue737:                                      ; preds = %continue834
  %local_pos838 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !42
  %local839 = load %"struct.rubinius::Object"** %local_pos838, !dbg !42, !rbx-classid !24
  %stack_pos840 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %stack_pos840, !dbg !42
  %stack_pos841 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos841, !dbg !42
  %stack_pos845 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load846 = load %"struct.rubinius::Object"** %stack_pos845, !dbg !42, !rbx-classid !24
  %stack_pos847 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  %stack_load848 = load %"struct.rubinius::Object"** %stack_pos847, !dbg !42, !rbx-classid !37
  %cast853 = ptrtoint %"struct.rubinius::Object"* %stack_load846 to i64, !dbg !42
  %cast854 = ptrtoint %"struct.rubinius::Object"* %stack_load848 to i64, !dbg !42
  %fixnums_anded855 = and i64 %cast853, %cast854, !dbg !42
  %masked856 = and i64 %fixnums_anded855, 1, !dbg !42
  %is_fixnum857 = icmp eq i64 %masked856, 1, !dbg !42
  br i1 %is_fixnum857, label %push_add849, label %class_fallback842, !dbg !42

check_class_id743:                                ; preds = %ip92
  %class_pos746 = getelementptr %"struct.rubinius::Object"* %stack_load739, i32 0, i32 0, i32 1, !dbg !41
  %ref_class747 = load %"struct.rubinius::Class"** %class_pos746, !dbg !41
  %class_id_pos748 = getelementptr %"struct.rubinius::Class"* %ref_class747, i32 0, i32 4, !dbg !41
  %class_id749 = load i32* %class_id_pos748, !dbg !41
  %check_class_id750 = icmp eq i32 %class_id749, 6, !dbg !41
  br i1 %check_class_id750, label %correct_class744, label %class_fallback735, !dbg !41

correct_class744:                                 ; preds = %check_class_id743
  %serial_id_pos751 = getelementptr %"struct.rubinius::Class"* %ref_class747, i32 0, i32 5, !dbg !41
  %serial_id752 = load i32* %serial_id_pos751, !dbg !41
  %check_serial_id753 = icmp eq i32 %serial_id752, 249, !dbg !41
  br i1 %check_serial_id753, label %correct_serial745, label %serial_fallback736, !dbg !41

class_fallback735:                                ; preds = %check_class_id743, %ip92
  store i32 98, i32* %ip_pos, !dbg !41
  %87 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 0), !dbg !41
  br label %return_pad, !dbg !41

correct_serial745:                                ; preds = %correct_class744
  %stack_pos756 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !41
  %stack_load757 = load %"struct.rubinius::Object"** %stack_pos756, !dbg !41, !rbx-classid !31
  %stack_pos758 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  %stack_load759 = load %"struct.rubinius::Object"** %stack_pos758, !dbg !41, !rbx-classid !36
  br label %inline_entry760, !dbg !41

serial_fallback736:                               ; preds = %correct_class744
  store i32 98, i32* %ip_pos, !dbg !41
  %88 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !41
  br label %return_pad, !dbg !41

inline_entry760:                                  ; preds = %correct_serial745
  %call_frame763 = bitcast %"struct.rubinius::Object"** %cfstk762 to %"struct.rubinius::CallFrame"*, !dbg !43
  %stack764 = getelementptr %"struct.rubinius::Object"** %cfstk762, i32 9, !dbg !43
  %vars766 = bitcast %"struct.rubinius::Object"** %var_mem765 to %"struct.rubinius::StackVariables"*, !dbg !43
  %89 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 0, !dbg !43
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %89, !dbg !43
  %90 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 2, !dbg !43
  store i8* inttoptr (i64 140281081206928 to i8*), i8** %90, !dbg !43
  %compiled_code767 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081206928 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !43
  %91 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 3, !dbg !43
  store %"struct.rubinius::CompiledCode"* %compiled_code767, %"struct.rubinius::CompiledCode"** %91, !dbg !43
  %constant_scope_pos768 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code767, i32 0, i32 13, !dbg !43
  %constant_scope769 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos768, !dbg !43
  %92 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 1, !dbg !43
  store %"struct.rubinius::ConstantScope"* %constant_scope769, %"struct.rubinius::ConstantScope"** %92, !dbg !43
  %93 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 4, !dbg !43
  store i32 12, i32* %93, !dbg !43
  %94 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 5, !dbg !43
  store i32 0, i32* %94, !dbg !43
  %95 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 8, !dbg !43
  store %"struct.rubinius::StackVariables"* %vars766, %"struct.rubinius::StackVariables"** %95, !dbg !43
  %stack_pos770 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos770, !dbg !43
  %stack_pos771 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos771, !dbg !43
  %stack_pos772 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos772, !dbg !43
  %stack_pos773 = getelementptr %"struct.rubinius::Object"** %stack764, i32 3, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos773, !dbg !43
  %module774 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081206928 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !43
  %96 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 0, !dbg !43
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %96, !dbg !43
  %97 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %stack_load759, %"struct.rubinius::Object"** %97, !dbg !43
  %98 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 4, !dbg !43
  store %"struct.rubinius::Module"* %module774, %"struct.rubinius::Module"** %98, !dbg !43
  %99 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 3, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %99, !dbg !43
  %100 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 1, !dbg !43
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %100, !dbg !43
  %101 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 5, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %101, !dbg !43
  %local_pos775 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos775, !dbg !43
  %local_pos776 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !43
  store %"struct.rubinius::Object"* %stack_load757, %"struct.rubinius::Object"** %local_pos776, !dbg !43
  br label %method_body761, !dbg !43

bail_out777:                                      ; preds = %class_fallback796, %merge804
  %rth778 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763), !dbg !43
  br i1 %rth778, label %ret_raise_val779, label %ret_null780, !dbg !43

ret_raise_val779:                                 ; preds = %bail_out777
  %crv781 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !43
  br label %return_pad754, !dbg !43

ret_null780:                                      ; preds = %bail_out777
  br label %return_pad754, !dbg !43

method_body761:                                   ; preds = %inline_entry760
  %ip_pos782 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 5, !dbg !43
  %out_args_name783 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !43
  %out_args_recv784 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !43
  %out_args_block785 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !43
  %out_args_total786 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !43
  %out_args_arguments787 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !43
  %out_args_container788 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !43
  %102 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !44
  %self789 = load %"struct.rubinius::Object"** %102, !dbg !44, !rbx-classid !45
  %stack_pos790 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %self789, %"struct.rubinius::Object"** %stack_pos790, !dbg !44
  %self_pos = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !44
  %self791 = load %"struct.rubinius::Object"** %self_pos, !dbg !44
  %obj_array = bitcast %"struct.rubinius::Object"* %self791 to %"struct.rubinius::Object"**, !dbg !44
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !44
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !44
  %stack_pos792 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos792, !dbg !44
  %local_pos793 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !44
  %local794 = load %"struct.rubinius::Object"** %local_pos793, !dbg !44, !rbx-classid !32
  %stack_pos795 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !44
  store %"struct.rubinius::Object"* %local794, %"struct.rubinius::Object"** %stack_pos795, !dbg !44
  %stack_pos799 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load800 = load %"struct.rubinius::Object"** %stack_pos799, !dbg !44, !rbx-classid !45
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load802 = load %"struct.rubinius::Object"** %stack_pos801, !dbg !44, !rbx-classid !45
  %stack_pos806 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load807 = load %"struct.rubinius::Object"** %stack_pos806, !dbg !44, !rbx-classid !45
  %stack_pos808 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load809 = load %"struct.rubinius::Object"** %stack_pos808, !dbg !44, !rbx-classid !45
  %stack_pos810 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  %stack_load811 = load %"struct.rubinius::Object"** %stack_pos810, !dbg !44
  %stack_pos812 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !44
  %stack_load813 = load %"struct.rubinius::Object"** %stack_pos812, !dbg !44, !rbx-classid !32
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_aset(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Object"* %stack_load809, %"struct.rubinius::Object"* %stack_load811, %"struct.rubinius::Object"* %stack_load813) #2, !dbg !44
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !44
  %103 = icmp eq i64 %ptr2int, 34, !dbg !44
  br i1 %103, label %poly_fallback803, label %continue814, !dbg !44

class_fallback796:                                ; preds = %poly_fallback815
  %stack_pos819 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load820 = load %"struct.rubinius::Object"** %stack_pos819, !dbg !44, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load820, %"struct.rubinius::Object"** %out_args_recv784, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 30886 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name783, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block785, !dbg !44
  store i32 2, i32* %out_args_total786, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container788, !dbg !44
  %stack_pos821 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos821, %"struct.rubinius::Object"*** %out_args_arguments787, !dbg !44
  %cache_const822 = load %"struct.rubinius::CallSite"** inttoptr (i64 24569320 to %"struct.rubinius::CallSite"**), !dbg !44
  %execute_pos823 = getelementptr %"struct.rubinius::CallSite"* %cache_const822, i32 0, i32 2, !dbg !44
  %execute824 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos823, !dbg !44
  store i32 6, i32* %ip_pos782, !dbg !44
  %call_site_execute825 = call %"struct.rubinius::Object"* %execute824(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const822, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check827 = icmp eq %"struct.rubinius::Object"* %call_site_execute825, null, !dbg !44
  br i1 %null_check827, label %bail_out777, label %check_active826, !dbg !44

serial_fallback797:                               ; No predecessors!
  store i32 6, i32* %ip_pos782, !dbg !44
  %104 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, i32 6, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !44
  br label %return_pad754, !dbg !44

continue798:                                      ; preds = %check_active826, %continue816
  %send_result828 = phi %"struct.rubinius::Object"* [ %poly_result805, %continue816 ], [ %call_site_execute825, %check_active826 ], !dbg !44
  %stack_pos829 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %send_result828, %"struct.rubinius::Object"** %stack_pos829, !dbg !44
  %105 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !46
  %self830 = load %"struct.rubinius::Object"** %105, !dbg !46, !rbx-classid !45
  %stack_pos831 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !46
  store %"struct.rubinius::Object"* %self830, %"struct.rubinius::Object"** %stack_pos831, !dbg !46
  %stack_pos832 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !46
  %stack_load833 = load %"struct.rubinius::Object"** %stack_pos832, !dbg !46, !rbx-classid !45
  br label %return_pad754, !dbg !46

return_pad754:                                    ; preds = %continue798, %serial_fallback797, %ret_raise_val779, %ret_null780
  %return_phi755 = phi %"struct.rubinius::Object"* [ null, %ret_null780 ], [ %crv781, %ret_raise_val779 ], [ %104, %serial_fallback797 ], [ %stack_load833, %continue798 ]
  %null_check836 = icmp eq %"struct.rubinius::Object"* %return_phi755, null, !dbg !41
  br i1 %null_check836, label %bail_out, label %check_active835, !dbg !41

poly_fallback803:                                 ; preds = %method_body761
  br label %poly_fallback815, !dbg !44

merge804:                                         ; preds = %continue814
  %poly_result805 = phi %"struct.rubinius::Object"* [ %prim_value, %continue814 ], !dbg !44
  %null_check818 = icmp eq %"struct.rubinius::Object"* %poly_result805, null, !dbg !44
  br i1 %null_check818, label %bail_out777, label %check_active817, !dbg !44

continue814:                                      ; preds = %method_body761
  br label %merge804, !dbg !44

poly_fallback815:                                 ; preds = %poly_fallback803
  br label %class_fallback796, !dbg !44

continue816:                                      ; preds = %check_active817
  br label %continue798, !dbg !44

check_active817:                                  ; preds = %merge804
  br label %continue816, !dbg !44

check_active826:                                  ; preds = %class_fallback796
  br label %continue798, !dbg !44

continue834:                                      ; preds = %check_active835
  %stack_pos837 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %return_phi755, %"struct.rubinius::Object"** %stack_pos837, !dbg !41
  br label %continue737, !dbg !41

check_active835:                                  ; preds = %return_pad754
  br label %continue834, !dbg !41

class_fallback842:                                ; preds = %continue737
  %stack_pos869 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load870 = load %"struct.rubinius::Object"** %stack_pos869, !dbg !42, !rbx-classid !24
  store %"struct.rubinius::Object"* %stack_load870, %"struct.rubinius::Object"** %out_args_recv, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !42
  store i32 1, i32* %out_args_total, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !42
  %stack_pos871 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos871, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !42
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496272 to %"struct.rubinius::CallSite"**), !dbg !42
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i32 0, i32 2, !dbg !42
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, !dbg !42
  store i32 105, i32* %ip_pos, !dbg !42
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !42
  br i1 %null_check877, label %bail_out, label %check_active876, !dbg !42

serial_fallback843:                               ; No predecessors!
  store i32 105, i32* %ip_pos, !dbg !42
  %106 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !42
  br label %return_pad, !dbg !42

continue844:                                      ; preds = %check_active876, %cont852
  %send_result878 = phi %"struct.rubinius::Object"* [ %result868, %cont852 ], [ %call_site_execute875, %check_active876 ], !dbg !42
  %stack_pos879 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %stack_pos879, !dbg !42
  %local_pos880 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !42
  %stack_pos881 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load882 = load %"struct.rubinius::Object"** %stack_pos881, !dbg !42
  store %"struct.rubinius::Object"* %stack_load882, %"struct.rubinius::Object"** %local_pos880, !dbg !42
  %107 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !42
  %vm_jit886 = load %"struct.rubinius::VMJIT"** %107, !dbg !42
  %108 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit886, i32 0, i32 5, !dbg !42
  %check_interrupts887 = load i8* %108, !dbg !42
  %check_global_interrupts888 = load i8* inttoptr (i64 22553854 to i8*), !dbg !42
  %or889 = or i8 %check_interrupts887, %check_global_interrupts888, !dbg !42
  %needs_interrupts890 = icmp eq i8 %or889, 0, !dbg !42
  br i1 %needs_interrupts890, label %continue883, label %interrupts884, !dbg !42

push_add849:                                      ; preds = %continue737
  %as_int858 = ptrtoint %"struct.rubinius::Object"* %stack_load846 to i64, !dbg !42
  %ashr859 = ashr i64 %as_int858, 1, !dbg !42
  %as_int860 = ptrtoint %"struct.rubinius::Object"* %stack_load848 to i64, !dbg !42
  %ashr861 = ashr i64 %as_int860, 1, !dbg !42
  %fixnum.add862 = add i64 %ashr859, %ashr861, !dbg !42
  %109 = icmp sle i64 %fixnum.add862, 4611686018427387903, !dbg !42
  %110 = icmp sge i64 %fixnum.add862, -4611686018427387903, !dbg !42
  %fits_fixnum863 = and i1 %109, %110, !dbg !42
  br i1 %fits_fixnum863, label %tagnow850, label %bignum851, !dbg !42

tagnow850:                                        ; preds = %push_add849
  %shl865 = shl i64 %fixnum.add862, 1, !dbg !42
  %or866 = or i64 %shl865, 1, !dbg !42
  %as_obj867 = inttoptr i64 %or866 to %"struct.rubinius::Object"*, !dbg !42
  br label %cont852, !dbg !42

bignum851:                                        ; preds = %push_add849
  %big_value864 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add862) #2, !dbg !42
  br label %cont852, !dbg !42

cont852:                                          ; preds = %tagnow850, %bignum851
  %result868 = phi %"struct.rubinius::Object"* [ %big_value864, %bignum851 ], [ %as_obj867, %tagnow850 ], !dbg !42
  br label %continue844, !dbg !42

check_active876:                                  ; preds = %class_fallback842
  br label %continue844, !dbg !42

continue883:                                      ; preds = %continue844
  br label %done885, !dbg !42

interrupts884:                                    ; preds = %continue844
  store i32 111, i32* %ip_pos, !dbg !42
  %ci891 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !42
  %null_check894 = icmp eq %"struct.rubinius::Object"* %ci891, null, !dbg !42
  br i1 %null_check894, label %bail_out, label %check_active893, !dbg !42

done885:                                          ; preds = %continue892, %continue883
  br label %ip18, !dbg !42

continue892:                                      ; preds = %check_active893
  br label %done885, !dbg !42

check_active893:                                  ; preds = %interrupts884
  br label %continue892, !dbg !42

continue895:                                      ; No predecessors!
  br label %ip114, !dbg !42

ip114:                                            ; preds = %continue895, %continue40
  %stack_pos896 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos896, !dbg !40
  %local_pos897 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !19
  %local898 = load %"struct.rubinius::Object"** %local_pos897, !dbg !19, !rbx-classid !36
  %stack_pos899 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack_pos899, !dbg !19
  %stack_pos900 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load901 = load %"struct.rubinius::Object"** %stack_pos900, !dbg !19, !rbx-classid !36
  br label %return_pad, !dbg !19

return_pad:                                       ; preds = %ip114, %serial_fallback843, %serial_fallback736, %class_fallback735, %serial_fallback682, %serial_fallback585, %serial_fallback525, %serial_fallback151, %class_fallback150, %serial_fallback110, %serial_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %25, %serial_fallback ], [ %31, %serial_fallback110 ], [ %34, %class_fallback150 ], [ %35, %serial_fallback151 ], [ %72, %serial_fallback525 ], [ %78, %serial_fallback585 ], [ %82, %serial_fallback682 ], [ %87, %class_fallback735 ], [ %88, %serial_fallback736 ], [ %106, %serial_fallback843 ], [ %stack_load901, %ip114 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !19

ret_null902:                                      ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !19

prologue_check:                                   ; preds = %bottom
  %ci907 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  %111 = icmp eq %"struct.rubinius::Object"* %ci907, null, !dbg !19
  br i1 %111, label %ret_null902, label %method_body, !dbg !19
}

[[[ LLVM Optimized IR: _X_Object#vector_times_array@2 ]]]

define %"struct.rubinius::Object"* @"_X_Object#vector_times_array@2"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !17
  %cfstk908 = alloca [18 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %var_mem909 = alloca [11 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %call_frame = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 9, !dbg !17
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !17
  %arg.total = load i32* %total_pos, align 4, !dbg !17
  %arg_cmp = icmp eq i32 %arg.total, 1, !dbg !17
  %cfstk167910 = alloca [15 x %"struct.rubinius::Object"*], align 8
  %var_mem170911 = alloca [8 x %"struct.rubinius::Object"*], align 8
  %cfstk762912 = alloca [13 x %"struct.rubinius::Object"*], align 8
  %var_mem765913 = alloca [7 x %"struct.rubinius::Object"*], align 8
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !17

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !17
  br label %return_pad, !dbg !17

import_args:                                      ; preds = %entry
  %0 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 3, !dbg !17
  %1 = getelementptr inbounds [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 0, !dbg !17
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !17
  %2 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 8, !dbg !17
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !17
  %3 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !17
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !17
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !17
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !17
  %5 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 1, !dbg !17
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !17
  %6 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 4, !dbg !17
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !17
  store i32 40, i32* %7, align 8, !dbg !17
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !17
  store i32 0, i32* %8, align 4, !dbg !17
  %9 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 7, !dbg !17
  %vars.c = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem909 to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !17
  %10 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 140281080988304 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !17
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %11 = sext i32 %counter_alloca.0 to i64, !dbg !17
  %stack.sum = add i64 %11, 9, !dbg !17
  %stack_pos = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 %stack.sum, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !17
  %added = add i32 %counter_alloca.0, 1, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %12 = getelementptr inbounds [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 0, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %12, align 8, !dbg !17
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !17
  %args.recv = load %"struct.rubinius::Object"** %13, align 8, !dbg !17, !rbx-classid !18
  %14 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %14, align 8, !dbg !17
  %15 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 4, !dbg !17
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %15, align 8, !dbg !17
  %16 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %16, align 8, !dbg !17
  %17 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %17, align 8, !dbg !17
  %18 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 1, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %18, align 8, !dbg !17
  %19 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %19, align 8, !dbg !17
  %20 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 6, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !17
  %21 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 7, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !17
  %22 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 8, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !17
  %23 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 9, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !17
  %24 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 10, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %24, align 8, !dbg !17
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !17
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !17
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %20, align 8, !dbg !17
  %25 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !19
  %vm_jit903 = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !19
  %26 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i64 0, i32 1, !dbg !19
  %stack_limit = load i64* %26, align 8, !dbg !19
  %stack_end = ptrtoint [18 x %"struct.rubinius::Object"*]* %cfstk908 to i64, !dbg !19
  %27 = icmp ult i64 %stack_end, %stack_limit, !dbg !19
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i64 0, i32 5, !dbg !19
  %check_interrupts904 = load i8* %28, align 1, !dbg !19
  %check_global_interrupts905 = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !19
  %has_interrupts = or i8 %check_global_interrupts905, %check_interrupts904, !dbg !19
  %needs_interrupts906 = icmp ne i8 %has_interrupts, 0, !dbg !19
  %needs_check = or i1 %needs_interrupts906, %27, !dbg !19
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !19

bail_out:                                         ; preds = %interrupts884, %class_fallback842, %return_pad754, %interrupts, %class_fallback681, %poly_fallback662, %class_fallback524, %check_active501, %return_pad158, %class_fallback109, %use_call96, %class_fallback, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

method_body:                                      ; preds = %prologue_check, %bottom
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !17
  %constant = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 0, %"struct.rubinius::Object"** %stack), !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  %stack_pos7 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 10, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !20
  %stack_pos9 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 11, !dbg !20
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !20
  %stack_pos10 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 12, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !20
  %constant12 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos9), !dbg !20, !rbx-classid !21
  %stack_load16 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !20, !rbx-classid !22
  %stack_load19 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant12, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %21, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load16, %"struct.rubinius::Object"** %22, align 8, !dbg !20
  br label %ip18, !dbg !20

ip18:                                             ; preds = %interrupts884.ip18_crit_edge, %continue844, %method_body
  %stack_load42 = phi %"struct.rubinius::Object"* [ %local.pre, %interrupts884.ip18_crit_edge ], [ %send_result878, %continue844 ], [ %stack_load16, %method_body ]
  store %"struct.rubinius::Object"* %stack_load42, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23495592 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !23
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !23
  %constant_scope35 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !23
  %29 = load %"struct.rubinius::Object"** %5, align 8, !dbg !23
  %frame_scope = bitcast %"struct.rubinius::Object"* %29 to %"struct.rubinius::ConstantScope"*, !dbg !23
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope35, %frame_scope, !dbg !23
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !23

check_serial:                                     ; preds = %ip18
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !23
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !23
  %serial = load i32* %serial_pos, align 4, !dbg !23
  %use_cache36 = icmp eq i32 %global_serial, %serial, !dbg !23
  br i1 %use_cache36, label %use_cache, label %use_call, !dbg !23

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 2, !dbg !23
  %cached_value = load %"struct.rubinius::Object"** %value_pos, align 8, !dbg !23
  br label %continue, !dbg !23

use_call:                                         ; preds = %check_serial, %ip18
  store i32 20, i32* %8, align 4, !dbg !23
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23495592 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !23
  br i1 %null_check, label %bail_out, label %continue, !dbg !23

continue:                                         ; preds = %use_call, %use_cache
  %constant38 = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %use_call ], !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %constant38, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !23
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load42 to i64, !dbg !23
  %cast45 = ptrtoint %"struct.rubinius::Object"* %constant38 to i64, !dbg !23
  %fixnums_anded = and i64 %cast45, 1
  %masked = and i64 %fixnums_anded, %cast
  %is_fixnum = icmp eq i64 %masked, 0, !dbg !23
  br i1 %is_fixnum, label %class_fallback, label %push_le, !dbg !23

class_fallback:                                   ; preds = %continue
  store %"struct.rubinius::Object"* %stack_load42, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !23
  store i32 1, i32* %out_args_total, align 8, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !23
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 23495608 to %"struct.rubinius::CallSite"**), align 8, !dbg !23
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !23
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !23
  store i32 22, i32* %8, align 4, !dbg !23
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check50 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !23
  br i1 %null_check50, label %bail_out, label %continue40, !dbg !23

continue40:                                       ; preds = %class_fallback, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %30, %push_le ], [ %call_site_execute, %class_fallback ], !dbg !23
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  %as_int = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !23
  %and = and i64 %as_int, 15, !dbg !23
  %is_true = icmp eq i64 %and, 10, !dbg !23
  br i1 %is_true, label %ip114, label %ip27, !dbg !23

push_le:                                          ; preds = %continue
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %stack_load42, %constant38, !dbg !23
  %30 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue40, !dbg !23

ip27:                                             ; preds = %continue40
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !25
  %constant61 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos9), !dbg !25, !rbx-classid !21
  %stack_load66 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !25, !rbx-classid !22
  %stack_load69 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !25, !rbx-classid !22
  store %"struct.rubinius::Object"* %constant61, %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %23, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load66, %"struct.rubinius::Object"** %24, align 8, !dbg !25
  br label %ip44, !dbg !25

ip44:                                             ; preds = %interrupts.ip44_crit_edge, %continue683, %ip27
  %stack_load113 = phi %"struct.rubinius::Object"* [ %local85.pre, %interrupts.ip44_crit_edge ], [ %send_result717, %continue683 ], [ %stack_load66, %ip27 ]
  store %"struct.rubinius::Object"* %stack_load113, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %constant_cache88 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 23495800 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !26
  %constant_cache_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 4, !dbg !26
  %constant_scope90 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos89, align 8, !dbg !26
  %31 = load %"struct.rubinius::Object"** %5, align 8, !dbg !26
  %frame_scope92 = bitcast %"struct.rubinius::Object"* %31 to %"struct.rubinius::ConstantScope"*, !dbg !26
  %same_scope93 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope90, %frame_scope92, !dbg !26
  br i1 %same_scope93, label %check_serial94, label %use_call96, !dbg !26

check_serial94:                                   ; preds = %ip44
  %global_serial87 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !26
  %serial_pos98 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 7, !dbg !26
  %serial99 = load i32* %serial_pos98, align 4, !dbg !26
  %use_cache100 = icmp eq i32 %global_serial87, %serial99, !dbg !26
  br i1 %use_cache100, label %use_cache95, label %use_call96, !dbg !26

use_cache95:                                      ; preds = %check_serial94
  %value_pos101 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 2, !dbg !26
  %cached_value102 = load %"struct.rubinius::Object"** %value_pos101, align 8, !dbg !26
  br label %continue97, !dbg !26

use_call96:                                       ; preds = %check_serial94, %ip44
  store i32 46, i32* %8, align 4, !dbg !26
  %push_const_fast103 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 23495800 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !26
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast103, null, !dbg !26
  br i1 %null_check106, label %bail_out, label %continue97, !dbg !26

continue97:                                       ; preds = %use_call96, %use_cache95
  %constant107 = phi %"struct.rubinius::Object"* [ %cached_value102, %use_cache95 ], [ %push_const_fast103, %use_call96 ], !dbg !26, !rbx-classid !27
  store %"struct.rubinius::Object"* %constant107, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !26
  %cast114 = ptrtoint %"struct.rubinius::Object"* %stack_load113 to i64, !dbg !26
  %cast117 = ptrtoint %"struct.rubinius::Object"* %constant107 to i64, !dbg !26
  %fixnums_anded118 = and i64 %cast117, 1
  %masked119 = and i64 %fixnums_anded118, %cast114
  %is_fixnum120 = icmp eq i64 %masked119, 0, !dbg !26
  br i1 %is_fixnum120, label %class_fallback109, label %push_le121, !dbg !26

class_fallback109:                                ; preds = %continue97
  store %"struct.rubinius::Object"* %stack_load113, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 1, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const126 = load %"struct.rubinius::CallSite"** inttoptr (i64 23495816 to %"struct.rubinius::CallSite"**), align 8, !dbg !26
  %execute_pos127 = getelementptr %"struct.rubinius::CallSite"* %cache_const126, i64 0, i32 2, !dbg !26
  %execute128 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos127, align 8, !dbg !26
  store i32 48, i32* %8, align 4, !dbg !26
  %call_site_execute129 = call %"struct.rubinius::Object"* %execute128(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const126, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check131 = icmp eq %"struct.rubinius::Object"* %call_site_execute129, null, !dbg !26
  br i1 %null_check131, label %bail_out, label %continue111, !dbg !26

continue111:                                      ; preds = %class_fallback109, %push_le121
  %send_result132 = phi %"struct.rubinius::Object"* [ %32, %push_le121 ], [ %call_site_execute129, %class_fallback109 ], !dbg !26
  store %"struct.rubinius::Object"* %send_result132, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %as_int136 = ptrtoint %"struct.rubinius::Object"* %send_result132 to i64, !dbg !26
  %and137 = and i64 %as_int136, 15, !dbg !26
  %is_true138 = icmp eq i64 %and137, 10, !dbg !26
  br i1 %is_true138, label %ip92, label %ip53, !dbg !26

push_le121:                                       ; preds = %continue97
  %fixnum.lt122 = icmp slt %"struct.rubinius::Object"* %stack_load113, %constant107, !dbg !26
  %32 = select i1 %fixnum.lt122, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !26
  br label %continue111, !dbg !26

ip53:                                             ; preds = %continue111
  %local141 = load %"struct.rubinius::Object"** %23, align 8, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %local141, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %self = load %"struct.rubinius::Object"** %14, align 8, !dbg !28
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %local145 = load %"struct.rubinius::Object"** %22, align 8, !dbg !28, !rbx-classid !30
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %local148 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !31
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !28
  %cast155 = ptrtoint %"struct.rubinius::Object"* %self to i64, !dbg !28
  %masked156 = and i64 %cast155, 3, !dbg !28
  %is_reference = icmp eq i64 %masked156, 0, !dbg !28
  br i1 %is_reference, label %check_class_id, label %class_fallback150, !dbg !28

check_class_id:                                   ; preds = %ip53
  %class_pos = getelementptr %"struct.rubinius::Object"* %self, i64 0, i32 0, i32 1, !dbg !28
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !28
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !28
  %class_id = load i32* %class_id_pos, align 4, !dbg !28
  %check_class_id157 = icmp eq i32 %class_id, 683, !dbg !28
  br i1 %check_class_id157, label %correct_class, label %class_fallback150, !dbg !28

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !28
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !28
  %check_serial_id = icmp eq i32 %serial_id, 23, !dbg !28
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback151, !dbg !28

class_fallback150:                                ; preds = %check_class_id, %ip53
  store i32 61, i32* %8, align 4, !dbg !28
  %33 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 0), !dbg !28
  br label %return_pad, !dbg !28

correct_serial:                                   ; preds = %correct_class
  %call_frame168 = bitcast [15 x %"struct.rubinius::Object"*]* %cfstk167910 to %"struct.rubinius::CallFrame"*, !dbg !32
  %stack169 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 9, !dbg !32
  %34 = getelementptr inbounds [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 0, !dbg !32
  %call_frame.c = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %34, align 8, !dbg !32
  %35 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 2, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 140281081644832 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %35, align 8, !dbg !32
  %compiled_code172 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140281081644832 to %"struct.rubinius::CompiledCode"**), align 32, !dbg !32
  %36 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 3, !dbg !32
  %compiled_code172.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code172, i64 0, i32 0, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %compiled_code172.c, %"struct.rubinius::Object"** %36, align 8, !dbg !32
  %constant_scope_pos173 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code172, i64 0, i32 13, !dbg !32
  %constant_scope174 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos173, align 8, !dbg !32
  %37 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 1, !dbg !32
  %constant_scope174.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope174 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %constant_scope174.c, %"struct.rubinius::Object"** %37, align 8, !dbg !32
  %38 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 4, !dbg !32
  %39 = bitcast %"struct.rubinius::Object"** %38 to i32*, !dbg !32
  store i32 12, i32* %39, align 8, !dbg !32
  %40 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i64 0, i32 5, !dbg !32
  store i32 0, i32* %40, align 4, !dbg !32
  %41 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 7, !dbg !32
  %vars171.c = bitcast [8 x %"struct.rubinius::Object"*]* %var_mem170911 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %vars171.c, %"struct.rubinius::Object"** %41, align 8, !dbg !32
  br label %stack_nil175, !dbg !32

serial_fallback151:                               ; preds = %correct_class
  store i32 61, i32* %8, align 4, !dbg !28
  %42 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

stack_nil175:                                     ; preds = %stack_nil175, %correct_serial
  %counter_alloca.1 = phi i32 [ 0, %correct_serial ], [ %added179, %stack_nil175 ]
  %43 = sext i32 %counter_alloca.1 to i64, !dbg !32
  %stack169.sum = add i64 %43, 9, !dbg !32
  %stack_pos178 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 %stack169.sum, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos178, align 8, !dbg !32
  %added179 = add i32 %counter_alloca.1, 1, !dbg !32
  %loop_check180 = icmp eq i32 %added179, 6, !dbg !32
  br i1 %loop_check180, label %bottom176, label %stack_nil175, !dbg !32

bottom176:                                        ; preds = %stack_nil175
  %module = load %"struct.rubinius::Module"** inttoptr (i64 140281081644848 to %"struct.rubinius::Module"**), align 16, !dbg !32
  %44 = getelementptr inbounds [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 0, !dbg !32
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %44, align 8, !dbg !32
  %45 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 2, !dbg !32
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %45, align 8, !dbg !32
  %46 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 4, !dbg !32
  %module.c = getelementptr inbounds %"struct.rubinius::Module"* %module, i64 0, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %module.c, %"struct.rubinius::Object"** %46, align 8, !dbg !32
  %47 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 3, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %47, align 8, !dbg !32
  %48 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 1, !dbg !32
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %48, align 8, !dbg !32
  %49 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 5, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %49, align 8, !dbg !32
  %50 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 6, !dbg !32
  %51 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 7, !dbg !32
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %50, align 8, !dbg !32
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %51, align 8, !dbg !32
  %52 = load %"struct.rubinius::Object"** %36, align 8, !dbg !33
  %literals_pos = getelementptr %"struct.rubinius::Object"* %52, i64 8, !dbg !33
  %53 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !33
  %literals = load %"struct.rubinius::Tuple"** %53, align 8, !dbg !33
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 0, !dbg !33
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !33, !rbx-classid !34
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack169, align 8, !dbg !33
  %stack_pos200 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 10, !dbg !33
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %stack_pos203 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 11, !dbg !33
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast211 = ptrtoint %"struct.rubinius::Object"* %local145 to i64, !dbg !33
  %cast212 = ptrtoint %"struct.rubinius::Object"* %local148 to i64, !dbg !33
  %fixnums_anded213 = and i64 %cast212, 1, !dbg !33
  %masked214 = and i64 %fixnums_anded213, %cast211, !dbg !33
  %is_fixnum215 = icmp eq i64 %masked214, 0, !dbg !33
  br i1 %is_fixnum215, label %class_fallback204, label %push_add, !dbg !33

bail_out185:                                      ; preds = %class_fallback460, %class_fallback422, %class_fallback383, %class_fallback347, %class_fallback313, %class_fallback275, %class_fallback236, %class_fallback204
  %rth186 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168), !dbg !32
  br i1 %rth186, label %ret_raise_val187, label %return_pad158, !dbg !32

ret_raise_val187:                                 ; preds = %bail_out185
  %crv189 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !32
  br label %return_pad158, !dbg !32

class_fallback204:                                ; preds = %bottom176
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const222 = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos223 = getelementptr %"struct.rubinius::CallSite"* %cache_const222, i64 0, i32 2, !dbg !33
  %execute224 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos223, align 8, !dbg !33
  store i32 6, i32* %40, align 4, !dbg !33
  %call_site_execute225 = call %"struct.rubinius::Object"* %execute224(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const222, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check227 = icmp eq %"struct.rubinius::Object"* %call_site_execute225, null, !dbg !33
  br i1 %null_check227, label %bail_out185, label %continue206, !dbg !33

continue206:                                      ; preds = %class_fallback204, %bignum, %tagnow
  %send_result228 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute225, %class_fallback204 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result228, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %local231 = load %"struct.rubinius::Object"** %50, align 8, !dbg !33, !rbx-classid !35
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %local234 = load %"struct.rubinius::Object"** %51, align 8, !dbg !33, !rbx-classid !36
  %stack_pos235 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 12, !dbg !33
  store %"struct.rubinius::Object"* %local234, %"struct.rubinius::Object"** %stack_pos235, align 8, !dbg !33
  %cast247 = ptrtoint %"struct.rubinius::Object"* %local231 to i64, !dbg !33
  %cast248 = ptrtoint %"struct.rubinius::Object"* %local234 to i64, !dbg !33
  %fixnums_anded249 = and i64 %cast248, 1, !dbg !33
  %masked250 = and i64 %fixnums_anded249, %cast247, !dbg !33
  %is_fixnum251 = icmp eq i64 %masked250, 0, !dbg !33
  br i1 %is_fixnum251, label %class_fallback236, label %push_add243, !dbg !33

push_add:                                         ; preds = %bottom176
  %ashr = ashr i64 %cast211, 1, !dbg !33
  %ashr218 = ashr i64 %cast212, 1, !dbg !33
  %fixnum.add = add i64 %ashr, %ashr218, !dbg !33
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !33
  %54 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !33
  br i1 %54, label %tagnow, label %bignum, !dbg !33

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !33
  %or = or i64 %shl, 1, !dbg !33
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !33
  br label %continue206, !dbg !33

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #2, !dbg !33
  br label %continue206, !dbg !33

class_fallback236:                                ; preds = %continue206
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos235, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const266 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos267 = getelementptr %"struct.rubinius::CallSite"* %cache_const266, i64 0, i32 2, !dbg !33
  %execute268 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos267, align 8, !dbg !33
  store i32 13, i32* %40, align 4, !dbg !33
  %call_site_execute269 = call %"struct.rubinius::Object"* %execute268(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const266, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check271 = icmp eq %"struct.rubinius::Object"* %call_site_execute269, null, !dbg !33
  br i1 %null_check271, label %bail_out185, label %continue238, !dbg !33

continue238:                                      ; preds = %class_fallback236, %bignum245, %tagnow244
  %send_result272 = phi %"struct.rubinius::Object"* [ %big_value258, %bignum245 ], [ %as_obj261, %tagnow244 ], [ %call_site_execute269, %class_fallback236 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos235, align 8, !dbg !33
  %cast286 = ptrtoint %"struct.rubinius::Object"* %send_result272 to i64, !dbg !33
  %masked289 = and i64 %cast286, 1, !dbg !33
  %is_fixnum290 = icmp eq i64 %masked289, 0, !dbg !33
  br i1 %is_fixnum290, label %class_fallback275, label %push_add282, !dbg !33

push_add243:                                      ; preds = %continue206
  %ashr253 = ashr i64 %cast247, 1, !dbg !33
  %ashr255 = ashr i64 %cast248, 1, !dbg !33
  %fixnum.add256 = add i64 %ashr253, %ashr255, !dbg !33
  %fixnum.add256.off = add i64 %fixnum.add256, 4611686018427387903, !dbg !33
  %55 = icmp ult i64 %fixnum.add256.off, 9223372036854775807, !dbg !33
  br i1 %55, label %tagnow244, label %bignum245, !dbg !33

tagnow244:                                        ; preds = %push_add243
  %shl259 = shl i64 %fixnum.add256, 1, !dbg !33
  %or260 = or i64 %shl259, 1, !dbg !33
  %as_obj261 = inttoptr i64 %or260 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue238, !dbg !33

bignum245:                                        ; preds = %push_add243
  %big_value258 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add256) #2, !dbg !33
  br label %continue238, !dbg !33

class_fallback275:                                ; preds = %continue238
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos235, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const305 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos306 = getelementptr %"struct.rubinius::CallSite"* %cache_const305, i64 0, i32 2, !dbg !33
  %execute307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos306, align 8, !dbg !33
  store i32 17, i32* %40, align 4, !dbg !33
  %call_site_execute308 = call %"struct.rubinius::Object"* %execute307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const305, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check310 = icmp eq %"struct.rubinius::Object"* %call_site_execute308, null, !dbg !33
  br i1 %null_check310, label %bail_out185, label %continue277, !dbg !33

continue277:                                      ; preds = %class_fallback275, %bignum284, %tagnow283
  %send_result311 = phi %"struct.rubinius::Object"* [ %big_value297, %bignum284 ], [ %as_obj300, %tagnow283 ], [ %call_site_execute308, %class_fallback275 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result311, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %stack_load317 = load %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %cast322 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !33
  %cast323 = ptrtoint %"struct.rubinius::Object"* %send_result311 to i64, !dbg !33
  %fixnums_anded324 = and i64 %cast323, 1, !dbg !33
  %masked325 = and i64 %fixnums_anded324, %cast322, !dbg !33
  %is_fixnum326 = icmp eq i64 %masked325, 0, !dbg !33
  br i1 %is_fixnum326, label %class_fallback313, label %push_mul, !dbg !33

push_add282:                                      ; preds = %continue238
  %ashr292 = ashr i64 %cast286, 1, !dbg !33
  %fixnum.add295 = add i64 %ashr292, 1, !dbg !33
  %fixnum.add295.off = add i64 %ashr292, 4611686018427387904, !dbg !33
  %56 = icmp ult i64 %fixnum.add295.off, 9223372036854775807, !dbg !33
  br i1 %56, label %tagnow283, label %bignum284, !dbg !33

tagnow283:                                        ; preds = %push_add282
  %shl298 = shl i64 %fixnum.add295, 1, !dbg !33
  %or299 = or i64 %shl298, 1, !dbg !33
  %as_obj300 = inttoptr i64 %or299 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue277, !dbg !33

bignum284:                                        ; preds = %push_add282
  %big_value297 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add295) #2, !dbg !33
  br label %continue277, !dbg !33

class_fallback313:                                ; preds = %push_mul, %continue277
  store %"struct.rubinius::Object"* %stack_load317, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const338 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos339 = getelementptr %"struct.rubinius::CallSite"* %cache_const338, i64 0, i32 2, !dbg !33
  %execute340 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos339, align 8, !dbg !33
  store i32 20, i32* %40, align 4, !dbg !33
  %call_site_execute341 = call %"struct.rubinius::Object"* %execute340(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const338, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check343 = icmp eq %"struct.rubinius::Object"* %call_site_execute341, null, !dbg !33
  br i1 %null_check343, label %bail_out185, label %continue315, !dbg !33

continue315:                                      ; preds = %class_fallback313, %tagnow321
  %send_result344 = phi %"struct.rubinius::Object"* [ %as_obj334, %tagnow321 ], [ %call_site_execute341, %class_fallback313 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast354 = ptrtoint %"struct.rubinius::Object"* %send_result344 to i64, !dbg !33
  %masked356 = and i64 %cast354, -9223372036854775808, !dbg !33
  %fixnums_anded358 = and i64 %cast354, 1, !dbg !33
  %fixnums_ored = or i64 %masked356, 1, !dbg !33
  %is_fixnum_and = icmp ne i64 %fixnums_anded358, 0, !dbg !33
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !33
  %is_fixnum359 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !33
  br i1 %is_fixnum359, label %divide, label %class_fallback347, !dbg !33

push_mul:                                         ; preds = %continue277
  %ashr328 = ashr i64 %cast322, 1, !dbg !33
  %ashr330 = ashr i64 %cast323, 1, !dbg !33
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr328, i64 %ashr330), !dbg !33
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !33
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !33
  %did_overflow.not = xor i1 %did_overflow, true, !dbg !33
  %mul.off = add i64 %mul, 4611686018427387903, !dbg !33
  %57 = icmp ult i64 %mul.off, 9223372036854775807, !dbg !33
  %or.cond = and i1 %57, %did_overflow.not, !dbg !33
  br i1 %or.cond, label %tagnow321, label %class_fallback313, !dbg !33

tagnow321:                                        ; preds = %push_mul
  %shl332 = shl i64 %mul, 1, !dbg !33
  %or333 = or i64 %shl332, 1, !dbg !33
  %as_obj334 = inttoptr i64 %or333 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue315, !dbg !33

class_fallback347:                                ; preds = %continue315
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const372 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos373 = getelementptr %"struct.rubinius::CallSite"* %cache_const372, i64 0, i32 2, !dbg !33
  %execute374 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos373, align 8, !dbg !33
  store i32 24, i32* %40, align 4, !dbg !33
  %call_site_execute375 = call %"struct.rubinius::Object"* %execute374(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const372, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check377 = icmp eq %"struct.rubinius::Object"* %call_site_execute375, null, !dbg !33
  br i1 %null_check377, label %bail_out185, label %continue349, !dbg !33

continue349:                                      ; preds = %class_fallback347, %divide
  %send_result378 = phi %"struct.rubinius::Object"* [ %as_obj368, %divide ], [ %call_site_execute375, %class_fallback347 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %local381 = load %"struct.rubinius::Object"** %50, align 8, !dbg !33, !rbx-classid !35
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast394 = ptrtoint %"struct.rubinius::Object"* %send_result378 to i64, !dbg !33
  %cast395 = ptrtoint %"struct.rubinius::Object"* %local381 to i64, !dbg !33
  %fixnums_anded396 = and i64 %cast395, 1, !dbg !33
  %masked397 = and i64 %fixnums_anded396, %cast394, !dbg !33
  %is_fixnum398 = icmp eq i64 %masked397, 0, !dbg !33
  br i1 %is_fixnum398, label %class_fallback383, label %push_add390, !dbg !33

divide:                                           ; preds = %continue315
  %ashr363 = ashr i64 %cast354, 1, !dbg !33
  %fixnum.div = sdiv i64 %ashr363, 2, !dbg !33
  %shl366 = shl i64 %fixnum.div, 1, !dbg !33
  %or367 = or i64 %shl366, 1, !dbg !33
  %as_obj368 = inttoptr i64 %or367 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue349, !dbg !33

class_fallback383:                                ; preds = %continue349
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i64 0, i32 2, !dbg !33
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, align 8, !dbg !33
  store i32 29, i32* %40, align 4, !dbg !33
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !33
  br i1 %null_check418, label %bail_out185, label %continue385, !dbg !33

continue385:                                      ; preds = %class_fallback383, %bignum392, %tagnow391
  %send_result419 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], [ %call_site_execute416, %class_fallback383 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast433 = ptrtoint %"struct.rubinius::Object"* %send_result419 to i64, !dbg !33
  %masked436 = and i64 %cast433, 1, !dbg !33
  %is_fixnum437 = icmp eq i64 %masked436, 0, !dbg !33
  br i1 %is_fixnum437, label %class_fallback422, label %push_add429, !dbg !33

push_add390:                                      ; preds = %continue349
  %ashr400 = ashr i64 %cast394, 1, !dbg !33
  %ashr402 = ashr i64 %cast395, 1, !dbg !33
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !33
  %fixnum.add403.off = add i64 %fixnum.add403, 4611686018427387903, !dbg !33
  %58 = icmp ult i64 %fixnum.add403.off, 9223372036854775807, !dbg !33
  br i1 %58, label %tagnow391, label %bignum392, !dbg !33

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !33
  %or407 = or i64 %shl406, 1, !dbg !33
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue385, !dbg !33

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #2, !dbg !33
  br label %continue385, !dbg !33

class_fallback422:                                ; preds = %continue385
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const452 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos453 = getelementptr %"struct.rubinius::CallSite"* %cache_const452, i64 0, i32 2, !dbg !33
  %execute454 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos453, align 8, !dbg !33
  store i32 33, i32* %40, align 4, !dbg !33
  %call_site_execute455 = call %"struct.rubinius::Object"* %execute454(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const452, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check457 = icmp eq %"struct.rubinius::Object"* %call_site_execute455, null, !dbg !33
  br i1 %null_check457, label %bail_out185, label %continue424, !dbg !33

continue424:                                      ; preds = %class_fallback422, %bignum431, %tagnow430
  %send_result458 = phi %"struct.rubinius::Object"* [ %big_value444, %bignum431 ], [ %as_obj447, %tagnow430 ], [ %call_site_execute455, %class_fallback422 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result458, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %cast468 = ptrtoint %"struct.rubinius::Object"* %send_result458 to i64, !dbg !33
  %masked469 = and i64 %cast468, 3, !dbg !33
  %is_reference470 = icmp eq i64 %masked469, 0, !dbg !33
  br i1 %is_reference470, label %check_class_id471, label %continue467, !dbg !33

push_add429:                                      ; preds = %continue385
  %ashr439 = ashr i64 %cast433, 1, !dbg !33
  %fixnum.add442 = add i64 %ashr439, 1, !dbg !33
  %fixnum.add442.off = add i64 %ashr439, 4611686018427387904, !dbg !33
  %59 = icmp ult i64 %fixnum.add442.off, 9223372036854775807, !dbg !33
  br i1 %59, label %tagnow430, label %bignum431, !dbg !33

tagnow430:                                        ; preds = %push_add429
  %shl445 = shl i64 %fixnum.add442, 1, !dbg !33
  %or446 = or i64 %shl445, 1, !dbg !33
  %as_obj447 = inttoptr i64 %or446 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue424, !dbg !33

bignum431:                                        ; preds = %push_add429
  %big_value444 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add442) #2, !dbg !33
  br label %continue424, !dbg !33

continue462:                                      ; preds = %class_fallback460, %continue478
  %send_result496 = phi %"struct.rubinius::Object"* [ %64, %continue478 ], [ %call_site_execute493, %class_fallback460 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result496, %"struct.rubinius::Object"** %stack169, align 8, !dbg !33
  br label %return_pad158, !dbg !33

return_pad158:                                    ; preds = %bail_out185, %continue462, %ret_raise_val187
  %return_phi159 = phi %"struct.rubinius::Object"* [ %crv189, %ret_raise_val187 ], [ %send_result496, %continue462 ], [ null, %bail_out185 ]
  %null_check502 = icmp eq %"struct.rubinius::Object"* %return_phi159, null, !dbg !28
  br i1 %null_check502, label %bail_out, label %check_active501, !dbg !28

check_class_id471:                                ; preds = %continue424
  %class_pos473 = getelementptr %"struct.rubinius::Object"* %send_result458, i64 0, i32 0, i32 1, !dbg !33
  %ref_class474 = load %"struct.rubinius::Class"** %class_pos473, align 8, !dbg !33
  %class_id_pos475 = getelementptr %"struct.rubinius::Class"* %ref_class474, i64 0, i32 4, !dbg !33
  %class_id476 = load i32* %class_id_pos475, align 4, !dbg !33
  %check_class_id477 = icmp eq i32 %class_id476, 77, !dbg !33
  br i1 %check_class_id477, label %correct_class472, label %continue467, !dbg !33

correct_class472:                                 ; preds = %check_class_id471
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %send_result458, i64 1, !dbg !33
  %60 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !33
  %farg = load double* %60, align 8, !dbg !33
  br label %continue478, !dbg !33

continue467:                                      ; preds = %check_class_id471, %continue424
  %masked480 = and i64 %cast468, 1, !dbg !33
  %is_fixnum481 = icmp eq i64 %masked480, 0, !dbg !33
  br i1 %is_fixnum481, label %class_fallback460, label %guarded_body, !dbg !33

guarded_body:                                     ; preds = %continue467
  %ashr483 = ashr i64 %cast468, 1, !dbg !33
  %61 = sitofp i64 %ashr483 to double, !dbg !33
  br label %continue478, !dbg !33

continue478:                                      ; preds = %guarded_body, %correct_class472
  %rhs = phi double [ %farg, %correct_class472 ], [ %61, %guarded_body ], !dbg !33
  %stack_load485 = load %"struct.rubinius::Object"** %stack169, align 8, !dbg !33, !rbx-classid !34
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load485, i64 1, !dbg !33
  %62 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !33
  %fself = load double* %62, align 8, !dbg !33
  %float.div = fdiv double %fself, %rhs, !dbg !33
  %result486 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !33, !rbx-classid !34
  %63 = getelementptr %"struct.rubinius::Float"* %result486, i64 0, i32 1, !dbg !33
  store double %float.div, double* %63, align 8, !dbg !33
  %64 = getelementptr inbounds %"struct.rubinius::Float"* %result486, i64 0, i32 0, i32 0, !dbg !33
  br label %continue462, !dbg !33

class_fallback460:                                ; preds = %continue467
  %stack_load488 = load %"struct.rubinius::Object"** %stack169, align 8, !dbg !33, !rbx-classid !34
  store %"struct.rubinius::Object"* %stack_load488, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos200, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const490 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos491 = getelementptr %"struct.rubinius::CallSite"* %cache_const490, i64 0, i32 2, !dbg !33
  %execute492 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos491, align 8, !dbg !33
  store i32 36, i32* %40, align 4, !dbg !33
  %call_site_execute493 = call %"struct.rubinius::Object"* %execute492(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const490, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check495 = icmp eq %"struct.rubinius::Object"* %call_site_execute493, null, !dbg !33
  br i1 %null_check495, label %bail_out185, label %continue462, !dbg !33

check_active501:                                  ; preds = %return_pad158
  store %"struct.rubinius::Object"* %return_phi159, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %local505 = load %"struct.rubinius::Object"** %20, align 8, !dbg !28, !rbx-classid !35
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %local508 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !31
  store %"struct.rubinius::Object"* %local508, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !28
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const516 = load %"struct.rubinius::CallSite"** inttoptr (i64 23495976 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos517 = getelementptr %"struct.rubinius::CallSite"* %cache_const516, i64 0, i32 2, !dbg !28
  %execute518 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos517, align 8, !dbg !28
  store i32 68, i32* %8, align 4, !dbg !28
  %call_site_execute519 = call %"struct.rubinius::Object"* %execute518(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const516, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check522 = icmp eq %"struct.rubinius::Object"* %call_site_execute519, null, !dbg !28
  br i1 %null_check522, label %bail_out, label %check_active521, !dbg !28

check_active521:                                  ; preds = %check_active501
  store %"struct.rubinius::Object"* %call_site_execute519, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %stack_load528 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %cast529 = ptrtoint %"struct.rubinius::Object"* %stack_load528 to i64, !dbg !28
  %masked530 = and i64 %cast529, 3, !dbg !28
  %is_reference531 = icmp eq i64 %masked530, 0, !dbg !28
  br i1 %is_reference531, label %check_class_id532, label %class_fallback524, !dbg !28

continue526:                                      ; preds = %class_fallback524, %continue559
  %send_result582 = phi %"struct.rubinius::Object"* [ %70, %continue559 ], [ %call_site_execute579, %class_fallback524 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result582, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %stack_load592 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !28, !rbx-classid !29
  %cast599 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !28
  %cast600 = ptrtoint %"struct.rubinius::Object"* %send_result582 to i64, !dbg !28
  %fixnums_anded601 = and i64 %cast600, 1, !dbg !28
  %masked602 = and i64 %fixnums_anded601, %cast599, !dbg !28
  %is_fixnum603 = icmp eq i64 %masked602, 0, !dbg !28
  br i1 %is_fixnum603, label %poly_fallback, label %push_add595, !dbg !28

check_class_id532:                                ; preds = %check_active521
  %class_pos535 = getelementptr %"struct.rubinius::Object"* %stack_load528, i64 0, i32 0, i32 1, !dbg !28
  %ref_class536 = load %"struct.rubinius::Class"** %class_pos535, align 8, !dbg !28
  %class_id_pos537 = getelementptr %"struct.rubinius::Class"* %ref_class536, i64 0, i32 4, !dbg !28
  %class_id538 = load i32* %class_id_pos537, align 4, !dbg !28
  %check_class_id539 = icmp eq i32 %class_id538, 77, !dbg !28
  br i1 %check_class_id539, label %correct_class533, label %class_fallback524, !dbg !28

correct_class533:                                 ; preds = %check_class_id532
  %serial_id_pos540 = getelementptr %"struct.rubinius::Class"* %ref_class536, i64 0, i32 5, !dbg !28
  %serial_id541 = load i32* %serial_id_pos540, align 4, !dbg !28
  %check_serial_id542 = icmp eq i32 %serial_id541, 224, !dbg !28
  br i1 %check_serial_id542, label %correct_serial534, label %serial_fallback525, !dbg !28

correct_serial534:                                ; preds = %correct_class533
  %cast546 = ptrtoint %"struct.rubinius::Object"* %call_site_execute519 to i64, !dbg !28
  %masked547 = and i64 %cast546, 3, !dbg !28
  %is_reference548 = icmp eq i64 %masked547, 0, !dbg !28
  br i1 %is_reference548, label %check_class_id549, label %continue545, !dbg !28

serial_fallback525:                               ; preds = %correct_class533
  store i32 71, i32* %8, align 4, !dbg !28
  %65 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

check_class_id549:                                ; preds = %correct_serial534
  %class_pos551 = getelementptr %"struct.rubinius::Object"* %call_site_execute519, i64 0, i32 0, i32 1, !dbg !28
  %ref_class552 = load %"struct.rubinius::Class"** %class_pos551, align 8, !dbg !28
  %class_id_pos553 = getelementptr %"struct.rubinius::Class"* %ref_class552, i64 0, i32 4, !dbg !28
  %class_id554 = load i32* %class_id_pos553, align 4, !dbg !28
  %check_class_id555 = icmp eq i32 %class_id554, 77, !dbg !28
  br i1 %check_class_id555, label %correct_class550, label %continue545, !dbg !28

correct_class550:                                 ; preds = %check_class_id549
  %arg.value_pos557 = getelementptr %"struct.rubinius::Object"* %call_site_execute519, i64 1, !dbg !28
  %66 = bitcast %"struct.rubinius::Object"* %arg.value_pos557 to double*, !dbg !28
  %farg558 = load double* %66, align 8, !dbg !28
  br label %continue559, !dbg !28

continue545:                                      ; preds = %check_class_id549, %correct_serial534
  %masked561 = and i64 %cast546, 1, !dbg !28
  %is_fixnum562 = icmp eq i64 %masked561, 0, !dbg !28
  br i1 %is_fixnum562, label %class_fallback524, label %guarded_body563, !dbg !28

guarded_body563:                                  ; preds = %continue545
  %ashr565 = ashr i64 %cast546, 1, !dbg !28
  %67 = sitofp i64 %ashr565 to double, !dbg !28
  br label %continue559, !dbg !28

continue559:                                      ; preds = %guarded_body563, %correct_class550
  %rhs566 = phi double [ %farg558, %correct_class550 ], [ %67, %guarded_body563 ], !dbg !28
  %self.value_pos570 = getelementptr %"struct.rubinius::Object"* %stack_load528, i64 1, !dbg !28
  %68 = bitcast %"struct.rubinius::Object"* %self.value_pos570 to double*, !dbg !28
  %fself571 = load double* %68, align 8, !dbg !28
  %float.mul = fmul double %rhs566, %fself571, !dbg !28
  %result572 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !28, !rbx-classid !34
  %69 = getelementptr %"struct.rubinius::Float"* %result572, i64 0, i32 1, !dbg !28
  store double %float.mul, double* %69, align 8, !dbg !28
  %70 = getelementptr inbounds %"struct.rubinius::Float"* %result572, i64 0, i32 0, i32 0, !dbg !28
  br label %continue526, !dbg !28

class_fallback524:                                ; preds = %continue545, %check_class_id532, %check_active521
  store %"struct.rubinius::Object"* %stack_load528, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos9, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const576 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496000 to %"struct.rubinius::CallSite"**), align 64, !dbg !28
  %execute_pos577 = getelementptr %"struct.rubinius::CallSite"* %cache_const576, i64 0, i32 2, !dbg !28
  %execute578 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos577, align 8, !dbg !28
  store i32 71, i32* %8, align 4, !dbg !28
  %call_site_execute579 = call %"struct.rubinius::Object"* %execute578(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const576, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check581 = icmp eq %"struct.rubinius::Object"* %call_site_execute579, null, !dbg !28
  br i1 %null_check581, label %bail_out, label %continue526, !dbg !28

continue586:                                      ; preds = %poly_fallback662, %bignum597, %tagnow596, %continue648
  %send_result672 = phi %"struct.rubinius::Object"* [ %77, %continue648 ], [ %big_value610, %bignum597 ], [ %as_obj613, %tagnow596 ], [ %call_site_execute669, %poly_fallback662 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result672, %"struct.rubinius::Object"** %23, align 8, !dbg !28
  %local678 = load %"struct.rubinius::Object"** %24, align 8, !dbg !37, !rbx-classid !31
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %stack, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !37
  %cast692 = ptrtoint %"struct.rubinius::Object"* %local678 to i64, !dbg !37
  %masked695 = and i64 %cast692, 1, !dbg !37
  %is_fixnum696 = icmp eq i64 %masked695, 0, !dbg !37
  br i1 %is_fixnum696, label %class_fallback681, label %push_add688, !dbg !37

poly_fallback:                                    ; preds = %continue526
  %masked619 = and i64 %cast599, 3, !dbg !28
  %is_reference620 = icmp eq i64 %masked619, 0, !dbg !28
  br i1 %is_reference620, label %check_class_id621, label %poly_fallback662, !dbg !28

push_add595:                                      ; preds = %continue526
  %ashr605 = ashr i64 %cast599, 1, !dbg !28
  %ashr607 = ashr i64 %cast600, 1, !dbg !28
  %fixnum.add608 = add i64 %ashr605, %ashr607, !dbg !28
  %fixnum.add608.off = add i64 %fixnum.add608, 4611686018427387903, !dbg !28
  %71 = icmp ult i64 %fixnum.add608.off, 9223372036854775807, !dbg !28
  br i1 %71, label %tagnow596, label %bignum597, !dbg !28

tagnow596:                                        ; preds = %push_add595
  %shl611 = shl i64 %fixnum.add608, 1, !dbg !28
  %or612 = or i64 %shl611, 1, !dbg !28
  %as_obj613 = inttoptr i64 %or612 to %"struct.rubinius::Object"*, !dbg !28
  br label %continue586, !dbg !28

bignum597:                                        ; preds = %push_add595
  %big_value610 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add608) #2, !dbg !28
  br label %continue586, !dbg !28

check_class_id621:                                ; preds = %poly_fallback
  %class_pos624 = getelementptr %"struct.rubinius::Object"* %stack_load592, i64 0, i32 0, i32 1, !dbg !28
  %ref_class625 = load %"struct.rubinius::Class"** %class_pos624, align 8, !dbg !28
  %class_id_pos626 = getelementptr %"struct.rubinius::Class"* %ref_class625, i64 0, i32 4, !dbg !28
  %class_id627 = load i32* %class_id_pos626, align 4, !dbg !28
  %check_class_id628 = icmp eq i32 %class_id627, 77, !dbg !28
  br i1 %check_class_id628, label %correct_class622, label %poly_fallback662, !dbg !28

correct_class622:                                 ; preds = %check_class_id621
  %serial_id_pos629 = getelementptr %"struct.rubinius::Class"* %ref_class625, i64 0, i32 5, !dbg !28
  %serial_id630 = load i32* %serial_id_pos629, align 4, !dbg !28
  %check_serial_id631 = icmp eq i32 %serial_id630, 224, !dbg !28
  br i1 %check_serial_id631, label %correct_serial623, label %serial_fallback585, !dbg !28

correct_serial623:                                ; preds = %correct_class622
  %masked636 = and i64 %cast600, 3, !dbg !28
  %is_reference637 = icmp eq i64 %masked636, 0, !dbg !28
  br i1 %is_reference637, label %check_class_id638, label %continue634, !dbg !28

serial_fallback585:                               ; preds = %correct_class622
  store i32 74, i32* %8, align 4, !dbg !28
  %72 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

check_class_id638:                                ; preds = %correct_serial623
  %class_pos640 = getelementptr %"struct.rubinius::Object"* %send_result582, i64 0, i32 0, i32 1, !dbg !28
  %ref_class641 = load %"struct.rubinius::Class"** %class_pos640, align 8, !dbg !28
  %class_id_pos642 = getelementptr %"struct.rubinius::Class"* %ref_class641, i64 0, i32 4, !dbg !28
  %class_id643 = load i32* %class_id_pos642, align 4, !dbg !28
  %check_class_id644 = icmp eq i32 %class_id643, 77, !dbg !28
  br i1 %check_class_id644, label %correct_class639, label %continue634, !dbg !28

correct_class639:                                 ; preds = %check_class_id638
  %arg.value_pos646 = getelementptr %"struct.rubinius::Object"* %send_result582, i64 1, !dbg !28
  %73 = bitcast %"struct.rubinius::Object"* %arg.value_pos646 to double*, !dbg !28
  %farg647 = load double* %73, align 8, !dbg !28
  br label %continue648, !dbg !28

continue634:                                      ; preds = %check_class_id638, %correct_serial623
  %is_fixnum651 = icmp eq i64 %fixnums_anded601, 0, !dbg !28
  br i1 %is_fixnum651, label %poly_fallback662, label %guarded_body652, !dbg !28

guarded_body652:                                  ; preds = %continue634
  %ashr654 = ashr i64 %cast600, 1, !dbg !28
  %74 = sitofp i64 %ashr654 to double, !dbg !28
  br label %continue648, !dbg !28

continue648:                                      ; preds = %guarded_body652, %correct_class639
  %rhs655 = phi double [ %farg647, %correct_class639 ], [ %74, %guarded_body652 ], !dbg !28
  %self.value_pos659 = getelementptr %"struct.rubinius::Object"* %stack_load592, i64 1, !dbg !28
  %75 = bitcast %"struct.rubinius::Object"* %self.value_pos659 to double*, !dbg !28
  %fself660 = load double* %75, align 8, !dbg !28
  %float.add = fadd double %rhs655, %fself660, !dbg !28
  %result661 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !28, !rbx-classid !34
  %76 = getelementptr %"struct.rubinius::Float"* %result661, i64 0, i32 1, !dbg !28
  store double %float.add, double* %76, align 8, !dbg !28
  %77 = getelementptr inbounds %"struct.rubinius::Float"* %result661, i64 0, i32 0, i32 0, !dbg !28
  br label %continue586, !dbg !28

poly_fallback662:                                 ; preds = %continue634, %poly_fallback, %check_class_id621
  store %"struct.rubinius::Object"* %stack_load592, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const666 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496024 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos667 = getelementptr %"struct.rubinius::CallSite"* %cache_const666, i64 0, i32 2, !dbg !28
  %execute668 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos667, align 8, !dbg !28
  store i32 74, i32* %8, align 4, !dbg !28
  %call_site_execute669 = call %"struct.rubinius::Object"* %execute668(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const666, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check671 = icmp eq %"struct.rubinius::Object"* %call_site_execute669, null, !dbg !28
  br i1 %null_check671, label %bail_out, label %continue586, !dbg !28

class_fallback681:                                ; preds = %continue586
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !37
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !37
  store i32 1, i32* %out_args_total, align 8, !dbg !37
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !37
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !37
  %cache_const711 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496096 to %"struct.rubinius::CallSite"**), align 32, !dbg !37
  %execute_pos712 = getelementptr %"struct.rubinius::CallSite"* %cache_const711, i64 0, i32 2, !dbg !37
  %execute713 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos712, align 8, !dbg !37
  store i32 83, i32* %8, align 4, !dbg !37
  %call_site_execute714 = call %"struct.rubinius::Object"* %execute713(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const711, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !37
  %null_check716 = icmp eq %"struct.rubinius::Object"* %call_site_execute714, null, !dbg !37
  br i1 %null_check716, label %bail_out, label %continue683, !dbg !37

continue683:                                      ; preds = %class_fallback681, %bignum690, %tagnow689
  %send_result717 = phi %"struct.rubinius::Object"* [ %big_value703, %bignum690 ], [ %as_obj706, %tagnow689 ], [ %call_site_execute714, %class_fallback681 ], !dbg !37
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %stack, align 8, !dbg !37
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %24, align 8, !dbg !37
  %vm_jit = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !37
  %78 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !37
  %check_interrupts = load i8* %78, align 1, !dbg !37
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !37
  %or723 = or i8 %check_global_interrupts, %check_interrupts, !dbg !37
  %needs_interrupts = icmp eq i8 %or723, 0, !dbg !37
  br i1 %needs_interrupts, label %ip44, label %interrupts, !dbg !37

push_add688:                                      ; preds = %continue586
  %ashr698 = ashr i64 %cast692, 1, !dbg !37
  %fixnum.add701 = add i64 %ashr698, 1, !dbg !37
  %fixnum.add701.off = add i64 %ashr698, 4611686018427387904, !dbg !37
  %79 = icmp ult i64 %fixnum.add701.off, 9223372036854775807, !dbg !37
  br i1 %79, label %tagnow689, label %bignum690, !dbg !37

tagnow689:                                        ; preds = %push_add688
  %shl704 = shl i64 %fixnum.add701, 1, !dbg !37
  %or705 = or i64 %shl704, 1, !dbg !37
  %as_obj706 = inttoptr i64 %or705 to %"struct.rubinius::Object"*, !dbg !37
  br label %continue683, !dbg !37

bignum690:                                        ; preds = %push_add688
  %big_value703 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add701) #2, !dbg !37
  br label %continue683, !dbg !37

interrupts:                                       ; preds = %continue683
  store i32 89, i32* %8, align 4, !dbg !37
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !37
  %null_check726 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !37
  br i1 %null_check726, label %bail_out, label %interrupts.ip44_crit_edge, !dbg !37

interrupts.ip44_crit_edge:                        ; preds = %interrupts
  %local85.pre = load %"struct.rubinius::Object"** %24, align 8, !dbg !26
  br label %ip44, !dbg !37

ip92:                                             ; preds = %continue111
  %local730 = load %"struct.rubinius::Object"** %21, align 8, !dbg !38, !rbx-classid !36
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %local733 = load %"struct.rubinius::Object"** %23, align 8, !dbg !38, !rbx-classid !29
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !38
  %cast740 = ptrtoint %"struct.rubinius::Object"* %local730 to i64, !dbg !38
  %masked741 = and i64 %cast740, 3, !dbg !38
  %is_reference742 = icmp eq i64 %masked741, 0, !dbg !38
  br i1 %is_reference742, label %check_class_id743, label %class_fallback735, !dbg !38

check_class_id743:                                ; preds = %ip92
  %class_pos746 = getelementptr %"struct.rubinius::Object"* %local730, i64 0, i32 0, i32 1, !dbg !38
  %ref_class747 = load %"struct.rubinius::Class"** %class_pos746, align 8, !dbg !38
  %class_id_pos748 = getelementptr %"struct.rubinius::Class"* %ref_class747, i64 0, i32 4, !dbg !38
  %class_id749 = load i32* %class_id_pos748, align 4, !dbg !38
  %check_class_id750 = icmp eq i32 %class_id749, 6, !dbg !38
  br i1 %check_class_id750, label %correct_class744, label %class_fallback735, !dbg !38

correct_class744:                                 ; preds = %check_class_id743
  %serial_id_pos751 = getelementptr %"struct.rubinius::Class"* %ref_class747, i64 0, i32 5, !dbg !38
  %serial_id752 = load i32* %serial_id_pos751, align 4, !dbg !38
  %check_serial_id753 = icmp eq i32 %serial_id752, 249, !dbg !38
  br i1 %check_serial_id753, label %correct_serial745, label %serial_fallback736, !dbg !38

class_fallback735:                                ; preds = %check_class_id743, %ip92
  store i32 98, i32* %8, align 4, !dbg !38
  %80 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 0), !dbg !38
  br label %return_pad, !dbg !38

correct_serial745:                                ; preds = %correct_class744
  %call_frame763 = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk762912 to %"struct.rubinius::CallFrame"*, !dbg !39
  %stack764 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 9, !dbg !39
  %81 = getelementptr inbounds [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 0, !dbg !39
  %call_frame.c914 = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %call_frame.c914, %"struct.rubinius::Object"** %81, align 8, !dbg !39
  %82 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 2, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 140281081206928 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %82, align 8, !dbg !39
  %compiled_code767 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140281081206928 to %"struct.rubinius::CompiledCode"**), align 16, !dbg !39
  %83 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 3, !dbg !39
  %compiled_code767.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code767, i64 0, i32 0, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %compiled_code767.c, %"struct.rubinius::Object"** %83, align 8, !dbg !39
  %constant_scope_pos768 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code767, i64 0, i32 13, !dbg !39
  %constant_scope769 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos768, align 8, !dbg !39
  %84 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 1, !dbg !39
  %constant_scope769.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope769 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %constant_scope769.c, %"struct.rubinius::Object"** %84, align 8, !dbg !39
  %85 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 4, !dbg !39
  %86 = bitcast %"struct.rubinius::Object"** %85 to i32*, !dbg !39
  store i32 12, i32* %86, align 8, !dbg !39
  %87 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i64 0, i32 5, !dbg !39
  store i32 0, i32* %87, align 4, !dbg !39
  %88 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 7, !dbg !39
  %vars766.c = bitcast [7 x %"struct.rubinius::Object"*]* %var_mem765913 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %vars766.c, %"struct.rubinius::Object"** %88, align 8, !dbg !39
  %stack_pos771 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 10, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos771, align 8, !dbg !39
  %stack_pos772 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 11, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos772, align 8, !dbg !39
  %stack_pos773 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 12, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos773, align 8, !dbg !39
  %module774 = load %"struct.rubinius::Module"** inttoptr (i64 140281081206944 to %"struct.rubinius::Module"**), align 32, !dbg !39
  %89 = getelementptr inbounds [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 0, !dbg !39
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %89, align 8, !dbg !39
  %90 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 2, !dbg !39
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %90, align 8, !dbg !39
  %91 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 4, !dbg !39
  %module774.c = getelementptr inbounds %"struct.rubinius::Module"* %module774, i64 0, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %module774.c, %"struct.rubinius::Object"** %91, align 8, !dbg !39
  %92 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 3, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %92, align 8, !dbg !39
  %93 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 1, !dbg !39
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %93, align 8, !dbg !39
  %94 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 5, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %94, align 8, !dbg !39
  %95 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 6, !dbg !39
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %95, align 8, !dbg !39
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack764, align 8, !dbg !40
  %field_pos915 = getelementptr %"struct.rubinius::Object"* %local730, i64 1, !dbg !40
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos915 to %"struct.rubinius::Object"**, !dbg !40
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !40
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos771, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos772, align 8, !dbg !40
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_aset(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"* %local733) #2, !dbg !40
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !40
  switch i64 %magicptr, label %continue798 [
    i64 34, label %poly_fallback815
    i64 0, label %bail_out777
  ], !dbg !40

serial_fallback736:                               ; preds = %correct_class744
  store i32 98, i32* %8, align 4, !dbg !38
  %96 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080988304 to i8*), i32 0, i8 1), !dbg !38
  br label %return_pad, !dbg !38

bail_out777:                                      ; preds = %correct_serial745, %poly_fallback815
  %rth778 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763), !dbg !39
  br i1 %rth778, label %ret_raise_val779, label %return_pad754, !dbg !39

ret_raise_val779:                                 ; preds = %bail_out777
  %crv781 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !39
  br label %return_pad754, !dbg !39

continue798:                                      ; preds = %poly_fallback815, %correct_serial745
  %self830 = load %"struct.rubinius::Object"** %90, align 8, !dbg !41, !rbx-classid !42
  store %"struct.rubinius::Object"* %self830, %"struct.rubinius::Object"** %stack764, align 8, !dbg !41
  br label %return_pad754, !dbg !41

return_pad754:                                    ; preds = %bail_out777, %continue798, %ret_raise_val779
  %return_phi755 = phi %"struct.rubinius::Object"* [ %crv781, %ret_raise_val779 ], [ %self830, %continue798 ], [ null, %bail_out777 ]
  %null_check836 = icmp eq %"struct.rubinius::Object"* %return_phi755, null, !dbg !38
  br i1 %null_check836, label %bail_out, label %check_active835, !dbg !38

poly_fallback815:                                 ; preds = %correct_serial745
  %stack_load820 = load %"struct.rubinius::Object"** %stack764, align 8, !dbg !40, !rbx-classid !42
  store %"struct.rubinius::Object"* %stack_load820, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 30886 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 2, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos771, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const822 = load %"struct.rubinius::CallSite"** inttoptr (i64 24569320 to %"struct.rubinius::CallSite"**), align 8, !dbg !40
  %execute_pos823 = getelementptr %"struct.rubinius::CallSite"* %cache_const822, i64 0, i32 2, !dbg !40
  %execute824 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos823, align 8, !dbg !40
  store i32 6, i32* %87, align 4, !dbg !40
  %call_site_execute825 = call %"struct.rubinius::Object"* %execute824(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const822, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check827 = icmp eq %"struct.rubinius::Object"* %call_site_execute825, null, !dbg !40
  br i1 %null_check827, label %bail_out777, label %continue798, !dbg !40

check_active835:                                  ; preds = %return_pad754
  %local839 = load %"struct.rubinius::Object"** %22, align 8, !dbg !43, !rbx-classid !30
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %stack, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !43
  %cast853 = ptrtoint %"struct.rubinius::Object"* %local839 to i64, !dbg !43
  %masked856 = and i64 %cast853, 1, !dbg !43
  %is_fixnum857 = icmp eq i64 %masked856, 0, !dbg !43
  br i1 %is_fixnum857, label %class_fallback842, label %push_add849, !dbg !43

class_fallback842:                                ; preds = %check_active835
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !43
  store i32 1, i32* %out_args_total, align 8, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !43
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 23496272 to %"struct.rubinius::CallSite"**), align 16, !dbg !43
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i64 0, i32 2, !dbg !43
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, align 8, !dbg !43
  store i32 105, i32* %8, align 4, !dbg !43
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !43
  br i1 %null_check877, label %bail_out, label %continue844, !dbg !43

continue844:                                      ; preds = %class_fallback842, %bignum851, %tagnow850
  %send_result878 = phi %"struct.rubinius::Object"* [ %big_value864, %bignum851 ], [ %as_obj867, %tagnow850 ], [ %call_site_execute875, %class_fallback842 ], !dbg !43
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %stack, align 8, !dbg !43
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %22, align 8, !dbg !43
  %vm_jit886 = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !43
  %97 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit886, i64 0, i32 5, !dbg !43
  %check_interrupts887 = load i8* %97, align 1, !dbg !43
  %check_global_interrupts888 = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !43
  %or889 = or i8 %check_global_interrupts888, %check_interrupts887, !dbg !43
  %needs_interrupts890 = icmp eq i8 %or889, 0, !dbg !43
  br i1 %needs_interrupts890, label %ip18, label %interrupts884, !dbg !43

push_add849:                                      ; preds = %check_active835
  %ashr859 = ashr i64 %cast853, 1, !dbg !43
  %fixnum.add862 = add i64 %ashr859, 1, !dbg !43
  %fixnum.add862.off = add i64 %ashr859, 4611686018427387904, !dbg !43
  %98 = icmp ult i64 %fixnum.add862.off, 9223372036854775807, !dbg !43
  br i1 %98, label %tagnow850, label %bignum851, !dbg !43

tagnow850:                                        ; preds = %push_add849
  %shl865 = shl i64 %fixnum.add862, 1, !dbg !43
  %or866 = or i64 %shl865, 1, !dbg !43
  %as_obj867 = inttoptr i64 %or866 to %"struct.rubinius::Object"*, !dbg !43
  br label %continue844, !dbg !43

bignum851:                                        ; preds = %push_add849
  %big_value864 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add862) #2, !dbg !43
  br label %continue844, !dbg !43

interrupts884:                                    ; preds = %continue844
  store i32 111, i32* %8, align 4, !dbg !43
  %ci891 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !43
  %null_check894 = icmp eq %"struct.rubinius::Object"* %ci891, null, !dbg !43
  br i1 %null_check894, label %bail_out, label %interrupts884.ip18_crit_edge, !dbg !43

interrupts884.ip18_crit_edge:                     ; preds = %interrupts884
  %local.pre = load %"struct.rubinius::Object"** %22, align 8, !dbg !23
  br label %ip18, !dbg !43

ip114:                                            ; preds = %continue40
  %local898 = load %"struct.rubinius::Object"** %21, align 8, !dbg !19, !rbx-classid !36
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  br label %return_pad, !dbg !19

return_pad:                                       ; preds = %prologue_check, %bail_out, %ip114, %serial_fallback736, %class_fallback735, %serial_fallback585, %serial_fallback525, %serial_fallback151, %class_fallback150, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %33, %class_fallback150 ], [ %42, %serial_fallback151 ], [ %65, %serial_fallback525 ], [ %72, %serial_fallback585 ], [ %80, %class_fallback735 ], [ %96, %serial_fallback736 ], [ %local898, %ip114 ], [ null, %bail_out ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !19

prologue_check:                                   ; preds = %bottom
  %ci907 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  %99 = icmp eq %"struct.rubinius::Object"* %ci907, null, !dbg !19
  br i1 %99, label %return_pad, label %method_body, !dbg !19
}

[[[ JIT Machine Code: _X_Object#vector_times_array@2 ]]]
0x7f95d65c6510  push %rbp               
0x7f95d65c6511  mov %rsp, %rbp          
0x7f95d65c6514  push %r15               
0x7f95d65c6516  push %r14               
0x7f95d65c6518  push %r13               
0x7f95d65c651a  push %r12               
0x7f95d65c651c  push %rbx               
0x7f95d65c651d  subq $0x298, %rsp       
0x7f95d65c6524  mov %rdi, %r13          
0x7f95d65c6527  cmp $0x1, 0x18(%r8)     
0x7f95d65c652c  jnz 0x1fa                ; 0x7f95d65c670a
0x7f95d65c6532  lea -0xa0(%rbp), %r15   
0x7f95d65c6539  mov %rsi, -0xe8(%rbp)   
0x7f95d65c6540  mov %r8, -0xa8(%rbp)    
0x7f95d65c6547  movq $0x0, -0xd8(%rbp)  
0x7f95d65c6552  mov %rdx, -0xd0(%rbp)   
0x7f95d65c6559  mov 0xa0(%rdx), %rax    
0x7f95d65c6560  mov %rax, -0xe0(%rbp)   
0x7f95d65c6567  mov $0x28, -0xc8(%rbp)  
0x7f95d65c6571  mov $0x0, -0xc4(%rbp)   
0x7f95d65c657b  lea -0x140(%rbp), %rax  
0x7f95d65c6582  mov %rax, -0xb0(%rbp)   
0x7f95d65c6589  mov $0x7f95bc004290, %rax
0x7f95d65c6593  mov %rax, -0xc0(%rbp)   
0x7f95d65c659a  movq $0xffffffb8, %rax  
0x7f95d65c65a1  mov $0x9, %edx          
0x7f95d65c65a6  lea -0xe8(%rbp), %r14   
0x7f95d65c65ad  mov %r14, %rsi          
0x7f95d65c65b0  sub %rax, %rsi          
0x7f95d65c65b3  movq $0x1a, (%rsi)      
0x7f95d65c65ba  addq $0xf8, %rax        
0x7f95d65c65be  dec %edx                
0x7f95d65c65c0  jnz 0x9d                 ; 0x7f95d65c65ad
0x7f95d65c65c6  movq $0x0, -0x140(%rbp) 
0x7f95d65c65d1  mov 0x8(%r8), %rax      
0x7f95d65c65d5  mov %rax, -0x130(%rbp)  
0x7f95d65c65dc  mov %rcx, -0x120(%rbp)  
0x7f95d65c65e3  mov 0x10(%r8), %rax     
0x7f95d65c65e7  mov %rax, -0x128(%rbp)  
0x7f95d65c65ee  movq $0x0, -0x138(%rbp) 
0x7f95d65c65f9  movq $0x1a, -0x118(%rbp)
0x7f95d65c6604  movq $0x1a, -0x110(%rbp)
0x7f95d65c660f  movq $0x1a, -0x108(%rbp)
0x7f95d65c661a  movq $0x1a, -0x100(%rbp)
0x7f95d65c6625  movq $0x1a, -0xf8(%rbp) 
0x7f95d65c6630  movq $0x1a, -0xf0(%rbp) 
0x7f95d65c663b  mov 0x20(%r8), %rax     
0x7f95d65c663f  mov (%rax), %rax        
0x7f95d65c6642  mov %rax, -0x110(%rbp)  
0x7f95d65c6649  mov 0x8(%r13), %rax     
0x7f95d65c664d  mov 0x15824fe, %cl      
0x7f95d65c6654  or 0x16(%rax), %cl      
0x7f95d65c6657  jnz 0x157                ; 0x7f95d65c6667
0x7f95d65c665d  cmp 0x8(%rax), %r14     
0x7f95d65c6661  jae 0x17b                ; 0x7f95d65c668b
0x7f95d65c6667  mov $0x762f80, %rax      ; rbx_prologue_check
0x7f95d65c6671  lea -0xe8(%rbp), %rsi   
0x7f95d65c6678  mov %r13, %rdi          
0x7f95d65c667b  callq *%rax             
0x7f95d65c667d  mov %rax, %rcx          
0x7f95d65c6680  xor %eax, %eax          
0x7f95d65c6682  test %rcx, %rcx         
0x7f95d65c6685  jz 0x1384                ; 0x7f95d65c7894
0x7f95d65c668b  mov $0x762710, %rbx      ; rbx_make_array
0x7f95d65c6695  xor %esi, %esi          
0x7f95d65c6697  mov %r13, %rdi          
0x7f95d65c669a  mov %r15, %rdx          
0x7f95d65c669d  callq *%rbx             
0x7f95d65c669f  mov %rax, -0xa0(%rbp)   
0x7f95d65c66a6  movq $0x1, -0x98(%rbp)  
0x7f95d65c66b1  lea -0x90(%rbp), %rdx   
0x7f95d65c66b8  mov %rax, -0x90(%rbp)   
0x7f95d65c66bf  movq $0x1, -0x88(%rbp)  
0x7f95d65c66ca  mov $0x2, %esi          
0x7f95d65c66cf  mov %r13, %rdi          
0x7f95d65c66d2  callq *%rbx             
0x7f95d65c66d4  mov -0xa0(%rbp), %rcx   
0x7f95d65c66db  mov -0x98(%rbp), %r15   
0x7f95d65c66e2  mov %rax, -0xa0(%rbp)   
0x7f95d65c66e9  mov %rcx, -0x90(%rbp)   
0x7f95d65c66f0  mov %rcx, -0x108(%rbp)  
0x7f95d65c66f7  lea -0x1b8(%rbp), %r12  
0x7f95d65c66fe  mov %r15, -0x100(%rbp)  
0x7f95d65c6705  jmp 0x21d                ; 0x7f95d65c672d
0x7f95d65c670a  mov $0x760d50, %rax      ; rbx_arg_error
0x7f95d65c6714  mov $0x1, %ecx          
0x7f95d65c6719  mov %r13, %rdi          
0x7f95d65c671c  mov %r8, %rdx           
0x7f95d65c671f  callq *%rax             
0x7f95d65c6721  jmp 0x1384               ; 0x7f95d65c7894
0x7f95d65c6726  mov -0x100(%rbp), %r15  
0x7f95d65c672d  mov %r15, -0xa0(%rbp)   
0x7f95d65c6734  mov 0x16683a8, %rax     
0x7f95d65c673c  mov 0x30(%rax), %rcx    
0x7f95d65c6740  cmp -0xe0(%rbp), %rcx   
0x7f95d65c6747  jnz 0x256                ; 0x7f95d65c6766
0x7f95d65c674d  mov 0x15824f4, %ecx     
0x7f95d65c6754  cmp 0x44(%rax), %ecx    
0x7f95d65c6757  jnz 0x256                ; 0x7f95d65c6766
0x7f95d65c675d  mov 0x20(%rax), %rax    
0x7f95d65c6761  jmp 0x280                ; 0x7f95d65c6790
0x7f95d65c6766  mov $0x14, -0xc4(%rbp)  
0x7f95d65c6770  mov $0x16683a8, %edx    
0x7f95d65c6775  mov %r13, %rdi          
0x7f95d65c6778  mov %r14, %rsi          
0x7f95d65c677b  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c6785  callq *%rax             
0x7f95d65c6787  test %rax, %rax         
0x7f95d65c678a  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c6790  mov %rax, -0x98(%rbp)   
0x7f95d65c6797  mov %eax, %ecx          
0x7f95d65c6799  and %r15d, %ecx         
0x7f95d65c679c  testb $0x1, %cl         
0x7f95d65c679f  jnz 0x2f3                ; 0x7f95d65c6803
0x7f95d65c67a5  mov %r15, -0x50(%rbp)   
0x7f95d65c67a9  movq $0x586, -0x58(%rbp)
0x7f95d65c67b1  movq $0x1a, -0x48(%rbp) 
0x7f95d65c67b9  mov $0x1, -0x40(%rbp)   
0x7f95d65c67c0  movq $0x0, -0x30(%rbp)  
0x7f95d65c67c8  lea -0x98(%rbp), %rax   
0x7f95d65c67cf  mov %rax, -0x38(%rbp)   
0x7f95d65c67d3  mov 0x16683b8, %rsi     
0x7f95d65c67db  mov 0x20(%rsi), %rax    
0x7f95d65c67df  mov $0x16, -0xc4(%rbp)  
0x7f95d65c67e9  mov %r13, %rdi          
0x7f95d65c67ec  mov %r14, %rdx          
0x7f95d65c67ef  lea -0x58(%rbp), %rcx   
0x7f95d65c67f3  callq *%rax             
0x7f95d65c67f5  test %rax, %rax         
0x7f95d65c67f8  jnz 0x304                ; 0x7f95d65c6814
0x7f95d65c67fe  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c6803  cmp %rax, %r15          
0x7f95d65c6806  setl %al                
0x7f95d65c6809  movzxb %al, %eax        
0x7f95d65c680c  lea 0xa(%rax,8), %rax   
0x7f95d65c6814  mov %rax, -0xa0(%rbp)   
0x7f95d65c681b  andq $0xf, %rax         
0x7f95d65c681f  cmpq $0xa, %rax         
0x7f95d65c6823  jz 0x1396                ; 0x7f95d65c78a6
0x7f95d65c6829  movq $0x1, -0xa0(%rbp)  
0x7f95d65c6834  movq $0x1, -0x98(%rbp)  
0x7f95d65c683f  movq $0x1, -0x90(%rbp)  
0x7f95d65c684a  movq $0x1, -0x88(%rbp)  
0x7f95d65c6855  mov $0x2, %esi          
0x7f95d65c685a  mov %r13, %rdi          
0x7f95d65c685d  lea -0x90(%rbp), %rdx   
0x7f95d65c6864  mov $0x762710, %rax      ; rbx_make_array
0x7f95d65c686e  callq *%rax             
0x7f95d65c6870  mov -0xa0(%rbp), %rcx   
0x7f95d65c6877  mov -0x98(%rbp), %rbx   
0x7f95d65c687e  mov %rax, -0xa0(%rbp)   
0x7f95d65c6885  mov %rcx, -0x90(%rbp)   
0x7f95d65c688c  mov %rcx, -0xf8(%rbp)   
0x7f95d65c6893  mov %rbx, -0xf0(%rbp)   
0x7f95d65c689a  jmp 0x3f9                ; 0x7f95d65c6909
0x7f95d65c689f  mov -0xf0(%rbp), %rbx   
0x7f95d65c68a6  jmp 0x3f9                ; 0x7f95d65c6909
0x7f95d65c68ab  mov %rcx, -0x50(%rbp)   
0x7f95d65c68af  movq $0x55e, -0x58(%rbp)
0x7f95d65c68b7  movq $0x1a, -0x48(%rbp) 
0x7f95d65c68bf  mov $0x1, -0x40(%rbp)   
0x7f95d65c68c6  movq $0x0, -0x30(%rbp)  
0x7f95d65c68ce  lea -0x98(%rbp), %rax   
0x7f95d65c68d5  mov %rax, -0x38(%rbp)   
0x7f95d65c68d9  mov 0x1668558, %rsi     
0x7f95d65c68e1  mov 0x20(%rsi), %rax    
0x7f95d65c68e5  mov $0x4a, -0xc4(%rbp)  
0x7f95d65c68ef  mov %r13, %rdi          
0x7f95d65c68f2  mov %r14, %rdx          
0x7f95d65c68f5  lea -0x58(%rbp), %rcx   
0x7f95d65c68f9  callq *%rax             
0x7f95d65c68fb  test %rax, %rax         
0x7f95d65c68fe  jnz 0xe71                ; 0x7f95d65c7381
0x7f95d65c6904  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c6909  mov %rbx, -0xa0(%rbp)   
0x7f95d65c6910  mov 0x1668478, %rax     
0x7f95d65c6918  mov 0x30(%rax), %rcx    
0x7f95d65c691c  cmp -0xe0(%rbp), %rcx   
0x7f95d65c6923  jnz 0x432                ; 0x7f95d65c6942
0x7f95d65c6929  mov 0x15824f4, %ecx     
0x7f95d65c6930  cmp 0x44(%rax), %ecx    
0x7f95d65c6933  jnz 0x432                ; 0x7f95d65c6942
0x7f95d65c6939  mov 0x20(%rax), %rax    
0x7f95d65c693d  jmp 0x45c                ; 0x7f95d65c696c
0x7f95d65c6942  mov $0x2e, -0xc4(%rbp)  
0x7f95d65c694c  mov $0x1668478, %edx    
0x7f95d65c6951  mov %r13, %rdi          
0x7f95d65c6954  mov %r14, %rsi          
0x7f95d65c6957  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c6961  callq *%rax             
0x7f95d65c6963  test %rax, %rax         
0x7f95d65c6966  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c696c  mov %rax, -0x98(%rbp)   
0x7f95d65c6973  mov %eax, %ecx          
0x7f95d65c6975  and %ebx, %ecx          
0x7f95d65c6977  testb $0x1, %cl         
0x7f95d65c697a  jnz 0x4ce                ; 0x7f95d65c69de
0x7f95d65c6980  mov %rbx, -0x50(%rbp)   
0x7f95d65c6984  movq $0x586, -0x58(%rbp)
0x7f95d65c698c  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6994  mov $0x1, -0x40(%rbp)   
0x7f95d65c699b  movq $0x0, -0x30(%rbp)  
0x7f95d65c69a3  lea -0x98(%rbp), %rax   
0x7f95d65c69aa  mov %rax, -0x38(%rbp)   
0x7f95d65c69ae  mov 0x1668488, %rsi     
0x7f95d65c69b6  mov 0x20(%rsi), %rax    
0x7f95d65c69ba  mov $0x30, -0xc4(%rbp)  
0x7f95d65c69c4  mov %r13, %rdi          
0x7f95d65c69c7  mov %r14, %rdx          
0x7f95d65c69ca  lea -0x58(%rbp), %rcx   
0x7f95d65c69ce  callq *%rax             
0x7f95d65c69d0  test %rax, %rax         
0x7f95d65c69d3  jnz 0x4df                ; 0x7f95d65c69ef
0x7f95d65c69d9  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c69de  cmp %rax, %rbx          
0x7f95d65c69e1  setl %al                
0x7f95d65c69e4  movzxb %al, %eax        
0x7f95d65c69e7  lea 0xa(%rax,8), %rax   
0x7f95d65c69ef  mov %rax, -0xa0(%rbp)   
0x7f95d65c69f6  andq $0xf, %rax         
0x7f95d65c69fa  cmpq $0xa, %rax         
0x7f95d65c69fe  jz 0xfd5                 ; 0x7f95d65c74e5
0x7f95d65c6a04  mov -0xf8(%rbp), %rax   
0x7f95d65c6a0b  mov %rax, -0xa0(%rbp)   
0x7f95d65c6a12  mov -0x130(%rbp), %rcx  
0x7f95d65c6a19  mov %rcx, -0x98(%rbp)   
0x7f95d65c6a20  mov -0x100(%rbp), %rax  
0x7f95d65c6a27  mov %rax, -0x90(%rbp)   
0x7f95d65c6a2e  mov -0xf0(%rbp), %rsi   
0x7f95d65c6a35  mov %rsi, -0x88(%rbp)   
0x7f95d65c6a3c  testb $0x3, %cl         
0x7f95d65c6a3f  jnz 0x1311               ; 0x7f95d65c7821
0x7f95d65c6a45  mov 0x8(%rcx), %rdx     
0x7f95d65c6a49  cmp $0x2ab, 0x70(%rdx)  
0x7f95d65c6a50  jnz 0x1311               ; 0x7f95d65c7821
0x7f95d65c6a56  cmp $0x17, 0x74(%rdx)   
0x7f95d65c6a5a  mov %r12, %rbx          
0x7f95d65c6a5d  jnz 0x1336               ; 0x7f95d65c7846
0x7f95d65c6a63  mov %r14, -0x1b8(%rbp)  
0x7f95d65c6a6a  mov $0x7f95bc0a4720, %rdx
0x7f95d65c6a74  mov %rdx, -0x1a8(%rbp)  
0x7f95d65c6a7b  mov (%rdx), %rdx        
0x7f95d65c6a7e  mov %rdx, -0x1a0(%rbp)  
0x7f95d65c6a85  mov 0xa0(%rdx), %rdx    
0x7f95d65c6a8c  mov %rdx, -0x1b0(%rbp)  
0x7f95d65c6a93  mov $0xc, -0x198(%rbp)  
0x7f95d65c6a9d  mov $0x0, -0x194(%rbp)  
0x7f95d65c6aa7  lea -0x1f8(%rbp), %rdx  
0x7f95d65c6aae  mov %rdx, -0x180(%rbp)  
0x7f95d65c6ab5  mov $0x6, %edx          
0x7f95d65c6aba  lea -0x170(%rbp), %rdi  
0x7f95d65c6ac1  movq $0x1a, (%rdi)      
0x7f95d65c6ac8  addq $0x8, %rdi         
0x7f95d65c6acc  dec %edx                
0x7f95d65c6ace  jnz 0x5b1                ; 0x7f95d65c6ac1
0x7f95d65c6ad4  mov $0x7f95bc0a4730, %rdx
0x7f95d65c6ade  mov (%rdx), %rdx        
0x7f95d65c6ae1  movq $0x0, -0x1f8(%rbp) 
0x7f95d65c6aec  mov %rcx, -0x1e8(%rbp)  
0x7f95d65c6af3  mov %rdx, -0x1d8(%rbp)  
0x7f95d65c6afa  movq $0x1a, -0x1e0(%rbp)
0x7f95d65c6b05  movq $0x0, -0x1f0(%rbp) 
0x7f95d65c6b10  movq $0x1a, -0x1d0(%rbp)
0x7f95d65c6b1b  mov %rax, -0x1c8(%rbp)  
0x7f95d65c6b22  mov %rsi, -0x1c0(%rbp)  
0x7f95d65c6b29  mov -0x1a0(%rbp), %rcx  
0x7f95d65c6b30  mov 0xc0(%rcx), %rcx    
0x7f95d65c6b37  mov 0x20(%rcx), %rcx    
0x7f95d65c6b3b  mov %rcx, -0x170(%rbp)  
0x7f95d65c6b42  mov %rax, -0x168(%rbp)  
0x7f95d65c6b49  mov %rsi, -0x160(%rbp)  
0x7f95d65c6b50  mov %esi, %ecx          
0x7f95d65c6b52  and %eax, %ecx          
0x7f95d65c6b54  testb $0x1, %cl         
0x7f95d65c6b57  jnz 0x6ab                ; 0x7f95d65c6bbb
0x7f95d65c6b5d  mov %rax, -0x50(%rbp)   
0x7f95d65c6b61  movq $0x55e, -0x58(%rbp)
0x7f95d65c6b69  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6b71  mov $0x1, -0x40(%rbp)   
0x7f95d65c6b78  movq $0x0, -0x30(%rbp)  
0x7f95d65c6b80  lea -0x160(%rbp), %rax  
0x7f95d65c6b87  mov %rax, -0x38(%rbp)   
0x7f95d65c6b8b  mov 0x185d0d8, %rsi     
0x7f95d65c6b93  mov 0x20(%rsi), %rax    
0x7f95d65c6b97  mov $0x6, -0x194(%rbp)  
0x7f95d65c6ba1  mov %r13, %rdi          
0x7f95d65c6ba4  mov %rbx, %rdx          
0x7f95d65c6ba7  lea -0x58(%rbp), %rcx   
0x7f95d65c6bab  callq *%rax             
0x7f95d65c6bad  test %rax, %rax         
0x7f95d65c6bb0  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6bb6  jmp 0x6ee                ; 0x7f95d65c6bfe
0x7f95d65c6bbb  sarq $0x1, %rax         
0x7f95d65c6bbe  sarq $0x1, %rsi         
0x7f95d65c6bc1  add %rax, %rsi          
0x7f95d65c6bc4  mov $0x3fffffffffffffff, %rax
0x7f95d65c6bce  lea (%rsi,%rax), %rax   
0x7f95d65c6bd2  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c6bdc  cmp %rcx, %rax          
0x7f95d65c6bdf  ja 0x6df                 ; 0x7f95d65c6bef
0x7f95d65c6be5  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c6bea  jmp 0x6ee                ; 0x7f95d65c6bfe
0x7f95d65c6bef  mov %r13, %rdi          
0x7f95d65c6bf2  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c6bfc  callq *%rax             
0x7f95d65c6bfe  mov %rax, -0x168(%rbp)  
0x7f95d65c6c05  mov -0x1c8(%rbp), %rax  
0x7f95d65c6c0c  mov %rax, -0x160(%rbp)  
0x7f95d65c6c13  mov -0x1c0(%rbp), %rsi  
0x7f95d65c6c1a  mov %rsi, -0x158(%rbp)  
0x7f95d65c6c21  mov %esi, %ecx          
0x7f95d65c6c23  and %eax, %ecx          
0x7f95d65c6c25  testb $0x1, %cl         
0x7f95d65c6c28  jnz 0x77c                ; 0x7f95d65c6c8c
0x7f95d65c6c2e  mov %rax, -0x50(%rbp)   
0x7f95d65c6c32  movq $0x55e, -0x58(%rbp)
0x7f95d65c6c3a  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6c42  mov $0x1, -0x40(%rbp)   
0x7f95d65c6c49  movq $0x0, -0x30(%rbp)  
0x7f95d65c6c51  lea -0x158(%rbp), %rax  
0x7f95d65c6c58  mov %rax, -0x38(%rbp)   
0x7f95d65c6c5c  mov 0x185d110, %rsi     
0x7f95d65c6c64  mov 0x20(%rsi), %rax    
0x7f95d65c6c68  mov $0xd, -0x194(%rbp)  
0x7f95d65c6c72  mov %r13, %rdi          
0x7f95d65c6c75  mov %rbx, %rdx          
0x7f95d65c6c78  lea -0x58(%rbp), %rcx   
0x7f95d65c6c7c  callq *%rax             
0x7f95d65c6c7e  test %rax, %rax         
0x7f95d65c6c81  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6c87  jmp 0x7bf                ; 0x7f95d65c6ccf
0x7f95d65c6c8c  sarq $0x1, %rax         
0x7f95d65c6c8f  sarq $0x1, %rsi         
0x7f95d65c6c92  add %rax, %rsi          
0x7f95d65c6c95  mov $0x3fffffffffffffff, %rax
0x7f95d65c6c9f  lea (%rsi,%rax), %rax   
0x7f95d65c6ca3  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c6cad  cmp %rcx, %rax          
0x7f95d65c6cb0  ja 0x7b0                 ; 0x7f95d65c6cc0
0x7f95d65c6cb6  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c6cbb  jmp 0x7bf                ; 0x7f95d65c6ccf
0x7f95d65c6cc0  mov %r13, %rdi          
0x7f95d65c6cc3  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c6ccd  callq *%rax             
0x7f95d65c6ccf  mov %rax, -0x160(%rbp)  
0x7f95d65c6cd6  movq $0x3, -0x158(%rbp) 
0x7f95d65c6ce1  testb $0x1, %al         
0x7f95d65c6ce4  jnz 0x838                ; 0x7f95d65c6d48
0x7f95d65c6cea  mov %rax, -0x50(%rbp)   
0x7f95d65c6cee  movq $0x55e, -0x58(%rbp)
0x7f95d65c6cf6  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6cfe  mov $0x1, -0x40(%rbp)   
0x7f95d65c6d05  movq $0x0, -0x30(%rbp)  
0x7f95d65c6d0d  lea -0x158(%rbp), %rax  
0x7f95d65c6d14  mov %rax, -0x38(%rbp)   
0x7f95d65c6d18  mov 0x185d130, %rsi     
0x7f95d65c6d20  mov 0x20(%rsi), %rax    
0x7f95d65c6d24  mov $0x11, -0x194(%rbp) 
0x7f95d65c6d2e  mov %r13, %rdi          
0x7f95d65c6d31  mov %rbx, %rdx          
0x7f95d65c6d34  lea -0x58(%rbp), %rcx   
0x7f95d65c6d38  callq *%rax             
0x7f95d65c6d3a  test %rax, %rax         
0x7f95d65c6d3d  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6d43  jmp 0x878                ; 0x7f95d65c6d88
0x7f95d65c6d48  sarq $0x1, %rax         
0x7f95d65c6d4b  lea 0x1(%rax), %rsi     
0x7f95d65c6d4f  mov $0x4000000000000000, %rcx
0x7f95d65c6d59  add %rcx, %rax          
0x7f95d65c6d5c  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c6d66  cmp %rcx, %rax          
0x7f95d65c6d69  ja 0x869                 ; 0x7f95d65c6d79
0x7f95d65c6d6f  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c6d74  jmp 0x878                ; 0x7f95d65c6d88
0x7f95d65c6d79  mov %r13, %rdi          
0x7f95d65c6d7c  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c6d86  callq *%rax             
0x7f95d65c6d88  mov %rax, -0x160(%rbp)  
0x7f95d65c6d8f  mov -0x168(%rbp), %rcx  
0x7f95d65c6d96  mov %ecx, %edx          
0x7f95d65c6d98  and %eax, %edx          
0x7f95d65c6d9a  testb $0x1, %dl         
0x7f95d65c6d9d  jz 0x8d7                 ; 0x7f95d65c6de7
0x7f95d65c6da3  mov %rcx, %rdx          
0x7f95d65c6da6  sarq $0x1, %rdx         
0x7f95d65c6da9  sarq $0x1, %rax         
0x7f95d65c6dac  imul %rdx, %rax         
0x7f95d65c6db0  seto %dl                
0x7f95d65c6db3  mov $0x3fffffffffffffff, %rsi
0x7f95d65c6dbd  lea (%rax,%rsi), %rsi   
0x7f95d65c6dc1  mov $0x7ffffffffffffffe, %rdi
0x7f95d65c6dcb  cmp %rdi, %rsi          
0x7f95d65c6dce  ja 0x8d7                 ; 0x7f95d65c6de7
0x7f95d65c6dd4  xorb $0x1, %dl          
0x7f95d65c6dd7  jz 0x8d7                 ; 0x7f95d65c6de7
0x7f95d65c6ddd  lea 0x1(%rax,%rax), %rax
0x7f95d65c6de2  jmp 0x930                ; 0x7f95d65c6e40
0x7f95d65c6de7  mov %rcx, -0x50(%rbp)   
0x7f95d65c6deb  movq $0x3cc6, -0x58(%rbp)
0x7f95d65c6df3  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6dfb  mov $0x1, -0x40(%rbp)   
0x7f95d65c6e02  movq $0x0, -0x30(%rbp)  
0x7f95d65c6e0a  lea -0x160(%rbp), %rax  
0x7f95d65c6e11  mov %rax, -0x38(%rbp)   
0x7f95d65c6e15  mov 0x185d148, %rsi     
0x7f95d65c6e1d  mov 0x20(%rsi), %rax    
0x7f95d65c6e21  mov $0x14, -0x194(%rbp) 
0x7f95d65c6e2b  mov %r13, %rdi          
0x7f95d65c6e2e  mov %rbx, %rdx          
0x7f95d65c6e31  lea -0x58(%rbp), %rcx   
0x7f95d65c6e35  callq *%rax             
0x7f95d65c6e37  test %rax, %rax         
0x7f95d65c6e3a  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6e40  mov %rax, -0x168(%rbp)  
0x7f95d65c6e47  movq $0x5, -0x160(%rbp) 
0x7f95d65c6e52  testb $0x1, %al         
0x7f95d65c6e55  jz 0x97f                 ; 0x7f95d65c6e8f
0x7f95d65c6e5b  mov %rax, %rcx          
0x7f95d65c6e5e  mov $0x8000000000000000, %rdx
0x7f95d65c6e68  and %rdx, %rcx          
0x7f95d65c6e6b  orq $0x1, %rcx          
0x7f95d65c6e6f  cmpq $0x1, %rcx         
0x7f95d65c6e73  jnz 0x97f                ; 0x7f95d65c6e8f
0x7f95d65c6e79  mov %rax, %rcx          
0x7f95d65c6e7c  sarq $0x1, %rcx         
0x7f95d65c6e7f  shrq $0x3f, %rax        
0x7f95d65c6e83  add %rcx, %rax          
0x7f95d65c6e86  orq $0x1, %rax          
0x7f95d65c6e8a  jmp 0x9d8                ; 0x7f95d65c6ee8
0x7f95d65c6e8f  mov %rax, -0x50(%rbp)   
0x7f95d65c6e93  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c6e9b  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6ea3  mov $0x1, -0x40(%rbp)   
0x7f95d65c6eaa  movq $0x0, -0x30(%rbp)  
0x7f95d65c6eb2  lea -0x160(%rbp), %rax  
0x7f95d65c6eb9  mov %rax, -0x38(%rbp)   
0x7f95d65c6ebd  mov 0x185d168, %rsi     
0x7f95d65c6ec5  mov 0x20(%rsi), %rax    
0x7f95d65c6ec9  mov $0x18, -0x194(%rbp) 
0x7f95d65c6ed3  mov %r13, %rdi          
0x7f95d65c6ed6  mov %rbx, %rdx          
0x7f95d65c6ed9  lea -0x58(%rbp), %rcx   
0x7f95d65c6edd  callq *%rax             
0x7f95d65c6edf  test %rax, %rax         
0x7f95d65c6ee2  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6ee8  mov %rax, -0x168(%rbp)  
0x7f95d65c6eef  mov -0x1c8(%rbp), %rsi  
0x7f95d65c6ef6  mov %rsi, -0x160(%rbp)  
0x7f95d65c6efd  mov %esi, %ecx          
0x7f95d65c6eff  and %eax, %ecx          
0x7f95d65c6f01  testb $0x1, %cl         
0x7f95d65c6f04  jnz 0xa58                ; 0x7f95d65c6f68
0x7f95d65c6f0a  mov %rax, -0x50(%rbp)   
0x7f95d65c6f0e  movq $0x55e, -0x58(%rbp)
0x7f95d65c6f16  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6f1e  mov $0x1, -0x40(%rbp)   
0x7f95d65c6f25  movq $0x0, -0x30(%rbp)  
0x7f95d65c6f2d  lea -0x160(%rbp), %rax  
0x7f95d65c6f34  mov %rax, -0x38(%rbp)   
0x7f95d65c6f38  mov 0x185d190, %rsi     
0x7f95d65c6f40  mov 0x20(%rsi), %rax    
0x7f95d65c6f44  mov $0x1d, -0x194(%rbp) 
0x7f95d65c6f4e  mov %r13, %rdi          
0x7f95d65c6f51  mov %rbx, %rdx          
0x7f95d65c6f54  lea -0x58(%rbp), %rcx   
0x7f95d65c6f58  callq *%rax             
0x7f95d65c6f5a  test %rax, %rax         
0x7f95d65c6f5d  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c6f63  jmp 0xa9b                ; 0x7f95d65c6fab
0x7f95d65c6f68  sarq $0x1, %rax         
0x7f95d65c6f6b  sarq $0x1, %rsi         
0x7f95d65c6f6e  add %rax, %rsi          
0x7f95d65c6f71  mov $0x3fffffffffffffff, %rax
0x7f95d65c6f7b  lea (%rsi,%rax), %rax   
0x7f95d65c6f7f  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c6f89  cmp %rcx, %rax          
0x7f95d65c6f8c  ja 0xa8c                 ; 0x7f95d65c6f9c
0x7f95d65c6f92  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c6f97  jmp 0xa9b                ; 0x7f95d65c6fab
0x7f95d65c6f9c  mov %r13, %rdi          
0x7f95d65c6f9f  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c6fa9  callq *%rax             
0x7f95d65c6fab  mov %rax, -0x168(%rbp)  
0x7f95d65c6fb2  movq $0x3, -0x160(%rbp) 
0x7f95d65c6fbd  testb $0x1, %al         
0x7f95d65c6fc0  jnz 0xb14                ; 0x7f95d65c7024
0x7f95d65c6fc6  mov %rax, -0x50(%rbp)   
0x7f95d65c6fca  movq $0x55e, -0x58(%rbp)
0x7f95d65c6fd2  movq $0x1a, -0x48(%rbp) 
0x7f95d65c6fda  mov $0x1, -0x40(%rbp)   
0x7f95d65c6fe1  movq $0x0, -0x30(%rbp)  
0x7f95d65c6fe9  lea -0x160(%rbp), %rax  
0x7f95d65c6ff0  mov %rax, -0x38(%rbp)   
0x7f95d65c6ff4  mov 0x185d1b0, %rsi     
0x7f95d65c6ffc  mov 0x20(%rsi), %rax    
0x7f95d65c7000  mov $0x21, -0x194(%rbp) 
0x7f95d65c700a  mov %r13, %rdi          
0x7f95d65c700d  mov %rbx, %rdx          
0x7f95d65c7010  lea -0x58(%rbp), %rcx   
0x7f95d65c7014  callq *%rax             
0x7f95d65c7016  test %rax, %rax         
0x7f95d65c7019  jz 0xbe5                 ; 0x7f95d65c70f5
0x7f95d65c701f  jmp 0xb54                ; 0x7f95d65c7064
0x7f95d65c7024  sarq $0x1, %rax         
0x7f95d65c7027  lea 0x1(%rax), %rsi     
0x7f95d65c702b  mov $0x4000000000000000, %rcx
0x7f95d65c7035  add %rcx, %rax          
0x7f95d65c7038  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c7042  cmp %rcx, %rax          
0x7f95d65c7045  ja 0xb45                 ; 0x7f95d65c7055
0x7f95d65c704b  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7050  jmp 0xb54                ; 0x7f95d65c7064
0x7f95d65c7055  mov %r13, %rdi          
0x7f95d65c7058  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7062  callq *%rax             
0x7f95d65c7064  mov %rax, -0x168(%rbp)  
0x7f95d65c706b  testb $0x3, %al         
0x7f95d65c706e  jnz 0xb7c                ; 0x7f95d65c708c
0x7f95d65c7074  mov 0x8(%rax), %rcx     
0x7f95d65c7078  cmp $0x4d, 0x70(%rcx)   
0x7f95d65c707c  jnz 0xb7c                ; 0x7f95d65c708c
0x7f95d65c7082  invalid                 
0x7f95d65c7083  sti                     
0x7f95d65c7084  adc %al, 0x18(%rax)     
0x7f95d65c7087  jmp 0xf92                ; 0x7f95d65c74a2
0x7f95d65c708c  testb $0x1, %al         
0x7f95d65c708f  jnz 0xf8a                ; 0x7f95d65c749a
0x7f95d65c7095  mov -0x170(%rbp), %rax  
0x7f95d65c709c  mov %rax, -0x50(%rbp)   
0x7f95d65c70a0  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c70a8  movq $0x1a, -0x48(%rbp) 
0x7f95d65c70b0  mov $0x1, -0x40(%rbp)   
0x7f95d65c70b7  movq $0x0, -0x30(%rbp)  
0x7f95d65c70bf  lea -0x168(%rbp), %rax  
0x7f95d65c70c6  mov %rax, -0x38(%rbp)   
0x7f95d65c70ca  mov 0x185d1c8, %rsi     
0x7f95d65c70d2  mov 0x20(%rsi), %rax    
0x7f95d65c70d6  mov $0x24, -0x194(%rbp) 
0x7f95d65c70e0  mov %r13, %rdi          
0x7f95d65c70e3  mov %rbx, %rdx          
0x7f95d65c70e6  lea -0x58(%rbp), %rcx   
0x7f95d65c70ea  callq *%rax             
0x7f95d65c70ec  test %rax, %rax         
0x7f95d65c70ef  jnz 0xfc6                ; 0x7f95d65c74d6
0x7f95d65c70f5  mov %r13, %rdi          
0x7f95d65c70f8  mov %rbx, %rsi          
0x7f95d65c70fb  mov %rbx, %r12          
0x7f95d65c70fe  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c7108  callq *%rax             
0x7f95d65c710a  mov %al, %cl            
0x7f95d65c710c  mov $0x0, %eax          
0x7f95d65c7111  testb $0x1, %cl         
0x7f95d65c7114  jz 0xc19                 ; 0x7f95d65c7129
0x7f95d65c711a  mov %r13, %rdi          
0x7f95d65c711d  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c7127  callq *%rax             
0x7f95d65c7129  test %rax, %rax         
0x7f95d65c712c  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c7132  mov %rax, -0x98(%rbp)   
0x7f95d65c7139  mov -0x110(%rbp), %rax  
0x7f95d65c7140  mov %rax, -0x90(%rbp)   
0x7f95d65c7147  mov -0xf0(%rbp), %rcx   
0x7f95d65c714e  mov %rcx, -0x88(%rbp)   
0x7f95d65c7155  mov %rax, -0x50(%rbp)   
0x7f95d65c7159  movq $0x3916, -0x58(%rbp)
0x7f95d65c7161  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7169  mov $0x1, -0x40(%rbp)   
0x7f95d65c7170  movq $0x0, -0x30(%rbp)  
0x7f95d65c7178  lea -0x88(%rbp), %rax   
0x7f95d65c717f  mov %rax, -0x38(%rbp)   
0x7f95d65c7183  mov 0x1668528, %rsi     
0x7f95d65c718b  mov 0x20(%rsi), %rax    
0x7f95d65c718f  mov $0x44, -0xc4(%rbp)  
0x7f95d65c7199  mov %r13, %rdi          
0x7f95d65c719c  mov %r14, %rdx          
0x7f95d65c719f  lea -0x58(%rbp), %rcx   
0x7f95d65c71a3  callq *%rax             
0x7f95d65c71a5  test %rax, %rax         
0x7f95d65c71a8  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c71ae  mov %rax, -0x90(%rbp)   
0x7f95d65c71b5  mov -0x98(%rbp), %rcx   
0x7f95d65c71bc  testb $0x3, %cl         
0x7f95d65c71bf  jnz 0xcfa                ; 0x7f95d65c720a
0x7f95d65c71c5  mov 0x8(%rcx), %rdx     
0x7f95d65c71c9  cmp $0x4d, 0x70(%rdx)   
0x7f95d65c71cd  jnz 0xcfa                ; 0x7f95d65c720a
0x7f95d65c71d3  cmp $0xe0, 0x74(%rdx)   
0x7f95d65c71da  jnz 0x13a9               ; 0x7f95d65c78b9
0x7f95d65c71e0  testb $0x3, %al         
0x7f95d65c71e3  jnz 0xcf1                ; 0x7f95d65c7201
0x7f95d65c71e9  mov 0x8(%rax), %rdx     
0x7f95d65c71ed  cmp $0x4d, 0x70(%rdx)   
0x7f95d65c71f1  jnz 0xcf1                ; 0x7f95d65c7201
0x7f95d65c71f7  invalid                 
0x7f95d65c71f8  sti                     
0x7f95d65c71f9  adc %al, 0x18(%rax)     
0x7f95d65c71fc  jmp 0xe09                ; 0x7f95d65c7319
0x7f95d65c7201  testb $0x1, %al         
0x7f95d65c7204  jnz 0xe01                ; 0x7f95d65c7311
0x7f95d65c720a  mov %rcx, -0x50(%rbp)   
0x7f95d65c720e  movq $0x3cc6, -0x58(%rbp)
0x7f95d65c7216  movq $0x1a, -0x48(%rbp) 
0x7f95d65c721e  mov $0x1, -0x40(%rbp)   
0x7f95d65c7225  movq $0x0, -0x30(%rbp)  
0x7f95d65c722d  lea -0x90(%rbp), %rax   
0x7f95d65c7234  mov %rax, -0x38(%rbp)   
0x7f95d65c7238  mov 0x1668540, %rsi     
0x7f95d65c7240  mov 0x20(%rsi), %rax    
0x7f95d65c7244  mov $0x47, -0xc4(%rbp)  
0x7f95d65c724e  mov %r13, %rdi          
0x7f95d65c7251  mov %r14, %rdx          
0x7f95d65c7254  lea -0x58(%rbp), %rcx   
0x7f95d65c7258  callq *%rax             
0x7f95d65c725a  test %rax, %rax         
0x7f95d65c725d  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c7263  mov %rax, -0x98(%rbp)   
0x7f95d65c726a  mov -0xa0(%rbp), %rcx   
0x7f95d65c7271  mov %rax, %rdx          
0x7f95d65c7274  andq $0x1, %rdx         
0x7f95d65c7278  test %rdx, %rcx         
0x7f95d65c727b  jnz 0xdb6                ; 0x7f95d65c72c6
0x7f95d65c7281  testb $0x3, %cl         
0x7f95d65c7284  jnz 0x39b                ; 0x7f95d65c68ab
0x7f95d65c728a  mov 0x8(%rcx), %rsi     
0x7f95d65c728e  cmp $0x4d, 0x70(%rsi)   
0x7f95d65c7292  jnz 0x39b                ; 0x7f95d65c68ab
0x7f95d65c7298  cmp $0xe0, 0x74(%rsi)   
0x7f95d65c729f  jnz 0x13f1               ; 0x7f95d65c7901
0x7f95d65c72a5  testb $0x3, %al         
0x7f95d65c72a8  jnz 0xe37                ; 0x7f95d65c7347
0x7f95d65c72ae  mov 0x8(%rax), %rsi     
0x7f95d65c72b2  cmp $0x4d, 0x70(%rsi)   
0x7f95d65c72b6  jnz 0xe37                ; 0x7f95d65c7347
0x7f95d65c72bc  invalid                 
0x7f95d65c72bd  sti                     
0x7f95d65c72be  adc %al, 0x18(%rax)     
0x7f95d65c72c1  jmp 0xe48                ; 0x7f95d65c7358
0x7f95d65c72c6  sarq $0x1, %rcx         
0x7f95d65c72c9  sarq $0x1, %rax         
0x7f95d65c72cc  add %rcx, %rax          
0x7f95d65c72cf  mov $0x3fffffffffffffff, %rcx
0x7f95d65c72d9  lea (%rax,%rcx), %rcx   
0x7f95d65c72dd  mov $0x7ffffffffffffffe, %rdx
0x7f95d65c72e7  cmp %rdx, %rcx          
0x7f95d65c72ea  ja 0xdea                 ; 0x7f95d65c72fa
0x7f95d65c72f0  lea 0x1(%rax,%rax), %rax
0x7f95d65c72f5  jmp 0xe71                ; 0x7f95d65c7381
0x7f95d65c72fa  mov %r13, %rdi          
0x7f95d65c72fd  mov %rax, %rsi          
0x7f95d65c7300  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c730a  callq *%rax             
0x7f95d65c730c  jmp 0xe71                ; 0x7f95d65c7381
0x7f95d65c7311  sarq $0x1, %rax         
0x7f95d65c7314  invalid                 
0x7f95d65c7315  loope 0xe02              ; 0x7f95d65c7412
0x7f95d65c7317  sub %al, %al            
0x7f95d65c7319  invalid                 
0x7f95d65c731a  sti                     
0x7f95d65c731b  pop %rcx                
0x7f95d65c731c  sbb %al, %r13b          
0x7f95d65c731f  sti                     
0x7f95d65c7320  adc %eax, -0x2a0(%rbp)  
0x7f95d65c7326  mov %r13, %rdi          
0x7f95d65c7329  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c7333  callq *%rax             
0x7f95d65c7335  invalid                 
0x7f95d65c7336  sti                     
0x7f95d65c7337  adc %al, -0x2a0(%rbp)   
0x7f95d65c733d  invalid                 
0x7f95d65c733e  sti                     
0x7f95d65c733f  adc %eax, 0x18(%rax)    
0x7f95d65c7342  jmp 0xd53                ; 0x7f95d65c7263
0x7f95d65c7347  test %rdx, %rdx         
0x7f95d65c734a  jz 0x39b                 ; 0x7f95d65c68ab
0x7f95d65c7350  sarq $0x1, %rax         
0x7f95d65c7353  invalid                 
0x7f95d65c7354  loope 0xe41              ; 0x7f95d65c7451
0x7f95d65c7356  sub %al, %al            
0x7f95d65c7358  invalid                 
0x7f95d65c7359  sti                     
0x7f95d65c735a  pop %rax                
0x7f95d65c735b  sbb %al, %r13b          
0x7f95d65c735e  sti                     
0x7f95d65c735f  adc %eax, -0x2a0(%rbp)  
0x7f95d65c7365  mov %r13, %rdi          
0x7f95d65c7368  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c7372  callq *%rax             
0x7f95d65c7374  invalid                 
0x7f95d65c7375  sti                     
0x7f95d65c7376  adc %al, -0x2a0(%rbp)   
0x7f95d65c737c  invalid                 
0x7f95d65c737d  sti                     
0x7f95d65c737e  adc %eax, 0x18(%rax)    
0x7f95d65c7381  mov %rax, -0xf8(%rbp)   
0x7f95d65c7388  mov -0xf0(%rbp), %rax   
0x7f95d65c738f  mov %rax, -0xa0(%rbp)   
0x7f95d65c7396  movq $0x3, -0x98(%rbp)  
0x7f95d65c73a1  testb $0x1, %al         
0x7f95d65c73a4  jnz 0xefb                ; 0x7f95d65c740b
0x7f95d65c73aa  mov %rax, -0x50(%rbp)   
0x7f95d65c73ae  movq $0x55e, -0x58(%rbp)
0x7f95d65c73b6  movq $0x1a, -0x48(%rbp) 
0x7f95d65c73be  mov $0x1, -0x40(%rbp)   
0x7f95d65c73c5  movq $0x0, -0x30(%rbp)  
0x7f95d65c73cd  lea -0x98(%rbp), %rax   
0x7f95d65c73d4  mov %rax, -0x38(%rbp)   
0x7f95d65c73d8  mov 0x16685a0, %rsi     
0x7f95d65c73e0  mov 0x20(%rsi), %rax    
0x7f95d65c73e4  mov $0x53, -0xc4(%rbp)  
0x7f95d65c73ee  mov %r13, %rdi          
0x7f95d65c73f1  mov %r14, %rdx          
0x7f95d65c73f4  lea -0x58(%rbp), %rcx   
0x7f95d65c73f8  callq *%rax             
0x7f95d65c73fa  mov %rax, %rbx          
0x7f95d65c73fd  test %rbx, %rbx         
0x7f95d65c7400  jnz 0xf3e                ; 0x7f95d65c744e
0x7f95d65c7406  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c740b  sarq $0x1, %rax         
0x7f95d65c740e  lea 0x1(%rax), %rsi     
0x7f95d65c7412  mov $0x4000000000000000, %rcx
0x7f95d65c741c  add %rcx, %rax          
0x7f95d65c741f  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c7429  cmp %rcx, %rax          
0x7f95d65c742c  ja 0xf2c                 ; 0x7f95d65c743c
0x7f95d65c7432  lea 0x1(%rsi,%rsi), %rbx
0x7f95d65c7437  jmp 0xf3e                ; 0x7f95d65c744e
0x7f95d65c743c  mov %r13, %rdi          
0x7f95d65c743f  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7449  callq *%rax             
0x7f95d65c744b  mov %rax, %rbx          
0x7f95d65c744e  mov %rbx, -0xa0(%rbp)   
0x7f95d65c7455  mov %rbx, -0xf0(%rbp)   
0x7f95d65c745c  mov 0x8(%r13), %rax     
0x7f95d65c7460  mov 0x15824fe, %cl      
0x7f95d65c7467  or 0x16(%rax), %cl      
0x7f95d65c746a  jz 0x3f9                 ; 0x7f95d65c6909
0x7f95d65c7470  mov $0x59, -0xc4(%rbp)  
0x7f95d65c747a  mov %r13, %rdi          
0x7f95d65c747d  mov %r14, %rsi          
0x7f95d65c7480  mov $0x763000, %rax      ; rbx_check_interrupts
0x7f95d65c748a  callq *%rax             
0x7f95d65c748c  test %rax, %rax         
0x7f95d65c748f  jnz 0x38f                ; 0x7f95d65c689f
0x7f95d65c7495  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c749a  sarq $0x1, %rax         
0x7f95d65c749d  invalid                 
0x7f95d65c749e  loope 0xf8b              ; 0x7f95d65c759b
0x7f95d65c74a0  sub %al, %al            
0x7f95d65c74a2  mov -0x170(%rbp), %rax  
0x7f95d65c74a9  invalid                 
0x7f95d65c74aa  sti                     
0x7f95d65c74ab  adc %cl, 0x18(%rax)     
0x7f95d65c74ae  invalid                 
0x7f95d65c74af  rep pop %rsi            
0x7f95d65c74b1  rolb $0xfb, %ch         
0x7f95d65c74b4  adc %eax, -0x2a0(%rbp)  
0x7f95d65c74ba  mov %r13, %rdi          
0x7f95d65c74bd  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c74c7  callq *%rax             
0x7f95d65c74c9  invalid                 
0x7f95d65c74ca  sti                     
0x7f95d65c74cb  adc %al, -0x2a0(%rbp)   
0x7f95d65c74d1  invalid                 
0x7f95d65c74d2  sti                     
0x7f95d65c74d3  adc %eax, 0x18(%rax)    
0x7f95d65c74d6  mov %rbx, %r12          
0x7f95d65c74d9  mov %rax, -0x170(%rbp)  
0x7f95d65c74e0  jmp 0xc19                ; 0x7f95d65c7129
0x7f95d65c74e5  mov -0x108(%rbp), %rdx  
0x7f95d65c74ec  mov %rdx, -0xa0(%rbp)   
0x7f95d65c74f3  mov -0xf8(%rbp), %r8    
0x7f95d65c74fa  mov %r8, -0x98(%rbp)    
0x7f95d65c7501  testb $0x3, %dl         
0x7f95d65c7504  jnz 0x1434               ; 0x7f95d65c7944
0x7f95d65c750a  mov 0x8(%rdx), %rax     
0x7f95d65c750e  cmp $0x6, 0x70(%rax)    
0x7f95d65c7512  jnz 0x1434               ; 0x7f95d65c7944
0x7f95d65c7518  cmp $0xf9, 0x74(%rax)   
0x7f95d65c751f  jnz 0x1459               ; 0x7f95d65c7969
0x7f95d65c7525  mov %r14, -0x260(%rbp)  
0x7f95d65c752c  mov $0x7f95bc039890, %rax
0x7f95d65c7536  mov %rax, -0x250(%rbp)  
0x7f95d65c753d  mov (%rax), %rax        
0x7f95d65c7540  mov %rax, -0x248(%rbp)  
0x7f95d65c7547  mov 0xa0(%rax), %rax    
0x7f95d65c754e  mov %rax, -0x258(%rbp)  
0x7f95d65c7555  mov $0xc, -0x240(%rbp)  
0x7f95d65c755f  mov $0x0, -0x23c(%rbp)  
0x7f95d65c7569  lea -0x298(%rbp), %rax  
0x7f95d65c7570  mov %rax, -0x228(%rbp)  
0x7f95d65c7577  movq $0x1a, -0x210(%rbp)
0x7f95d65c7582  movq $0x1a, -0x208(%rbp)
0x7f95d65c758d  movq $0x1a, -0x200(%rbp)
0x7f95d65c7598  mov $0x7f95bc0398a0, %rax
0x7f95d65c75a2  mov (%rax), %rax        
0x7f95d65c75a5  movq $0x0, -0x298(%rbp) 
0x7f95d65c75b0  mov %rdx, -0x288(%rbp)  
0x7f95d65c75b7  mov %rax, -0x278(%rbp)  
0x7f95d65c75be  movq $0x1a, -0x280(%rbp)
0x7f95d65c75c9  movq $0x0, -0x290(%rbp) 
0x7f95d65c75d4  movq $0x1a, -0x270(%rbp)
0x7f95d65c75df  mov %r8, -0x268(%rbp)   
0x7f95d65c75e6  mov %rdx, -0x218(%rbp)  
0x7f95d65c75ed  mov 0x18(%rdx), %rcx    
0x7f95d65c75f1  mov %rcx, -0x210(%rbp)  
0x7f95d65c75f8  mov %r8, -0x208(%rbp)   
0x7f95d65c75ff  mov %r13, %rdi          
0x7f95d65c7602  lea -0x260(%rbp), %rsi  
0x7f95d65c7609  mov $0x5d6610, %rax      ; jit_stub_array_aset
0x7f95d65c7613  callq *%rax             
0x7f95d65c7615  test %rax, %rax         
0x7f95d65c7618  jz 0x117c                ; 0x7f95d65c768c
0x7f95d65c761e  cmpq $0x22, %rax        
0x7f95d65c7622  jnz 0x11b6               ; 0x7f95d65c76c6
0x7f95d65c7628  mov -0x218(%rbp), %rax  
0x7f95d65c762f  mov %rax, -0x50(%rbp)   
0x7f95d65c7633  movq $0x78a6, -0x58(%rbp)
0x7f95d65c763b  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7643  mov $0x2, -0x40(%rbp)   
0x7f95d65c764a  movq $0x0, -0x30(%rbp)  
0x7f95d65c7652  lea -0x210(%rbp), %rax  
0x7f95d65c7659  mov %rax, -0x38(%rbp)   
0x7f95d65c765d  mov 0x176e5e8, %rsi     
0x7f95d65c7665  mov 0x20(%rsi), %rax    
0x7f95d65c7669  mov $0x6, -0x23c(%rbp)  
0x7f95d65c7673  mov %r13, %rdi          
0x7f95d65c7676  lea -0x260(%rbp), %rdx  
0x7f95d65c767d  lea -0x58(%rbp), %rcx   
0x7f95d65c7681  callq *%rax             
0x7f95d65c7683  test %rax, %rax         
0x7f95d65c7686  jnz 0x11b6               ; 0x7f95d65c76c6
0x7f95d65c768c  mov %r13, %rdi          
0x7f95d65c768f  lea -0x260(%rbp), %rsi  
0x7f95d65c7696  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c76a0  callq *%rax             
0x7f95d65c76a2  mov %al, %cl            
0x7f95d65c76a4  mov $0x0, %eax          
0x7f95d65c76a9  testb $0x1, %cl         
0x7f95d65c76ac  jz 0x11c4                ; 0x7f95d65c76d4
0x7f95d65c76b2  mov %r13, %rdi          
0x7f95d65c76b5  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c76bf  callq *%rax             
0x7f95d65c76c1  jmp 0x11c4               ; 0x7f95d65c76d4
0x7f95d65c76c6  mov -0x288(%rbp), %rax  
0x7f95d65c76cd  mov %rax, -0x218(%rbp)  
0x7f95d65c76d4  test %rax, %rax         
0x7f95d65c76d7  jz 0x12da                ; 0x7f95d65c77ea
0x7f95d65c76dd  mov -0x100(%rbp), %rax  
0x7f95d65c76e4  mov %rax, -0xa0(%rbp)   
0x7f95d65c76eb  movq $0x3, -0x98(%rbp)  
0x7f95d65c76f6  testb $0x1, %al         
0x7f95d65c76f9  jnz 0x1250               ; 0x7f95d65c7760
0x7f95d65c76ff  mov %rax, -0x50(%rbp)   
0x7f95d65c7703  movq $0x55e, -0x58(%rbp)
0x7f95d65c770b  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7713  mov $0x1, -0x40(%rbp)   
0x7f95d65c771a  movq $0x0, -0x30(%rbp)  
0x7f95d65c7722  lea -0x98(%rbp), %rax   
0x7f95d65c7729  mov %rax, -0x38(%rbp)   
0x7f95d65c772d  mov 0x1668650, %rsi     
0x7f95d65c7735  mov 0x20(%rsi), %rax    
0x7f95d65c7739  mov $0x69, -0xc4(%rbp)  
0x7f95d65c7743  mov %r13, %rdi          
0x7f95d65c7746  mov %r14, %rdx          
0x7f95d65c7749  lea -0x58(%rbp), %rcx   
0x7f95d65c774d  callq *%rax             
0x7f95d65c774f  mov %rax, %r15          
0x7f95d65c7752  test %r15, %r15         
0x7f95d65c7755  jnz 0x1293               ; 0x7f95d65c77a3
0x7f95d65c775b  jmp 0x12da               ; 0x7f95d65c77ea
0x7f95d65c7760  sarq $0x1, %rax         
0x7f95d65c7763  lea 0x1(%rax), %rsi     
0x7f95d65c7767  mov $0x4000000000000000, %rcx
0x7f95d65c7771  add %rcx, %rax          
0x7f95d65c7774  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c777e  cmp %rcx, %rax          
0x7f95d65c7781  ja 0x1281                ; 0x7f95d65c7791
0x7f95d65c7787  lea 0x1(%rsi,%rsi), %r15
0x7f95d65c778c  jmp 0x1293               ; 0x7f95d65c77a3
0x7f95d65c7791  mov %r13, %rdi          
0x7f95d65c7794  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c779e  callq *%rax             
0x7f95d65c77a0  mov %rax, %r15          
0x7f95d65c77a3  mov %r15, -0xa0(%rbp)   
0x7f95d65c77aa  mov %r15, -0x100(%rbp)  
0x7f95d65c77b1  mov 0x8(%r13), %rax     
0x7f95d65c77b5  mov 0x15824fe, %cl      
0x7f95d65c77bc  or 0x16(%rax), %cl      
0x7f95d65c77bf  jz 0x21d                 ; 0x7f95d65c672d
0x7f95d65c77c5  mov $0x6f, -0xc4(%rbp)  
0x7f95d65c77cf  mov %r13, %rdi          
0x7f95d65c77d2  mov %r14, %rsi          
0x7f95d65c77d5  mov $0x763000, %rax      ; rbx_check_interrupts
0x7f95d65c77df  callq *%rax             
0x7f95d65c77e1  test %rax, %rax         
0x7f95d65c77e4  jnz 0x216                ; 0x7f95d65c6726
0x7f95d65c77ea  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c77f4  lea -0xe8(%rbp), %rsi   
0x7f95d65c77fb  mov %r13, %rdi          
0x7f95d65c77fe  callq *%rax             
0x7f95d65c7800  mov %al, %cl            
0x7f95d65c7802  xor %eax, %eax          
0x7f95d65c7804  testb $0x1, %cl         
0x7f95d65c7807  jz 0x1384                ; 0x7f95d65c7894
0x7f95d65c780d  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c7817  mov %r13, %rdi          
0x7f95d65c781a  callq *%rax             
0x7f95d65c781c  jmp 0x1384               ; 0x7f95d65c7894
0x7f95d65c7821  mov $0x3d, -0xc4(%rbp)  
0x7f95d65c782b  mov $0x7f95bc004290, %rax
0x7f95d65c7835  mov %rax, (%rsp)        
0x7f95d65c7839  mov $0x0, 0x10(%rsp)    
0x7f95d65c7841  jmp 0x1356               ; 0x7f95d65c7866
0x7f95d65c7846  mov $0x3d, -0xc4(%rbp)  
0x7f95d65c7850  mov $0x7f95bc004290, %rax
0x7f95d65c785a  mov %rax, (%rsp)        
0x7f95d65c785e  mov $0x1, 0x10(%rsp)    
0x7f95d65c7866  mov $0x0, 0x8(%rsp)     
0x7f95d65c786e  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c7878  lea -0xe8(%rbp), %rsi   
0x7f95d65c787f  mov $0x3d, %edx         
0x7f95d65c7884  mov $0x3, %ecx          
0x7f95d65c7889  xor %r9d, %r9d          
0x7f95d65c788c  mov %r13, %rdi          
0x7f95d65c788f  mov %rsi, %r8           
0x7f95d65c7892  callq *%rax             
0x7f95d65c7894  addq $0x298, %rsp       
0x7f95d65c789b  pop %rbx                
0x7f95d65c789c  pop %r12                
0x7f95d65c789e  pop %r13                
0x7f95d65c78a0  pop %r14                
0x7f95d65c78a2  pop %r15                
0x7f95d65c78a4  pop %rbp                
0x7f95d65c78a5  ret                     
0x7f95d65c78a6  mov -0x108(%rbp), %rax  
0x7f95d65c78ad  mov %rax, -0xa0(%rbp)   
0x7f95d65c78b4  jmp 0x1384               ; 0x7f95d65c7894
0x7f95d65c78b9  mov $0x47, -0xc4(%rbp)  
0x7f95d65c78c3  mov $0x7f95bc004290, %rax
0x7f95d65c78cd  mov %rax, (%rsp)        
0x7f95d65c78d1  mov $0x1, 0x10(%rsp)    
0x7f95d65c78d9  mov $0x0, 0x8(%rsp)     
0x7f95d65c78e1  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c78eb  lea -0xe8(%rbp), %rsi   
0x7f95d65c78f2  mov $0x47, %edx         
0x7f95d65c78f7  mov $0x2, %ecx          
0x7f95d65c78fc  jmp 0x1379               ; 0x7f95d65c7889
0x7f95d65c7901  mov $0x4a, -0xc4(%rbp)  
0x7f95d65c790b  mov $0x7f95bc004290, %rax
0x7f95d65c7915  mov %rax, (%rsp)        
0x7f95d65c7919  mov $0x1, 0x10(%rsp)    
0x7f95d65c7921  mov $0x0, 0x8(%rsp)     
0x7f95d65c7929  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c7933  lea -0xe8(%rbp), %rsi   
0x7f95d65c793a  mov $0x4a, %edx         
0x7f95d65c793f  jmp 0x1497               ; 0x7f95d65c79a7
0x7f95d65c7944  mov $0x62, -0xc4(%rbp)  
0x7f95d65c794e  mov $0x7f95bc004290, %rax
0x7f95d65c7958  mov %rax, (%rsp)        
0x7f95d65c795c  mov $0x0, 0x10(%rsp)    
0x7f95d65c7964  jmp 0x1479               ; 0x7f95d65c7989
0x7f95d65c7969  mov $0x62, -0xc4(%rbp)  
0x7f95d65c7973  mov $0x7f95bc004290, %rax
0x7f95d65c797d  mov %rax, (%rsp)        
0x7f95d65c7981  mov $0x1, 0x10(%rsp)    
0x7f95d65c7989  mov $0x0, 0x8(%rsp)     
0x7f95d65c7991  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c799b  lea -0xe8(%rbp), %rsi   
0x7f95d65c79a2  mov $0x62, %edx         
0x7f95d65c79a7  mov $0x1, %ecx          
0x7f95d65c79ac  jmp 0x1379               ; 0x7f95d65c7889
[[[ LLVM Simple IR: _X_Object#eval_A@3 ]]]

define %"struct.rubinius::Object"* @"_X_Object#eval_A@3"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !9
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !9
  %counter2 = alloca i32, !dbg !9
  %valid_flag = alloca i1, !dbg !9
  %cfstk = alloca %"struct.rubinius::Object"*, i32 15, !dbg !9
  %var_mem = alloca %"struct.rubinius::Object"*, i32 8, !dbg !9
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !9
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, !dbg !9
  %arg_cmp = icmp ne i32 %arg.total, 2, !dbg !9
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !9
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !9
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !9
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !9
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !9
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !9
  store i8* null, i8** %3, !dbg !9
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !9
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !9
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !9
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !9
  store i32 40, i32* %5, !dbg !9
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  store i32 0, i32* %6, !dbg !9
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !9
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !9
  store i8* inttoptr (i64 140281081233088 to i8*), i8** %8, !dbg !9
  store i32 0, i32* %counter_alloca, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !9
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !9
  %added = add i32 %counter, 1, !dbg !9
  store i32 %added, i32* %counter_alloca, !dbg !9
  %loop_check = icmp eq i32 %added, 6, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !9
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !9, !rbx-classid !10
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !9
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !9
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !9
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !9
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !9
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !9
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !9
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !9
  %local_pos1 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos1, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !9
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !9
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !9
  %arg_val_offset2 = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 1, !dbg !9
  %arg_val3 = load %"struct.rubinius::Object"** %arg_val_offset2, !dbg !9
  %var_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !9
  store %"struct.rubinius::Object"* %arg_val3, %"struct.rubinius::Object"** %var_pos4, !dbg !9
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %17, !dbg !11
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 1, !dbg !11
  %stack_limit = load i64* %18, !dbg !11
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !11
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !11
  %check_interrupts = load i8* %20, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), !dbg !11
  %has_interrupts = or i8 %check_interrupts, %check_global_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %19, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %class_fallback251, %class_fallback213, %class_fallback174, %class_fallback138, %class_fallback104, %class_fallback66, %class_fallback27, %class_fallback
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check, %bottom
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !9
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !9
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !11
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !11
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !11
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !11
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 0, !dbg !11
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !11, !rbx-classid !12
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos5, !dbg !11
  %local_pos6 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !11
  %local = load %"struct.rubinius::Object"** %local_pos6, !dbg !11, !rbx-classid !13
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos7, !dbg !11
  %local_pos8 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !11
  %local9 = load %"struct.rubinius::Object"** %local_pos8, !dbg !11, !rbx-classid !14
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %local9, %"struct.rubinius::Object"** %stack_pos10, !dbg !11
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load = load %"struct.rubinius::Object"** %stack_pos11, !dbg !11, !rbx-classid !13
  %stack_pos12 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load13 = load %"struct.rubinius::Object"** %stack_pos12, !dbg !11, !rbx-classid !14
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !11
  %cast14 = ptrtoint %"struct.rubinius::Object"* %stack_load13 to i64, !dbg !11
  %fixnums_anded = and i64 %cast, %cast14, !dbg !11
  %masked = and i64 %fixnums_anded, 1, !dbg !11
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !11
  br i1 %is_fixnum, label %push_add, label %class_fallback, !dbg !11

class_fallback:                                   ; preds = %method_body
  %stack_pos17 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load18 = load %"struct.rubinius::Object"** %stack_pos17, !dbg !11, !rbx-classid !13
  store %"struct.rubinius::Object"* %stack_load18, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos19 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos19, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !11
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !11
  store i32 6, i32* %ip_pos, !dbg !11
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !11
  br i1 %null_check, label %bail_out, label %check_active, !dbg !11

serial_fallback:                                  ; No predecessors!
  store i32 6, i32* %ip_pos, !dbg !11
  %21 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 6, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue:                                         ; preds = %check_active, %cont
  %send_result = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute, %check_active ], !dbg !11
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos20, !dbg !11
  %local_pos21 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !11
  %local22 = load %"struct.rubinius::Object"** %local_pos21, !dbg !11, !rbx-classid !13
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %local22, %"struct.rubinius::Object"** %stack_pos23, !dbg !11
  %local_pos24 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !11
  %local25 = load %"struct.rubinius::Object"** %local_pos24, !dbg !11, !rbx-classid !14
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  store %"struct.rubinius::Object"* %local25, %"struct.rubinius::Object"** %stack_pos26, !dbg !11
  %stack_pos30 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load31 = load %"struct.rubinius::Object"** %stack_pos30, !dbg !11, !rbx-classid !13
  %stack_pos32 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  %stack_load33 = load %"struct.rubinius::Object"** %stack_pos32, !dbg !11, !rbx-classid !14
  %cast38 = ptrtoint %"struct.rubinius::Object"* %stack_load31 to i64, !dbg !11
  %cast39 = ptrtoint %"struct.rubinius::Object"* %stack_load33 to i64, !dbg !11
  %fixnums_anded40 = and i64 %cast38, %cast39, !dbg !11
  %masked41 = and i64 %fixnums_anded40, 1, !dbg !11
  %is_fixnum42 = icmp eq i64 %masked41, 1, !dbg !11
  br i1 %is_fixnum42, label %push_add34, label %class_fallback27, !dbg !11

push_add:                                         ; preds = %method_body
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load to i64, !dbg !11
  %ashr = ashr i64 %as_int, 1, !dbg !11
  %as_int15 = ptrtoint %"struct.rubinius::Object"* %stack_load13 to i64, !dbg !11
  %ashr16 = ashr i64 %as_int15, 1, !dbg !11
  %fixnum.add = add i64 %ashr, %ashr16, !dbg !11
  %22 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !11
  %23 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !11
  %fits_fixnum = and i1 %22, %23, !dbg !11
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !11

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !11
  %or = or i64 %shl, 1, !dbg !11
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !11
  br label %cont, !dbg !11

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !11
  br label %cont, !dbg !11

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !11
  br label %continue, !dbg !11

check_active:                                     ; preds = %class_fallback
  br label %continue, !dbg !11

class_fallback27:                                 ; preds = %continue
  %stack_pos54 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load55 = load %"struct.rubinius::Object"** %stack_pos54, !dbg !11, !rbx-classid !13
  store %"struct.rubinius::Object"* %stack_load55, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos56 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos56, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const57 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos58 = getelementptr %"struct.rubinius::CallSite"* %cache_const57, i32 0, i32 2, !dbg !11
  %execute59 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos58, !dbg !11
  store i32 13, i32* %ip_pos, !dbg !11
  %call_site_execute60 = call %"struct.rubinius::Object"* %execute59(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const57, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check62 = icmp eq %"struct.rubinius::Object"* %call_site_execute60, null, !dbg !11
  br i1 %null_check62, label %bail_out, label %check_active61, !dbg !11

serial_fallback28:                                ; No predecessors!
  store i32 13, i32* %ip_pos, !dbg !11
  %24 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 13, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue29:                                       ; preds = %check_active61, %cont37
  %send_result63 = phi %"struct.rubinius::Object"* [ %result53, %cont37 ], [ %call_site_execute60, %check_active61 ], !dbg !11
  %stack_pos64 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %send_result63, %"struct.rubinius::Object"** %stack_pos64, !dbg !11
  %stack_pos65 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos65, !dbg !11
  %stack_pos69 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load70 = load %"struct.rubinius::Object"** %stack_pos69, !dbg !11
  %stack_pos71 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  %stack_load72 = load %"struct.rubinius::Object"** %stack_pos71, !dbg !11, !rbx-classid !15
  %cast77 = ptrtoint %"struct.rubinius::Object"* %stack_load70 to i64, !dbg !11
  %cast78 = ptrtoint %"struct.rubinius::Object"* %stack_load72 to i64, !dbg !11
  %fixnums_anded79 = and i64 %cast77, %cast78, !dbg !11
  %masked80 = and i64 %fixnums_anded79, 1, !dbg !11
  %is_fixnum81 = icmp eq i64 %masked80, 1, !dbg !11
  br i1 %is_fixnum81, label %push_add73, label %class_fallback66, !dbg !11

push_add34:                                       ; preds = %continue
  %as_int43 = ptrtoint %"struct.rubinius::Object"* %stack_load31 to i64, !dbg !11
  %ashr44 = ashr i64 %as_int43, 1, !dbg !11
  %as_int45 = ptrtoint %"struct.rubinius::Object"* %stack_load33 to i64, !dbg !11
  %ashr46 = ashr i64 %as_int45, 1, !dbg !11
  %fixnum.add47 = add i64 %ashr44, %ashr46, !dbg !11
  %25 = icmp sle i64 %fixnum.add47, 4611686018427387903, !dbg !11
  %26 = icmp sge i64 %fixnum.add47, -4611686018427387903, !dbg !11
  %fits_fixnum48 = and i1 %25, %26, !dbg !11
  br i1 %fits_fixnum48, label %tagnow35, label %bignum36, !dbg !11

tagnow35:                                         ; preds = %push_add34
  %shl50 = shl i64 %fixnum.add47, 1, !dbg !11
  %or51 = or i64 %shl50, 1, !dbg !11
  %as_obj52 = inttoptr i64 %or51 to %"struct.rubinius::Object"*, !dbg !11
  br label %cont37, !dbg !11

bignum36:                                         ; preds = %push_add34
  %big_value49 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add47) #1, !dbg !11
  br label %cont37, !dbg !11

cont37:                                           ; preds = %tagnow35, %bignum36
  %result53 = phi %"struct.rubinius::Object"* [ %big_value49, %bignum36 ], [ %as_obj52, %tagnow35 ], !dbg !11
  br label %continue29, !dbg !11

check_active61:                                   ; preds = %class_fallback27
  br label %continue29, !dbg !11

class_fallback66:                                 ; preds = %continue29
  %stack_pos93 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load94 = load %"struct.rubinius::Object"** %stack_pos93, !dbg !11
  store %"struct.rubinius::Object"* %stack_load94, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos95 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos95, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i32 0, i32 2, !dbg !11
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, !dbg !11
  store i32 17, i32* %ip_pos, !dbg !11
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !11
  br i1 %null_check101, label %bail_out, label %check_active100, !dbg !11

serial_fallback67:                                ; No predecessors!
  store i32 17, i32* %ip_pos, !dbg !11
  %27 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 17, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue68:                                       ; preds = %check_active100, %cont76
  %send_result102 = phi %"struct.rubinius::Object"* [ %result92, %cont76 ], [ %call_site_execute99, %check_active100 ], !dbg !11
  %stack_pos103 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack_pos103, !dbg !11
  %stack_pos107 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load108 = load %"struct.rubinius::Object"** %stack_pos107, !dbg !11
  %stack_pos109 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load110 = load %"struct.rubinius::Object"** %stack_pos109, !dbg !11
  %cast113 = ptrtoint %"struct.rubinius::Object"* %stack_load108 to i64, !dbg !11
  %cast114 = ptrtoint %"struct.rubinius::Object"* %stack_load110 to i64, !dbg !11
  %fixnums_anded115 = and i64 %cast113, %cast114, !dbg !11
  %masked116 = and i64 %fixnums_anded115, 1, !dbg !11
  %is_fixnum117 = icmp eq i64 %masked116, 1, !dbg !11
  br i1 %is_fixnum117, label %push_mul, label %class_fallback104, !dbg !11

push_add73:                                       ; preds = %continue29
  %as_int82 = ptrtoint %"struct.rubinius::Object"* %stack_load70 to i64, !dbg !11
  %ashr83 = ashr i64 %as_int82, 1, !dbg !11
  %as_int84 = ptrtoint %"struct.rubinius::Object"* %stack_load72 to i64, !dbg !11
  %ashr85 = ashr i64 %as_int84, 1, !dbg !11
  %fixnum.add86 = add i64 %ashr83, %ashr85, !dbg !11
  %28 = icmp sle i64 %fixnum.add86, 4611686018427387903, !dbg !11
  %29 = icmp sge i64 %fixnum.add86, -4611686018427387903, !dbg !11
  %fits_fixnum87 = and i1 %28, %29, !dbg !11
  br i1 %fits_fixnum87, label %tagnow74, label %bignum75, !dbg !11

tagnow74:                                         ; preds = %push_add73
  %shl89 = shl i64 %fixnum.add86, 1, !dbg !11
  %or90 = or i64 %shl89, 1, !dbg !11
  %as_obj91 = inttoptr i64 %or90 to %"struct.rubinius::Object"*, !dbg !11
  br label %cont76, !dbg !11

bignum75:                                         ; preds = %push_add73
  %big_value88 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add86) #1, !dbg !11
  br label %cont76, !dbg !11

cont76:                                           ; preds = %tagnow74, %bignum75
  %result92 = phi %"struct.rubinius::Object"* [ %big_value88, %bignum75 ], [ %as_obj91, %tagnow74 ], !dbg !11
  br label %continue68, !dbg !11

check_active100:                                  ; preds = %class_fallback66
  br label %continue68, !dbg !11

class_fallback104:                                ; preds = %fits_fixnum111, %push_mul, %continue68
  %stack_pos126 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load127 = load %"struct.rubinius::Object"** %stack_pos126, !dbg !11
  store %"struct.rubinius::Object"* %stack_load127, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos128 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos128, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const129 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos130 = getelementptr %"struct.rubinius::CallSite"* %cache_const129, i32 0, i32 2, !dbg !11
  %execute131 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos130, !dbg !11
  store i32 20, i32* %ip_pos, !dbg !11
  %call_site_execute132 = call %"struct.rubinius::Object"* %execute131(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const129, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check134 = icmp eq %"struct.rubinius::Object"* %call_site_execute132, null, !dbg !11
  br i1 %null_check134, label %bail_out, label %check_active133, !dbg !11

serial_fallback105:                               ; No predecessors!
  store i32 20, i32* %ip_pos, !dbg !11
  %30 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 20, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue106:                                      ; preds = %check_active133, %tagnow112
  %send_result135 = phi %"struct.rubinius::Object"* [ %as_obj125, %tagnow112 ], [ %call_site_execute132, %check_active133 ], !dbg !11
  %stack_pos136 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %send_result135, %"struct.rubinius::Object"** %stack_pos136, !dbg !11
  %stack_pos137 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos137, !dbg !11
  %stack_pos141 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load142 = load %"struct.rubinius::Object"** %stack_pos141, !dbg !11
  %stack_pos143 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load144 = load %"struct.rubinius::Object"** %stack_pos143, !dbg !11, !rbx-classid !16
  %cast145 = ptrtoint %"struct.rubinius::Object"* %stack_load142 to i64, !dbg !11
  %cast146 = ptrtoint %"struct.rubinius::Object"* %stack_load144 to i64, !dbg !11
  %masked147 = and i64 %cast145, -9223372036854775807, !dbg !11
  %masked148 = and i64 %cast146, -9223372036854775807, !dbg !11
  %fixnums_anded149 = and i64 %masked147, %masked148, !dbg !11
  %fixnums_ored = or i64 %masked147, %masked148, !dbg !11
  %is_fixnum_and = icmp eq i64 %fixnums_anded149, 1, !dbg !11
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !11
  %is_fixnum150 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !11
  br i1 %is_fixnum150, label %positive, label %class_fallback138, !dbg !11

push_mul:                                         ; preds = %continue68
  %as_int118 = ptrtoint %"struct.rubinius::Object"* %stack_load108 to i64, !dbg !11
  %ashr119 = ashr i64 %as_int118, 1, !dbg !11
  %as_int120 = ptrtoint %"struct.rubinius::Object"* %stack_load110 to i64, !dbg !11
  %ashr121 = ashr i64 %as_int120, 1, !dbg !11
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr119, i64 %ashr121), !dbg !11
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !11
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !11
  br i1 %did_overflow, label %class_fallback104, label %fits_fixnum111, !dbg !11

fits_fixnum111:                                   ; preds = %push_mul
  %31 = icmp sle i64 %mul, 4611686018427387903, !dbg !11
  %32 = icmp sge i64 %mul, -4611686018427387903, !dbg !11
  %fits_fixnum122 = and i1 %31, %32, !dbg !11
  br i1 %fits_fixnum122, label %tagnow112, label %class_fallback104, !dbg !11

tagnow112:                                        ; preds = %fits_fixnum111
  %shl123 = shl i64 %mul, 1, !dbg !11
  %or124 = or i64 %shl123, 1, !dbg !11
  %as_obj125 = inttoptr i64 %or124 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue106, !dbg !11

check_active133:                                  ; preds = %class_fallback104
  br label %continue106, !dbg !11

class_fallback138:                                ; preds = %positive, %continue106
  %stack_pos160 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load161 = load %"struct.rubinius::Object"** %stack_pos160, !dbg !11
  store %"struct.rubinius::Object"* %stack_load161, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos162, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const163 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos164 = getelementptr %"struct.rubinius::CallSite"* %cache_const163, i32 0, i32 2, !dbg !11
  %execute165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos164, !dbg !11
  store i32 24, i32* %ip_pos, !dbg !11
  %call_site_execute166 = call %"struct.rubinius::Object"* %execute165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check168 = icmp eq %"struct.rubinius::Object"* %call_site_execute166, null, !dbg !11
  br i1 %null_check168, label %bail_out, label %check_active167, !dbg !11

serial_fallback139:                               ; No predecessors!
  store i32 24, i32* %ip_pos, !dbg !11
  %33 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 24, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue140:                                      ; preds = %check_active167, %divide
  %send_result169 = phi %"struct.rubinius::Object"* [ %as_obj159, %divide ], [ %call_site_execute166, %check_active167 ], !dbg !11
  %stack_pos170 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %send_result169, %"struct.rubinius::Object"** %stack_pos170, !dbg !11
  %local_pos171 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !11
  %local172 = load %"struct.rubinius::Object"** %local_pos171, !dbg !11, !rbx-classid !13
  %stack_pos173 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* %local172, %"struct.rubinius::Object"** %stack_pos173, !dbg !11
  %stack_pos177 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load178 = load %"struct.rubinius::Object"** %stack_pos177, !dbg !11
  %stack_pos179 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load180 = load %"struct.rubinius::Object"** %stack_pos179, !dbg !11, !rbx-classid !13
  %cast185 = ptrtoint %"struct.rubinius::Object"* %stack_load178 to i64, !dbg !11
  %cast186 = ptrtoint %"struct.rubinius::Object"* %stack_load180 to i64, !dbg !11
  %fixnums_anded187 = and i64 %cast185, %cast186, !dbg !11
  %masked188 = and i64 %fixnums_anded187, 1, !dbg !11
  %is_fixnum189 = icmp eq i64 %masked188, 1, !dbg !11
  br i1 %is_fixnum189, label %push_add181, label %class_fallback174, !dbg !11

positive:                                         ; preds = %continue106
  %cast151 = ptrtoint %"struct.rubinius::Object"* %stack_load144 to i64, !dbg !11
  %is_fixnum152 = icmp ne i64 %cast151, 1, !dbg !11
  br i1 %is_fixnum152, label %divide, label %class_fallback138, !dbg !11

divide:                                           ; preds = %positive
  %as_int153 = ptrtoint %"struct.rubinius::Object"* %stack_load142 to i64, !dbg !11
  %ashr154 = ashr i64 %as_int153, 1, !dbg !11
  %as_int155 = ptrtoint %"struct.rubinius::Object"* %stack_load144 to i64, !dbg !11
  %ashr156 = ashr i64 %as_int155, 1, !dbg !11
  %fixnum.div = sdiv i64 %ashr154, %ashr156, !dbg !11
  %shl157 = shl i64 %fixnum.div, 1, !dbg !11
  %or158 = or i64 %shl157, 1, !dbg !11
  %as_obj159 = inttoptr i64 %or158 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue140, !dbg !11

check_active167:                                  ; preds = %class_fallback138
  br label %continue140, !dbg !11

class_fallback174:                                ; preds = %continue140
  %stack_pos201 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load202 = load %"struct.rubinius::Object"** %stack_pos201, !dbg !11
  store %"struct.rubinius::Object"* %stack_load202, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos203 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const204 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos205 = getelementptr %"struct.rubinius::CallSite"* %cache_const204, i32 0, i32 2, !dbg !11
  %execute206 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos205, !dbg !11
  store i32 29, i32* %ip_pos, !dbg !11
  %call_site_execute207 = call %"struct.rubinius::Object"* %execute206(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const204, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check209 = icmp eq %"struct.rubinius::Object"* %call_site_execute207, null, !dbg !11
  br i1 %null_check209, label %bail_out, label %check_active208, !dbg !11

serial_fallback175:                               ; No predecessors!
  store i32 29, i32* %ip_pos, !dbg !11
  %34 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 29, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue176:                                      ; preds = %check_active208, %cont184
  %send_result210 = phi %"struct.rubinius::Object"* [ %result200, %cont184 ], [ %call_site_execute207, %check_active208 ], !dbg !11
  %stack_pos211 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %send_result210, %"struct.rubinius::Object"** %stack_pos211, !dbg !11
  %stack_pos212 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos212, !dbg !11
  %stack_pos216 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load217 = load %"struct.rubinius::Object"** %stack_pos216, !dbg !11
  %stack_pos218 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  %stack_load219 = load %"struct.rubinius::Object"** %stack_pos218, !dbg !11, !rbx-classid !15
  %cast224 = ptrtoint %"struct.rubinius::Object"* %stack_load217 to i64, !dbg !11
  %cast225 = ptrtoint %"struct.rubinius::Object"* %stack_load219 to i64, !dbg !11
  %fixnums_anded226 = and i64 %cast224, %cast225, !dbg !11
  %masked227 = and i64 %fixnums_anded226, 1, !dbg !11
  %is_fixnum228 = icmp eq i64 %masked227, 1, !dbg !11
  br i1 %is_fixnum228, label %push_add220, label %class_fallback213, !dbg !11

push_add181:                                      ; preds = %continue140
  %as_int190 = ptrtoint %"struct.rubinius::Object"* %stack_load178 to i64, !dbg !11
  %ashr191 = ashr i64 %as_int190, 1, !dbg !11
  %as_int192 = ptrtoint %"struct.rubinius::Object"* %stack_load180 to i64, !dbg !11
  %ashr193 = ashr i64 %as_int192, 1, !dbg !11
  %fixnum.add194 = add i64 %ashr191, %ashr193, !dbg !11
  %35 = icmp sle i64 %fixnum.add194, 4611686018427387903, !dbg !11
  %36 = icmp sge i64 %fixnum.add194, -4611686018427387903, !dbg !11
  %fits_fixnum195 = and i1 %35, %36, !dbg !11
  br i1 %fits_fixnum195, label %tagnow182, label %bignum183, !dbg !11

tagnow182:                                        ; preds = %push_add181
  %shl197 = shl i64 %fixnum.add194, 1, !dbg !11
  %or198 = or i64 %shl197, 1, !dbg !11
  %as_obj199 = inttoptr i64 %or198 to %"struct.rubinius::Object"*, !dbg !11
  br label %cont184, !dbg !11

bignum183:                                        ; preds = %push_add181
  %big_value196 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add194) #1, !dbg !11
  br label %cont184, !dbg !11

cont184:                                          ; preds = %tagnow182, %bignum183
  %result200 = phi %"struct.rubinius::Object"* [ %big_value196, %bignum183 ], [ %as_obj199, %tagnow182 ], !dbg !11
  br label %continue176, !dbg !11

check_active208:                                  ; preds = %class_fallback174
  br label %continue176, !dbg !11

class_fallback213:                                ; preds = %continue176
  %stack_pos240 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load241 = load %"struct.rubinius::Object"** %stack_pos240, !dbg !11
  store %"struct.rubinius::Object"* %stack_load241, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos242 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos242, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const243 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos244 = getelementptr %"struct.rubinius::CallSite"* %cache_const243, i32 0, i32 2, !dbg !11
  %execute245 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos244, !dbg !11
  store i32 33, i32* %ip_pos, !dbg !11
  %call_site_execute246 = call %"struct.rubinius::Object"* %execute245(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const243, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check248 = icmp eq %"struct.rubinius::Object"* %call_site_execute246, null, !dbg !11
  br i1 %null_check248, label %bail_out, label %check_active247, !dbg !11

serial_fallback214:                               ; No predecessors!
  store i32 33, i32* %ip_pos, !dbg !11
  %37 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 33, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue215:                                      ; preds = %check_active247, %cont223
  %send_result249 = phi %"struct.rubinius::Object"* [ %result239, %cont223 ], [ %call_site_execute246, %check_active247 ], !dbg !11
  %stack_pos250 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"* %send_result249, %"struct.rubinius::Object"** %stack_pos250, !dbg !11
  %stack_pos254 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load255 = load %"struct.rubinius::Object"** %stack_pos254, !dbg !11, !rbx-classid !12
  %stack_pos256 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  %stack_load257 = load %"struct.rubinius::Object"** %stack_pos256, !dbg !11
  %cast259 = ptrtoint %"struct.rubinius::Object"* %stack_load257 to i64, !dbg !11
  %masked260 = and i64 %cast259, 3, !dbg !11
  %is_reference = icmp eq i64 %masked260, 0, !dbg !11
  br i1 %is_reference, label %check_class_id, label %continue258, !dbg !11

push_add220:                                      ; preds = %continue176
  %as_int229 = ptrtoint %"struct.rubinius::Object"* %stack_load217 to i64, !dbg !11
  %ashr230 = ashr i64 %as_int229, 1, !dbg !11
  %as_int231 = ptrtoint %"struct.rubinius::Object"* %stack_load219 to i64, !dbg !11
  %ashr232 = ashr i64 %as_int231, 1, !dbg !11
  %fixnum.add233 = add i64 %ashr230, %ashr232, !dbg !11
  %38 = icmp sle i64 %fixnum.add233, 4611686018427387903, !dbg !11
  %39 = icmp sge i64 %fixnum.add233, -4611686018427387903, !dbg !11
  %fits_fixnum234 = and i1 %38, %39, !dbg !11
  br i1 %fits_fixnum234, label %tagnow221, label %bignum222, !dbg !11

tagnow221:                                        ; preds = %push_add220
  %shl236 = shl i64 %fixnum.add233, 1, !dbg !11
  %or237 = or i64 %shl236, 1, !dbg !11
  %as_obj238 = inttoptr i64 %or237 to %"struct.rubinius::Object"*, !dbg !11
  br label %cont223, !dbg !11

bignum222:                                        ; preds = %push_add220
  %big_value235 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add233) #1, !dbg !11
  br label %cont223, !dbg !11

cont223:                                          ; preds = %tagnow221, %bignum222
  %result239 = phi %"struct.rubinius::Object"* [ %big_value235, %bignum222 ], [ %as_obj238, %tagnow221 ], !dbg !11
  br label %continue215, !dbg !11

check_active247:                                  ; preds = %class_fallback213
  br label %continue215, !dbg !11

serial_fallback252:                               ; No predecessors!
  store i32 36, i32* %ip_pos, !dbg !11
  %40 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281081233088 to i8*), i32 0, i8 1), !dbg !11
  br label %return_pad, !dbg !11

continue253:                                      ; preds = %check_active278, %continue262
  %send_result280 = phi %"struct.rubinius::Object"* [ %43, %continue262 ], [ %call_site_execute277, %check_active278 ], !dbg !11
  %stack_pos281 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  store %"struct.rubinius::Object"* %send_result280, %"struct.rubinius::Object"** %stack_pos281, !dbg !11
  %stack_pos282 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load283 = load %"struct.rubinius::Object"** %stack_pos282, !dbg !11
  br label %return_pad, !dbg !11

return_pad:                                       ; preds = %continue253, %serial_fallback252, %serial_fallback214, %serial_fallback175, %serial_fallback139, %serial_fallback105, %serial_fallback67, %serial_fallback28, %serial_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %21, %serial_fallback ], [ %24, %serial_fallback28 ], [ %27, %serial_fallback67 ], [ %30, %serial_fallback105 ], [ %33, %serial_fallback139 ], [ %34, %serial_fallback175 ], [ %37, %serial_fallback214 ], [ %40, %serial_fallback252 ], [ %stack_load283, %continue253 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

check_class_id:                                   ; preds = %continue215
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load257, i32 0, i32 0, i32 1, !dbg !11
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !11
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !11
  %class_id = load i32* %class_id_pos, !dbg !11
  %check_class_id261 = icmp eq i32 %class_id, 77, !dbg !11
  br i1 %check_class_id261, label %correct_class, label %continue258, !dbg !11

correct_class:                                    ; preds = %check_class_id
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load257 to %"struct.rubinius::Float"*, !dbg !11
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !11
  %farg = load double* %arg.value_pos, !dbg !11
  br label %continue262, !dbg !11

continue258:                                      ; preds = %check_class_id, %continue215
  %cast263 = ptrtoint %"struct.rubinius::Object"* %stack_load257 to i64, !dbg !11
  %masked264 = and i64 %cast263, 1, !dbg !11
  %is_fixnum265 = icmp eq i64 %masked264, 1, !dbg !11
  br i1 %is_fixnum265, label %guarded_body, label %class_fallback251, !dbg !11

guarded_body:                                     ; preds = %continue258
  %as_int266 = ptrtoint %"struct.rubinius::Object"* %stack_load257 to i64, !dbg !11
  %ashr267 = ashr i64 %as_int266, 1, !dbg !11
  %41 = sitofp i64 %ashr267 to double, !dbg !11
  br label %continue262, !dbg !11

continue262:                                      ; preds = %guarded_body, %correct_class
  %rhs = phi double [ %farg, %correct_class ], [ %41, %guarded_body ], !dbg !11
  %stack_pos268 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load269 = load %"struct.rubinius::Object"** %stack_pos268, !dbg !11, !rbx-classid !12
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load269 to %"struct.rubinius::Float"*, !dbg !11
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !11
  %fself = load double* %self.value_pos, !dbg !11
  %float.div = fdiv double %fself, %rhs, !dbg !11
  %result270 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !11, !rbx-classid !12
  %42 = getelementptr %"struct.rubinius::Float"* %result270, i32 0, i32 1, !dbg !11
  store double %float.div, double* %42, !dbg !11
  %43 = bitcast %"struct.rubinius::Float"* %result270 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue253, !dbg !11

class_fallback251:                                ; preds = %continue258
  %stack_pos271 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !11
  %stack_load272 = load %"struct.rubinius::Object"** %stack_pos271, !dbg !11, !rbx-classid !12
  store %"struct.rubinius::Object"* %stack_load272, %"struct.rubinius::Object"** %out_args_recv, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !11
  store i32 1, i32* %out_args_total, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !11
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos273, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !11
  %cache_const274 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), !dbg !11
  %execute_pos275 = getelementptr %"struct.rubinius::CallSite"* %cache_const274, i32 0, i32 2, !dbg !11
  %execute276 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos275, !dbg !11
  store i32 36, i32* %ip_pos, !dbg !11
  %call_site_execute277 = call %"struct.rubinius::Object"* %execute276(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const274, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check279 = icmp eq %"struct.rubinius::Object"* %call_site_execute277, null, !dbg !11
  br i1 %null_check279, label %bail_out, label %check_active278, !dbg !11

check_active278:                                  ; preds = %class_fallback251
  br label %continue253, !dbg !11

ret_null284:                                      ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !11

prologue_check:                                   ; preds = %bottom
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %44 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %44, label %ret_null284, label %method_body, !dbg !11
}

[[[ LLVM Optimized IR: _X_Object#eval_A@3 ]]]

define %"struct.rubinius::Object"* @"_X_Object#eval_A@3"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !9
  %cfstk285 = alloca [15 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %var_mem286 = alloca [8 x %"struct.rubinius::Object"*], align 8, !dbg !9
  %call_frame = bitcast [15 x %"struct.rubinius::Object"*]* %cfstk285 to %"struct.rubinius::CallFrame"*, !dbg !9
  %stack = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 9, !dbg !9
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !9
  %arg.total = load i32* %total_pos, align 4, !dbg !9
  %arg_cmp = icmp eq i32 %arg.total, 2, !dbg !9
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !9

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 2), !dbg !9
  br label %return_pad, !dbg !9

import_args:                                      ; preds = %entry
  %0 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 3, !dbg !9
  %1 = getelementptr inbounds [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 0, !dbg !9
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !9
  %2 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 8, !dbg !9
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !9
  %3 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !9
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !9
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !9
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !9
  %5 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 1, !dbg !9
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !9
  %6 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 4, !dbg !9
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !9
  store i32 40, i32* %7, align 8, !dbg !9
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !9
  store i32 0, i32* %8, align 4, !dbg !9
  %9 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 7, !dbg !9
  %vars.c = bitcast [8 x %"struct.rubinius::Object"*]* %var_mem286 to %"struct.rubinius::Object"*, !dbg !9
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !9
  %10 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 140281081233088 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !9
  br label %stack_nil, !dbg !9

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %11 = sext i32 %counter_alloca.0 to i64, !dbg !9
  %stack.sum = add i64 %11, 9, !dbg !9
  %stack_pos = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 %stack.sum, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !9
  %added = add i32 %counter_alloca.0, 1, !dbg !9
  %loop_check = icmp eq i32 %added, 6, !dbg !9
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !9

bottom:                                           ; preds = %stack_nil
  %12 = getelementptr inbounds [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 0, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %12, align 8, !dbg !9
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !9
  %args.recv = load %"struct.rubinius::Object"** %13, align 8, !dbg !9, !rbx-classid !10
  %14 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 2, !dbg !9
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %14, align 8, !dbg !9
  %15 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 4, !dbg !9
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !9
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %15, align 8, !dbg !9
  %16 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !9
  %args.block = load %"struct.rubinius::Object"** %16, align 8, !dbg !9
  %17 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 3, !dbg !9
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %17, align 8, !dbg !9
  %18 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 1, !dbg !9
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %18, align 8, !dbg !9
  %19 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 5, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %19, align 8, !dbg !9
  %20 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 6, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !9
  %21 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem286, i64 0, i64 7, !dbg !9
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !9
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !9
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !9
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !9
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %20, align 8, !dbg !9
  %arg_val_offset2 = getelementptr %"struct.rubinius::Object"** %arg_ary, i64 1, !dbg !9
  %arg_val3 = load %"struct.rubinius::Object"** %arg_val_offset2, align 8, !dbg !9
  store %"struct.rubinius::Object"* %arg_val3, %"struct.rubinius::Object"** %21, align 8, !dbg !9
  %22 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !11
  %vm_jit = load %"struct.rubinius::VMJIT"** %22, align 8, !dbg !11
  %23 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 1, !dbg !11
  %stack_limit = load i64* %23, align 8, !dbg !11
  %stack_end = ptrtoint [15 x %"struct.rubinius::Object"*]* %cfstk285 to i64, !dbg !11
  %24 = icmp ult i64 %stack_end, %stack_limit, !dbg !11
  %25 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !11
  %check_interrupts = load i8* %25, align 1, !dbg !11
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !11
  %has_interrupts = or i8 %check_global_interrupts, %check_interrupts, !dbg !11
  %needs_interrupts = icmp ne i8 %has_interrupts, 0, !dbg !11
  %needs_check = or i1 %needs_interrupts, %24, !dbg !11
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !11

bail_out:                                         ; preds = %class_fallback251, %class_fallback213, %class_fallback174, %class_fallback138, %class_fallback104, %class_fallback66, %class_fallback27, %class_fallback
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !9
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !9

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !9
  br label %return_pad, !dbg !9

method_body:                                      ; preds = %prologue_check.method_body_crit_edge, %bottom
  %local9 = phi %"struct.rubinius::Object"* [ %local9.pre, %prologue_check.method_body_crit_edge ], [ %arg_val3, %bottom ]
  %local = phi %"struct.rubinius::Object"* [ %local.pre, %prologue_check.method_body_crit_edge ], [ %arg_val, %bottom ]
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !9
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !9
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !9
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !9
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !9
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !9
  %26 = load %"struct.rubinius::Object"** %0, align 8, !dbg !11
  %literals_pos = getelementptr %"struct.rubinius::Object"* %26, i64 8, !dbg !11
  %27 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !11
  %literals = load %"struct.rubinius::Tuple"** %27, align 8, !dbg !11
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 0, !dbg !11
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !11, !rbx-classid !12
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  %stack_pos7 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 10, !dbg !11
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  %stack_pos10 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 11, !dbg !11
  store %"struct.rubinius::Object"* %local9, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %cast = ptrtoint %"struct.rubinius::Object"* %local to i64, !dbg !11
  %cast14 = ptrtoint %"struct.rubinius::Object"* %local9 to i64, !dbg !11
  %fixnums_anded = and i64 %cast14, 1, !dbg !11
  %masked = and i64 %fixnums_anded, %cast, !dbg !11
  %is_fixnum = icmp eq i64 %masked, 0, !dbg !11
  br i1 %is_fixnum, label %class_fallback, label %push_add, !dbg !11

class_fallback:                                   ; preds = %method_body
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !11
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !11
  store i32 6, i32* %8, align 4, !dbg !11
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !11
  br i1 %null_check, label %bail_out, label %continue, !dbg !11

continue:                                         ; preds = %class_fallback, %bignum, %tagnow
  %send_result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute, %class_fallback ], !dbg !11
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  %local22 = load %"struct.rubinius::Object"** %20, align 8, !dbg !11, !rbx-classid !13
  store %"struct.rubinius::Object"* %local22, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %local25 = load %"struct.rubinius::Object"** %21, align 8, !dbg !11, !rbx-classid !14
  %stack_pos26 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk285, i64 0, i64 12, !dbg !11
  store %"struct.rubinius::Object"* %local25, %"struct.rubinius::Object"** %stack_pos26, align 8, !dbg !11
  %cast38 = ptrtoint %"struct.rubinius::Object"* %local22 to i64, !dbg !11
  %cast39 = ptrtoint %"struct.rubinius::Object"* %local25 to i64, !dbg !11
  %fixnums_anded40 = and i64 %cast39, 1, !dbg !11
  %masked41 = and i64 %fixnums_anded40, %cast38, !dbg !11
  %is_fixnum42 = icmp eq i64 %masked41, 0, !dbg !11
  br i1 %is_fixnum42, label %class_fallback27, label %push_add34, !dbg !11

push_add:                                         ; preds = %method_body
  %ashr = ashr i64 %cast, 1, !dbg !11
  %ashr16 = ashr i64 %cast14, 1, !dbg !11
  %fixnum.add = add i64 %ashr, %ashr16, !dbg !11
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !11
  %28 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !11
  br i1 %28, label %tagnow, label %bignum, !dbg !11

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !11
  %or = or i64 %shl, 1, !dbg !11
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !11
  br label %continue, !dbg !11

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #1, !dbg !11
  br label %continue, !dbg !11

class_fallback27:                                 ; preds = %continue
  store %"struct.rubinius::Object"* %local22, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos26, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const57 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), align 16, !dbg !11
  %execute_pos58 = getelementptr %"struct.rubinius::CallSite"* %cache_const57, i64 0, i32 2, !dbg !11
  %execute59 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos58, align 8, !dbg !11
  store i32 13, i32* %8, align 4, !dbg !11
  %call_site_execute60 = call %"struct.rubinius::Object"* %execute59(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const57, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check62 = icmp eq %"struct.rubinius::Object"* %call_site_execute60, null, !dbg !11
  br i1 %null_check62, label %bail_out, label %continue29, !dbg !11

continue29:                                       ; preds = %class_fallback27, %bignum36, %tagnow35
  %send_result63 = phi %"struct.rubinius::Object"* [ %big_value49, %bignum36 ], [ %as_obj52, %tagnow35 ], [ %call_site_execute60, %class_fallback27 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result63, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos26, align 8, !dbg !11
  %cast77 = ptrtoint %"struct.rubinius::Object"* %send_result63 to i64, !dbg !11
  %masked80 = and i64 %cast77, 1, !dbg !11
  %is_fixnum81 = icmp eq i64 %masked80, 0, !dbg !11
  br i1 %is_fixnum81, label %class_fallback66, label %push_add73, !dbg !11

push_add34:                                       ; preds = %continue
  %ashr44 = ashr i64 %cast38, 1, !dbg !11
  %ashr46 = ashr i64 %cast39, 1, !dbg !11
  %fixnum.add47 = add i64 %ashr44, %ashr46, !dbg !11
  %fixnum.add47.off = add i64 %fixnum.add47, 4611686018427387903, !dbg !11
  %29 = icmp ult i64 %fixnum.add47.off, 9223372036854775807, !dbg !11
  br i1 %29, label %tagnow35, label %bignum36, !dbg !11

tagnow35:                                         ; preds = %push_add34
  %shl50 = shl i64 %fixnum.add47, 1, !dbg !11
  %or51 = or i64 %shl50, 1, !dbg !11
  %as_obj52 = inttoptr i64 %or51 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue29, !dbg !11

bignum36:                                         ; preds = %push_add34
  %big_value49 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add47) #1, !dbg !11
  br label %continue29, !dbg !11

class_fallback66:                                 ; preds = %continue29
  store %"struct.rubinius::Object"* %send_result63, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos26, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const96 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), align 16, !dbg !11
  %execute_pos97 = getelementptr %"struct.rubinius::CallSite"* %cache_const96, i64 0, i32 2, !dbg !11
  %execute98 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos97, align 8, !dbg !11
  store i32 17, i32* %8, align 4, !dbg !11
  %call_site_execute99 = call %"struct.rubinius::Object"* %execute98(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const96, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check101 = icmp eq %"struct.rubinius::Object"* %call_site_execute99, null, !dbg !11
  br i1 %null_check101, label %bail_out, label %continue68, !dbg !11

continue68:                                       ; preds = %class_fallback66, %bignum75, %tagnow74
  %send_result102 = phi %"struct.rubinius::Object"* [ %big_value88, %bignum75 ], [ %as_obj91, %tagnow74 ], [ %call_site_execute99, %class_fallback66 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result102, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %stack_load108 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  %cast113 = ptrtoint %"struct.rubinius::Object"* %stack_load108 to i64, !dbg !11
  %cast114 = ptrtoint %"struct.rubinius::Object"* %send_result102 to i64, !dbg !11
  %fixnums_anded115 = and i64 %cast114, 1, !dbg !11
  %masked116 = and i64 %fixnums_anded115, %cast113, !dbg !11
  %is_fixnum117 = icmp eq i64 %masked116, 0, !dbg !11
  br i1 %is_fixnum117, label %class_fallback104, label %push_mul, !dbg !11

push_add73:                                       ; preds = %continue29
  %ashr83 = ashr i64 %cast77, 1, !dbg !11
  %fixnum.add86 = add i64 %ashr83, 1, !dbg !11
  %fixnum.add86.off = add i64 %ashr83, 4611686018427387904, !dbg !11
  %30 = icmp ult i64 %fixnum.add86.off, 9223372036854775807, !dbg !11
  br i1 %30, label %tagnow74, label %bignum75, !dbg !11

tagnow74:                                         ; preds = %push_add73
  %shl89 = shl i64 %fixnum.add86, 1, !dbg !11
  %or90 = or i64 %shl89, 1, !dbg !11
  %as_obj91 = inttoptr i64 %or90 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue68, !dbg !11

bignum75:                                         ; preds = %push_add73
  %big_value88 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add86) #1, !dbg !11
  br label %continue68, !dbg !11

class_fallback104:                                ; preds = %push_mul, %continue68
  store %"struct.rubinius::Object"* %stack_load108, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const129 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos130 = getelementptr %"struct.rubinius::CallSite"* %cache_const129, i64 0, i32 2, !dbg !11
  %execute131 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos130, align 8, !dbg !11
  store i32 20, i32* %8, align 4, !dbg !11
  %call_site_execute132 = call %"struct.rubinius::Object"* %execute131(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const129, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check134 = icmp eq %"struct.rubinius::Object"* %call_site_execute132, null, !dbg !11
  br i1 %null_check134, label %bail_out, label %continue106, !dbg !11

continue106:                                      ; preds = %class_fallback104, %tagnow112
  %send_result135 = phi %"struct.rubinius::Object"* [ %as_obj125, %tagnow112 ], [ %call_site_execute132, %class_fallback104 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result135, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %cast145 = ptrtoint %"struct.rubinius::Object"* %send_result135 to i64, !dbg !11
  %masked147 = and i64 %cast145, -9223372036854775808, !dbg !11
  %fixnums_anded149 = and i64 %cast145, 1, !dbg !11
  %fixnums_ored = or i64 %masked147, 1, !dbg !11
  %is_fixnum_and = icmp ne i64 %fixnums_anded149, 0, !dbg !11
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !11
  %is_fixnum150 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !11
  br i1 %is_fixnum150, label %divide, label %class_fallback138, !dbg !11

push_mul:                                         ; preds = %continue68
  %ashr119 = ashr i64 %cast113, 1, !dbg !11
  %ashr121 = ashr i64 %cast114, 1, !dbg !11
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr119, i64 %ashr121), !dbg !11
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !11
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !11
  %did_overflow.not = xor i1 %did_overflow, true, !dbg !11
  %mul.off = add i64 %mul, 4611686018427387903, !dbg !11
  %31 = icmp ult i64 %mul.off, 9223372036854775807, !dbg !11
  %or.cond = and i1 %31, %did_overflow.not, !dbg !11
  br i1 %or.cond, label %tagnow112, label %class_fallback104, !dbg !11

tagnow112:                                        ; preds = %push_mul
  %shl123 = shl i64 %mul, 1, !dbg !11
  %or124 = or i64 %shl123, 1, !dbg !11
  %as_obj125 = inttoptr i64 %or124 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue106, !dbg !11

class_fallback138:                                ; preds = %continue106
  store %"struct.rubinius::Object"* %send_result135, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const163 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos164 = getelementptr %"struct.rubinius::CallSite"* %cache_const163, i64 0, i32 2, !dbg !11
  %execute165 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos164, align 8, !dbg !11
  store i32 24, i32* %8, align 4, !dbg !11
  %call_site_execute166 = call %"struct.rubinius::Object"* %execute165(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const163, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check168 = icmp eq %"struct.rubinius::Object"* %call_site_execute166, null, !dbg !11
  br i1 %null_check168, label %bail_out, label %continue140, !dbg !11

continue140:                                      ; preds = %class_fallback138, %divide
  %send_result169 = phi %"struct.rubinius::Object"* [ %as_obj159, %divide ], [ %call_site_execute166, %class_fallback138 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result169, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  %local172 = load %"struct.rubinius::Object"** %20, align 8, !dbg !11, !rbx-classid !13
  store %"struct.rubinius::Object"* %local172, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %cast185 = ptrtoint %"struct.rubinius::Object"* %send_result169 to i64, !dbg !11
  %cast186 = ptrtoint %"struct.rubinius::Object"* %local172 to i64, !dbg !11
  %fixnums_anded187 = and i64 %cast186, 1, !dbg !11
  %masked188 = and i64 %fixnums_anded187, %cast185, !dbg !11
  %is_fixnum189 = icmp eq i64 %masked188, 0, !dbg !11
  br i1 %is_fixnum189, label %class_fallback174, label %push_add181, !dbg !11

divide:                                           ; preds = %continue106
  %ashr154 = ashr i64 %cast145, 1, !dbg !11
  %fixnum.div = sdiv i64 %ashr154, 2, !dbg !11
  %shl157 = shl i64 %fixnum.div, 1, !dbg !11
  %or158 = or i64 %shl157, 1, !dbg !11
  %as_obj159 = inttoptr i64 %or158 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue140, !dbg !11

class_fallback174:                                ; preds = %continue140
  store %"struct.rubinius::Object"* %send_result169, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const204 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), align 16, !dbg !11
  %execute_pos205 = getelementptr %"struct.rubinius::CallSite"* %cache_const204, i64 0, i32 2, !dbg !11
  %execute206 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos205, align 8, !dbg !11
  store i32 29, i32* %8, align 4, !dbg !11
  %call_site_execute207 = call %"struct.rubinius::Object"* %execute206(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const204, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check209 = icmp eq %"struct.rubinius::Object"* %call_site_execute207, null, !dbg !11
  br i1 %null_check209, label %bail_out, label %continue176, !dbg !11

continue176:                                      ; preds = %class_fallback174, %bignum183, %tagnow182
  %send_result210 = phi %"struct.rubinius::Object"* [ %big_value196, %bignum183 ], [ %as_obj199, %tagnow182 ], [ %call_site_execute207, %class_fallback174 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result210, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !11
  %cast224 = ptrtoint %"struct.rubinius::Object"* %send_result210 to i64, !dbg !11
  %masked227 = and i64 %cast224, 1, !dbg !11
  %is_fixnum228 = icmp eq i64 %masked227, 0, !dbg !11
  br i1 %is_fixnum228, label %class_fallback213, label %push_add220, !dbg !11

push_add181:                                      ; preds = %continue140
  %ashr191 = ashr i64 %cast185, 1, !dbg !11
  %ashr193 = ashr i64 %cast186, 1, !dbg !11
  %fixnum.add194 = add i64 %ashr191, %ashr193, !dbg !11
  %fixnum.add194.off = add i64 %fixnum.add194, 4611686018427387903, !dbg !11
  %32 = icmp ult i64 %fixnum.add194.off, 9223372036854775807, !dbg !11
  br i1 %32, label %tagnow182, label %bignum183, !dbg !11

tagnow182:                                        ; preds = %push_add181
  %shl197 = shl i64 %fixnum.add194, 1, !dbg !11
  %or198 = or i64 %shl197, 1, !dbg !11
  %as_obj199 = inttoptr i64 %or198 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue176, !dbg !11

bignum183:                                        ; preds = %push_add181
  %big_value196 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add194) #1, !dbg !11
  br label %continue176, !dbg !11

class_fallback213:                                ; preds = %continue176
  store %"struct.rubinius::Object"* %send_result210, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const243 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), align 16, !dbg !11
  %execute_pos244 = getelementptr %"struct.rubinius::CallSite"* %cache_const243, i64 0, i32 2, !dbg !11
  %execute245 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos244, align 8, !dbg !11
  store i32 33, i32* %8, align 4, !dbg !11
  %call_site_execute246 = call %"struct.rubinius::Object"* %execute245(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const243, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check248 = icmp eq %"struct.rubinius::Object"* %call_site_execute246, null, !dbg !11
  br i1 %null_check248, label %bail_out, label %continue215, !dbg !11

continue215:                                      ; preds = %class_fallback213, %bignum222, %tagnow221
  %send_result249 = phi %"struct.rubinius::Object"* [ %big_value235, %bignum222 ], [ %as_obj238, %tagnow221 ], [ %call_site_execute246, %class_fallback213 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result249, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !11
  %cast259 = ptrtoint %"struct.rubinius::Object"* %send_result249 to i64, !dbg !11
  %masked260 = and i64 %cast259, 3, !dbg !11
  %is_reference = icmp eq i64 %masked260, 0, !dbg !11
  br i1 %is_reference, label %check_class_id, label %continue258, !dbg !11

push_add220:                                      ; preds = %continue176
  %ashr230 = ashr i64 %cast224, 1, !dbg !11
  %fixnum.add233 = add i64 %ashr230, 1, !dbg !11
  %fixnum.add233.off = add i64 %ashr230, 4611686018427387904, !dbg !11
  %33 = icmp ult i64 %fixnum.add233.off, 9223372036854775807, !dbg !11
  br i1 %33, label %tagnow221, label %bignum222, !dbg !11

tagnow221:                                        ; preds = %push_add220
  %shl236 = shl i64 %fixnum.add233, 1, !dbg !11
  %or237 = or i64 %shl236, 1, !dbg !11
  %as_obj238 = inttoptr i64 %or237 to %"struct.rubinius::Object"*, !dbg !11
  br label %continue215, !dbg !11

bignum222:                                        ; preds = %push_add220
  %big_value235 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add233) #1, !dbg !11
  br label %continue215, !dbg !11

continue253:                                      ; preds = %class_fallback251, %continue262
  %send_result280 = phi %"struct.rubinius::Object"* [ %38, %continue262 ], [ %call_site_execute277, %class_fallback251 ], !dbg !11
  store %"struct.rubinius::Object"* %send_result280, %"struct.rubinius::Object"** %stack, align 8, !dbg !11
  br label %return_pad, !dbg !11

return_pad:                                       ; preds = %prologue_check, %bail_out, %continue253, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %send_result280, %continue253 ], [ null, %bail_out ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !11

check_class_id:                                   ; preds = %continue215
  %class_pos = getelementptr %"struct.rubinius::Object"* %send_result249, i64 0, i32 0, i32 1, !dbg !11
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !11
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !11
  %class_id = load i32* %class_id_pos, align 4, !dbg !11
  %check_class_id261 = icmp eq i32 %class_id, 77, !dbg !11
  br i1 %check_class_id261, label %correct_class, label %continue258, !dbg !11

correct_class:                                    ; preds = %check_class_id
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %send_result249, i64 1, !dbg !11
  %34 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !11
  %farg = load double* %34, align 8, !dbg !11
  br label %continue262, !dbg !11

continue258:                                      ; preds = %check_class_id, %continue215
  %masked264 = and i64 %cast259, 1, !dbg !11
  %is_fixnum265 = icmp eq i64 %masked264, 0, !dbg !11
  br i1 %is_fixnum265, label %class_fallback251, label %guarded_body, !dbg !11

guarded_body:                                     ; preds = %continue258
  %ashr267 = ashr i64 %cast259, 1, !dbg !11
  %35 = sitofp i64 %ashr267 to double, !dbg !11
  br label %continue262, !dbg !11

continue262:                                      ; preds = %guarded_body, %correct_class
  %rhs = phi double [ %farg, %correct_class ], [ %35, %guarded_body ], !dbg !11
  %stack_load269 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !11, !rbx-classid !12
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load269, i64 1, !dbg !11
  %36 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !11
  %fself = load double* %36, align 8, !dbg !11
  %float.div = fdiv double %fself, %rhs, !dbg !11
  %result270 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #1, !dbg !11, !rbx-classid !12
  %37 = getelementptr %"struct.rubinius::Float"* %result270, i64 0, i32 1, !dbg !11
  store double %float.div, double* %37, align 8, !dbg !11
  %38 = getelementptr inbounds %"struct.rubinius::Float"* %result270, i64 0, i32 0, i32 0, !dbg !11
  br label %continue253, !dbg !11

class_fallback251:                                ; preds = %continue258
  %stack_load272 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !11, !rbx-classid !12
  store %"struct.rubinius::Object"* %stack_load272, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !11
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !11
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !11
  store i32 1, i32* %out_args_total, align 8, !dbg !11
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !11
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !11
  %cache_const274 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), align 8, !dbg !11
  %execute_pos275 = getelementptr %"struct.rubinius::CallSite"* %cache_const274, i64 0, i32 2, !dbg !11
  %execute276 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos275, align 8, !dbg !11
  store i32 36, i32* %8, align 4, !dbg !11
  %call_site_execute277 = call %"struct.rubinius::Object"* %execute276(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const274, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !11
  %null_check279 = icmp eq %"struct.rubinius::Object"* %call_site_execute277, null, !dbg !11
  br i1 %null_check279, label %bail_out, label %continue253, !dbg !11

prologue_check:                                   ; preds = %bottom
  %ci = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !11
  %39 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !11
  br i1 %39, label %return_pad, label %prologue_check.method_body_crit_edge, !dbg !11

prologue_check.method_body_crit_edge:             ; preds = %prologue_check
  %local.pre = load %"struct.rubinius::Object"** %20, align 8, !dbg !11
  %local9.pre = load %"struct.rubinius::Object"** %21, align 8, !dbg !11
  br label %method_body, !dbg !11
}

[[[ JIT Machine Code: _X_Object#eval_A@3 ]]]
0x7f95d65c79c0  push %rbp               
0x7f95d65c79c1  mov %rsp, %rbp          
0x7f95d65c79c4  push %r15               
0x7f95d65c79c6  push %r14               
0x7f95d65c79c8  push %r13               
0x7f95d65c79ca  push %r12               
0x7f95d65c79cc  push %rbx               
0x7f95d65c79cd  subq $0xf8, %rsp        
0x7f95d65c79d4  mov %rdi, %r13          
0x7f95d65c79d7  cmp $0x2, 0x18(%r8)     
0x7f95d65c79dc  jnz 0x1d5                ; 0x7f95d65c7b95
0x7f95d65c79e2  mov %rsi, -0xd0(%rbp)   
0x7f95d65c79e9  mov %r8, -0x90(%rbp)    
0x7f95d65c79f0  movq $0x0, -0xc0(%rbp)  
0x7f95d65c79fb  mov %rdx, -0xb8(%rbp)   
0x7f95d65c7a02  mov 0xa0(%rdx), %rax    
0x7f95d65c7a09  mov %rax, -0xc8(%rbp)   
0x7f95d65c7a10  mov $0x28, -0xb0(%rbp)  
0x7f95d65c7a1a  mov $0x0, -0xac(%rbp)   
0x7f95d65c7a24  lea -0x110(%rbp), %rax  
0x7f95d65c7a2b  mov %rax, -0x98(%rbp)   
0x7f95d65c7a32  mov $0x7f95bc03fec0, %rax
0x7f95d65c7a3c  mov %rax, -0xa8(%rbp)   
0x7f95d65c7a43  movq $0xffffffb8, %rax  
0x7f95d65c7a4a  mov $0x6, %esi          
0x7f95d65c7a4f  lea -0xd0(%rbp), %rdx   
0x7f95d65c7a56  mov %rdx, %rdi          
0x7f95d65c7a59  sub %rax, %rdi          
0x7f95d65c7a5c  movq $0x1a, (%rdi)      
0x7f95d65c7a63  addq $0xf8, %rax        
0x7f95d65c7a67  dec %esi                
0x7f95d65c7a69  jnz 0x96                 ; 0x7f95d65c7a56
0x7f95d65c7a6f  movq $0x0, -0x110(%rbp) 
0x7f95d65c7a7a  mov 0x8(%r8), %rax      
0x7f95d65c7a7e  mov %rax, -0x100(%rbp)  
0x7f95d65c7a85  mov %rcx, -0xf0(%rbp)   
0x7f95d65c7a8c  mov 0x10(%r8), %rax     
0x7f95d65c7a90  mov %rax, -0xf8(%rbp)   
0x7f95d65c7a97  movq $0x0, -0x108(%rbp) 
0x7f95d65c7aa2  movq $0x1a, -0xe8(%rbp) 
0x7f95d65c7aad  movq $0x1a, -0xe0(%rbp) 
0x7f95d65c7ab8  movq $0x1a, -0xd8(%rbp) 
0x7f95d65c7ac3  mov 0x20(%r8), %rcx     
0x7f95d65c7ac7  mov (%rcx), %rax        
0x7f95d65c7aca  mov %rax, -0xe0(%rbp)   
0x7f95d65c7ad1  mov 0x8(%rcx), %rsi     
0x7f95d65c7ad5  mov %rsi, -0xd8(%rbp)   
0x7f95d65c7adc  mov 0x8(%r13), %rcx     
0x7f95d65c7ae0  mov 0x15824fe, %bl      
0x7f95d65c7ae7  or 0x16(%rcx), %bl      
0x7f95d65c7aea  jnz 0x13a                ; 0x7f95d65c7afa
0x7f95d65c7af0  cmp 0x8(%rcx), %rdx     
0x7f95d65c7af4  jae 0x16c                ; 0x7f95d65c7b2c
0x7f95d65c7afa  mov $0x762f80, %rax      ; rbx_prologue_check
0x7f95d65c7b04  lea -0xd0(%rbp), %rsi   
0x7f95d65c7b0b  mov %r13, %rdi          
0x7f95d65c7b0e  callq *%rax             
0x7f95d65c7b10  mov %rax, %rcx          
0x7f95d65c7b13  xor %eax, %eax          
0x7f95d65c7b15  test %rcx, %rcx         
0x7f95d65c7b18  jz 0x790                 ; 0x7f95d65c8150
0x7f95d65c7b1e  mov -0xe0(%rbp), %rax   
0x7f95d65c7b25  mov -0xd8(%rbp), %rsi   
0x7f95d65c7b2c  mov -0xb8(%rbp), %rcx   
0x7f95d65c7b33  mov 0xc0(%rcx), %rcx    
0x7f95d65c7b3a  mov 0x20(%rcx), %rcx    
0x7f95d65c7b3e  mov %rcx, -0x88(%rbp)   
0x7f95d65c7b45  lea -0x80(%rbp), %r14   
0x7f95d65c7b49  mov %rax, -0x80(%rbp)   
0x7f95d65c7b4d  lea -0x78(%rbp), %r15   
0x7f95d65c7b51  mov %rsi, -0x78(%rbp)   
0x7f95d65c7b55  mov %esi, %ecx          
0x7f95d65c7b57  and %eax, %ecx          
0x7f95d65c7b59  testb $0x1, %cl         
0x7f95d65c7b5c  jz 0x1f1                 ; 0x7f95d65c7bb1
0x7f95d65c7b62  sarq $0x1, %rax         
0x7f95d65c7b65  sarq $0x1, %rsi         
0x7f95d65c7b68  add %rax, %rsi          
0x7f95d65c7b6b  mov $0x3fffffffffffffff, %rax
0x7f95d65c7b75  add %rsi, %rax          
0x7f95d65c7b78  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c7b82  cmp %rcx, %rax          
0x7f95d65c7b85  ja 0x24c                 ; 0x7f95d65c7c0c
0x7f95d65c7b8b  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7b90  jmp 0x25b                ; 0x7f95d65c7c1b
0x7f95d65c7b95  mov $0x760d50, %rax      ; rbx_arg_error
0x7f95d65c7b9f  mov $0x2, %ecx          
0x7f95d65c7ba4  mov %r13, %rdi          
0x7f95d65c7ba7  mov %r8, %rdx           
0x7f95d65c7baa  callq *%rax             
0x7f95d65c7bac  jmp 0x790                ; 0x7f95d65c8150
0x7f95d65c7bb1  mov %rax, -0x50(%rbp)   
0x7f95d65c7bb5  movq $0x55e, -0x58(%rbp)
0x7f95d65c7bbd  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7bc5  mov $0x1, -0x40(%rbp)   
0x7f95d65c7bcc  movq $0x0, -0x30(%rbp)  
0x7f95d65c7bd4  mov %r15, -0x38(%rbp)   
0x7f95d65c7bd8  mov 0x185d0d8, %rsi     
0x7f95d65c7be0  mov 0x20(%rsi), %rax    
0x7f95d65c7be4  mov $0x6, -0xac(%rbp)   
0x7f95d65c7bee  lea -0xd0(%rbp), %rdx   
0x7f95d65c7bf5  lea -0x58(%rbp), %rcx   
0x7f95d65c7bf9  mov %r13, %rdi          
0x7f95d65c7bfc  callq *%rax             
0x7f95d65c7bfe  test %rax, %rax         
0x7f95d65c7c01  jnz 0x25b                ; 0x7f95d65c7c1b
0x7f95d65c7c07  jmp 0x75e                ; 0x7f95d65c811e
0x7f95d65c7c0c  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7c16  mov %r13, %rdi          
0x7f95d65c7c19  callq *%rax             
0x7f95d65c7c1b  mov %rax, -0x80(%rbp)   
0x7f95d65c7c1f  mov -0xe0(%rbp), %rax   
0x7f95d65c7c26  mov %rax, -0x78(%rbp)   
0x7f95d65c7c2a  mov -0xd8(%rbp), %rsi   
0x7f95d65c7c31  lea -0x70(%rbp), %r12   
0x7f95d65c7c35  mov %rsi, -0x70(%rbp)   
0x7f95d65c7c39  mov %esi, %ecx          
0x7f95d65c7c3b  and %eax, %ecx          
0x7f95d65c7c3d  testb $0x1, %cl         
0x7f95d65c7c40  jz 0x2b9                 ; 0x7f95d65c7c79
0x7f95d65c7c46  sarq $0x1, %rax         
0x7f95d65c7c49  sarq $0x1, %rsi         
0x7f95d65c7c4c  add %rax, %rsi          
0x7f95d65c7c4f  mov $0x3fffffffffffffff, %rax
0x7f95d65c7c59  add %rsi, %rax          
0x7f95d65c7c5c  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c7c66  cmp %rcx, %rax          
0x7f95d65c7c69  ja 0x314                 ; 0x7f95d65c7cd4
0x7f95d65c7c6f  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7c74  jmp 0x323                ; 0x7f95d65c7ce3
0x7f95d65c7c79  mov %rax, -0x50(%rbp)   
0x7f95d65c7c7d  movq $0x55e, -0x58(%rbp)
0x7f95d65c7c85  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7c8d  mov $0x1, -0x40(%rbp)   
0x7f95d65c7c94  movq $0x0, -0x30(%rbp)  
0x7f95d65c7c9c  mov %r12, -0x38(%rbp)   
0x7f95d65c7ca0  mov 0x185d110, %rsi     
0x7f95d65c7ca8  mov 0x20(%rsi), %rax    
0x7f95d65c7cac  mov $0xd, -0xac(%rbp)   
0x7f95d65c7cb6  lea -0xd0(%rbp), %rdx   
0x7f95d65c7cbd  lea -0x58(%rbp), %rcx   
0x7f95d65c7cc1  mov %r13, %rdi          
0x7f95d65c7cc4  callq *%rax             
0x7f95d65c7cc6  test %rax, %rax         
0x7f95d65c7cc9  jnz 0x323                ; 0x7f95d65c7ce3
0x7f95d65c7ccf  jmp 0x75e                ; 0x7f95d65c811e
0x7f95d65c7cd4  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7cde  mov %r13, %rdi          
0x7f95d65c7ce1  callq *%rax             
0x7f95d65c7ce3  mov %rax, -0x78(%rbp)   
0x7f95d65c7ce7  movq $0x3, -0x70(%rbp)  
0x7f95d65c7cef  testb $0x1, %al         
0x7f95d65c7cf2  jz 0x369                 ; 0x7f95d65c7d29
0x7f95d65c7cf8  sarq $0x1, %rax         
0x7f95d65c7cfb  mov $0x4000000000000000, %rcx
0x7f95d65c7d05  add %rax, %rcx          
0x7f95d65c7d08  lea 0x1(%rax), %rsi     
0x7f95d65c7d0c  mov $0x7ffffffffffffffe, %rax
0x7f95d65c7d16  cmp %rax, %rcx          
0x7f95d65c7d19  ja 0x3c4                 ; 0x7f95d65c7d84
0x7f95d65c7d1f  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7d24  jmp 0x3d3                ; 0x7f95d65c7d93
0x7f95d65c7d29  mov %rax, -0x50(%rbp)   
0x7f95d65c7d2d  movq $0x55e, -0x58(%rbp)
0x7f95d65c7d35  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7d3d  mov $0x1, -0x40(%rbp)   
0x7f95d65c7d44  movq $0x0, -0x30(%rbp)  
0x7f95d65c7d4c  mov %r12, -0x38(%rbp)   
0x7f95d65c7d50  mov 0x185d130, %rsi     
0x7f95d65c7d58  mov 0x20(%rsi), %rax    
0x7f95d65c7d5c  mov $0x11, -0xac(%rbp)  
0x7f95d65c7d66  lea -0xd0(%rbp), %rdx   
0x7f95d65c7d6d  lea -0x58(%rbp), %rcx   
0x7f95d65c7d71  mov %r13, %rdi          
0x7f95d65c7d74  callq *%rax             
0x7f95d65c7d76  test %rax, %rax         
0x7f95d65c7d79  jnz 0x3d3                ; 0x7f95d65c7d93
0x7f95d65c7d7f  jmp 0x75e                ; 0x7f95d65c811e
0x7f95d65c7d84  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7d8e  mov %r13, %rdi          
0x7f95d65c7d91  callq *%rax             
0x7f95d65c7d93  mov %rax, -0x78(%rbp)   
0x7f95d65c7d97  mov -0x80(%rbp), %rcx   
0x7f95d65c7d9b  mov %ecx, %edx          
0x7f95d65c7d9d  and %eax, %edx          
0x7f95d65c7d9f  testb $0x1, %dl         
0x7f95d65c7da2  jz 0x42b                 ; 0x7f95d65c7deb
0x7f95d65c7da8  mov %rcx, %rdx          
0x7f95d65c7dab  sarq $0x1, %rdx         
0x7f95d65c7dae  sarq $0x1, %rax         
0x7f95d65c7db1  imul %rdx, %rax         
0x7f95d65c7db5  seto %dl                
0x7f95d65c7db8  mov $0x3fffffffffffffff, %rsi
0x7f95d65c7dc2  add %rax, %rsi          
0x7f95d65c7dc5  mov $0x7ffffffffffffffe, %rdi
0x7f95d65c7dcf  cmp %rdi, %rsi          
0x7f95d65c7dd2  ja 0x42b                 ; 0x7f95d65c7deb
0x7f95d65c7dd8  xorb $0x1, %dl          
0x7f95d65c7ddb  jz 0x42b                 ; 0x7f95d65c7deb
0x7f95d65c7de1  lea 0x1(%rax,%rax), %rax
0x7f95d65c7de6  jmp 0x481                ; 0x7f95d65c7e41
0x7f95d65c7deb  mov %rcx, -0x50(%rbp)   
0x7f95d65c7def  movq $0x3cc6, -0x58(%rbp)
0x7f95d65c7df7  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7dff  mov $0x1, -0x40(%rbp)   
0x7f95d65c7e06  movq $0x0, -0x30(%rbp)  
0x7f95d65c7e0e  mov %r15, -0x38(%rbp)   
0x7f95d65c7e12  mov 0x185d148, %rsi     
0x7f95d65c7e1a  mov 0x20(%rsi), %rax    
0x7f95d65c7e1e  mov $0x14, -0xac(%rbp)  
0x7f95d65c7e28  lea -0xd0(%rbp), %rdx   
0x7f95d65c7e2f  lea -0x58(%rbp), %rcx   
0x7f95d65c7e33  mov %r13, %rdi          
0x7f95d65c7e36  callq *%rax             
0x7f95d65c7e38  test %rax, %rax         
0x7f95d65c7e3b  jz 0x75e                 ; 0x7f95d65c811e
0x7f95d65c7e41  mov %rax, -0x80(%rbp)   
0x7f95d65c7e45  movq $0x5, -0x78(%rbp)  
0x7f95d65c7e4d  testb $0x1, %al         
0x7f95d65c7e50  jz 0x4c7                 ; 0x7f95d65c7e87
0x7f95d65c7e56  mov $0x8000000000000000, %rcx
0x7f95d65c7e60  and %rax, %rcx          
0x7f95d65c7e63  orq $0x1, %rcx          
0x7f95d65c7e67  cmpq $0x1, %rcx         
0x7f95d65c7e6b  jnz 0x4c7                ; 0x7f95d65c7e87
0x7f95d65c7e71  mov %rax, %rcx          
0x7f95d65c7e74  sarq $0x1, %rcx         
0x7f95d65c7e77  shrq $0x3f, %rax        
0x7f95d65c7e7b  add %rcx, %rax          
0x7f95d65c7e7e  orq $0x1, %rax          
0x7f95d65c7e82  jmp 0x51d                ; 0x7f95d65c7edd
0x7f95d65c7e87  mov %rax, -0x50(%rbp)   
0x7f95d65c7e8b  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c7e93  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7e9b  mov $0x1, -0x40(%rbp)   
0x7f95d65c7ea2  movq $0x0, -0x30(%rbp)  
0x7f95d65c7eaa  mov %r15, -0x38(%rbp)   
0x7f95d65c7eae  mov 0x185d168, %rsi     
0x7f95d65c7eb6  mov 0x20(%rsi), %rax    
0x7f95d65c7eba  mov $0x18, -0xac(%rbp)  
0x7f95d65c7ec4  lea -0xd0(%rbp), %rdx   
0x7f95d65c7ecb  lea -0x58(%rbp), %rcx   
0x7f95d65c7ecf  mov %r13, %rdi          
0x7f95d65c7ed2  callq *%rax             
0x7f95d65c7ed4  test %rax, %rax         
0x7f95d65c7ed7  jz 0x75e                 ; 0x7f95d65c811e
0x7f95d65c7edd  mov %rax, -0x80(%rbp)   
0x7f95d65c7ee1  mov -0xe0(%rbp), %rsi   
0x7f95d65c7ee8  mov %rsi, -0x78(%rbp)   
0x7f95d65c7eec  mov %esi, %ecx          
0x7f95d65c7eee  and %eax, %ecx          
0x7f95d65c7ef0  testb $0x1, %cl         
0x7f95d65c7ef3  jz 0x56c                 ; 0x7f95d65c7f2c
0x7f95d65c7ef9  sarq $0x1, %rax         
0x7f95d65c7efc  sarq $0x1, %rsi         
0x7f95d65c7eff  add %rax, %rsi          
0x7f95d65c7f02  mov $0x3fffffffffffffff, %rax
0x7f95d65c7f0c  add %rsi, %rax          
0x7f95d65c7f0f  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c7f19  cmp %rcx, %rax          
0x7f95d65c7f1c  ja 0x5c7                 ; 0x7f95d65c7f87
0x7f95d65c7f22  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7f27  jmp 0x5d6                ; 0x7f95d65c7f96
0x7f95d65c7f2c  mov %rax, -0x50(%rbp)   
0x7f95d65c7f30  movq $0x55e, -0x58(%rbp)
0x7f95d65c7f38  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7f40  mov $0x1, -0x40(%rbp)   
0x7f95d65c7f47  movq $0x0, -0x30(%rbp)  
0x7f95d65c7f4f  mov %r15, -0x38(%rbp)   
0x7f95d65c7f53  mov 0x185d190, %rsi     
0x7f95d65c7f5b  mov 0x20(%rsi), %rax    
0x7f95d65c7f5f  mov $0x1d, -0xac(%rbp)  
0x7f95d65c7f69  lea -0xd0(%rbp), %rdx   
0x7f95d65c7f70  lea -0x58(%rbp), %rcx   
0x7f95d65c7f74  mov %r13, %rdi          
0x7f95d65c7f77  callq *%rax             
0x7f95d65c7f79  test %rax, %rax         
0x7f95d65c7f7c  jnz 0x5d6                ; 0x7f95d65c7f96
0x7f95d65c7f82  jmp 0x75e                ; 0x7f95d65c811e
0x7f95d65c7f87  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c7f91  mov %r13, %rdi          
0x7f95d65c7f94  callq *%rax             
0x7f95d65c7f96  mov %rax, -0x80(%rbp)   
0x7f95d65c7f9a  movq $0x3, -0x78(%rbp)  
0x7f95d65c7fa2  testb $0x1, %al         
0x7f95d65c7fa5  jz 0x61c                 ; 0x7f95d65c7fdc
0x7f95d65c7fab  sarq $0x1, %rax         
0x7f95d65c7fae  mov $0x4000000000000000, %rcx
0x7f95d65c7fb8  add %rax, %rcx          
0x7f95d65c7fbb  lea 0x1(%rax), %rsi     
0x7f95d65c7fbf  mov $0x7ffffffffffffffe, %rax
0x7f95d65c7fc9  cmp %rax, %rcx          
0x7f95d65c7fcc  ja 0x677                 ; 0x7f95d65c8037
0x7f95d65c7fd2  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c7fd7  jmp 0x686                ; 0x7f95d65c8046
0x7f95d65c7fdc  mov %rax, -0x50(%rbp)   
0x7f95d65c7fe0  movq $0x55e, -0x58(%rbp)
0x7f95d65c7fe8  movq $0x1a, -0x48(%rbp) 
0x7f95d65c7ff0  mov $0x1, -0x40(%rbp)   
0x7f95d65c7ff7  movq $0x0, -0x30(%rbp)  
0x7f95d65c7fff  mov %r15, -0x38(%rbp)   
0x7f95d65c8003  mov 0x185d1b0, %rsi     
0x7f95d65c800b  mov 0x20(%rsi), %rax    
0x7f95d65c800f  mov $0x21, -0xac(%rbp)  
0x7f95d65c8019  lea -0xd0(%rbp), %rdx   
0x7f95d65c8020  lea -0x58(%rbp), %rcx   
0x7f95d65c8024  mov %r13, %rdi          
0x7f95d65c8027  callq *%rax             
0x7f95d65c8029  test %rax, %rax         
0x7f95d65c802c  jnz 0x686                ; 0x7f95d65c8046
0x7f95d65c8032  jmp 0x75e                ; 0x7f95d65c811e
0x7f95d65c8037  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c8041  mov %r13, %rdi          
0x7f95d65c8044  callq *%rax             
0x7f95d65c8046  mov %rax, -0x80(%rbp)   
0x7f95d65c804a  testb $0x3, %al         
0x7f95d65c804d  jnz 0x6ab                ; 0x7f95d65c806b
0x7f95d65c8053  mov 0x8(%rax), %rcx     
0x7f95d65c8057  cmp $0x4d, 0x70(%rcx)   
0x7f95d65c805b  jnz 0x6ab                ; 0x7f95d65c806b
0x7f95d65c8061  invalid                 
0x7f95d65c8062  sti                     
0x7f95d65c8063  adc %al, 0x18(%rax)     
0x7f95d65c8066  jmp 0x6bc                ; 0x7f95d65c807c
0x7f95d65c806b  testb $0x1, %al         
0x7f95d65c806e  jz 0x6f5                 ; 0x7f95d65c80b5
0x7f95d65c8074  sarq $0x1, %rax         
0x7f95d65c8077  invalid                 
0x7f95d65c8078  loope 0x6b5              ; 0x7f95d65c8175
0x7f95d65c807a  sub %al, %al            
0x7f95d65c807c  mov -0x88(%rbp), %rax   
0x7f95d65c8083  invalid                 
0x7f95d65c8084  sti                     
0x7f95d65c8085  adc %cl, 0x18(%rax)     
0x7f95d65c8088  invalid                 
0x7f95d65c8089  rep pop %rsi            
0x7f95d65c808b  rolb $0xfb, %ch         
0x7f95d65c808e  adc %eax, -0x118(%rbp)  
0x7f95d65c8094  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c809e  mov %r13, %rdi          
0x7f95d65c80a1  callq *%rax             
0x7f95d65c80a3  invalid                 
0x7f95d65c80a4  sti                     
0x7f95d65c80a5  adc %al, -0x118(%rbp)   
0x7f95d65c80ab  invalid                 
0x7f95d65c80ac  sti                     
0x7f95d65c80ad  adc %eax, 0x18(%rax)    
0x7f95d65c80b0  jmp 0x752                ; 0x7f95d65c8112
0x7f95d65c80b5  mov -0x88(%rbp), %rax   
0x7f95d65c80bc  mov %rax, -0x50(%rbp)   
0x7f95d65c80c0  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c80c8  movq $0x1a, -0x48(%rbp) 
0x7f95d65c80d0  mov $0x1, -0x40(%rbp)   
0x7f95d65c80d7  movq $0x0, -0x30(%rbp)  
0x7f95d65c80df  mov %r14, -0x38(%rbp)   
0x7f95d65c80e3  mov 0x185d1c8, %rsi     
0x7f95d65c80eb  mov 0x20(%rsi), %rax    
0x7f95d65c80ef  mov $0x24, -0xac(%rbp)  
0x7f95d65c80f9  lea -0xd0(%rbp), %rdx   
0x7f95d65c8100  lea -0x58(%rbp), %rcx   
0x7f95d65c8104  mov %r13, %rdi          
0x7f95d65c8107  callq *%rax             
0x7f95d65c8109  test %rax, %rax         
0x7f95d65c810c  jz 0x75e                 ; 0x7f95d65c811e
0x7f95d65c8112  mov %rax, -0x88(%rbp)   
0x7f95d65c8119  jmp 0x790                ; 0x7f95d65c8150
0x7f95d65c811e  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c8128  lea -0xd0(%rbp), %rsi   
0x7f95d65c812f  mov %r13, %rdi          
0x7f95d65c8132  callq *%rax             
0x7f95d65c8134  mov %al, %cl            
0x7f95d65c8136  xor %eax, %eax          
0x7f95d65c8138  testb $0x1, %cl         
0x7f95d65c813b  jz 0x790                 ; 0x7f95d65c8150
0x7f95d65c8141  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c814b  mov %r13, %rdi          
0x7f95d65c814e  callq *%rax             
0x7f95d65c8150  addq $0xf8, %rsp        
0x7f95d65c8157  pop %rbx                
0x7f95d65c8158  pop %r12                
0x7f95d65c815a  pop %r13                
0x7f95d65c815c  pop %r14                
0x7f95d65c815e  pop %r15                
0x7f95d65c8160  pop %rbp                
0x7f95d65c8161  ret                     
[[[ LLVM Simple IR: _X_Object#vector_times_array_transposed@4 ]]]

define %"struct.rubinius::Object"* @"_X_Object#vector_times_array_transposed@4"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %counter_alloca = alloca i32, !dbg !17
  %out_args = alloca %"struct.rubinius::Arguments", !dbg !17
  %counter2 = alloca i32, !dbg !17
  %valid_flag = alloca i1, !dbg !17
  %cfstk = alloca %"struct.rubinius::Object"*, i32 18, !dbg !17
  %var_mem = alloca %"struct.rubinius::Object"*, i32 11, !dbg !17
  %call_frame = bitcast %"struct.rubinius::Object"** %cfstk to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr %"struct.rubinius::Object"** %cfstk, i32 9, !dbg !17
  %vars = bitcast %"struct.rubinius::Object"** %var_mem to %"struct.rubinius::StackVariables"*, !dbg !17
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 3, !dbg !17
  %arg.total = load i32* %total_pos, !dbg !17
  %arg_cmp = icmp ne i32 %arg.total, 1, !dbg !17
  %cfstk167 = alloca %"struct.rubinius::Object"*, i32 15
  %var_mem170 = alloca %"struct.rubinius::Object"*, i32 8
  %cfstk762 = alloca %"struct.rubinius::Object"*, i32 13
  %var_mem765 = alloca %"struct.rubinius::Object"*, i32 7
  br i1 %arg_cmp, label %arg_error, label %import_args, !dbg !17

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !17
  br label %return_pad, !dbg !17

import_args:                                      ; preds = %entry
  %0 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 3, !dbg !17
  %compiled_code = bitcast %"struct.rubinius::Executable"* %exec to %"struct.rubinius::CompiledCode"*, !dbg !17
  %1 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::CallFrame"** %1, !dbg !17
  %2 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 9, !dbg !17
  store %"struct.rubinius::Arguments"* %args, %"struct.rubinius::Arguments"** %2, !dbg !17
  %3 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 2, !dbg !17
  store i8* null, i8** %3, !dbg !17
  store %"struct.rubinius::CompiledCode"* %compiled_code, %"struct.rubinius::CompiledCode"** %0, !dbg !17
  %constant_scope_pos = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code, i32 0, i32 13, !dbg !17
  %constant_scope = load %"struct.rubinius::ConstantScope"** %constant_scope_pos, !dbg !17
  %4 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::ConstantScope"* %constant_scope, %"struct.rubinius::ConstantScope"** %4, !dbg !17
  %5 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 4, !dbg !17
  store i32 40, i32* %5, !dbg !17
  %6 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  store i32 0, i32* %6, !dbg !17
  %7 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 8, !dbg !17
  store %"struct.rubinius::StackVariables"* %vars, %"struct.rubinius::StackVariables"** %7, !dbg !17
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 6, !dbg !17
  store i8* inttoptr (i64 140281080991024 to i8*), i8** %8, !dbg !17
  store i32 0, i32* %counter_alloca, !dbg !17
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter = load i32* %counter_alloca, !dbg !17
  %stack_pos = getelementptr %"struct.rubinius::Object"** %stack, i32 %counter, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, !dbg !17
  %added = add i32 %counter, 1, !dbg !17
  store i32 %added, i32* %counter_alloca, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %9 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 0, !dbg !17
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %9, !dbg !17
  %10 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 1, !dbg !17
  %args.recv = load %"struct.rubinius::Object"** %10, !dbg !17, !rbx-classid !18
  %11 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !17
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %11, !dbg !17
  %12 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 4, !dbg !17
  store %"struct.rubinius::Module"* %mod, %"struct.rubinius::Module"** %12, !dbg !17
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 2, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %13, !dbg !17
  %14 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %14, !dbg !17
  %15 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 1, !dbg !17
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %15, !dbg !17
  %16 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %16, !dbg !17
  %local_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos, !dbg !17
  %local_pos1 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos1, !dbg !17
  %local_pos2 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos2, !dbg !17
  %local_pos3 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos3, !dbg !17
  %local_pos4 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos4, !dbg !17
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i32 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, !dbg !17
  %arg_val_offset = getelementptr %"struct.rubinius::Object"** %arg_ary, i32 0, !dbg !17
  %arg_val = load %"struct.rubinius::Object"** %arg_val_offset, !dbg !17
  %var_pos = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %var_pos, !dbg !17
  %17 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !19
  %vm_jit903 = load %"struct.rubinius::VMJIT"** %17, !dbg !19
  %18 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i32 0, i32 1, !dbg !19
  %stack_limit = load i64* %18, !dbg !19
  %stack_end = ptrtoint %"struct.rubinius::CallFrame"* %call_frame to i64, !dbg !19
  %19 = icmp ult i64 %stack_end, %stack_limit, !dbg !19
  %20 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i32 0, i32 5, !dbg !19
  %check_interrupts904 = load i8* %20, !dbg !19
  %check_global_interrupts905 = load i8* inttoptr (i64 22553854 to i8*), !dbg !19
  %has_interrupts = or i8 %check_interrupts904, %check_global_interrupts905, !dbg !19
  %needs_interrupts906 = icmp ne i8 %has_interrupts, 0, !dbg !19
  %needs_check = or i1 %needs_interrupts906, %19, !dbg !19
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !19

bail_out:                                         ; preds = %interrupts884, %class_fallback842, %return_pad754, %interrupts, %class_fallback681, %class_fallback584, %class_fallback524, %continue152, %return_pad158, %class_fallback109, %use_call96, %class_fallback, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %ret_null, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

ret_null:                                         ; preds = %bail_out
  br label %return_pad, !dbg !17

method_body:                                      ; preds = %prologue_check, %bottom
  %ip_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 5, !dbg !17
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !17
  %stack_pos5 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %constant = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 0, %"struct.rubinius::Object"** %stack_pos5), !dbg !20, !rbx-classid !21
  %stack_pos6 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos6, !dbg !20
  %stack_pos7 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, !dbg !20
  %stack_pos8 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %21 = getelementptr %"struct.rubinius::Object"** %stack_pos8, i32 0, !dbg !20
  %22 = load %"struct.rubinius::Object"** %21, !dbg !20
  %stack_pos9 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %22, %"struct.rubinius::Object"** %stack_pos9, !dbg !20
  %23 = getelementptr %"struct.rubinius::Object"** %stack_pos8, i32 1, !dbg !20
  %24 = load %"struct.rubinius::Object"** %23, !dbg !20
  %stack_pos10 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !20
  store %"struct.rubinius::Object"* %24, %"struct.rubinius::Object"** %stack_pos10, !dbg !20
  %stack_pos11 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %constant12 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos11), !dbg !20, !rbx-classid !21
  %stack_pos13 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %constant12, %"struct.rubinius::Object"** %stack_pos13, !dbg !20
  %stack_pos14 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %stack_load = load %"struct.rubinius::Object"** %stack_pos14, !dbg !20, !rbx-classid !21
  %stack_pos15 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_load16 = load %"struct.rubinius::Object"** %stack_pos15, !dbg !20, !rbx-classid !22
  %stack_pos17 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %stack_load16, %"struct.rubinius::Object"** %stack_pos17, !dbg !20
  %stack_pos18 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  %stack_load19 = load %"struct.rubinius::Object"** %stack_pos18, !dbg !20, !rbx-classid !21
  %stack_pos20 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %stack_pos20, !dbg !20
  %stack_pos21 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !20
  store %"struct.rubinius::Object"* %stack_load, %"struct.rubinius::Object"** %stack_pos21, !dbg !20
  %stack_pos22 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_pos23 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %rotate = load %"struct.rubinius::Object"** %stack_pos22, !dbg !20
  %rotate24 = load %"struct.rubinius::Object"** %stack_pos23, !dbg !20
  %stack_pos25 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  store %"struct.rubinius::Object"* %rotate24, %"struct.rubinius::Object"** %stack_pos25, !dbg !20
  %stack_pos26 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  store %"struct.rubinius::Object"* %rotate, %"struct.rubinius::Object"** %stack_pos26, !dbg !20
  %local_pos27 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !20
  %stack_pos28 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !20
  %stack_load29 = load %"struct.rubinius::Object"** %stack_pos28, !dbg !20
  store %"struct.rubinius::Object"* %stack_load29, %"struct.rubinius::Object"** %local_pos27, !dbg !20
  %local_pos30 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !20
  %stack_pos31 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !20
  %stack_load32 = load %"struct.rubinius::Object"** %stack_pos31, !dbg !20
  store %"struct.rubinius::Object"* %stack_load32, %"struct.rubinius::Object"** %local_pos30, !dbg !20
  br label %ip18, !dbg !20

ip18:                                             ; preds = %done885, %method_body
  %local_pos33 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !23
  %local = load %"struct.rubinius::Object"** %local_pos33, !dbg !23, !rbx-classid !24
  %stack_pos34 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %local, %"struct.rubinius::Object"** %stack_pos34, !dbg !23
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), !dbg !23
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 25207576 to %"struct.rubinius::ConstantCache"**), !dbg !23
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 4, !dbg !23
  %constant_scope35 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, !dbg !23
  %scope_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !23
  %frame_scope = load %"struct.rubinius::ConstantScope"** %scope_pos, !dbg !23
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope35, %frame_scope, !dbg !23
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !23

check_serial:                                     ; preds = %ip18
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 7, !dbg !23
  %serial = load i32* %serial_pos, !dbg !23
  %use_cache36 = icmp eq i32 %global_serial, %serial, !dbg !23
  br i1 %use_cache36, label %use_cache, label %use_call, !dbg !23

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i32 0, i32 2, !dbg !23
  %cached_value = load %"struct.rubinius::Object"** %value_pos, !dbg !23
  br label %continue, !dbg !23

use_call:                                         ; preds = %check_serial, %ip18
  store i32 20, i32* %ip_pos, !dbg !23
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 25207576 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !23
  br i1 %null_check, label %bail_out, label %check_active, !dbg !23

continue:                                         ; preds = %continue37, %use_cache
  %constant38 = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %continue37 ], !dbg !23, !rbx-classid !25
  %stack_pos39 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"* %constant38, %"struct.rubinius::Object"** %stack_pos39, !dbg !23
  %stack_pos41 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load42 = load %"struct.rubinius::Object"** %stack_pos41, !dbg !23, !rbx-classid !24
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load42 to i64, !dbg !23
  %stack_pos43 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  %stack_load44 = load %"struct.rubinius::Object"** %stack_pos43, !dbg !23, !rbx-classid !25
  %cast45 = ptrtoint %"struct.rubinius::Object"* %stack_load44 to i64, !dbg !23
  %fixnums_anded = and i64 %cast, %cast45
  %masked = and i64 %fixnums_anded, 1
  %is_fixnum = icmp eq i64 %masked, 1, !dbg !23
  br i1 %is_fixnum, label %push_le, label %class_fallback, !dbg !23

continue37:                                       ; preds = %check_active
  br label %continue, !dbg !23

check_active:                                     ; preds = %use_call
  br label %continue37, !dbg !23

class_fallback:                                   ; preds = %continue
  %stack_pos46 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load47 = load %"struct.rubinius::Object"** %stack_pos46, !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %stack_load47, %"struct.rubinius::Object"** %out_args_recv, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !23
  store i32 1, i32* %out_args_total, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !23
  %stack_pos48 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos48, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !23
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 25207592 to %"struct.rubinius::CallSite"**), !dbg !23
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i32 0, i32 2, !dbg !23
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, !dbg !23
  store i32 22, i32* %ip_pos, !dbg !23
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check50 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !23
  br i1 %null_check50, label %bail_out, label %check_active49, !dbg !23

serial_fallback:                                  ; No predecessors!
  store i32 22, i32* %ip_pos, !dbg !23
  %25 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 22, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !23
  br label %return_pad, !dbg !23

continue40:                                       ; preds = %check_active49, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %26, %push_le ], [ %call_site_execute, %check_active49 ], !dbg !23
  %stack_pos51 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack_pos51, !dbg !23
  %stack_pos52 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !23
  %stack_load53 = load %"struct.rubinius::Object"** %stack_pos52, !dbg !23
  %as_int = ptrtoint %"struct.rubinius::Object"* %stack_load53 to i64, !dbg !23
  %and = and i64 %as_int, 15, !dbg !23
  %is_true = icmp eq i64 %and, 10, !dbg !23
  br i1 %is_true, label %ip114, label %continue54, !dbg !23

push_le:                                          ; preds = %continue
  %fixnum.lt = icmp slt i64 %cast, %cast45, !dbg !23
  %26 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue40, !dbg !23

check_active49:                                   ; preds = %class_fallback
  br label %continue40, !dbg !23

continue54:                                       ; preds = %continue40
  br label %ip27, !dbg !23

ip27:                                             ; preds = %continue54
  %stack_pos55 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos55, !dbg !26
  %stack_pos56 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos56, !dbg !26
  %stack_pos57 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %27 = getelementptr %"struct.rubinius::Object"** %stack_pos57, i32 0, !dbg !26
  %28 = load %"struct.rubinius::Object"** %27, !dbg !26
  %stack_pos58 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %28, %"struct.rubinius::Object"** %stack_pos58, !dbg !26
  %29 = getelementptr %"struct.rubinius::Object"** %stack_pos57, i32 1, !dbg !26
  %30 = load %"struct.rubinius::Object"** %29, !dbg !26
  %stack_pos59 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !26
  store %"struct.rubinius::Object"* %30, %"struct.rubinius::Object"** %stack_pos59, !dbg !26
  %stack_pos60 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %constant61 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos60), !dbg !26, !rbx-classid !21
  %stack_pos62 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %constant61, %"struct.rubinius::Object"** %stack_pos62, !dbg !26
  %stack_pos63 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %stack_load64 = load %"struct.rubinius::Object"** %stack_pos63, !dbg !26, !rbx-classid !21
  %stack_pos65 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_load66 = load %"struct.rubinius::Object"** %stack_pos65, !dbg !26, !rbx-classid !22
  %stack_pos67 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %stack_load66, %"struct.rubinius::Object"** %stack_pos67, !dbg !26
  %stack_pos68 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  %stack_load69 = load %"struct.rubinius::Object"** %stack_pos68, !dbg !26, !rbx-classid !22
  %stack_pos70 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %stack_pos70, !dbg !26
  %stack_pos71 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !26
  store %"struct.rubinius::Object"* %stack_load64, %"struct.rubinius::Object"** %stack_pos71, !dbg !26
  %stack_pos72 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_pos73 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %rotate74 = load %"struct.rubinius::Object"** %stack_pos72, !dbg !26
  %rotate75 = load %"struct.rubinius::Object"** %stack_pos73, !dbg !26
  %stack_pos76 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  store %"struct.rubinius::Object"* %rotate75, %"struct.rubinius::Object"** %stack_pos76, !dbg !26
  %stack_pos77 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  store %"struct.rubinius::Object"* %rotate74, %"struct.rubinius::Object"** %stack_pos77, !dbg !26
  %local_pos78 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !26
  %stack_pos79 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !26
  %stack_load80 = load %"struct.rubinius::Object"** %stack_pos79, !dbg !26
  store %"struct.rubinius::Object"* %stack_load80, %"struct.rubinius::Object"** %local_pos78, !dbg !26
  %local_pos81 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !26
  %stack_pos82 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !26
  %stack_load83 = load %"struct.rubinius::Object"** %stack_pos82, !dbg !26
  store %"struct.rubinius::Object"* %stack_load83, %"struct.rubinius::Object"** %local_pos81, !dbg !26
  br label %ip44, !dbg !26

ip44:                                             ; preds = %done, %ip27
  %local_pos84 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !27
  %local85 = load %"struct.rubinius::Object"** %local_pos84, !dbg !27, !rbx-classid !28
  %stack_pos86 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %local85, %"struct.rubinius::Object"** %stack_pos86, !dbg !27
  %global_serial87 = load i32* inttoptr (i64 22553844 to i32*), !dbg !27
  %constant_cache88 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 25207784 to %"struct.rubinius::ConstantCache"**), !dbg !27
  %constant_cache_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 4, !dbg !27
  %constant_scope90 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos89, !dbg !27
  %scope_pos91 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i32 0, i32 1, !dbg !27
  %frame_scope92 = load %"struct.rubinius::ConstantScope"** %scope_pos91, !dbg !27
  %same_scope93 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope90, %frame_scope92, !dbg !27
  br i1 %same_scope93, label %check_serial94, label %use_call96, !dbg !27

check_serial94:                                   ; preds = %ip44
  %serial_pos98 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 7, !dbg !27
  %serial99 = load i32* %serial_pos98, !dbg !27
  %use_cache100 = icmp eq i32 %global_serial87, %serial99, !dbg !27
  br i1 %use_cache100, label %use_cache95, label %use_call96, !dbg !27

use_cache95:                                      ; preds = %check_serial94
  %value_pos101 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i32 0, i32 2, !dbg !27
  %cached_value102 = load %"struct.rubinius::Object"** %value_pos101, !dbg !27
  br label %continue97, !dbg !27

use_call96:                                       ; preds = %check_serial94, %ip44
  store i32 46, i32* %ip_pos, !dbg !27
  %push_const_fast103 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 25207784 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !27
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast103, null, !dbg !27
  br i1 %null_check106, label %bail_out, label %check_active105, !dbg !27

continue97:                                       ; preds = %continue104, %use_cache95
  %constant107 = phi %"struct.rubinius::Object"* [ %cached_value102, %use_cache95 ], [ %push_const_fast103, %continue104 ], !dbg !27, !rbx-classid !29
  %stack_pos108 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"* %constant107, %"struct.rubinius::Object"** %stack_pos108, !dbg !27
  %stack_pos112 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load113 = load %"struct.rubinius::Object"** %stack_pos112, !dbg !27, !rbx-classid !28
  %cast114 = ptrtoint %"struct.rubinius::Object"* %stack_load113 to i64, !dbg !27
  %stack_pos115 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  %stack_load116 = load %"struct.rubinius::Object"** %stack_pos115, !dbg !27, !rbx-classid !29
  %cast117 = ptrtoint %"struct.rubinius::Object"* %stack_load116 to i64, !dbg !27
  %fixnums_anded118 = and i64 %cast114, %cast117
  %masked119 = and i64 %fixnums_anded118, 1
  %is_fixnum120 = icmp eq i64 %masked119, 1, !dbg !27
  br i1 %is_fixnum120, label %push_le121, label %class_fallback109, !dbg !27

continue104:                                      ; preds = %check_active105
  br label %continue97, !dbg !27

check_active105:                                  ; preds = %use_call96
  br label %continue104, !dbg !27

class_fallback109:                                ; preds = %continue97
  %stack_pos123 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load124 = load %"struct.rubinius::Object"** %stack_pos123, !dbg !27, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load124, %"struct.rubinius::Object"** %out_args_recv, !dbg !27
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !27
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !27
  store i32 1, i32* %out_args_total, !dbg !27
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !27
  %stack_pos125 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !27
  store %"struct.rubinius::Object"** %stack_pos125, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !27
  %cache_const126 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207800 to %"struct.rubinius::CallSite"**), !dbg !27
  %execute_pos127 = getelementptr %"struct.rubinius::CallSite"* %cache_const126, i32 0, i32 2, !dbg !27
  %execute128 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos127, !dbg !27
  store i32 48, i32* %ip_pos, !dbg !27
  %call_site_execute129 = call %"struct.rubinius::Object"* %execute128(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const126, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !27
  %null_check131 = icmp eq %"struct.rubinius::Object"* %call_site_execute129, null, !dbg !27
  br i1 %null_check131, label %bail_out, label %check_active130, !dbg !27

serial_fallback110:                               ; No predecessors!
  store i32 48, i32* %ip_pos, !dbg !27
  %31 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 48, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !27
  br label %return_pad, !dbg !27

continue111:                                      ; preds = %check_active130, %push_le121
  %send_result132 = phi %"struct.rubinius::Object"* [ %32, %push_le121 ], [ %call_site_execute129, %check_active130 ], !dbg !27
  %stack_pos133 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  store %"struct.rubinius::Object"* %send_result132, %"struct.rubinius::Object"** %stack_pos133, !dbg !27
  %stack_pos134 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !27
  %stack_load135 = load %"struct.rubinius::Object"** %stack_pos134, !dbg !27
  %as_int136 = ptrtoint %"struct.rubinius::Object"* %stack_load135 to i64, !dbg !27
  %and137 = and i64 %as_int136, 15, !dbg !27
  %is_true138 = icmp eq i64 %and137, 10, !dbg !27
  br i1 %is_true138, label %ip92, label %continue139, !dbg !27

push_le121:                                       ; preds = %continue97
  %fixnum.lt122 = icmp slt i64 %cast114, %cast117, !dbg !27
  %32 = select i1 %fixnum.lt122, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !27
  br label %continue111, !dbg !27

check_active130:                                  ; preds = %class_fallback109
  br label %continue111, !dbg !27

continue139:                                      ; preds = %continue111
  br label %ip53, !dbg !27

ip53:                                             ; preds = %continue139
  %local_pos140 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !30
  %local141 = load %"struct.rubinius::Object"** %local_pos140, !dbg !30, !rbx-classid !31
  %stack_pos142 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %local141, %"struct.rubinius::Object"** %stack_pos142, !dbg !30
  %33 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 2, !dbg !30
  %self = load %"struct.rubinius::Object"** %33, !dbg !30
  %stack_pos143 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos143, !dbg !30
  %local_pos144 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !30
  %local145 = load %"struct.rubinius::Object"** %local_pos144, !dbg !30, !rbx-classid !28
  %stack_pos146 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos146, !dbg !30
  %local_pos147 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !30
  %local148 = load %"struct.rubinius::Object"** %local_pos147, !dbg !30, !rbx-classid !24
  %stack_pos149 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos149, !dbg !30
  %stack_pos153 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load154 = load %"struct.rubinius::Object"** %stack_pos153, !dbg !30
  %cast155 = ptrtoint %"struct.rubinius::Object"* %stack_load154 to i64, !dbg !30
  %masked156 = and i64 %cast155, 3, !dbg !30
  %is_reference = icmp eq i64 %masked156, 0, !dbg !30
  br i1 %is_reference, label %check_class_id, label %class_fallback150, !dbg !30

continue152:                                      ; preds = %continue500
  %local_pos504 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 0, !dbg !30
  %local505 = load %"struct.rubinius::Object"** %local_pos504, !dbg !30, !rbx-classid !32
  %stack_pos506 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %stack_pos506, !dbg !30
  %local_pos507 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !30
  %local508 = load %"struct.rubinius::Object"** %local_pos507, !dbg !30, !rbx-classid !28
  %stack_pos509 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"* %local508, %"struct.rubinius::Object"** %stack_pos509, !dbg !30
  %stack_pos513 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load514 = load %"struct.rubinius::Object"** %stack_pos513, !dbg !30, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load514, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos515 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos515, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const516 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207960 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos517 = getelementptr %"struct.rubinius::CallSite"* %cache_const516, i32 0, i32 2, !dbg !30
  %execute518 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos517, !dbg !30
  store i32 68, i32* %ip_pos, !dbg !30
  %call_site_execute519 = call %"struct.rubinius::Object"* %execute518(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const516, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check522 = icmp eq %"struct.rubinius::Object"* %call_site_execute519, null, !dbg !30
  br i1 %null_check522, label %bail_out, label %check_active521, !dbg !30

check_class_id:                                   ; preds = %ip53
  %class_pos = getelementptr %"struct.rubinius::Object"* %stack_load154, i32 0, i32 0, i32 1, !dbg !30
  %ref_class = load %"struct.rubinius::Class"** %class_pos, !dbg !30
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 4, !dbg !30
  %class_id = load i32* %class_id_pos, !dbg !30
  %check_class_id157 = icmp eq i32 %class_id, 683, !dbg !30
  br i1 %check_class_id157, label %correct_class, label %class_fallback150, !dbg !30

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i32 0, i32 5, !dbg !30
  %serial_id = load i32* %serial_id_pos, !dbg !30
  %check_serial_id = icmp eq i32 %serial_id, 23, !dbg !30
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback151, !dbg !30

class_fallback150:                                ; preds = %check_class_id, %ip53
  store i32 61, i32* %ip_pos, !dbg !30
  %34 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 0), !dbg !30
  br label %return_pad, !dbg !30

correct_serial:                                   ; preds = %correct_class
  %stack_pos160 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load161 = load %"struct.rubinius::Object"** %stack_pos160, !dbg !30, !rbx-classid !28
  %stack_pos162 = getelementptr %"struct.rubinius::Object"** %stack, i32 3, !dbg !30
  %stack_load163 = load %"struct.rubinius::Object"** %stack_pos162, !dbg !30, !rbx-classid !24
  %stack_pos164 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load165 = load %"struct.rubinius::Object"** %stack_pos164, !dbg !30
  br label %inline_entry, !dbg !30

serial_fallback151:                               ; preds = %correct_class
  store i32 61, i32* %ip_pos, !dbg !30
  %35 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

inline_entry:                                     ; preds = %correct_serial
  %call_frame168 = bitcast %"struct.rubinius::Object"** %cfstk167 to %"struct.rubinius::CallFrame"*, !dbg !33
  %stack169 = getelementptr %"struct.rubinius::Object"** %cfstk167, i32 9, !dbg !33
  %vars171 = bitcast %"struct.rubinius::Object"** %var_mem170 to %"struct.rubinius::StackVariables"*, !dbg !33
  %36 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 0, !dbg !33
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %36, !dbg !33
  %37 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 2, !dbg !33
  store i8* inttoptr (i64 140281081489920 to i8*), i8** %37, !dbg !33
  %compiled_code172 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081489920 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !33
  %38 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 3, !dbg !33
  store %"struct.rubinius::CompiledCode"* %compiled_code172, %"struct.rubinius::CompiledCode"** %38, !dbg !33
  %constant_scope_pos173 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code172, i32 0, i32 13, !dbg !33
  %constant_scope174 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos173, !dbg !33
  %39 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 1, !dbg !33
  store %"struct.rubinius::ConstantScope"* %constant_scope174, %"struct.rubinius::ConstantScope"** %39, !dbg !33
  %40 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 4, !dbg !33
  store i32 12, i32* %40, !dbg !33
  %41 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 5, !dbg !33
  store i32 0, i32* %41, !dbg !33
  %42 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 8, !dbg !33
  store %"struct.rubinius::StackVariables"* %vars171, %"struct.rubinius::StackVariables"** %42, !dbg !33
  store i32 0, i32* %counter_alloca, !dbg !33
  br label %stack_nil175, !dbg !33

stack_nil175:                                     ; preds = %stack_nil175, %inline_entry
  %counter177 = load i32* %counter_alloca, !dbg !33
  %stack_pos178 = getelementptr %"struct.rubinius::Object"** %stack169, i32 %counter177, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos178, !dbg !33
  %added179 = add i32 %counter177, 1, !dbg !33
  store i32 %added179, i32* %counter_alloca, !dbg !33
  %loop_check180 = icmp eq i32 %added179, 6, !dbg !33
  br i1 %loop_check180, label %bottom176, label %stack_nil175, !dbg !33

bottom176:                                        ; preds = %stack_nil175
  %module = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081489920 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !33
  %43 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 0, !dbg !33
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %43, !dbg !33
  %44 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 2, !dbg !33
  store %"struct.rubinius::Object"* %stack_load165, %"struct.rubinius::Object"** %44, !dbg !33
  %45 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 4, !dbg !33
  store %"struct.rubinius::Module"* %module, %"struct.rubinius::Module"** %45, !dbg !33
  %46 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 3, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %46, !dbg !33
  %47 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 1, !dbg !33
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %47, !dbg !33
  %48 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 5, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %48, !dbg !33
  %local_pos181 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos181, !dbg !33
  %local_pos182 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos182, !dbg !33
  %local_pos183 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !33
  store %"struct.rubinius::Object"* %stack_load161, %"struct.rubinius::Object"** %local_pos183, !dbg !33
  %local_pos184 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !33
  store %"struct.rubinius::Object"* %stack_load163, %"struct.rubinius::Object"** %local_pos184, !dbg !33
  br label %method_body166, !dbg !33

bail_out185:                                      ; preds = %class_fallback460, %class_fallback422, %class_fallback383, %class_fallback347, %class_fallback313, %class_fallback275, %class_fallback236, %class_fallback204
  %rth186 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168), !dbg !33
  br i1 %rth186, label %ret_raise_val187, label %ret_null188, !dbg !33

ret_raise_val187:                                 ; preds = %bail_out185
  %crv189 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !33
  br label %return_pad158, !dbg !33

ret_null188:                                      ; preds = %bail_out185
  br label %return_pad158, !dbg !33

method_body166:                                   ; preds = %bottom176
  %ip_pos190 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 5, !dbg !33
  %out_args_name191 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !33
  %out_args_recv192 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !33
  %out_args_block193 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !33
  %out_args_total194 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !33
  %out_args_arguments195 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !33
  %out_args_container196 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !33
  %code_pos = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i32 0, i32 3, !dbg !34
  %code = load %"struct.rubinius::CompiledCode"** %code_pos, !dbg !34
  %literals_pos = getelementptr %"struct.rubinius::CompiledCode"* %code, i32 0, i32 17, !dbg !34
  %literals = load %"struct.rubinius::Tuple"** %literals_pos, !dbg !34
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i32 0, i32 2, i32 0, !dbg !34
  %literal = load %"struct.rubinius::Object"** %literal_pos, !dbg !34, !rbx-classid !35
  %stack_pos197 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack_pos197, !dbg !34
  %local_pos198 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local199 = load %"struct.rubinius::Object"** %local_pos198, !dbg !34, !rbx-classid !32
  %stack_pos200 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %local199, %"struct.rubinius::Object"** %stack_pos200, !dbg !34
  %local_pos201 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !34
  %local202 = load %"struct.rubinius::Object"** %local_pos201, !dbg !34, !rbx-classid !36
  %stack_pos203 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local202, %"struct.rubinius::Object"** %stack_pos203, !dbg !34
  %stack_pos207 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load208 = load %"struct.rubinius::Object"** %stack_pos207, !dbg !34, !rbx-classid !32
  %stack_pos209 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load210 = load %"struct.rubinius::Object"** %stack_pos209, !dbg !34, !rbx-classid !36
  %cast211 = ptrtoint %"struct.rubinius::Object"* %stack_load208 to i64, !dbg !34
  %cast212 = ptrtoint %"struct.rubinius::Object"* %stack_load210 to i64, !dbg !34
  %fixnums_anded213 = and i64 %cast211, %cast212, !dbg !34
  %masked214 = and i64 %fixnums_anded213, 1, !dbg !34
  %is_fixnum215 = icmp eq i64 %masked214, 1, !dbg !34
  br i1 %is_fixnum215, label %push_add, label %class_fallback204, !dbg !34

class_fallback204:                                ; preds = %method_body166
  %stack_pos219 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load220 = load %"struct.rubinius::Object"** %stack_pos219, !dbg !34, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load220, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos221 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos221, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const222 = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos223 = getelementptr %"struct.rubinius::CallSite"* %cache_const222, i32 0, i32 2, !dbg !34
  %execute224 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos223, !dbg !34
  store i32 6, i32* %ip_pos190, !dbg !34
  %call_site_execute225 = call %"struct.rubinius::Object"* %execute224(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const222, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check227 = icmp eq %"struct.rubinius::Object"* %call_site_execute225, null, !dbg !34
  br i1 %null_check227, label %bail_out185, label %check_active226, !dbg !34

serial_fallback205:                               ; No predecessors!
  store i32 6, i32* %ip_pos190, !dbg !34
  %49 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 6, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue206:                                      ; preds = %check_active226, %cont
  %send_result228 = phi %"struct.rubinius::Object"* [ %result, %cont ], [ %call_site_execute225, %check_active226 ], !dbg !34
  %stack_pos229 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result228, %"struct.rubinius::Object"** %stack_pos229, !dbg !34
  %local_pos230 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local231 = load %"struct.rubinius::Object"** %local_pos230, !dbg !34, !rbx-classid !32
  %stack_pos232 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %stack_pos232, !dbg !34
  %local_pos233 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 1, !dbg !34
  %local234 = load %"struct.rubinius::Object"** %local_pos233, !dbg !34, !rbx-classid !36
  %stack_pos235 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"* %local234, %"struct.rubinius::Object"** %stack_pos235, !dbg !34
  %stack_pos239 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load240 = load %"struct.rubinius::Object"** %stack_pos239, !dbg !34, !rbx-classid !32
  %stack_pos241 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  %stack_load242 = load %"struct.rubinius::Object"** %stack_pos241, !dbg !34, !rbx-classid !36
  %cast247 = ptrtoint %"struct.rubinius::Object"* %stack_load240 to i64, !dbg !34
  %cast248 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !34
  %fixnums_anded249 = and i64 %cast247, %cast248, !dbg !34
  %masked250 = and i64 %fixnums_anded249, 1, !dbg !34
  %is_fixnum251 = icmp eq i64 %masked250, 1, !dbg !34
  br i1 %is_fixnum251, label %push_add243, label %class_fallback236, !dbg !34

push_add:                                         ; preds = %method_body166
  %as_int216 = ptrtoint %"struct.rubinius::Object"* %stack_load208 to i64, !dbg !34
  %ashr = ashr i64 %as_int216, 1, !dbg !34
  %as_int217 = ptrtoint %"struct.rubinius::Object"* %stack_load210 to i64, !dbg !34
  %ashr218 = ashr i64 %as_int217, 1, !dbg !34
  %fixnum.add = add i64 %ashr, %ashr218, !dbg !34
  %50 = icmp sle i64 %fixnum.add, 4611686018427387903, !dbg !34
  %51 = icmp sge i64 %fixnum.add, -4611686018427387903, !dbg !34
  %fits_fixnum = and i1 %50, %51, !dbg !34
  br i1 %fits_fixnum, label %tagnow, label %bignum, !dbg !34

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !34
  %or = or i64 %shl, 1, !dbg !34
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !34
  br label %cont, !dbg !34

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #2, !dbg !34
  br label %cont, !dbg !34

cont:                                             ; preds = %tagnow, %bignum
  %result = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], !dbg !34
  br label %continue206, !dbg !34

check_active226:                                  ; preds = %class_fallback204
  br label %continue206, !dbg !34

class_fallback236:                                ; preds = %continue206
  %stack_pos263 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load264 = load %"struct.rubinius::Object"** %stack_pos263, !dbg !34, !rbx-classid !32
  store %"struct.rubinius::Object"* %stack_load264, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos265 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos265, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const266 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos267 = getelementptr %"struct.rubinius::CallSite"* %cache_const266, i32 0, i32 2, !dbg !34
  %execute268 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos267, !dbg !34
  store i32 13, i32* %ip_pos190, !dbg !34
  %call_site_execute269 = call %"struct.rubinius::Object"* %execute268(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const266, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check271 = icmp eq %"struct.rubinius::Object"* %call_site_execute269, null, !dbg !34
  br i1 %null_check271, label %bail_out185, label %check_active270, !dbg !34

serial_fallback237:                               ; No predecessors!
  store i32 13, i32* %ip_pos190, !dbg !34
  %52 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 13, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue238:                                      ; preds = %check_active270, %cont246
  %send_result272 = phi %"struct.rubinius::Object"* [ %result262, %cont246 ], [ %call_site_execute269, %check_active270 ], !dbg !34
  %stack_pos273 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %stack_pos273, !dbg !34
  %stack_pos274 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos274, !dbg !34
  %stack_pos278 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load279 = load %"struct.rubinius::Object"** %stack_pos278, !dbg !34
  %stack_pos280 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  %stack_load281 = load %"struct.rubinius::Object"** %stack_pos280, !dbg !34, !rbx-classid !37
  %cast286 = ptrtoint %"struct.rubinius::Object"* %stack_load279 to i64, !dbg !34
  %cast287 = ptrtoint %"struct.rubinius::Object"* %stack_load281 to i64, !dbg !34
  %fixnums_anded288 = and i64 %cast286, %cast287, !dbg !34
  %masked289 = and i64 %fixnums_anded288, 1, !dbg !34
  %is_fixnum290 = icmp eq i64 %masked289, 1, !dbg !34
  br i1 %is_fixnum290, label %push_add282, label %class_fallback275, !dbg !34

push_add243:                                      ; preds = %continue206
  %as_int252 = ptrtoint %"struct.rubinius::Object"* %stack_load240 to i64, !dbg !34
  %ashr253 = ashr i64 %as_int252, 1, !dbg !34
  %as_int254 = ptrtoint %"struct.rubinius::Object"* %stack_load242 to i64, !dbg !34
  %ashr255 = ashr i64 %as_int254, 1, !dbg !34
  %fixnum.add256 = add i64 %ashr253, %ashr255, !dbg !34
  %53 = icmp sle i64 %fixnum.add256, 4611686018427387903, !dbg !34
  %54 = icmp sge i64 %fixnum.add256, -4611686018427387903, !dbg !34
  %fits_fixnum257 = and i1 %53, %54, !dbg !34
  br i1 %fits_fixnum257, label %tagnow244, label %bignum245, !dbg !34

tagnow244:                                        ; preds = %push_add243
  %shl259 = shl i64 %fixnum.add256, 1, !dbg !34
  %or260 = or i64 %shl259, 1, !dbg !34
  %as_obj261 = inttoptr i64 %or260 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont246, !dbg !34

bignum245:                                        ; preds = %push_add243
  %big_value258 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add256) #2, !dbg !34
  br label %cont246, !dbg !34

cont246:                                          ; preds = %tagnow244, %bignum245
  %result262 = phi %"struct.rubinius::Object"* [ %big_value258, %bignum245 ], [ %as_obj261, %tagnow244 ], !dbg !34
  br label %continue238, !dbg !34

check_active270:                                  ; preds = %class_fallback236
  br label %continue238, !dbg !34

class_fallback275:                                ; preds = %continue238
  %stack_pos302 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load303 = load %"struct.rubinius::Object"** %stack_pos302, !dbg !34
  store %"struct.rubinius::Object"* %stack_load303, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos304 = getelementptr %"struct.rubinius::Object"** %stack169, i32 3, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos304, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const305 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos306 = getelementptr %"struct.rubinius::CallSite"* %cache_const305, i32 0, i32 2, !dbg !34
  %execute307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos306, !dbg !34
  store i32 17, i32* %ip_pos190, !dbg !34
  %call_site_execute308 = call %"struct.rubinius::Object"* %execute307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const305, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check310 = icmp eq %"struct.rubinius::Object"* %call_site_execute308, null, !dbg !34
  br i1 %null_check310, label %bail_out185, label %check_active309, !dbg !34

serial_fallback276:                               ; No predecessors!
  store i32 17, i32* %ip_pos190, !dbg !34
  %55 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 17, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue277:                                      ; preds = %check_active309, %cont285
  %send_result311 = phi %"struct.rubinius::Object"* [ %result301, %cont285 ], [ %call_site_execute308, %check_active309 ], !dbg !34
  %stack_pos312 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %send_result311, %"struct.rubinius::Object"** %stack_pos312, !dbg !34
  %stack_pos316 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load317 = load %"struct.rubinius::Object"** %stack_pos316, !dbg !34
  %stack_pos318 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load319 = load %"struct.rubinius::Object"** %stack_pos318, !dbg !34
  %cast322 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !34
  %cast323 = ptrtoint %"struct.rubinius::Object"* %stack_load319 to i64, !dbg !34
  %fixnums_anded324 = and i64 %cast322, %cast323, !dbg !34
  %masked325 = and i64 %fixnums_anded324, 1, !dbg !34
  %is_fixnum326 = icmp eq i64 %masked325, 1, !dbg !34
  br i1 %is_fixnum326, label %push_mul, label %class_fallback313, !dbg !34

push_add282:                                      ; preds = %continue238
  %as_int291 = ptrtoint %"struct.rubinius::Object"* %stack_load279 to i64, !dbg !34
  %ashr292 = ashr i64 %as_int291, 1, !dbg !34
  %as_int293 = ptrtoint %"struct.rubinius::Object"* %stack_load281 to i64, !dbg !34
  %ashr294 = ashr i64 %as_int293, 1, !dbg !34
  %fixnum.add295 = add i64 %ashr292, %ashr294, !dbg !34
  %56 = icmp sle i64 %fixnum.add295, 4611686018427387903, !dbg !34
  %57 = icmp sge i64 %fixnum.add295, -4611686018427387903, !dbg !34
  %fits_fixnum296 = and i1 %56, %57, !dbg !34
  br i1 %fits_fixnum296, label %tagnow283, label %bignum284, !dbg !34

tagnow283:                                        ; preds = %push_add282
  %shl298 = shl i64 %fixnum.add295, 1, !dbg !34
  %or299 = or i64 %shl298, 1, !dbg !34
  %as_obj300 = inttoptr i64 %or299 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont285, !dbg !34

bignum284:                                        ; preds = %push_add282
  %big_value297 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add295) #2, !dbg !34
  br label %cont285, !dbg !34

cont285:                                          ; preds = %tagnow283, %bignum284
  %result301 = phi %"struct.rubinius::Object"* [ %big_value297, %bignum284 ], [ %as_obj300, %tagnow283 ], !dbg !34
  br label %continue277, !dbg !34

check_active309:                                  ; preds = %class_fallback275
  br label %continue277, !dbg !34

class_fallback313:                                ; preds = %fits_fixnum320, %push_mul, %continue277
  %stack_pos335 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load336 = load %"struct.rubinius::Object"** %stack_pos335, !dbg !34
  store %"struct.rubinius::Object"* %stack_load336, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos337 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos337, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const338 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos339 = getelementptr %"struct.rubinius::CallSite"* %cache_const338, i32 0, i32 2, !dbg !34
  %execute340 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos339, !dbg !34
  store i32 20, i32* %ip_pos190, !dbg !34
  %call_site_execute341 = call %"struct.rubinius::Object"* %execute340(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const338, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check343 = icmp eq %"struct.rubinius::Object"* %call_site_execute341, null, !dbg !34
  br i1 %null_check343, label %bail_out185, label %check_active342, !dbg !34

serial_fallback314:                               ; No predecessors!
  store i32 20, i32* %ip_pos190, !dbg !34
  %58 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 20, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue315:                                      ; preds = %check_active342, %tagnow321
  %send_result344 = phi %"struct.rubinius::Object"* [ %as_obj334, %tagnow321 ], [ %call_site_execute341, %check_active342 ], !dbg !34
  %stack_pos345 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %stack_pos345, !dbg !34
  %stack_pos346 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos346, !dbg !34
  %stack_pos350 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load351 = load %"struct.rubinius::Object"** %stack_pos350, !dbg !34
  %stack_pos352 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load353 = load %"struct.rubinius::Object"** %stack_pos352, !dbg !34, !rbx-classid !38
  %cast354 = ptrtoint %"struct.rubinius::Object"* %stack_load351 to i64, !dbg !34
  %cast355 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %masked356 = and i64 %cast354, -9223372036854775807, !dbg !34
  %masked357 = and i64 %cast355, -9223372036854775807, !dbg !34
  %fixnums_anded358 = and i64 %masked356, %masked357, !dbg !34
  %fixnums_ored = or i64 %masked356, %masked357, !dbg !34
  %is_fixnum_and = icmp eq i64 %fixnums_anded358, 1, !dbg !34
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !34
  %is_fixnum359 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !34
  br i1 %is_fixnum359, label %positive, label %class_fallback347, !dbg !34

push_mul:                                         ; preds = %continue277
  %as_int327 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !34
  %ashr328 = ashr i64 %as_int327, 1, !dbg !34
  %as_int329 = ptrtoint %"struct.rubinius::Object"* %stack_load319 to i64, !dbg !34
  %ashr330 = ashr i64 %as_int329, 1, !dbg !34
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr328, i64 %ashr330), !dbg !34
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !34
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !34
  br i1 %did_overflow, label %class_fallback313, label %fits_fixnum320, !dbg !34

fits_fixnum320:                                   ; preds = %push_mul
  %59 = icmp sle i64 %mul, 4611686018427387903, !dbg !34
  %60 = icmp sge i64 %mul, -4611686018427387903, !dbg !34
  %fits_fixnum331 = and i1 %59, %60, !dbg !34
  br i1 %fits_fixnum331, label %tagnow321, label %class_fallback313, !dbg !34

tagnow321:                                        ; preds = %fits_fixnum320
  %shl332 = shl i64 %mul, 1, !dbg !34
  %or333 = or i64 %shl332, 1, !dbg !34
  %as_obj334 = inttoptr i64 %or333 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue315, !dbg !34

check_active342:                                  ; preds = %class_fallback313
  br label %continue315, !dbg !34

class_fallback347:                                ; preds = %positive, %continue315
  %stack_pos369 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load370 = load %"struct.rubinius::Object"** %stack_pos369, !dbg !34
  store %"struct.rubinius::Object"* %stack_load370, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos371 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos371, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const372 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos373 = getelementptr %"struct.rubinius::CallSite"* %cache_const372, i32 0, i32 2, !dbg !34
  %execute374 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos373, !dbg !34
  store i32 24, i32* %ip_pos190, !dbg !34
  %call_site_execute375 = call %"struct.rubinius::Object"* %execute374(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const372, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check377 = icmp eq %"struct.rubinius::Object"* %call_site_execute375, null, !dbg !34
  br i1 %null_check377, label %bail_out185, label %check_active376, !dbg !34

serial_fallback348:                               ; No predecessors!
  store i32 24, i32* %ip_pos190, !dbg !34
  %61 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 24, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue349:                                      ; preds = %check_active376, %divide
  %send_result378 = phi %"struct.rubinius::Object"* [ %as_obj368, %divide ], [ %call_site_execute375, %check_active376 ], !dbg !34
  %stack_pos379 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %stack_pos379, !dbg !34
  %local_pos380 = getelementptr %"struct.rubinius::StackVariables"* %vars171, i32 0, i32 6, i32 0, !dbg !34
  %local381 = load %"struct.rubinius::Object"** %local_pos380, !dbg !34, !rbx-classid !32
  %stack_pos382 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos382, !dbg !34
  %stack_pos386 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load387 = load %"struct.rubinius::Object"** %stack_pos386, !dbg !34
  %stack_pos388 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load389 = load %"struct.rubinius::Object"** %stack_pos388, !dbg !34, !rbx-classid !32
  %cast394 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !34
  %cast395 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !34
  %fixnums_anded396 = and i64 %cast394, %cast395, !dbg !34
  %masked397 = and i64 %fixnums_anded396, 1, !dbg !34
  %is_fixnum398 = icmp eq i64 %masked397, 1, !dbg !34
  br i1 %is_fixnum398, label %push_add390, label %class_fallback383, !dbg !34

positive:                                         ; preds = %continue315
  %cast360 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %is_fixnum361 = icmp ne i64 %cast360, 1, !dbg !34
  br i1 %is_fixnum361, label %divide, label %class_fallback347, !dbg !34

divide:                                           ; preds = %positive
  %as_int362 = ptrtoint %"struct.rubinius::Object"* %stack_load351 to i64, !dbg !34
  %ashr363 = ashr i64 %as_int362, 1, !dbg !34
  %as_int364 = ptrtoint %"struct.rubinius::Object"* %stack_load353 to i64, !dbg !34
  %ashr365 = ashr i64 %as_int364, 1, !dbg !34
  %fixnum.div = sdiv i64 %ashr363, %ashr365, !dbg !34
  %shl366 = shl i64 %fixnum.div, 1, !dbg !34
  %or367 = or i64 %shl366, 1, !dbg !34
  %as_obj368 = inttoptr i64 %or367 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue349, !dbg !34

check_active376:                                  ; preds = %class_fallback347
  br label %continue349, !dbg !34

class_fallback383:                                ; preds = %continue349
  %stack_pos410 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load411 = load %"struct.rubinius::Object"** %stack_pos410, !dbg !34
  store %"struct.rubinius::Object"* %stack_load411, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos412 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos412, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i32 0, i32 2, !dbg !34
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, !dbg !34
  store i32 29, i32* %ip_pos190, !dbg !34
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !34
  br i1 %null_check418, label %bail_out185, label %check_active417, !dbg !34

serial_fallback384:                               ; No predecessors!
  store i32 29, i32* %ip_pos190, !dbg !34
  %62 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 29, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue385:                                      ; preds = %check_active417, %cont393
  %send_result419 = phi %"struct.rubinius::Object"* [ %result409, %cont393 ], [ %call_site_execute416, %check_active417 ], !dbg !34
  %stack_pos420 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos420, !dbg !34
  %stack_pos421 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos421, !dbg !34
  %stack_pos425 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load426 = load %"struct.rubinius::Object"** %stack_pos425, !dbg !34
  %stack_pos427 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  %stack_load428 = load %"struct.rubinius::Object"** %stack_pos427, !dbg !34, !rbx-classid !37
  %cast433 = ptrtoint %"struct.rubinius::Object"* %stack_load426 to i64, !dbg !34
  %cast434 = ptrtoint %"struct.rubinius::Object"* %stack_load428 to i64, !dbg !34
  %fixnums_anded435 = and i64 %cast433, %cast434, !dbg !34
  %masked436 = and i64 %fixnums_anded435, 1, !dbg !34
  %is_fixnum437 = icmp eq i64 %masked436, 1, !dbg !34
  br i1 %is_fixnum437, label %push_add429, label %class_fallback422, !dbg !34

push_add390:                                      ; preds = %continue349
  %as_int399 = ptrtoint %"struct.rubinius::Object"* %stack_load387 to i64, !dbg !34
  %ashr400 = ashr i64 %as_int399, 1, !dbg !34
  %as_int401 = ptrtoint %"struct.rubinius::Object"* %stack_load389 to i64, !dbg !34
  %ashr402 = ashr i64 %as_int401, 1, !dbg !34
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !34
  %63 = icmp sle i64 %fixnum.add403, 4611686018427387903, !dbg !34
  %64 = icmp sge i64 %fixnum.add403, -4611686018427387903, !dbg !34
  %fits_fixnum404 = and i1 %63, %64, !dbg !34
  br i1 %fits_fixnum404, label %tagnow391, label %bignum392, !dbg !34

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !34
  %or407 = or i64 %shl406, 1, !dbg !34
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont393, !dbg !34

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #2, !dbg !34
  br label %cont393, !dbg !34

cont393:                                          ; preds = %tagnow391, %bignum392
  %result409 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], !dbg !34
  br label %continue385, !dbg !34

check_active417:                                  ; preds = %class_fallback383
  br label %continue385, !dbg !34

class_fallback422:                                ; preds = %continue385
  %stack_pos449 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load450 = load %"struct.rubinius::Object"** %stack_pos449, !dbg !34
  store %"struct.rubinius::Object"* %stack_load450, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos451 = getelementptr %"struct.rubinius::Object"** %stack169, i32 2, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos451, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const452 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos453 = getelementptr %"struct.rubinius::CallSite"* %cache_const452, i32 0, i32 2, !dbg !34
  %execute454 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos453, !dbg !34
  store i32 33, i32* %ip_pos190, !dbg !34
  %call_site_execute455 = call %"struct.rubinius::Object"* %execute454(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const452, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check457 = icmp eq %"struct.rubinius::Object"* %call_site_execute455, null, !dbg !34
  br i1 %null_check457, label %bail_out185, label %check_active456, !dbg !34

serial_fallback423:                               ; No predecessors!
  store i32 33, i32* %ip_pos190, !dbg !34
  %65 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 33, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue424:                                      ; preds = %check_active456, %cont432
  %send_result458 = phi %"struct.rubinius::Object"* [ %result448, %cont432 ], [ %call_site_execute455, %check_active456 ], !dbg !34
  %stack_pos459 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"* %send_result458, %"struct.rubinius::Object"** %stack_pos459, !dbg !34
  %stack_pos463 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load464 = load %"struct.rubinius::Object"** %stack_pos463, !dbg !34, !rbx-classid !35
  %stack_pos465 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  %stack_load466 = load %"struct.rubinius::Object"** %stack_pos465, !dbg !34
  %cast468 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %masked469 = and i64 %cast468, 3, !dbg !34
  %is_reference470 = icmp eq i64 %masked469, 0, !dbg !34
  br i1 %is_reference470, label %check_class_id471, label %continue467, !dbg !34

push_add429:                                      ; preds = %continue385
  %as_int438 = ptrtoint %"struct.rubinius::Object"* %stack_load426 to i64, !dbg !34
  %ashr439 = ashr i64 %as_int438, 1, !dbg !34
  %as_int440 = ptrtoint %"struct.rubinius::Object"* %stack_load428 to i64, !dbg !34
  %ashr441 = ashr i64 %as_int440, 1, !dbg !34
  %fixnum.add442 = add i64 %ashr439, %ashr441, !dbg !34
  %66 = icmp sle i64 %fixnum.add442, 4611686018427387903, !dbg !34
  %67 = icmp sge i64 %fixnum.add442, -4611686018427387903, !dbg !34
  %fits_fixnum443 = and i1 %66, %67, !dbg !34
  br i1 %fits_fixnum443, label %tagnow430, label %bignum431, !dbg !34

tagnow430:                                        ; preds = %push_add429
  %shl445 = shl i64 %fixnum.add442, 1, !dbg !34
  %or446 = or i64 %shl445, 1, !dbg !34
  %as_obj447 = inttoptr i64 %or446 to %"struct.rubinius::Object"*, !dbg !34
  br label %cont432, !dbg !34

bignum431:                                        ; preds = %push_add429
  %big_value444 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add442) #2, !dbg !34
  br label %cont432, !dbg !34

cont432:                                          ; preds = %tagnow430, %bignum431
  %result448 = phi %"struct.rubinius::Object"* [ %big_value444, %bignum431 ], [ %as_obj447, %tagnow430 ], !dbg !34
  br label %continue424, !dbg !34

check_active456:                                  ; preds = %class_fallback422
  br label %continue424, !dbg !34

serial_fallback461:                               ; No predecessors!
  store i32 36, i32* %ip_pos190, !dbg !34
  %68 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168, i32 36, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !34
  br label %return_pad158, !dbg !34

continue462:                                      ; preds = %check_active494, %continue478
  %send_result496 = phi %"struct.rubinius::Object"* [ %71, %continue478 ], [ %call_site_execute493, %check_active494 ], !dbg !34
  %stack_pos497 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  store %"struct.rubinius::Object"* %send_result496, %"struct.rubinius::Object"** %stack_pos497, !dbg !34
  %stack_pos498 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load499 = load %"struct.rubinius::Object"** %stack_pos498, !dbg !34
  br label %return_pad158, !dbg !34

return_pad158:                                    ; preds = %continue462, %serial_fallback461, %serial_fallback423, %serial_fallback384, %serial_fallback348, %serial_fallback314, %serial_fallback276, %serial_fallback237, %serial_fallback205, %ret_raise_val187, %ret_null188
  %return_phi159 = phi %"struct.rubinius::Object"* [ null, %ret_null188 ], [ %crv189, %ret_raise_val187 ], [ %49, %serial_fallback205 ], [ %52, %serial_fallback237 ], [ %55, %serial_fallback276 ], [ %58, %serial_fallback314 ], [ %61, %serial_fallback348 ], [ %62, %serial_fallback384 ], [ %65, %serial_fallback423 ], [ %68, %serial_fallback461 ], [ %stack_load499, %continue462 ]
  %null_check502 = icmp eq %"struct.rubinius::Object"* %return_phi159, null, !dbg !30
  br i1 %null_check502, label %bail_out, label %check_active501, !dbg !30

check_class_id471:                                ; preds = %continue424
  %class_pos473 = getelementptr %"struct.rubinius::Object"* %stack_load466, i32 0, i32 0, i32 1, !dbg !34
  %ref_class474 = load %"struct.rubinius::Class"** %class_pos473, !dbg !34
  %class_id_pos475 = getelementptr %"struct.rubinius::Class"* %ref_class474, i32 0, i32 4, !dbg !34
  %class_id476 = load i32* %class_id_pos475, !dbg !34
  %check_class_id477 = icmp eq i32 %class_id476, 77, !dbg !34
  br i1 %check_class_id477, label %correct_class472, label %continue467, !dbg !34

correct_class472:                                 ; preds = %check_class_id471
  %arg_float = bitcast %"struct.rubinius::Object"* %stack_load466 to %"struct.rubinius::Float"*, !dbg !34
  %arg.value_pos = getelementptr %"struct.rubinius::Float"* %arg_float, i32 0, i32 1, !dbg !34
  %farg = load double* %arg.value_pos, !dbg !34
  br label %continue478, !dbg !34

continue467:                                      ; preds = %check_class_id471, %continue424
  %cast479 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %masked480 = and i64 %cast479, 1, !dbg !34
  %is_fixnum481 = icmp eq i64 %masked480, 1, !dbg !34
  br i1 %is_fixnum481, label %guarded_body, label %class_fallback460, !dbg !34

guarded_body:                                     ; preds = %continue467
  %as_int482 = ptrtoint %"struct.rubinius::Object"* %stack_load466 to i64, !dbg !34
  %ashr483 = ashr i64 %as_int482, 1, !dbg !34
  %69 = sitofp i64 %ashr483 to double, !dbg !34
  br label %continue478, !dbg !34

continue478:                                      ; preds = %guarded_body, %correct_class472
  %rhs = phi double [ %farg, %correct_class472 ], [ %69, %guarded_body ], !dbg !34
  %stack_pos484 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load485 = load %"struct.rubinius::Object"** %stack_pos484, !dbg !34, !rbx-classid !35
  %self_float = bitcast %"struct.rubinius::Object"* %stack_load485 to %"struct.rubinius::Float"*, !dbg !34
  %self.value_pos = getelementptr %"struct.rubinius::Float"* %self_float, i32 0, i32 1, !dbg !34
  %fself = load double* %self.value_pos, !dbg !34
  %float.div = fdiv double %fself, %rhs, !dbg !34
  %result486 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !34, !rbx-classid !35
  %70 = getelementptr %"struct.rubinius::Float"* %result486, i32 0, i32 1, !dbg !34
  store double %float.div, double* %70, !dbg !34
  %71 = bitcast %"struct.rubinius::Float"* %result486 to %"struct.rubinius::Object"*, !dbg !34
  br label %continue462, !dbg !34

class_fallback460:                                ; preds = %continue467
  %stack_pos487 = getelementptr %"struct.rubinius::Object"** %stack169, i32 0, !dbg !34
  %stack_load488 = load %"struct.rubinius::Object"** %stack_pos487, !dbg !34, !rbx-classid !35
  store %"struct.rubinius::Object"* %stack_load488, %"struct.rubinius::Object"** %out_args_recv192, !dbg !34
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name191, !dbg !34
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block193, !dbg !34
  store i32 1, i32* %out_args_total194, !dbg !34
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container196, !dbg !34
  %stack_pos489 = getelementptr %"struct.rubinius::Object"** %stack169, i32 1, !dbg !34
  store %"struct.rubinius::Object"** %stack_pos489, %"struct.rubinius::Object"*** %out_args_arguments195, !dbg !34
  %cache_const490 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), !dbg !34
  %execute_pos491 = getelementptr %"struct.rubinius::CallSite"* %cache_const490, i32 0, i32 2, !dbg !34
  %execute492 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos491, !dbg !34
  store i32 36, i32* %ip_pos190, !dbg !34
  %call_site_execute493 = call %"struct.rubinius::Object"* %execute492(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const490, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !34
  %null_check495 = icmp eq %"struct.rubinius::Object"* %call_site_execute493, null, !dbg !34
  br i1 %null_check495, label %bail_out185, label %check_active494, !dbg !34

check_active494:                                  ; preds = %class_fallback460
  br label %continue462, !dbg !34

continue500:                                      ; preds = %check_active501
  %stack_pos503 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %return_phi159, %"struct.rubinius::Object"** %stack_pos503, !dbg !30
  br label %continue152, !dbg !30

check_active501:                                  ; preds = %return_pad158
  br label %continue500, !dbg !30

class_fallback510:                                ; No predecessors!

serial_fallback511:                               ; No predecessors!

continue512:                                      ; No predecessors!

continue520:                                      ; preds = %check_active521
  %stack_pos523 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"* %call_site_execute519, %"struct.rubinius::Object"** %stack_pos523, !dbg !30
  %stack_pos527 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load528 = load %"struct.rubinius::Object"** %stack_pos527, !dbg !30
  %cast529 = ptrtoint %"struct.rubinius::Object"* %stack_load528 to i64, !dbg !30
  %masked530 = and i64 %cast529, 3, !dbg !30
  %is_reference531 = icmp eq i64 %masked530, 0, !dbg !30
  br i1 %is_reference531, label %check_class_id532, label %class_fallback524, !dbg !30

check_active521:                                  ; preds = %continue152
  br label %continue520, !dbg !30

continue526:                                      ; preds = %check_active580, %continue559
  %send_result582 = phi %"struct.rubinius::Object"* [ %75, %continue559 ], [ %call_site_execute579, %check_active580 ], !dbg !30
  %stack_pos583 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"* %send_result582, %"struct.rubinius::Object"** %stack_pos583, !dbg !30
  %stack_pos587 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load588 = load %"struct.rubinius::Object"** %stack_pos587, !dbg !30, !rbx-classid !31
  %stack_pos589 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load590 = load %"struct.rubinius::Object"** %stack_pos589, !dbg !30, !rbx-classid !31
  %stack_pos591 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load592 = load %"struct.rubinius::Object"** %stack_pos591, !dbg !30, !rbx-classid !31
  %stack_pos593 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load594 = load %"struct.rubinius::Object"** %stack_pos593, !dbg !30
  %cast599 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !30
  %cast600 = ptrtoint %"struct.rubinius::Object"* %stack_load594 to i64, !dbg !30
  %fixnums_anded601 = and i64 %cast599, %cast600, !dbg !30
  %masked602 = and i64 %fixnums_anded601, 1, !dbg !30
  %is_fixnum603 = icmp eq i64 %masked602, 1, !dbg !30
  br i1 %is_fixnum603, label %push_add595, label %poly_fallback, !dbg !30

check_class_id532:                                ; preds = %continue520
  %class_pos535 = getelementptr %"struct.rubinius::Object"* %stack_load528, i32 0, i32 0, i32 1, !dbg !30
  %ref_class536 = load %"struct.rubinius::Class"** %class_pos535, !dbg !30
  %class_id_pos537 = getelementptr %"struct.rubinius::Class"* %ref_class536, i32 0, i32 4, !dbg !30
  %class_id538 = load i32* %class_id_pos537, !dbg !30
  %check_class_id539 = icmp eq i32 %class_id538, 77, !dbg !30
  br i1 %check_class_id539, label %correct_class533, label %class_fallback524, !dbg !30

correct_class533:                                 ; preds = %check_class_id532
  %serial_id_pos540 = getelementptr %"struct.rubinius::Class"* %ref_class536, i32 0, i32 5, !dbg !30
  %serial_id541 = load i32* %serial_id_pos540, !dbg !30
  %check_serial_id542 = icmp eq i32 %serial_id541, 224, !dbg !30
  br i1 %check_serial_id542, label %correct_serial534, label %serial_fallback525, !dbg !30

correct_serial534:                                ; preds = %correct_class533
  %stack_pos543 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  %stack_load544 = load %"struct.rubinius::Object"** %stack_pos543, !dbg !30
  %cast546 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %masked547 = and i64 %cast546, 3, !dbg !30
  %is_reference548 = icmp eq i64 %masked547, 0, !dbg !30
  br i1 %is_reference548, label %check_class_id549, label %continue545, !dbg !30

serial_fallback525:                               ; preds = %correct_class533
  store i32 71, i32* %ip_pos, !dbg !30
  %72 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

check_class_id549:                                ; preds = %correct_serial534
  %class_pos551 = getelementptr %"struct.rubinius::Object"* %stack_load544, i32 0, i32 0, i32 1, !dbg !30
  %ref_class552 = load %"struct.rubinius::Class"** %class_pos551, !dbg !30
  %class_id_pos553 = getelementptr %"struct.rubinius::Class"* %ref_class552, i32 0, i32 4, !dbg !30
  %class_id554 = load i32* %class_id_pos553, !dbg !30
  %check_class_id555 = icmp eq i32 %class_id554, 77, !dbg !30
  br i1 %check_class_id555, label %correct_class550, label %continue545, !dbg !30

correct_class550:                                 ; preds = %check_class_id549
  %arg_float556 = bitcast %"struct.rubinius::Object"* %stack_load544 to %"struct.rubinius::Float"*, !dbg !30
  %arg.value_pos557 = getelementptr %"struct.rubinius::Float"* %arg_float556, i32 0, i32 1, !dbg !30
  %farg558 = load double* %arg.value_pos557, !dbg !30
  br label %continue559, !dbg !30

continue545:                                      ; preds = %check_class_id549, %correct_serial534
  %cast560 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %masked561 = and i64 %cast560, 1, !dbg !30
  %is_fixnum562 = icmp eq i64 %masked561, 1, !dbg !30
  br i1 %is_fixnum562, label %guarded_body563, label %class_fallback524, !dbg !30

guarded_body563:                                  ; preds = %continue545
  %as_int564 = ptrtoint %"struct.rubinius::Object"* %stack_load544 to i64, !dbg !30
  %ashr565 = ashr i64 %as_int564, 1, !dbg !30
  %73 = sitofp i64 %ashr565 to double, !dbg !30
  br label %continue559, !dbg !30

continue559:                                      ; preds = %guarded_body563, %correct_class550
  %rhs566 = phi double [ %farg558, %correct_class550 ], [ %73, %guarded_body563 ], !dbg !30
  %stack_pos567 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load568 = load %"struct.rubinius::Object"** %stack_pos567, !dbg !30
  %self_float569 = bitcast %"struct.rubinius::Object"* %stack_load568 to %"struct.rubinius::Float"*, !dbg !30
  %self.value_pos570 = getelementptr %"struct.rubinius::Float"* %self_float569, i32 0, i32 1, !dbg !30
  %fself571 = load double* %self.value_pos570, !dbg !30
  %float.mul = fmul double %fself571, %rhs566, !dbg !30
  %result572 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !30, !rbx-classid !35
  %74 = getelementptr %"struct.rubinius::Float"* %result572, i32 0, i32 1, !dbg !30
  store double %float.mul, double* %74, !dbg !30
  %75 = bitcast %"struct.rubinius::Float"* %result572 to %"struct.rubinius::Object"*, !dbg !30
  br label %continue526, !dbg !30

class_fallback524:                                ; preds = %continue545, %check_class_id532, %continue520
  %stack_pos573 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load574 = load %"struct.rubinius::Object"** %stack_pos573, !dbg !30
  store %"struct.rubinius::Object"* %stack_load574, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos575 = getelementptr %"struct.rubinius::Object"** %stack, i32 2, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos575, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const576 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207984 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos577 = getelementptr %"struct.rubinius::CallSite"* %cache_const576, i32 0, i32 2, !dbg !30
  %execute578 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos577, !dbg !30
  store i32 71, i32* %ip_pos, !dbg !30
  %call_site_execute579 = call %"struct.rubinius::Object"* %execute578(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const576, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check581 = icmp eq %"struct.rubinius::Object"* %call_site_execute579, null, !dbg !30
  br i1 %null_check581, label %bail_out, label %check_active580, !dbg !30

check_active580:                                  ; preds = %class_fallback524
  br label %continue526, !dbg !30

class_fallback584:                                ; preds = %poly_fallback662
  %stack_pos663 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load664 = load %"struct.rubinius::Object"** %stack_pos663, !dbg !30, !rbx-classid !31
  store %"struct.rubinius::Object"* %stack_load664, %"struct.rubinius::Object"** %out_args_recv, !dbg !30
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !30
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !30
  store i32 1, i32* %out_args_total, !dbg !30
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !30
  %stack_pos665 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  store %"struct.rubinius::Object"** %stack_pos665, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !30
  %cache_const666 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208008 to %"struct.rubinius::CallSite"**), !dbg !30
  %execute_pos667 = getelementptr %"struct.rubinius::CallSite"* %cache_const666, i32 0, i32 2, !dbg !30
  %execute668 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos667, !dbg !30
  store i32 74, i32* %ip_pos, !dbg !30
  %call_site_execute669 = call %"struct.rubinius::Object"* %execute668(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const666, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !30
  %null_check671 = icmp eq %"struct.rubinius::Object"* %call_site_execute669, null, !dbg !30
  br i1 %null_check671, label %bail_out, label %check_active670, !dbg !30

continue586:                                      ; preds = %check_active670, %merge
  %send_result672 = phi %"struct.rubinius::Object"* [ %poly_result, %merge ], [ %call_site_execute669, %check_active670 ], !dbg !30
  %stack_pos673 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  store %"struct.rubinius::Object"* %send_result672, %"struct.rubinius::Object"** %stack_pos673, !dbg !30
  %local_pos674 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !30
  %stack_pos675 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load676 = load %"struct.rubinius::Object"** %stack_pos675, !dbg !30
  store %"struct.rubinius::Object"* %stack_load676, %"struct.rubinius::Object"** %local_pos674, !dbg !30
  %local_pos677 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !39
  %local678 = load %"struct.rubinius::Object"** %local_pos677, !dbg !39, !rbx-classid !28
  %stack_pos679 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %stack_pos679, !dbg !39
  %stack_pos680 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos680, !dbg !39
  %stack_pos684 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load685 = load %"struct.rubinius::Object"** %stack_pos684, !dbg !39, !rbx-classid !28
  %stack_pos686 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  %stack_load687 = load %"struct.rubinius::Object"** %stack_pos686, !dbg !39, !rbx-classid !37
  %cast692 = ptrtoint %"struct.rubinius::Object"* %stack_load685 to i64, !dbg !39
  %cast693 = ptrtoint %"struct.rubinius::Object"* %stack_load687 to i64, !dbg !39
  %fixnums_anded694 = and i64 %cast692, %cast693, !dbg !39
  %masked695 = and i64 %fixnums_anded694, 1, !dbg !39
  %is_fixnum696 = icmp eq i64 %masked695, 1, !dbg !39
  br i1 %is_fixnum696, label %push_add688, label %class_fallback681, !dbg !39

poly_fallback:                                    ; preds = %continue526
  %stack_pos616 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load617 = load %"struct.rubinius::Object"** %stack_pos616, !dbg !30, !rbx-classid !31
  %cast618 = ptrtoint %"struct.rubinius::Object"* %stack_load617 to i64, !dbg !30
  %masked619 = and i64 %cast618, 3, !dbg !30
  %is_reference620 = icmp eq i64 %masked619, 0, !dbg !30
  br i1 %is_reference620, label %check_class_id621, label %poly_fallback615, !dbg !30

merge:                                            ; preds = %continue648, %cont598
  %poly_result = phi %"struct.rubinius::Object"* [ %result614, %cont598 ], [ %81, %continue648 ], !dbg !30
  br label %continue586, !dbg !30

push_add595:                                      ; preds = %continue526
  %as_int604 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !30
  %ashr605 = ashr i64 %as_int604, 1, !dbg !30
  %as_int606 = ptrtoint %"struct.rubinius::Object"* %stack_load594 to i64, !dbg !30
  %ashr607 = ashr i64 %as_int606, 1, !dbg !30
  %fixnum.add608 = add i64 %ashr605, %ashr607, !dbg !30
  %76 = icmp sle i64 %fixnum.add608, 4611686018427387903, !dbg !30
  %77 = icmp sge i64 %fixnum.add608, -4611686018427387903, !dbg !30
  %fits_fixnum609 = and i1 %76, %77, !dbg !30
  br i1 %fits_fixnum609, label %tagnow596, label %bignum597, !dbg !30

tagnow596:                                        ; preds = %push_add595
  %shl611 = shl i64 %fixnum.add608, 1, !dbg !30
  %or612 = or i64 %shl611, 1, !dbg !30
  %as_obj613 = inttoptr i64 %or612 to %"struct.rubinius::Object"*, !dbg !30
  br label %cont598, !dbg !30

bignum597:                                        ; preds = %push_add595
  %big_value610 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add608) #2, !dbg !30
  br label %cont598, !dbg !30

cont598:                                          ; preds = %tagnow596, %bignum597
  %result614 = phi %"struct.rubinius::Object"* [ %big_value610, %bignum597 ], [ %as_obj613, %tagnow596 ], !dbg !30
  br label %merge, !dbg !30

check_class_id621:                                ; preds = %poly_fallback
  %class_pos624 = getelementptr %"struct.rubinius::Object"* %stack_load617, i32 0, i32 0, i32 1, !dbg !30
  %ref_class625 = load %"struct.rubinius::Class"** %class_pos624, !dbg !30
  %class_id_pos626 = getelementptr %"struct.rubinius::Class"* %ref_class625, i32 0, i32 4, !dbg !30
  %class_id627 = load i32* %class_id_pos626, !dbg !30
  %check_class_id628 = icmp eq i32 %class_id627, 77, !dbg !30
  br i1 %check_class_id628, label %correct_class622, label %poly_fallback615, !dbg !30

correct_class622:                                 ; preds = %check_class_id621
  %serial_id_pos629 = getelementptr %"struct.rubinius::Class"* %ref_class625, i32 0, i32 5, !dbg !30
  %serial_id630 = load i32* %serial_id_pos629, !dbg !30
  %check_serial_id631 = icmp eq i32 %serial_id630, 224, !dbg !30
  br i1 %check_serial_id631, label %correct_serial623, label %serial_fallback585, !dbg !30

correct_serial623:                                ; preds = %correct_class622
  %stack_pos632 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !30
  %stack_load633 = load %"struct.rubinius::Object"** %stack_pos632, !dbg !30
  %cast635 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %masked636 = and i64 %cast635, 3, !dbg !30
  %is_reference637 = icmp eq i64 %masked636, 0, !dbg !30
  br i1 %is_reference637, label %check_class_id638, label %continue634, !dbg !30

serial_fallback585:                               ; preds = %correct_class622
  store i32 74, i32* %ip_pos, !dbg !30
  %78 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !30
  br label %return_pad, !dbg !30

check_class_id638:                                ; preds = %correct_serial623
  %class_pos640 = getelementptr %"struct.rubinius::Object"* %stack_load633, i32 0, i32 0, i32 1, !dbg !30
  %ref_class641 = load %"struct.rubinius::Class"** %class_pos640, !dbg !30
  %class_id_pos642 = getelementptr %"struct.rubinius::Class"* %ref_class641, i32 0, i32 4, !dbg !30
  %class_id643 = load i32* %class_id_pos642, !dbg !30
  %check_class_id644 = icmp eq i32 %class_id643, 77, !dbg !30
  br i1 %check_class_id644, label %correct_class639, label %continue634, !dbg !30

correct_class639:                                 ; preds = %check_class_id638
  %arg_float645 = bitcast %"struct.rubinius::Object"* %stack_load633 to %"struct.rubinius::Float"*, !dbg !30
  %arg.value_pos646 = getelementptr %"struct.rubinius::Float"* %arg_float645, i32 0, i32 1, !dbg !30
  %farg647 = load double* %arg.value_pos646, !dbg !30
  br label %continue648, !dbg !30

continue634:                                      ; preds = %check_class_id638, %correct_serial623
  %cast649 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %masked650 = and i64 %cast649, 1, !dbg !30
  %is_fixnum651 = icmp eq i64 %masked650, 1, !dbg !30
  br i1 %is_fixnum651, label %guarded_body652, label %poly_fallback615, !dbg !30

guarded_body652:                                  ; preds = %continue634
  %as_int653 = ptrtoint %"struct.rubinius::Object"* %stack_load633 to i64, !dbg !30
  %ashr654 = ashr i64 %as_int653, 1, !dbg !30
  %79 = sitofp i64 %ashr654 to double, !dbg !30
  br label %continue648, !dbg !30

continue648:                                      ; preds = %guarded_body652, %correct_class639
  %rhs655 = phi double [ %farg647, %correct_class639 ], [ %79, %guarded_body652 ], !dbg !30
  %stack_pos656 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !30
  %stack_load657 = load %"struct.rubinius::Object"** %stack_pos656, !dbg !30, !rbx-classid !31
  %self_float658 = bitcast %"struct.rubinius::Object"* %stack_load657 to %"struct.rubinius::Float"*, !dbg !30
  %self.value_pos659 = getelementptr %"struct.rubinius::Float"* %self_float658, i32 0, i32 1, !dbg !30
  %fself660 = load double* %self.value_pos659, !dbg !30
  %float.add = fadd double %fself660, %rhs655, !dbg !30
  %result661 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !30, !rbx-classid !35
  %80 = getelementptr %"struct.rubinius::Float"* %result661, i32 0, i32 1, !dbg !30
  store double %float.add, double* %80, !dbg !30
  %81 = bitcast %"struct.rubinius::Float"* %result661 to %"struct.rubinius::Object"*, !dbg !30
  br label %merge, !dbg !30

poly_fallback615:                                 ; preds = %continue634, %check_class_id621, %poly_fallback
  br label %poly_fallback662, !dbg !30

poly_fallback662:                                 ; preds = %poly_fallback615
  br label %class_fallback584, !dbg !30

check_active670:                                  ; preds = %class_fallback584
  br label %continue586, !dbg !30

class_fallback681:                                ; preds = %continue586
  %stack_pos708 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load709 = load %"struct.rubinius::Object"** %stack_pos708, !dbg !39, !rbx-classid !28
  store %"struct.rubinius::Object"* %stack_load709, %"struct.rubinius::Object"** %out_args_recv, !dbg !39
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !39
  store i32 1, i32* %out_args_total, !dbg !39
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !39
  %stack_pos710 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !39
  store %"struct.rubinius::Object"** %stack_pos710, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !39
  %cache_const711 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208080 to %"struct.rubinius::CallSite"**), !dbg !39
  %execute_pos712 = getelementptr %"struct.rubinius::CallSite"* %cache_const711, i32 0, i32 2, !dbg !39
  %execute713 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos712, !dbg !39
  store i32 83, i32* %ip_pos, !dbg !39
  %call_site_execute714 = call %"struct.rubinius::Object"* %execute713(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const711, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !39
  %null_check716 = icmp eq %"struct.rubinius::Object"* %call_site_execute714, null, !dbg !39
  br i1 %null_check716, label %bail_out, label %check_active715, !dbg !39

serial_fallback682:                               ; No predecessors!
  store i32 83, i32* %ip_pos, !dbg !39
  %82 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 83, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !39
  br label %return_pad, !dbg !39

continue683:                                      ; preds = %check_active715, %cont691
  %send_result717 = phi %"struct.rubinius::Object"* [ %result707, %cont691 ], [ %call_site_execute714, %check_active715 ], !dbg !39
  %stack_pos718 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %stack_pos718, !dbg !39
  %local_pos719 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 4, !dbg !39
  %stack_pos720 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !39
  %stack_load721 = load %"struct.rubinius::Object"** %stack_pos720, !dbg !39
  store %"struct.rubinius::Object"* %stack_load721, %"struct.rubinius::Object"** %local_pos719, !dbg !39
  %83 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !39
  %vm_jit = load %"struct.rubinius::VMJIT"** %83, !dbg !39
  %84 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i32 0, i32 5, !dbg !39
  %check_interrupts = load i8* %84, !dbg !39
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), !dbg !39
  %or723 = or i8 %check_interrupts, %check_global_interrupts, !dbg !39
  %needs_interrupts = icmp eq i8 %or723, 0, !dbg !39
  br i1 %needs_interrupts, label %continue722, label %interrupts, !dbg !39

push_add688:                                      ; preds = %continue586
  %as_int697 = ptrtoint %"struct.rubinius::Object"* %stack_load685 to i64, !dbg !39
  %ashr698 = ashr i64 %as_int697, 1, !dbg !39
  %as_int699 = ptrtoint %"struct.rubinius::Object"* %stack_load687 to i64, !dbg !39
  %ashr700 = ashr i64 %as_int699, 1, !dbg !39
  %fixnum.add701 = add i64 %ashr698, %ashr700, !dbg !39
  %85 = icmp sle i64 %fixnum.add701, 4611686018427387903, !dbg !39
  %86 = icmp sge i64 %fixnum.add701, -4611686018427387903, !dbg !39
  %fits_fixnum702 = and i1 %85, %86, !dbg !39
  br i1 %fits_fixnum702, label %tagnow689, label %bignum690, !dbg !39

tagnow689:                                        ; preds = %push_add688
  %shl704 = shl i64 %fixnum.add701, 1, !dbg !39
  %or705 = or i64 %shl704, 1, !dbg !39
  %as_obj706 = inttoptr i64 %or705 to %"struct.rubinius::Object"*, !dbg !39
  br label %cont691, !dbg !39

bignum690:                                        ; preds = %push_add688
  %big_value703 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add701) #2, !dbg !39
  br label %cont691, !dbg !39

cont691:                                          ; preds = %tagnow689, %bignum690
  %result707 = phi %"struct.rubinius::Object"* [ %big_value703, %bignum690 ], [ %as_obj706, %tagnow689 ], !dbg !39
  br label %continue683, !dbg !39

check_active715:                                  ; preds = %class_fallback681
  br label %continue683, !dbg !39

continue722:                                      ; preds = %continue683
  br label %done, !dbg !39

interrupts:                                       ; preds = %continue683
  store i32 89, i32* %ip_pos, !dbg !39
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !39
  %null_check726 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !39
  br i1 %null_check726, label %bail_out, label %check_active725, !dbg !39

done:                                             ; preds = %continue724, %continue722
  br label %ip44, !dbg !39

continue724:                                      ; preds = %check_active725
  br label %done, !dbg !39

check_active725:                                  ; preds = %interrupts
  br label %continue724, !dbg !39

continue727:                                      ; No predecessors!
  br label %ip92, !dbg !39

ip92:                                             ; preds = %continue727, %continue111
  %stack_pos728 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos728, !dbg !40
  %local_pos729 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !41
  %local730 = load %"struct.rubinius::Object"** %local_pos729, !dbg !41, !rbx-classid !36
  %stack_pos731 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack_pos731, !dbg !41
  %local_pos732 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 3, !dbg !41
  %local733 = load %"struct.rubinius::Object"** %local_pos732, !dbg !41, !rbx-classid !31
  %stack_pos734 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !41
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos734, !dbg !41
  %stack_pos738 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  %stack_load739 = load %"struct.rubinius::Object"** %stack_pos738, !dbg !41, !rbx-classid !36
  %cast740 = ptrtoint %"struct.rubinius::Object"* %stack_load739 to i64, !dbg !41
  %masked741 = and i64 %cast740, 3, !dbg !41
  %is_reference742 = icmp eq i64 %masked741, 0, !dbg !41
  br i1 %is_reference742, label %check_class_id743, label %class_fallback735, !dbg !41

continue737:                                      ; preds = %continue834
  %local_pos838 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !42
  %local839 = load %"struct.rubinius::Object"** %local_pos838, !dbg !42, !rbx-classid !24
  %stack_pos840 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %stack_pos840, !dbg !42
  %stack_pos841 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos841, !dbg !42
  %stack_pos845 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load846 = load %"struct.rubinius::Object"** %stack_pos845, !dbg !42, !rbx-classid !24
  %stack_pos847 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  %stack_load848 = load %"struct.rubinius::Object"** %stack_pos847, !dbg !42, !rbx-classid !37
  %cast853 = ptrtoint %"struct.rubinius::Object"* %stack_load846 to i64, !dbg !42
  %cast854 = ptrtoint %"struct.rubinius::Object"* %stack_load848 to i64, !dbg !42
  %fixnums_anded855 = and i64 %cast853, %cast854, !dbg !42
  %masked856 = and i64 %fixnums_anded855, 1, !dbg !42
  %is_fixnum857 = icmp eq i64 %masked856, 1, !dbg !42
  br i1 %is_fixnum857, label %push_add849, label %class_fallback842, !dbg !42

check_class_id743:                                ; preds = %ip92
  %class_pos746 = getelementptr %"struct.rubinius::Object"* %stack_load739, i32 0, i32 0, i32 1, !dbg !41
  %ref_class747 = load %"struct.rubinius::Class"** %class_pos746, !dbg !41
  %class_id_pos748 = getelementptr %"struct.rubinius::Class"* %ref_class747, i32 0, i32 4, !dbg !41
  %class_id749 = load i32* %class_id_pos748, !dbg !41
  %check_class_id750 = icmp eq i32 %class_id749, 6, !dbg !41
  br i1 %check_class_id750, label %correct_class744, label %class_fallback735, !dbg !41

correct_class744:                                 ; preds = %check_class_id743
  %serial_id_pos751 = getelementptr %"struct.rubinius::Class"* %ref_class747, i32 0, i32 5, !dbg !41
  %serial_id752 = load i32* %serial_id_pos751, !dbg !41
  %check_serial_id753 = icmp eq i32 %serial_id752, 249, !dbg !41
  br i1 %check_serial_id753, label %correct_serial745, label %serial_fallback736, !dbg !41

class_fallback735:                                ; preds = %check_class_id743, %ip92
  store i32 98, i32* %ip_pos, !dbg !41
  %87 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 0), !dbg !41
  br label %return_pad, !dbg !41

correct_serial745:                                ; preds = %correct_class744
  %stack_pos756 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !41
  %stack_load757 = load %"struct.rubinius::Object"** %stack_pos756, !dbg !41, !rbx-classid !31
  %stack_pos758 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  %stack_load759 = load %"struct.rubinius::Object"** %stack_pos758, !dbg !41, !rbx-classid !36
  br label %inline_entry760, !dbg !41

serial_fallback736:                               ; preds = %correct_class744
  store i32 98, i32* %ip_pos, !dbg !41
  %88 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !41
  br label %return_pad, !dbg !41

inline_entry760:                                  ; preds = %correct_serial745
  %call_frame763 = bitcast %"struct.rubinius::Object"** %cfstk762 to %"struct.rubinius::CallFrame"*, !dbg !43
  %stack764 = getelementptr %"struct.rubinius::Object"** %cfstk762, i32 9, !dbg !43
  %vars766 = bitcast %"struct.rubinius::Object"** %var_mem765 to %"struct.rubinius::StackVariables"*, !dbg !43
  %89 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 0, !dbg !43
  store %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"** %89, !dbg !43
  %90 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 2, !dbg !43
  store i8* inttoptr (i64 140281081076016 to i8*), i8** %90, !dbg !43
  %compiled_code767 = load %"struct.rubinius::CompiledCode"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081076016 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 0), !dbg !43
  %91 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 3, !dbg !43
  store %"struct.rubinius::CompiledCode"* %compiled_code767, %"struct.rubinius::CompiledCode"** %91, !dbg !43
  %constant_scope_pos768 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code767, i32 0, i32 13, !dbg !43
  %constant_scope769 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos768, !dbg !43
  %92 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 1, !dbg !43
  store %"struct.rubinius::ConstantScope"* %constant_scope769, %"struct.rubinius::ConstantScope"** %92, !dbg !43
  %93 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 4, !dbg !43
  store i32 12, i32* %93, !dbg !43
  %94 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 5, !dbg !43
  store i32 0, i32* %94, !dbg !43
  %95 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 8, !dbg !43
  store %"struct.rubinius::StackVariables"* %vars766, %"struct.rubinius::StackVariables"** %95, !dbg !43
  %stack_pos770 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos770, !dbg !43
  %stack_pos771 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos771, !dbg !43
  %stack_pos772 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos772, !dbg !43
  %stack_pos773 = getelementptr %"struct.rubinius::Object"** %stack764, i32 3, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos773, !dbg !43
  %module774 = load %"struct.rubinius::Module"** getelementptr (%"struct.rubinius::jit::RuntimeData"* inttoptr (i64 140281081076016 to %"struct.rubinius::jit::RuntimeData"*), i32 0, i32 2), !dbg !43
  %96 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 0, !dbg !43
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %96, !dbg !43
  %97 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !43
  store %"struct.rubinius::Object"* %stack_load759, %"struct.rubinius::Object"** %97, !dbg !43
  %98 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 4, !dbg !43
  store %"struct.rubinius::Module"* %module774, %"struct.rubinius::Module"** %98, !dbg !43
  %99 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 3, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %99, !dbg !43
  %100 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 1, !dbg !43
  store %"struct.rubinius::VariableScope"* null, %"struct.rubinius::VariableScope"** %100, !dbg !43
  %101 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 5, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %101, !dbg !43
  %local_pos775 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %local_pos775, !dbg !43
  %local_pos776 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !43
  store %"struct.rubinius::Object"* %stack_load757, %"struct.rubinius::Object"** %local_pos776, !dbg !43
  br label %method_body761, !dbg !43

bail_out777:                                      ; preds = %class_fallback796, %merge804
  %rth778 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763), !dbg !43
  br i1 %rth778, label %ret_raise_val779, label %ret_null780, !dbg !43

ret_raise_val779:                                 ; preds = %bail_out777
  %crv781 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !43
  br label %return_pad754, !dbg !43

ret_null780:                                      ; preds = %bail_out777
  br label %return_pad754, !dbg !43

method_body761:                                   ; preds = %inline_entry760
  %ip_pos782 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i32 0, i32 5, !dbg !43
  %out_args_name783 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 0, !dbg !43
  %out_args_recv784 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 1, !dbg !43
  %out_args_block785 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 2, !dbg !43
  %out_args_total786 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 3, !dbg !43
  %out_args_arguments787 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 4, !dbg !43
  %out_args_container788 = getelementptr %"struct.rubinius::Arguments"* %out_args, i32 0, i32 5, !dbg !43
  %102 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !44
  %self789 = load %"struct.rubinius::Object"** %102, !dbg !44, !rbx-classid !45
  %stack_pos790 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %self789, %"struct.rubinius::Object"** %stack_pos790, !dbg !44
  %self_pos = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !44
  %self791 = load %"struct.rubinius::Object"** %self_pos, !dbg !44
  %obj_array = bitcast %"struct.rubinius::Object"* %self791 to %"struct.rubinius::Object"**, !dbg !44
  %field_pos = getelementptr %"struct.rubinius::Object"** %obj_array, i32 3, !dbg !44
  %field = load %"struct.rubinius::Object"** %field_pos, !dbg !44
  %stack_pos792 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos792, !dbg !44
  %local_pos793 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 6, i32 0, !dbg !44
  %local794 = load %"struct.rubinius::Object"** %local_pos793, !dbg !44, !rbx-classid !32
  %stack_pos795 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !44
  store %"struct.rubinius::Object"* %local794, %"struct.rubinius::Object"** %stack_pos795, !dbg !44
  %stack_pos799 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load800 = load %"struct.rubinius::Object"** %stack_pos799, !dbg !44, !rbx-classid !45
  %stack_pos801 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load802 = load %"struct.rubinius::Object"** %stack_pos801, !dbg !44, !rbx-classid !45
  %stack_pos806 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load807 = load %"struct.rubinius::Object"** %stack_pos806, !dbg !44, !rbx-classid !45
  %stack_pos808 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load809 = load %"struct.rubinius::Object"** %stack_pos808, !dbg !44, !rbx-classid !45
  %stack_pos810 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  %stack_load811 = load %"struct.rubinius::Object"** %stack_pos810, !dbg !44
  %stack_pos812 = getelementptr %"struct.rubinius::Object"** %stack764, i32 2, !dbg !44
  %stack_load813 = load %"struct.rubinius::Object"** %stack_pos812, !dbg !44, !rbx-classid !32
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_aset(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Object"* %stack_load809, %"struct.rubinius::Object"* %stack_load811, %"struct.rubinius::Object"* %stack_load813) #2, !dbg !44
  %ptr2int = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !44
  %103 = icmp eq i64 %ptr2int, 34, !dbg !44
  br i1 %103, label %poly_fallback803, label %continue814, !dbg !44

class_fallback796:                                ; preds = %poly_fallback815
  %stack_pos819 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  %stack_load820 = load %"struct.rubinius::Object"** %stack_pos819, !dbg !44, !rbx-classid !45
  store %"struct.rubinius::Object"* %stack_load820, %"struct.rubinius::Object"** %out_args_recv784, !dbg !44
  store %"struct.rubinius::Symbol"* inttoptr (i64 30886 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name783, !dbg !44
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block785, !dbg !44
  store i32 2, i32* %out_args_total786, !dbg !44
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container788, !dbg !44
  %stack_pos821 = getelementptr %"struct.rubinius::Object"** %stack764, i32 1, !dbg !44
  store %"struct.rubinius::Object"** %stack_pos821, %"struct.rubinius::Object"*** %out_args_arguments787, !dbg !44
  %cache_const822 = load %"struct.rubinius::CallSite"** inttoptr (i64 24569320 to %"struct.rubinius::CallSite"**), !dbg !44
  %execute_pos823 = getelementptr %"struct.rubinius::CallSite"* %cache_const822, i32 0, i32 2, !dbg !44
  %execute824 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos823, !dbg !44
  store i32 6, i32* %ip_pos782, !dbg !44
  %call_site_execute825 = call %"struct.rubinius::Object"* %execute824(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const822, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Arguments"* %out_args), !dbg !44
  %null_check827 = icmp eq %"struct.rubinius::Object"* %call_site_execute825, null, !dbg !44
  br i1 %null_check827, label %bail_out777, label %check_active826, !dbg !44

serial_fallback797:                               ; No predecessors!
  store i32 6, i32* %ip_pos782, !dbg !44
  %104 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, i32 6, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !44
  br label %return_pad754, !dbg !44

continue798:                                      ; preds = %check_active826, %continue816
  %send_result828 = phi %"struct.rubinius::Object"* [ %poly_result805, %continue816 ], [ %call_site_execute825, %check_active826 ], !dbg !44
  %stack_pos829 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !44
  store %"struct.rubinius::Object"* %send_result828, %"struct.rubinius::Object"** %stack_pos829, !dbg !44
  %105 = getelementptr %"struct.rubinius::StackVariables"* %vars766, i32 0, i32 2, !dbg !46
  %self830 = load %"struct.rubinius::Object"** %105, !dbg !46, !rbx-classid !45
  %stack_pos831 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !46
  store %"struct.rubinius::Object"* %self830, %"struct.rubinius::Object"** %stack_pos831, !dbg !46
  %stack_pos832 = getelementptr %"struct.rubinius::Object"** %stack764, i32 0, !dbg !46
  %stack_load833 = load %"struct.rubinius::Object"** %stack_pos832, !dbg !46, !rbx-classid !45
  br label %return_pad754, !dbg !46

return_pad754:                                    ; preds = %continue798, %serial_fallback797, %ret_raise_val779, %ret_null780
  %return_phi755 = phi %"struct.rubinius::Object"* [ null, %ret_null780 ], [ %crv781, %ret_raise_val779 ], [ %104, %serial_fallback797 ], [ %stack_load833, %continue798 ]
  %null_check836 = icmp eq %"struct.rubinius::Object"* %return_phi755, null, !dbg !41
  br i1 %null_check836, label %bail_out, label %check_active835, !dbg !41

poly_fallback803:                                 ; preds = %method_body761
  br label %poly_fallback815, !dbg !44

merge804:                                         ; preds = %continue814
  %poly_result805 = phi %"struct.rubinius::Object"* [ %prim_value, %continue814 ], !dbg !44
  %null_check818 = icmp eq %"struct.rubinius::Object"* %poly_result805, null, !dbg !44
  br i1 %null_check818, label %bail_out777, label %check_active817, !dbg !44

continue814:                                      ; preds = %method_body761
  br label %merge804, !dbg !44

poly_fallback815:                                 ; preds = %poly_fallback803
  br label %class_fallback796, !dbg !44

continue816:                                      ; preds = %check_active817
  br label %continue798, !dbg !44

check_active817:                                  ; preds = %merge804
  br label %continue816, !dbg !44

check_active826:                                  ; preds = %class_fallback796
  br label %continue798, !dbg !44

continue834:                                      ; preds = %check_active835
  %stack_pos837 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !41
  store %"struct.rubinius::Object"* %return_phi755, %"struct.rubinius::Object"** %stack_pos837, !dbg !41
  br label %continue737, !dbg !41

check_active835:                                  ; preds = %return_pad754
  br label %continue834, !dbg !41

class_fallback842:                                ; preds = %continue737
  %stack_pos869 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load870 = load %"struct.rubinius::Object"** %stack_pos869, !dbg !42, !rbx-classid !24
  store %"struct.rubinius::Object"* %stack_load870, %"struct.rubinius::Object"** %out_args_recv, !dbg !42
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, !dbg !42
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, !dbg !42
  store i32 1, i32* %out_args_total, !dbg !42
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, !dbg !42
  %stack_pos871 = getelementptr %"struct.rubinius::Object"** %stack, i32 1, !dbg !42
  store %"struct.rubinius::Object"** %stack_pos871, %"struct.rubinius::Object"*** %out_args_arguments, !dbg !42
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208256 to %"struct.rubinius::CallSite"**), !dbg !42
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i32 0, i32 2, !dbg !42
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, !dbg !42
  store i32 105, i32* %ip_pos, !dbg !42
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !42
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !42
  br i1 %null_check877, label %bail_out, label %check_active876, !dbg !42

serial_fallback843:                               ; No predecessors!
  store i32 105, i32* %ip_pos, !dbg !42
  %106 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 105, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !42
  br label %return_pad, !dbg !42

continue844:                                      ; preds = %check_active876, %cont852
  %send_result878 = phi %"struct.rubinius::Object"* [ %result868, %cont852 ], [ %call_site_execute875, %check_active876 ], !dbg !42
  %stack_pos879 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %stack_pos879, !dbg !42
  %local_pos880 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 2, !dbg !42
  %stack_pos881 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !42
  %stack_load882 = load %"struct.rubinius::Object"** %stack_pos881, !dbg !42
  store %"struct.rubinius::Object"* %stack_load882, %"struct.rubinius::Object"** %local_pos880, !dbg !42
  %107 = getelementptr %"struct.rubinius::State"* %state, i32 0, i32 1, !dbg !42
  %vm_jit886 = load %"struct.rubinius::VMJIT"** %107, !dbg !42
  %108 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit886, i32 0, i32 5, !dbg !42
  %check_interrupts887 = load i8* %108, !dbg !42
  %check_global_interrupts888 = load i8* inttoptr (i64 22553854 to i8*), !dbg !42
  %or889 = or i8 %check_interrupts887, %check_global_interrupts888, !dbg !42
  %needs_interrupts890 = icmp eq i8 %or889, 0, !dbg !42
  br i1 %needs_interrupts890, label %continue883, label %interrupts884, !dbg !42

push_add849:                                      ; preds = %continue737
  %as_int858 = ptrtoint %"struct.rubinius::Object"* %stack_load846 to i64, !dbg !42
  %ashr859 = ashr i64 %as_int858, 1, !dbg !42
  %as_int860 = ptrtoint %"struct.rubinius::Object"* %stack_load848 to i64, !dbg !42
  %ashr861 = ashr i64 %as_int860, 1, !dbg !42
  %fixnum.add862 = add i64 %ashr859, %ashr861, !dbg !42
  %109 = icmp sle i64 %fixnum.add862, 4611686018427387903, !dbg !42
  %110 = icmp sge i64 %fixnum.add862, -4611686018427387903, !dbg !42
  %fits_fixnum863 = and i1 %109, %110, !dbg !42
  br i1 %fits_fixnum863, label %tagnow850, label %bignum851, !dbg !42

tagnow850:                                        ; preds = %push_add849
  %shl865 = shl i64 %fixnum.add862, 1, !dbg !42
  %or866 = or i64 %shl865, 1, !dbg !42
  %as_obj867 = inttoptr i64 %or866 to %"struct.rubinius::Object"*, !dbg !42
  br label %cont852, !dbg !42

bignum851:                                        ; preds = %push_add849
  %big_value864 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add862) #2, !dbg !42
  br label %cont852, !dbg !42

cont852:                                          ; preds = %tagnow850, %bignum851
  %result868 = phi %"struct.rubinius::Object"* [ %big_value864, %bignum851 ], [ %as_obj867, %tagnow850 ], !dbg !42
  br label %continue844, !dbg !42

check_active876:                                  ; preds = %class_fallback842
  br label %continue844, !dbg !42

continue883:                                      ; preds = %continue844
  br label %done885, !dbg !42

interrupts884:                                    ; preds = %continue844
  store i32 111, i32* %ip_pos, !dbg !42
  %ci891 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !42
  %null_check894 = icmp eq %"struct.rubinius::Object"* %ci891, null, !dbg !42
  br i1 %null_check894, label %bail_out, label %check_active893, !dbg !42

done885:                                          ; preds = %continue892, %continue883
  br label %ip18, !dbg !42

continue892:                                      ; preds = %check_active893
  br label %done885, !dbg !42

check_active893:                                  ; preds = %interrupts884
  br label %continue892, !dbg !42

continue895:                                      ; No predecessors!
  br label %ip114, !dbg !42

ip114:                                            ; preds = %continue895, %continue40
  %stack_pos896 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos896, !dbg !40
  %local_pos897 = getelementptr %"struct.rubinius::StackVariables"* %vars, i32 0, i32 6, i32 1, !dbg !19
  %local898 = load %"struct.rubinius::Object"** %local_pos897, !dbg !19, !rbx-classid !36
  %stack_pos899 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack_pos899, !dbg !19
  %stack_pos900 = getelementptr %"struct.rubinius::Object"** %stack, i32 0, !dbg !19
  %stack_load901 = load %"struct.rubinius::Object"** %stack_pos900, !dbg !19, !rbx-classid !36
  br label %return_pad, !dbg !19

return_pad:                                       ; preds = %ip114, %serial_fallback843, %serial_fallback736, %class_fallback735, %serial_fallback682, %serial_fallback585, %serial_fallback525, %serial_fallback151, %class_fallback150, %serial_fallback110, %serial_fallback, %ret_raise_val, %ret_null, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ null, %ret_null ], [ %crv, %ret_raise_val ], [ %25, %serial_fallback ], [ %31, %serial_fallback110 ], [ %34, %class_fallback150 ], [ %35, %serial_fallback151 ], [ %72, %serial_fallback525 ], [ %78, %serial_fallback585 ], [ %82, %serial_fallback682 ], [ %87, %class_fallback735 ], [ %88, %serial_fallback736 ], [ %106, %serial_fallback843 ], [ %stack_load901, %ip114 ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !19

ret_null902:                                      ; preds = %prologue_check
  ret %"struct.rubinius::Object"* null, !dbg !19

prologue_check:                                   ; preds = %bottom
  %ci907 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  %111 = icmp eq %"struct.rubinius::Object"* %ci907, null, !dbg !19
  br i1 %111, label %ret_null902, label %method_body, !dbg !19
}

[[[ LLVM Optimized IR: _X_Object#vector_times_array_transposed@4 ]]]

define %"struct.rubinius::Object"* @"_X_Object#vector_times_array_transposed@4"(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Executable"* %exec, %"struct.rubinius::Module"* %mod, %"struct.rubinius::Arguments"* %args) {
entry:
  %out_args = alloca %"struct.rubinius::Arguments", align 8, !dbg !17
  %cfstk908 = alloca [18 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %var_mem909 = alloca [11 x %"struct.rubinius::Object"*], align 8, !dbg !17
  %call_frame = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::CallFrame"*, !dbg !17
  %stack = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 9, !dbg !17
  %total_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 3, !dbg !17
  %arg.total = load i32* %total_pos, align 4, !dbg !17
  %arg_cmp = icmp eq i32 %arg.total, 1, !dbg !17
  %cfstk167910 = alloca [15 x %"struct.rubinius::Object"*], align 8
  %var_mem170911 = alloca [8 x %"struct.rubinius::Object"*], align 8
  %cfstk762912 = alloca [13 x %"struct.rubinius::Object"*], align 8
  %var_mem765913 = alloca [7 x %"struct.rubinius::Object"*], align 8
  br i1 %arg_cmp, label %import_args, label %arg_error, !dbg !17

arg_error:                                        ; preds = %entry
  %ret = call %"struct.rubinius::Object"* @rbx_arg_error(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %previous, %"struct.rubinius::Arguments"* %args, i32 1), !dbg !17
  br label %return_pad, !dbg !17

import_args:                                      ; preds = %entry
  %0 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 3, !dbg !17
  %1 = getelementptr inbounds [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 0, !dbg !17
  %previous.c = bitcast %"struct.rubinius::CallFrame"* %previous to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %previous.c, %"struct.rubinius::Object"** %1, align 8, !dbg !17
  %2 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 8, !dbg !17
  %args.c = bitcast %"struct.rubinius::Arguments"* %args to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %args.c, %"struct.rubinius::Object"** %2, align 8, !dbg !17
  %3 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %3, align 8, !dbg !17
  %compiled_code.c = getelementptr inbounds %"struct.rubinius::Executable"* %exec, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %compiled_code.c, %"struct.rubinius::Object"** %0, align 8, !dbg !17
  %constant_scope_pos = getelementptr %"struct.rubinius::Executable"* %exec, i64 2, i32 2, !dbg !17
  %4 = load %"struct.rubinius::Fixnum"** %constant_scope_pos, align 8, !dbg !17
  %5 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 1, !dbg !17
  %constant_scope.c = bitcast %"struct.rubinius::Fixnum"* %4 to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %constant_scope.c, %"struct.rubinius::Object"** %5, align 8, !dbg !17
  %6 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 4, !dbg !17
  %7 = bitcast %"struct.rubinius::Object"** %6 to i32*, !dbg !17
  store i32 40, i32* %7, align 8, !dbg !17
  %8 = getelementptr %"struct.rubinius::CallFrame"* %call_frame, i64 0, i32 5, !dbg !17
  store i32 0, i32* %8, align 4, !dbg !17
  %9 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 7, !dbg !17
  %vars.c = bitcast [11 x %"struct.rubinius::Object"*]* %var_mem909 to %"struct.rubinius::Object"*, !dbg !17
  store %"struct.rubinius::Object"* %vars.c, %"struct.rubinius::Object"** %9, align 8, !dbg !17
  %10 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 140281080991024 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %10, align 8, !dbg !17
  br label %stack_nil, !dbg !17

stack_nil:                                        ; preds = %stack_nil, %import_args
  %counter_alloca.0 = phi i32 [ 0, %import_args ], [ %added, %stack_nil ]
  %11 = sext i32 %counter_alloca.0 to i64, !dbg !17
  %stack.sum = add i64 %11, 9, !dbg !17
  %stack_pos = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 %stack.sum, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos, align 8, !dbg !17
  %added = add i32 %counter_alloca.0, 1, !dbg !17
  %loop_check = icmp eq i32 %added, 9, !dbg !17
  br i1 %loop_check, label %bottom, label %stack_nil, !dbg !17

bottom:                                           ; preds = %stack_nil
  %12 = getelementptr inbounds [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 0, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %12, align 8, !dbg !17
  %13 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 1, !dbg !17
  %args.recv = load %"struct.rubinius::Object"** %13, align 8, !dbg !17, !rbx-classid !18
  %14 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 2, !dbg !17
  store %"struct.rubinius::Object"* %args.recv, %"struct.rubinius::Object"** %14, align 8, !dbg !17
  %15 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 4, !dbg !17
  %mod.c = getelementptr inbounds %"struct.rubinius::Module"* %mod, i64 0, i32 0, !dbg !17
  store %"struct.rubinius::Object"* %mod.c, %"struct.rubinius::Object"** %15, align 8, !dbg !17
  %16 = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 2, !dbg !17
  %args.block = load %"struct.rubinius::Object"** %16, align 8, !dbg !17
  %17 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 3, !dbg !17
  store %"struct.rubinius::Object"* %args.block, %"struct.rubinius::Object"** %17, align 8, !dbg !17
  %18 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 1, !dbg !17
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %18, align 8, !dbg !17
  %19 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 5, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %19, align 8, !dbg !17
  %20 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 6, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %20, align 8, !dbg !17
  %21 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 7, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %21, align 8, !dbg !17
  %22 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 8, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %22, align 8, !dbg !17
  %23 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 9, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %23, align 8, !dbg !17
  %24 = getelementptr [11 x %"struct.rubinius::Object"*]* %var_mem909, i64 0, i64 10, !dbg !17
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %24, align 8, !dbg !17
  %arg_ary_pos = getelementptr %"struct.rubinius::Arguments"* %args, i64 0, i32 4, !dbg !17
  %arg_ary = load %"struct.rubinius::Object"*** %arg_ary_pos, align 8, !dbg !17
  %arg_val = load %"struct.rubinius::Object"** %arg_ary, align 8, !dbg !17
  store %"struct.rubinius::Object"* %arg_val, %"struct.rubinius::Object"** %20, align 8, !dbg !17
  %25 = getelementptr %"struct.rubinius::State"* %state, i64 0, i32 1, !dbg !19
  %vm_jit903 = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !19
  %26 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i64 0, i32 1, !dbg !19
  %stack_limit = load i64* %26, align 8, !dbg !19
  %stack_end = ptrtoint [18 x %"struct.rubinius::Object"*]* %cfstk908 to i64, !dbg !19
  %27 = icmp ult i64 %stack_end, %stack_limit, !dbg !19
  %28 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit903, i64 0, i32 5, !dbg !19
  %check_interrupts904 = load i8* %28, align 1, !dbg !19
  %check_global_interrupts905 = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !19
  %has_interrupts = or i8 %check_global_interrupts905, %check_interrupts904, !dbg !19
  %needs_interrupts906 = icmp ne i8 %has_interrupts, 0, !dbg !19
  %needs_check = or i1 %needs_interrupts906, %27, !dbg !19
  br i1 %needs_check, label %prologue_check, label %method_body, !dbg !19

bail_out:                                         ; preds = %interrupts884, %class_fallback842, %return_pad754, %interrupts, %class_fallback681, %poly_fallback662, %class_fallback524, %check_active501, %return_pad158, %class_fallback109, %use_call96, %class_fallback, %use_call
  %rth = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !17
  br i1 %rth, label %ret_raise_val, label %return_pad, !dbg !17

ret_raise_val:                                    ; preds = %bail_out
  %crv = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !17
  br label %return_pad, !dbg !17

method_body:                                      ; preds = %prologue_check, %bottom
  %out_args_name = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 0, !dbg !17
  %out_args_recv = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 1, !dbg !17
  %out_args_block = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 2, !dbg !17
  %out_args_total = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 3, !dbg !17
  %out_args_arguments = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 4, !dbg !17
  %out_args_container = getelementptr %"struct.rubinius::Arguments"* %out_args, i64 0, i32 5, !dbg !17
  %constant = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 0, %"struct.rubinius::Object"** %stack), !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  %stack_pos7 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 10, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !20
  %stack_pos9 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 11, !dbg !20
  store %"struct.rubinius::Object"* %constant, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !20
  %stack_pos10 = getelementptr [18 x %"struct.rubinius::Object"*]* %cfstk908, i64 0, i64 12, !dbg !20
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !20
  %constant12 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos9), !dbg !20, !rbx-classid !21
  %stack_load16 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !20, !rbx-classid !22
  %stack_load19 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !20, !rbx-classid !21
  store %"struct.rubinius::Object"* %constant12, %"struct.rubinius::Object"** %stack, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load19, %"struct.rubinius::Object"** %21, align 8, !dbg !20
  store %"struct.rubinius::Object"* %stack_load16, %"struct.rubinius::Object"** %22, align 8, !dbg !20
  br label %ip18, !dbg !20

ip18:                                             ; preds = %interrupts884.ip18_crit_edge, %continue844, %method_body
  %stack_load42 = phi %"struct.rubinius::Object"* [ %local.pre, %interrupts884.ip18_crit_edge ], [ %send_result878, %continue844 ], [ %stack_load16, %method_body ]
  store %"struct.rubinius::Object"* %stack_load42, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  %constant_cache = load %"struct.rubinius::ConstantCache"** inttoptr (i64 25207576 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !23
  %constant_cache_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 4, !dbg !23
  %constant_scope35 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos, align 8, !dbg !23
  %29 = load %"struct.rubinius::Object"** %5, align 8, !dbg !23
  %frame_scope = bitcast %"struct.rubinius::Object"* %29 to %"struct.rubinius::ConstantScope"*, !dbg !23
  %same_scope = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope35, %frame_scope, !dbg !23
  br i1 %same_scope, label %check_serial, label %use_call, !dbg !23

check_serial:                                     ; preds = %ip18
  %global_serial = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !23
  %serial_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 7, !dbg !23
  %serial = load i32* %serial_pos, align 4, !dbg !23
  %use_cache36 = icmp eq i32 %global_serial, %serial, !dbg !23
  br i1 %use_cache36, label %use_cache, label %use_call, !dbg !23

use_cache:                                        ; preds = %check_serial
  %value_pos = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache, i64 0, i32 2, !dbg !23
  %cached_value = load %"struct.rubinius::Object"** %value_pos, align 8, !dbg !23
  br label %continue, !dbg !23

use_call:                                         ; preds = %check_serial, %ip18
  store i32 20, i32* %8, align 4, !dbg !23
  %push_const_fast = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 25207576 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !23
  %null_check = icmp eq %"struct.rubinius::Object"* %push_const_fast, null, !dbg !23
  br i1 %null_check, label %bail_out, label %continue, !dbg !23

continue:                                         ; preds = %use_call, %use_cache
  %constant38 = phi %"struct.rubinius::Object"* [ %cached_value, %use_cache ], [ %push_const_fast, %use_call ], !dbg !23, !rbx-classid !24
  store %"struct.rubinius::Object"* %constant38, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !23
  %cast = ptrtoint %"struct.rubinius::Object"* %stack_load42 to i64, !dbg !23
  %cast45 = ptrtoint %"struct.rubinius::Object"* %constant38 to i64, !dbg !23
  %fixnums_anded = and i64 %cast45, 1
  %masked = and i64 %fixnums_anded, %cast
  %is_fixnum = icmp eq i64 %masked, 0, !dbg !23
  br i1 %is_fixnum, label %class_fallback, label %push_le, !dbg !23

class_fallback:                                   ; preds = %continue
  store %"struct.rubinius::Object"* %stack_load42, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !23
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !23
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !23
  store i32 1, i32* %out_args_total, align 8, !dbg !23
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !23
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !23
  %cache_const = load %"struct.rubinius::CallSite"** inttoptr (i64 25207592 to %"struct.rubinius::CallSite"**), align 8, !dbg !23
  %execute_pos = getelementptr %"struct.rubinius::CallSite"* %cache_const, i64 0, i32 2, !dbg !23
  %execute = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos, align 8, !dbg !23
  store i32 22, i32* %8, align 4, !dbg !23
  %call_site_execute = call %"struct.rubinius::Object"* %execute(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !23
  %null_check50 = icmp eq %"struct.rubinius::Object"* %call_site_execute, null, !dbg !23
  br i1 %null_check50, label %bail_out, label %continue40, !dbg !23

continue40:                                       ; preds = %class_fallback, %push_le
  %send_result = phi %"struct.rubinius::Object"* [ %30, %push_le ], [ %call_site_execute, %class_fallback ], !dbg !23
  store %"struct.rubinius::Object"* %send_result, %"struct.rubinius::Object"** %stack, align 8, !dbg !23
  %as_int = ptrtoint %"struct.rubinius::Object"* %send_result to i64, !dbg !23
  %and = and i64 %as_int, 15, !dbg !23
  %is_true = icmp eq i64 %and, 10, !dbg !23
  br i1 %is_true, label %ip114, label %ip27, !dbg !23

push_le:                                          ; preds = %continue
  %fixnum.lt = icmp slt %"struct.rubinius::Object"* %stack_load42, %constant38, !dbg !23
  %30 = select i1 %fixnum.lt, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !23
  br label %continue40, !dbg !23

ip27:                                             ; preds = %continue40
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !25
  store %"struct.rubinius::Object"* inttoptr (i64 1 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !25
  %constant61 = call %"struct.rubinius::Object"* @rbx_make_array(%"struct.rubinius::State"* %state, i32 2, %"struct.rubinius::Object"** %stack_pos9), !dbg !25, !rbx-classid !21
  %stack_load66 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !25, !rbx-classid !22
  %stack_load69 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !25, !rbx-classid !22
  store %"struct.rubinius::Object"* %constant61, %"struct.rubinius::Object"** %stack, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load69, %"struct.rubinius::Object"** %23, align 8, !dbg !25
  store %"struct.rubinius::Object"* %stack_load66, %"struct.rubinius::Object"** %24, align 8, !dbg !25
  br label %ip44, !dbg !25

ip44:                                             ; preds = %interrupts.ip44_crit_edge, %continue683, %ip27
  %stack_load113 = phi %"struct.rubinius::Object"* [ %local85.pre, %interrupts.ip44_crit_edge ], [ %send_result717, %continue683 ], [ %stack_load66, %ip27 ]
  store %"struct.rubinius::Object"* %stack_load113, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %constant_cache88 = load %"struct.rubinius::ConstantCache"** inttoptr (i64 25207784 to %"struct.rubinius::ConstantCache"**), align 8, !dbg !26
  %constant_cache_pos89 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 4, !dbg !26
  %constant_scope90 = load %"struct.rubinius::ConstantScope"** %constant_cache_pos89, align 8, !dbg !26
  %31 = load %"struct.rubinius::Object"** %5, align 8, !dbg !26
  %frame_scope92 = bitcast %"struct.rubinius::Object"* %31 to %"struct.rubinius::ConstantScope"*, !dbg !26
  %same_scope93 = icmp eq %"struct.rubinius::ConstantScope"* %constant_scope90, %frame_scope92, !dbg !26
  br i1 %same_scope93, label %check_serial94, label %use_call96, !dbg !26

check_serial94:                                   ; preds = %ip44
  %global_serial87 = load i32* inttoptr (i64 22553844 to i32*), align 4, !dbg !26
  %serial_pos98 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 7, !dbg !26
  %serial99 = load i32* %serial_pos98, align 4, !dbg !26
  %use_cache100 = icmp eq i32 %global_serial87, %serial99, !dbg !26
  br i1 %use_cache100, label %use_cache95, label %use_call96, !dbg !26

use_cache95:                                      ; preds = %check_serial94
  %value_pos101 = getelementptr %"struct.rubinius::ConstantCache"* %constant_cache88, i64 0, i32 2, !dbg !26
  %cached_value102 = load %"struct.rubinius::Object"** %value_pos101, align 8, !dbg !26
  br label %continue97, !dbg !26

use_call96:                                       ; preds = %check_serial94, %ip44
  store i32 46, i32* %8, align 4, !dbg !26
  %push_const_fast103 = call %"struct.rubinius::Object"* @rbx_push_const_fast(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::ConstantCache"** inttoptr (i64 25207784 to %"struct.rubinius::ConstantCache"**)) #0, !dbg !26
  %null_check106 = icmp eq %"struct.rubinius::Object"* %push_const_fast103, null, !dbg !26
  br i1 %null_check106, label %bail_out, label %continue97, !dbg !26

continue97:                                       ; preds = %use_call96, %use_cache95
  %constant107 = phi %"struct.rubinius::Object"* [ %cached_value102, %use_cache95 ], [ %push_const_fast103, %use_call96 ], !dbg !26, !rbx-classid !27
  store %"struct.rubinius::Object"* %constant107, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !26
  %cast114 = ptrtoint %"struct.rubinius::Object"* %stack_load113 to i64, !dbg !26
  %cast117 = ptrtoint %"struct.rubinius::Object"* %constant107 to i64, !dbg !26
  %fixnums_anded118 = and i64 %cast117, 1
  %masked119 = and i64 %fixnums_anded118, %cast114
  %is_fixnum120 = icmp eq i64 %masked119, 0, !dbg !26
  br i1 %is_fixnum120, label %class_fallback109, label %push_le121, !dbg !26

class_fallback109:                                ; preds = %continue97
  store %"struct.rubinius::Object"* %stack_load113, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !26
  store %"struct.rubinius::Symbol"* inttoptr (i64 1414 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !26
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !26
  store i32 1, i32* %out_args_total, align 8, !dbg !26
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !26
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !26
  %cache_const126 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207800 to %"struct.rubinius::CallSite"**), align 8, !dbg !26
  %execute_pos127 = getelementptr %"struct.rubinius::CallSite"* %cache_const126, i64 0, i32 2, !dbg !26
  %execute128 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos127, align 8, !dbg !26
  store i32 48, i32* %8, align 4, !dbg !26
  %call_site_execute129 = call %"struct.rubinius::Object"* %execute128(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const126, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !26
  %null_check131 = icmp eq %"struct.rubinius::Object"* %call_site_execute129, null, !dbg !26
  br i1 %null_check131, label %bail_out, label %continue111, !dbg !26

continue111:                                      ; preds = %class_fallback109, %push_le121
  %send_result132 = phi %"struct.rubinius::Object"* [ %32, %push_le121 ], [ %call_site_execute129, %class_fallback109 ], !dbg !26
  store %"struct.rubinius::Object"* %send_result132, %"struct.rubinius::Object"** %stack, align 8, !dbg !26
  %as_int136 = ptrtoint %"struct.rubinius::Object"* %send_result132 to i64, !dbg !26
  %and137 = and i64 %as_int136, 15, !dbg !26
  %is_true138 = icmp eq i64 %and137, 10, !dbg !26
  br i1 %is_true138, label %ip92, label %ip53, !dbg !26

push_le121:                                       ; preds = %continue97
  %fixnum.lt122 = icmp slt %"struct.rubinius::Object"* %stack_load113, %constant107, !dbg !26
  %32 = select i1 %fixnum.lt122, %"struct.rubinius::Object"* inttoptr (i64 18 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"* inttoptr (i64 10 to %"struct.rubinius::Object"*), !dbg !26
  br label %continue111, !dbg !26

ip53:                                             ; preds = %continue111
  %local141 = load %"struct.rubinius::Object"** %23, align 8, !dbg !28, !rbx-classid !29
  store %"struct.rubinius::Object"* %local141, %"struct.rubinius::Object"** %stack, align 8, !dbg !28
  %self = load %"struct.rubinius::Object"** %14, align 8, !dbg !28
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %local145 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !30
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %local148 = load %"struct.rubinius::Object"** %22, align 8, !dbg !28, !rbx-classid !31
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !28
  %cast155 = ptrtoint %"struct.rubinius::Object"* %self to i64, !dbg !28
  %masked156 = and i64 %cast155, 3, !dbg !28
  %is_reference = icmp eq i64 %masked156, 0, !dbg !28
  br i1 %is_reference, label %check_class_id, label %class_fallback150, !dbg !28

check_class_id:                                   ; preds = %ip53
  %class_pos = getelementptr %"struct.rubinius::Object"* %self, i64 0, i32 0, i32 1, !dbg !28
  %ref_class = load %"struct.rubinius::Class"** %class_pos, align 8, !dbg !28
  %class_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 4, !dbg !28
  %class_id = load i32* %class_id_pos, align 4, !dbg !28
  %check_class_id157 = icmp eq i32 %class_id, 683, !dbg !28
  br i1 %check_class_id157, label %correct_class, label %class_fallback150, !dbg !28

correct_class:                                    ; preds = %check_class_id
  %serial_id_pos = getelementptr %"struct.rubinius::Class"* %ref_class, i64 0, i32 5, !dbg !28
  %serial_id = load i32* %serial_id_pos, align 4, !dbg !28
  %check_serial_id = icmp eq i32 %serial_id, 23, !dbg !28
  br i1 %check_serial_id, label %correct_serial, label %serial_fallback151, !dbg !28

class_fallback150:                                ; preds = %check_class_id, %ip53
  store i32 61, i32* %8, align 4, !dbg !28
  %33 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 0), !dbg !28
  br label %return_pad, !dbg !28

correct_serial:                                   ; preds = %correct_class
  %call_frame168 = bitcast [15 x %"struct.rubinius::Object"*]* %cfstk167910 to %"struct.rubinius::CallFrame"*, !dbg !32
  %stack169 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 9, !dbg !32
  %34 = getelementptr inbounds [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 0, !dbg !32
  %call_frame.c = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %call_frame.c, %"struct.rubinius::Object"** %34, align 8, !dbg !32
  %35 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 2, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 140281081489920 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %35, align 8, !dbg !32
  %compiled_code172 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140281081489920 to %"struct.rubinius::CompiledCode"**), align 512, !dbg !32
  %36 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 3, !dbg !32
  %compiled_code172.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code172, i64 0, i32 0, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %compiled_code172.c, %"struct.rubinius::Object"** %36, align 8, !dbg !32
  %constant_scope_pos173 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code172, i64 0, i32 13, !dbg !32
  %constant_scope174 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos173, align 8, !dbg !32
  %37 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 1, !dbg !32
  %constant_scope174.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope174 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %constant_scope174.c, %"struct.rubinius::Object"** %37, align 8, !dbg !32
  %38 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 4, !dbg !32
  %39 = bitcast %"struct.rubinius::Object"** %38 to i32*, !dbg !32
  store i32 12, i32* %39, align 8, !dbg !32
  %40 = getelementptr %"struct.rubinius::CallFrame"* %call_frame168, i64 0, i32 5, !dbg !32
  store i32 0, i32* %40, align 4, !dbg !32
  %41 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 7, !dbg !32
  %vars171.c = bitcast [8 x %"struct.rubinius::Object"*]* %var_mem170911 to %"struct.rubinius::Object"*, !dbg !32
  store %"struct.rubinius::Object"* %vars171.c, %"struct.rubinius::Object"** %41, align 8, !dbg !32
  br label %stack_nil175, !dbg !32

serial_fallback151:                               ; preds = %correct_class
  store i32 61, i32* %8, align 4, !dbg !28
  %42 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 61, i64 3, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

stack_nil175:                                     ; preds = %stack_nil175, %correct_serial
  %counter_alloca.1 = phi i32 [ 0, %correct_serial ], [ %added179, %stack_nil175 ]
  %43 = sext i32 %counter_alloca.1 to i64, !dbg !32
  %stack169.sum = add i64 %43, 9, !dbg !32
  %stack_pos178 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 %stack169.sum, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos178, align 8, !dbg !32
  %added179 = add i32 %counter_alloca.1, 1, !dbg !32
  %loop_check180 = icmp eq i32 %added179, 6, !dbg !32
  br i1 %loop_check180, label %bottom176, label %stack_nil175, !dbg !32

bottom176:                                        ; preds = %stack_nil175
  %module = load %"struct.rubinius::Module"** inttoptr (i64 140281081489936 to %"struct.rubinius::Module"**), align 16, !dbg !32
  %44 = getelementptr inbounds [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 0, !dbg !32
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %44, align 8, !dbg !32
  %45 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 2, !dbg !32
  store %"struct.rubinius::Object"* %self, %"struct.rubinius::Object"** %45, align 8, !dbg !32
  %46 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 4, !dbg !32
  %module.c = getelementptr inbounds %"struct.rubinius::Module"* %module, i64 0, i32 0, !dbg !32
  store %"struct.rubinius::Object"* %module.c, %"struct.rubinius::Object"** %46, align 8, !dbg !32
  %47 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 3, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %47, align 8, !dbg !32
  %48 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 1, !dbg !32
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %48, align 8, !dbg !32
  %49 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 5, !dbg !32
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %49, align 8, !dbg !32
  %50 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 6, !dbg !32
  %51 = getelementptr [8 x %"struct.rubinius::Object"*]* %var_mem170911, i64 0, i64 7, !dbg !32
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %50, align 8, !dbg !32
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %51, align 8, !dbg !32
  %52 = load %"struct.rubinius::Object"** %36, align 8, !dbg !33
  %literals_pos = getelementptr %"struct.rubinius::Object"* %52, i64 8, !dbg !33
  %53 = bitcast %"struct.rubinius::Object"* %literals_pos to %"struct.rubinius::Tuple"**, !dbg !33
  %literals = load %"struct.rubinius::Tuple"** %53, align 8, !dbg !33
  %literal_pos = getelementptr %"struct.rubinius::Tuple"* %literals, i64 0, i32 2, i64 0, !dbg !33
  %literal = load %"struct.rubinius::Object"** %literal_pos, align 8, !dbg !33, !rbx-classid !34
  store %"struct.rubinius::Object"* %literal, %"struct.rubinius::Object"** %stack169, align 8, !dbg !33
  %stack_pos200 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 10, !dbg !33
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %stack_pos203 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 11, !dbg !33
  store %"struct.rubinius::Object"* %local148, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast211 = ptrtoint %"struct.rubinius::Object"* %local145 to i64, !dbg !33
  %cast212 = ptrtoint %"struct.rubinius::Object"* %local148 to i64, !dbg !33
  %fixnums_anded213 = and i64 %cast212, 1, !dbg !33
  %masked214 = and i64 %fixnums_anded213, %cast211, !dbg !33
  %is_fixnum215 = icmp eq i64 %masked214, 0, !dbg !33
  br i1 %is_fixnum215, label %class_fallback204, label %push_add, !dbg !33

bail_out185:                                      ; preds = %class_fallback460, %class_fallback422, %class_fallback383, %class_fallback347, %class_fallback313, %class_fallback275, %class_fallback236, %class_fallback204
  %rth186 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame168), !dbg !32
  br i1 %rth186, label %ret_raise_val187, label %return_pad158, !dbg !32

ret_raise_val187:                                 ; preds = %bail_out185
  %crv189 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !32
  br label %return_pad158, !dbg !32

class_fallback204:                                ; preds = %bottom176
  store %"struct.rubinius::Object"* %local145, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const222 = load %"struct.rubinius::CallSite"** inttoptr (i64 25546968 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos223 = getelementptr %"struct.rubinius::CallSite"* %cache_const222, i64 0, i32 2, !dbg !33
  %execute224 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos223, align 8, !dbg !33
  store i32 6, i32* %40, align 4, !dbg !33
  %call_site_execute225 = call %"struct.rubinius::Object"* %execute224(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const222, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check227 = icmp eq %"struct.rubinius::Object"* %call_site_execute225, null, !dbg !33
  br i1 %null_check227, label %bail_out185, label %continue206, !dbg !33

continue206:                                      ; preds = %class_fallback204, %bignum, %tagnow
  %send_result228 = phi %"struct.rubinius::Object"* [ %big_value, %bignum ], [ %as_obj, %tagnow ], [ %call_site_execute225, %class_fallback204 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result228, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %local231 = load %"struct.rubinius::Object"** %50, align 8, !dbg !33, !rbx-classid !35
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %local234 = load %"struct.rubinius::Object"** %51, align 8, !dbg !33, !rbx-classid !36
  %stack_pos235 = getelementptr [15 x %"struct.rubinius::Object"*]* %cfstk167910, i64 0, i64 12, !dbg !33
  store %"struct.rubinius::Object"* %local234, %"struct.rubinius::Object"** %stack_pos235, align 8, !dbg !33
  %cast247 = ptrtoint %"struct.rubinius::Object"* %local231 to i64, !dbg !33
  %cast248 = ptrtoint %"struct.rubinius::Object"* %local234 to i64, !dbg !33
  %fixnums_anded249 = and i64 %cast248, 1, !dbg !33
  %masked250 = and i64 %fixnums_anded249, %cast247, !dbg !33
  %is_fixnum251 = icmp eq i64 %masked250, 0, !dbg !33
  br i1 %is_fixnum251, label %class_fallback236, label %push_add243, !dbg !33

push_add:                                         ; preds = %bottom176
  %ashr = ashr i64 %cast211, 1, !dbg !33
  %ashr218 = ashr i64 %cast212, 1, !dbg !33
  %fixnum.add = add i64 %ashr, %ashr218, !dbg !33
  %fixnum.add.off = add i64 %fixnum.add, 4611686018427387903, !dbg !33
  %54 = icmp ult i64 %fixnum.add.off, 9223372036854775807, !dbg !33
  br i1 %54, label %tagnow, label %bignum, !dbg !33

tagnow:                                           ; preds = %push_add
  %shl = shl i64 %fixnum.add, 1, !dbg !33
  %or = or i64 %shl, 1, !dbg !33
  %as_obj = inttoptr i64 %or to %"struct.rubinius::Object"*, !dbg !33
  br label %continue206, !dbg !33

bignum:                                           ; preds = %push_add
  %big_value = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add) #2, !dbg !33
  br label %continue206, !dbg !33

class_fallback236:                                ; preds = %continue206
  store %"struct.rubinius::Object"* %local231, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos235, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const266 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547024 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos267 = getelementptr %"struct.rubinius::CallSite"* %cache_const266, i64 0, i32 2, !dbg !33
  %execute268 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos267, align 8, !dbg !33
  store i32 13, i32* %40, align 4, !dbg !33
  %call_site_execute269 = call %"struct.rubinius::Object"* %execute268(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const266, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check271 = icmp eq %"struct.rubinius::Object"* %call_site_execute269, null, !dbg !33
  br i1 %null_check271, label %bail_out185, label %continue238, !dbg !33

continue238:                                      ; preds = %class_fallback236, %bignum245, %tagnow244
  %send_result272 = phi %"struct.rubinius::Object"* [ %big_value258, %bignum245 ], [ %as_obj261, %tagnow244 ], [ %call_site_execute269, %class_fallback236 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos235, align 8, !dbg !33
  %cast286 = ptrtoint %"struct.rubinius::Object"* %send_result272 to i64, !dbg !33
  %masked289 = and i64 %cast286, 1, !dbg !33
  %is_fixnum290 = icmp eq i64 %masked289, 0, !dbg !33
  br i1 %is_fixnum290, label %class_fallback275, label %push_add282, !dbg !33

push_add243:                                      ; preds = %continue206
  %ashr253 = ashr i64 %cast247, 1, !dbg !33
  %ashr255 = ashr i64 %cast248, 1, !dbg !33
  %fixnum.add256 = add i64 %ashr253, %ashr255, !dbg !33
  %fixnum.add256.off = add i64 %fixnum.add256, 4611686018427387903, !dbg !33
  %55 = icmp ult i64 %fixnum.add256.off, 9223372036854775807, !dbg !33
  br i1 %55, label %tagnow244, label %bignum245, !dbg !33

tagnow244:                                        ; preds = %push_add243
  %shl259 = shl i64 %fixnum.add256, 1, !dbg !33
  %or260 = or i64 %shl259, 1, !dbg !33
  %as_obj261 = inttoptr i64 %or260 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue238, !dbg !33

bignum245:                                        ; preds = %push_add243
  %big_value258 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add256) #2, !dbg !33
  br label %continue238, !dbg !33

class_fallback275:                                ; preds = %continue238
  store %"struct.rubinius::Object"* %send_result272, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos235, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const305 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547056 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos306 = getelementptr %"struct.rubinius::CallSite"* %cache_const305, i64 0, i32 2, !dbg !33
  %execute307 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos306, align 8, !dbg !33
  store i32 17, i32* %40, align 4, !dbg !33
  %call_site_execute308 = call %"struct.rubinius::Object"* %execute307(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const305, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check310 = icmp eq %"struct.rubinius::Object"* %call_site_execute308, null, !dbg !33
  br i1 %null_check310, label %bail_out185, label %continue277, !dbg !33

continue277:                                      ; preds = %class_fallback275, %bignum284, %tagnow283
  %send_result311 = phi %"struct.rubinius::Object"* [ %big_value297, %bignum284 ], [ %as_obj300, %tagnow283 ], [ %call_site_execute308, %class_fallback275 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result311, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %stack_load317 = load %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %cast322 = ptrtoint %"struct.rubinius::Object"* %stack_load317 to i64, !dbg !33
  %cast323 = ptrtoint %"struct.rubinius::Object"* %send_result311 to i64, !dbg !33
  %fixnums_anded324 = and i64 %cast323, 1, !dbg !33
  %masked325 = and i64 %fixnums_anded324, %cast322, !dbg !33
  %is_fixnum326 = icmp eq i64 %masked325, 0, !dbg !33
  br i1 %is_fixnum326, label %class_fallback313, label %push_mul, !dbg !33

push_add282:                                      ; preds = %continue238
  %ashr292 = ashr i64 %cast286, 1, !dbg !33
  %fixnum.add295 = add i64 %ashr292, 1, !dbg !33
  %fixnum.add295.off = add i64 %ashr292, 4611686018427387904, !dbg !33
  %56 = icmp ult i64 %fixnum.add295.off, 9223372036854775807, !dbg !33
  br i1 %56, label %tagnow283, label %bignum284, !dbg !33

tagnow283:                                        ; preds = %push_add282
  %shl298 = shl i64 %fixnum.add295, 1, !dbg !33
  %or299 = or i64 %shl298, 1, !dbg !33
  %as_obj300 = inttoptr i64 %or299 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue277, !dbg !33

bignum284:                                        ; preds = %push_add282
  %big_value297 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add295) #2, !dbg !33
  br label %continue277, !dbg !33

class_fallback313:                                ; preds = %push_mul, %continue277
  store %"struct.rubinius::Object"* %stack_load317, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const338 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547080 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos339 = getelementptr %"struct.rubinius::CallSite"* %cache_const338, i64 0, i32 2, !dbg !33
  %execute340 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos339, align 8, !dbg !33
  store i32 20, i32* %40, align 4, !dbg !33
  %call_site_execute341 = call %"struct.rubinius::Object"* %execute340(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const338, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check343 = icmp eq %"struct.rubinius::Object"* %call_site_execute341, null, !dbg !33
  br i1 %null_check343, label %bail_out185, label %continue315, !dbg !33

continue315:                                      ; preds = %class_fallback313, %tagnow321
  %send_result344 = phi %"struct.rubinius::Object"* [ %as_obj334, %tagnow321 ], [ %call_site_execute341, %class_fallback313 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 5 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast354 = ptrtoint %"struct.rubinius::Object"* %send_result344 to i64, !dbg !33
  %masked356 = and i64 %cast354, -9223372036854775808, !dbg !33
  %fixnums_anded358 = and i64 %cast354, 1, !dbg !33
  %fixnums_ored = or i64 %masked356, 1, !dbg !33
  %is_fixnum_and = icmp ne i64 %fixnums_anded358, 0, !dbg !33
  %is_fixnum_ored = icmp eq i64 %fixnums_ored, 1, !dbg !33
  %is_fixnum359 = and i1 %is_fixnum_and, %is_fixnum_ored, !dbg !33
  br i1 %is_fixnum359, label %divide, label %class_fallback347, !dbg !33

push_mul:                                         ; preds = %continue277
  %ashr328 = ashr i64 %cast322, 1, !dbg !33
  %ashr330 = ashr i64 %cast323, 1, !dbg !33
  %mul.overflow = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %ashr328, i64 %ashr330), !dbg !33
  %mul = extractvalue { i64, i1 } %mul.overflow, 0, !dbg !33
  %did_overflow = extractvalue { i64, i1 } %mul.overflow, 1, !dbg !33
  %did_overflow.not = xor i1 %did_overflow, true, !dbg !33
  %mul.off = add i64 %mul, 4611686018427387903, !dbg !33
  %57 = icmp ult i64 %mul.off, 9223372036854775807, !dbg !33
  %or.cond = and i1 %57, %did_overflow.not, !dbg !33
  br i1 %or.cond, label %tagnow321, label %class_fallback313, !dbg !33

tagnow321:                                        ; preds = %push_mul
  %shl332 = shl i64 %mul, 1, !dbg !33
  %or333 = or i64 %shl332, 1, !dbg !33
  %as_obj334 = inttoptr i64 %or333 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue315, !dbg !33

class_fallback347:                                ; preds = %continue315
  store %"struct.rubinius::Object"* %send_result344, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const372 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547112 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos373 = getelementptr %"struct.rubinius::CallSite"* %cache_const372, i64 0, i32 2, !dbg !33
  %execute374 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos373, align 8, !dbg !33
  store i32 24, i32* %40, align 4, !dbg !33
  %call_site_execute375 = call %"struct.rubinius::Object"* %execute374(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const372, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check377 = icmp eq %"struct.rubinius::Object"* %call_site_execute375, null, !dbg !33
  br i1 %null_check377, label %bail_out185, label %continue349, !dbg !33

continue349:                                      ; preds = %class_fallback347, %divide
  %send_result378 = phi %"struct.rubinius::Object"* [ %as_obj368, %divide ], [ %call_site_execute375, %class_fallback347 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %local381 = load %"struct.rubinius::Object"** %50, align 8, !dbg !33, !rbx-classid !35
  store %"struct.rubinius::Object"* %local381, %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast394 = ptrtoint %"struct.rubinius::Object"* %send_result378 to i64, !dbg !33
  %cast395 = ptrtoint %"struct.rubinius::Object"* %local381 to i64, !dbg !33
  %fixnums_anded396 = and i64 %cast395, 1, !dbg !33
  %masked397 = and i64 %fixnums_anded396, %cast394, !dbg !33
  %is_fixnum398 = icmp eq i64 %masked397, 0, !dbg !33
  br i1 %is_fixnum398, label %class_fallback383, label %push_add390, !dbg !33

divide:                                           ; preds = %continue315
  %ashr363 = ashr i64 %cast354, 1, !dbg !33
  %fixnum.div = sdiv i64 %ashr363, 2, !dbg !33
  %shl366 = shl i64 %fixnum.div, 1, !dbg !33
  %or367 = or i64 %shl366, 1, !dbg !33
  %as_obj368 = inttoptr i64 %or367 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue349, !dbg !33

class_fallback383:                                ; preds = %continue349
  store %"struct.rubinius::Object"* %send_result378, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const413 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547152 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos414 = getelementptr %"struct.rubinius::CallSite"* %cache_const413, i64 0, i32 2, !dbg !33
  %execute415 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos414, align 8, !dbg !33
  store i32 29, i32* %40, align 4, !dbg !33
  %call_site_execute416 = call %"struct.rubinius::Object"* %execute415(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const413, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check418 = icmp eq %"struct.rubinius::Object"* %call_site_execute416, null, !dbg !33
  br i1 %null_check418, label %bail_out185, label %continue385, !dbg !33

continue385:                                      ; preds = %class_fallback383, %bignum392, %tagnow391
  %send_result419 = phi %"struct.rubinius::Object"* [ %big_value405, %bignum392 ], [ %as_obj408, %tagnow391 ], [ %call_site_execute416, %class_fallback383 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos203, align 8, !dbg !33
  %cast433 = ptrtoint %"struct.rubinius::Object"* %send_result419 to i64, !dbg !33
  %masked436 = and i64 %cast433, 1, !dbg !33
  %is_fixnum437 = icmp eq i64 %masked436, 0, !dbg !33
  br i1 %is_fixnum437, label %class_fallback422, label %push_add429, !dbg !33

push_add390:                                      ; preds = %continue349
  %ashr400 = ashr i64 %cast394, 1, !dbg !33
  %ashr402 = ashr i64 %cast395, 1, !dbg !33
  %fixnum.add403 = add i64 %ashr400, %ashr402, !dbg !33
  %fixnum.add403.off = add i64 %fixnum.add403, 4611686018427387903, !dbg !33
  %58 = icmp ult i64 %fixnum.add403.off, 9223372036854775807, !dbg !33
  br i1 %58, label %tagnow391, label %bignum392, !dbg !33

tagnow391:                                        ; preds = %push_add390
  %shl406 = shl i64 %fixnum.add403, 1, !dbg !33
  %or407 = or i64 %shl406, 1, !dbg !33
  %as_obj408 = inttoptr i64 %or407 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue385, !dbg !33

bignum392:                                        ; preds = %push_add390
  %big_value405 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add403) #2, !dbg !33
  br label %continue385, !dbg !33

class_fallback422:                                ; preds = %continue385
  store %"struct.rubinius::Object"* %send_result419, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos203, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const452 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547184 to %"struct.rubinius::CallSite"**), align 16, !dbg !33
  %execute_pos453 = getelementptr %"struct.rubinius::CallSite"* %cache_const452, i64 0, i32 2, !dbg !33
  %execute454 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos453, align 8, !dbg !33
  store i32 33, i32* %40, align 4, !dbg !33
  %call_site_execute455 = call %"struct.rubinius::Object"* %execute454(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const452, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check457 = icmp eq %"struct.rubinius::Object"* %call_site_execute455, null, !dbg !33
  br i1 %null_check457, label %bail_out185, label %continue424, !dbg !33

continue424:                                      ; preds = %class_fallback422, %bignum431, %tagnow430
  %send_result458 = phi %"struct.rubinius::Object"* [ %big_value444, %bignum431 ], [ %as_obj447, %tagnow430 ], [ %call_site_execute455, %class_fallback422 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result458, %"struct.rubinius::Object"** %stack_pos200, align 8, !dbg !33
  %cast468 = ptrtoint %"struct.rubinius::Object"* %send_result458 to i64, !dbg !33
  %masked469 = and i64 %cast468, 3, !dbg !33
  %is_reference470 = icmp eq i64 %masked469, 0, !dbg !33
  br i1 %is_reference470, label %check_class_id471, label %continue467, !dbg !33

push_add429:                                      ; preds = %continue385
  %ashr439 = ashr i64 %cast433, 1, !dbg !33
  %fixnum.add442 = add i64 %ashr439, 1, !dbg !33
  %fixnum.add442.off = add i64 %ashr439, 4611686018427387904, !dbg !33
  %59 = icmp ult i64 %fixnum.add442.off, 9223372036854775807, !dbg !33
  br i1 %59, label %tagnow430, label %bignum431, !dbg !33

tagnow430:                                        ; preds = %push_add429
  %shl445 = shl i64 %fixnum.add442, 1, !dbg !33
  %or446 = or i64 %shl445, 1, !dbg !33
  %as_obj447 = inttoptr i64 %or446 to %"struct.rubinius::Object"*, !dbg !33
  br label %continue424, !dbg !33

bignum431:                                        ; preds = %push_add429
  %big_value444 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add442) #2, !dbg !33
  br label %continue424, !dbg !33

continue462:                                      ; preds = %class_fallback460, %continue478
  %send_result496 = phi %"struct.rubinius::Object"* [ %64, %continue478 ], [ %call_site_execute493, %class_fallback460 ], !dbg !33
  store %"struct.rubinius::Object"* %send_result496, %"struct.rubinius::Object"** %stack169, align 8, !dbg !33
  br label %return_pad158, !dbg !33

return_pad158:                                    ; preds = %bail_out185, %continue462, %ret_raise_val187
  %return_phi159 = phi %"struct.rubinius::Object"* [ %crv189, %ret_raise_val187 ], [ %send_result496, %continue462 ], [ null, %bail_out185 ]
  %null_check502 = icmp eq %"struct.rubinius::Object"* %return_phi159, null, !dbg !28
  br i1 %null_check502, label %bail_out, label %check_active501, !dbg !28

check_class_id471:                                ; preds = %continue424
  %class_pos473 = getelementptr %"struct.rubinius::Object"* %send_result458, i64 0, i32 0, i32 1, !dbg !33
  %ref_class474 = load %"struct.rubinius::Class"** %class_pos473, align 8, !dbg !33
  %class_id_pos475 = getelementptr %"struct.rubinius::Class"* %ref_class474, i64 0, i32 4, !dbg !33
  %class_id476 = load i32* %class_id_pos475, align 4, !dbg !33
  %check_class_id477 = icmp eq i32 %class_id476, 77, !dbg !33
  br i1 %check_class_id477, label %correct_class472, label %continue467, !dbg !33

correct_class472:                                 ; preds = %check_class_id471
  %arg.value_pos = getelementptr %"struct.rubinius::Object"* %send_result458, i64 1, !dbg !33
  %60 = bitcast %"struct.rubinius::Object"* %arg.value_pos to double*, !dbg !33
  %farg = load double* %60, align 8, !dbg !33
  br label %continue478, !dbg !33

continue467:                                      ; preds = %check_class_id471, %continue424
  %masked480 = and i64 %cast468, 1, !dbg !33
  %is_fixnum481 = icmp eq i64 %masked480, 0, !dbg !33
  br i1 %is_fixnum481, label %class_fallback460, label %guarded_body, !dbg !33

guarded_body:                                     ; preds = %continue467
  %ashr483 = ashr i64 %cast468, 1, !dbg !33
  %61 = sitofp i64 %ashr483 to double, !dbg !33
  br label %continue478, !dbg !33

continue478:                                      ; preds = %guarded_body, %correct_class472
  %rhs = phi double [ %farg, %correct_class472 ], [ %61, %guarded_body ], !dbg !33
  %stack_load485 = load %"struct.rubinius::Object"** %stack169, align 8, !dbg !33, !rbx-classid !34
  %self.value_pos = getelementptr %"struct.rubinius::Object"* %stack_load485, i64 1, !dbg !33
  %62 = bitcast %"struct.rubinius::Object"* %self.value_pos to double*, !dbg !33
  %fself = load double* %62, align 8, !dbg !33
  %float.div = fdiv double %fself, %rhs, !dbg !33
  %result486 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !33, !rbx-classid !34
  %63 = getelementptr %"struct.rubinius::Float"* %result486, i64 0, i32 1, !dbg !33
  store double %float.div, double* %63, align 8, !dbg !33
  %64 = getelementptr inbounds %"struct.rubinius::Float"* %result486, i64 0, i32 0, i32 0, !dbg !33
  br label %continue462, !dbg !33

class_fallback460:                                ; preds = %continue467
  %stack_load488 = load %"struct.rubinius::Object"** %stack169, align 8, !dbg !33, !rbx-classid !34
  store %"struct.rubinius::Object"* %stack_load488, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !33
  store %"struct.rubinius::Symbol"* inttoptr (i64 15574 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !33
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !33
  store i32 1, i32* %out_args_total, align 8, !dbg !33
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !33
  store %"struct.rubinius::Object"** %stack_pos200, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !33
  %cache_const490 = load %"struct.rubinius::CallSite"** inttoptr (i64 25547208 to %"struct.rubinius::CallSite"**), align 8, !dbg !33
  %execute_pos491 = getelementptr %"struct.rubinius::CallSite"* %cache_const490, i64 0, i32 2, !dbg !33
  %execute492 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos491, align 8, !dbg !33
  store i32 36, i32* %40, align 4, !dbg !33
  %call_site_execute493 = call %"struct.rubinius::Object"* %execute492(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const490, %"struct.rubinius::CallFrame"* %call_frame168, %"struct.rubinius::Arguments"* %out_args), !dbg !33
  %null_check495 = icmp eq %"struct.rubinius::Object"* %call_site_execute493, null, !dbg !33
  br i1 %null_check495, label %bail_out185, label %continue462, !dbg !33

check_active501:                                  ; preds = %return_pad158
  store %"struct.rubinius::Object"* %return_phi159, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %local505 = load %"struct.rubinius::Object"** %20, align 8, !dbg !28, !rbx-classid !35
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %local508 = load %"struct.rubinius::Object"** %24, align 8, !dbg !28, !rbx-classid !30
  store %"struct.rubinius::Object"* %local508, %"struct.rubinius::Object"** %stack_pos10, align 8, !dbg !28
  store %"struct.rubinius::Object"* %local505, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 14614 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos10, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const516 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207960 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos517 = getelementptr %"struct.rubinius::CallSite"* %cache_const516, i64 0, i32 2, !dbg !28
  %execute518 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos517, align 8, !dbg !28
  store i32 68, i32* %8, align 4, !dbg !28
  %call_site_execute519 = call %"struct.rubinius::Object"* %execute518(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const516, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check522 = icmp eq %"struct.rubinius::Object"* %call_site_execute519, null, !dbg !28
  br i1 %null_check522, label %bail_out, label %check_active521, !dbg !28

check_active521:                                  ; preds = %check_active501
  store %"struct.rubinius::Object"* %call_site_execute519, %"struct.rubinius::Object"** %stack_pos9, align 8, !dbg !28
  %stack_load528 = load %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %cast529 = ptrtoint %"struct.rubinius::Object"* %stack_load528 to i64, !dbg !28
  %masked530 = and i64 %cast529, 3, !dbg !28
  %is_reference531 = icmp eq i64 %masked530, 0, !dbg !28
  br i1 %is_reference531, label %check_class_id532, label %class_fallback524, !dbg !28

continue526:                                      ; preds = %class_fallback524, %continue559
  %send_result582 = phi %"struct.rubinius::Object"* [ %70, %continue559 ], [ %call_site_execute579, %class_fallback524 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result582, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !28
  %stack_load592 = load %"struct.rubinius::Object"** %stack, align 8, !dbg !28, !rbx-classid !29
  %cast599 = ptrtoint %"struct.rubinius::Object"* %stack_load592 to i64, !dbg !28
  %cast600 = ptrtoint %"struct.rubinius::Object"* %send_result582 to i64, !dbg !28
  %fixnums_anded601 = and i64 %cast600, 1, !dbg !28
  %masked602 = and i64 %fixnums_anded601, %cast599, !dbg !28
  %is_fixnum603 = icmp eq i64 %masked602, 0, !dbg !28
  br i1 %is_fixnum603, label %poly_fallback, label %push_add595, !dbg !28

check_class_id532:                                ; preds = %check_active521
  %class_pos535 = getelementptr %"struct.rubinius::Object"* %stack_load528, i64 0, i32 0, i32 1, !dbg !28
  %ref_class536 = load %"struct.rubinius::Class"** %class_pos535, align 8, !dbg !28
  %class_id_pos537 = getelementptr %"struct.rubinius::Class"* %ref_class536, i64 0, i32 4, !dbg !28
  %class_id538 = load i32* %class_id_pos537, align 4, !dbg !28
  %check_class_id539 = icmp eq i32 %class_id538, 77, !dbg !28
  br i1 %check_class_id539, label %correct_class533, label %class_fallback524, !dbg !28

correct_class533:                                 ; preds = %check_class_id532
  %serial_id_pos540 = getelementptr %"struct.rubinius::Class"* %ref_class536, i64 0, i32 5, !dbg !28
  %serial_id541 = load i32* %serial_id_pos540, align 4, !dbg !28
  %check_serial_id542 = icmp eq i32 %serial_id541, 224, !dbg !28
  br i1 %check_serial_id542, label %correct_serial534, label %serial_fallback525, !dbg !28

correct_serial534:                                ; preds = %correct_class533
  %cast546 = ptrtoint %"struct.rubinius::Object"* %call_site_execute519 to i64, !dbg !28
  %masked547 = and i64 %cast546, 3, !dbg !28
  %is_reference548 = icmp eq i64 %masked547, 0, !dbg !28
  br i1 %is_reference548, label %check_class_id549, label %continue545, !dbg !28

serial_fallback525:                               ; preds = %correct_class533
  store i32 71, i32* %8, align 4, !dbg !28
  %65 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 71, i64 2, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

check_class_id549:                                ; preds = %correct_serial534
  %class_pos551 = getelementptr %"struct.rubinius::Object"* %call_site_execute519, i64 0, i32 0, i32 1, !dbg !28
  %ref_class552 = load %"struct.rubinius::Class"** %class_pos551, align 8, !dbg !28
  %class_id_pos553 = getelementptr %"struct.rubinius::Class"* %ref_class552, i64 0, i32 4, !dbg !28
  %class_id554 = load i32* %class_id_pos553, align 4, !dbg !28
  %check_class_id555 = icmp eq i32 %class_id554, 77, !dbg !28
  br i1 %check_class_id555, label %correct_class550, label %continue545, !dbg !28

correct_class550:                                 ; preds = %check_class_id549
  %arg.value_pos557 = getelementptr %"struct.rubinius::Object"* %call_site_execute519, i64 1, !dbg !28
  %66 = bitcast %"struct.rubinius::Object"* %arg.value_pos557 to double*, !dbg !28
  %farg558 = load double* %66, align 8, !dbg !28
  br label %continue559, !dbg !28

continue545:                                      ; preds = %check_class_id549, %correct_serial534
  %masked561 = and i64 %cast546, 1, !dbg !28
  %is_fixnum562 = icmp eq i64 %masked561, 0, !dbg !28
  br i1 %is_fixnum562, label %class_fallback524, label %guarded_body563, !dbg !28

guarded_body563:                                  ; preds = %continue545
  %ashr565 = ashr i64 %cast546, 1, !dbg !28
  %67 = sitofp i64 %ashr565 to double, !dbg !28
  br label %continue559, !dbg !28

continue559:                                      ; preds = %guarded_body563, %correct_class550
  %rhs566 = phi double [ %farg558, %correct_class550 ], [ %67, %guarded_body563 ], !dbg !28
  %self.value_pos570 = getelementptr %"struct.rubinius::Object"* %stack_load528, i64 1, !dbg !28
  %68 = bitcast %"struct.rubinius::Object"* %self.value_pos570 to double*, !dbg !28
  %fself571 = load double* %68, align 8, !dbg !28
  %float.mul = fmul double %rhs566, %fself571, !dbg !28
  %result572 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !28, !rbx-classid !34
  %69 = getelementptr %"struct.rubinius::Float"* %result572, i64 0, i32 1, !dbg !28
  store double %float.mul, double* %69, align 8, !dbg !28
  %70 = getelementptr inbounds %"struct.rubinius::Float"* %result572, i64 0, i32 0, i32 0, !dbg !28
  br label %continue526, !dbg !28

class_fallback524:                                ; preds = %continue545, %check_class_id532, %check_active521
  store %"struct.rubinius::Object"* %stack_load528, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 15558 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos9, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const576 = load %"struct.rubinius::CallSite"** inttoptr (i64 25207984 to %"struct.rubinius::CallSite"**), align 16, !dbg !28
  %execute_pos577 = getelementptr %"struct.rubinius::CallSite"* %cache_const576, i64 0, i32 2, !dbg !28
  %execute578 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos577, align 8, !dbg !28
  store i32 71, i32* %8, align 4, !dbg !28
  %call_site_execute579 = call %"struct.rubinius::Object"* %execute578(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const576, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check581 = icmp eq %"struct.rubinius::Object"* %call_site_execute579, null, !dbg !28
  br i1 %null_check581, label %bail_out, label %continue526, !dbg !28

continue586:                                      ; preds = %poly_fallback662, %bignum597, %tagnow596, %continue648
  %send_result672 = phi %"struct.rubinius::Object"* [ %77, %continue648 ], [ %big_value610, %bignum597 ], [ %as_obj613, %tagnow596 ], [ %call_site_execute669, %poly_fallback662 ], !dbg !28
  store %"struct.rubinius::Object"* %send_result672, %"struct.rubinius::Object"** %23, align 8, !dbg !28
  %local678 = load %"struct.rubinius::Object"** %24, align 8, !dbg !37, !rbx-classid !30
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %stack, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !37
  %cast692 = ptrtoint %"struct.rubinius::Object"* %local678 to i64, !dbg !37
  %masked695 = and i64 %cast692, 1, !dbg !37
  %is_fixnum696 = icmp eq i64 %masked695, 0, !dbg !37
  br i1 %is_fixnum696, label %class_fallback681, label %push_add688, !dbg !37

poly_fallback:                                    ; preds = %continue526
  %masked619 = and i64 %cast599, 3, !dbg !28
  %is_reference620 = icmp eq i64 %masked619, 0, !dbg !28
  br i1 %is_reference620, label %check_class_id621, label %poly_fallback662, !dbg !28

push_add595:                                      ; preds = %continue526
  %ashr605 = ashr i64 %cast599, 1, !dbg !28
  %ashr607 = ashr i64 %cast600, 1, !dbg !28
  %fixnum.add608 = add i64 %ashr605, %ashr607, !dbg !28
  %fixnum.add608.off = add i64 %fixnum.add608, 4611686018427387903, !dbg !28
  %71 = icmp ult i64 %fixnum.add608.off, 9223372036854775807, !dbg !28
  br i1 %71, label %tagnow596, label %bignum597, !dbg !28

tagnow596:                                        ; preds = %push_add595
  %shl611 = shl i64 %fixnum.add608, 1, !dbg !28
  %or612 = or i64 %shl611, 1, !dbg !28
  %as_obj613 = inttoptr i64 %or612 to %"struct.rubinius::Object"*, !dbg !28
  br label %continue586, !dbg !28

bignum597:                                        ; preds = %push_add595
  %big_value610 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add608) #2, !dbg !28
  br label %continue586, !dbg !28

check_class_id621:                                ; preds = %poly_fallback
  %class_pos624 = getelementptr %"struct.rubinius::Object"* %stack_load592, i64 0, i32 0, i32 1, !dbg !28
  %ref_class625 = load %"struct.rubinius::Class"** %class_pos624, align 8, !dbg !28
  %class_id_pos626 = getelementptr %"struct.rubinius::Class"* %ref_class625, i64 0, i32 4, !dbg !28
  %class_id627 = load i32* %class_id_pos626, align 4, !dbg !28
  %check_class_id628 = icmp eq i32 %class_id627, 77, !dbg !28
  br i1 %check_class_id628, label %correct_class622, label %poly_fallback662, !dbg !28

correct_class622:                                 ; preds = %check_class_id621
  %serial_id_pos629 = getelementptr %"struct.rubinius::Class"* %ref_class625, i64 0, i32 5, !dbg !28
  %serial_id630 = load i32* %serial_id_pos629, align 4, !dbg !28
  %check_serial_id631 = icmp eq i32 %serial_id630, 224, !dbg !28
  br i1 %check_serial_id631, label %correct_serial623, label %serial_fallback585, !dbg !28

correct_serial623:                                ; preds = %correct_class622
  %masked636 = and i64 %cast600, 3, !dbg !28
  %is_reference637 = icmp eq i64 %masked636, 0, !dbg !28
  br i1 %is_reference637, label %check_class_id638, label %continue634, !dbg !28

serial_fallback585:                               ; preds = %correct_class622
  store i32 74, i32* %8, align 4, !dbg !28
  %72 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 74, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !28
  br label %return_pad, !dbg !28

check_class_id638:                                ; preds = %correct_serial623
  %class_pos640 = getelementptr %"struct.rubinius::Object"* %send_result582, i64 0, i32 0, i32 1, !dbg !28
  %ref_class641 = load %"struct.rubinius::Class"** %class_pos640, align 8, !dbg !28
  %class_id_pos642 = getelementptr %"struct.rubinius::Class"* %ref_class641, i64 0, i32 4, !dbg !28
  %class_id643 = load i32* %class_id_pos642, align 4, !dbg !28
  %check_class_id644 = icmp eq i32 %class_id643, 77, !dbg !28
  br i1 %check_class_id644, label %correct_class639, label %continue634, !dbg !28

correct_class639:                                 ; preds = %check_class_id638
  %arg.value_pos646 = getelementptr %"struct.rubinius::Object"* %send_result582, i64 1, !dbg !28
  %73 = bitcast %"struct.rubinius::Object"* %arg.value_pos646 to double*, !dbg !28
  %farg647 = load double* %73, align 8, !dbg !28
  br label %continue648, !dbg !28

continue634:                                      ; preds = %check_class_id638, %correct_serial623
  %is_fixnum651 = icmp eq i64 %fixnums_anded601, 0, !dbg !28
  br i1 %is_fixnum651, label %poly_fallback662, label %guarded_body652, !dbg !28

guarded_body652:                                  ; preds = %continue634
  %ashr654 = ashr i64 %cast600, 1, !dbg !28
  %74 = sitofp i64 %ashr654 to double, !dbg !28
  br label %continue648, !dbg !28

continue648:                                      ; preds = %guarded_body652, %correct_class639
  %rhs655 = phi double [ %farg647, %correct_class639 ], [ %74, %guarded_body652 ], !dbg !28
  %self.value_pos659 = getelementptr %"struct.rubinius::Object"* %stack_load592, i64 1, !dbg !28
  %75 = bitcast %"struct.rubinius::Object"* %self.value_pos659 to double*, !dbg !28
  %fself660 = load double* %75, align 8, !dbg !28
  %float.add = fadd double %rhs655, %fself660, !dbg !28
  %result661 = call %"struct.rubinius::Float"* @rbx_float_allocate(%"struct.rubinius::State"* %state) #2, !dbg !28, !rbx-classid !34
  %76 = getelementptr %"struct.rubinius::Float"* %result661, i64 0, i32 1, !dbg !28
  store double %float.add, double* %76, align 8, !dbg !28
  %77 = getelementptr inbounds %"struct.rubinius::Float"* %result661, i64 0, i32 0, i32 0, !dbg !28
  br label %continue586, !dbg !28

poly_fallback662:                                 ; preds = %continue634, %poly_fallback, %check_class_id621
  store %"struct.rubinius::Object"* %stack_load592, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !28
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !28
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !28
  store i32 1, i32* %out_args_total, align 8, !dbg !28
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !28
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !28
  %cache_const666 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208008 to %"struct.rubinius::CallSite"**), align 8, !dbg !28
  %execute_pos667 = getelementptr %"struct.rubinius::CallSite"* %cache_const666, i64 0, i32 2, !dbg !28
  %execute668 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos667, align 8, !dbg !28
  store i32 74, i32* %8, align 4, !dbg !28
  %call_site_execute669 = call %"struct.rubinius::Object"* %execute668(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const666, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !28
  %null_check671 = icmp eq %"struct.rubinius::Object"* %call_site_execute669, null, !dbg !28
  br i1 %null_check671, label %bail_out, label %continue586, !dbg !28

class_fallback681:                                ; preds = %continue586
  store %"struct.rubinius::Object"* %local678, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !37
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !37
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !37
  store i32 1, i32* %out_args_total, align 8, !dbg !37
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !37
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !37
  %cache_const711 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208080 to %"struct.rubinius::CallSite"**), align 16, !dbg !37
  %execute_pos712 = getelementptr %"struct.rubinius::CallSite"* %cache_const711, i64 0, i32 2, !dbg !37
  %execute713 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos712, align 8, !dbg !37
  store i32 83, i32* %8, align 4, !dbg !37
  %call_site_execute714 = call %"struct.rubinius::Object"* %execute713(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const711, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !37
  %null_check716 = icmp eq %"struct.rubinius::Object"* %call_site_execute714, null, !dbg !37
  br i1 %null_check716, label %bail_out, label %continue683, !dbg !37

continue683:                                      ; preds = %class_fallback681, %bignum690, %tagnow689
  %send_result717 = phi %"struct.rubinius::Object"* [ %big_value703, %bignum690 ], [ %as_obj706, %tagnow689 ], [ %call_site_execute714, %class_fallback681 ], !dbg !37
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %stack, align 8, !dbg !37
  store %"struct.rubinius::Object"* %send_result717, %"struct.rubinius::Object"** %24, align 8, !dbg !37
  %vm_jit = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !37
  %78 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit, i64 0, i32 5, !dbg !37
  %check_interrupts = load i8* %78, align 1, !dbg !37
  %check_global_interrupts = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !37
  %or723 = or i8 %check_global_interrupts, %check_interrupts, !dbg !37
  %needs_interrupts = icmp eq i8 %or723, 0, !dbg !37
  br i1 %needs_interrupts, label %ip44, label %interrupts, !dbg !37

push_add688:                                      ; preds = %continue586
  %ashr698 = ashr i64 %cast692, 1, !dbg !37
  %fixnum.add701 = add i64 %ashr698, 1, !dbg !37
  %fixnum.add701.off = add i64 %ashr698, 4611686018427387904, !dbg !37
  %79 = icmp ult i64 %fixnum.add701.off, 9223372036854775807, !dbg !37
  br i1 %79, label %tagnow689, label %bignum690, !dbg !37

tagnow689:                                        ; preds = %push_add688
  %shl704 = shl i64 %fixnum.add701, 1, !dbg !37
  %or705 = or i64 %shl704, 1, !dbg !37
  %as_obj706 = inttoptr i64 %or705 to %"struct.rubinius::Object"*, !dbg !37
  br label %continue683, !dbg !37

bignum690:                                        ; preds = %push_add688
  %big_value703 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add701) #2, !dbg !37
  br label %continue683, !dbg !37

interrupts:                                       ; preds = %continue683
  store i32 89, i32* %8, align 4, !dbg !37
  %ci = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !37
  %null_check726 = icmp eq %"struct.rubinius::Object"* %ci, null, !dbg !37
  br i1 %null_check726, label %bail_out, label %interrupts.ip44_crit_edge, !dbg !37

interrupts.ip44_crit_edge:                        ; preds = %interrupts
  %local85.pre = load %"struct.rubinius::Object"** %24, align 8, !dbg !26
  br label %ip44, !dbg !37

ip92:                                             ; preds = %continue111
  %local730 = load %"struct.rubinius::Object"** %21, align 8, !dbg !38, !rbx-classid !36
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack, align 8, !dbg !38
  %local733 = load %"struct.rubinius::Object"** %23, align 8, !dbg !38, !rbx-classid !29
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !38
  %cast740 = ptrtoint %"struct.rubinius::Object"* %local730 to i64, !dbg !38
  %masked741 = and i64 %cast740, 3, !dbg !38
  %is_reference742 = icmp eq i64 %masked741, 0, !dbg !38
  br i1 %is_reference742, label %check_class_id743, label %class_fallback735, !dbg !38

check_class_id743:                                ; preds = %ip92
  %class_pos746 = getelementptr %"struct.rubinius::Object"* %local730, i64 0, i32 0, i32 1, !dbg !38
  %ref_class747 = load %"struct.rubinius::Class"** %class_pos746, align 8, !dbg !38
  %class_id_pos748 = getelementptr %"struct.rubinius::Class"* %ref_class747, i64 0, i32 4, !dbg !38
  %class_id749 = load i32* %class_id_pos748, align 4, !dbg !38
  %check_class_id750 = icmp eq i32 %class_id749, 6, !dbg !38
  br i1 %check_class_id750, label %correct_class744, label %class_fallback735, !dbg !38

correct_class744:                                 ; preds = %check_class_id743
  %serial_id_pos751 = getelementptr %"struct.rubinius::Class"* %ref_class747, i64 0, i32 5, !dbg !38
  %serial_id752 = load i32* %serial_id_pos751, align 4, !dbg !38
  %check_serial_id753 = icmp eq i32 %serial_id752, 249, !dbg !38
  br i1 %check_serial_id753, label %correct_serial745, label %serial_fallback736, !dbg !38

class_fallback735:                                ; preds = %check_class_id743, %ip92
  store i32 98, i32* %8, align 4, !dbg !38
  %80 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 0), !dbg !38
  br label %return_pad, !dbg !38

correct_serial745:                                ; preds = %correct_class744
  %call_frame763 = bitcast [13 x %"struct.rubinius::Object"*]* %cfstk762912 to %"struct.rubinius::CallFrame"*, !dbg !39
  %stack764 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 9, !dbg !39
  %81 = getelementptr inbounds [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 0, !dbg !39
  %call_frame.c914 = bitcast [18 x %"struct.rubinius::Object"*]* %cfstk908 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %call_frame.c914, %"struct.rubinius::Object"** %81, align 8, !dbg !39
  %82 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 2, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 140281081076016 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %82, align 8, !dbg !39
  %compiled_code767 = load %"struct.rubinius::CompiledCode"** inttoptr (i64 140281081076016 to %"struct.rubinius::CompiledCode"**), align 16, !dbg !39
  %83 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 3, !dbg !39
  %compiled_code767.c = getelementptr inbounds %"struct.rubinius::CompiledCode"* %compiled_code767, i64 0, i32 0, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %compiled_code767.c, %"struct.rubinius::Object"** %83, align 8, !dbg !39
  %constant_scope_pos768 = getelementptr %"struct.rubinius::CompiledCode"* %compiled_code767, i64 0, i32 13, !dbg !39
  %constant_scope769 = load %"struct.rubinius::ConstantScope"** %constant_scope_pos768, align 8, !dbg !39
  %84 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 1, !dbg !39
  %constant_scope769.c = bitcast %"struct.rubinius::ConstantScope"* %constant_scope769 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %constant_scope769.c, %"struct.rubinius::Object"** %84, align 8, !dbg !39
  %85 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 4, !dbg !39
  %86 = bitcast %"struct.rubinius::Object"** %85 to i32*, !dbg !39
  store i32 12, i32* %86, align 8, !dbg !39
  %87 = getelementptr %"struct.rubinius::CallFrame"* %call_frame763, i64 0, i32 5, !dbg !39
  store i32 0, i32* %87, align 4, !dbg !39
  %88 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 7, !dbg !39
  %vars766.c = bitcast [7 x %"struct.rubinius::Object"*]* %var_mem765913 to %"struct.rubinius::Object"*, !dbg !39
  store %"struct.rubinius::Object"* %vars766.c, %"struct.rubinius::Object"** %88, align 8, !dbg !39
  %stack_pos771 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 10, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos771, align 8, !dbg !39
  %stack_pos772 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 11, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos772, align 8, !dbg !39
  %stack_pos773 = getelementptr [13 x %"struct.rubinius::Object"*]* %cfstk762912, i64 0, i64 12, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos773, align 8, !dbg !39
  %module774 = load %"struct.rubinius::Module"** inttoptr (i64 140281081076032 to %"struct.rubinius::Module"**), align 64, !dbg !39
  %89 = getelementptr inbounds [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 0, !dbg !39
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %89, align 8, !dbg !39
  %90 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 2, !dbg !39
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %90, align 8, !dbg !39
  %91 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 4, !dbg !39
  %module774.c = getelementptr inbounds %"struct.rubinius::Module"* %module774, i64 0, i32 0, !dbg !39
  store %"struct.rubinius::Object"* %module774.c, %"struct.rubinius::Object"** %91, align 8, !dbg !39
  %92 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 3, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %92, align 8, !dbg !39
  %93 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 1, !dbg !39
  store %"struct.rubinius::Object"* null, %"struct.rubinius::Object"** %93, align 8, !dbg !39
  %94 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 5, !dbg !39
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %94, align 8, !dbg !39
  %95 = getelementptr [7 x %"struct.rubinius::Object"*]* %var_mem765913, i64 0, i64 6, !dbg !39
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %95, align 8, !dbg !39
  store %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"** %stack764, align 8, !dbg !40
  %field_pos915 = getelementptr %"struct.rubinius::Object"* %local730, i64 1, !dbg !40
  %field_pos = bitcast %"struct.rubinius::Object"* %field_pos915 to %"struct.rubinius::Object"**, !dbg !40
  %field = load %"struct.rubinius::Object"** %field_pos, align 8, !dbg !40
  store %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"** %stack_pos771, align 8, !dbg !40
  store %"struct.rubinius::Object"* %local733, %"struct.rubinius::Object"** %stack_pos772, align 8, !dbg !40
  %prim_value = call %"struct.rubinius::Object"* @jit_stub_array_aset(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Object"* %local730, %"struct.rubinius::Object"* %field, %"struct.rubinius::Object"* %local733) #2, !dbg !40
  %magicptr = ptrtoint %"struct.rubinius::Object"* %prim_value to i64, !dbg !40
  switch i64 %magicptr, label %continue798 [
    i64 34, label %poly_fallback815
    i64 0, label %bail_out777
  ], !dbg !40

serial_fallback736:                               ; preds = %correct_class744
  store i32 98, i32* %8, align 4, !dbg !38
  %96 = call %"struct.rubinius::Object"* @rbx_continue_uncommon(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame, i32 98, i64 1, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::CallFrame"* null, i8* inttoptr (i64 140281080991024 to i8*), i32 0, i8 1), !dbg !38
  br label %return_pad, !dbg !38

bail_out777:                                      ; preds = %correct_serial745, %poly_fallback815
  %rth778 = call i1 @rbx_return_to_here(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame763), !dbg !39
  br i1 %rth778, label %ret_raise_val779, label %return_pad754, !dbg !39

ret_raise_val779:                                 ; preds = %bail_out777
  %crv781 = call %"struct.rubinius::Object"* @rbx_clear_raise_value(%"struct.rubinius::State"* %state), !dbg !39
  br label %return_pad754, !dbg !39

continue798:                                      ; preds = %poly_fallback815, %correct_serial745
  %self830 = load %"struct.rubinius::Object"** %90, align 8, !dbg !41, !rbx-classid !42
  store %"struct.rubinius::Object"* %self830, %"struct.rubinius::Object"** %stack764, align 8, !dbg !41
  br label %return_pad754, !dbg !41

return_pad754:                                    ; preds = %bail_out777, %continue798, %ret_raise_val779
  %return_phi755 = phi %"struct.rubinius::Object"* [ %crv781, %ret_raise_val779 ], [ %self830, %continue798 ], [ null, %bail_out777 ]
  %null_check836 = icmp eq %"struct.rubinius::Object"* %return_phi755, null, !dbg !38
  br i1 %null_check836, label %bail_out, label %check_active835, !dbg !38

poly_fallback815:                                 ; preds = %correct_serial745
  %stack_load820 = load %"struct.rubinius::Object"** %stack764, align 8, !dbg !40, !rbx-classid !42
  store %"struct.rubinius::Object"* %stack_load820, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !40
  store %"struct.rubinius::Symbol"* inttoptr (i64 30886 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !40
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !40
  store i32 2, i32* %out_args_total, align 8, !dbg !40
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !40
  store %"struct.rubinius::Object"** %stack_pos771, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !40
  %cache_const822 = load %"struct.rubinius::CallSite"** inttoptr (i64 24569320 to %"struct.rubinius::CallSite"**), align 8, !dbg !40
  %execute_pos823 = getelementptr %"struct.rubinius::CallSite"* %cache_const822, i64 0, i32 2, !dbg !40
  %execute824 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos823, align 8, !dbg !40
  store i32 6, i32* %87, align 4, !dbg !40
  %call_site_execute825 = call %"struct.rubinius::Object"* %execute824(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const822, %"struct.rubinius::CallFrame"* %call_frame763, %"struct.rubinius::Arguments"* %out_args), !dbg !40
  %null_check827 = icmp eq %"struct.rubinius::Object"* %call_site_execute825, null, !dbg !40
  br i1 %null_check827, label %bail_out777, label %continue798, !dbg !40

check_active835:                                  ; preds = %return_pad754
  %local839 = load %"struct.rubinius::Object"** %22, align 8, !dbg !43, !rbx-classid !31
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %stack, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 3 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %stack_pos7, align 8, !dbg !43
  %cast853 = ptrtoint %"struct.rubinius::Object"* %local839 to i64, !dbg !43
  %masked856 = and i64 %cast853, 1, !dbg !43
  %is_fixnum857 = icmp eq i64 %masked856, 0, !dbg !43
  br i1 %is_fixnum857, label %class_fallback842, label %push_add849, !dbg !43

class_fallback842:                                ; preds = %check_active835
  store %"struct.rubinius::Object"* %local839, %"struct.rubinius::Object"** %out_args_recv, align 8, !dbg !43
  store %"struct.rubinius::Symbol"* inttoptr (i64 1374 to %"struct.rubinius::Symbol"*), %"struct.rubinius::Symbol"** %out_args_name, align 8, !dbg !43
  store %"struct.rubinius::Object"* inttoptr (i64 26 to %"struct.rubinius::Object"*), %"struct.rubinius::Object"** %out_args_block, align 8, !dbg !43
  store i32 1, i32* %out_args_total, align 8, !dbg !43
  store %"struct.rubinius::Tuple"* null, %"struct.rubinius::Tuple"** %out_args_container, align 8, !dbg !43
  store %"struct.rubinius::Object"** %stack_pos7, %"struct.rubinius::Object"*** %out_args_arguments, align 8, !dbg !43
  %cache_const872 = load %"struct.rubinius::CallSite"** inttoptr (i64 25208256 to %"struct.rubinius::CallSite"**), align 64, !dbg !43
  %execute_pos873 = getelementptr %"struct.rubinius::CallSite"* %cache_const872, i64 0, i32 2, !dbg !43
  %execute874 = load %"struct.rubinius::Object"* (%"struct.rubinius::State"*, %"struct.rubinius::CallSite"*, %"struct.rubinius::CallFrame"*, %"struct.rubinius::Arguments"*)** %execute_pos873, align 8, !dbg !43
  store i32 105, i32* %8, align 4, !dbg !43
  %call_site_execute875 = call %"struct.rubinius::Object"* %execute874(%"struct.rubinius::State"* %state, %"struct.rubinius::CallSite"* %cache_const872, %"struct.rubinius::CallFrame"* %call_frame, %"struct.rubinius::Arguments"* %out_args), !dbg !43
  %null_check877 = icmp eq %"struct.rubinius::Object"* %call_site_execute875, null, !dbg !43
  br i1 %null_check877, label %bail_out, label %continue844, !dbg !43

continue844:                                      ; preds = %class_fallback842, %bignum851, %tagnow850
  %send_result878 = phi %"struct.rubinius::Object"* [ %big_value864, %bignum851 ], [ %as_obj867, %tagnow850 ], [ %call_site_execute875, %class_fallback842 ], !dbg !43
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %stack, align 8, !dbg !43
  store %"struct.rubinius::Object"* %send_result878, %"struct.rubinius::Object"** %22, align 8, !dbg !43
  %vm_jit886 = load %"struct.rubinius::VMJIT"** %25, align 8, !dbg !43
  %97 = getelementptr %"struct.rubinius::VMJIT"* %vm_jit886, i64 0, i32 5, !dbg !43
  %check_interrupts887 = load i8* %97, align 1, !dbg !43
  %check_global_interrupts888 = load i8* inttoptr (i64 22553854 to i8*), align 2, !dbg !43
  %or889 = or i8 %check_global_interrupts888, %check_interrupts887, !dbg !43
  %needs_interrupts890 = icmp eq i8 %or889, 0, !dbg !43
  br i1 %needs_interrupts890, label %ip18, label %interrupts884, !dbg !43

push_add849:                                      ; preds = %check_active835
  %ashr859 = ashr i64 %cast853, 1, !dbg !43
  %fixnum.add862 = add i64 %ashr859, 1, !dbg !43
  %fixnum.add862.off = add i64 %ashr859, 4611686018427387904, !dbg !43
  %98 = icmp ult i64 %fixnum.add862.off, 9223372036854775807, !dbg !43
  br i1 %98, label %tagnow850, label %bignum851, !dbg !43

tagnow850:                                        ; preds = %push_add849
  %shl865 = shl i64 %fixnum.add862, 1, !dbg !43
  %or866 = or i64 %shl865, 1, !dbg !43
  %as_obj867 = inttoptr i64 %or866 to %"struct.rubinius::Object"*, !dbg !43
  br label %continue844, !dbg !43

bignum851:                                        ; preds = %push_add849
  %big_value864 = call %"struct.rubinius::Object"* @rbx_create_bignum(%"struct.rubinius::State"* %state, i64 %fixnum.add862) #2, !dbg !43
  br label %continue844, !dbg !43

interrupts884:                                    ; preds = %continue844
  store i32 111, i32* %8, align 4, !dbg !43
  %ci891 = call %"struct.rubinius::Object"* @rbx_check_interrupts(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !43
  %null_check894 = icmp eq %"struct.rubinius::Object"* %ci891, null, !dbg !43
  br i1 %null_check894, label %bail_out, label %interrupts884.ip18_crit_edge, !dbg !43

interrupts884.ip18_crit_edge:                     ; preds = %interrupts884
  %local.pre = load %"struct.rubinius::Object"** %22, align 8, !dbg !23
  br label %ip18, !dbg !43

ip114:                                            ; preds = %continue40
  %local898 = load %"struct.rubinius::Object"** %21, align 8, !dbg !19, !rbx-classid !36
  store %"struct.rubinius::Object"* %local898, %"struct.rubinius::Object"** %stack, align 8, !dbg !19
  br label %return_pad, !dbg !19

return_pad:                                       ; preds = %prologue_check, %bail_out, %ip114, %serial_fallback736, %class_fallback735, %serial_fallback585, %serial_fallback525, %serial_fallback151, %class_fallback150, %ret_raise_val, %arg_error
  %return_phi = phi %"struct.rubinius::Object"* [ %ret, %arg_error ], [ %crv, %ret_raise_val ], [ %33, %class_fallback150 ], [ %42, %serial_fallback151 ], [ %65, %serial_fallback525 ], [ %72, %serial_fallback585 ], [ %80, %class_fallback735 ], [ %96, %serial_fallback736 ], [ %local898, %ip114 ], [ null, %bail_out ], [ null, %prologue_check ]
  ret %"struct.rubinius::Object"* %return_phi, !dbg !19

prologue_check:                                   ; preds = %bottom
  %ci907 = call %"struct.rubinius::Object"* @rbx_prologue_check(%"struct.rubinius::State"* %state, %"struct.rubinius::CallFrame"* %call_frame), !dbg !19
  %99 = icmp eq %"struct.rubinius::Object"* %ci907, null, !dbg !19
  br i1 %99, label %return_pad, label %method_body, !dbg !19
}

[[[ JIT Machine Code: _X_Object#vector_times_array_transposed@4 ]]]
0x7f95d65c8170  push %rbp               
0x7f95d65c8171  mov %rsp, %rbp          
0x7f95d65c8174  push %r15               
0x7f95d65c8176  push %r14               
0x7f95d65c8178  push %r13               
0x7f95d65c817a  push %r12               
0x7f95d65c817c  push %rbx               
0x7f95d65c817d  subq $0x298, %rsp       
0x7f95d65c8184  mov %rdi, %r13          
0x7f95d65c8187  cmp $0x1, 0x18(%r8)     
0x7f95d65c818c  jnz 0x1fa                ; 0x7f95d65c836a
0x7f95d65c8192  lea -0xa0(%rbp), %r15   
0x7f95d65c8199  mov %rsi, -0xe8(%rbp)   
0x7f95d65c81a0  mov %r8, -0xa8(%rbp)    
0x7f95d65c81a7  movq $0x0, -0xd8(%rbp)  
0x7f95d65c81b2  mov %rdx, -0xd0(%rbp)   
0x7f95d65c81b9  mov 0xa0(%rdx), %rax    
0x7f95d65c81c0  mov %rax, -0xe0(%rbp)   
0x7f95d65c81c7  mov $0x28, -0xc8(%rbp)  
0x7f95d65c81d1  mov $0x0, -0xc4(%rbp)   
0x7f95d65c81db  lea -0x140(%rbp), %rax  
0x7f95d65c81e2  mov %rax, -0xb0(%rbp)   
0x7f95d65c81e9  mov $0x7f95bc004d30, %rax
0x7f95d65c81f3  mov %rax, -0xc0(%rbp)   
0x7f95d65c81fa  movq $0xffffffb8, %rax  
0x7f95d65c8201  mov $0x9, %edx          
0x7f95d65c8206  lea -0xe8(%rbp), %r14   
0x7f95d65c820d  mov %r14, %rsi          
0x7f95d65c8210  sub %rax, %rsi          
0x7f95d65c8213  movq $0x1a, (%rsi)      
0x7f95d65c821a  addq $0xf8, %rax        
0x7f95d65c821e  dec %edx                
0x7f95d65c8220  jnz 0x9d                 ; 0x7f95d65c820d
0x7f95d65c8226  movq $0x0, -0x140(%rbp) 
0x7f95d65c8231  mov 0x8(%r8), %rax      
0x7f95d65c8235  mov %rax, -0x130(%rbp)  
0x7f95d65c823c  mov %rcx, -0x120(%rbp)  
0x7f95d65c8243  mov 0x10(%r8), %rax     
0x7f95d65c8247  mov %rax, -0x128(%rbp)  
0x7f95d65c824e  movq $0x0, -0x138(%rbp) 
0x7f95d65c8259  movq $0x1a, -0x118(%rbp)
0x7f95d65c8264  movq $0x1a, -0x110(%rbp)
0x7f95d65c826f  movq $0x1a, -0x108(%rbp)
0x7f95d65c827a  movq $0x1a, -0x100(%rbp)
0x7f95d65c8285  movq $0x1a, -0xf8(%rbp) 
0x7f95d65c8290  movq $0x1a, -0xf0(%rbp) 
0x7f95d65c829b  mov 0x20(%r8), %rax     
0x7f95d65c829f  mov (%rax), %rax        
0x7f95d65c82a2  mov %rax, -0x110(%rbp)  
0x7f95d65c82a9  mov 0x8(%r13), %rax     
0x7f95d65c82ad  mov 0x15824fe, %cl      
0x7f95d65c82b4  or 0x16(%rax), %cl      
0x7f95d65c82b7  jnz 0x157                ; 0x7f95d65c82c7
0x7f95d65c82bd  cmp 0x8(%rax), %r14     
0x7f95d65c82c1  jae 0x17b                ; 0x7f95d65c82eb
0x7f95d65c82c7  mov $0x762f80, %rax      ; rbx_prologue_check
0x7f95d65c82d1  lea -0xe8(%rbp), %rsi   
0x7f95d65c82d8  mov %r13, %rdi          
0x7f95d65c82db  callq *%rax             
0x7f95d65c82dd  mov %rax, %rcx          
0x7f95d65c82e0  xor %eax, %eax          
0x7f95d65c82e2  test %rcx, %rcx         
0x7f95d65c82e5  jz 0x1384                ; 0x7f95d65c94f4
0x7f95d65c82eb  mov $0x762710, %rbx      ; rbx_make_array
0x7f95d65c82f5  xor %esi, %esi          
0x7f95d65c82f7  mov %r13, %rdi          
0x7f95d65c82fa  mov %r15, %rdx          
0x7f95d65c82fd  callq *%rbx             
0x7f95d65c82ff  mov %rax, -0xa0(%rbp)   
0x7f95d65c8306  movq $0x1, -0x98(%rbp)  
0x7f95d65c8311  lea -0x90(%rbp), %rdx   
0x7f95d65c8318  mov %rax, -0x90(%rbp)   
0x7f95d65c831f  movq $0x1, -0x88(%rbp)  
0x7f95d65c832a  mov $0x2, %esi          
0x7f95d65c832f  mov %r13, %rdi          
0x7f95d65c8332  callq *%rbx             
0x7f95d65c8334  mov -0xa0(%rbp), %rcx   
0x7f95d65c833b  mov -0x98(%rbp), %r15   
0x7f95d65c8342  mov %rax, -0xa0(%rbp)   
0x7f95d65c8349  mov %rcx, -0x90(%rbp)   
0x7f95d65c8350  mov %rcx, -0x108(%rbp)  
0x7f95d65c8357  lea -0x1b8(%rbp), %r12  
0x7f95d65c835e  mov %r15, -0x100(%rbp)  
0x7f95d65c8365  jmp 0x21d                ; 0x7f95d65c838d
0x7f95d65c836a  mov $0x760d50, %rax      ; rbx_arg_error
0x7f95d65c8374  mov $0x1, %ecx          
0x7f95d65c8379  mov %r13, %rdi          
0x7f95d65c837c  mov %r8, %rdx           
0x7f95d65c837f  callq *%rax             
0x7f95d65c8381  jmp 0x1384               ; 0x7f95d65c94f4
0x7f95d65c8386  mov -0x100(%rbp), %r15  
0x7f95d65c838d  mov %r15, -0xa0(%rbp)   
0x7f95d65c8394  mov 0x180a318, %rax     
0x7f95d65c839c  mov 0x30(%rax), %rcx    
0x7f95d65c83a0  cmp -0xe0(%rbp), %rcx   
0x7f95d65c83a7  jnz 0x256                ; 0x7f95d65c83c6
0x7f95d65c83ad  mov 0x15824f4, %ecx     
0x7f95d65c83b4  cmp 0x44(%rax), %ecx    
0x7f95d65c83b7  jnz 0x256                ; 0x7f95d65c83c6
0x7f95d65c83bd  mov 0x20(%rax), %rax    
0x7f95d65c83c1  jmp 0x280                ; 0x7f95d65c83f0
0x7f95d65c83c6  mov $0x14, -0xc4(%rbp)  
0x7f95d65c83d0  mov $0x180a318, %edx    
0x7f95d65c83d5  mov %r13, %rdi          
0x7f95d65c83d8  mov %r14, %rsi          
0x7f95d65c83db  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c83e5  callq *%rax             
0x7f95d65c83e7  test %rax, %rax         
0x7f95d65c83ea  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c83f0  mov %rax, -0x98(%rbp)   
0x7f95d65c83f7  mov %eax, %ecx          
0x7f95d65c83f9  and %r15d, %ecx         
0x7f95d65c83fc  testb $0x1, %cl         
0x7f95d65c83ff  jnz 0x2f3                ; 0x7f95d65c8463
0x7f95d65c8405  mov %r15, -0x50(%rbp)   
0x7f95d65c8409  movq $0x586, -0x58(%rbp)
0x7f95d65c8411  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8419  mov $0x1, -0x40(%rbp)   
0x7f95d65c8420  movq $0x0, -0x30(%rbp)  
0x7f95d65c8428  lea -0x98(%rbp), %rax   
0x7f95d65c842f  mov %rax, -0x38(%rbp)   
0x7f95d65c8433  mov 0x180a328, %rsi     
0x7f95d65c843b  mov 0x20(%rsi), %rax    
0x7f95d65c843f  mov $0x16, -0xc4(%rbp)  
0x7f95d65c8449  mov %r13, %rdi          
0x7f95d65c844c  mov %r14, %rdx          
0x7f95d65c844f  lea -0x58(%rbp), %rcx   
0x7f95d65c8453  callq *%rax             
0x7f95d65c8455  test %rax, %rax         
0x7f95d65c8458  jnz 0x304                ; 0x7f95d65c8474
0x7f95d65c845e  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c8463  cmp %rax, %r15          
0x7f95d65c8466  setl %al                
0x7f95d65c8469  movzxb %al, %eax        
0x7f95d65c846c  lea 0xa(%rax,8), %rax   
0x7f95d65c8474  mov %rax, -0xa0(%rbp)   
0x7f95d65c847b  andq $0xf, %rax         
0x7f95d65c847f  cmpq $0xa, %rax         
0x7f95d65c8483  jz 0x1396                ; 0x7f95d65c9506
0x7f95d65c8489  movq $0x1, -0xa0(%rbp)  
0x7f95d65c8494  movq $0x1, -0x98(%rbp)  
0x7f95d65c849f  movq $0x1, -0x90(%rbp)  
0x7f95d65c84aa  movq $0x1, -0x88(%rbp)  
0x7f95d65c84b5  mov $0x2, %esi          
0x7f95d65c84ba  mov %r13, %rdi          
0x7f95d65c84bd  lea -0x90(%rbp), %rdx   
0x7f95d65c84c4  mov $0x762710, %rax      ; rbx_make_array
0x7f95d65c84ce  callq *%rax             
0x7f95d65c84d0  mov -0xa0(%rbp), %rcx   
0x7f95d65c84d7  mov -0x98(%rbp), %rbx   
0x7f95d65c84de  mov %rax, -0xa0(%rbp)   
0x7f95d65c84e5  mov %rcx, -0x90(%rbp)   
0x7f95d65c84ec  mov %rcx, -0xf8(%rbp)   
0x7f95d65c84f3  mov %rbx, -0xf0(%rbp)   
0x7f95d65c84fa  jmp 0x3f9                ; 0x7f95d65c8569
0x7f95d65c84ff  mov -0xf0(%rbp), %rbx   
0x7f95d65c8506  jmp 0x3f9                ; 0x7f95d65c8569
0x7f95d65c850b  mov %rcx, -0x50(%rbp)   
0x7f95d65c850f  movq $0x55e, -0x58(%rbp)
0x7f95d65c8517  movq $0x1a, -0x48(%rbp) 
0x7f95d65c851f  mov $0x1, -0x40(%rbp)   
0x7f95d65c8526  movq $0x0, -0x30(%rbp)  
0x7f95d65c852e  lea -0x98(%rbp), %rax   
0x7f95d65c8535  mov %rax, -0x38(%rbp)   
0x7f95d65c8539  mov 0x180a4c8, %rsi     
0x7f95d65c8541  mov 0x20(%rsi), %rax    
0x7f95d65c8545  mov $0x4a, -0xc4(%rbp)  
0x7f95d65c854f  mov %r13, %rdi          
0x7f95d65c8552  mov %r14, %rdx          
0x7f95d65c8555  lea -0x58(%rbp), %rcx   
0x7f95d65c8559  callq *%rax             
0x7f95d65c855b  test %rax, %rax         
0x7f95d65c855e  jnz 0xe71                ; 0x7f95d65c8fe1
0x7f95d65c8564  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c8569  mov %rbx, -0xa0(%rbp)   
0x7f95d65c8570  mov 0x180a3e8, %rax     
0x7f95d65c8578  mov 0x30(%rax), %rcx    
0x7f95d65c857c  cmp -0xe0(%rbp), %rcx   
0x7f95d65c8583  jnz 0x432                ; 0x7f95d65c85a2
0x7f95d65c8589  mov 0x15824f4, %ecx     
0x7f95d65c8590  cmp 0x44(%rax), %ecx    
0x7f95d65c8593  jnz 0x432                ; 0x7f95d65c85a2
0x7f95d65c8599  mov 0x20(%rax), %rax    
0x7f95d65c859d  jmp 0x45c                ; 0x7f95d65c85cc
0x7f95d65c85a2  mov $0x2e, -0xc4(%rbp)  
0x7f95d65c85ac  mov $0x180a3e8, %edx    
0x7f95d65c85b1  mov %r13, %rdi          
0x7f95d65c85b4  mov %r14, %rsi          
0x7f95d65c85b7  mov $0x762c00, %rax      ; rbx_push_const_fast
0x7f95d65c85c1  callq *%rax             
0x7f95d65c85c3  test %rax, %rax         
0x7f95d65c85c6  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c85cc  mov %rax, -0x98(%rbp)   
0x7f95d65c85d3  mov %eax, %ecx          
0x7f95d65c85d5  and %ebx, %ecx          
0x7f95d65c85d7  testb $0x1, %cl         
0x7f95d65c85da  jnz 0x4ce                ; 0x7f95d65c863e
0x7f95d65c85e0  mov %rbx, -0x50(%rbp)   
0x7f95d65c85e4  movq $0x586, -0x58(%rbp)
0x7f95d65c85ec  movq $0x1a, -0x48(%rbp) 
0x7f95d65c85f4  mov $0x1, -0x40(%rbp)   
0x7f95d65c85fb  movq $0x0, -0x30(%rbp)  
0x7f95d65c8603  lea -0x98(%rbp), %rax   
0x7f95d65c860a  mov %rax, -0x38(%rbp)   
0x7f95d65c860e  mov 0x180a3f8, %rsi     
0x7f95d65c8616  mov 0x20(%rsi), %rax    
0x7f95d65c861a  mov $0x30, -0xc4(%rbp)  
0x7f95d65c8624  mov %r13, %rdi          
0x7f95d65c8627  mov %r14, %rdx          
0x7f95d65c862a  lea -0x58(%rbp), %rcx   
0x7f95d65c862e  callq *%rax             
0x7f95d65c8630  test %rax, %rax         
0x7f95d65c8633  jnz 0x4df                ; 0x7f95d65c864f
0x7f95d65c8639  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c863e  cmp %rax, %rbx          
0x7f95d65c8641  setl %al                
0x7f95d65c8644  movzxb %al, %eax        
0x7f95d65c8647  lea 0xa(%rax,8), %rax   
0x7f95d65c864f  mov %rax, -0xa0(%rbp)   
0x7f95d65c8656  andq $0xf, %rax         
0x7f95d65c865a  cmpq $0xa, %rax         
0x7f95d65c865e  jz 0xfd5                 ; 0x7f95d65c9145
0x7f95d65c8664  mov -0xf8(%rbp), %rax   
0x7f95d65c866b  mov %rax, -0xa0(%rbp)   
0x7f95d65c8672  mov -0x130(%rbp), %rcx  
0x7f95d65c8679  mov %rcx, -0x98(%rbp)   
0x7f95d65c8680  mov -0xf0(%rbp), %rax   
0x7f95d65c8687  mov %rax, -0x90(%rbp)   
0x7f95d65c868e  mov -0x100(%rbp), %rsi  
0x7f95d65c8695  mov %rsi, -0x88(%rbp)   
0x7f95d65c869c  testb $0x3, %cl         
0x7f95d65c869f  jnz 0x1311               ; 0x7f95d65c9481
0x7f95d65c86a5  mov 0x8(%rcx), %rdx     
0x7f95d65c86a9  cmp $0x2ab, 0x70(%rdx)  
0x7f95d65c86b0  jnz 0x1311               ; 0x7f95d65c9481
0x7f95d65c86b6  cmp $0x17, 0x74(%rdx)   
0x7f95d65c86ba  mov %r12, %rbx          
0x7f95d65c86bd  jnz 0x1336               ; 0x7f95d65c94a6
0x7f95d65c86c3  mov %r14, -0x1b8(%rbp)  
0x7f95d65c86ca  mov $0x7f95bc07ea00, %rdx
0x7f95d65c86d4  mov %rdx, -0x1a8(%rbp)  
0x7f95d65c86db  mov (%rdx), %rdx        
0x7f95d65c86de  mov %rdx, -0x1a0(%rbp)  
0x7f95d65c86e5  mov 0xa0(%rdx), %rdx    
0x7f95d65c86ec  mov %rdx, -0x1b0(%rbp)  
0x7f95d65c86f3  mov $0xc, -0x198(%rbp)  
0x7f95d65c86fd  mov $0x0, -0x194(%rbp)  
0x7f95d65c8707  lea -0x1f8(%rbp), %rdx  
0x7f95d65c870e  mov %rdx, -0x180(%rbp)  
0x7f95d65c8715  mov $0x6, %edx          
0x7f95d65c871a  lea -0x170(%rbp), %rdi  
0x7f95d65c8721  movq $0x1a, (%rdi)      
0x7f95d65c8728  addq $0x8, %rdi         
0x7f95d65c872c  dec %edx                
0x7f95d65c872e  jnz 0x5b1                ; 0x7f95d65c8721
0x7f95d65c8734  mov $0x7f95bc07ea10, %rdx
0x7f95d65c873e  mov (%rdx), %rdx        
0x7f95d65c8741  movq $0x0, -0x1f8(%rbp) 
0x7f95d65c874c  mov %rcx, -0x1e8(%rbp)  
0x7f95d65c8753  mov %rdx, -0x1d8(%rbp)  
0x7f95d65c875a  movq $0x1a, -0x1e0(%rbp)
0x7f95d65c8765  movq $0x0, -0x1f0(%rbp) 
0x7f95d65c8770  movq $0x1a, -0x1d0(%rbp)
0x7f95d65c877b  mov %rax, -0x1c8(%rbp)  
0x7f95d65c8782  mov %rsi, -0x1c0(%rbp)  
0x7f95d65c8789  mov -0x1a0(%rbp), %rcx  
0x7f95d65c8790  mov 0xc0(%rcx), %rcx    
0x7f95d65c8797  mov 0x20(%rcx), %rcx    
0x7f95d65c879b  mov %rcx, -0x170(%rbp)  
0x7f95d65c87a2  mov %rax, -0x168(%rbp)  
0x7f95d65c87a9  mov %rsi, -0x160(%rbp)  
0x7f95d65c87b0  mov %esi, %ecx          
0x7f95d65c87b2  and %eax, %ecx          
0x7f95d65c87b4  testb $0x1, %cl         
0x7f95d65c87b7  jnz 0x6ab                ; 0x7f95d65c881b
0x7f95d65c87bd  mov %rax, -0x50(%rbp)   
0x7f95d65c87c1  movq $0x55e, -0x58(%rbp)
0x7f95d65c87c9  movq $0x1a, -0x48(%rbp) 
0x7f95d65c87d1  mov $0x1, -0x40(%rbp)   
0x7f95d65c87d8  movq $0x0, -0x30(%rbp)  
0x7f95d65c87e0  lea -0x160(%rbp), %rax  
0x7f95d65c87e7  mov %rax, -0x38(%rbp)   
0x7f95d65c87eb  mov 0x185d0d8, %rsi     
0x7f95d65c87f3  mov 0x20(%rsi), %rax    
0x7f95d65c87f7  mov $0x6, -0x194(%rbp)  
0x7f95d65c8801  mov %r13, %rdi          
0x7f95d65c8804  mov %rbx, %rdx          
0x7f95d65c8807  lea -0x58(%rbp), %rcx   
0x7f95d65c880b  callq *%rax             
0x7f95d65c880d  test %rax, %rax         
0x7f95d65c8810  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c8816  jmp 0x6ee                ; 0x7f95d65c885e
0x7f95d65c881b  sarq $0x1, %rax         
0x7f95d65c881e  sarq $0x1, %rsi         
0x7f95d65c8821  add %rax, %rsi          
0x7f95d65c8824  mov $0x3fffffffffffffff, %rax
0x7f95d65c882e  lea (%rsi,%rax), %rax   
0x7f95d65c8832  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c883c  cmp %rcx, %rax          
0x7f95d65c883f  ja 0x6df                 ; 0x7f95d65c884f
0x7f95d65c8845  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c884a  jmp 0x6ee                ; 0x7f95d65c885e
0x7f95d65c884f  mov %r13, %rdi          
0x7f95d65c8852  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c885c  callq *%rax             
0x7f95d65c885e  mov %rax, -0x168(%rbp)  
0x7f95d65c8865  mov -0x1c8(%rbp), %rax  
0x7f95d65c886c  mov %rax, -0x160(%rbp)  
0x7f95d65c8873  mov -0x1c0(%rbp), %rsi  
0x7f95d65c887a  mov %rsi, -0x158(%rbp)  
0x7f95d65c8881  mov %esi, %ecx          
0x7f95d65c8883  and %eax, %ecx          
0x7f95d65c8885  testb $0x1, %cl         
0x7f95d65c8888  jnz 0x77c                ; 0x7f95d65c88ec
0x7f95d65c888e  mov %rax, -0x50(%rbp)   
0x7f95d65c8892  movq $0x55e, -0x58(%rbp)
0x7f95d65c889a  movq $0x1a, -0x48(%rbp) 
0x7f95d65c88a2  mov $0x1, -0x40(%rbp)   
0x7f95d65c88a9  movq $0x0, -0x30(%rbp)  
0x7f95d65c88b1  lea -0x158(%rbp), %rax  
0x7f95d65c88b8  mov %rax, -0x38(%rbp)   
0x7f95d65c88bc  mov 0x185d110, %rsi     
0x7f95d65c88c4  mov 0x20(%rsi), %rax    
0x7f95d65c88c8  mov $0xd, -0x194(%rbp)  
0x7f95d65c88d2  mov %r13, %rdi          
0x7f95d65c88d5  mov %rbx, %rdx          
0x7f95d65c88d8  lea -0x58(%rbp), %rcx   
0x7f95d65c88dc  callq *%rax             
0x7f95d65c88de  test %rax, %rax         
0x7f95d65c88e1  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c88e7  jmp 0x7bf                ; 0x7f95d65c892f
0x7f95d65c88ec  sarq $0x1, %rax         
0x7f95d65c88ef  sarq $0x1, %rsi         
0x7f95d65c88f2  add %rax, %rsi          
0x7f95d65c88f5  mov $0x3fffffffffffffff, %rax
0x7f95d65c88ff  lea (%rsi,%rax), %rax   
0x7f95d65c8903  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c890d  cmp %rcx, %rax          
0x7f95d65c8910  ja 0x7b0                 ; 0x7f95d65c8920
0x7f95d65c8916  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c891b  jmp 0x7bf                ; 0x7f95d65c892f
0x7f95d65c8920  mov %r13, %rdi          
0x7f95d65c8923  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c892d  callq *%rax             
0x7f95d65c892f  mov %rax, -0x160(%rbp)  
0x7f95d65c8936  movq $0x3, -0x158(%rbp) 
0x7f95d65c8941  testb $0x1, %al         
0x7f95d65c8944  jnz 0x838                ; 0x7f95d65c89a8
0x7f95d65c894a  mov %rax, -0x50(%rbp)   
0x7f95d65c894e  movq $0x55e, -0x58(%rbp)
0x7f95d65c8956  movq $0x1a, -0x48(%rbp) 
0x7f95d65c895e  mov $0x1, -0x40(%rbp)   
0x7f95d65c8965  movq $0x0, -0x30(%rbp)  
0x7f95d65c896d  lea -0x158(%rbp), %rax  
0x7f95d65c8974  mov %rax, -0x38(%rbp)   
0x7f95d65c8978  mov 0x185d130, %rsi     
0x7f95d65c8980  mov 0x20(%rsi), %rax    
0x7f95d65c8984  mov $0x11, -0x194(%rbp) 
0x7f95d65c898e  mov %r13, %rdi          
0x7f95d65c8991  mov %rbx, %rdx          
0x7f95d65c8994  lea -0x58(%rbp), %rcx   
0x7f95d65c8998  callq *%rax             
0x7f95d65c899a  test %rax, %rax         
0x7f95d65c899d  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c89a3  jmp 0x878                ; 0x7f95d65c89e8
0x7f95d65c89a8  sarq $0x1, %rax         
0x7f95d65c89ab  lea 0x1(%rax), %rsi     
0x7f95d65c89af  mov $0x4000000000000000, %rcx
0x7f95d65c89b9  add %rcx, %rax          
0x7f95d65c89bc  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c89c6  cmp %rcx, %rax          
0x7f95d65c89c9  ja 0x869                 ; 0x7f95d65c89d9
0x7f95d65c89cf  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c89d4  jmp 0x878                ; 0x7f95d65c89e8
0x7f95d65c89d9  mov %r13, %rdi          
0x7f95d65c89dc  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c89e6  callq *%rax             
0x7f95d65c89e8  mov %rax, -0x160(%rbp)  
0x7f95d65c89ef  mov -0x168(%rbp), %rcx  
0x7f95d65c89f6  mov %ecx, %edx          
0x7f95d65c89f8  and %eax, %edx          
0x7f95d65c89fa  testb $0x1, %dl         
0x7f95d65c89fd  jz 0x8d7                 ; 0x7f95d65c8a47
0x7f95d65c8a03  mov %rcx, %rdx          
0x7f95d65c8a06  sarq $0x1, %rdx         
0x7f95d65c8a09  sarq $0x1, %rax         
0x7f95d65c8a0c  imul %rdx, %rax         
0x7f95d65c8a10  seto %dl                
0x7f95d65c8a13  mov $0x3fffffffffffffff, %rsi
0x7f95d65c8a1d  lea (%rax,%rsi), %rsi   
0x7f95d65c8a21  mov $0x7ffffffffffffffe, %rdi
0x7f95d65c8a2b  cmp %rdi, %rsi          
0x7f95d65c8a2e  ja 0x8d7                 ; 0x7f95d65c8a47
0x7f95d65c8a34  xorb $0x1, %dl          
0x7f95d65c8a37  jz 0x8d7                 ; 0x7f95d65c8a47
0x7f95d65c8a3d  lea 0x1(%rax,%rax), %rax
0x7f95d65c8a42  jmp 0x930                ; 0x7f95d65c8aa0
0x7f95d65c8a47  mov %rcx, -0x50(%rbp)   
0x7f95d65c8a4b  movq $0x3cc6, -0x58(%rbp)
0x7f95d65c8a53  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8a5b  mov $0x1, -0x40(%rbp)   
0x7f95d65c8a62  movq $0x0, -0x30(%rbp)  
0x7f95d65c8a6a  lea -0x160(%rbp), %rax  
0x7f95d65c8a71  mov %rax, -0x38(%rbp)   
0x7f95d65c8a75  mov 0x185d148, %rsi     
0x7f95d65c8a7d  mov 0x20(%rsi), %rax    
0x7f95d65c8a81  mov $0x14, -0x194(%rbp) 
0x7f95d65c8a8b  mov %r13, %rdi          
0x7f95d65c8a8e  mov %rbx, %rdx          
0x7f95d65c8a91  lea -0x58(%rbp), %rcx   
0x7f95d65c8a95  callq *%rax             
0x7f95d65c8a97  test %rax, %rax         
0x7f95d65c8a9a  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c8aa0  mov %rax, -0x168(%rbp)  
0x7f95d65c8aa7  movq $0x5, -0x160(%rbp) 
0x7f95d65c8ab2  testb $0x1, %al         
0x7f95d65c8ab5  jz 0x97f                 ; 0x7f95d65c8aef
0x7f95d65c8abb  mov %rax, %rcx          
0x7f95d65c8abe  mov $0x8000000000000000, %rdx
0x7f95d65c8ac8  and %rdx, %rcx          
0x7f95d65c8acb  orq $0x1, %rcx          
0x7f95d65c8acf  cmpq $0x1, %rcx         
0x7f95d65c8ad3  jnz 0x97f                ; 0x7f95d65c8aef
0x7f95d65c8ad9  mov %rax, %rcx          
0x7f95d65c8adc  sarq $0x1, %rcx         
0x7f95d65c8adf  shrq $0x3f, %rax        
0x7f95d65c8ae3  add %rcx, %rax          
0x7f95d65c8ae6  orq $0x1, %rax          
0x7f95d65c8aea  jmp 0x9d8                ; 0x7f95d65c8b48
0x7f95d65c8aef  mov %rax, -0x50(%rbp)   
0x7f95d65c8af3  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c8afb  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8b03  mov $0x1, -0x40(%rbp)   
0x7f95d65c8b0a  movq $0x0, -0x30(%rbp)  
0x7f95d65c8b12  lea -0x160(%rbp), %rax  
0x7f95d65c8b19  mov %rax, -0x38(%rbp)   
0x7f95d65c8b1d  mov 0x185d168, %rsi     
0x7f95d65c8b25  mov 0x20(%rsi), %rax    
0x7f95d65c8b29  mov $0x18, -0x194(%rbp) 
0x7f95d65c8b33  mov %r13, %rdi          
0x7f95d65c8b36  mov %rbx, %rdx          
0x7f95d65c8b39  lea -0x58(%rbp), %rcx   
0x7f95d65c8b3d  callq *%rax             
0x7f95d65c8b3f  test %rax, %rax         
0x7f95d65c8b42  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c8b48  mov %rax, -0x168(%rbp)  
0x7f95d65c8b4f  mov -0x1c8(%rbp), %rsi  
0x7f95d65c8b56  mov %rsi, -0x160(%rbp)  
0x7f95d65c8b5d  mov %esi, %ecx          
0x7f95d65c8b5f  and %eax, %ecx          
0x7f95d65c8b61  testb $0x1, %cl         
0x7f95d65c8b64  jnz 0xa58                ; 0x7f95d65c8bc8
0x7f95d65c8b6a  mov %rax, -0x50(%rbp)   
0x7f95d65c8b6e  movq $0x55e, -0x58(%rbp)
0x7f95d65c8b76  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8b7e  mov $0x1, -0x40(%rbp)   
0x7f95d65c8b85  movq $0x0, -0x30(%rbp)  
0x7f95d65c8b8d  lea -0x160(%rbp), %rax  
0x7f95d65c8b94  mov %rax, -0x38(%rbp)   
0x7f95d65c8b98  mov 0x185d190, %rsi     
0x7f95d65c8ba0  mov 0x20(%rsi), %rax    
0x7f95d65c8ba4  mov $0x1d, -0x194(%rbp) 
0x7f95d65c8bae  mov %r13, %rdi          
0x7f95d65c8bb1  mov %rbx, %rdx          
0x7f95d65c8bb4  lea -0x58(%rbp), %rcx   
0x7f95d65c8bb8  callq *%rax             
0x7f95d65c8bba  test %rax, %rax         
0x7f95d65c8bbd  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c8bc3  jmp 0xa9b                ; 0x7f95d65c8c0b
0x7f95d65c8bc8  sarq $0x1, %rax         
0x7f95d65c8bcb  sarq $0x1, %rsi         
0x7f95d65c8bce  add %rax, %rsi          
0x7f95d65c8bd1  mov $0x3fffffffffffffff, %rax
0x7f95d65c8bdb  lea (%rsi,%rax), %rax   
0x7f95d65c8bdf  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c8be9  cmp %rcx, %rax          
0x7f95d65c8bec  ja 0xa8c                 ; 0x7f95d65c8bfc
0x7f95d65c8bf2  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c8bf7  jmp 0xa9b                ; 0x7f95d65c8c0b
0x7f95d65c8bfc  mov %r13, %rdi          
0x7f95d65c8bff  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c8c09  callq *%rax             
0x7f95d65c8c0b  mov %rax, -0x168(%rbp)  
0x7f95d65c8c12  movq $0x3, -0x160(%rbp) 
0x7f95d65c8c1d  testb $0x1, %al         
0x7f95d65c8c20  jnz 0xb14                ; 0x7f95d65c8c84
0x7f95d65c8c26  mov %rax, -0x50(%rbp)   
0x7f95d65c8c2a  movq $0x55e, -0x58(%rbp)
0x7f95d65c8c32  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8c3a  mov $0x1, -0x40(%rbp)   
0x7f95d65c8c41  movq $0x0, -0x30(%rbp)  
0x7f95d65c8c49  lea -0x160(%rbp), %rax  
0x7f95d65c8c50  mov %rax, -0x38(%rbp)   
0x7f95d65c8c54  mov 0x185d1b0, %rsi     
0x7f95d65c8c5c  mov 0x20(%rsi), %rax    
0x7f95d65c8c60  mov $0x21, -0x194(%rbp) 
0x7f95d65c8c6a  mov %r13, %rdi          
0x7f95d65c8c6d  mov %rbx, %rdx          
0x7f95d65c8c70  lea -0x58(%rbp), %rcx   
0x7f95d65c8c74  callq *%rax             
0x7f95d65c8c76  test %rax, %rax         
0x7f95d65c8c79  jz 0xbe5                 ; 0x7f95d65c8d55
0x7f95d65c8c7f  jmp 0xb54                ; 0x7f95d65c8cc4
0x7f95d65c8c84  sarq $0x1, %rax         
0x7f95d65c8c87  lea 0x1(%rax), %rsi     
0x7f95d65c8c8b  mov $0x4000000000000000, %rcx
0x7f95d65c8c95  add %rcx, %rax          
0x7f95d65c8c98  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c8ca2  cmp %rcx, %rax          
0x7f95d65c8ca5  ja 0xb45                 ; 0x7f95d65c8cb5
0x7f95d65c8cab  lea 0x1(%rsi,%rsi), %rax
0x7f95d65c8cb0  jmp 0xb54                ; 0x7f95d65c8cc4
0x7f95d65c8cb5  mov %r13, %rdi          
0x7f95d65c8cb8  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c8cc2  callq *%rax             
0x7f95d65c8cc4  mov %rax, -0x168(%rbp)  
0x7f95d65c8ccb  testb $0x3, %al         
0x7f95d65c8cce  jnz 0xb7c                ; 0x7f95d65c8cec
0x7f95d65c8cd4  mov 0x8(%rax), %rcx     
0x7f95d65c8cd8  cmp $0x4d, 0x70(%rcx)   
0x7f95d65c8cdc  jnz 0xb7c                ; 0x7f95d65c8cec
0x7f95d65c8ce2  invalid                 
0x7f95d65c8ce3  sti                     
0x7f95d65c8ce4  adc %al, 0x18(%rax)     
0x7f95d65c8ce7  jmp 0xf92                ; 0x7f95d65c9102
0x7f95d65c8cec  testb $0x1, %al         
0x7f95d65c8cef  jnz 0xf8a                ; 0x7f95d65c90fa
0x7f95d65c8cf5  mov -0x170(%rbp), %rax  
0x7f95d65c8cfc  mov %rax, -0x50(%rbp)   
0x7f95d65c8d00  movq $0x3cd6, -0x58(%rbp)
0x7f95d65c8d08  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8d10  mov $0x1, -0x40(%rbp)   
0x7f95d65c8d17  movq $0x0, -0x30(%rbp)  
0x7f95d65c8d1f  lea -0x168(%rbp), %rax  
0x7f95d65c8d26  mov %rax, -0x38(%rbp)   
0x7f95d65c8d2a  mov 0x185d1c8, %rsi     
0x7f95d65c8d32  mov 0x20(%rsi), %rax    
0x7f95d65c8d36  mov $0x24, -0x194(%rbp) 
0x7f95d65c8d40  mov %r13, %rdi          
0x7f95d65c8d43  mov %rbx, %rdx          
0x7f95d65c8d46  lea -0x58(%rbp), %rcx   
0x7f95d65c8d4a  callq *%rax             
0x7f95d65c8d4c  test %rax, %rax         
0x7f95d65c8d4f  jnz 0xfc6                ; 0x7f95d65c9136
0x7f95d65c8d55  mov %r13, %rdi          
0x7f95d65c8d58  mov %rbx, %rsi          
0x7f95d65c8d5b  mov %rbx, %r12          
0x7f95d65c8d5e  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c8d68  callq *%rax             
0x7f95d65c8d6a  mov %al, %cl            
0x7f95d65c8d6c  mov $0x0, %eax          
0x7f95d65c8d71  testb $0x1, %cl         
0x7f95d65c8d74  jz 0xc19                 ; 0x7f95d65c8d89
0x7f95d65c8d7a  mov %r13, %rdi          
0x7f95d65c8d7d  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c8d87  callq *%rax             
0x7f95d65c8d89  test %rax, %rax         
0x7f95d65c8d8c  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c8d92  mov %rax, -0x98(%rbp)   
0x7f95d65c8d99  mov -0x110(%rbp), %rax  
0x7f95d65c8da0  mov %rax, -0x90(%rbp)   
0x7f95d65c8da7  mov -0xf0(%rbp), %rcx   
0x7f95d65c8dae  mov %rcx, -0x88(%rbp)   
0x7f95d65c8db5  mov %rax, -0x50(%rbp)   
0x7f95d65c8db9  movq $0x3916, -0x58(%rbp)
0x7f95d65c8dc1  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8dc9  mov $0x1, -0x40(%rbp)   
0x7f95d65c8dd0  movq $0x0, -0x30(%rbp)  
0x7f95d65c8dd8  lea -0x88(%rbp), %rax   
0x7f95d65c8ddf  mov %rax, -0x38(%rbp)   
0x7f95d65c8de3  mov 0x180a498, %rsi     
0x7f95d65c8deb  mov 0x20(%rsi), %rax    
0x7f95d65c8def  mov $0x44, -0xc4(%rbp)  
0x7f95d65c8df9  mov %r13, %rdi          
0x7f95d65c8dfc  mov %r14, %rdx          
0x7f95d65c8dff  lea -0x58(%rbp), %rcx   
0x7f95d65c8e03  callq *%rax             
0x7f95d65c8e05  test %rax, %rax         
0x7f95d65c8e08  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c8e0e  mov %rax, -0x90(%rbp)   
0x7f95d65c8e15  mov -0x98(%rbp), %rcx   
0x7f95d65c8e1c  testb $0x3, %cl         
0x7f95d65c8e1f  jnz 0xcfa                ; 0x7f95d65c8e6a
0x7f95d65c8e25  mov 0x8(%rcx), %rdx     
0x7f95d65c8e29  cmp $0x4d, 0x70(%rdx)   
0x7f95d65c8e2d  jnz 0xcfa                ; 0x7f95d65c8e6a
0x7f95d65c8e33  cmp $0xe0, 0x74(%rdx)   
0x7f95d65c8e3a  jnz 0x13a9               ; 0x7f95d65c9519
0x7f95d65c8e40  testb $0x3, %al         
0x7f95d65c8e43  jnz 0xcf1                ; 0x7f95d65c8e61
0x7f95d65c8e49  mov 0x8(%rax), %rdx     
0x7f95d65c8e4d  cmp $0x4d, 0x70(%rdx)   
0x7f95d65c8e51  jnz 0xcf1                ; 0x7f95d65c8e61
0x7f95d65c8e57  invalid                 
0x7f95d65c8e58  sti                     
0x7f95d65c8e59  adc %al, 0x18(%rax)     
0x7f95d65c8e5c  jmp 0xe09                ; 0x7f95d65c8f79
0x7f95d65c8e61  testb $0x1, %al         
0x7f95d65c8e64  jnz 0xe01                ; 0x7f95d65c8f71
0x7f95d65c8e6a  mov %rcx, -0x50(%rbp)   
0x7f95d65c8e6e  movq $0x3cc6, -0x58(%rbp)
0x7f95d65c8e76  movq $0x1a, -0x48(%rbp) 
0x7f95d65c8e7e  mov $0x1, -0x40(%rbp)   
0x7f95d65c8e85  movq $0x0, -0x30(%rbp)  
0x7f95d65c8e8d  lea -0x90(%rbp), %rax   
0x7f95d65c8e94  mov %rax, -0x38(%rbp)   
0x7f95d65c8e98  mov 0x180a4b0, %rsi     
0x7f95d65c8ea0  mov 0x20(%rsi), %rax    
0x7f95d65c8ea4  mov $0x47, -0xc4(%rbp)  
0x7f95d65c8eae  mov %r13, %rdi          
0x7f95d65c8eb1  mov %r14, %rdx          
0x7f95d65c8eb4  lea -0x58(%rbp), %rcx   
0x7f95d65c8eb8  callq *%rax             
0x7f95d65c8eba  test %rax, %rax         
0x7f95d65c8ebd  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c8ec3  mov %rax, -0x98(%rbp)   
0x7f95d65c8eca  mov -0xa0(%rbp), %rcx   
0x7f95d65c8ed1  mov %rax, %rdx          
0x7f95d65c8ed4  andq $0x1, %rdx         
0x7f95d65c8ed8  test %rdx, %rcx         
0x7f95d65c8edb  jnz 0xdb6                ; 0x7f95d65c8f26
0x7f95d65c8ee1  testb $0x3, %cl         
0x7f95d65c8ee4  jnz 0x39b                ; 0x7f95d65c850b
0x7f95d65c8eea  mov 0x8(%rcx), %rsi     
0x7f95d65c8eee  cmp $0x4d, 0x70(%rsi)   
0x7f95d65c8ef2  jnz 0x39b                ; 0x7f95d65c850b
0x7f95d65c8ef8  cmp $0xe0, 0x74(%rsi)   
0x7f95d65c8eff  jnz 0x13f1               ; 0x7f95d65c9561
0x7f95d65c8f05  testb $0x3, %al         
0x7f95d65c8f08  jnz 0xe37                ; 0x7f95d65c8fa7
0x7f95d65c8f0e  mov 0x8(%rax), %rsi     
0x7f95d65c8f12  cmp $0x4d, 0x70(%rsi)   
0x7f95d65c8f16  jnz 0xe37                ; 0x7f95d65c8fa7
0x7f95d65c8f1c  invalid                 
0x7f95d65c8f1d  sti                     
0x7f95d65c8f1e  adc %al, 0x18(%rax)     
0x7f95d65c8f21  jmp 0xe48                ; 0x7f95d65c8fb8
0x7f95d65c8f26  sarq $0x1, %rcx         
0x7f95d65c8f29  sarq $0x1, %rax         
0x7f95d65c8f2c  add %rcx, %rax          
0x7f95d65c8f2f  mov $0x3fffffffffffffff, %rcx
0x7f95d65c8f39  lea (%rax,%rcx), %rcx   
0x7f95d65c8f3d  mov $0x7ffffffffffffffe, %rdx
0x7f95d65c8f47  cmp %rdx, %rcx          
0x7f95d65c8f4a  ja 0xdea                 ; 0x7f95d65c8f5a
0x7f95d65c8f50  lea 0x1(%rax,%rax), %rax
0x7f95d65c8f55  jmp 0xe71                ; 0x7f95d65c8fe1
0x7f95d65c8f5a  mov %r13, %rdi          
0x7f95d65c8f5d  mov %rax, %rsi          
0x7f95d65c8f60  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c8f6a  callq *%rax             
0x7f95d65c8f6c  jmp 0xe71                ; 0x7f95d65c8fe1
0x7f95d65c8f71  sarq $0x1, %rax         
0x7f95d65c8f74  invalid                 
0x7f95d65c8f75  loope 0xe02              ; 0x7f95d65c9072
0x7f95d65c8f77  sub %al, %al            
0x7f95d65c8f79  invalid                 
0x7f95d65c8f7a  sti                     
0x7f95d65c8f7b  pop %rcx                
0x7f95d65c8f7c  sbb %al, %r13b          
0x7f95d65c8f7f  sti                     
0x7f95d65c8f80  adc %eax, -0x2a0(%rbp)  
0x7f95d65c8f86  mov %r13, %rdi          
0x7f95d65c8f89  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c8f93  callq *%rax             
0x7f95d65c8f95  invalid                 
0x7f95d65c8f96  sti                     
0x7f95d65c8f97  adc %al, -0x2a0(%rbp)   
0x7f95d65c8f9d  invalid                 
0x7f95d65c8f9e  sti                     
0x7f95d65c8f9f  adc %eax, 0x18(%rax)    
0x7f95d65c8fa2  jmp 0xd53                ; 0x7f95d65c8ec3
0x7f95d65c8fa7  test %rdx, %rdx         
0x7f95d65c8faa  jz 0x39b                 ; 0x7f95d65c850b
0x7f95d65c8fb0  sarq $0x1, %rax         
0x7f95d65c8fb3  invalid                 
0x7f95d65c8fb4  loope 0xe41              ; 0x7f95d65c90b1
0x7f95d65c8fb6  sub %al, %al            
0x7f95d65c8fb8  invalid                 
0x7f95d65c8fb9  sti                     
0x7f95d65c8fba  pop %rax                
0x7f95d65c8fbb  sbb %al, %r13b          
0x7f95d65c8fbe  sti                     
0x7f95d65c8fbf  adc %eax, -0x2a0(%rbp)  
0x7f95d65c8fc5  mov %r13, %rdi          
0x7f95d65c8fc8  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c8fd2  callq *%rax             
0x7f95d65c8fd4  invalid                 
0x7f95d65c8fd5  sti                     
0x7f95d65c8fd6  adc %al, -0x2a0(%rbp)   
0x7f95d65c8fdc  invalid                 
0x7f95d65c8fdd  sti                     
0x7f95d65c8fde  adc %eax, 0x18(%rax)    
0x7f95d65c8fe1  mov %rax, -0xf8(%rbp)   
0x7f95d65c8fe8  mov -0xf0(%rbp), %rax   
0x7f95d65c8fef  mov %rax, -0xa0(%rbp)   
0x7f95d65c8ff6  movq $0x3, -0x98(%rbp)  
0x7f95d65c9001  testb $0x1, %al         
0x7f95d65c9004  jnz 0xefb                ; 0x7f95d65c906b
0x7f95d65c900a  mov %rax, -0x50(%rbp)   
0x7f95d65c900e  movq $0x55e, -0x58(%rbp)
0x7f95d65c9016  movq $0x1a, -0x48(%rbp) 
0x7f95d65c901e  mov $0x1, -0x40(%rbp)   
0x7f95d65c9025  movq $0x0, -0x30(%rbp)  
0x7f95d65c902d  lea -0x98(%rbp), %rax   
0x7f95d65c9034  mov %rax, -0x38(%rbp)   
0x7f95d65c9038  mov 0x180a510, %rsi     
0x7f95d65c9040  mov 0x20(%rsi), %rax    
0x7f95d65c9044  mov $0x53, -0xc4(%rbp)  
0x7f95d65c904e  mov %r13, %rdi          
0x7f95d65c9051  mov %r14, %rdx          
0x7f95d65c9054  lea -0x58(%rbp), %rcx   
0x7f95d65c9058  callq *%rax             
0x7f95d65c905a  mov %rax, %rbx          
0x7f95d65c905d  test %rbx, %rbx         
0x7f95d65c9060  jnz 0xf3e                ; 0x7f95d65c90ae
0x7f95d65c9066  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c906b  sarq $0x1, %rax         
0x7f95d65c906e  lea 0x1(%rax), %rsi     
0x7f95d65c9072  mov $0x4000000000000000, %rcx
0x7f95d65c907c  add %rcx, %rax          
0x7f95d65c907f  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c9089  cmp %rcx, %rax          
0x7f95d65c908c  ja 0xf2c                 ; 0x7f95d65c909c
0x7f95d65c9092  lea 0x1(%rsi,%rsi), %rbx
0x7f95d65c9097  jmp 0xf3e                ; 0x7f95d65c90ae
0x7f95d65c909c  mov %r13, %rdi          
0x7f95d65c909f  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c90a9  callq *%rax             
0x7f95d65c90ab  mov %rax, %rbx          
0x7f95d65c90ae  mov %rbx, -0xa0(%rbp)   
0x7f95d65c90b5  mov %rbx, -0xf0(%rbp)   
0x7f95d65c90bc  mov 0x8(%r13), %rax     
0x7f95d65c90c0  mov 0x15824fe, %cl      
0x7f95d65c90c7  or 0x16(%rax), %cl      
0x7f95d65c90ca  jz 0x3f9                 ; 0x7f95d65c8569
0x7f95d65c90d0  mov $0x59, -0xc4(%rbp)  
0x7f95d65c90da  mov %r13, %rdi          
0x7f95d65c90dd  mov %r14, %rsi          
0x7f95d65c90e0  mov $0x763000, %rax      ; rbx_check_interrupts
0x7f95d65c90ea  callq *%rax             
0x7f95d65c90ec  test %rax, %rax         
0x7f95d65c90ef  jnz 0x38f                ; 0x7f95d65c84ff
0x7f95d65c90f5  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c90fa  sarq $0x1, %rax         
0x7f95d65c90fd  invalid                 
0x7f95d65c90fe  loope 0xf8b              ; 0x7f95d65c91fb
0x7f95d65c9100  sub %al, %al            
0x7f95d65c9102  mov -0x170(%rbp), %rax  
0x7f95d65c9109  invalid                 
0x7f95d65c910a  sti                     
0x7f95d65c910b  adc %cl, 0x18(%rax)     
0x7f95d65c910e  invalid                 
0x7f95d65c910f  rep pop %rsi            
0x7f95d65c9111  rolb $0xfb, %ch         
0x7f95d65c9114  adc %eax, -0x2a0(%rbp)  
0x7f95d65c911a  mov %r13, %rdi          
0x7f95d65c911d  mov $0x764290, %rax      ; rbx_float_allocate
0x7f95d65c9127  callq *%rax             
0x7f95d65c9129  invalid                 
0x7f95d65c912a  sti                     
0x7f95d65c912b  adc %al, -0x2a0(%rbp)   
0x7f95d65c9131  invalid                 
0x7f95d65c9132  sti                     
0x7f95d65c9133  adc %eax, 0x18(%rax)    
0x7f95d65c9136  mov %rbx, %r12          
0x7f95d65c9139  mov %rax, -0x170(%rbp)  
0x7f95d65c9140  jmp 0xc19                ; 0x7f95d65c8d89
0x7f95d65c9145  mov -0x108(%rbp), %rdx  
0x7f95d65c914c  mov %rdx, -0xa0(%rbp)   
0x7f95d65c9153  mov -0xf8(%rbp), %r8    
0x7f95d65c915a  mov %r8, -0x98(%rbp)    
0x7f95d65c9161  testb $0x3, %dl         
0x7f95d65c9164  jnz 0x1434               ; 0x7f95d65c95a4
0x7f95d65c916a  mov 0x8(%rdx), %rax     
0x7f95d65c916e  cmp $0x6, 0x70(%rax)    
0x7f95d65c9172  jnz 0x1434               ; 0x7f95d65c95a4
0x7f95d65c9178  cmp $0xf9, 0x74(%rax)   
0x7f95d65c917f  jnz 0x1459               ; 0x7f95d65c95c9
0x7f95d65c9185  mov %r14, -0x260(%rbp)  
0x7f95d65c918c  mov $0x7f95bc019930, %rax
0x7f95d65c9196  mov %rax, -0x250(%rbp)  
0x7f95d65c919d  mov (%rax), %rax        
0x7f95d65c91a0  mov %rax, -0x248(%rbp)  
0x7f95d65c91a7  mov 0xa0(%rax), %rax    
0x7f95d65c91ae  mov %rax, -0x258(%rbp)  
0x7f95d65c91b5  mov $0xc, -0x240(%rbp)  
0x7f95d65c91bf  mov $0x0, -0x23c(%rbp)  
0x7f95d65c91c9  lea -0x298(%rbp), %rax  
0x7f95d65c91d0  mov %rax, -0x228(%rbp)  
0x7f95d65c91d7  movq $0x1a, -0x210(%rbp)
0x7f95d65c91e2  movq $0x1a, -0x208(%rbp)
0x7f95d65c91ed  movq $0x1a, -0x200(%rbp)
0x7f95d65c91f8  mov $0x7f95bc019940, %rax
0x7f95d65c9202  mov (%rax), %rax        
0x7f95d65c9205  movq $0x0, -0x298(%rbp) 
0x7f95d65c9210  mov %rdx, -0x288(%rbp)  
0x7f95d65c9217  mov %rax, -0x278(%rbp)  
0x7f95d65c921e  movq $0x1a, -0x280(%rbp)
0x7f95d65c9229  movq $0x0, -0x290(%rbp) 
0x7f95d65c9234  movq $0x1a, -0x270(%rbp)
0x7f95d65c923f  mov %r8, -0x268(%rbp)   
0x7f95d65c9246  mov %rdx, -0x218(%rbp)  
0x7f95d65c924d  mov 0x18(%rdx), %rcx    
0x7f95d65c9251  mov %rcx, -0x210(%rbp)  
0x7f95d65c9258  mov %r8, -0x208(%rbp)   
0x7f95d65c925f  mov %r13, %rdi          
0x7f95d65c9262  lea -0x260(%rbp), %rsi  
0x7f95d65c9269  mov $0x5d6610, %rax      ; jit_stub_array_aset
0x7f95d65c9273  callq *%rax             
0x7f95d65c9275  test %rax, %rax         
0x7f95d65c9278  jz 0x117c                ; 0x7f95d65c92ec
0x7f95d65c927e  cmpq $0x22, %rax        
0x7f95d65c9282  jnz 0x11b6               ; 0x7f95d65c9326
0x7f95d65c9288  mov -0x218(%rbp), %rax  
0x7f95d65c928f  mov %rax, -0x50(%rbp)   
0x7f95d65c9293  movq $0x78a6, -0x58(%rbp)
0x7f95d65c929b  movq $0x1a, -0x48(%rbp) 
0x7f95d65c92a3  mov $0x2, -0x40(%rbp)   
0x7f95d65c92aa  movq $0x0, -0x30(%rbp)  
0x7f95d65c92b2  lea -0x210(%rbp), %rax  
0x7f95d65c92b9  mov %rax, -0x38(%rbp)   
0x7f95d65c92bd  mov 0x176e5e8, %rsi     
0x7f95d65c92c5  mov 0x20(%rsi), %rax    
0x7f95d65c92c9  mov $0x6, -0x23c(%rbp)  
0x7f95d65c92d3  mov %r13, %rdi          
0x7f95d65c92d6  lea -0x260(%rbp), %rdx  
0x7f95d65c92dd  lea -0x58(%rbp), %rcx   
0x7f95d65c92e1  callq *%rax             
0x7f95d65c92e3  test %rax, %rax         
0x7f95d65c92e6  jnz 0x11b6               ; 0x7f95d65c9326
0x7f95d65c92ec  mov %r13, %rdi          
0x7f95d65c92ef  lea -0x260(%rbp), %rsi  
0x7f95d65c92f6  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c9300  callq *%rax             
0x7f95d65c9302  mov %al, %cl            
0x7f95d65c9304  mov $0x0, %eax          
0x7f95d65c9309  testb $0x1, %cl         
0x7f95d65c930c  jz 0x11c4                ; 0x7f95d65c9334
0x7f95d65c9312  mov %r13, %rdi          
0x7f95d65c9315  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c931f  callq *%rax             
0x7f95d65c9321  jmp 0x11c4               ; 0x7f95d65c9334
0x7f95d65c9326  mov -0x288(%rbp), %rax  
0x7f95d65c932d  mov %rax, -0x218(%rbp)  
0x7f95d65c9334  test %rax, %rax         
0x7f95d65c9337  jz 0x12da                ; 0x7f95d65c944a
0x7f95d65c933d  mov -0x100(%rbp), %rax  
0x7f95d65c9344  mov %rax, -0xa0(%rbp)   
0x7f95d65c934b  movq $0x3, -0x98(%rbp)  
0x7f95d65c9356  testb $0x1, %al         
0x7f95d65c9359  jnz 0x1250               ; 0x7f95d65c93c0
0x7f95d65c935f  mov %rax, -0x50(%rbp)   
0x7f95d65c9363  movq $0x55e, -0x58(%rbp)
0x7f95d65c936b  movq $0x1a, -0x48(%rbp) 
0x7f95d65c9373  mov $0x1, -0x40(%rbp)   
0x7f95d65c937a  movq $0x0, -0x30(%rbp)  
0x7f95d65c9382  lea -0x98(%rbp), %rax   
0x7f95d65c9389  mov %rax, -0x38(%rbp)   
0x7f95d65c938d  mov 0x180a5c0, %rsi     
0x7f95d65c9395  mov 0x20(%rsi), %rax    
0x7f95d65c9399  mov $0x69, -0xc4(%rbp)  
0x7f95d65c93a3  mov %r13, %rdi          
0x7f95d65c93a6  mov %r14, %rdx          
0x7f95d65c93a9  lea -0x58(%rbp), %rcx   
0x7f95d65c93ad  callq *%rax             
0x7f95d65c93af  mov %rax, %r15          
0x7f95d65c93b2  test %r15, %r15         
0x7f95d65c93b5  jnz 0x1293               ; 0x7f95d65c9403
0x7f95d65c93bb  jmp 0x12da               ; 0x7f95d65c944a
0x7f95d65c93c0  sarq $0x1, %rax         
0x7f95d65c93c3  lea 0x1(%rax), %rsi     
0x7f95d65c93c7  mov $0x4000000000000000, %rcx
0x7f95d65c93d1  add %rcx, %rax          
0x7f95d65c93d4  mov $0x7ffffffffffffffe, %rcx
0x7f95d65c93de  cmp %rcx, %rax          
0x7f95d65c93e1  ja 0x1281                ; 0x7f95d65c93f1
0x7f95d65c93e7  lea 0x1(%rsi,%rsi), %r15
0x7f95d65c93ec  jmp 0x1293               ; 0x7f95d65c9403
0x7f95d65c93f1  mov %r13, %rdi          
0x7f95d65c93f4  mov $0x7644e0, %rax      ; rbx_create_bignum
0x7f95d65c93fe  callq *%rax             
0x7f95d65c9400  mov %rax, %r15          
0x7f95d65c9403  mov %r15, -0xa0(%rbp)   
0x7f95d65c940a  mov %r15, -0x100(%rbp)  
0x7f95d65c9411  mov 0x8(%r13), %rax     
0x7f95d65c9415  mov 0x15824fe, %cl      
0x7f95d65c941c  or 0x16(%rax), %cl      
0x7f95d65c941f  jz 0x21d                 ; 0x7f95d65c838d
0x7f95d65c9425  mov $0x6f, -0xc4(%rbp)  
0x7f95d65c942f  mov %r13, %rdi          
0x7f95d65c9432  mov %r14, %rsi          
0x7f95d65c9435  mov $0x763000, %rax      ; rbx_check_interrupts
0x7f95d65c943f  callq *%rax             
0x7f95d65c9441  test %rax, %rax         
0x7f95d65c9444  jnz 0x216                ; 0x7f95d65c8386
0x7f95d65c944a  mov $0x7630d0, %rax      ; rbx_return_to_here
0x7f95d65c9454  lea -0xe8(%rbp), %rsi   
0x7f95d65c945b  mov %r13, %rdi          
0x7f95d65c945e  callq *%rax             
0x7f95d65c9460  mov %al, %cl            
0x7f95d65c9462  xor %eax, %eax          
0x7f95d65c9464  testb $0x1, %cl         
0x7f95d65c9467  jz 0x1384                ; 0x7f95d65c94f4
0x7f95d65c946d  mov $0x763130, %rax      ; rbx_clear_raise_value
0x7f95d65c9477  mov %r13, %rdi          
0x7f95d65c947a  callq *%rax             
0x7f95d65c947c  jmp 0x1384               ; 0x7f95d65c94f4
0x7f95d65c9481  mov $0x3d, -0xc4(%rbp)  
0x7f95d65c948b  mov $0x7f95bc004d30, %rax
0x7f95d65c9495  mov %rax, (%rsp)        
0x7f95d65c9499  mov $0x0, 0x10(%rsp)    
0x7f95d65c94a1  jmp 0x1356               ; 0x7f95d65c94c6
0x7f95d65c94a6  mov $0x3d, -0xc4(%rbp)  
0x7f95d65c94b0  mov $0x7f95bc004d30, %rax
0x7f95d65c94ba  mov %rax, (%rsp)        
0x7f95d65c94be  mov $0x1, 0x10(%rsp)    
0x7f95d65c94c6  mov $0x0, 0x8(%rsp)     
0x7f95d65c94ce  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c94d8  lea -0xe8(%rbp), %rsi   
0x7f95d65c94df  mov $0x3d, %edx         
0x7f95d65c94e4  mov $0x3, %ecx          
0x7f95d65c94e9  xor %r9d, %r9d          
0x7f95d65c94ec  mov %r13, %rdi          
0x7f95d65c94ef  mov %rsi, %r8           
0x7f95d65c94f2  callq *%rax             
0x7f95d65c94f4  addq $0x298, %rsp       
0x7f95d65c94fb  pop %rbx                
0x7f95d65c94fc  pop %r12                
0x7f95d65c94fe  pop %1.274224153
r13                
0x7f95d65c9500  pop %r14                
0x7f95d65c9502  pop %r15                
0x7f95d65c9504  pop %rbp                
0x7f95d65c9505  ret                     
0x7f95d65c9506  mov -0x108(%rbp), %rax  
0x7f95d65c950d  mov %rax, -0xa0(%rbp)   
0x7f95d65c9514  jmp 0x1384               ; 0x7f95d65c94f4
0x7f95d65c9519  mov $0x47, -0xc4(%rbp)  
0x7f95d65c9523  mov $0x7f95bc004d30, %rax
0x7f95d65c952d  mov %rax, (%rsp)        
0x7f95d65c9531  mov $0x1, 0x10(%rsp)    
0x7f95d65c9539  mov $0x0, 0x8(%rsp)     
0x7f95d65c9541  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c954b  lea -0xe8(%rbp), %rsi   
0x7f95d65c9552  mov $0x47, %edx         
0x7f95d65c9557  mov $0x2, %ecx          
0x7f95d65c955c  jmp 0x1379               ; 0x7f95d65c94e9
0x7f95d65c9561  mov $0x4a, -0xc4(%rbp)  
0x7f95d65c956b  mov $0x7f95bc004d30, %rax
0x7f95d65c9575  mov %rax, (%rsp)        
0x7f95d65c9579  mov $0x1, 0x10(%rsp)    
0x7f95d65c9581  mov $0x0, 0x8(%rsp)     
0x7f95d65c9589  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c9593  lea -0xe8(%rbp), %rsi   
0x7f95d65c959a  mov $0x4a, %edx         
0x7f95d65c959f  jmp 0x1497               ; 0x7f95d65c9607
0x7f95d65c95a4  mov $0x62, -0xc4(%rbp)  
0x7f95d65c95ae  mov $0x7f95bc004d30, %rax
0x7f95d65c95b8  mov %rax, (%rsp)        
0x7f95d65c95bc  mov $0x0, 0x10(%rsp)    
0x7f95d65c95c4  jmp 0x1479               ; 0x7f95d65c95e9
0x7f95d65c95c9  mov $0x62, -0xc4(%rbp)  
0x7f95d65c95d3  mov $0x7f95bc004d30, %rax
0x7f95d65c95dd  mov %rax, (%rsp)        
0x7f95d65c95e1  mov $0x1, 0x10(%rsp)    
0x7f95d65c95e9  mov $0x0, 0x8(%rsp)     
0x7f95d65c95f1  mov $0x763d20, %rax      ; rbx_continue_uncommon
0x7f95d65c95fb  lea -0xe8(%rbp), %rsi   
0x7f95d65c9602  mov $0x62, %edx         
0x7f95d65c9607  mov $0x1, %ecx          
0x7f95d65c960c  jmp 0x1379               ; 0x7f95d65c94e9
